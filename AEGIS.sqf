deleteVehicle this;
MAZ_EZM_LiteVersion = "9.2.0";
MAZ_EZM_autoAdd = profileNamespace getVariable ['MAZ_EZM_autoAddVar',true];
MAZ_EZM_spawnWithCrew = true;
MAZ_EZM_nvgsOnlyAtNight = false;	
MAZ_EZM_stanceForAI = "UP";
uiNamespace setVariable ["MAZ_EZM_activeWarnings",[]];
uiNamespace setVariable ['MAZ_EZM_missingRespawnWarn',nil];
MAZ_EZM_nvgsOnlyAtNight = true;	

comment "If being ran from mission file, set _serverEZM to true:";
private _serverEZM = false;
missionNamespace setVariable ['M9SD_serverEZM', _serverEZM];
uiNamespace setVariable ['M9SD_serverEZM', _serverEZM];
if (M9SD_serverEZM) then {MAZ_EZM_autoAdd = false;};

comment "Common Variables - AEGIS color is #e5c771";
EZM_trimColor = [(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])];
uiNamespace setVariable ['EZM_trimColor', EZM_trimColor];

comment "LM Auto Kick Functions";

if ((((getAssignedCuratorLogic player) == ((allCurators select { str _x == "bis_curator" }) # 0)) || (!((call BIS_fnc_admin) == 0)))) then { 
	if (!(missionNamespace getVariable ["LM_var_playerConnectedEH", false])) then {
		[missionNamespace, ["LM_var_playerConnectedEH", true]] remoteExec ["setVariable", 0, true];
		[[],{
			addMissionEventHandler ["PlayerConnected", {
				params ["_id", "_uid", "_name", "_jip", "_owner", "_idstr"];
				{
					_curator = getAssignedCuratorUnit _x;
					[[_id, _uid, _name, _jip, _owner, _idstr],{
						params ["_id", "_uid", "_name", "_jip", "_owner", "_idstr"];
						if (!((call BIS_fnc_admin) == 0)) then {
							_kickedLog = profileNamespace getVariable ["LM_var_kickedPlayers", []];
							_loggedPlayerIndex = _kickedLog findIf {_uid == (_x select 0)};
							if (!(_loggedPlayerIndex == -1)) then {
								_loggedPlayerInfo = _kickedLog select _loggedPlayerIndex;
								if (profileNamespace getVariable ["LM_var_autoKickPlayers", false]) then {
									if (_loggedPlayerInfo select 5) then {
										systemChat format ['[ LOG ] Please beware prior logged kicked player %1 has joined, open the Zeus Interface to Auto-Kick them...', _name]; 
										playSound '3DEN_notificationWarning';
										[_uid] spawn {
											waitUntil {!isNull (findDisplay 312)};
											_kickDEH = (findDisplay 312) displayAddEventHandler ["KeyDown", format["%2%3%4 '#kick %1'; (findDisplay 312) displayRemoveEventhandler ['KeyDown',(player getVariable 'LM_DEH_autokickHandler%1')];", _this select 0, "ser", "verCom", "mand"]];
											player setVariable [format["LM_DEH_autokickHandler%1", _this select 0], _kickDEH];
										};
									} else {
										systemChat format ["[ LOG ] Please beware prior logged kicked player '%1' has joined the game, however Auto-Kick is disabled for them so they will stay...", _name];
										playSound '3DEN_notificationWarning';
									};
								} else {
									systemChat format ["[ LOG ] Please beware prior logged kicked player '%1' has joined the game, however due to Auto-Kick being disabled globally in Player Control, so they will stay...", _name];
									playSound '3DEN_notificationWarning';
								};
								_loggedPlayerInfo set [1, _name];
								_kickedLog set [_loggedPlayerIndex, _loggedPlayerInfo];
								[_uid, _kickedLog] spawn {
									profileNamespace setVariable ['LM_var_kickedPlayers', _this select 1];
									waitUntil {!isNull (findDisplay 312)};
									_varDEH = (findDisplay 312) displayAddEventHandler ["KeyDown", format["%2%3%4; (findDisplay 312) displayRemoveEventhandler ['KeyDown',(player getVariable 'LM_DEH_saveVar%1')];", _this select 0, "sav", "eProfil", "eNamespace"]];
									player setVariable [format["LM_DEH_saveVar%1", _this select 0], _varDEH];
								};
							};
						};
					}] remoteExec ["bis_fnc_call", _curator];
				} forEach allCurators;
			}];
		}] remoteExec ["bis_fnc_call", 2];
	};
};

comment "Common Functions";

JAM_fnc_forceOpenZeus = {
	comment "ensure scheduled environment:";
	[] spawn {
		comment "do not run if already open";
		if !(isNull findDisplay 312) exitWith {};
		comment "run open command until opened";
		while {isNull findDisplay 312} do {
			openCuratorInterface;
			sleep 0.1;
		};
		comment "interface opened.";
	};
};

JAM_fnc_forceCloseZeus = {
	comment "ensure scheduled environment:";
	[] spawn {
		comment "do not run if already closed";
		if (isNull findDisplay 312) exitWith {};
		comment "run close command until closed";
		while {!isNull findDisplay 312} do {
			(findDisplay 312) closeDisplay 0;
			sleep 0.1;
		};
		comment "interface closed.";
	};
};

JAM_fnc_systemChat = {
	params [['_message', ''], ['_show', true]];
	systemChat _message;
	showChat _show;
};

LM_fnc_objectsGrabber = {
	private _fnc_scriptNameParent = if (isNil '_fnc_scriptName') then {'BIS_fnc_ObjectsGrabber'} else {_fnc_scriptName};
	private _fnc_scriptName = 'BIS_fnc_ObjectsGrabber';
	scriptName _fnc_scriptName;

	#line 1 "A3\functions_f\spawning\fn_ObjectsGrabber.sqf [BIS_fnc_ObjectsGrabber]"
	#line 0 "/temp/bin/A3/Functions_F/Spawning/fn_objectsGrabber.sqf"

	private ["_anchorPos", "_anchorDim", "_grabOrientation", "_grabMen", "_grabTerrain", "_terrainObjs"];
	_anchorPos = _this param [0, [0, 0], [[]]];
	_anchorDim = _this param [1, 50, [-1]];
	_grabOrientation = _this param [2, false, [false]];
	_grabMen = _this param [3, true, [true]];
	_grabTerrain = _this param [4, true, [true]];

	private ["_objs"];
	_curatorObjs = [];
	{
		{
			if (!(_x in _curatorObjs)) then {
				_curatorObjs append [_x];
			};
		} forEach curatorEditableObjects _x;
	} forEach allCurators;
	
	_objs = [];
	{
		if ((((_grabTerrain) and (_x in _curatorObjs)) || !(_grabTerrain)) and !((typeOf _x) == "ModuleEmpty_F")) then {
			_objs append [_x];
		};
	} forEach (nearestObjects [_anchorPos, [], _anchorDim]);
	
	if (!(_grabTerrain)) then {
		_terrainObjs = nearestTerrainObjects [_anchorPos, [], _anchorDim];
		{
			_type = typeOf _x;
			if (_type == '') then {
				_type = ((getModelInfo _x) select 1);
			};
			if (!(_type == "") and !(_type == "ModuleEmpty_F") and !(_x in _objs)) then {
				_objs append [_x];
			};
		} forEach _terrainObjs;
	};


	private ["_br", "_tab", "_outputText"];
	_br = toString [13, 10];
	_tab = toString [9];
	
	_objectsArray = [];


	{
		private ["_type", "_ASL", "_objPos", "_dX", "_dY", "_z", "_azimuth", "_fuel", "_damage", "_orientation", "_varName", "_init", "_simulation", "_replaceBy", "_outputArray"];
		_type = typeOf _x;
		if (!(_grabTerrain)) then {
			if (_type == '') then {
				_type = ((getModelInfo _x) select 1);
			};
		};
		if (!(!(_grabMen) and (_type isKindOf "Man")) and !(_type == '') and ([attachedTo _x] in [[objNull]])) then {
			_ASL = surfaceIsWater position _x;
			
			if (!_ASL) then {_objPos = getPosATL _x;} else {_objPos = getPosASL _x;}; 
			_dX = (_objPos select 0) - (_anchorPos select 0);
			_dY = (_objPos select 1) - (_anchorPos select 1);
			_z = _objPos select 2;
			_azimuth = direction _x;
			_fuel = fuel _x;
			_damage = isDamageAllowed _x;
			if (_grabOrientation) then {_orientation = _x call BIS_fnc_getPitchBank;} else {_orientation = [];};
			_varName = vehicleVarName _x;
			_init = _x getVariable ["init", ""];
			_side = str(side _x);
			
			
			_simulation = simulationEnabled _x;
			
			_replaceBy = _x getVariable ["replaceBy", ""];
			if (_replaceBy != "") then {_type = _replaceBy;};

			_outputArray = [_type, [_dX, _dY, _z], _azimuth, _fuel, _damage, _orientation, _varName, _init, _simulation, _ASL, _side];
			_objectsArray append [_outputArray];

			debugLog (format ["Log: objectGrabber: %1", _outputArray]);
		};
	} forEach _objs;
	
	_objectsArray append [_anchorPos];

	_objectsArray
};

LM_fnc_objectsMapper = {
	private ["_pos", "_azi", "_objs", "_rdm"];
	_pos = _this param [0, [0, 0], [[]]];
	_azi = _this param [1, 0, [-1]];
	_objs = _this select 2;
	_alignmentPosition = _this param [4, false, [false]];
	_alignmentSurface = _this param [5, true, [true]];
	_menControl = _this param [6, true, [true]];
	_crewControl = _this param [7, false, [false]];
	_damageControl = _this param [8, true, [true]];
	_simulationControl = _this param [9, true, [true]];
	_editableControl = _this param [10, true, [true]];
	_sideChoice = _this param [11, sideEmpty, [sideEmpty]];
	
	if (_alignmentPosition) then {
		_pos = _objs select ((count _objs)-1);
	};
	_objs deleteAt ((count _objs)-1);


	if ((count _this) > 3) then 
	{
		_rdm = _this select 3;
	} 
	else 
	{
		_rdm = 0;
	};
	
	_newObjs = [];

	private ["_posX", "_posY"];
	_posX = _pos select 0;
	_posY = _pos select 1;


	private ["_multiplyMatrixFunc"];
	_multiplyMatrixFunc =
	{
		private ["_array1", "_array2", "_result"];
		_array1 = _this select 0;
		_array2 = _this select 1;

		_result =
		[
			(((_array1 select 0) select 0) * (_array2 select 0)) + (((_array1 select 0) select 1) * (_array2 select 1)),
			(((_array1 select 1) select 0) * (_array2 select 0)) + (((_array1 select 1) select 1) * (_array2 select 1))
		];

		_result
	};

	{
		
		if ((random 1) > _rdm) then 
		{
			private ["_type", "_relPos", "_azimuth", "_fuel", "_damage", "_orientation", "_varName", "_init", "_simulation", "_ASL", "_newObj","_objP3D"];
			_type = _x select 0;
			_relPos = _x select 1;
			_azimuth = _x select 2;
			
			if (!(!(_menControl) and (_type isKindOf "Man"))) then {
				if ((count _x) > 3) then {_fuel = _x select 3};
				if ((count _x) > 4) then {if (_damageControl) then {_damage = _x select 4} else {_damage = true}};
				if ((count _x) > 5) then {_orientation = _x select 5};
				if ((count _x) > 6) then {_varName = _x select 6};
				if ((count _x) > 7) then {_init = _x select 7};
				if ((count _x) > 8) then {if (_simulationControl) then {_simulation = _x select 8} else {_simulation = false}};
				if ((count _x) > 9) then {_ASL = _x select 9};
				if ((count _x) > 10) then {
					_side = switch (_x select 10) do {
						case "WEST": {west};
						case "EAST": {east};
						case "GUER": {independent};
						case "CIV": {civilian};
						default {side player};
					};
				} else {(if (!(_sideChoice isEqualTo sideEmpty)) then {_side = _sideChoice} else {_side = side player})};
				if (isNil "_ASL") then {_ASL = false;};
			
				private ["_rotMatrix", "_newRelPos", "_newPos"];
				if (!(_azi == -1)) then {
					_rotMatrix =
					[
						[cos _azi, sin _azi],
						[-(sin _azi), cos _azi]
					];
					_newRelPos = [_rotMatrix, _relPos] call _multiplyMatrixFunc;
				} else {
					_newRelPos = _relPos;
				};
			
				
				private ["_z"];
				if ((count _relPos) > 2) then {_z = _relPos select 2} else {_z = 0};
			
				_newPos = [_posX + (_newRelPos select 0), _posY + (_newRelPos select 1), _z];
			
				if (['.p3d',_type] call BIS_fnc_inString) then {
					_objP3D = createSimpleObject [_type, (AGLToASL (_newPos))];
					_newObj = (([[_objP3D, "BOTTOM"], "Land_HelipadEmpty_F", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
					[_objP3D,_newObj] call BIS_fnc_attachToRelative;
				} else {
					if (_type isKindOf "Man") then {
						_newObj = ([[0,0,0], 0, _type, (if (_sideChoice isEqualTo sideEmpty) then {_side} else {_sideChoice})] call BIS_fnc_spawnVehicle) select 0;
					} else {
						_newObj = (([(AGLToASL (_newPos)), _type, 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
					};
				};
				if (_crewControl) then {
					deleteVehicleCrew _newObj;
				} else {
					createVehicleCrew _newObj;
					_grp = createGroup _sideChoice;
					(crew _newObj) join _grp;
					_grp deleteGroupWhenEmpty true;
					if (_editableControl) then {
						{
							_x call MAZ_EZM_fnc_addObjectToInterface;
						} forEach (crew _newObj);
					};
				};
				[_newObj,[(_azi + _azimuth),(((_newObj) call BIS_fnc_getPitchBank) select 0),(((_newObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
				if (!_ASL) then {_newObj setPosASL (AGLToASL _newPos);} else {_newObj setPosASL _newPos; [_newObj,["BIS_DynO_ASL", true]] remoteExec ["setVariable", 0, true];};
				
				
				if (!isNil "_fuel") then {[_newObj,_fuel] remoteExec ["setFuel", 0, true];};
				if (!isNil "_damage") then {[_newObj,["BIS_DynO_damage", _simulation]] remoteExec ["setVariable", 0, true];};
				if (!isNil "_orientation") then 
				{
					if ((count _orientation) > 0) then 
					{
						([_newObj] + _orientation) call BIS_fnc_setPitchBank;
					};
				};
				if (!isNil "_varName") then 
				{
					if (_varName != "") then 
					{
						_newObj setVehicleVarName _varName;
						call (compile (_varName + " = _newObj;"));
					};
				};
				if (!isNil "_init") then {_newObj call (compile ("this = _this; " + _init));};
				if (!isNil "_simulation") then {[_newObj,["BIS_DynO_simulation", _simulation]] remoteExec ["setVariable", 0, true];};
				if (!(_alignmentSurface)) then {_newObj setVectorUp surfaceNormal position _newObj;};
				[_newObj,false] remoteExec ["allowDamage", 0, true];
				[_newObj,false] remoteExec ["enableSimulationGlobal", 0, true];
				if (_editableControl) then {_newObj call MAZ_EZM_fnc_addObjectToInterface;} else {
					if (['.p3d',_type] call BIS_fnc_inString) then {
						if (typeOf _newObj == "Land_HelipadEmpty_F") then {
							deleteVehicle _newObj;
						};
					};
				};
				
				_newObjs = _newObjs + [_newObj];
			};
		};
	} forEach _objs;
	
	{
		[_x,(_x getVariable "BIS_DynO_simulation")] remoteExec ["enableSimulationGlobal", 0, true];
		[_x,(_x getVariable "BIS_DynO_damage")] remoteExec ["allowDamage", 0, true];
	} forEach _newObjs;

	_newObjs
};

comment "Dialog Creation";

	MAZ_EZM_fnc_convertToGUI_GRIDFormat = {
		params ["_mode","_value"];

		comment "Defines";
			private _GUI_GRID_WAbs = ((safeZoneW / safeZoneH) min 1.2);
			private _GUI_GRID_HAbs = (_GUI_GRID_WAbs / 1.2);
			private _GUI_GRID_W = (_GUI_GRID_WAbs / 40);
			private _GUI_GRID_H = (_GUI_GRID_HAbs / 25);
			private _GUI_GRID_X = (safeZoneX);
			private _GUI_GRID_Y = (safeZoneY + safeZoneH - _GUI_GRID_HAbs);

			private _GUI_GRID_CENTER_WAbs = _GUI_GRID_WAbs;
			private _GUI_GRID_CENTER_HAbs = _GUI_GRID_HAbs;
			private _GUI_GRID_CENTER_W = _GUI_GRID_W;
			private _GUI_GRID_CENTER_H = _GUI_GRID_H;
			private _GUI_GRID_CENTER_X = (safeZoneX + (safeZoneW - _GUI_GRID_CENTER_WAbs)/2);
			private _GUI_GRID_CENTER_Y = (safeZoneY + (safeZoneH - _GUI_GRID_CENTER_HAbs)/2);

		comment "Mode Selection";
		private _return = switch (toUpper _mode) do {
			case "X": {((_value) * _GUI_GRID_W + _GUI_GRID_CENTER_X)};
			case "Y": {((_value) * _GUI_GRID_H + _GUI_GRID_CENTER_Y)};
			case "W": {((_value) * _GUI_GRID_W)};
			case "H": {((_value) * _GUI_GRID_H)};
		};
		_return
	};
	uiNamespace setVariable ["MAZ_EZM_fnc_convertToGUI_GRIDFormat",MAZ_EZM_fnc_convertToGUI_GRIDFormat];

	MAZ_EZM_fnc_createDialogBase = {
		createDialog "RscDisplayEmpty";
		showchat true;
		private _display = findDisplay -1;

		private _label = _display ctrlCreate ["RscText",IDC_TITLE];
		_label ctrlSetPositionX (["X",6.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_label ctrlSetPositionW (["W",27] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_label ctrlSetPositionH (["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_label ctrlSetBackgroundColor EZM_trimColor;
		_label ctrlCommit 0;

		private _background = _display ctrlCreate ["RscText",IDC_BACKGROUND];
		_background ctrlSetPositionX (["X",6.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_background ctrlSetPositionW (["W",27] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_background ctrlSetBackgroundColor [0,0,0,0.7];
		_background ctrlCommit 0;

		private _contentGroup = _display ctrlCreate ["RscControlsGroupNoScrollbars",IDC_CONTENT];
		_contentGroup ctrlSetPositionX (["X",7] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_contentGroup ctrlSetPositionW (["W",26] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_contentGroup ctrlCommit 0;

		private _okayButton = _display ctrlCreate ["RscButtonMenuOk",IDC_CONFIRM];
		_okayButton ctrlSetPositionX (["X",28.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_okayButton ctrlSetPositionW (["W",5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_okayButton ctrlSetPositionH (["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_okayButton ctrlAddEventhandler ["ButtonClick",{
			params ["_control"];
			private _display = ctrlParent _control;
			(_display getVariable "MAZ_moduleMenuInfo") params ["_controls","_onConfirm","_onCancel","_args"];

			private _values = _controls apply {
				_x params ["_controlsGroup","_settings"];

				[_controlsGroup,_settings] call (_controlsGroup getVariable "controlValue");
			};

			[_values,_args,_display] call _onConfirm;
		}];
		_okayButton ctrlCommit 0;

		private _cancelButton = _display ctrlCreate ["RscButtonMenuCancel",IDC_CANCEL];
		_cancelButton ctrlSetPositionX (["X",6.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_cancelButton ctrlSetPositionW (["W",5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_cancelButton ctrlSetPositionH (["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_cancelButton ctrlAddEventhandler ["ButtonClick",{
			params ["_control"];
			private _display = ctrlParent _control;
			(_display getVariable "MAZ_moduleMenuInfo") params ["_controls","_onConfirm","_onCancel","_args"];

			private _values = _controls apply {
				_x params ["_controlsGroup","_settings"];

				[_controlsGroup,_settings] call (_controlsGroup getVariable "controlValue");
			};

			[_values,_args,_display] call _onCancel;
		}];
		_cancelButton ctrlCommit 0;

		_display displayAddEventHandler ["KeyDown", {
			params ["_display", "_keyCode"];

			if (_keyCode == 1) then {
				(_display getVariable "MAZ_moduleMenuInfo") params ["_controls","_onConfirm","_onCancel","_args"];

				private _values = _controls apply {
					_x params ["_controlsGroup","_settings"];

					[_controlsGroup,_settings] call (_controlsGroup getVariable "controlValue");
				};

				[_values,_args,_display] call _onCancel;
			};

			false
		}];

		_display
	};

	MAZ_EZM_fnc_createRowBase = {
		params ["_display"];
		private _contentGroup = _display displayCtrl IDC_CONTENT;
		private _controlsGroupRow = _display ctrlCreate ["RscControlsGroupNoScrollbars",IDC_ROW_GROUP,_contentGroup];
		_controlsGroupRow ctrlSetPosition [0,0,(["W",26] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat)];
		_controlsGroupRow ctrlCommit 0;

		private _rowLabel = _display ctrlCreate ["RscText",IDC_ROW_LABEL,_controlsGroupRow];
		_rowLabel ctrlSetPosition [0,0,(["W",10] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat)];
		_rowLabel ctrlSetBackgroundColor [0,0,0,0.5];
		_rowLabel ctrlCommit 0;

		_controlsGroupRow
	};

	MAZ_EZM_fnc_createComboRow = {
		params ["_display","_defaultValue","_settings"];
		_settings params ["_entries"];
		private _rowControlGroup = [_display] call MAZ_EZM_fnc_createRowBase;

		private _combo = _display ctrlCreate ["RscCombo",IDC_ROW_COMBO,_rowControlGroup];
		_combo ctrlSetPosition [(["W",10.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),0,(["W",15.9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat)];
		_combo ctrlCommit 0;

		{
			_x params ["_value","_text","_tooltip","_picture","_textColor"];

			private _index = _combo lbAdd _text;
			_combo lbSetTooltip [_index,_tooltip];
			_combo lbSetPicture [_index,_picture];
			_combo lbSetColor [_index,_textColor];
			_combo setVariable [str _index,_value];

			if(_value isEqualTo _defaultValue) then {
				_combo lbSetCurSel _index;
			};
		} forEach _entries;
		_combo lbAdd "   ";
		_combo lbAdd "    ";

		_rowControlGroup setVariable ["controlValue",{
			params ["_controlsGroup"];

			private _ctrlCombo = _controlsGroup controlsGroupCtrl IDC_ROW_COMBO;
			_ctrlCombo getVariable str lbCurSel _ctrlCombo
		}];

		_rowControlGroup
	};

	MAZ_EZM_fnc_createEditRow = {
		params ["_display","_defaultValue","_settings"];
		_settings params ["_height"];
		private _rowControlGroup = [_display] call MAZ_EZM_fnc_createRowBase;

		private _edit = _display ctrlCreate ["RscEdit",IDC_ROW_EDIT,_rowControlGroup];
		_edit ctrlSetPosition [(["W",10.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),pixelH,(["W",15.9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat) - pixelH];
		_edit ctrlSetTextColor [1,1,1,1];
		_edit ctrlSetBackgroundColor [0,0,0,0.2];
		_edit ctrlCommit 0;

		_edit ctrlSetText _defaultValue;

		_rowControlGroup setVariable ["controlValue", {
			params ["_controlsGroup"];
			ctrlText (_controlsGroup controlsGroupCtrl IDC_ROW_EDIT)
		}];

		_rowControlGroup
	};

	MAZ_EZM_fnc_createEditMultiRow = {
		params ["_display","_defaultValue","_settings"];
		_settings params [["_height",4]];
		private _rowControlGroup = [_display] call MAZ_EZM_fnc_createRowBase;
		_rowControlGroup ctrlSetPositionH (["H",_height + 1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_rowControlGroup ctrlCommit 0;

		private _label = _rowControlGroup controlsGroupCtrl IDC_ROW_LABEL;
		_label ctrlSetPositionW (["W",26] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_label ctrlCommit 0;

		private _edit = _display ctrlCreate ["RscEditMulti",IDC_ROW_EDIT,_rowControlGroup];
		_edit ctrlSetPosition [pixelW,(["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["W",26] call MAZ_EZM_fnc_convertToGUI_GRIDFormat) - pixelW,(["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat) - pixelH];
		_edit ctrlSetPositionH (["H",_height] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_edit ctrlSetTextColor [1,1,1,1];
		_edit ctrlSetBackgroundColor [0,0,0,0.2];
		_edit ctrlSetText _defaultValue;
		_edit ctrlCommit 0;

		_rowControlGroup setVariable ["controlValue", {
			params ["_controlsGroup"];
			ctrlText (_controlsGroup controlsGroupCtrl IDC_ROW_EDIT)
		}];

		_rowControlGroup
	};

	MAZ_EZM_fnc_createEditCodeRow = {
		params ["_display","_defaultValue","_settings"];
		_settings params ["_height"];
		private _rowControlGroup = [_display,_defaultValue,[_height]] call MAZ_EZM_fnc_createEditMultiRow;

		private _execButton = _display displayCtrl IDC_CONFIRM;
		_execButton ctrlSetText "Exec";
		_execButton ctrlCommit 0;

		private _edit = _display displayCtrl IDC_ROW_EDIT;
		_edit ctrlSetTextColor [1,1,1,1];
		_edit ctrlSetBackgroundColor [0,0,0,0.5];
		_edit ctrlSetFont "EtelkaMonospacePro";
		_edit ctrlSetFontHeight 0.03;
		_edit ctrlSetText _defaultValue;
		_edit ctrlCommit 0;

		_rowControlGroup
	};

	MAZ_EZM_fnc_createListRow = {
		params ["_display","_defaultValue","_settings"];
		_settings params ["_entries","_height"];
		private _rowControlGroup = [_display] call MAZ_EZM_fnc_createRowBase;
		_rowControlGroup ctrlSetPositionH (["H",_height + 1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_rowControlGroup ctrlCommit 0;

		private _label = _rowControlGroup controlsGroupCtrl IDC_ROW_LABEL;
		_label ctrlSetPositionW (["W",26] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_label ctrlCommit 0;

		private _listBox = _display ctrlCreate ["RscListBox",IDC_ROW_COMBO,_rowControlGroup];
		_listBox ctrlSetPosition [0,(["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["W",26] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["H",6] call MAZ_EZM_fnc_convertToGUI_GRIDFormat)];
		_listBox ctrlSetPositionH (["H",_height] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_listBox ctrlCommit 0;

		{
			_x params ["_value","_text","_tooltip","_picture","_textColor"];

			private _index = _listBox lbAdd _text;
			_listBox lbSetTooltip [_index,_tooltip];
			_listBox lbSetPicture [_index,_picture];
			_listBox lbSetColor [_index,_textColor];
			_listBox setVariable [str _index,_value];

			if(_value isEqualTo _defaultValue) then {
				_listBox lbSetCurSel _index;
			};
		} forEach _entries;

		_rowControlGroup setVariable ["controlValue",{
			params ["_controlsGroup"];

			private _ctrlCombo = _controlsGroup controlsGroupCtrl IDC_ROW_COMBO;
			_ctrlCombo getVariable str lbCurSel _ctrlCombo
		}];

		_rowControlGroup
	};

	MAZ_EZM_fnc_createSidesRow = {
		params ["_display","_defaultValue","_settings"];
		private _rowControlGroup = [_display] call MAZ_EZM_fnc_createRowBase;

		_rowControlGroup ctrlSetPositionH (["H",2.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);

		private _label = _rowControlGroup controlsGroupCtrl IDC_ROW_LABEL;
		_label ctrlSetPositionH (["H",2.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_label ctrlCommit 0;

		private _background = _display ctrlCreate ["RscText",-1,_rowControlGroup];
		_background ctrlSetBackgroundColor [0,0,0,0.6];
		_background ctrlSetPosition [(["W",10] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),0,(["W",16] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["H",2.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat)];
		_background ctrlSetTextColor [1,1,1,0.5];
		_background ctrlCommit 0;

		private _sidesGroup = _display ctrlCreate ["RscControlsGroupNoScrollbars",IDC_ROW_SIDES,_rowControlGroup];
		_sidesGroup ctrlSetPosition [(["W",10] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),0,(["W",16] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["H",2.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat)];
		_sidesGroup ctrlCommit 0;

		private _blufor = _display ctrlCreate ["RscActivePicture",IDC_SIDES_BLUFOR,_sidesGroup];
		_blufor ctrlSetText "\a3\Ui_F_Curator\Data\Displays\RscDisplayCurator\side_west_ca.paa";
		_blufor ctrlSetPosition [(["W",2.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["H",0.25] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["W",2] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["H",2] call MAZ_EZM_fnc_convertToGUI_GRIDFormat)];
		_blufor ctrlCommit 0;

		private _opfor = _display ctrlCreate ["RscActivePicture",IDC_SIDES_OPFOR,_sidesGroup];
		_opfor ctrlSetText "\a3\Ui_F_Curator\Data\Displays\RscDisplayCurator\side_east_ca.paa";
		_opfor ctrlSetPosition [(["W",5.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["H",0.25] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["W",2] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["H",2] call MAZ_EZM_fnc_convertToGUI_GRIDFormat)];
		_opfor ctrlCommit 0;

		private _indep = _display ctrlCreate ["RscActivePicture",IDC_SIDES_INDEPENDENT,_sidesGroup];
		_indep ctrlSetText "\a3\Ui_F_Curator\Data\Displays\RscDisplayCurator\side_guer_ca.paa";
		_indep ctrlSetPosition [(["W",8.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["H",0.25] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["W",2] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["H",2] call MAZ_EZM_fnc_convertToGUI_GRIDFormat)];
		_indep ctrlCommit 0;

		private _civ = _display ctrlCreate ["RscActivePicture",IDC_SIDES_CIVILIAN,_sidesGroup];
		_civ ctrlSetText "\a3\Ui_F_Curator\Data\Displays\RscDisplayCurator\side_civ_ca.paa";
		_civ ctrlSetPosition [(["W",11.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["H",0.25] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["W",2] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["H",2] call MAZ_EZM_fnc_convertToGUI_GRIDFormat)];
		_civ ctrlCommit 0;

		if (_defaultValue isEqualType []) then {
			_defaultValue = +_defaultValue;
		};

		private _allowMultiple = _defaultValue isEqualType [];
		_sidesGroup setVariable ["controlValue",_defaultValue];

		private _controls = [];
		private _IDCs = [IDC_SIDES_OPFOR,IDC_SIDES_BLUFOR,IDC_SIDES_INDEPENDENT,IDC_SIDES_CIVILIAN];
		{
			private _sideCtrl = _sidesGroup controlsGroupCtrl _x;
			private _color = [_forEachIndex] call BIS_fnc_sideColor;
			private _side = [_forEachIndex] call BIS_fnc_sideType;

			_sideCtrl ctrlSetActiveColor _color;
			if(_allowMultiple) then {
				if(_side in _defaultValue) then {
					[_sideCtrl,1.2,0] call BIS_fnc_ctrlSetScale;
				} else {
					_color set [3,0.5];
				};
			} else {
				if(_side isEqualTo _defaultValue) then {
					[_sideCtrl,1.2,0] call BIS_fnc_ctrlSetScale;
				} else {
					_color set [3,0.5];
				};
			};
			_sideCtrl ctrlSetTextColor _color;

			if(_allowMultiple) then {
				_sideCtrl ctrlAddEventHandler ["ButtonClick",{
					params ["_sideCtrl"];
					(_sideCtrl getVariable "params") params ["_color","_side"];
					private _controlGroup = ctrlParentControlsGroup _sideCtrl;
					private _value = _controlGroup getVariable "controlValue";

					private _scale = "";
					private _alpha = "";
					if(_side in _value) then {
						_value deleteAt (_value find _side);
						_scale = 1;
						_alpha = 0.5;
					} else {
						_value pushBack _side;
						_scale = 1.25;
						_alpha = 1;
					};
					_color set [3,_alpha];
					_sideCtrl ctrlSetTextColor _color;
					[_sideCtrl,_scale,0.1] call BIS_fnc_ctrlSetScale;
				}];
			} else {
				_sideCtrl ctrlAddEventHandler ["ButtonClick",{
					params ["_sideCtrl"];
					(_sideCtrl getVariable "params2") params ["_controls"];
					private _controlGroup = ctrlParentControlsGroup _sideCtrl;
					{
						_x params ["_ctrl","_color","_side"];
						private _scale = "";
						private _alpha = "";
						if(_ctrl isEqualTo _sideCtrl) then {
							_scale = 1.25;
							_alpha = 1;
							_controlGroup setVariable ["controlValue",_side];
						} else {
							_scale = 1;
							_alpha = 0.5;
						};
						_color set [3,_alpha];
						_ctrl ctrlSetTextColor _color;
						[_ctrl,_scale,0.1] call BIS_fnc_ctrlSetScale;
					}forEach _controls;
				}];

				_controls pushBack [_sideCtrl, _color, _side];
			};
			_sideCtrl setVariable ["params",[_color,_side]];
			_sideCtrl setVariable ["params2",[_controls]];
		}forEach [IDC_SIDES_OPFOR,IDC_SIDES_BLUFOR,IDC_SIDES_INDEPENDENT,IDC_SIDES_CIVILIAN];

		_rowControlGroup setVariable ["controlValue", {
			params ["_controlsGroup"];

			private _ctrlSides = _controlsGroup controlsGroupCtrl IDC_ROW_SIDES;
			_ctrlSides getVariable "controlValue"
		}];

		_rowControlGroup
	};

	MAZ_EZM_fnc_createSliderRow = {
		params ["_display","_defaultValue","_settings"];
		_settings params ["_min","_max","_isPercent","_drawRadius","_radiusCenter","_radiusColor"];
		private _rowControlGroup = [_display] call MAZ_EZM_fnc_createRowBase;
		_rowControlGroup setVariable ["MAZ_EZM_isPercent",_isPercent];

		private _slider = _display ctrlCreate ["RscXSliderH",IDC_ROW_SLIDER,_rowControlGroup];
		_slider ctrlSetPosition [(["W",10.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),0,(["W",13.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat)];
		_slider ctrlSetTextColor [1,1,1,0.6];
		_slider ctrlSetActiveColor [1,1,1,1];
		_slider ctrlCommit 0;

		private _sliderEdit = _display ctrlCreate ["RscEdit",IDC_ROW_EDIT,_rowControlGroup];
		_sliderEdit ctrlSetPosition [(["W",23.7] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),pixelH,(["W",2.3] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),((["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat) - pixelH)];
		_sliderEdit ctrlSetTextColor [1,1,1,1];
		_sliderEdit ctrlSetBackgroundColor [0,0,0,0.2];
		_sliderEdit ctrlCommit 0;

		if(_drawRadius) then {
			["MAZ_EZM_drawSliderRadius","onEachFrame",{
				params ["_ctrlSlider","_center","_color"];
				if(isNull _ctrlSlider || {_center isEqualTo objNull}) exitWith {
					["MAZ_EZM_drawSliderRadius","onEachFrame"] call BIS_fnc_removeStackedEventHandler;
				};

				if (_center isEqualType objNull) then {
					_center = ASLToAGL getPosASLVisual _center;
				};

				private _radius = sliderPosition _ctrlSlider;
				private _count = 6 max floor (2 * pi * _radius / 15);
				private _intervals = 360 / _count;

				for "_i" from 0 to (_count - 1) do {
					private _circumferencePos = _i * _intervals;
					drawIcon3D ["\a3\ui_f\data\map\markers\military\dot_ca.paa", _color, [_radius * cos _circumferencePos + (_center # 0),_radius * sin _circumferencePos + (_center # 1),0], 0.5, 0.5, 0];
				};
			},[_slider,_radiusCenter,_radiusColor]] call BIS_fnc_addStackedEventHandler;
		};

		_slider sliderSetRange [_min, _max];
		_slider sliderSetSpeed [1, 1];
		_slider sliderSetPosition _defaultValue;
		if(_isPercent) then {
			private _text = (str (round (_defaultValue * 100))) + "%";
			_sliderEdit ctrlSetText _text;
		} else {
			_sliderEdit ctrlSetText (str _defaultValue);
		};

		_slider ctrlAddEventHandler ["sliderPosChanged", {
			params ["_ctrlSlider", "_value"];
			private _controlGroup = ctrlParentControlsGroup _ctrlSlider;
			private _isPercent = _controlGroup getVariable ["MAZ_EZM_isPercent",false];
			private _ctrlEdit = _controlGroup controlsGroupCtrl IDC_ROW_EDIT;
			if(_isPercent) then {
				private _text = (str (round (_value * 100))) + "%";
				_ctrlEdit ctrlSetText _text;
			} else {
				private _roundedValue = round _value;
				_ctrlEdit ctrlSetText format ["%1",_roundedValue];
			};
		}];

		_sliderEdit ctrlAddEventHandler ["keyUp",{
			params ["_displayOrControl", "_key", "_shift", "_ctrl", "_alt"];
			private _num = parseNumber (ctrlText _displayOrControl);
			private _ctrlGroup = ctrlParentControlsGroup _displayOrControl;
			private _isPercent = _ctrlGroup getVariable ["MAZ_EZM_isPercent",false];
			private _sliderCtrl = _ctrlGroup controlsGroupCtrl IDC_ROW_SLIDER;
			if(_isPercent) then {
				_sliderCtrl sliderSetPosition (_num/100);
			} else {
				_sliderCtrl sliderSetPosition _num;
			};
		}];

		_rowControlGroup setVariable ["controlValue",{
			params ["_controlsGroup"];
			sliderPosition (_controlsGroup controlsGroupCtrl IDC_ROW_SLIDER)
		}];

		_rowControlGroup
	};

	MAZ_EZM_fnc_createToolBoxRow = {
		params ["_display","_defaultValue","_settings"];
		_settings params ["_strings"];
		private _rowControlGroup = [_display] call MAZ_EZM_fnc_createRowBase;

		private _ctrlToolbox = _display ctrlCreate ["RscToolBox",IDC_ROW_TOOLBOX,_rowControlGroup];
		_ctrlToolbox ctrlSetPosition [(["W",10.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),0,(["W",15.9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat)];
		_ctrlToolbox ctrlSetTextColor [1,1,1,1];
		_ctrlToolbox ctrlSetBackgroundColor [0,0,0,0.3];
		_ctrlToolbox ctrlCommit 0;
		lbClear _ctrlToolbox;
		
		{
			_x params ["_text",["_tooltip", '']];

			private _index = _ctrlToolbox lbAdd _text;
			_ctrlToolbox lbSetTooltip [_index, _tooltip];
		} forEach _strings;

		if(_defaultValue isEqualType false) then {
			_defaultValue = parseNumber _defaultValue;
		};
		_ctrlToolbox lbSetCurSel _defaultValue;

		_rowControlGroup setVariable ["controlValue", {
			params ["_controlsGroup", "_settings"];

			private _value = lbCurSel (_controlsGroup controlsGroupCtrl IDC_ROW_TOOLBOX);
			_value = _value > 0;

			_value
		}];
		
		_rowControlGroup
	};

	MAZ_EZM_fnc_createVectorRow = {
		params ["_display","_defaultValue","_settings"];
		_settings params ["_labelData","_numOfEdits"];
		_labelData params ["_labels","_labelColors"];
		private _rowControlGroup = [_display] call MAZ_EZM_fnc_createRowBase;

		private ["_width","_gap"];
		if(_numOfEdits > 3) then {
			_numOfEdits = 3;
		};
		if(_numOfEdits < 2) then {
			_numOfEdits = 2;
		};
		switch (_numOfEdits) do {
			case 2: {
				_width = 6.5;
				_gap = 0.2;
			};
			case 3: {
				_width = 4.5;
				_gap = 0.2;
			};
		};

		for "_i" from 0 to (_numOfEdits - 1) do {
			
			private _widthPosLabel = (_i * _width) + ((_i + 1) * (_gap * 3)) + 10;
			private _widthPos = _widthPosLabel + 1.2;
			_widthPos = ["W",_widthPos] call MAZ_EZM_fnc_convertToGUI_GRIDFormat;
			_widthPosLabel = ["W",_widthPosLabel] call MAZ_EZM_fnc_convertToGUI_GRIDFormat;

			private _editLabel = _display ctrlCreate ["RscStructuredText",-1,_rowControlGroup];
			_editLabel ctrlSetStructuredText parseText (format ["<t align='center'>%1</t>",_labels select _i]);
			_editLabel ctrlSetBackgroundColor (_labelColors select _i);
			_editLabel ctrlSetPosition [_widthPosLabel,0,["W",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];
			_editLabel ctrlCommit 0;

			private _editBox  = _display ctrlCreate ["RscEdit",IDCS_ROW_VECTOR select _i,_rowControlGroup];
			_editBox ctrlSetText (str (_defaultValue select _i));
			_editBox ctrlSetPosition [_widthPos,0,["W",_width - 1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];
			_editBox ctrlCommit 0;
		};

		_rowControlGroup ctrlSetPositionH (["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_rowControlGroup ctrlCommit 0;

		_rowControlGroup setVariable ["numOfVectorControls",_numOfEdits];

		_rowControlGroup setVariable ["controlValue", {
			params ["_controlsGroup", "_settings"];
			private _numOfEdits = _controlsGroup getVariable "numOfVectorControls";
			private _value = [];
			for "_i" from 0 to (_numOfEdits - 1) do {
				private _editBox = _controlsGroup controlsGroupCtrl (IDCS_ROW_VECTOR select _i);
				_value pushBack (parseNumber (ctrlText _editBox));
			};

			_value
		}];
		
		_rowControlGroup
	};

	MAZ_EZM_fnc_changeDisplayHeights = {
		params ["_display"];
		private _ctrlContent = _display displayCtrl IDC_CONTENT;
		ctrlPosition _ctrlContent params ["_posX","","_posW","_posH"];

		_ctrlContent ctrlSetPositionY (0.5 - (_posH / 2));
		_ctrlContent ctrlCommit 0;

		private _ctrlTitle = _display displayCtrl IDC_TITLE;
		_ctrlTitle ctrlSetPositionY (0.5 - (_posH / 2) - (["H",1.6] call MAZ_EZM_fnc_convertToGUI_GRIDFormat));
		_ctrlTitle ctrlCommit 0;

		private _ctrlBG = _display displayCtrl IDC_BACKGROUND;
		_ctrlBG ctrlSetPositionY (0.5 - (_posH / 2) - (["H",0.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat));
		_ctrlBG ctrlSetPositionH (_posH + (["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat));
		_ctrlBG ctrlCommit 0;

		private _ctrlOkBtn = _display displayCtrl IDC_CONFIRM;
		_ctrlOkBtn ctrlSetPositionY (0.5 + (_posH / 2) + (["H",0.6] call MAZ_EZM_fnc_convertToGUI_GRIDFormat));
		_ctrlOkBtn ctrlCommit 0;

		private _ctrlCancelBtn = _display displayCtrl IDC_CANCEL;
		_ctrlCancelBtn ctrlSetPositionY (0.5 + (_posH / 2) + (["H",0.6] call MAZ_EZM_fnc_convertToGUI_GRIDFormat));
		_ctrlCancelBtn ctrlCommit 0;
	};
	
	M9SD_fnc_addRespawnPos = { 
		params [['_type', 'ModuleRespawnPositionWest_F'], ['_position', screenToWorld getMousePosition]]; 
		private _newRespawn = createAgent [_type, _position, [], 0, 'CAN_COLLIDE']; 
		[_newRespawn, true, true] remoteExec ['BIS_fnc_moduleRespawnPosition']; 
		{ 
			[_x, [[_newRespawn], true]] remoteExec ['addCuratorEditableObjects']; 
		} forEach allCurators; 
		_newRespawn 
	}; 

	MAZ_EZM_fnc_createDialog = {
		params [
			["_title","",[""]],
			["_content",[],[[]]],
			["_onConfirm",{},[{}]],
			["_onCancel",{},[{}]],
			["_args",[]]
		];

		private _controlsData = [];
		{
			_x params [
				["_type","",[""]],
				["_name",[],["",[]]],
				["_value",[]]
			];
			_name params [["_label","",[""]],["_toolTip","",[""]]];

			(toUpper _type splitString ":") params [["_type",""],["_subType",""]];

			private ["_defaultValue","_controlType","_settings"];

			switch (_type) do {
				case "COMBO": {
					_value params [["_values",[],[[]]],["_labels",[],[[]]],["_defaultIndex",0,[0]]];
					if(_values isEqualTo []) then {
						{
							_values pushBack _forEachIndex;
						} forEach _labels;
					};

					_defaultValue = _values param [_defaultIndex];
					_controlType = MAZ_EZM_fnc_createComboRow;

					private _entries = [];
					for "_i" from 0 to (count _values - 1) do {
						(_labels select _i) params [["_text","",[""]],["_tooltip","",[""]],["_picture","",[""]],["_textColor",[1,1,1,1],[[]],4]];
						_entries pushBack [_values select _i,_text,_tooltip,_picture,_textColor];
					};

					_settings = [_entries];
				};
				case "EDIT": {
					_value params [["_default",""],["_height",5,[0]]];
					if!(_default isEqualType "") then {
						_default = str _default;
					};

					_defaultValue = _default;

					_controlType = switch (_subType) do {
						case "MULTI": {
							MAZ_EZM_fnc_createEditMultiRow
						};
						case "CODE": {
							MAZ_EZM_fnc_createEditCodeRow
						};
						default {
							MAZ_EZM_fnc_createEditRow
						};
					};

					private _isMulti = _subType in ["MULTI","CODE"];
					_settings = [_height];
				};
				case "LIST": {
					_value params [["_values",[],[[]]],["_labels",[],[[]]],["_defaultIndex",0,[0]],["_height",7,[0]],["_sort",false,[false]]];

					if(_values isEqualTo []) then {
						{
							_values pushBack _forEachIndex;
						}forEach _labels;
					};

					_defaultValue = _values param [_defaultIndex];
					_controlType = MAZ_EZM_fnc_createListRow;

					private _entries = [];
					for "_i" from 0 to (count _values - 1) do {
						(_labels select _i) params [["_text","",[""]],["_tooltip","",[""]],["_picture","",[""]],["_textColor",[1,1,1,1],[[]],4]];
						_entries pushBack [_values select _i,_text,_tooltip,_picture,_textColor];
					};

					_settings = [_entries,_height];
				};
				case "SIDES": {
					_defaultValue = [_value] param [0,west,[west,[]]];
					_controlType = MAZ_EZM_fnc_createSidesRow;
				};
				case "SLIDER": {
					_value params [
						["_min",0,[0]],
						["_max",1,[0]],
						["_default",0,[0]],
						["_radiusCenter",objNull,[objNull,[]], 3],
						["_radiusColor",[1,1,1,0.7],[[]], 4],
						["_isPercent",false,[false]]
					];

					_defaultValue = _default;
					_controlType = MAZ_EZM_fnc_createSliderRow;

					private _drawRadius = _subType == "RADIUS" && {_radiusCenter isNotEqualTo objNull};
					if(_isPercent) then {
						_radiusCenter = objNull;
					};

					_settings = [_min,_max,_isPercent,_drawRadius,_radiusCenter,_radiusColor];
				};
				case "TOOLBOX": {
					_value params [["_default",0,[0,false]],["_strings",[],[[]]]];

					switch (_subType) do {
						case "YESNO": {
							_strings = [["NO",""],["YES",""]];
						};
						case "ENABLED": {
							_strings = [["DISABLE",""],["ENABLE",""]];
						};
					};

					_defaultValue = _default;
					_controlType = MAZ_EZM_fnc_createToolBoxRow;

					_settings = [_strings];
				};
				case "VECTOR": {
					_value params [
						["_default",[0,0,0],[[]]],
						["_labels",["X","Y","Z"],[[]]],
						["_numOfEdits",3,[3]]
					];
					private _labelData = [_labels,[[0.765,0.18,0.1,1],[0.575,0.815,0.22,1],[0.26,0.52,0.92,1]]];

					_defaultValue = _default;
					_controlType = MAZ_EZM_fnc_createVectorRow;

					_settings = [_labelData,_numOfEdits];
				};
			};
			_controlsData pushBack [_controlType,_label,_tooltip,_defaultValue,_settings];
		} forEach _content;

		private _display = [] call MAZ_EZM_fnc_createDialogBase;
		_display setVariable ['MAZ_EZM_onAttribsCancel',_onCancel];
		_display setVariable ['MAZ_EZM_onAttribsConfirm',_onConfirm];

		if(isNull _display) exitWith {false};

		private _ctrlTitle = _display displayCtrl IDC_TITLE;
		_ctrlTitle ctrlSetText (toUpper _title);

		private _ctrlContent = _display displayCtrl IDC_CONTENT;
		private _contentPosY = 0;
		private _controls = [];

		{
			_x params ["_controlType","_label","_tooltip","_defaultValue","_settings"];

			private _controlsGroup = [_display,_defaultValue,_settings] call _controlType;

			private _ctrlLabel = _controlsGroup controlsGroupCtrl IDC_ROW_LABEL;
			_ctrlLabel ctrlSetText (format ["%1",_label]);
			_ctrlLabel ctrlSetTooltip _tooltip;

			_controlsGroup ctrlSetPositionY _contentPosY;
			_controlsGroup ctrlCommit 0;

			_contentPosY = (_contentPosY + (ctrlPosition _controlsGroup select 3) + (["H",0.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat));

			_controls pushBack [_controlsGroup, _settings];
		} forEach _controlsData;

		_ctrlContent ctrlSetPositionH (_contentPosY - (["H",0.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat));
		_ctrlContent ctrlCommit 0;

		[_display] call MAZ_EZM_fnc_changeDisplayHeights;

		_display setVariable ["MAZ_moduleMenuInfo",[_controls,_onConfirm,_onCancel,_args]];
	};

	MAZ_defineIDCS = {
		IDC_TITLE = 201;
		IDC_BACKGROUND = 202;
		IDC_CONTENT = 203;
		IDC_CONFIRM = 204;
		IDC_CANCEL = 205;

		IDC_ROW_GROUP = 210;
		IDC_ROW_LABEL = 211;
		IDC_ROW_CHECKBOX = 212;
		IDC_ROW_COMBO = 213;
		IDC_ROW_EDIT = 214;
		IDC_ROW_SLIDER = 215;
		IDC_ROW_TOOLBOX = 216;
		IDC_ROW_SIDES = 217;
		IDC_ROW_VECTOR_X = 220;
		IDC_ROW_VECTOR_Y = 221;
		IDC_ROW_VECTOR_Z = 222;

		IDC_SIDES_BLUFOR = 250;
		IDC_SIDES_OPFOR = 251;
		IDC_SIDES_INDEPENDENT = 252;
		IDC_SIDES_CIVILIAN = 253;

		IDCS_ROW_VECTOR = [IDC_ROW_VECTOR_X,IDC_ROW_VECTOR_Y,IDC_ROW_VECTOR_Z];
	};
	[] call MAZ_defineIDCS;

comment "Attributes Dialog Creation";

	MAZ_EZM_attributesIDCDefinitions = {
		IDC_ATTRIBS_TITLE = 100;
		IDC_ATTRIBS_BG = 101;
		IDC_ATTRIBS_CONTENT = 102;
		IDC_ATTRIBS_CONFIRM = 103;
		IDC_ATTRIBS_CANCEL = 104;

		IDC_ATTRIBS_LABEL = 150;
		IDC_ATTRIBS_ROW_GROUP = 151;
		IDC_ATTRIBS_ROW_BG = 152;
		IDC_ATTRIBS_EDIT = 160;
		IDC_ATTRIBS_EDITMULTI = 161;
		IDC_ATTRIBS_SLIDER = 170;
		IDC_ATTRIBS_SLIDER_EDIT = 171;
		IDC_ATTRIBS_COMBO = 180;
		IDC_ATTRIBS_TOOLBOX = 190;

	};
	[] call MAZ_EZM_attributesIDCDefinitions;

	MAZ_EZM_createAttributesMenuBase = {
		params ["_labelText"];
		createDialog "RscDisplayEmpty";
		showchat true;
		private _display = findDisplay -1;

		private _label = _display ctrlCreate ["RscText",IDC_ATTRIBS_TITLE];
		_label ctrlSetPositionX (["X",6.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_label ctrlSetPositionW (["W",27] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_label ctrlSetPositionH (["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_label ctrlSetBackgroundColor EZM_trimColor;
		_label ctrlSetText _labelText;
		_label ctrlCommit 0;

		private _background = _display ctrlCreate ["RscText",IDC_ATTRIBS_BG];
		_background ctrlSetPositionX (["X",6.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_background ctrlSetPositionW (["W",27] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_background ctrlSetBackgroundColor [0,0,0,0.7];
		_background ctrlCommit 0;

		private _contentGroup = _display ctrlCreate ["RscControlsGroup",IDC_ATTRIBS_CONTENT];
		_contentGroup ctrlSetPositionX (["X",7] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_contentGroup ctrlSetPositionW (["W",26] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_contentGroup ctrlCommit 0;

		private _okayButton = _display ctrlCreate ["RscButtonMenuOk",IDC_ATTRIBS_CONFIRM];
		_okayButton ctrlSetPositionX (["X",28.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_okayButton ctrlSetPositionW (["W",5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_okayButton ctrlSetPositionH (["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_okayButton ctrlAddEventhandler ["ButtonClick",{
			params ["_control"];
			private _display = ctrlParent _control;
			(_display getVariable "MAZ_EZM_attributesDialogInfo") params ["_display","_controls","_args"];
			private _values = [];
			{
				private _value = [_x] call (_x getVariable "MAZ_EZM_getControlValue");
				_values pushBack _value;
			}forEach _controls;

			[_display,_values,_args] call (_display getVariable 'MAZ_EZM_onAttribsConfirm');
		}];
		_okayButton ctrlCommit 0;

		private _cancelButton = _display ctrlCreate ["RscButtonMenuCancel",IDC_ATTRIBS_CANCEL];
		_cancelButton ctrlSetPositionX (["X",6.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_cancelButton ctrlSetPositionW (["W",5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_cancelButton ctrlSetPositionH (["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_cancelButton ctrlAddEventhandler ["ButtonClick",{
			params ["_control"];
			private _display = ctrlParent _control;
			(_display getVariable "MAZ_EZM_attributesDialogInfo") params ["_display","_controls","_args"];
			private _values = [];
			{
				private _value = [_x] call (_x getVariable "MAZ_EZM_getControlValue");
				_values pushBack _value;
			}forEach _controls;

			[_display,_values,_args] call (_display getVariable 'MAZ_EZM_onAttribsCancel');
		}];
		_cancelButton ctrlCommit 0;

		_display displayAddEventHandler ["KeyDown", {
			params ["_display", "_keyCode"];

			if (_keyCode == 1) then {
				private _display = ctrlParent _control;
				(_display getVariable "MAZ_EZM_attributesDialogInfo") params ["_display","_controls","_args"];
				private _values = [];
				{
					private _value = [_x] call (_x getVariable "MAZ_EZM_getControlValue");
					_values pushBack _value;
				}forEach _controls;

				[_display,_values,_args] call (_display getVariable 'MAZ_EZM_onAttribsCancel');
			};

			false
		}];

		_display
	};

	MAZ_EZM_createAttributesRowBase = {
		params ["_display","_label"];
		_text = _label;
		_tooltip = "";
		if(_label isEqualType []) then {
			_text = _label # 0;
			_tooltip = _label # 1;
		};
		private _contentGroup = _display displayCtrl IDC_ATTRIBS_CONTENT;
		private _controlsGroup = _display ctrlCreate ["RscControlsGroupNoScrollbars",IDC_ATTRIBS_ROW_GROUP,_contentGroup];
		_controlsGroup ctrlSetPosition [0,0,(["W",26] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat)];
		_controlsGroup ctrlCommit 0;

		private _rowLabel = _display ctrlCreate ["RscText",IDC_ATTRIBS_LABEL,_controlsGroup];
		_rowLabel ctrlSetPosition [0,0,(["W",9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat)];
		_rowLabel ctrlSetBackgroundColor [0,0,0,0.6];
		_rowLabel ctrlSetText (format ["%1",_text]);
		_rowLabel ctrlSetTooltip _tooltip;
		_rowLabel ctrlCommit 0;

		private _rowBG = _display ctrlCreate ["RscPicture",IDC_ATTRIBS_ROW_BG,_controlsGroup];
		_rowBG ctrlSetPosition [(["W",9.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),0,(["W",16.9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),(["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat)];
		_rowBG ctrlSetText "#(argb,8,8,3)color(1,1,1,0.1)";
		_rowBG ctrlCommit 0;

		_controlsGroup
	};

	MAZ_EZM_createAttribEditRow = {
		params ["_display","_label","_default","_settings"];
		private _rowControlsGroup = [_display,_label] call MAZ_EZM_createAttributesRowBase;

		private _rowEditBox = _display ctrlCreate ["RscEdit",IDC_ATTRIBS_EDIT,_rowControlsGroup];
		_rowEditBox ctrlSetPosition [["W",9.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,pixelH,["W",16.9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,((["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat) - pixelH)];
		_rowEditBox ctrlSetText _default;
		_rowEditBox ctrlSetBackgroundColor [0,0,0,0.3];
		_rowEditBox ctrlCommit 0;

		_rowControlsGroup setVariable ["MAZ_EZM_getControlValue",{
			params ["_controlsGroup"];
			ctrlText (_controlsGroup controlsGroupCtrl IDC_ATTRIBS_EDIT)
		}];

		_rowControlsGroup
	};

	MAZ_EZM_createAttribEditMultiRow = {
		params ["_display","_label","_default","_settings"];
		_settings params ["_align"];
		private _rowControlsGroup = [_display,_label] call MAZ_EZM_createAttributesRowBase;
		_rowControlsGroup ctrlSetPositionH (["H",4] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_rowControlsGroup ctrlCommit 0;

		private _rowLabel = _rowControlsGroup controlsGroupCtrl IDC_ATTRIBS_LABEL;
		private _text = ctrlText _rowLabel;
		_rowLabel ctrlSetStructuredText parseText (format ["<t align='%1'>%2</t>",_align,_text]);
		_rowLabel ctrlSetPositionW (["W",26] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_rowLabel ctrlCommit 0;

		private _rowEditMultiBox = _display ctrlCreate ["RscEditMulti",IDC_ATTRIBS_EDITMULTI,_rowControlsGroup];
		_rowEditMultiBox ctrlSetPosition [["W",0.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,(["H",1.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat) + pixelH,["W",25.9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,((["H",2.9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat) - pixelH)];
		_rowEditMultiBox ctrlSetText _default;
		_rowEditMultiBox ctrlSetBackgroundColor [0,0,0,0.3];
		_rowEditMultiBox ctrlCommit 0;

		_rowControlsGroup setVariable ["MAZ_EZM_getControlValue",{
			params ["_controlsGroup"];
			ctrlText (_controlsGroup controlsGroupCtrl IDC_ATTRIBS_EDITMULTI)
		}];

		_rowControlsGroup
	};

	MAZ_EZM_createAttribSliderRow = {
		params ["_display","_label","_default","_settings"];
		_settings params ["_min","_max"];
		private _rowControlsGroup = [_display,_label] call MAZ_EZM_createAttributesRowBase;

		private _slider = _display ctrlCreate ["RscXSliderH",IDC_ATTRIBS_SLIDER,_rowControlsGroup];
		_slider ctrlSetPosition [["W",9.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,0,["W",16.9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,(["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat)];
		_slider sliderSetRange [_min,_max];
		_slider sliderSetPosition _default;
		_slider ctrlAddEventHandler ["sliderPosChanged",{
			params ["_control","_newValue"];
			private _ctrlGroup = ctrlParentControlsGroup _control;
			_ctrlGroup setVariable ["MAZ_EZM_sliderData",[_newValue,2] call BIS_fnc_cutDecimals];
		}];
		_slider ctrlCommit 0;

		_rowControlsGroup setVariable ["MAZ_EZM_sliderData",_default];

		_rowControlsGroup setVariable ["MAZ_EZM_getControlValue",{
			params ["_controlsGroup"];
			_controlsGroup getVariable "MAZ_EZM_sliderData"
		}];

		_rowControlsGroup
	};

	MAZ_EZM_createAttribSliderWithEditRow = {
		params ["_display","_label","_default","_settings"];
		_settings params ["_min","_max",["_isPercent",false]];
		private _rowControlsGroup = [_display,_label] call MAZ_EZM_createAttributesRowBase;

		private _slider = _display ctrlCreate ["RscXSliderH",IDC_ATTRIBS_SLIDER,_rowControlsGroup];
		_slider ctrlSetPosition [["W",9.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,0,["W",13.9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,(["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat)];
		_slider sliderSetRange [_min,_max];
		_slider sliderSetPosition _default;
		_slider ctrlCommit 0;

		private _sliderEdit = _display ctrlCreate ["RscEdit",IDC_ATTRIBS_SLIDER_EDIT,_rowControlsGroup];
		_sliderEdit ctrlSetPosition [["W",23.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,pixelH,["W",2.9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,((["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat) - pixelH)];
		if(_isPercent) then {
			_sliderEdit ctrlSetText ((str (_default * 100)) + "%");
		} else {
			_sliderEdit ctrlSetText (str _default);
		};
		_sliderEdit ctrlSetBackgroundColor [0,0,0,0.3];
		_sliderEdit ctrlCommit 0;

		_rowControlsGroup setVariable ["MAZ_EZM_sliderData",_default];
		_rowControlsGroup setVariable ["MAZ_EZM_isSliderEditPercent",_isPercent];

		_slider ctrlAddEventHandler ["SliderPosChanged",{
			params ["_control","_newValue"];
			private _ctrlGroup = ctrlParentControlsGroup _control;
			_ctrlGroup setVariable ["MAZ_EZM_sliderData",[_newValue,2] call BIS_fnc_cutDecimals];
			private _isPercent = _ctrlGroup getVariable ["MAZ_EZM_isSliderEditPercent",false];
			private _editCtrl = _ctrlGroup controlsGroupCtrl IDC_ATTRIBS_SLIDER_EDIT;
			if(_isPercent) then {
				private _editValue = str (round (_newValue * 100));
				_editCtrl ctrlSetText (_editValue + "%");
			} else {
				private _editValue = [_newValue,2] call BIS_fnc_cutDecimals;
				_editCtrl ctrlSetText format ["%1",_editValue];
			};
		}];

		_sliderEdit ctrlAddEventHandler ["KeyUp",{
			params ["_displayOrControl", "_key", "_shift", "_ctrl", "_alt"];
			private _num = parseNumber (ctrlText _displayOrControl);
			private _ctrlGroup = ctrlParentControlsGroup _displayOrControl;
			private _sliderCtrl = _ctrlGroup controlsGroupCtrl IDC_ATTRIBS_SLIDER;
			private _isPercent = _ctrlGroup getVariable ["MAZ_EZM_isSliderEditPercent",false];
			if(_isPercent) then {
				_sliderCtrl sliderSetPosition (_num/100);
				_ctrlGroup setVariable ["MAZ_EZM_sliderData",_num/100];
			} else {
				_sliderCtrl sliderSetPosition _num;
				_ctrlGroup setVariable ["MAZ_EZM_sliderData",_num];
			};
		}];

		_rowControlsGroup setVariable ["MAZ_EZM_getControlValue",{
			params ["_controlsGroup"];
			_controlsGroup getVariable "MAZ_EZM_sliderData"
		}];

		_rowControlsGroup
	};

	MAZ_EZM_createAttribIconsRow = {
		params ["_display","_label","_default","_settings"];
		_settings params ["_values","_icons","_tooltips","_positions","_sizes",["_height",2.5],["_colors",[]]];
		private _rowControlsGroup = [_display,_label] call MAZ_EZM_createAttributesRowBase;
		_rowControlsGroup ctrlSetPositionH (["H",_height] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_rowControlsGroup ctrlCommit 0;

		private _rowLabel = _rowControlsGroup controlsGroupCtrl IDC_ATTRIBS_LABEL;
		private _text = ctrlText _rowLabel;
		_rowLabel ctrlSetStructuredText parseText (format ["<t size='%1'>&#160;</t><br/>%2",_height * 0.35,_text]);
		_rowLabel ctrlSetPositionH (["H",_height] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_rowLabel ctrlCommit 0;

		private _rowBG = _rowControlsGroup controlsGroupCtrl IDC_ATTRIBS_ROW_BG;
		_rowBG ctrlSetPositionH (["H",_height] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_rowBG ctrlCommit 0;

		private _iconControls = [];
		for "_i" from 0 to (count _icons - 1) do {
			private _value = _values select _i;
			private _icon = _icons select _i;
			private _tooltip = _tooltips select _i;
			private _position = _positions select _i;
			private _size = _sizes select _i;

			private _colorNormal = [0.8,0.8,0.8,0.4];
			private _colorActive = [1,1,1,0.9];
			
			if(count _colors - 1 >= _i) then {
				private _color = _colors select _i;
				_colorActive = _color # 0;
				_colorNormal = _color # 1;
			};
			_position params ["_posX","_posY"];

			private _iconCtrl = _display ctrlCreate ["RscActivePicture",-1,_rowControlsGroup];
			_iconCtrl ctrlSetText _icon;
			_iconCtrl ctrlSetTooltip _tooltip;
			_iconCtrl ctrlSetTextColor _colorNormal;
			_iconCtrl ctrlSetActiveColor _colorActive;
			_iconCtrl ctrlSetPosition [["W",_posX] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["H",_posY] call MAZ_EZM_fnc_convertToGUI_GRIDFormat, ["W",_size] call MAZ_EZM_fnc_convertToGUI_GRIDFormat, ["H",_size] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];
			_iconCtrl ctrlCommit 0;
			
			_iconCtrl setVariable ["MAZ_EZM_iconActiveColor",_colorActive];
			_iconCtrl setVariable ["MAZ_EZM_iconNormalColor",_colorNormal];

			_iconCtrl ctrlAddEventHandler ["ButtonClick",{
				params ["_control"];
				private _controlGroup = ctrlParentControlsGroup _control;
				private _newValue = _control getVariable "MAZ_EZM_iconVariable";
				_controlGroup setVariable ["MAZ_EZM_iconSelectionData",_newValue];
				
				comment "Change old icon to normal";
				private _oldCtrl = _controlGroup getVariable "MAZ_EZM_iconSelected";
				_oldCtrl ctrlSetScale 1;
				_oldCtrl ctrlSetTextColor (_oldCtrl getVariable "MAZ_EZM_iconNormalColor");
				_oldCtrl ctrlCommit 0.2;

				comment "Change new icon to scaled and highlighted";
				_control ctrlSetScale 1.1;
				_control ctrlSetTextColor (_control getVariable "MAZ_EZM_iconActiveColor");
				_control ctrlCommit 0.2;
				_controlGroup setVariable ["MAZ_EZM_iconSelected",_control];
			}];
			_iconCtrl setVariable ["MAZ_EZM_iconVariable",_value];
			if(_value == _default) then {
				_rowControlsGroup setVariable ["MAZ_EZM_iconSelectionData",_value];
				_rowControlsGroup setVariable ["MAZ_EZM_iconSelected",_iconCtrl];
				_iconCtrl ctrlSetTextColor _colorActive;
				_iconCtrl ctrlSetScale 1.1;
				_iconCtrl ctrlCommit 0;
			};
		};

		_rowControlsGroup setVariable ["MAZ_EZM_getControlValue",{
			params ["_controlsGroup"];
			_controlsGroup getVariable "MAZ_EZM_iconSelectionData"
		}];

		_rowControlsGroup
	};

	MAZ_EZM_createAttribComboRow = {
		params ["_display","_label","_default","_settings"];
		_settings params ["_entries"];
		private _rowControlsGroup = [_display,_label] call MAZ_EZM_createAttributesRowBase;
		private _rowBG = _rowControlsGroup controlsGroupCtrl IDC_ATTRIBS_ROW_BG;
		ctrlDelete _rowBG;

		private _combo = _display ctrlCreate ["RscCombo",IDC_ATTRIBS_COMBO,_rowControlsGroup];
		_combo ctrlSetPosition [["W",9.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,0,["W",16.9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,(["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat)];
		_combo ctrlCommit 0;

		{
			_x params ["_value","_text","_tooltip","_icon","_iconColor"];

			private _index = _combo lbAdd _text;
			_combo lbSetData [_index,_value];
			_combo lbSetTooltip [_index,_tooltip];
			_combo lbSetPicture [_index,_icon];
			_combo lbSetPictureColor [_index,_iconColor];

			if(_value isEqualTo _default) then {
				_combo lbSetCurSel _index;
			};
		}forEach _entries;

		_rowControlsGroup setVariable ["MAZ_EZM_getControlValue",{
			params ["_controlsGroup"];
			private _combo = _controlsGroup controlsGroupCtrl IDC_ATTRIBS_COMBO;
			_combo lbData (lbCurSel _combo);
		}];

		_rowControlsGroup
	};

	MAZ_EZM_createAttribNewButton = {
		params ["_display","_label","_default","_settings"];
		_settings params ["_tooltip","_onButtonClick","_args"];
		private _existingButtons = _display getVariable ["MAZ_EZM_attribsButtons",[]];
		private _numOfButtons = count _existingButtons;

		private _newButton = _display ctrlCreate ["RscButtonMenu",IDC_ATTRIBS_CANCEL + (_numOfButtons + 1)];
		_newButton setVariable ['MAZ_EZM_attribsButtonClick',_onButtonClick];
		_newButton setVariable ['MAZ_EZM_attribsButtonArgs',_args];
		_newButton ctrlSetPositionX (["X",(28.5 - (5.1 * (_numOfButtons + 1)))] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_newButton ctrlSetPositionW (["W",5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_newButton ctrlSetPositionH (["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_newButton ctrlSetStructuredText parseText _label;
		_newButton ctrlSetTooltip _tooltip;
		_newButton ctrlAddEventhandler ["ButtonClick",{
			params ["_control"];
			private _display = ctrlParent _control;
			[_display,_control getVariable 'MAZ_EZM_attribsButtonArgs'] call (_control getVariable 'MAZ_EZM_attribsButtonClick');
		}];
		_newButton ctrlCommit 0;

		_existingButtons pushBack _newButton;
		_display setVariable ["MAZ_EZM_attribsButtons",_existingButtons];
	};

	MAZ_EZM_createAttribNewRespawnRow = {
		params ["_display","_label","_default","_settings"];
		_settings params ["_unit"];
		private _rowControlsGroup = [_display,_label] call MAZ_EZM_createAttributesRowBase;
		_rowControlsGroup ctrlSetPositionH (["H",2.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_rowControlsGroup ctrlCommit 0;

		private _rowLabel = _rowControlsGroup controlsGroupCtrl IDC_ATTRIBS_LABEL;
		private _text = ctrlText _rowLabel;
		_rowLabel ctrlSetStructuredText parseText (format ["<t size='0.75'>&#160;</t><br/>%1",_text]);
		_rowLabel ctrlSetPositionH (["H",2.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_rowLabel ctrlCommit 0;

		private _rowBG = _rowControlsGroup controlsGroupCtrl IDC_ATTRIBS_ROW_BG;
		_rowBG ctrlSetPositionH (["H",2.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		_rowBG ctrlCommit 0;

		private _respawnIDs = [1,0,2,3,4];
		private _respawnIcons = ["A3\UI_F_CURATOR\DATA\RscCommon\RscAttributeRespawnPosition\west_ca.paa","A3\UI_F_CURATOR\DATA\RscCommon\RscAttributeRespawnPosition\east_ca.paa","A3\UI_F_CURATOR\DATA\RscCommon\RscAttributeRespawnPosition\guer_ca.paa","A3\UI_F_CURATOR\DATA\RscCommon\RscAttributeRespawnPosition\civ_ca.paa","A3\3den\Data\Attributes\default_ca.paa"];
		private _toolTips = ["BLUFOR","OPFOR","INDEPENDENT","CIVILIAN","NONE"];
		private _posInfo = [
			[[11,0.25],2.0],
			[[14,0.25],2.0],
			[[17,0.25],2.0],
			[[20,0.25],2.0],
			[[23,0.5],1.5]
		];

		{
			private _respawnIcon = _respawnIcons select _forEachIndex;
			private _posData = _posInfo select _forEachIndex;
			private _tooltip = _toolTips select _forEachIndex;
			_posData params ["_pos","_size"];
			_pos params ["_posX","_posY"];

			private _side = [_x] call BIS_fnc_sideType;
			private _color = [_side] call BIS_fnc_sideColor;
			_color params ["_r","_g","_b","_a"];

			private _colorDefault = [_r,_g,_b,0.5];
			private _colorActive = _color;

			private _iconCtrl = _display ctrlCreate ["RscActivePicture",-1,_rowControlsGroup];
			_iconCtrl ctrlSetText _respawnIcon;
			_iconCtrl ctrlSetActiveColor _colorActive;
			_iconCtrl ctrlSetTooltip _tooltip;
			_iconCtrl ctrlSetTextColor _colorDefault;
			_iconCtrl ctrlSetPosition [["W",_posX] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["H",_posY] call MAZ_EZM_fnc_convertToGUI_GRIDFormat, ["W",_size] call MAZ_EZM_fnc_convertToGUI_GRIDFormat, ["H",_size] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];
			_iconCtrl ctrlCommit 0;

			_iconCtrl setVariable ["MAZ_EZM_iconNormalColor",_colorDefault];
			_iconCtrl setVariable ["MAZ_EZM_iconActiveColor",_colorActive];
			_iconCtrl setVariable ["MAZ_EZM_iconVariable",_x];

			_iconCtrl ctrlAddEventHandler ["ButtonClick",{
				params ["_control"];
				private _controlGroup = ctrlParentControlsGroup _control;
				private _newValue = _control getVariable "MAZ_EZM_iconVariable";
				_controlGroup setVariable ["MAZ_EZM_iconSelectionData",_newValue];
				
				comment "Change old icon to normal";
				private _oldCtrl = _controlGroup getVariable "MAZ_EZM_iconSelected";
				_oldCtrl ctrlSetScale 1;
				_oldCtrl ctrlSetTextColor (_oldCtrl getVariable "MAZ_EZM_iconNormalColor");
				_oldCtrl ctrlCommit 0.2;

				comment "Change new icon to scaled and highlighted";
				_control ctrlSetScale 1.1;
				_control ctrlSetTextColor (_control getVariable "MAZ_EZM_iconActiveColor");
				_control ctrlCommit 0.2;
				_controlGroup setVariable ["MAZ_EZM_iconSelected",_control];
			}];
			if(_x == _default) then {
				_rowControlsGroup setVariable ["MAZ_EZM_iconSelectionData",_x];
				_rowControlsGroup setVariable ["MAZ_EZM_iconSelected",_iconCtrl];
				_iconCtrl ctrlSetTextColor _colorActive;
				_iconCtrl ctrlSetScale 1.1;
				_iconCtrl ctrlCommit 0;
			};
		}forEach _respawnIDs;

		_rowControlsGroup setVariable ["MAZ_EZM_getControlValue",{
			params ["_controlsGroup"];
			_controlsGroup getVariable "MAZ_EZM_iconSelectionData"
		}];

		_rowControlsGroup
	};

	MAZ_EZM_createAttribToolboxRow = {
		params ["_display","_label","_default","_settings"];
		_settings params ["_strings"];
		private _rowControlsGroup = [_display,_label] call MAZ_EZM_createAttributesRowBase;

		private _rowToolbox = _display ctrlCreate ["RscToolbox",IDC_ATTRIBS_TOOLBOX,_rowControlsGroup];
		_rowToolbox ctrlSetPosition [["W",9.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,0,["W",16.9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];
		_rowToolbox ctrlSetTextColor [1,1,1,1];
		_rowToolbox ctrlSetBackgroundColor [0,0,0,0.7];
		_rowToolbox ctrlCommit 0;
		lbClear _rowToolbox;

		{
			_x params ["_text",["_tooltip",""]];

			private _index = _rowToolbox lbAdd _text;
			_rowToolbox lbSetTooltip [_index, _tooltip];
		} forEach _strings;

		if(_default isEqualType false) then {
			_default = parseNumber _default;
		};
		_rowToolbox lbSetCurSel _default;

		_rowControlsGroup setVariable ["MAZ_EZM_getControlValue", {
			params ["_controlsGroup"];
			private _value = lbCurSel (_controlsGroup controlsGroupCtrl IDC_ATTRIBS_TOOLBOX);
			_value = _value > 0;

			_value
		}];

		_rowControlsGroup
	};

	MAZ_EZM_fnc_changeAttribsDisplayHeights = {
		params ["_display", "_maxHeight"];
		private _ctrlContent = _display displayCtrl IDC_ATTRIBS_CONTENT;
		if(_maxHeight == -1) then {
			_maxHeight = 30;
		};
		_maxHeight = ["H",_maxHeight] call MAZ_EZM_fnc_convertToGUI_GRIDFormat;

		ctrlPosition _ctrlContent params ["_posX","","_posW","_posH"];

		if(_posH > _maxHeight) then {
			_posH = _maxHeight;
			_ctrlContent ctrlSetPositionH _posH;

			_ctrlContent ctrlSetPositionX (_posX - (["W",0.25] call MAZ_EZM_fnc_convertToGUI_GRIDFormat));
			_ctrlContent ctrlSetPositionW (_posW + (["W",0.6] call MAZ_EZM_fnc_convertToGUI_GRIDFormat));
		};
		_ctrlContent ctrlSetPositionY (0.5 - (_posH / 2));
		_ctrlContent ctrlCommit 0;

		private _ctrlTitle = _display displayCtrl IDC_ATTRIBS_TITLE;
		_ctrlTitle ctrlSetPositionY (0.5 - (_posH / 2) - (["H",1.6] call MAZ_EZM_fnc_convertToGUI_GRIDFormat));
		_ctrlTitle ctrlCommit 0;

		private _ctrlBG = _display displayCtrl IDC_ATTRIBS_BG;
		_ctrlBG ctrlSetPositionY (0.5 - (_posH / 2) - (["H",0.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat));
		_ctrlBG ctrlSetPositionH (_posH + (["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat));
		_ctrlBG ctrlCommit 0;

		private _buttonHeight = (0.5 + (_posH / 2) + (["H",0.6] call MAZ_EZM_fnc_convertToGUI_GRIDFormat));

		private _ctrlOkBtn = _display displayCtrl IDC_ATTRIBS_CONFIRM;
		_ctrlOkBtn ctrlSetPositionY _buttonHeight;
		_ctrlOkBtn ctrlCommit 0;

		private _ctrlCancelBtn = _display displayCtrl IDC_ATTRIBS_CANCEL;
		_ctrlCancelBtn ctrlSetPositionY _buttonHeight;
		_ctrlCancelBtn ctrlCommit 0;

		private _additionalButtons = _display getVariable ["MAZ_EZM_attribsButtons",[]];
		{
			_x ctrlSetPositionY _buttonHeight;
			_x ctrlCommit 0;
		}forEach _additionalButtons;
	};
	
	MAZ_EZM_createAttributesDialog = {
		params [
			["_title","Edit Attributes",[""]],
			["_dialogData",[],[[]]],
			["_onCancel",{},[{}]],
			["_onConfirm",{},[{}]],
			["_args",[]],
			["_maxHeight",-1,[-1]]
		];

		private _dialogInfo = [];
		{
			copyToClipboard (str _x);
			_x params [
				["_typeData","",[""]],
				["_label","",["",[]]],
				["_settings",[],[[]]]
			];

			(toUpper _typeData) splitString ":" params ["_type","_subType"];
			private ["_defaultVal","_dialogCreator","_dialogSettings","_isButton"];
			switch (_type) do {
				case "EDIT": {
					_settings params ["_default"];
					_defaultVal = _default;
					_dialogCreator = MAZ_EZM_createAttribEditRow;
					_dialogSettings = [];
					_isButton = false;
				};
				case "EDITMULTI": {
					_settings params ["_default","_align"];
					_defaultVal = _default;
					_dialogCreator = MAZ_EZM_createAttribEditMultiRow;
					_dialogSettings = [_align];
					_isButton = false;
				};
				case "SLIDER": {
					_settings params ["_default","_min","_max"];
					_defaultVal = _default;
					_dialogSettings = [_min,_max];
					_dialogCreator = MAZ_EZM_createAttribSliderRow;
					_isButton = false;
				};
				case "SLIDEREDIT": {
					_settings params ["_default","_min","_max",["_isPercent",true]];
					_defaultVal = _default;
					_dialogSettings = [_min,_max,_isPercent];
					_dialogCreator = MAZ_EZM_createAttribSliderWithEditRow;
					_isButton = false;
				};
				case "ICONS": {
					_settings params ["_default","_values","_icons","_tooltips","_positions","_sizes",["_height",2.5],["_colors",[]]];
					_defaultVal = _default;
					_dialogSettings = [_values,_icons,_tooltips,_positions,_sizes,_height,_colors];
					_dialogCreator = MAZ_EZM_createAttribIconsRow;
					_isButton = false;
				};
				case "COMBO": {
					_settings params ["_default","_values","_labels","_tooltips","_icons","_iconsColors"];
					_defaultVal = _default;
					_entries = [];
					for "_i" from 0 to (count _labels - 1) do {
						private _value = str _i;
						if((count _values -1) >= _i) then {
							_value = _values select _i;
						};
						private _text = _labels select _i;
						private _tooltip = "";
						if((count _tooltips -1) >= _i) then {
							_tooltip = _tooltips select _i;
						};
						private _icon = "";
						if((count _icons -1) >= _i) then {
							_icon = _icons select _i;
						};
						private _iconColor = [1,1,1,1];
						if((count _iconsColors -1) >= _i) then {
							_iconColor = _iconsColors select _i;
							{
								if(_x isEqualType "") then {
									private _color = call (compile _x);
									_iconColor set [_forEachIndex,_color];
								};
							}forEach _iconColor;
						};

						_entries pushBack [_value,_text,_tooltip,_icon,_iconColor];
					};
					_dialogSettings = [_entries];
					_dialogCreator = MAZ_EZM_createAttribComboRow;
					_isButton = false;
				};
				case "RESPAWN": {
					_settings params ["_default","_unit"];
					_defaultVal = _default;
					_dialogSettings = [_unit];
					_dialogCreator = MAZ_EZM_createAttribNewRespawnRow;
					_isButton = false;
				};
				case "NEWBUTTON": {
					_settings params ["_tooltip","_onButtonClick","_args"];
					_dialogSettings = [_tooltip,_onButtonClick,_args];
					_defaultVal = 0;
					_dialogCreator = MAZ_EZM_createAttribNewButton;
					_isButton = true;
				};
				case "TOOLBOX": {
					_settings params ["_default","_strings"];
					_defaultVal = _default;
					_dialogSettings = [_strings];
					_dialogCreator = MAZ_EZM_createAttribToolboxRow;
					_isButton = false;
				};
			};
			_dialogInfo pushBack [_dialogCreator,_label,_defaultVal,_dialogSettings,_isButton];
		}forEach _dialogData;

		private _display = [_title] call MAZ_EZM_createAttributesMenuBase;
		_display setVariable ['MAZ_EZM_onAttribsCancel',_onCancel];
		_display setVariable ['MAZ_EZM_onAttribsConfirm',_onConfirm];

		private _controls = [];
		private _yOffset = 0;
		{
			_x params ["_dialogFunction","_label","_default","_settings",["_isButton",false]];
			if(_isButton) then {
				private _dialogControlGroup = [_display,_label,nil,_settings] call _dialogFunction;
			} else {
				private _dialogControlGroup = [_display,_label,_default,_settings] call _dialogFunction;
				_dialogControlGroup ctrlSetPositionY _yOffset;
				_dialogControlGroup ctrlCommit 0;

				_yOffset = _yOffset + (ctrlPosition _dialogControlGroup select 3) + (["H",0.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);

				_controls pushBack _dialogControlGroup;
			};
		}forEach _dialogInfo;
		
		private _displayContent = _display displayCtrl IDC_ATTRIBS_CONTENT;
		_displayContent ctrlSetPositionH (_yOffset - (["H",0.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat));
		_displayContent ctrlCommit 0;

		[_display,_maxHeight] call MAZ_EZM_fnc_changeAttribsDisplayHeights;

		_display setVariable ["MAZ_EZM_attributesDialogInfo",[_display,_controls,_args]];
	};

	MAZ_EZM_applyCreateRespawnToUnitAttribs = {
		params ["_unit","_respawn"];
		private _currentRespawn = _unit getVariable ["MAZ_EZM_respawnType",4];
		if(_currentRespawn == _respawn) exitWith {};
		private _respawnInfo = _unit getVariable "MAZ_EZM_respawnPosition";
		if(!isNil "_respawnInfo") then {
			_respawnInfo call BIS_fnc_removeRespawnPosition;
		};
		if(_respawn == 4) exitWith {
			_unit setVariable ["MAZ_EZM_respawnPosition",nil,true];
			_unit setVariable ["MAZ_EZM_respawnType",4,true];
		};
		private _respawnSide = [_respawn] call BIS_fnc_sideType;
		private _respawnName = "";
		if(typeOf _unit isKindOf "CAManBase") then {
			_respawnName = name _unit;
		} else {
			_respawnName = getText (configFile >> "CfgVehicles" >> typeOf _unit >> "displayName")
		};
		private _respawnData = [_respawnSide,_unit,_respawnName] call BIS_fnc_addRespawnPosition;
		_unit setVariable ["MAZ_EZM_respawnPosition",_respawnData,true];
		_unit setVariable ["MAZ_EZM_respawnType",_respawn,true];
	};

	MAZ_EZM_applyAttributeChangesToMan = {
		params ["_unit","_attributes"];
		_attributes params ["_name","_rank","_stance","_health","_skill","_respawn"];
		[_unit,_name] remoteExec ['setName',0,_unit];
		_unit setRank _rank;
		_unit setUnitPos _stance;
		MAZ_EZM_stanceForAI = _stance;
		_unit setDamage (1 - _health);
		if(!(_unit getVariable ["MAZ_EZM_doesHaveCustomSkills",false])) then {
			_unit setSkill _skill;
		};

		[_unit,_respawn] call MAZ_EZM_applyCreateRespawnToUnitAttribs;
	};

	MAZ_EZM_applySkillsToUnit = {
		params ["_unit","_skillsData"];
		{
			_unit setSkill [_x,_skillsData select _forEachIndex];
		}forEach ["aimingAccuracy","aimingShake","aimingSpeed","endurance","spotDistance","spotTime","courage","reloadSpeed","commanding","general"];
		_unit setVariable ["MAZ_EZM_doesHaveCustomSkills",true,true];
	};

	MAZ_EZM_createSkillsDialog = {
		params ["_unit"];
		sleep 0.1;
		[format ["EDIT SKILLS %1",toUpper (getText (configFile >> "CfgVehicles" >> typeOf _unit >> "displayName"))],[
			[
				"SLIDEREDIT",
				"Accuracy:",
				[[(_unit skill "aimingAccuracy"),2] call BIS_fnc_cutDecimals,0,1,true]
			],
			[
				"SLIDEREDIT",
				"Aim Shake:",
				[[(_unit skill "aimingShake"),2] call BIS_fnc_cutDecimals,0,1,true]
			],
			[
				"SLIDEREDIT",
				"Aiming Speed:",
				[[(_unit skill "aimingSpeed"),2] call BIS_fnc_cutDecimals,0,1,true]
			],
			[
				"SLIDEREDIT",
				"Endurance:",
				[[(_unit skill "endurance"),2] call BIS_fnc_cutDecimals,0,1,true]
			],
			[
				"SLIDEREDIT",
				"Spotting Distance:",
				[[(_unit skill "spotDistance"),2] call BIS_fnc_cutDecimals,0,1,true]
			],
			[
				"SLIDEREDIT",
				"Spotting Time:",
				[[(_unit skill "spotTime"),2] call BIS_fnc_cutDecimals,0,1,true]
			],
			[
				"SLIDEREDIT",
				"Courage:",
				[[(_unit skill "courage"),2] call BIS_fnc_cutDecimals,0,1,true]
			],
			[
				"SLIDEREDIT",
				"Reload Speed:",
				[[(_unit skill "reloadSpeed"),2] call BIS_fnc_cutDecimals,0,1,true]
			],
			[
				"SLIDEREDIT",
				"Commanding:",
				[[(_unit skill "commanding"),2] call BIS_fnc_cutDecimals,0,1,true]
			],
			[
				"SLIDEREDIT",
				"General Skill:",
				[[(_unit skill "general"),2] call BIS_fnc_cutDecimals,0,1,true]
			]
		],{
			params ["_display","_values","_args"];
			_display closeDisplay 1;
		},{
			params ["_display","_values","_args"];
			_display closeDisplay 0;
			[_args,_values] call MAZ_EZM_applySkillsToUnit;
		},_unit] call MAZ_EZM_createAttributesDialog;
	};

	MAZ_EZM_applyToggleAIToUnit = {
		params ["_unit","_aiData"];
		{
			private _setting = _aiData select _forEachIndex;
			if(_setting) then {
				_unit enableAI _x;
			} else {
				_unit disableAI _x;
			};
		}forEach [
			"AIMINGERROR",
			"ANIM",
			"AUTOCOMBAT",
			"AUTOTARGET",
			"COVER",
			"FSM",
			"LIGHTS",
			"MINEDETECTION",
			"MOVE",
			"NVG",
			"PATH",
			"RADIOPROTOCOL",
			"SUPPRESSION",
			"TARGET",
			"WEAPONAIM"
		];
	};

	MAZ_EZM_createToggleAIDialog = {
		params ["_unit"];
		sleep 0.1;
		[format ["TOGGLE %1 AI",toUpper (getText (configFile >> "CfgVehicles" >> typeOf _unit >> "displayName"))],[
			[
				"TOOLBOX",
				["AIMING ERROR:","Prevents AI's aiming from being distracted by its shooting, moving, turning, reloading, hit, injury, fatigue, suppression or concealed / lost target."],
				[
					_unit checkAIFeature "AIMINGERROR",
					["DISABLE","ENABLE"]
				]
			],
			[
				"TOOLBOX",
				["ANIMATION:","Disables all animations of the unit. Completely freezes the unit, including breathing and blinking. No move command works until the unit is unfrozen."],
				[
					_unit checkAIFeature "ANIM",
					["DISABLE","ENABLE"]
				]
			],
			[
				"TOOLBOX",
				["AUTO-COMBAT:","Disables autonomous switching to 'COMBAT' AI Behaviour when in danger."],
				[
					_unit checkAIFeature "AUTOCOMBAT",
					["DISABLE","ENABLE"]
				]
			],
			[
				"TOOLBOX",
				["AUTO-TARGET:","Essentially makes single units without a group 'deaf'. The unit still goes prone and combat ready if it hears gunfire. \nIt will not turn around when gunfire comes from behind, but if an enemy walks in front of it it will target the enemy and fire as normal."],
				[
					_unit checkAIFeature "AUTOTARGET",
					["DISABLE","ENABLE"]
				]
			],
			[
				"TOOLBOX",
				["COVER:","Disables usage of cover positions by the AI."],
				[
					_unit checkAIFeature "COVER",
					["DISABLE","ENABLE"]
				]
			],
			[
				"TOOLBOX",
				["FSM:","Disables the attached FSM scripts which are responsible for the AI behaviour. \nEnemies react slower to enemy fire and the enemy stops using hand signals."],
				[
					_unit checkAIFeature "FSM",
					["DISABLE","ENABLE"]
				]
			],
			[
				"TOOLBOX",
				["LIGHTS:","Stops AI from operating vehicle headlights and collision lights."],
				[
					_unit checkAIFeature "LIGHTS",
					["DISABLE","ENABLE"]
				]
			],
			[
				"TOOLBOX",
				["MINE DETECTION:","Disable AI's mine detection."],
				[
					_unit checkAIFeature "MINEDETECTION",
					["DISABLE","ENABLE"]
				]
			],
			[
				"TOOLBOX",
				["MOVE:","This will stop units from turning and moving, including vehicles. \nUnits will still change stance and fire at the enemy if the enemy happens to walk right in front of the barrel."],
				[
					_unit checkAIFeature "MOVE",
					["DISABLE","ENABLE"]
				]
			],
			[
				"TOOLBOX",
				["NVG:","Stops AI from putting on NVGs (but not from taking them off)."],
				[
					_unit checkAIFeature "NVG",
					["DISABLE","ENABLE"]
				]
			],
			[
				"TOOLBOX",
				["PATH:","Stops the AI's movement but not the target alignment."],
				[
					_unit checkAIFeature "PATH",
					["DISABLE","ENABLE"]
				]
			],
			[
				"TOOLBOX",
				["RADIO:","Stops AI from talking and texting while still being able to issue orders."],
				[
					_unit checkAIFeature "RADIOPROTOCOL",
					["DISABLE","ENABLE"]
				]
			],
			[
				"TOOLBOX",
				["SUPPRESSION:","Prevents AI from being suppressed."],
				[
					_unit checkAIFeature "SUPPRESSION",
					["DISABLE","ENABLE"]
				]
			],
			[
				"TOOLBOX",
				["TARGET:","Prevents units from engaging targets. Units still move around for cover, but will not hunt down enemies. \nWorks in groups as well."],
				[
					_unit checkAIFeature "TARGET",
					["DISABLE","ENABLE"]
				]
			],
			[
				"TOOLBOX",
				["WEAPON AIM:","Disables weapon aiming."],
				[
					_unit checkAIFeature "WEAPONAIM",
					["DISABLE","ENABLE"]
				]
			]
		],{
			params ["_display","_values","_args"];
			_display closeDisplay 1;
		},{
			params ["_display","_values","_args"];
			_display closeDisplay 0;
			[_args,_values] call MAZ_EZM_applyToggleAIToUnit;
		},_unit] call MAZ_EZM_createAttributesDialog;
	};

	MAZ_EZM_createManAttributesDialog = {
		params ["_entity"];
		if(dialog) then {
			closeDialog 2;
		};
		[_entity] spawn {
			params ["_entity"];
			sleep 0.1;

			[format ["EDIT %1",toUpper (getText (configFile >> "CfgVehicles" >> typeOf _entity >> "displayName"))],[
				[
					"EDIT",
					"Name:",
					[name _entity]
				],
				[
					"ICONS",
					"Rank:",
					[
						rank _entity,
						[
							"PRIVATE",
							"CORPORAL",
							"SERGEANT",
							"LIEUTENANT",
							"CAPTAIN",
							"MAJOR",
							"COLONEL"
						],[
							"A3\ui_f\data\GUI\cfg\Ranks\private_gs.paa",
							"A3\ui_f\data\GUI\cfg\Ranks\corporal_gs.paa",
							"A3\ui_f\data\GUI\cfg\Ranks\sergeant_gs.paa",
							"A3\ui_f\data\GUI\cfg\Ranks\lieutenant_gs.paa",
							"A3\ui_f\data\GUI\cfg\Ranks\captain_gs.paa",
							"A3\ui_f\data\GUI\cfg\Ranks\major_gs.paa",
							"A3\ui_f\data\GUI\cfg\Ranks\colonel_gs.paa"
						],[
							"",
							"",
							"",
							"",
							"",
							"",
							""
						],[
							[11,0.5],
							[13,0.5],
							[15,0.5],
							[17,0.5],
							[19,0.5],
							[21,0.5],
							[23,0.5]
						],[
							1.5,1.5,1.5,1.5,1.5,1.5,1.5
						]
					]
				],
				[
					"ICONS",
					"Stance:",
					[
						unitPos _entity,
						[
							"DOWN",
							"MIDDLE",
							"UP",
							"AUTO"
						],[
							"A3\3den\Data\Attributes\Stance\down_ca.paa",
							"A3\3den\Data\Attributes\Stance\middle_ca.paa",
							"A3\3den\Data\Attributes\Stance\up_ca.paa",
							"A3\3den\Data\Attributes\default_ca.paa"
						],[
							"",
							"",
							"",
							""
						],[
							[13,0],
							[16,0],
							[19,0],
							[24,0.4]
						],[
							2.5,2.5,2.5,1.5
						]
					]
				],
				[
					"SLIDEREDIT",
					"Health/Armor:",
					[[(1 - damage _entity),2] call BIS_fnc_cutDecimals,0,1,true]
				],
				[
					"SLIDEREDIT",
					"Skill:",
					[skill _entity,0,1,true]
				],
				[
					"RESPAWN",
					"Respawn on Unit For:",
					[
						_entity getVariable ["MAZ_EZM_respawnType",4],
						_entity
					]
				],
				[ 
					"NEWBUTTON", 
					"ARSENAL", 
					[ 
						"Edit Unit's arsenal loadout.", 
						{
							params ["_display","_args"];
							_display closeDisplay 0;
							["Preload"] call BIS_fnc_arsenal;
							["Open",[true,nil,_args]] call BIS_fnc_arsenal;
						}, 
						_entity
					] 
				],
				[ 
					"NEWBUTTON", 
					"SKILLS", 
					[ 
						"Edit Unit's skills.", 
						{
							params ["_display","_args"];
							_display closeDisplay 0;
							[_args] spawn MAZ_EZM_createSkillsDialog;
						}, 
						_entity
					] 
				],
				[
					"NEWBUTTON", 
					"EDIT AI", 
					[ 
						"Toggle AI.", 
						{
							params ["_display","_args"];
							_display closeDisplay 0;
							[_args] spawn MAZ_EZM_createToggleAIDialog;
						}, 
						_entity
					] 
				]
			],{
				params ["_display","_values","_args"];
				_display closeDisplay 1;
			},{
				params ["_display","_values","_args"];
				[_args,_values] call MAZ_EZM_applyAttributeChangesToMan;
				_display closeDisplay 0;
			},_entity] call MAZ_EZM_createAttributesDialog;
		};
	};

	MAZ_EZM_applyAttributeChangesToPlayer = {
		params ["_unit","_values"];
		_values params ["_rank","_respawnType"];
		_unit setRank _rank;
		[_unit,_respawnType] call MAZ_EZM_applyCreateRespawnToUnitAttribs;
	};

	MAZ_EZM_createPlayerAttributesDialog = {
		params ["_entity"];
		if(dialog) then {
			closeDialog 2;
		};
		[_entity] spawn {
			params ["_entity"];
			sleep 0.1;
			
			[format ["EDIT %1",toUpper (name _entity)],[
				[
					"ICONS",
					"Rank:",
					[
						rank _entity,
						[
							"PRIVATE",
							"CORPORAL",
							"SERGEANT",
							"LIEUTENANT",
							"CAPTAIN",
							"MAJOR",
							"COLONEL"
						],[
							"A3\ui_f\data\GUI\cfg\Ranks\private_gs.paa",
							"A3\ui_f\data\GUI\cfg\Ranks\corporal_gs.paa",
							"A3\ui_f\data\GUI\cfg\Ranks\sergeant_gs.paa",
							"A3\ui_f\data\GUI\cfg\Ranks\lieutenant_gs.paa",
							"A3\ui_f\data\GUI\cfg\Ranks\captain_gs.paa",
							"A3\ui_f\data\GUI\cfg\Ranks\major_gs.paa",
							"A3\ui_f\data\GUI\cfg\Ranks\colonel_gs.paa"
						],[
							"",
							"",
							"",
							"",
							"",
							"",
							""
						],[
							[11,0.5],
							[13,0.5],
							[15,0.5],
							[17,0.5],
							[19,0.5],
							[21,0.5],
							[23,0.5]
						],[
							1.5,1.5,1.5,1.5,1.5,1.5,1.5
						]
					]
				],
				[
					"RESPAWN",
					"Respawn on Player For:",
					[
						_entity getVariable ["MAZ_EZM_respawnType",4],
						_entity
					]
				],
				[ 
					"NEWBUTTON", 
					"HEAL", 
					[ 
						"Heals the player and revives them if possible.", 
						{
							params ["_display","_args"];
							_display closeDisplay 0;
							[_args] spawn MAZ_EZM_fnc_healAndReviveModule;
						}, 
						_entity
					] 
				]
			],{
				params ["_display","_values","_args"];
				_display closeDisplay 1;
			},{
				params ["_display","_values","_args"];
				[_args,_values] call MAZ_EZM_applyAttributeChangesToPlayer;
				_display closeDisplay 0;
			},_entity] call MAZ_EZM_createAttributesDialog;
		};
	};

	MAZ_EZM_applyAttributeChangesToGroup = {
		params ["_group","_attributes"];
		_attributes params ["_name","_skill","_form","_beh","_comMode","_sped","_stance"];
		_group setGroupIdGlobal [_name];
		_group setFormation _form;
		_group setBehaviour _beh;
		_group setCombatMode _comMode;
		_group setSpeedMode _sped;
		{
			_x setSkill _skill;
			_x setUnitPos _stance;
		}forEach (units _group);
	};

	MAZ_EZM_createGroupAttributesDialog = {
		params ["_group"];
		if(dialog) then {
			closeDialog 2;
		};
		[_group] spawn {
			params ["_group"];
			sleep 0.1;
			[format ["EDIT %1",toUpper (groupID _group)],[
				[ 
					"EDIT", 
					"Edit Callsign:", 
					[groupID _group] 
				], 
				[
					"SLIDEREDIT",
					"Set Skill:",
					[skill (leader _group),0,1,true]
				],
				[
					"ICONS",
					"Set Formation:",
					[
						formation _group,
						[
							"WEDGE",
							"VEE",
							"LINE",
							"COLUMN",
							"FILE",
							"STAG COLUMN",
							"ECH LEFT",
							"ECH RIGHT",
							"DIAMOND"
						],[
							"A3\ui_f_curator\data\RscCommon\RscAttributeFormation\wedge_ca.paa",
							"A3\ui_f_curator\data\RscCommon\RscAttributeFormation\vee_ca.paa",
							"A3\ui_f_curator\data\RscCommon\RscAttributeFormation\line_ca.paa",
							"A3\ui_f_curator\data\RscCommon\RscAttributeFormation\column_ca.paa",
							"A3\ui_f_curator\data\RscCommon\RscAttributeFormation\file_ca.paa",
							"A3\ui_f_curator\data\RscCommon\RscAttributeFormation\stag_column_ca.paa",
							"A3\ui_f_curator\data\RscCommon\RscAttributeFormation\ech_left_ca.paa",
							"A3\ui_f_curator\data\RscCommon\RscAttributeFormation\ech_right_ca.paa",
							"A3\ui_f_curator\data\RscCommon\RscAttributeFormation\diamond_ca.paa"
						],[
							"WEDGE",
							"VEE",
							"LINE",
							"COLUMN",
							"FILE",
							"STAGGERED COLUMN",
							"ECHELON LEFT",
							"ECHELON RIGHT",
							"DIAMOND"
						],[
							[10,0],
							[13,0],
							[16,0],
							[19,0],
							[22,0],
							[12,2],
							[15,2],
							[18,2],
							[21,2]
						],[
							2.5,
							2.5,
							2.5,
							2.5,
							2.5,
							2.5,
							2.5,
							2.5,
							2.5
						],
						4.5
					]
				],
				[
					"ICONS",
					"Set Behaviour:",
					[
						behaviour (leader _group),
						[
							"CARELESS",
							"SAFE",
							"AWARE",
							"COMBAT",
							"STEALTH"
						],[
							"A3\ui_f_curator\data\RscCommon\RscAttributeBehaviour\safe_ca.paa",
							"A3\ui_f_curator\data\RscCommon\RscAttributeBehaviour\safe_ca.paa",
							"A3\ui_f_curator\data\RscCommon\RscAttributeBehaviour\aware_ca.paa",
							"A3\ui_f_curator\data\RscCommon\RscAttributeBehaviour\combat_ca.paa",
							"A3\ui_f_curator\data\RscCommon\RscAttributeBehaviour\stealth_ca.paa"
						],[
							"CARELESS",
							"SAFE",
							"AWARE",
							"COMBAT",
							"STEALTH"
						],[
							[11,0.3],
							[14,0.3],
							[17,0.3],
							[20,0.3],
							[23,0.3]
						],[
							1.75,1.75,1.75,1.75,1.75
						],
						2.5,
						[
							[[0,1,0,1],[0,0.5,0,0.7]],
							[[0,1,0,1],[0,0.5,0,0.7]],
							[[1,1,0,1],[0.5,0.5,0,0.7]],
							[[1,0,0,1],[0.5,0,0,0.7]],
							[[0,1,1,1],[0,0.5,0.5,0.7]]
						]
					]
				],
				[
					"ICONS",
					"Set Combat Mode:",
					[
						combatMode _group,
						[
							"BLUE",
							"GREEN",
							"WHITE",
							"YELLOW",
							"RED"
						],[
							"A3\ui_f_curator\data\RscCommon\RscAttributeBehaviour\safe_ca.paa",
							"A3\ui_f_curator\data\RscCommon\RscAttributeBehaviour\aware_ca.paa",
							"A3\ui_f_curator\data\RscCommon\RscAttributeBehaviour\aware_ca.paa",
							"A3\ui_f_curator\data\RscCommon\RscAttributeBehaviour\combat_ca.paa",
							"A3\ui_f_curator\data\RscCommon\RscAttributeBehaviour\combat_ca.paa"
						],[
							"Forced Hold Fire",
							"Do Not Fire Unless Fired Upon, Keep Formation",
							"Do Not Fire Unless Fired Upon",
							"Open Fire, Keep Formation",
							"Open Fire"
						],[
							[11,0.3],
							[14,0.3],
							[17,0.3],
							[20,0.3],
							[23,0.3]
						],[
							1.75,1.75,1.75,1.75,1.75
						],
						2.5,
						[
							[[0,1,0,1],[0,0.5,0,0.7]],
							[[1,1,0,1],[0.5,0.5,0,0.7]],
							[[1,1,0,1],[0.5,0.5,0,0.7]],
							[[1,0,0,1],[0.5,0,0,0.7]],
							[[1,0,0,1],[0.5,0,0,0.7]]
						]
					]
				],
				[
					"ICONS",
					"Set Speed:",
					[
						speedMode _group,
						[
							"LIMITED",
							"NORMAL",
							"FULL"
						],[
							"A3\ui_f_curator\data\RscCommon\RscAttributeSpeedMode\limited_ca.paa",
							"A3\ui_f_curator\data\RscCommon\RscAttributeSpeedMode\normal_ca.paa",
							"A3\ui_f_curator\data\RscCommon\RscAttributeSpeedMode\full_ca.paa"
						],[
							"",
							"",
							""
						],[
							[13,0],
							[16,0],
							[19,0]
						],[
							2.5,2.5,2.5
						],
						2.5
					]
				],
				[
					"ICONS",
					"Set Stance:",
					[
						unitPos (leader _group),
						[
							"DOWN",
							"MIDDLE",
							"UP",
							"AUTO"
						],[
							"A3\3den\Data\Attributes\Stance\down_ca.paa",
							"A3\3den\Data\Attributes\Stance\middle_ca.paa",
							"A3\3den\Data\Attributes\Stance\up_ca.paa",
							"A3\3den\Data\Attributes\default_ca.paa"
						],[
							"",
							"",
							"",
							"AUTO"
						],[
							[13,0],
							[16,0],
							[19,0],
							[24,0.4]
						],[
							2.5,2.5,2.5,1.5
						]
					]
				]
			],{
				params ["_display","_values","_args"];
				_display closeDisplay 1;
			},{
				params ["_display","_values","_args"];
				[_args,_values] call MAZ_EZM_applyAttributeChangesToGroup;
				_display closeDisplay 0;
			},_group] call MAZ_EZM_createAttributesDialog;
		};
	};

	MAZ_EZM_applyDamagesToVehicle = {
		params ["_vehicle","_damagesData"];
		private _damages = getAllHitPointsDamage _vehicle;
		_damages params ["_hitPoints","_sections","_damage"];
		{
			_vehicle setHitPointDamage [(_hitpoints select _forEachIndex),_x];
		}forEach _damagesData;
	};

	MAZ_EZM_createDamageDialog = {
		params ["_vehicle"];
		private _damages = getAllHitPointsDamage _vehicle;
		_damages params ["_hitPoints","_sections","_damage"];
		private _dialogData = [];
		{
			_dialogData pushBack [
				"SLIDEREDIT",
				_x,
				[[_damage select _forEachIndex,2] call BIS_fnc_cutDecimals,0,1,true]
			];
		}forEach _hitPoints;

		[format ["EDIT DAMAGE %1",toUpper (getText (configFile >> "CfgVehicles" >> typeOf _vehicle >> "displayName"))],
		_dialogData,
		{
			params ["_display","_values","_args"];
			_display closeDisplay 1;
		},{
			params ["_display","_values","_args"];
			_display closeDisplay 0;
			[_args,_values] call MAZ_EZM_applyDamagesToVehicle;
		},_vehicle,25] call MAZ_EZM_createAttributesDialog;
	};

	MAZ_EZM_createVehicleRespawn = {
		params ["_vehicle","_values"];
		_values params ["_respawnDelay","_abandonDelay","_numOfRespawns","_distAbandon"];
		private _logic = (createGroup [sideLogic,true]) createUnit ["ModuleRespawnVehicle_F",position _vehicle, [], 0, "NONE"];	
		_logic setVariable ["Delay",str (round _respawnDelay),true];	
		_logic setVariable ["DesertedDelay",str (round _abandonDelay),true];	
		_logic setVariable ["DesertedDistance",str (round _distAbandon),true];	
		_logic setVariable ["RespawnCount",str (round _numOfRespawns),true];	
		_logic setVariable ["Position","0",true];	
		_logic setVariable ["PositionType","0",true];	
		_logic setVariable ["Wreck","1",true];	
		_logic setVariable ["ShowNotification","1",true];	
		_logic setVariable ["ForcedRespawn","0",true];	
		_logic setVariable ["RespawnWhenDisabled",true,true];	
		_logic synchronizeObjectsAdd [_vehicle];	
		[[_logic],{	
			params ["_logic"];	
			sleep 0.1;	
			[_logic,[],true] call BIS_fnc_moduleRespawnVehicle;
			[_vehicle,round _respawnDelay,round _abandonDelay,round _numOfRespawns,{},0,2,1,true,true,round _distAbandon,true] call BIS_fnc_moduleRespawnVehicle;
		}] remoteExec ['spawn',2];
	};

	MAZ_EZM_createVehicleRespawnDialog = {
		params ["_vehicle"];
		[format ["CREATE RESPAWNING %1",toUpper (getText (configFile >> "CfgVehicles" >> typeOf _vehicle >> "displayName"))],[
			[
				"SLIDEREDIT",
				"Respawn Delay:",
				[15,10,60,false]
			],
			[
				"SLIDEREDIT",
				["Deserted Delay:","How long it takes to respawn when abandoned (no crew)."],
				[600,600,1800,false]
			],
			[
				"SLIDEREDIT",
				["Number of Respawns:","How many times the vehicle can respawn (-1 is infinite)."],
				[-1,-1,30,false]
			],
			[
				"SLIDEREDIT",
				["Dist from Players Deserted:","How far players must be before the vehicle can be considered abandonded."],
				[3000,3000,12000,false]
			]
		],{
			params ["_display","_values","_args"];
			_display closeDisplay 1;
		},{
			params ["_display","_values","_args"];
			[_args,_values] call MAZ_EZM_createVehicleRespawn;
			_display closeDisplay 0;
		},_vehicle] call MAZ_EZM_createAttributesDialog;
	};

	MAZ_EZM_applyAttributeChangesToLandVehicle = {
		params ["_vehicle","_attributes"];
		_attributes params [["_health",damage _vehicle],["_fuel",fuel _vehicle],["_lockState",locked _vehicle],["_engineState",isEngineOn _vehicle],["_lightState",isLightOn _vehicle],"_respawn"];
		_vehicle setDamage (1-_health);
		_vehicle setFuel _fuel;
		_vehicle lock _lockState;
		_vehicle engineOn _engineState;
		_vehicle setPilotLight _lightState;

		[_vehicle,_respawn] call MAZ_EZM_applyCreateRespawnToUnitAttribs;
	};

	MAZ_EZM_createLandVehicleAttributesDialog = {
		params ["_vehicle"];
		if(dialog) then {
			closeDialog 2;
		};
		[_vehicle] spawn {
			params ["_vehicle"];
			sleep 0.1;
			[format ["EDIT %1",toUpper (getText (configFile >> "CfgVehicles" >> typeOf _vehicle >> "displayName"))],[ 
				[
					"SLIDEREDIT",
					"Health/Armor:",
					[[(1 - damage _vehicle),2] call BIS_fnc_cutDecimals,0,1,true]
				],
				[
					"SLIDEREDIT",
					"Fuel:",
					[[fuel _vehicle,3] call BIS_fnc_cutDecimals,0,1,true]
				],
				[
					"ICONS",
					"Vehicle Lock:",
					[
						locked _vehicle,
						[0,1,2,3],
						[
							"a3\modules_f\data\iconunlock_ca.paa",
							"a3\modules_f\data\iconunlock_ca.paa",
							"a3\modules_f\data\iconlock_ca.paa",
							"a3\modules_f\data\iconlock_ca.paa"
						],
						[
							"UNLOCKED",
							"DEFAULT",
							"LOCKED",
							"LOCKED FOR PLAYERS"
						],
						[[11,0.5],[15,0.5],[19,0.5],[23,0.5]],
						[1.75,1.75,1.75,1.75],
						2.5
					]
				],
				[
					"ICONS",
					"Engine State:",
					[
						isEngineOn _vehicle,
						[false,true],
						["A3\ui_f\data\igui\cfg\actions\engine_off_ca.paa","A3\ui_f\data\igui\cfg\actions\engine_on_ca.paa"],
						["Turn engine off","Turn engine on"],
						[[15,0.4],[19,0.4]],
						[1.75,1.75],
						2.5
					]
				],
				[
					"ICONS",
					"Lights State:",
					[
						isLightOn _vehicle,
						[false,true],
						["A3\ui_f\data\igui\cfg\actions\ico_cpt_land_off_ca.paa","A3\ui_f\data\igui\cfg\actions\ico_cpt_land_on_ca.paa"],
						["Turn lights off","Turn lights on"],
						[[15,0.4],[19,0.4]],
						[1.75,1.75],
						2.5
					]
				],
				[
					"RESPAWN",
					"Respawn on Object For:",
					[
						_vehicle getVariable ["MAZ_EZM_respawnType",4],
						_vehicle
					]
				],
				[ 
					"NEWBUTTON", 
					"DAMAGE", 
					[ 
						"Edit the vehicle's damage in specific hit points.", 
						{
							params ["_display","_args"];
							_display closeDisplay 0;
							[_args] spawn MAZ_EZM_createDamageDialog;
						}, 
						_vehicle
					] 
				],
				[ 
					"NEWBUTTON", 
					"RESPAWN", 
					[ 
						"Set the vehicle to respawn at it's position.", 
						{
							params ["_display","_args"];
							_display closeDisplay 0;
							[_args] spawn MAZ_EZM_createVehicleRespawnDialog;
						}, 
						_vehicle
					] 
				],
				[ 
					"NEWBUTTON", 
					"GARAGE", 
					[ 
						"WIP : Edit vehicle in the Virtual Garage.", 
						{
							params ["_display","_args"];
						}, 
						_vehicle
					] 
				]
			],{
				params ["_display","_values","_args"];
				_display closeDisplay 1;
			},{
				params ["_display","_values","_args"];
				[_args,_values] call MAZ_EZM_applyAttributeChangesToLandVehicle;
				_display closeDisplay 0;
			},_vehicle] call MAZ_EZM_createAttributesDialog;
		};
	};

	MAZ_EZM_applyAttributeChangesToVehicle = {
		params ["_vehicle","_attributes"];
		_attributes params [["_health",damage _vehicle],["_fuel",fuel _vehicle],["_lockState",locked _vehicle],["_engineState",isEngineOn _vehicle],["_lightState",isLightOn _vehicle],["_colLightState",isCollisionLightOn _vehicle],"_respawn"];
		_vehicle setDamage (1-_health);
		_vehicle setFuel _fuel;
		[_vehicle,_lockState] remoteExec ['lock',0,_vehicle];
		_vehicle engineOn _engineState;
		_vehicle setPilotLight _lightState;
		_vehicle setCollisionLight _colLightState;

		[_vehicle,_respawn] call MAZ_EZM_applyCreateRespawnToUnitAttribs;
	};

	MAZ_EZM_createVehicleAttributesDialog = {
		params ["_vehicle"];
		if(dialog) then {
			closeDialog 2;
		};
		[_vehicle] spawn {
			params ["_vehicle"];
			sleep 0.1;
			[format ["EDIT %1",toUpper (getText (configFile >> "CfgVehicles" >> typeOf _vehicle >> "displayName"))],[
				[
					"SLIDEREDIT",
					"Health/Armor:",
					[[(1 - damage _vehicle),2] call BIS_fnc_cutDecimals,0,1,true]
				],
				[
					"SLIDEREDIT",
					"Fuel:",
					[[fuel _vehicle,3] call BIS_fnc_cutDecimals,0,1,true]
				],
				[
					"ICONS",
					"Vehicle Lock:",
					[
						locked _vehicle,
						[0,1,2,3],
						[
							"a3\modules_f\data\iconunlock_ca.paa",
							"a3\modules_f\data\iconunlock_ca.paa",
							"a3\modules_f\data\iconlock_ca.paa",
							"a3\modules_f\data\iconlock_ca.paa"
						],
						[
							"UNLOCKED",
							"DEFAULT",
							"LOCKED",
							"LOCKED FOR PLAYERS"
						],
						[[11,0.5],[15,0.5],[19,0.5],[23,0.5]],
						[1.75,1.75,1.75,1.75],
						2.5
					]
				],
				[
					"ICONS",
					"Engine State:",
					[
						isEngineOn _vehicle,
						[false,true],
						["A3\ui_f\data\igui\cfg\actions\engine_off_ca.paa","A3\ui_f\data\igui\cfg\actions\engine_on_ca.paa"],
						["Turn engine off","Turn engine on"],
						[[15,0.4],[19,0.4]],
						[1.75,1.75],
						2.5
					]
				],
				[
					"ICONS",
					"Lights State:",
					[
						isLightOn _vehicle,
						[false,true],
						["A3\ui_f\data\igui\cfg\actions\ico_cpt_land_off_ca.paa","A3\ui_f\data\igui\cfg\actions\ico_cpt_land_on_ca.paa"],
						["Turn lights off","Turn lights on"],
						[[15,0.4],[19,0.4]],
						[1.75,1.75],
						2.5
					]
				],
				[
					"ICONS",
					"Anti-Collision Lights:",
					[
						isCollisionLightOn _vehicle,
						[false,true],
						["A3\ui_f\data\igui\cfg\actions\ico_cpt_col_off_ca.paa","A3\ui_f\data\igui\cfg\actions\ico_cpt_col_on_ca.paa"],
						["Turn anti-collision lights off","Turn anti-collision lights on"],
						[[15,0.4],[19,0.4]],
						[1.75,1.75],
						2.5
					]
				],
				[
					"RESPAWN",
					"Respawn on Object For:",
					[
						_vehicle getVariable ["MAZ_EZM_respawnType",4],
						_vehicle
					]
				],
				[ 
					"NEWBUTTON", 
					"DAMAGE", 
					[ 
						"Edit the vehicle's damage in specific hit points.", 
						{
							params ["_display","_args"];
							_display closeDisplay 0;
							[_args] spawn MAZ_EZM_createDamageDialog;
						}, 
						_vehicle
					] 
				],
				[ 
					"NEWBUTTON", 
					"RESPAWN", 
					[ 
						"Set the vehicle to respawn at it's position.", 
						{
							params ["_display","_args"];
							_display closeDisplay 0;
							[_args] spawn MAZ_EZM_createVehicleRespawnDialog;
						}, 
						_vehicle
					] 
				],
				[ 
					"NEWBUTTON", 
					"GARAGE", 
					[ 
						"WIP : Edit vehicle in the Virtual Garage.", 
						{
							params ["_display","_args"];
						}, 
						_vehicle
					] 
				]
			],{
				params ["_display","_values","_args"];
				_display closeDisplay 1;
			},{
				params ["_display","_values","_args"];
				[_args,_values] call MAZ_EZM_applyAttributeChangesToVehicle;
				_display closeDisplay 0;
			},_vehicle] call MAZ_EZM_createAttributesDialog;
		};
	};

	MAZ_EZM_applyAttributeChangesToMarker = {
		params ["_marker","_attribs"];
		_attribs params ["_text","_markerColor","_markerDir"];
		_marker setMarkerText _text;
		_marker setMarkerColor _markerColor;
		MAZ_EZM_markerColorDefault = _markerColor;
		_marker setMarkerDir _markerDir;
	};

	MAZ_EZM_createMarkerAttributesDialog = {
		params ["_marker"];
		if(dialog) then {
			closeDialog 2;
		};
		[_marker] spawn {
			params ["_marker"];
			openMap false;
			private _markerType = getText (configfile >> "CfgMarkers" >> (markerType _marker) >> "icon");
			private _colorData = [];
			{
				private _colorActive = _x;
				private _colorNormal = [_x # 0,_x # 1,_x # 2,0.5];
				_colorData pushBack [_colorActive,_colorNormal];
			}forEach [
				[0,0,0,1],
				[0,0,0,1],
				[0.5,0.5,0.5,1],
				[0.9,0,0,1],
				[0.5,0.25,0,1],
				[0.85,0.4,0,1],
				[0.85,0.85,0,1],
				[0.5,0.6,0.4,1],
				[0,0.8,0,1],
				[0,0,1,1],
				[1,1,1,1],
				[profileNamespace getVariable ['Map_BLUFOR_R',0],profileNamespace getVariable ['Map_BLUFOR_G',1],profileNamespace getVariable ['Map_BLUFOR_B',1],profileNamespace getVariable ['Map_BLUFOR_A',1]],
				[profileNamespace getVariable ['Map_OPFOR_R',0],profileNamespace getVariable ['Map_OPFOR_G',1],profileNamespace getVariable ['Map_OPFOR_B',1],profileNamespace getVariable ['Map_OPFOR_A',1]],
				[profileNamespace getVariable ['Map_Independent_R',0],profileNamespace getVariable ['Map_Independent_G',1],profileNamespace getVariable ['Map_Independent_B',1],profileNamespace getVariable ['Map_Independent_A',1]],
				[profileNamespace getVariable ['Map_Civilian_R',0],profileNamespace getVariable ['Map_Civilian_G',1],profileNamespace getVariable ['Map_Civilian_B',1],profileNamespace getVariable ['Map_Civilian_A',1]],
				[profileNamespace getVariable ['Map_Unknown_R',0],profileNamespace getVariable ['Map_Unknown_G',1],profileNamespace getVariable ['Map_Unknown_B',1],profileNamespace getVariable ['Map_Unknown_A',1]]
			];
			sleep 0.1;
			["EDIT MARKER",[ 
				[
					"EDIT",
					"Text:",
					[markerText _marker]
				],
                [
                    "ICONS",
                    "Color:",
                    [
                        markerColor _marker,
                        [
                            "Default",
                            "ColorBlack",
                            "ColorGrey",
                            "ColorRed",
                            "ColorBrown",
                            "ColorOrange",
                            "ColorYellow",
                            "ColorKhaki",
                            "ColorGreen",
                            "ColorBlue",
                            "ColorWhite",
                            "ColorBLUFOR",
                            "ColorOPFOR",
                            "ColorGUER",
                            "ColorCIV",
                            "ColorUNKNOWN"
                        ],
                        [
                            _markerType,
                            _markerType,
							_markerType,
							_markerType,
							_markerType,
							_markerType,
							_markerType,
							_markerType,
							_markerType,
							_markerType,
							_markerType,
							_markerType,
							_markerType,
							_markerType,
							_markerType,
							_markerType
                        ],
                        [
							"Default",
							"Black",
							"Grey",
							"Red",
							"Brown",
							"Orange",
							"Yellow",
							"Khaki",
							"Green",
							"Blue",
							"White",
							"BLUFOR",
							"OPFOR",
							"Independent",
							"Civilian",
							"UNKNOWN"
						],
                        [
                            [9.5,0.2],
                            [11.5,0.2],
                            [13.5,0.2],
                            [15.5,0.2],
                            [17.5,0.2],
                            [19.5,0.2],
                            [21.5,0.2],
                            [23.5,0.2],
                            [9.5,2.2],
                            [11.5,2.2],
                            [13.5,2.2],
                            [15.5,2.2],
                            [17.5,2.2],
                            [19.5,2.2],
                            [21.5,2.2],
                            [23.5,2.2]
                        ],
                        [
                            1.5,
                            1.5,
							1.5,
							1.5,
							1.5,
							1.5,
							1.5,
							1.5,
							1.5,
							1.5,
							1.5,
							1.5,
							1.5,
							1.5,
							1.5,
							1.5
                        ],
                        4,
						_colorData
                    ]
                ],
				[
					"SLIDEREDIT",
					"Marker Direction:",
					[markerDir _marker,0,360,false]
				],
				[ 
					"NEWBUTTON", 
					"DELETE", 
					[ 
						"Deletes the Selected Marker.", 
						{
							params ["_display","_args"];
							deleteMarker _args;
							_display closeDisplay 0;
						}, 
						_marker
					] 
				]
			],{
				params ["_display","_values","_args"];
				_display closeDisplay 1;
			},{
				params ["_display","_values","_args"];
				[_args,_values] call MAZ_EZM_applyAttributeChangesToMarker;
				_display closeDisplay 0;
			},_marker] call MAZ_EZM_createAttributesDialog;
		};
	};

comment "Context Menu";

	ZAM_fnc_createNewContextAction = {
		params [
			["_displayName","CONTEXT ACTION",[""]],
			["_code",{},[{}]],
			["_condition",{true},[{}]],
			["_priority",3,[1]],
			["_img","",[""]],
			["_color",[1,1,1,1],[[]]],
			["_childActions",[],[[]]]
		];
		if(isNil "ZAM_EZM_contextMenuActions") then {
			ZAM_EZM_contextMenuActions = [];
		};
		private _index = ZAM_EZM_contextMenuActions pushBack [_displayName,_code,_condition,_priority,_img,_color,_childActions];
		ZAM_EZM_contextMenuActions = [ZAM_EZM_contextMenuActions,[],{_x select 3},"ASCEND"] call BIS_fnc_sortBy;
		_index
	};

	ZAM_fnc_createContextMenuBase = {
		params ["_xPos","_yPos"];

		private _display = findDisplay 312;
		private _controlGroup = _display ctrlCreate ["RscControlsGroupNoScrollbars",-1];
		_controlGroup ctrlSetPosition [_xPos,_yPos,["W",9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,0];
		_controlGroup ctrlSetBackgroundColor [0,0,0,0.4];
		_controlGroup ctrlCommit 0;

		private _controlGroupFrame = _display ctrlCreate ["RscFrame",-1,_controlGroup];
		_controlGroupFrame ctrlSetPosition [0,0,["W",9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,0];
		_controlGroupFrame ctrlSetTextColor [0,0,0,0.6];
		_controlGroupFrame ctrlCommit 0;

		[_controlGroup,_controlGroupFrame]
	};

	ZAM_fnc_createContextMenuRow = {
		params ["_ctrlGroup","_yPos","_displayName","_code","_img","_color"];
		private _display = findDisplay 312;
		private _ctrl = _display ctrlCreate ["RscButtonMenu",-1,_ctrlGroup];
		if(_img != "") then {
			_displayName = "     " + _displayName;
			private _picture = _display ctrlCreate ["RscPicture",-1,_ctrlGroup];
			_picture ctrlSetText _img;
			_picture ctrlSetTextColor _color;
			_picture ctrlSetPosition [["W",0.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,_yPos,["W",0.9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["H",0.9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];
			_picture ctrlCommit 0;
		};
		_ctrl ctrlSetText _displayName;
		_ctrl ctrlSetFont "RobotoCondensed";
		_ctrl ctrlSetPosition [0,_yPos,["W",9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];
		_ctrl ctrlSetTextColor _color;
		_ctrl ctrlSetBackgroundColor [0,0,0,0.4];
		_ctrl ctrlSetActiveColor [0,0,0,0.6];
		_ctrl ctrlAddEventHandler ["ButtonClick",_code];
		_ctrl ctrlCommit 0;

		_ctrl
	};

	ZAM_fnc_destroyContextMenu = {
		sleep 0.01;
		private _ctrlGroup = player getVariable "EZM_contextGroupCtrl";
		{
			private _ctrl = _x;
			private _doesHaveChildren = _ctrl getVariable 'contextMenuChildrenCtrlGroup';
			if(!isNil "_doesHaveChildren") then {
				{
					ctrlDelete _x;
				}forEach (allControls _doesHaveChildren);
				ctrlDelete _doesHaveChildren;
			};
			
			ctrlDelete _ctrl;
		}forEach (allControls _ctrlGroup);
		ctrlDelete _ctrlGroup;
		player setVariable ["EZM_isContextOpen",false];
		player setVariable ["EZM_contextGroupCtrl",nil];
	};

	ZAM_fnc_addContextMenuChildRows = {
		params ["_position","_children","_ctrlParent"];
		private _controlGroupParentOfParent = ctrlParentControlsGroup _ctrlParent;
		_position = _position vectorAdd (ctrlPosition _controlGroupParentOfParent);
		_position params ["_xPos","_yPos","_wPos","_hPos"];
		
		private _display = findDisplay 312;
		private _controlGroup = _display ctrlCreate ["RscControlsGroupNoScrollbars",-1];
		_controlGroup ctrlSetPosition [_xPos + (["W",9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),_yPos,["W",9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,0];
		_controlGroup ctrlSetBackgroundColor [0,0,0,0.4];
		_controlGroup ctrlCommit 0;

		private _controlGroupFrame = _display ctrlCreate ["RscFrame",-1,_controlGroup];
		_controlGroupFrame ctrlSetPosition [0,0,["W",9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,0];
		_controlGroupFrame ctrlSetTextColor [0,0,0,0.6];
		_controlGroupFrame ctrlCommit 0;

		private _groupHeight = 0;
		{
			_x params ["_displayName","_code","_condition",["_img",""],["_color",[1,1,1,1]]];
			_code = compile (format ["params ['_childControl'];((_childControl getVariable 'contextMenuParent') getVariable 'contextMenuParams') params ['_pos','_entity'];[_pos,_entity] call %1;",_code]);
			private _ctrl = _display ctrlCreate ["RscButtonMenu",-1,_controlGroup];
			_ctrl setVariable ["contextMenuParent",_ctrlParent];
			if(_img != "") then {
				_displayName = "     " + _displayName;
				private _picture = _display ctrlCreate ["RscPicture",-1,_controlGroup];
				_picture ctrlSetText _img;
				_picture ctrlSetTextColor _color;
				_picture ctrlSetPosition [0,_yPos,["W",0.9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["H",0.9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];
				_picture ctrlCommit 0;
			};
			_ctrl ctrlSetText _displayName;
			_ctrl ctrlSetFont "RobotoCondensed";
			_ctrl ctrlSetPosition [0,_groupHeight,["W",9] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];
			_ctrl ctrlSetTextColor _color;
			_ctrl ctrlSetBackgroundColor [0,0,0,0.4];
			_ctrl ctrlSetActiveColor [0,0,0,0.6];
			_ctrl ctrlAddEventHandler ["ButtonClick",_code];
			_ctrl ctrlCommit 0;

			_groupHeight = _groupHeight + (["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
		}forEach _children;

		_controlGroup ctrlSetPositionH _groupHeight;
		_controlGroup ctrlCommit 0;
		_controlGroupFrame ctrlSetPositionH _groupHeight;
		_controlGroupFrame ctrlCommit 0;
		if(_yPos + _groupHeight > 1.405) then {	
			(ctrlPosition _controlGroup) params ["","_posY"];	
			_controlGroup ctrlSetPositionY ((_yPos - _groupHeight) + (["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat));	
			_controlGroup ctrlCommit 0;	
		};
		
		_ctrlParent setVariable ["contextMenuChildrenCtrlGroup",_controlGroup];

		_controlGroup
	};
	
	ZAM_fnc_closeContextMenu = {
		if(!(player getVariable ["EZM_isContextOpen",false])) exitWith {};
		private _ctrlGroup = player getVariable "EZM_contextGroupCtrl";
		{
			ctrlDelete _x;
		}forEach (allControls _ctrlGroup);
		ctrlDelete _ctrlGroup;
		player setVariable ["EZM_isContextOpen",false];
		player setVariable ["EZM_contextGroupCtrl",nil];
	};

	ZAM_fnc_createContextMenu = {
		comment "Check for actions";
		if(isNil "ZAM_EZM_contextMenuActions") exitWith {};
		private _isContextMenuOpenAlready = player getVariable ["EZM_isContextOpen",false];
		if(_isContextMenuOpenAlready) then {
			private _ctrlGroup = player getVariable "EZM_contextGroupCtrl";
			{
				ctrlDelete _x;
			}forEach (allControls _ctrlGroup);
			ctrlDelete _ctrlGroup;
			player setVariable ["EZM_isContextOpen",false];
			player setVariable ["EZM_contextGroupCtrl",nil];
		};

		comment "Get cursor entity";
		private _targetObjArray = curatorMouseOver;
		private _entity = objNull;
		if ((_targetObjArray isEqualTo []) || (_targetObjArray isEqualTo [''])) then {} else {
			_entity = _targetObjArray select 1;
		};

		comment "Create base context menu dialog";
		private _posArray = getMousePosition;
		_posArray params ["_mouseX","_mouseY"];
		(_posArray call ZAM_fnc_createContextMenuBase) params ["_ctrlGroup","_ctrlGroupFrame"];
		_ctrlGroup ctrlAddEventHandler ["MouseExit",{
			params ["_control"];
			private _currentChildren = player getVariable "currentlyOpenChildren";
			if(!isNil "_currentChildren") then {
				{
					_x ctrlShow false;
				}forEach allControls _currentChildren;
				player setVariable ["currentlyOpenChildren",nil];
			};
		}];
		private _worldPos = [true] call MAZ_EZM_fnc_getScreenPosition;

		comment "Run conditionals";
		private _yPos = 0;
		{
			_x params ["_displayName","_code","_condition","_priority","_img","_color","_childActions"];
			if(_entity call _condition) then {
				_code = compile (format ["params ['_control'];(_control getVariable 'contextMenuParams') params ['_pos','_entity'];[_pos,_entity] call %1;",_code]);
				private _ctrl = [_ctrlGroup,_yPos,_displayName,_code,_img,_color] call ZAM_fnc_createContextMenuRow;
				_ctrl setVariable ["contextMenuParams",[_worldPos,_entity]];
				(ctrlPosition _ctrl) params ["","","","_posH"];
				if(count _childActions != 0) then {
					private _activeChildren = [];
					{
						_x params ["","","_conditionChild"];
						if(_entity call _conditionChild) then {
							_activeChildren pushBack _x;
						};
					}forEach _childActions;
					_ctrl setVariable ["contextMenuChildrenData",_activeChildren];

					if((count _activeChildren) > 0) then {
						private _pictureDrop = (findDisplay 312) ctrlCreate ["RscPicture",-1,_ctrlGroup];
						_pictureDrop ctrlSetText "A3\ui_f\data\gui\rsccommon\rsctree\hiddenTexture_ca.paa";
						_pictureDrop ctrlSetTextColor [1,1,1,1];
						_pictureDrop ctrlSetPosition [["W",8] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,_yPos,["W",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];
						_pictureDrop ctrlCommit 0;
					};
				};
				_ctrl ctrlAddEventHandler ["MouseEnter",{
					params ["_control"];
					private _currentChildren = player getVariable "currentlyOpenChildren";
					if(!isNil "_currentChildren") then {
						{
							ctrlDelete _x;
						}forEach allControls _currentChildren;
					};
					private _children = _control getVariable "contextMenuChildrenData";
					if(!isNil "_children") then {
						private _childGroup = [ctrlPosition _control,_children,_control] call ZAM_fnc_addContextMenuChildRows;
						player setVariable ["currentlyOpenChildren",_childGroup];
					};
				}];
				_yPos = _yPos + _posH;
			};
		}forEach ZAM_EZM_contextMenuActions;

		_ctrlGroup ctrlSetPositionH _yPos;
		_ctrlGroupFrame ctrlSetPositionH _yPos;
		_ctrlGroup ctrlCommit 0;
		_ctrlGroupFrame ctrlCommit 0;
		if(_mouseY + _yPos > 1.405) then {	
			(ctrlPosition _ctrlGroup) params ["","_posY"];	
			_ctrlGroup ctrlSetPositionY (1.405 - _yPos);	
			_ctrlGroup ctrlCommit 0;	
		};

		player setVariable ["EZM_isContextOpen",true];
		player setVariable ["EZM_contextGroupCtrl",_ctrlGroup];
	};
	
	if(isNil "MAZ_EZM_action_removeEditableObjects") then {	
		MAZ_EZM_action_removeEditableObjects = [	
			"DEL EDITABLE OBJECTS",	
			{	
				params ["_pos"];	
				private _objects = [_pos,100] call JAM_fnc_getEditableObjs_radius;	
				[_objects,getAssignedCuratorLogic player] call MAZ_EZM_fnc_removeObjectFromInterface;	
			},	
			{true},	
			6,	
			"a3\3den\data\cfg3den\group\iconcustomcomposition_ca.paa",	
			[1,1,1,1],	
			[	
				[	
					"50m",	
					{	
						params ["_pos"];	
						private _objects = [_pos,50] call JAM_fnc_getEditableObjs_radius;	
						[_objects,getAssignedCuratorLogic player] call MAZ_EZM_fnc_removeObjectFromInterface;	
					},	
					{true},	
					"",	
					[1,1,1,1]	
				],	
				[	
					"100m",	
					{	
						params ["_pos"];	
						private _objects = [_pos,100] call JAM_fnc_getEditableObjs_radius;	
						[_objects,getAssignedCuratorLogic player] call MAZ_EZM_fnc_removeObjectFromInterface;	
					},	
					{true},	
					"",	
					[1,1,1,1]	
				],	
				[	
					"250m",	
					{	
						params ["_pos"];	
						private _objects = [_pos,250] call JAM_fnc_getEditableObjs_radius;	
						[_objects,getAssignedCuratorLogic player] call MAZ_EZM_fnc_removeObjectFromInterface;	
					},	
					{true},	
					"",	
					[1,1,1,1]	
				],	
				[	
					"500m",	
					{	
						params ["_pos"];	
						private _objects = [_pos,500] call JAM_fnc_getEditableObjs_radius;	
						[_objects,getAssignedCuratorLogic player] call MAZ_EZM_fnc_removeObjectFromInterface;	
					},	
					{true},	
					"",	
					[1,1,1,1]	
				],	
				[	
					"1000m",	
					{	
						params ["_pos"];	
						private _objects = [_pos,1000] call JAM_fnc_getEditableObjs_radius;	
						[_objects,getAssignedCuratorLogic player] call MAZ_EZM_fnc_removeObjectFromInterface;	
					},	
					{true},	
					"",	
					[1,1,1,1]	
				]	
			]	
		] call ZAM_fnc_createNewContextAction;	
	};

	if(isNil "MAZ_EZM_action_addEditableObjects") then {
		MAZ_EZM_action_addEditableObjects = [
			"Add Editable Objects",
			{
				params ["_pos"];
				private _objects = [_pos,100] call JAM_fnc_getEditableObjs_radius;
				[_objects,getAssignedCuratorLogic player] call MAZ_EZM_fnc_addObjectToInterface;
			},
			{true},
			7,
			"a3\3den\data\displays\display3den\panelright\customcomposition_add_ca.paa",
			[1,1,1,1],
			[
				[
					"50m",
					{
						params ["_pos"];
						private _objects = [_pos,50] call JAM_fnc_getEditableObjs_radius;
						[_objects,getAssignedCuratorLogic player] call MAZ_EZM_fnc_addObjectToInterface;
					},
					{true},
					"",
					[1,1,1,1]
				],
				[
					"100m",
					{
						params ["_pos"];
						private _objects = [_pos,100] call JAM_fnc_getEditableObjs_radius;
						[_objects,getAssignedCuratorLogic player] call MAZ_EZM_fnc_addObjectToInterface;
					},
					{true},
					"",
					[1,1,1,1]
				],
				[
					"250m",
					{
						params ["_pos"];
						private _objects = [_pos,250] call JAM_fnc_getEditableObjs_radius;
						[_objects,getAssignedCuratorLogic player] call MAZ_EZM_fnc_addObjectToInterface;
					},
					{true},
					"",
					[1,1,1,1]
				],
				[
					"500m",
					{
						params ["_pos"];
						private _objects = [_pos,500] call JAM_fnc_getEditableObjs_radius;
						[_objects,getAssignedCuratorLogic player] call MAZ_EZM_fnc_addObjectToInterface;
					},
					{true},
					"",
					[1,1,1,1]
				],
				[
					"1000m",
					{
						params ["_pos"];
						private _objects = [_pos,1000] call JAM_fnc_getEditableObjs_radius;
						[_objects,getAssignedCuratorLogic player] call MAZ_EZM_fnc_addObjectToInterface;
					},
					{true},
					"",
					[1,1,1,1]
				]
			]
		] call ZAM_fnc_createNewContextAction;
	};

	if(isNil "LM_action_debugConsole") then {
		LM_action_debugConsole = [
			"Debug Console",
			{
				[] call LM_fnc_debugConsole;
			},
			{true},
			2,
			"a3\3den\data\displays\display3den\entitymenu\findconfig_ca.paa",
			[1,1,1,1]
		] call ZAM_fnc_createNewContextAction;
	};

	if(isNil "MAZ_EZM_action_teleportHere") then {
		MAZ_EZM_action_teleportHere = [
			"Teleport Here",
			{
				params ["_pos"];
				if(surfaceIsWater _pos) exitWith {	
					private _newPos = [true] call MAZ_EZM_fnc_getScreenPosition;	
					_newPos = AGLtoASL _newPos;	
					player setPosASL _newPos;	
				};	
				player setPosATL _pos;
			},
			{true},
			5.9,
			"a3\3den\data\cfgwaypoints\move_ca.paa",
			[1,1,1,1],
			[
				[
					"Teleport In Vehicle",
					{
						params ["_pos","_entity"];
						private _crewData = fullCrew [_entity,"",true];
						private _return = false;
						private _moveInCode = "";
						{
							_x params ["_unit","_role","_cargoIndex","_turretPath","_personTurret"];
							if(_return) exitWith {};
							if(_role != "turret") then {
								if(isNull _unit || !alive _unit) then {
									if(!isNull _unit) then {moveOut _unit};
									_moveInCode = compile (format ["player moveIn%1 _this",_role]);
									_return = true;
								};
							} else {
								if(isNull _unit || !alive _unit) then {
									if(!isNull _unit) then {moveOut _unit};
									_moveInCode = compile (format ["player moveIn%1 [_this,%2]",_role,_turretPath]);
									_return = true;
								};
							};
						}forEach _crewData;
						_entity call _moveInCode;
					},
					{
						private _return = false;
						if(_this isEqualType grpNull) exitWith {_return};
						if(!(typeOf _this isKindOf "CAManBase") && alive _this && !isNull _this && typeOf _this isKindOf "AllVehicles" && ([_this] call ZAM_EZM_fnc_canMoveIn)) then {
							_return = true;
						};

						_return
					},
					"",
					[1,1,1,1]
				]
			]
		] call ZAM_fnc_createNewContextAction;
	};

	if(isNil "MAZ_EZM_action_remoteControl") then {
		MAZ_EZM_action_remoteControl = [
			"Remote Control",
			{
				params ["_pos","_entity"];
				private _logic = createVehicle ["Land_HelipadEmpty_F",[0,0,0],[],0,"CAN_COLLIDE"];
				[_logic,_entity,true] spawn MAZ_EZM_BIS_fnc_remoteControlUnit;
			},
			{
				private _return = false;
				if(_this isEqualType grpNull) exitWith {_return};
				if(typeOf _this isKindOf "CAManBase" && alive _this && !isNull _this && !(isPlayer _this)) then {
					_return = true;
				};

				_return
			},
			5,
			"\a3\Modules_F_Curator\Data\portraitRemoteControl_ca.paa",
			[1,1,1,1]
		] call ZAM_fnc_createNewContextAction;
	};

	if(isNil "MAZ_EZM_action_suppressiveFire") then {
		MAZ_EZM_action_suppressiveFire = [
			"Suppressive Fire",
			{
				params ["_pos","_entity"];
				[_entity] spawn MAZ_EZM_fnc_suppressiveFireModule;
			},
			{
				private _return = false;
				if(_this isEqualType grpNull) exitWith {_return};
				if(typeOf _this isKindOf "CAManBase" && alive _this && !isNull _this && !(isPlayer _this)) then {
					_return = true;
				};

				_return
			},
			5,
			"a3\static_f_oldman\hmg_02\data\ui\icon_hmg_02_ca.paa",
			[1,1,1,1]
		] call ZAM_fnc_createNewContextAction;
	};
	
	comment "Add Intel WIP disabled for now";
	if(True == False) then {
		LM_action_addIntel = [
			"Add Intel",
			{
				params ["_pos","_entity"];
				_entity addAction ["<t color='#FF0000'>Gather Data</t>", {
					params ['_object', '_caller', '_id'];

					[_object, _id] remoteExec ['removeAction', 0, true];

					[[side _caller, 'base'], format['%1 gathered the data!', name _caller]] remoteExec ['sideChat', 0, true];
				}]; 
			},
			{
				private _return = false;
				if(_this isEqualType grpNull) exitWith {_return};
				if(!(typeOf _this isKindOf "CAManBase") && alive _this && !isNull _this) then {
					_return = true;
				};

				_return
			},
			2,
			"a3\ui_f\data\igui\cfg\actions\gear_ca.paa",
			[1,1,1,1]
		] call ZAM_fnc_createNewContextAction;
	};

	if(isNil "LM_action_changeSide") then {
		LM_action_changeSide = [
			"Change Side",
			{true},
			{
				private _return = false;
				if(_this isEqualType grpNull) exitWith {_return};
				if(typeOf _this isKindOf "CAManBase" && alive _this && !isNull _this) then {
					_return = true;
				};

				_return
			},
			5,
			"a3\ui_f\data\map\vehicleicons\iconMan_ca.paa",
			[1,1,1,1],
			[
				[
					"BLUFOR",
					{
						params ["_pos","_entity"];
						private _grp = createGroup [west,true];
						[_entity] joinSilent _grp;
						if(group _entity == _grp) then {
							["Side Changed to BLUFOR"] call MAZ_EZM_fnc_systemMessage;
						} else {
							["ERROR: Side Not Changed!"] call MAZ_EZM_fnc_systemMessage;
						};
					},
					{true},
					"",
					[1,1,1,1]
				],
				[
					"OPFOR",
					{
						params ["_pos","_entity"];
						private _grp = createGroup [east,true];
						[_entity] joinSilent _grp;
						if(group _entity == _grp) then {
							["Side Changed to OPFOR"] call MAZ_EZM_fnc_systemMessage;
						} else {
							["ERROR: Side Not Changed!"] call MAZ_EZM_fnc_systemMessage;
						};
					},
					{true},
					"",
					[1,1,1,1]
				],
				[
					"INDEPENDENT",
					{
						params ["_pos","_entity"];
						private _grp = createGroup [independent,true];
						[_entity] joinSilent _grp;
						if(group _entity == _grp) then {
							["Side Changed to Independent"] call MAZ_EZM_fnc_systemMessage;
						} else {
							["ERROR: Side Not Changed!"] call MAZ_EZM_fnc_systemMessage;
						};
					},
					{true},
					"",
					[1,1,1,1]
				],
				[
					"CIVILIAN",
					{
						params ["_pos","_entity"];
						private _grp = createGroup [civilian,true];
						[_entity] joinSilent _grp;
						if(group _entity == _grp) then {
							["Side Changed to Civilian"] call MAZ_EZM_fnc_systemMessage;
						} else {
							["ERROR: Side Not Changed!"] call MAZ_EZM_fnc_systemMessage;
						};
					},
					{true},
					"",
					[1,1,1,1]
				]
			]
		] call ZAM_fnc_createNewContextAction;
	};

	if(isNil "MAZ_EZM_action_editLoadout") then {
		MAZ_EZM_action_editLoadout = [
			"Edit Loadout",
			{
				params ["_pos","_entity"];
				["Preload"] call BIS_fnc_arsenal;
				["Open",[true,nil,_entity]] call BIS_fnc_arsenal;
			},
			{
				private _return = false;
				if(_this isEqualType grpNull) exitWith {_return};
				if(player == _this) exitWith {!_return};
				if(typeOf _this isKindOf "CAManBase" && alive _this && !isNull _this && !(isPlayer _this)) then {
					_return = true;
				};

				_return
			},
			4,
			"a3\ui_f\data\igui\cfg\actions\gear_ca.paa",
			[1,1,1,1],
			[
				[
					"Change Loadout",
					{
						params ["_pos","_entity"];
						["Preload"] call BIS_fnc_arsenal;
						["Open",[true,nil,_entity]] call BIS_fnc_arsenal;
					},
					{true},
					"",
					[1,1,1,1]
				],
				[
					"Reset Loadout",
					{
						params ["_pos","_entity"];
						_entity setUnitLoadout (getUnitLoadout (configFile >> "CfgVehicles" >> typeOf _entity));
					},
					{true},
					"",
					[1,1,1,1]
				],
				[
					"Copy Loadout",
					{
						params ["_pos","_entity"];
						MAZ_EZM_copiedUnitLoadout = getUnitLoadout _entity;
					},
					{true},
					"",
					[1,1,1,1]
				],
				[
					"Paste Loadout",
					{
						params ["_pos","_entity"];
						_entity setUnitLoadout MAZ_EZM_copiedUnitLoadout;
					},
					{
						(!isNil "MAZ_EZM_copiedUnitLoadout")
					},
					"",
					[1,1,1,1]
				]
			]
		] call ZAM_fnc_createNewContextAction;
	};

	if(isNil "MAZ_EZM_action_healUnit") then {
		MAZ_EZM_action_healUnit = [
			"Heal Unit",
			{
				params ["_pos","_entity"];
				_entity setDamage 0;
				if(isPlayer _entity && (lifeState _entity == "INCAPACITATED")) then {
					["#rev",1,_entity] call BIS_fnc_reviveOnState;
				};
				["Unit Healed!"] call MAZ_EZM_fnc_systemMessage;
			},
			{
				private _return = false;
				if(_this isEqualType grpNull) exitWith {_return};
				if(typeOf _this isKindOf "CAManBase" && alive _this && !isNull _this) then {
					_return = true;
				};

				_return
			},
			3,
			"a3\ui_f\data\map\vehicleicons\pictureheal_ca.paa",
			[1,1,1,1],
			[
				[
					"Toggle Damage",
					{
						params ["_pos","_entity"];
						if(isDamageAllowed _entity == true) then {
							_entity allowDamage false;
							if(isDamageAllowed _entity == false) then {
								["Damage Disabled!"] call MAZ_EZM_fnc_systemMessage;
							} else {
								["ERROR: Damage Unchanged!"] call MAZ_EZM_fnc_systemMessage;
							}
						} else {
							_entity allowDamage true;
							if(isDamageAllowed _entity == true) then {
								["Damage Enabled!"] call MAZ_EZM_fnc_systemMessage;
							} else {
								["ERROR: Damage Unchanged!"] call MAZ_EZM_fnc_systemMessage;
							}
						};
					},
					{true},
					"",
					[1,1,1,1]
				]
			]
		] call ZAM_fnc_createNewContextAction;
	};

	if(isNil "LM_action_animateUnit") then {
		LM_action_animateUnit = [
			"Start Animation",
			{
				params ["_pos","_entity"];
				[_entity] call MAZ_EZM_fnc_setAmbientAnimationModule;
			},
			{
				private _return = false;
				if(_this isEqualType grpNull) exitWith {_return};
				if(typeOf _this isKindOf "CAManBase" && alive _this && !isNull _this) then {
					_return = true;
				};

				_return
			},
			2,
			"\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\run_ca.paa",
			[1,1,1,1]
		] call ZAM_fnc_createNewContextAction;
	};

	if(isNil "MAZ_EZM_action_repairVehicle") then {
		MAZ_EZM_action_repairVehicle = [
			"Repair",
			{
				params ["_pos","_entity"];
				_entity setDamage 0;
			},
			{
				private _return = false;
				if(_this isEqualType grpNull) exitWith {_return};
				if(!(typeOf _this isKindOf "CAManBase") && alive _this && !isNull _this && typeOf _this isKindOf "AllVehicles") then {
					_return = true;
				};

				_return
			},
			2,
			"a3\ui_f\data\igui\cfg\cursors\iconrepairvehicle_ca.paa",
			[1,1,1,1]
		] call ZAM_fnc_createNewContextAction;
	};

	if(isNil "MAZ_EZM_action_refuelVehicle") then {
		MAZ_EZM_action_refuelVehicle = [
			"Refuel",
			{
				params ["_pos","_entity"];
				[_entity,1] remoteExec ['setFuel'];
			},
			{
				private _return = false;
				if(_this isEqualType grpNull) exitWith {_return};
				if(!(typeOf _this isKindOf "CAManBase") && alive _this && !isNull _this && typeOf _this isKindOf "AllVehicles") then {
					_return = true;
				};

				_return
			},
			2,
			"a3\ui_f\data\igui\cfg\actions\refuel_ca.paa",
			[1,1,1,1]
		] call ZAM_fnc_createNewContextAction;
	};

	if(isNil "MAZ_EZM_action_rearmVehicle") then {
		MAZ_EZM_action_rearmVehicle = [
			"Rearm",
			{
				params ["_pos","_entity"];
				[_entity,1] remoteExec ['setVehicleAmmo'];
			},
			{
				private _return = false;
				if(_this isEqualType grpNull) exitWith {_return};
				if(!(typeOf _this isKindOf "CAManBase") && alive _this && !isNull _this && typeOf _this isKindOf "AllVehicles") then {
					_return = true;
				};

				_return
			},
			2,
			"a3\ui_f\data\igui\cfg\simpletasks\types\rearm_ca.paa",
			[1,1,1,1]
		] call ZAM_fnc_createNewContextAction;
	};

	if(isNil "MAZ_EZM_action_editPylons") then {
		MAZ_EZM_action_editPylons = [
			"Edit Pylons",
			{
				params ["_pos","_entity"];
				[_entity] spawn ZAM_EZM_fnc_editVehiclePylons;
			},
			{
				private _return = false;
				if(_this isEqualType grpNull) exitWith {_return};
				private _pylons = (configFile >> "CfgVehicles" >> typeOf _this >> "Components" >> "TransportPylonsComponent" >> "Pylons") call BIS_fnc_getCfgSubClasses; 
				if(count _pylons == 0) exitWith {false}; 
				true
			},
			1,
			"a3\ui_f\data\igui\cfg\actions\gear_ca.paa",
			[1,1,1,1],
			[
				[
					"Change Pylons",
					{
						params ["_pos","_entity"];
						[_entity] spawn ZAM_EZM_fnc_editVehiclePylons;
					},
					{true},
					"",
					[1,1,1,1]
				],
				[
					"Reset Pylons",
					{
						params ["_pos","_entity"];
						private _pylons = (configFile >> "CfgVehicles" >> typeOf _entity >> "Components" >> "TransportPylonsComponent" >> "Pylons") call BIS_fnc_getCfgSubClasses;
						{
							private _pylon = _x;
							private _pylonDefaultMag = getText (configfile >> "CfgVehicles" >> typeOf _entity >> "Components" >> "TransportPylonsComponent" >> "Pylons" >> _pylon >> "attachment");
							private _pylonMaxAmmo = getNumber (configFile >> "CfgMagazines" >> _pylonDefaultMag >> "count");
							_entity setPylonLoadout [_pylon,_pylonDefaultMag];
							_entity setAmmoOnPylon [_pylon,_pylonMaxAmmo];
						}forEach _pylons;
					},
					{true},
					"",
					[1,1,1,1]
				]
			]
		] call ZAM_fnc_createNewContextAction;
	};

	if(isNil "MAZ_EZM_action_garageEdit") then {
		MAZ_EZM_action_garageEdit = [
			"Edit Appearance",
			{
				params ["_pos","_entity"];
				[_entity] spawn ZAM_fnc_createGarageInterface;
			},
			{
				private _return = false;
				if(_this isEqualType grpNull) exitWith {_return};
				if(typeOf _entity isKindOf "AllVehicles" && !(typeOf _entity isKindOf "Animal") && !(typeOf _entity isKindOf "CAManBase")) then {_return = true};
				_return
			},
			1,
			"a3\ui_f\data\gui\rsc\rscdisplayarsenal\spacegarage_ca.paa",
			[1,1,1,1]
		] call ZAM_fnc_createNewContextAction;
	};

	if(isNil "MAZ_EZM_action_garrison") then {
		MAZ_EZM_action_garrison = [
			"Garrison",
			{
				params ["_pos","_entity"];
				[leader _entity] call MAZ_EZM_fnc_garrisonInstantModule;
			},
			{
				if(_this isEqualType grpNull) exitWith {true};
				false
			},
			1,
			'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\run_ca.paa',
			[1,1,1,1],
			[
				[
					"Garrison (Instant)",
					{
						params ["_pos","_entity"];
						[leader _entity] call MAZ_EZM_fnc_garrisonInstantModule;
					},
					{true},
					"",
					[1,1,1,1]
				],
				[
					"Garrison (Search)",
					{
						params ["_pos","_entity"];
						[leader _entity] call MAZ_EZM_fnc_garrisonSearchModule;
					},
					{true},
					"",
					[1,1,1,1]
				],
				[
					"Un-Garrison",
					{
						params ["_pos","_entity"];
						[leader _entity] call MAZ_EZM_fnc_unGarrisonModule;
					},
					{true},
					"",
					[1,1,1,1]
				]
			]
		] call ZAM_fnc_createNewContextAction;
	};

	ZAM_EZM_fnc_canMoveIn = {
		params ["_vehicle"];
		private _crewData = fullCrew [_vehicle,"",true];
		private _return = false;
		{
			_x params ["_unit","_role","_cargoIndex","_turretPath","_personTurret"];
			if(_return) exitWith {};
			if(isNull _unit || !alive _unit) then {
				_return = true;
			};
		}forEach _crewData;
		_return
	};

comment "Virtual Garage";

	ZAM_fnc_getVehicleCustomization = {
		params [["_vehicle",objNull,[objNull,""]]];
		private _input = [];
		private _className = "";
		if(_vehicle isEqualType "") then {
			_input = [objNull,_vehicle];
			_className = _vehicle;
		};
		if(_vehicle isEqualType objNull) then {
			if(!isNull _vehicle) then {
				_input = [_vehicle];
				_className = typeOf _vehicle;
			};
		};
		(_input call BIS_fnc_getVehicleCustomization) params ["","_animData"];

		private _customization = [];
		for "_i" from 0 to (count _animData -1) step 2 do {
			private _animSourceName = _animData # _i;
			private _displayName = getText (configfile >> "CfgVehicles" >> _className >> "AnimationSources" >> _animSourceName >> "displayName");
			_customization pushBack [_displayName,_animSourceName, _animData # (_i + 1)];
		};
		_customization
	};

	ZAM_fnc_getAllTextureTypes = {
		params [["_vehicle",objNull,[objNull,""]]];
		private _objectType = "";
		private _deleteAfter = false;
		if(_vehicle isEqualType "") then {
			_objectType = _vehicle;
			_vehicle = _objectType createVehicle [0,0,0];
			_deleteAfter = true;
		};
		if(_vehicle isEqualType objNull) then {
			if(!isNull _vehicle) then {
				_objectType = typeOf _vehicle;
			};
		};
		if(_objectType in ["B_Heli_Light_01_F","B_Heli_Light_01_dynamicLoadout_F","C_Heli_Light_01_civil_F","I_C_Heli_Light_01_civil_F"]) exitWith {
			private _return = [["BLUFOR",["A3\Air_F\Heli_Light_01\Data\Heli_Light_01_ext_Blufor_CO.paa"],false],["Blue",["\a3\air_f\Heli_Light_01\Data\heli_light_01_ext_blue_co.paa"],false],["Red",["\a3\air_f\Heli_Light_01\Data\heli_light_01_ext_co.paa"],false],["Ion",["\a3\air_f\Heli_Light_01\Data\heli_light_01_ext_ion_co.paa"],false],["BlueLine",["\a3\air_f\Heli_Light_01\Data\Skins\heli_light_01_ext_blueLine_co.paa"],false],["Digital",["\a3\air_f\Heli_Light_01\Data\Skins\heli_light_01_ext_digital_co.paa"],false],["Elliptical",["\a3\air_f\Heli_Light_01\Data\Skins\heli_light_01_ext_elliptical_co.paa"],false],["Furious",["\a3\air_f\Heli_Light_01\Data\Skins\heli_light_01_ext_furious_co.paa"],false],["Graywatcher",["\a3\air_f\Heli_Light_01\Data\Skins\heli_light_01_ext_graywatcher_co.paa"],false],["Jeans",["\a3\air_f\Heli_Light_01\Data\Skins\heli_light_01_ext_jeans_co.paa"],false],["Light",["\a3\air_f\Heli_Light_01\Data\Skins\heli_light_01_ext_light_co.paa"],false],["Shadow",["\a3\air_f\Heli_Light_01\Data\Skins\heli_light_01_ext_shadow_co.paa"],false],["Sheriff",["\a3\air_f\Heli_Light_01\Data\Skins\heli_light_01_ext_sheriff_co.paa"],false],["Speedy",["\a3\air_f\Heli_Light_01\Data\Skins\heli_light_01_ext_speedy_co.paa"],false],["Sunset",["\a3\air_f\Heli_Light_01\Data\Skins\heli_light_01_ext_sunset_co.paa"],false],["Vrana",["\a3\air_f\Heli_Light_01\Data\Skins\heli_light_01_ext_vrana_co.paa"],false],["Wasp",["\a3\air_f\Heli_Light_01\Data\Skins\heli_light_01_ext_wasp_co.paa"],false],["Wave",["\a3\air_f\Heli_Light_01\Data\Skins\heli_light_01_ext_wave_co.paa"],false]];
			{
				_x params ["_displayName","_textures","_isCurrent"];
				private _currentTexture = (getObjectTextures _vehicle) # 0;
				if(toLower (_textures # 0) find _currentTexture != -1) then {
					_return set [_forEachIndex,[_displayName,_textures,true]];
				};
			}forEach _return;
			_return
		};

		private _return = [];
		{
			private _vehicleEditDisplayName = getText (_x >> "displayName");
			private _textures = getArray (_x >> "textures");
			_textures = _textures apply {toLower _x};
			private _isCurrentTexture = true;
			private _objectTextures = getObjectTextures _vehicle;
			private _dataSlots = _objectTextures;
			{
				if((_textures select _forEachIndex) find _x != -1) then {
					_dataSlots set [_forEachIndex,true];
				} else {
					_dataSlots set [_forEachIndex,false];
				};
			}forEach _objectTextures;
			{
				if(!_isCurrentTexture) exitWith {};
				if(_x) then {
					_isCurrentTexture = true;
				} else {
					_isCurrentTexture = false;
				};
			}forEach _dataSlots;
			_return pushBack [_vehicleEditDisplayName,_textures,_isCurrentTexture];
		}forEach configProperties [configFile >> "CfgVehicles" >> _objectType >> "textureSources","isClass _x",true];
		if(_deleteAfter) then {
			deleteVehicle _vehicle;
		};
		_return
	};

	ZAM_fnc_createGarageInterface = {
		params ["_vehicle"];
		if(isNull (findDisplay 312)) exitWith {["Not in Zeus interface!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
		disableSerialization;
		with uiNamespace do {
			private _display = findDisplay 312;
			EZM_garageControls = [];
			
			private _textureButtonBG = _display ctrlCreate ["RscPicture",-1];
			_textureButtonBG ctrlSetText "#(argb,8,8,3)color(0,0,0,0.5)";
			_textureButtonBG ctrlSetposition [["X",-6.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["Y",0] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["W",3] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["H",2.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];
			_textureButtonBG ctrlCommit 0;
			EZM_garage_TextureButton = _display ctrlCreate ["RscActivePicture",8001];
			EZM_garage_TextureButton ctrlSetPosition (ctrlPosition _textureButtonBG);
			EZM_garage_TextureButton ctrlSetTextColor [1,1,1,1];
			EZM_garage_TextureButton ctrlSetText "a3\ui_f\data\gui\rsc\rscdisplaygarage\texturesources_ca.paa";
			EZM_garage_TextureButton ctrlAddEventHandler ["ButtonClick",{
				params ["_control"];
				with uiNamespace do {
					EZM_garage_TextureButton ctrlSetTextColor [1,1,1,1];
					EZM_garage_AnimationsButton ctrlSetTextColor [1,1,1,0.6];
				};
				[uiNamespace getVariable "EZM_garage_listBox",uiNamespace getVariable "EZM_garage_editVehicle"] call ZAM_fnc_garagePopulateListBoxTextures;
			}];
			EZM_garage_TextureButton ctrlCommit 0;

			EZM_garageControls pushBack EZM_garage_TextureButton;
			EZM_garageControls pushBack _textureButtonBG;

			private _animButtonBG = _display ctrlCreate ["RscPicture",-1];
			_animButtonBG ctrlSetText "#(argb,8,8,3)color(0,0,0,0.5)";
			_animButtonBG ctrlSetposition [["X",-6.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["Y",3] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["W",3] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["H",2.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];
			_animButtonBG ctrlCommit 0;
			EZM_garage_AnimationsButton = _display ctrlCreate ["RscActivePicture",8002];
			EZM_garage_AnimationsButton ctrlSetPosition (ctrlPosition _animButtonBG);
			EZM_garage_AnimationsButton ctrlSetTextColor [1,1,1,0.6];
			EZM_garage_AnimationsButton ctrlSetText "a3\ui_f\data\gui\rsc\rscdisplaygarage\animationsources_ca.paa";
			EZM_garage_AnimationsButton ctrlAddEventHandler ["ButtonClick",{
				params ["_control"];
				with uiNamespace do {
					EZM_garage_AnimationsButton ctrlSetTextColor [1,1,1,1];
					EZM_garage_TextureButton ctrlSetTextColor [1,1,1,0.6];
				};
				[uiNamespace getVariable "EZM_garage_listBox",uiNamespace getVariable "EZM_garage_editVehicle"] call ZAM_fnc_garagePopulateListBoxAnimations;
			}];
			EZM_garage_AnimationsButton ctrlCommit 0;

			EZM_garageControls pushBack EZM_garage_AnimationsButton;
			EZM_garageControls pushBack _animButtonBG;


			private _controlGroup = _display ctrlCreate ["RscControlsGroupNoScrollbars",-1];
			_controlGroup ctrlSetPosition [["X",-3] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["Y",0] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["W",11.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["H",13.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];
			_controlGroup ctrlSetBackgroundColor [0,0,0,0.7];
			_controlGroup ctrlCommit 0;

			EZM_garageControls pushBack _controlGroup;

			private _controlGroupFrame = _display ctrlCreate ["RscFrame",-1,_controlGroup];
			_controlGroupFrame ctrlSetPosition [0,0,["W",11.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["H",13.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];
			_controlGroupFrame ctrlSetTextColor [0,0,0,0.8];
			_controlGroupFrame ctrlCommit 0;

			EZM_garage_listBox = _display ctrlCreate ["RscListbox",8003,_controlGroup];
			EZM_garage_listBox ctrlSetposition [0,0,["W",11.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["H",13.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];
			lbClear EZM_garage_listBox;
			EZM_garage_listBox ctrlCommit 0;
		};
		uiNamespace setVariable ["EZM_garage_editVehicle",_vehicle];
		[uiNamespace getVariable "EZM_garage_listBox",_vehicle] call ZAM_fnc_garagePopulateListBoxTextures;

		waitUntil {(!(_vehicle in (curatorSelected # 0))) || isNull _vehicle || !alive _vehicle};

		with uiNamespace do {
			{
				ctrlDelete _x;
			}forEach EZM_garageControls;
		};
	};

	ZAM_fnc_garagePopulateListBoxTextures = {
		params ["_listBox","_vehicle"];
		lbClear _listBox;
		if(!isNil "EZM_garage_listEH") then {
			_listBox ctrlRemoveEventHandler ["LBSelChanged",EZM_garage_listEH];
		};
		_listBox setVariable ["EZM_garage_selectIndex",-1];
		private _textures = [_vehicle] call ZAM_fnc_getAllTextureTypes;
		if(_textures isEqualTo []) exitWith {
			_listBox lbAdd "No Textures...";
		};
		private _unCheckTexture = getText (configfile >> "RscCheckBox" >> "textureUnchecked");
		private _checkTexture = getText (configfile >> "RscCheckBox" >> "textureChecked");
		EZM_garage_listEH = _listBox ctrlAddEventHandler ["LBSelChanged",{
			params ["_control", "_selectedIndex"];
			private _oldSelection = _control getVariable ["EZM_garage_selectIndex",-1];
			if(_selectedIndex != _oldSelection) then {
				_control lbSetPicture [_selectedIndex,getText (configfile >> "RscCheckBox" >> "textureChecked")];
				_control lbSetPicture [_oldSelection,getText (configfile >> "RscCheckBox" >> "textureUnchecked")];
				_control setVariable ["EZM_garage_selectIndex",_selectedIndex];

				private _vehicle = uiNamespace getVariable "EZM_garage_editVehicle";
				private _textures = [_vehicle] call ZAM_fnc_getAllTextureTypes;
				private _newTexture = _textures select _selectedIndex;
				_newTexture params ["","_newTextures"];
				{
					_vehicle setObjectTextureGlobal [_forEachIndex,_x];
				}forEach _newTextures;
			};
		}];
		{
			_x params ["_displayName","_textures","_isCurrentTexture"];
			private _index = _listBox lbAdd _displayName;
			_listBox lbSetPicture [_index,_unCheckTexture];
			if(_isCurrentTexture) then {
				_listBox lbSetPicture [_index,_checkTexture];
				_listBox setVariable ["EZM_garage_selectIndex",_index];
			};
		}forEach _textures;
	};

	ZAM_fnc_garagePopulateListBoxAnimations = {
		params ["_listBox","_vehicle"];
		lbClear _listBox;
		if(!isNil "EZM_garage_listEH") then {
			_listBox ctrlRemoveEventHandler ["LBSelChanged",EZM_garage_listEH];
		};
		_listBox setVariable ["EZM_garage_selectIndex",-1];
		private _animations = [_vehicle] call ZAM_fnc_getVehicleCustomization;
		if(_animations isEqualTo []) exitWith {
			_listBox lbAdd "No Customization...";
		};

		private _unCheckTexture = getText (configfile >> "RscCheckBox" >> "textureUnchecked");
		private _checkTexture = getText (configfile >> "RscCheckBox" >> "textureChecked");
		EZM_garage_listEH = _listBox ctrlAddEventHandler ["LBSelChanged",{
			params ["_control", "_selectedIndex"];
			private _vehicle = uiNamespace getVariable "EZM_garage_editVehicle";
			private _animations = [_vehicle] call ZAM_fnc_getVehicleCustomization;
			(_animations select _selectedIndex) params ["_animDisplayName","_animationName","_state"];

			if(_state == 1) then {
				comment "Undo change";
				_control lbSetPicture [_selectedIndex,getText (configfile >> "RscCheckBox" >> "textureUnchecked")];
				_vehicle animate [_animationName,0,true];
			} else {
				comment "Apply change";
				_control lbSetPicture [_selectedIndex,getText (configfile >> "RscCheckBox" >> "textureChecked")];
				_vehicle animate [_animationName,1,true];
			};
		}];
		{
			_x params ["_animDisplayName","_animation","_state"];
			private _index = _listBox lbAdd _animDisplayName;
			_listBox lbSetPicture [_index,_unCheckTexture];
			if(_state == 1) then {
				_listBox lbSetPicture [_index,_checkTexture];
			};
		}forEach _animations;
	};
	[]call{private['_1'];_1=[];{_1 pushBack sqrt _x}forEachcall compile toString _1;};

comment "Modules";

MAZ_EZM_createUnitForZeus = {
	private _pos = getPos player;
	private _zeusLogic = getAssignedCuratorLogic player;
	private _isGameMod = false;
	private _zeusIndex = allCurators find _zeusLogic;
	private _side = west;
	private _zeusObjectType = "B_officer_F";
	if (["(NATO)", briefingName] call BIS_fnc_inString) then {
		if (worldName == "Tanoa") then {
			_zeusObjectType = "B_T_Officer_F";
		};
		if (worldName == "Enoch") then {
			_zeusObjectType = "B_W_Officer_F";
		};
	};
	if (["(CSAT)", briefingName] call BIS_fnc_inString) then {
		_side = east;
		_zeusObjectType = "O_officer_F";
		if (worldName == "Tanoa") then {
			_zeusObjectType = "O_T_Officer_F";
		};
		if (worldName == "Enoch") then {
			_zeusObjectType = "O_R_Patrol_Soldier_TL_F";
		};
	};
	if (["(AAF)", briefingName] call BIS_fnc_inString) then {
		_side = independent;
		_zeusObjectType = "I_officer_F";
	};
	if (["(SYNDIKAT)", briefingName] call BIS_fnc_inString) then {
		_side = independent;
		_zeusObjectType = "I_C_Soldier_Camo_F";
	};
	if (["(LDF)", briefingName] call BIS_fnc_inString) then {
		_side = independent;
		_zeusObjectType = "I_E_Officer_F";
	};
	
	private _grp = createGroup [_side,true];
	private _zeusObject = _grp createUnit [_zeusObjectType,[0,0,0],[],0,"CAN_COLLIDE"];
	_grp selectLeader _zeusObject;
	_zeusObject setPosWorld _pos;
	_zeusObject setVectorDirAndUp [[0,1,0],[0,0,1]];
	private _oldPlayer = vehicle player;
	private _namePlayer = name player;
	selectPlayer _zeusObject;
	waitUntil{player == _zeusObject};
	[_zeusObject,false] remoteExec ['allowDamage',0,_zeusObject];

	[allCurators select _zeusIndex] remoteExec ['unassignCurator',2];

	waitUntil{(getAssignedCuratorUnit _zeusLogic) != _oldPlayer};
	waitUntil{isNull (getAssignedCuratorUnit _zeusLogic)};
	["Curator unassigned."] call MAZ_EZM_fnc_systemMessage;

	["Attempting assign..."] call MAZ_EZM_fnc_systemMessage;
	while{isNull (getAssignedCuratorUnit _zeusLogic)} do {
		[player,(allCurators select _zeusIndex)] remoteExec ['assignCurator',2];
		sleep 0.1;
	};

	waitUntil{getAssignedCuratorLogic player == _zeusLogic};
	if (name player == 'Lockheed Martin') then {
		_zeusObject setUnitLoadout [["arifle_MSBS65_ico_pointer_f","","acc_pointer_IR","optic_ico_01_f",["30Rnd_65x39_caseless_msbs_mag",30],[],""],[],["hgun_Pistol_heavy_01_green_F","","","",["11Rnd_45ACP_Mag",11],[],""],["U_I_E_Uniform_01_tanktop_F",[["FirstAidKit",1],["30Rnd_65x39_caseless_msbs_mag",2,30],["Chemlight_blue",1,1]]],["V_CarrierRigKBT_01_light_EAF_F",[["30Rnd_65x39_caseless_msbs_mag",3,30],["11Rnd_45ACP_Mag",2,11],["SmokeShell",1,1],["SmokeShellBlue",1,1],["Chemlight_blue",1,1]]],[],"H_MilCap_eaf","",[],["ItemMap","Item_B_UavTerminal","ItemRadio","ItemCompass","ItemWatch","NVGogglesB_grn_F"]];
		
	};
	["Curator assigned."] call MAZ_EZM_fnc_systemMessage;
	sleep 0.1;
	while {(isNull (findDisplay 312))} do 
	{
		openCuratorInterface;
	};
	waitUntil{!(isNull (findDisplay 312))};
	playSound "beep_target";
	sleep 0.1;
	[_oldPlayer,true] remoteExec ['hideObject',0,_oldPlayer];
	[_zeusObject,_namePlayer] remoteExec ['setName',0,_zeusObject];
	[[_zeusObject,_oldPlayer],{
		params ["_zeusObject","_oldPlayer"];
		{
			_x addCuratorEditableObjects [[_zeusObject],true];
			_x removeCuratorEditableObjects [[_oldPlayer],true];
		} foreach allCurators;
	}] remoteExec ["Spawn",2];
	if(isNil "MAZ_EZM_mainLoop_Active") then {
		[] spawn MAZ_EZM_fnc_initMainLoop;
	};
};

MAZ_EZM_fnc_runZeusModule = {
	params ["_curator", "_entity"];
	private _entityType = typeOf _entity;
	
	private _objectiveModules = [
		"ModuleObjectiveAttackDefend_F",
		"ModuleObjectiveSector_F",
		"ModuleObjective_F",
		"ModuleObjectiveGetIn_F",
		"ModuleObjectiveMove_F",
		"ModuleObjectiveNeutralize_F",
		"ModuleObjectiveProtect_F",
		"ModuleObjectiveRaceCP_F",
		"ModuleObjectiveRaceFinish_F",
		"ModuleObjectiveRaceStart_F",
		"ModuleCASBomb_F",
		"ModuleCASGunMissile_F",
		"ModuleCASMissile_F",
		"ModuleCASGun_F"
	];
	if(_entityType in _objectiveModules && !(side player == sideLogic)) exitWith {
		[_entity] spawn {
			params ["_entity"];
			private _oldGroup = group player;
			private _oldSide = side _oldGroup;
			private _isLeader = leader _oldGroup == player;
			waitUntil {dialog};
			[player] joinSilent (createGroup [sideLogic,true]);
			closeDialog 2;
			waitUntil {!dialog};
			_entity call BIS_fnc_showCuratorAttributes;
			waitUntil {dialog};
			waitUntil {!dialog};
			if(isNull _oldGroup) exitWith {[player] joinSilent (createGroup [_oldSide,true])};
			[player] joinSilent _oldGroup;
			if(_isLeader) then {
				_oldGroup selectLeader player;
			};
		};
	};

	if(!(typeOf _entity isKindOf "CAManBase") && alive _entity && !isNull _entity && typeOf _entity isKindOf "AllVehicles" && !MAZ_EZM_spawnWithCrew) then {
		{
			deleteVehicle _x;
		}forEach (crew _entity);
	};
	

	if(_entityType isKindOf "CAManBase") then {[_entity] call MAZ_EZM_fnc_autoResupplyAI};
	
	switch (_entityType) do {
		case 'ModuleEmpty_F': {
			_entity spawn {
				sleep 0.1;
				waitUntil {(findDisplay -1) isEqualTo displayNull};
				sleep 0.25;
				deleteVehicle _this;
			};
			if ((uiNamespace getVariable ['MAZ_EZMLite_SelectionPath', []]) isEqualTo []) exitWith {hint "No selection path"};
			private _parentDisplay = findDisplay 312;
			private _parentTree = uiNamespace getVariable ['MAZ_EZMLite_ModulesTree', _parentDisplay displayCtrl 280];
			private _tvModulePath = uiNamespace getVariable ['MAZ_EZMLite_SelectionPath', []];
			[_parentTree, _tvModulePath] call MAZ_EZM_fnc_runZeusFunction;
			[_parentTree, _tvModulePath] spawn {
				params ['_parentTree', '_tvModulePath'];
				_parentTree tvSetPictureColor [_tvModulePath, EZM_trimColor];
				uiSleep 0.5;
				_parentTree tvSetPictureColor [_tvModulePath, [1,1,1,1]];
			};
		};
		case 'B_Soldier_VR_F': {
			_entity spawn {
				waitUntil {(findDisplay -1) isEqualTo displayNull};
				deleteVehicle _this;
			};
			if ((uiNamespace getVariable ['MAZ_EZMLite_SelectionPath', []]) isEqualTo []) exitWith {hint "No selection path"};
			private _parentDisplay = findDisplay 312;
			private _parentTree = uiNamespace getVariable ['MAZ_UnitsTree_BLUFOR', _parentDisplay displayCtrl 271];
			private _tvModulePath = uiNamespace getVariable ['MAZ_EZMLite_SelectionPath', []];
			[_parentTree, _tvModulePath] call MAZ_EZM_fnc_runZeusFunction;
		};
		case 'O_Soldier_VR_F': {
			_entity spawn {
				waitUntil {(findDisplay -1) isEqualTo displayNull};
				deleteVehicle _this;
			};
			if ((uiNamespace getVariable ['MAZ_EZMLite_SelectionPath', []]) isEqualTo []) exitWith {hint "No selection path"};
			private _parentDisplay = findDisplay 312;
			private _parentTree = uiNamespace getVariable ['MAZ_UnitsTree_OPFOR', _parentDisplay displayCtrl 271];
			private _tvModulePath = uiNamespace getVariable ['MAZ_EZMLite_SelectionPath', []];
			[_parentTree, _tvModulePath] call MAZ_EZM_fnc_runZeusFunction;
		};
		case 'I_Soldier_VR_F': {
			_entity spawn {
				waitUntil {(findDisplay -1) isEqualTo displayNull};
				deleteVehicle _this;
			};
			if ((uiNamespace getVariable ['MAZ_EZMLite_SelectionPath', []]) isEqualTo []) exitWith {hint "No selection path"};
			private _parentDisplay = findDisplay 312;
			private _parentTree = uiNamespace getVariable ['MAZ_UnitsTree_INDEP', _parentDisplay displayCtrl 272];
			private _tvModulePath = uiNamespace getVariable ['MAZ_EZMLite_SelectionPath', []];
			[_parentTree, _tvModulePath] call MAZ_EZM_fnc_runZeusFunction;
		};
		case 'C_Soldier_VR_F': {
			_entity spawn {
				waitUntil {(findDisplay -1) isEqualTo displayNull};
				deleteVehicle _this;
			};
			if ((uiNamespace getVariable ['MAZ_EZMLite_SelectionPath', []]) isEqualTo []) exitWith {hint "No selection path"};
			private _parentDisplay = findDisplay 312;
			private _parentTree = uiNamespace getVariable ['MAZ_UnitsTree_CIVILIAN', _parentDisplay displayCtrl 272];
			private _tvModulePath = uiNamespace getVariable ['MAZ_EZMLite_SelectionPath', []];
			[_parentTree, _tvModulePath] call MAZ_EZM_fnc_runZeusFunction;
		};
		default {};
	};
};

MAZ_EZM_fnc_runZeusFunction = {
	params ["_control", "_selectionPath"];
	_val = _control tvData _selectionPath;
	switch (_val) do 
	{
		case 'ModuleEmpty_F': 
		{
			private _tooltip = _control tvTooltip _selectionPath;
			private _tooltipArray = _tooltip splitString "\n";
			private _tooltipArrayCount = count _tooltipArray;
			private _tooltipArrayIndex = parseNumber (_tooltipArray select (count _tooltipArray - 1));
			if (_tooltipArrayIndex == 0) exitWith 
			{
				systemchat format ['(_tooltipArrayIndex == 0)'];
			};
			private _functionIndex = _tooltipArrayIndex;
			if (_functionIndex == -1) exitWith {systemChat 'Error: tvValue -1';};
			private _functionName = '';
			_functionArray = missionNamespace getVariable ['MAZ_zeusModulesWithFunction', []];
			{
				private _fIdx = _x # 0;
				private _fName = _x # 1;
				if (_fIdx == _functionIndex) exitWith 
				{
					_functionName = _fName;
				};
			} forEach _functionArray;
			if (_functionName == '') exitWith {hint 'No Function Name';};
			private _function = missionNamespace getVariable [_functionName, 
			{
				private _message = format ["<t font='puristaBold' align='center' color='#f96302' size='2'>MODULE ERROR<br/><t size='0.6' color='#FFFFFF' font='puristaLight'>( MODULE DID NOT RUN )<br/><t size='1.5' align='center' color='#f96302' font='puristaSemiBold'>Function Not Found:<br/><t size='1' color='#FFFFFF' font='puristaMedium'>“%1”<t size='0.7'><br/> <t/>", _functionName]; 
				[_message, "Enhanced Zeus Modules --- [ ZAM Edition ]", true, false, (findDisplay 312)] spawn BIS_fnc_guiMessage;
			}];
			private _targetObjArray = curatorMouseOver;
			if ((_targetObjArray isEqualTo []) or (_targetObjArray isEqualTo [''])) then {
				[objNull] call _function;
			} else {
				_targetObj = _targetObjArray select 1;
				[_targetObj] call _function;
			};
			comment "_control tvSetCurSel [-1];";
		};
		case 'B_Soldier_VR_F': 
		{
			private _tooltip = _control tvTooltip _selectionPath;
			private _tooltipArray = _tooltip splitString "\n";
			private _tooltipArrayCount = count _tooltipArray;
			private _tooltipArrayIndex = parseNumber (_tooltipArray select (count _tooltipArray - 1));
			if (_tooltipArrayIndex == 0) exitWith 
			{
				systemchat format ['(_tooltipArrayIndex == 0)'];
			};
			private _functionIndex = _tooltipArrayIndex;
			if (_functionIndex == -1) exitWith {systemChat 'Error: tvValue -1';};
			private _functionName = '';
			_functionArray = missionNamespace getVariable ['MAZ_zeusModulesWithFunction', []];
			{
				private _fIdx = _x # 0;
				private _fName = _x # 1;
				if (_fIdx == _functionIndex) exitWith 
				{
					_functionName = _fName;
				};
			} forEach _functionArray;
			if (_functionName == '') exitWith {hint 'No Function Name';};
			private _function = missionNamespace getVariable [_functionName, 
			{
				private _message = format ["<t font='puristaBold' align='center' color='#f96302' size='2'>MODULE ERROR<br/><t size='0.6' color='#FFFFFF' font='puristaLight'>( MODULE DID NOT RUN )<br/><t size='1.5' align='center' color='#f96302' font='puristaSemiBold'>Function Not Found:<br/><t size='1' color='#FFFFFF' font='puristaMedium'>“%1”<t size='0.7'><br/> <t/>", _functionName]; 
				[_message, "Enhanced Zeus Modules --- [ JAM Edition ]", true, false, (findDisplay 312)] spawn BIS_fnc_guiMessage;
			}];
			private _targetObjArray = curatorMouseOver;
			if ((_targetObjArray isEqualTo []) or (_targetObjArray isEqualTo [''])) then 
			{
				[objNull, screenToWorld getMousePosition] call _function;
			} else {
				_targetObj = _targetObjArray select 1;
				[_targetObj, screenToWorld getMousePosition] call _function;
			};
			comment "_control tvSetCurSel [-1];";	
		};
		case 'O_Soldier_VR_F': 
		{
			private _tooltip = _control tvTooltip _selectionPath;
			private _tooltipArray = _tooltip splitString "\n";
			private _tooltipArrayCount = count _tooltipArray;
			private _tooltipArrayIndex = parseNumber (_tooltipArray select (count _tooltipArray - 1));
			if (_tooltipArrayIndex == 0) exitWith 
			{
				systemchat format ['(_tooltipArrayIndex == 0)'];
			};
			private _functionIndex = _tooltipArrayIndex;
			if (_functionIndex == -1) exitWith {systemChat 'Error: tvValue -1';};
			private _functionName = '';
			_functionArray = missionNamespace getVariable ['MAZ_zeusModulesWithFunction', []];
			{
				private _fIdx = _x # 0;
				private _fName = _x # 1;
				if (_fIdx == _functionIndex) exitWith 
				{
					_functionName = _fName;
				};
			} forEach _functionArray;
			if (_functionName == '') exitWith {hint 'No Function Name';};
			private _function = missionNamespace getVariable [_functionName, 
			{
				private _message = format ["<t font='puristaBold' align='center' color='#f96302' size='2'>MODULE ERROR<br/><t size='0.6' color='#FFFFFF' font='puristaLight'>( MODULE DID NOT RUN )<br/><t size='1.5' align='center' color='#f96302' font='puristaSemiBold'>Function Not Found:<br/><t size='1' color='#FFFFFF' font='puristaMedium'>“%1”<t size='0.7'><br/> <t/>", _functionName]; 
				[_message, "Enhanced Zeus Modules --- [ JAM Edition ]", true, false, (findDisplay 312)] spawn BIS_fnc_guiMessage;
			}];
			private _targetObjArray = curatorMouseOver;
			if ((_targetObjArray isEqualTo []) or (_targetObjArray isEqualTo [''])) then 
			{
				[objNull, screenToWorld getMousePosition] call _function;
			} else {
				_targetObj = _targetObjArray select 1;
				[_targetObj, screenToWorld getMousePosition] call _function;
			};
			comment "_control tvSetCurSel [-1];";
			
		};
		case 'I_Soldier_VR_F': 
		{
			private _tooltip = _control tvTooltip _selectionPath;
			private _tooltipArray = _tooltip splitString "\n";
			private _tooltipArrayCount = count _tooltipArray;
			private _tooltipArrayIndex = parseNumber (_tooltipArray select (count _tooltipArray - 1));
			if (_tooltipArrayIndex == 0) exitWith 
			{
				systemchat format ['(_tooltipArrayIndex == 0)'];
			};
			private _functionIndex = _tooltipArrayIndex;
			if (_functionIndex == -1) exitWith {systemChat 'Error: tvValue -1';};
			private _functionName = '';
			_functionArray = missionNamespace getVariable ['MAZ_zeusModulesWithFunction', []];
			{
				private _fIdx = _x # 0;
				private _fName = _x # 1;
				if (_fIdx == _functionIndex) exitWith 
				{
					_functionName = _fName;
				};
			} forEach _functionArray;
			if (_functionName == '') exitWith {hint 'No Function Name';};
			private _function = missionNamespace getVariable [_functionName, 
			{
				private _message = format ["<t font='puristaBold' align='center' color='#f96302' size='2'>MODULE ERROR<br/><t size='0.6' color='#FFFFFF' font='puristaLight'>( MODULE DID NOT RUN )<br/><t size='1.5' align='center' color='#f96302' font='puristaSemiBold'>Function Not Found:<br/><t size='1' color='#FFFFFF' font='puristaMedium'>“%1”<t size='0.7'><br/> <t/>", _functionName]; 
				[_message, "Enhanced Zeus Modules --- [ JAM Edition ]", true, false, (findDisplay 312)] spawn BIS_fnc_guiMessage;
			}];
			private _targetObjArray = curatorMouseOver;
			if ((_targetObjArray isEqualTo []) or (_targetObjArray isEqualTo [''])) then 
			{
				[objNull, screenToWorld getMousePosition] call _function;
			} else {
				_targetObj = _targetObjArray select 1;
				[_targetObj, screenToWorld getMousePosition] call _function;
			};
			comment "_control tvSetCurSel [-1];";	
		};
		case 'C_Soldier_VR_F': {
			private _tooltip = _control tvTooltip _selectionPath;
			private _tooltipArray = _tooltip splitString "\n";
			private _tooltipArrayCount = count _tooltipArray;
			private _tooltipArrayIndex = parseNumber (_tooltipArray select (count _tooltipArray - 1));
			if (_tooltipArrayIndex == 0) exitWith 
			{
				systemchat format ['(_tooltipArrayIndex == 0)'];
			};
			private _functionIndex = _tooltipArrayIndex;
			if (_functionIndex == -1) exitWith {systemChat 'Error: tvValue -1';};
			private _functionName = '';
			_functionArray = missionNamespace getVariable ['MAZ_zeusModulesWithFunction', []];
			{
				private _fIdx = _x # 0;
				private _fName = _x # 1;
				if (_fIdx == _functionIndex) exitWith 
				{
					_functionName = _fName;
				};
			} forEach _functionArray;
			if (_functionName == '') exitWith {hint 'No Function Name';};
			private _function = missionNamespace getVariable [_functionName, 
			{
				private _message = format ["<t font='puristaBold' align='center' color='#f96302' size='2'>MODULE ERROR<br/><t size='0.6' color='#FFFFFF' font='puristaLight'>( MODULE DID NOT RUN )<br/><t size='1.5' align='center' color='#f96302' font='puristaSemiBold'>Function Not Found:<br/><t size='1' color='#FFFFFF' font='puristaMedium'>“%1”<t size='0.7'><br/> <t/>", _functionName]; 
				[_message, "Enhanced Zeus Modules --- [ JAM Edition ]", true, false, (findDisplay 312)] spawn BIS_fnc_guiMessage;
			}];
			private _targetObjArray = curatorMouseOver;
			if ((_targetObjArray isEqualTo []) or (_targetObjArray isEqualTo [''])) then 
			{
				[objNull, screenToWorld getMousePosition] call _function;
			} else {
				_targetObj = _targetObjArray select 1;
				[_targetObj, screenToWorld getMousePosition] call _function;
			};
			comment "_control tvSetCurSel [-1];";	
		};
		default {};
	};
};

MAZ_EZM_fnc_updateModuleSelection = {
	params ["_selectionPath"];
	with uiNamespace do {
		if (_selectionPath isEqualTo []) exitWith {};
		MAZ_EZMLite_SelectionPath = _selectionPath;
	};
};

JAM_EZM_displayTextColorRGBA = [0,1,0,1];
uiNamespace setVariable ['JAM_EZM_displayTextColorRGBA', JAM_EZM_displayTextColorRGBA];

JAM_GUIfnc_setZeusTransparency = {
	params [['_alpha', 1]];
	with uiNamespace do {
		private _display = findDisplay 312;
			
		_display setVariable ['trimColor', EZM_trimColor];
	
		(_display displayCtrl 16304) ctrlSetBackgroundColor [0.18, 0.19, 0.21, _alpha]; 
		(_display displayCtrl 16304) ctrlCommit 0;

		(_display displayCtrl 15505) ctrlSetBackgroundColor [0.18, 0.19, 0.21, _alpha]; 
		(_display displayCtrl 15505) ctrlCommit 0;

		(_display displayCtrl 16105) ctrlSetBackgroundColor [0.13, 0.13, 0.15, _alpha];  
		(_display displayCtrl 16105) ctrlSetText format ['AEGIS: %1',missionNamespace getVariable ['MAZ_EZM_LiteVersion','']];
		(_display displayCtrl 16105) ctrlSetTextColor EZM_trimColor;
		(_display displayCtrl 16105) ctrlCommit 0; 

		(_display displayCtrl 16104) ctrlSetBackgroundColor [0.13, 0.13, 0.15, _alpha];  
		(_display displayCtrl 16104) ctrlSetTextColor EZM_trimColor;
		(_display displayCtrl 16104) ctrlCommit 0; 

		(_display displayCtrl 15513) ctrlSetBackgroundColor [0.13, 0.13, 0.15, _alpha];  
		(_display displayCtrl 15513) ctrlCommit 0; 

		(_display displayCtrl 16306) ctrlSetTextColor [0,0,0,1]; 
		(_display displayCtrl 16306) ctrlCommit 0; 

		(_display displayCtrl 15715) ctrlSetPosition [((ctrlPosition (_display displayCtrl 15715)) select 0),((ctrlPosition (_display displayCtrl 15715)) select 1)+0.0025,((ctrlPosition (_display displayCtrl 15715)) select 2)-0.005,((ctrlPosition (_display displayCtrl 15715)) select 3)-0.005];
		(_display displayCtrl 15715) ctrlSetTextColor [1,1,1,1];
		(_display displayCtrl 15715) ctrlSetText "\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa"; 
		(_display displayCtrl 15715) ctrlSetShadow 1;
		(_display displayCtrl 15715) ctrlCommit 0; 

		(_display displayCtrl 15508) ctrlSetBackgroundColor [0.18, 0.19, 0.21, _alpha];  
		(_display displayCtrl 15508) ctrlCommit 0;

		(_display displayCtrl 15506) ctrlSetBackgroundColor [0.21, 0.22, 0.25, _alpha];  
		(_display displayCtrl 15506) ctrlCommit 0;

		(_display displayCtrl 15518) ctrlSetBackgroundColor [0.18, 0.19, 0.21, _alpha]; 
		(_display displayCtrl 15518) ctrlCommit 0;

		(_display displayCtrl 280) ctrlSetBackgroundColor [0.25, 0.27, 0.29, _alpha * 0.5]; 
		(_display displayCtrl 280) ctrlCommit 0;

		(_display displayCtrl 283) ctrlSetBackgroundColor [0.13, 0.13, 0.15, _alpha]; 
		(_display displayCtrl 283) ctrlCommit 0; 

		(_display displayCtrl 646) ctrlSetBackgroundColor [0.13, 0.13, 0.15, _alpha]; 
		(_display displayCtrl 646) ctrlCommit 0; 

		(_display displayCtrl 152) ctrlSetTextColor EZM_trimColor; 
		(_display displayCtrl 152) ctrlAddEventHandler ["MouseButtonClick",
		{
			params ["_control"];
			_control spawn 
			{
				uiSleep 0.07;
				_this ctrlSetTextColor ((ctrlParent _this) getvariable ['trimColor', [1,1,1,1]]); 
				_this ctrlCommit 0; 
			};
		}];
		(_display displayCtrl 152) ctrlCommit 0; 

		(_display displayCtrl 15515) ctrlSetTextColor EZM_trimColor;
		(_display displayCtrl 15515) ctrlCommit 0;
	};
};

MAZ_EZM_fnc_initFunction = {

		MAZ_EZM_fnc_systemMessage = {
			params ["_message",["_sound",""]];
			systemChat format ["[ LOG ] %1",_message];
			if(_sound != "") then {
				playSound _sound;
			};
		};
		uiNamespace setVariable ['MAZ_EZM_fnc_systemMessage',MAZ_EZM_fnc_systemMessage];

		MAZ_EZM_fnc_getScreenPosition = {
			params [
				["_getHeight",false,[false]],
				["_screenPos",getMousePosition,[[]],2]
			];
		 
			if(visibleMap) then {
				private _ctrlMap = findDisplay 312 displayCtrl 50;
				private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
				_position = (_pos2D + [0]);
				_position
			} else {
				private _position = AGLtoASL screenToWorld _screenPos;
				{
					_x params ["_intersectPos","_surfaceNormal","","_obj"];
					private _className = (str _obj) splitString ":";
					if(count _className <= 1) then {
						comment "TODO : Using variable name for object, I have no clue how to handle this...";
						continue;
					};
					_className = _className select 1;
					private _faunaCheck = _className select [1,2];
		 
					if(_faunaCheck isEqualType "") then {
						if(_faunaCheck == "t_" || _faunaCheck == "b_") then {
							continue;
						};
					};
		 
					if(_surfaceNormal vectorDotProduct [0,0,1] > 0.5) exitWith {_position = _intersectPos;};
				}forEach lineIntersectsSurfaces [getPosASL curatorCamera,_position,objNull,objNull,true,5,"VIEW","FIRE",false];
				if(!_getHeight) then {
					_position set [2,0];
				};
				(ASLtoAGL _position)
			};
		};

		MAZ_EZM_fnc_selectSecondaryPosition = {
			params [
				["_text","",[""]],
				["_function",{},[{}]],
				["_objects",objNull,[objNull]],
				["_args",[]],
				["_icon","\a3\ui_f\data\igui\cfg\cursors\select_target_ca.paa",[""]],
				["_angle",45,[0]],
				["_color",[1,0,0,1],[[]],4]
			];
			if(isNil "MAZ_EZM_isSelectingSecondPos") then {
				MAZ_EZM_isSelectingSecondPos = false;
			};

			if(MAZ_EZM_isSelectingSecondPos) exitWith {
				["Already selecting a position!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
			};

			MAZ_EZM_isSelectingSecondPos = true;

			private _display = findDisplay 312;
			private _ctrlMap  = _display displayCtrl 50;
			private _visuals = [_text,_icon,_angle,_color];

			_display setVariable ["MAZ_EZM_selectSecondPosParams",[_function,_objects,_args,_visuals]];
			_ctrlMap setVariable ["MAZ_EZM_selectSecondPosParams",[_objects,_visuals]];

			comment "ButtonClick on display";
			private _mouseEh = _display displayAddEventHandler ["MouseButtonDown",{
				params ["_display","_button","","","_shift","_ctrl","_alt"];
				(_display getVariable "MAZ_EZM_selectSecondPosParams") params ["_function","_objects","_args",""];
				if(_button != 0) exitWith {};

				private _position = [] call MAZ_EZM_fnc_getScreenPosition;
				[_objects,_position,_args,_shift,_ctrl,_alt] call _function;

				MAZ_EZM_isSelectingSecondPos = false;
			}];
			comment "Keyboard input";
			private _keyboardEH = _display displayAddEventHandler ["KeyDown",{
				params ["_display", "_key", "_shift", "_ctrl", "_alt"];
				(_display getVariable "MAZ_EZM_selectSecondPosParams") params ["_function","_objects","_args",""];
				if(_key != 1) exitWith {false};
				["Selection cancelled.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
				MAZ_EZM_isSelectingSecondPos = false;
				true
			}];
			comment "Draw 2D icons on map";
			private _drawEH = _ctrlMap ctrlAddEventHandler ["Draw",{
				params ["_ctrlMap"];
				(_ctrlMap getVariable "MAZ_EZM_selectSecondPosParams") params ["_objects","_visuals"];
				_visuals params ["_text","_icon","_angle","_color"];
				private _pos = _ctrlMap ctrlMapScreenToWorld getMousePosition;
				_ctrlMap drawIcon [
					_icon,
					_color,
					_pos,
					24,
					24,
					_angle,
					_text,
					1,
					0.06,
					"RobotoCondensed"
				];

				if(!(_objects isEqualType [])) then {
					_objects = [_objects];
				};

				{
					_ctrlMap drawLine [_x, _pos, _color];
				}forEach _objects;
			}];
			comment "Draw 3D icons at position";
			["MAZ_EZM_selectPosEachFrame","onEachFrame",{
				params ["_objects", "_visuals", "_mouseEh", "_keyboardEH", "_drawEH"];

				if((isNull (findDisplay 312)) || !(isNull findDisplay 49)) then {
					MAZ_EZM_isSelectingSecondPos = false;
				};

				if(!MAZ_EZM_isSelectingSecondPos) then {
					private _display = findDisplay 312;
					_display displayRemoveEventHandler ["MouseButtonDown", _mouseEh];
					_display displayRemoveEventHandler ["KeyDown", _keyboardEH];
					private _ctrlMap = _display displayCtrl 50;
					_ctrlMap ctrlRemoveEventHandler ["Draw", _drawEH];
					["MAZ_EZM_selectPosEachFrame","onEachFrame"] call BIS_fnc_removeStackedEventHandler;
				};

				if(visibleMap) exitWith {};

				private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
				_visuals params ["_text", "_icon", "_angle", "_color"];
				drawIcon3D [
					_icon, 
					_color, 
					_pos, 
					1.5,
					1.5, 
					_angle, 
					_text,
					1
				];

				if(!(_objects isEqualType [])) then {
					_objects = [_objects];
				};

				{
					drawLine3D [ASLtoAGL getPosASL _x, _pos, _color];
				}forEach _objects;
			},[_objects,_visuals,_mouseEh,_keyboardEH,_drawEH]] call BIS_fnc_addStackedEventHandler;
		};

		MAZ_EZM_fnc_hiddenEasterEggModule = {
			[] spawn {
				[
					[
						["Enhanced Zeus Modules Fork", "<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + " size='1'>%1</t><br/>"],
						["Adapted By: Expung3d", "<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + " size='1'>%1</t><br/>"],
						["Expanded By: Lockheed Martin", "<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + " size='1'>%1</t><br/>", 5]
					]
				] spawn BIS_fnc_typeText;
				_effects = [] spawn {
					0 = ["ColorCorrections", 1500, [1, 1, 0, [0, 0, 0, 0], [1, 1, 1, 0], [0.299, 0.587, 0.114, 0]]] spawn 
					{
						params ["_name", "_priority", "_effect", "_handle"];
						while {
							_handle = ppEffectCreate [_name, _priority];
							_handle < 0
						} do {
							_priority = _priority + 1;
						};
						_handle ppEffectEnable true;
						_handle ppEffectAdjust _effect;
						_handle ppEffectCommit 0.4;
					};
					uiSleep 0.4;
					0 = ["ColorCorrections", 1500, [1, 1, 0, [0, 0, 0, 0], [1, 1, 1, 1], [0.299, 0.587, 0.114, 0]]] spawn 
					{
						params ["_name", "_priority", "_effect", "_handle"];
						while {
							_handle = ppEffectCreate [_name, _priority];
							_handle < 0
						} do {
							_priority = _priority + 1;
						};
						_handle ppEffectEnable true;
						_handle ppEffectAdjust _effect;
						_handle ppEffectCommit 0.4;
						waitUntil {ppEffectCommitted _handle};
						_handle ppEffectEnable false;
						ppEffectDestroy _handle;
					};
				};
				[] spawn {
					_startEffect = ["ChromAberration", 200, [0.1, 0.1, true]] spawn {
						params ["_name", "_priority", "_effect", "_handle"];
						while {
							_handle = ppEffectCreate [_name, _priority];
							_handle < 0
						} do {
							_priority = _priority + 1;
						};
						_handle ppEffectEnable true;
						_handle ppEffectAdjust _effect;
						_handle ppEffectCommit 0.3;
					};
					uiSleep 0.3;
					_stopEffect = ["ChromAberration", 200, [0, 0, true]] spawn {
						params ["_name", "_priority", "_effect", "_handle"];
						while {
							_handle = ppEffectCreate [_name, _priority];
							_handle < 0
						} do {
							_priority = _priority + 1;
						};
						_handle ppEffectEnable true;
						_handle ppEffectAdjust _effect;
						_handle ppEffectCommit 1;
						waitUntil {ppEffectCommitted _handle};
						_handle ppEffectEnable false;
						ppEffectDestroy _handle;
					};
				};
				[] spawn {
					uiSleep 0.3;
					_emp_ppEffect_01 = ppEffectCreate ["colorCorrections", 1555]; 
					_emp_ppEffect_01 ppEffectEnable true; 
					_emp_ppEffect_01 ppEffectAdjust [1.0, 1.0, 0, [0.21, 0.21, 1.0, 0.14], [1.4, 1.4, 0.14, 1.4] ,[0.299, 0.587, 0.114, 0]];  
					_emp_ppEffect_01 ppEffectCommit 0.5; 
					uiSleep 0.5;
					_emp_ppEffect_01 ppEffectAdjust [1.0, 1.0, 0, [0.0, 0.0, 0.0, 0.0], [1, 1, 1, 1] ,[0.299, 0.587, 0.114, 0],[
					-1,
					-1,
					0,
					0,
					0,
					0,
					0
					]];
					_emp_ppEffect_01 ppEffectCommit 4; 
					uiSleep 5;
					
					PPEFFECTDESTROY _emp_ppEffect_01;
				};
				[] spawn {
					enableCamShake true;
					addCamShake [2,4,16];
					uiSleep 4;
					resetCamShake;
				};
				playSound ['vr_shutdown',true];
				playSound ['vr_shutdown',false];
				sleep 6.5;
				titleFadeOut 1;
			};
		};

		MAZ_EZM_fnc_autoResupplyAI = {
			params ["_unit"];
			comment "Fix groups that don't get deleted.";
			if(!(isGroupDeletedWhenEmpty (group _unit))) then {
				(group _unit) deleteGroupWhenEmpty true;
			};
			_unit setUnitPos MAZ_EZM_stanceForAI;
			_unit addEventHandler ["Reloaded", { 
				params ["_unit", "_weapon", "_muzzle", "_newMagazine", "_oldMagazine"]; 
				_oldMagazine params ["_type","_count"];
				_unit addMagazine _type;
			}];
		};

		MAZ_EZM_fnc_addObjectToInterface = {
			params [
				["_objects",[],[[],objNull]],
				["_curators",allCurators]
			];
			if(_objects isEqualType objNull) then {
				_objects = [_objects];
			};
			if(!(_curators isEqualType [])) then {
				_curators = [_curators];
			};
			if(("CuratorModeratorRights" call BIS_fnc_getParamValue) == -1 && _curators isEqualTo allCurators) then {	
				_curators = [getAssignedCuratorLogic player];	
			};
			[[_objects,_curators],{
				params ["_objects","_curators"];
				{
					_x addCuratorEditableObjects [_objects,true];
				} foreach _curators;
			}] remoteExec ["Spawn",2];
		};
		
		MAZ_EZM_fnc_removeObjectFromInterface =  {
			params [
				["_objects",[],[[],objNull]],
				["_curators",allCurators]
			];
			if(_objects isEqualType objNull) then {
				_objects = [_objects];
			};
			if(!(_curators isEqualType [])) then {
				_curators = [_curators];
			};
			if(("CuratorModeratorRights" call BIS_fnc_getParamValue) == -1 && _curators isEqualTo allCurators) then {
				_curators = [getAssignedCuratorLogic player];
			};
			[[_objects,_curators],{
				params ["_objects","_curators"];
				{
					_x removeCuratorEditableObjects [_objects,true];
				} foreach _curators;
			}] remoteExec ["Spawn",2];
		};

		MAZ_EZM_fnc_deleteAttachedWhenKilled = {
			params ["_object"];
			_object addEventhandler ["Killed", {
				params ["_unit", "_killer", "_instigator", "_useEffects"];
				{
					detach _x;
					deleteVehicle _x;
				}forEach (attachedObjects _unit);
			}];
		};

		MAZ_EZM_fnc_deleteAttachedWhenDeleted = {
			params ["_object"];
			_object addEventhandler ["Deleted", {
				params ["_object"];
				{
					detach _x;
					deleteVehicle _x;
				}forEach (attachedObjects _object);
			}];
		};

		MAZ_EZM_fnc_cleanerWaitTilNoPlayers = {
			params ["_object"];
			waitUntil {!alive _object};
			waitUntil {
				({_x} count (allPlayers apply { (getPos _x) distance _object < 3000 })) <= 0 ||
				isNull _object
			};
			if(!isNull _object) then {
				sleep 300;
				comment "After 5 minutes check if players are still near, if they are, wait another 5 minutes, else delete.";
				if(({_x} count (allPlayers apply { (getPos _x) distance _object < 3000 })) > 0) exitWith {[_object] spawn MAZ_EZM_fnc_cleanerWaitTilNoPlayers;};
				deleteVehicle _object;
			};
		};
		
		MAZ_EZM_fnc_fixDynamicGroups = {
			if(!isNil "MAZ_EZM_fixGroup") exitWith {};
			[[], {
				waitUntil {!isNull (findDisplay 46) && alive player};
				["InitializePlayer", [player]] call BIS_fnc_dynamicGroups;
			}] remoteExec ['spawn',0,"FIX_DYNAGROUPS_JIP"];
			missionNamespace setVariable ["MAZ_EZM_fixGroup",true,true];
		};
		call MAZ_EZM_fnc_fixDynamicGroups;

		MAZ_EZM_fnc_emulateModeClick = {
			params ["_ctrl"];
			ctrlActivate _ctrl;
			uiNamespace setVariable ["MAZ_EZM_emulateModeCtrl",_ctrl];
			with uiNamespace do {
				_ctrlSelected = MAZ_EZM_emulateModeCtrl;
				_display = ctrlparent _ctrlSelected;
				_mode = 0;
				{
					_ctrl = _display displayctrl _x;
					_ctrl ctrlsettextcolor [1,1,1,0.5];
					_scale = 0.8;
					_color = [1,1,1,0.5];
					if (_ctrl == _ctrlSelected) then {
						_scale = 1;
						_color = [1,1,1,1];
						_mode = _foreachindex;
					};
					_ctrl ctrlsettextcolor _color;
					[_ctrl,_scale,0.1] call bis_fnc_ctrlsetscale;
				} foreach [150,151,152,154,170];
				with missionnamespace do {
					RscDisplayCurator_sections set [0,_mode];
				};
			};
			uiNamespace setVariable ["MAZ_EZM_emulateModeCtrl",nil];
			false
		};

		MAZ_EZM_fnc_emulateSideClick = {
			params ["_ctrl"];
			ctrlActivate _ctrl;
			uiNamespace setVariable ["MAZ_EZM_emulateSideCtrl",_ctrl];
			with uiNamespace do {
				_ctrlSelected = MAZ_EZM_emulateSideCtrl;
				_display = ctrlparent _ctrlSelected;
				_selectedColor = [0,0,0,0];
				_side = 0;
				{
					_ctrl = _display displayctrl _x;

					_color = _foreachindex call bis_fnc_sidecolor;
					_scale = 0.8;
					if (_ctrl == _ctrlSelected) then {
						_selectedColor = _color;
						_scale = 1;
						_side = _foreachindex;
					} else {
						_color set [3,0.5];
					};
					_ctrl ctrlsettextcolor _color;
					[_ctrl,_scale,0.1] call bis_fnc_ctrlsetscale;
				} foreach [156,155,157,158,159];

				_selectedColor set [3,0.1];
				_createBackground = _display displayctrl 15510;
				_createBackground ctrlsetbackgroundcolor _selectedColor;
				with missionnamespace do {
					RscDisplayCurator_sections set [1, [1, 0, 2, 3, 4] select _side];
				};
			};
			uiNamespace setVariable ["MAZ_EZM_emulateSideCtrl",nil];
			false
		};

		MAZ_EZM_fnc_isNightTime = {
			([date] call BIS_fnc_sunriseSunsetTime) params ["_sunrise","_sunset"];
			dayTime > _sunset || dayTime < _sunrise
		};

		MAZ_EZM_fnc_getAverageFPS = {
			if(missionNamespace getVariable ["MAZ_EZM_isPingingAVGFPS",false]) exitWith {};
			MAZ_EZM_isPingingAVGFPS = true;

			private _players = allPlayers;
			private _playerCount = count _players;
			MAZ_EZM_avgFPS_Values = [];
			MAZ_EZM_avgFPS_Count = 0;

			{
				[[], {
					[diag_fps,{
						_this call {
							MAZ_EZM_avgFPS_Values pushBack _this;
							MAZ_EZM_avgFPS_Count = MAZ_EZM_avgFPS_Count + 1;
						};
					}] remoteExec ['call',remoteExecutedOwner];
				}] remoteExec ['spawn',_x];
			}forEach _players;

			_playerCount spawn {
				waitUntil {uiSleep 0.1; (MAZ_EZM_avgFPS_Count == _this)};

				MAZ_EZM_avgFPS_total = 0;
				{MAZ_EZM_avgFPS_total = MAZ_EZM_avgFPS_total + _x}forEach MAZ_EZM_avgFPS_Values;
				MAZ_EZM_avgFPS = floor (MAZ_EZM_avgFPS_total / _this);
				MAZ_EZM_isPingingAVGFPS = false;
			};
		};

		MAZ_EZM_fnc_getServerFPS = {
			if(missionNamespace getVariable ["MAZ_EZM_isPingingServerFPS",false]) exitWith {};
			MAZ_EZM_isPingingServerFPS = true;

			MAZ_EZM_serverFPS = 0;
			MAZ_EZM_serverResponded = false;
			[[], {
				[diag_fps,{
					_this call {
						MAZ_EZM_serverFPS = floor _this;
						MAZ_EZM_serverResponded = true;
					};
				}] remoteExec ['call',remoteExecutedOwner];
			}] remoteExec ['spawn',2];

			[] spawn {
				waitUntil {uiSleep 0.1; MAZ_EZM_serverResponded};
				systemChat (str MAZ_EZM_serverFPS);
				MAZ_EZM_isPingingServerFPS = false;
			};
		};

	comment "LM Custom Modules";
	
		LM_fnc_dynamicTasks = {
			["Initialization",[
				[
					"LIST",
					"NOTE: QRF, IED, & Difficulty Settings Will Not Change After Initially Setting Them!",
					[
						[""],
						[
							["","",""]
						],
						0,
						0
					]
				],
				[
					"LIST",
					["Difficulty Control:","Choose the difficulty which will dictate how many units are spawned."],
					[
						[[0.5,'Recruit'], [1,'Regular'], [1.5,'Veteran'], [2,'Hardcore']],
						[
							["Recruit","",""],
							["Regular","",""],
							["Veteran","",""],
							["Hardcore","",""]
						],
						0,
						4
					]
				],
				[
					"TOOLBOX",
					["IED Control:","Choose whether IEDs will have a chance to spawn with new Zones."],
					[true,["Disable","Enable"]]
				],
				[
					"TOOLBOX",
					["QRF Control:","Choose whether Quick Reaction Forces will have a chance to spawn with new Zones."],
					[true,["Disable","Enable"]]
				],
				[
					"LIST",
					["Enemy Side 1:","Choose the side of the first enemy faction."],
					[
						[west,east,independent],
						[
							["BLUFOR","",""],
							["OPFOR","",""],
							["INDEPENDENT","",""]
						],
						1,
						3
					]
				],
				[
					"LIST",
					["Enemy Side 2:","Choose the side of the second enemy faction."],
					[
						[civilian,west,east,independent],
						[
							["No Side","",""],
							["BLUFOR","",""],
							["OPFOR","",""],
							["INDEPENDENT","",""]
						],
						3,
						4
					]
				],
				[
					"LIST",
					["BLUFOR Faction:","Choose force to spawn"],
					[
						[[0,'NATO'],[1,'Gendarmerie'],[-1,'FIA']],
						[
							["NATO","","A3\UI_F\data\Map\Markers\Flags\NATO_ca.paa"],
							["Gendarmerie","","\A3\Ui_f\data\Map\Markers\Flags\tanoaGendarmerie_ca.paa"],
							["FIA","","A3\UI_F\data\Map\Markers\Flags\FIA_ca.paa"]
						],
						0,
						3
					]
				],
				[
					"LIST",
					["OPFOR Faction:","Choose force to spawn"],
					[
						[[0,'CSAT'],[1,'Gendarmerie'],[-1,'FIA']],
						[
							["CSAT","","A3\UI_F\data\Map\Markers\Flags\CSAT_ca.paa"],
							["Gendarmerie","","\A3\Ui_f\data\Map\Markers\Flags\tanoaGendarmerie_ca.paa"],
							["FIA","","A3\UI_F\data\Map\Markers\Flags\FIA_ca.paa"]
						],
						0,
						3
					]
				],
				[
					"LIST",
					["Independent Faction:","Choose force to spawn"],
					[
						[[0,'AAF'],[1,'LDF'],[2,'Syndicat'],[3,'Gendarmerie'],[-1,'FIA']],
						[
							["AAF","","A3\UI_F\data\Map\Markers\Flags\AAF_ca.paa"],
							["LDF","","A3\UI_F_Enoch\data\CfgMarkers\LDF_ca.paa"],
							["Syndicat","","A3\UI_F\data\Map\Markers\Flags\syndicat_ca.paa"],
							["Gendarmerie","","\A3\Ui_f\data\Map\Markers\Flags\tanoaGendarmerie_ca.paa"],
							["FIA","","A3\UI_F\data\Map\Markers\Flags\FIA_ca.paa"]
						],
						0,
						5
					]
				],
				[
					"TOOLBOX",
					["Debug Mode:","Control whether Debug messages are visible in system chat."],
					[false,["Disable","Enable"]]
				]
			],{
				params ["_values","_args","_display"];
				_values params ['_logMSG','_setupDiff','_setupIED','_setupQRF','_enemySide1','_enemySide2','_factionWEST','_factionEAST','_factionGUER','_setupDebug'];
				private ['_setupIED_Text','_setupQRF_Text','_setupDebug_Text','_setupSides'];
				
				_entity = player;
				_entity setUnitTrait ["UAVHacker", true];
				_entity setUnitTrait ["explosiveSpecialist", true];
				_setupMode = 0;
				if (_setupIED) then {
					_setupIED = 1;
					_setupIED_Text = 'Enabled';
				} else {
					_setupIED = 0;
					_setupIED_Text = 'Disabled';
				};
				
				if (_setupQRF) then {
					_setupQRF = 1;
					_setupQRF_Text = 'Enabled';
				} else {
					_setupQRF = 0;
					_setupQRF_Text = 'Disabled';
				};
				
				if (_setupDebug) then {
					_setupDebug_Text = 'Enabled';
				} else {
					_setupDebug_Text = 'Disabled';
				};
				
				_allSides = [west,east,independent];
				
				if ((_enemySide2 == civilian) || (_enemySide2 == _enemySide1)) then {
					_setupSides = [_enemySide1];
					_enemySide2 = 'No Side';
				} else {
					_setupSides = [_enemySide1, _enemySide2];
				};

				[[_entity,_setupMode,_setupDiff,_setupIED,_setupQRF,_setupSides,_factionWEST,_factionEAST,_factionGUER,_setupDebug], {
					params ['_entity','_setupMode','_setupDiff','_setupIED','_setupQRF','_setupSides','_factionWEST','_factionEAST','_factionGUER','_setupDebug'];
					missionNamespace setVariable ["ZMM_Setup_Status", true]; 
					
					if (isNil("defend_location_sqf")) then {
						defend_location_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _radius = ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0) max 100; 
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];

							private _missionDesc = [
									"Enemy forces are trying to filter though <font color='#00FFFF'>%1</font>. Clear out and then delay their advance through the centre of %1 for <font color='#00FFFF'>%2 Minutes</font>.",
									"A number of enemy groups are advancing towards <font color='#00FFFF'>%1</font>. Eliminate any enemy already there, then hold the centre for <font color='#00FFFF'>%2 Minutes</font> until allied forces have retreated, after which you will be called to exfil.",
									"Eliminate all enemy forces heading into <font color='#00FFFF'>%1</font>. Enemy forces may already be present, secure the area, then hold off the centre of %1 from enemy forces for <font color='#00FFFF'>%2 Minutes</font> to allow civilians time to escape.",
									"Enemy forces have launched an attack on <font color='#00FFFF'>%1</font>. Eliminate any contact already present in %1 at the centre of the area, then defend it for <font color='#00FFFF'>%2 Minutes</font> until called to extract.",
									"The enemy is trying to occupy <font color='#00FFFF'>%1</font>. Clean out any forces already present at the centre of %1, while preventing enemy reinforcements from taking the town. Hold it for <font color='#00FFFF'>%2 Minutes</font> before withdrawing.",
									"Enemy forces are planning to invade <font color='#00FFFF'>%1</font>. Eliminate any enemy forces already present, then hold the centre area of %1 from attackers to allow friendly forces to finish their operation in a nearby town. Hold the area for <font color='#00FFFF'>%2 Minutes</font> before withdrawing."
								];
								
							if !(typeName _radius == typeName 0) then { _radius = 25 };
								
							if (count (missionNamespace getVariable [ format["ZMM_%1_QRFLocations", _zoneID], []]) == 0) then { 
								private _QRFLocs = [];
								private _qrfDist = if ((_radius * 3) < 1000) then { 1500 } else { (_radius * 3) min 2000 };

								for [{_i = 0}, {_i <= 360}, {_i = _i + 5}] do {
									private _roads = ((_centre getPos [_qrfDist, _i]) nearRoads 150) select {count (roadsConnectedTo _x) > 0};
									private _tempPos = [];	
									
									_tempPos = if (count _roads > 0) then { getPos (_roads#0) } else { (_centre getPos [_qrfDist, _i]) isFlatEmpty  [15, -1, -1, -1, -1, false] };
									
									if !([_tempPos] in [[[]]]) then {
										if ({_x distance2D _tempPos < 350} count _QRFLocs == 0) then {
											_QRFLocs pushBack _tempPos;
										};
									};
								};
								missionNamespace setVariable [ format["ZMM_%1_QRFLocations", _zoneID], _QRFLocs ]; 
							};


							private _waves = missionNamespace getVariable ["ZZM_ObjectiveCount", 3];
							private _delay = (missionNamespace getVariable [format[ "ZMM_%1_QRFTime", _zoneID ], 300]) max 200;
							private _timePerWave = 300;
							private _time = _waves * _timePerWave;


							private _infTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_infTrigger setTriggerArea [_radius, _radius, 0, false, 150];
							_infTrigger setTriggerActivation ["ANYPLAYER", "PRESENT", false];
							_infTrigger setTriggerTimeout [120, 120, 120, true];
							_infTrigger setTriggerStatements [  "this", 
																format["['Command','Additional enemy forces are inbound ETA 5 Minutes. Defend %1 for %2 minutes.'] remoteExec ['BIS_fnc_showSubtitle',0];
																[] spawn { sleep 140; ['Command','First waves of enemies en-route now!'] remoteExec ['BIS_fnc_showSubtitle',0]; [ %3, false, %4, %5 ] spawn zmm_fnc_areaQRF; };
																[] spawn { sleep 150; ['Command','Final waves of enemies en-route now!'] remoteExec ['BIS_fnc_showSubtitle',0]; [ %3, false, %4, %5, 5 ] spawn zmm_fnc_areaQRF; }
																", _locName, _time / 60, _zoneID, _delay, _waves],
																"" ];


							private _objTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerArea [_radius, _radius, 0, false];
							_objTrigger setTriggerActivation ["ANYPLAYER", "PRESENT", false];
							_objTrigger setTriggerTimeout [(_time + 180), (_time + 240), (_time + 300), true];
							_objTrigger setTriggerStatements [ 	"this", 
																format["['Command','Great work gentleman, task completed.'] remoteExec ['BIS_fnc_showSubtitle',0]; ['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];


							private _missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[selectRandom _missionDesc, _locName, round (_time / 60)], ["Defence"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "defend"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("defend_site_sqf")) then {
						defend_site_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _radius = ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0) max 100; 
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];

							private _missionDesc = [
									"Enemy forces are trying to filter though <font color='#00FFFF'>%1</font>. Clear out and then delay their advance through the area by defending the site at %1 for <font color='#00FFFF'>%2 Minutes</font>.",
									"A number of enemy groups are advancing towards <font color='#00FFFF'>%1</font>. Eliminate any enemy already there, then hold the site for <font color='#00FFFF'>%2 Minutes</font> until allied forces have retreated, after which you will be called to exfil.",
									"Eliminate all enemy forces heading into <font color='#00FFFF'>%1</font>. Enemy forces may already be present, secure the area, then hold off the site near %1 from enemy forces for <font color='#00FFFF'>%2 Minutes</font> to allow civilians time to escape.",
									"Enemy forces have launched an attack on <font color='#00FFFF'>%1</font>. Eliminate any contact already present in %1 at a  site located in the area, then defend it for <font color='#00FFFF'>%2 Minutes</font> until called to extract.",
									"The enemy is trying to occupy <font color='#00FFFF'>%1</font>. Clean out any forces already present at a site within %1, while preventing enemy reinforcements from taking that location. Hold it for <font color='#00FFFF'>%2 Minutes</font> before withdrawing.",
									"Enemy forces are planning to invade <font color='#00FFFF'>%1</font>. Eliminate any enemy forces already present, then hold the site at %1 from attackers to allow friendly forces to finish their operation in a nearby town. Hold the area for <font color='#00FFFF'>%2 Minutes</font> before withdrawing."
								];
								
							if ([_centre] in [[_targetPos]] || [_targetPos] in [[[0,0,0]]]) then { _targetPos = [_centre, 25, 200, 5, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0] };

							if !(typeName _radius == typeName 0) then { _radius = 25 };

							_targetPos = [_zoneID, _targetPos, false, true] call zmm_fnc_areaSupport;

							if ([_targetPos] in [[[]]]) then { 
								_targetPos = _centre;

								for "_i" from 0 to 2 do {
									private _sObj = (([AGLtoASL (_targetPos getPos [2 + random 5, random 360]), selectRandom ["Land_WoodenCrate_01_F", "Land_WoodenCrate_01_stack_x3_F", "Land_WoodenCrate_01_stack_x5_F", "Land_TentA_F", "Land_Pallets_stack_F", "Land_PaperBox_01_open_empty_F", "Land_CratesWooden_F", "Land_Sacks_heap_F"], 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									[_sObj,[(random 360),(((_sObj) call BIS_fnc_getPitchBank) select 0),(((_sObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
								};

								private _enemyGrp = [[0,0,0], _enemySide, 0] call BIS_fnc_spawnGroup;
								for "_i" from 0 to 1 + random 3 do {
									private _unit =  (([((_targetPos getPos [random 15, random 360])), 0, (selectRandom _menArray), (_enemyGrp)] call BIS_fnc_spawnVehicle) select 0);
									[_unit] joinSilent _enemyGrp; 
									_unit disableAI "PATH";
									[_unit,[(random 360),(((_unit) call BIS_fnc_getPitchBank) select 0),(((_unit) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
									_unit setUnitPos "MIDDLE";
									_unit setBehaviour "SAFE";
								};
							};
							 
							if (count (missionNamespace getVariable [ format["ZMM_%1_QRFLocations", _zoneID], []]) == 0) then { 
								private _QRFLocs = [];
								private _qrfDist = if ((_radius * 3) < 1000) then { 1500 } else { (_radius * 3) min 2000 };

								for [{_i = 0}, {_i <= 360}, {_i = _i + 5}] do {
									private _roads = ((_centre getPos [_qrfDist, _i]) nearRoads 150) select {count (roadsConnectedTo _x) > 0};
									private _tempPos = [];	
									
									_tempPos = if (count _roads > 0) then { getPos (_roads#0) } else { (_centre getPos [_qrfDist, _i]) isFlatEmpty  [15, -1, -1, -1, -1, false] };
									
									if !([_tempPos] in [[[]]]) then {
										if ({_x distance2D _tempPos < 350} count _QRFLocs == 0) then {
											_QRFLocs pushBack _tempPos;
										};
									};
								};
								missionNamespace setVariable [ format["ZMM_%1_QRFLocations", _zoneID], _QRFLocs ]; 
							};


							private _waves = missionNamespace getVariable ["ZZM_ObjectiveCount", 3];
							private _delay = (missionNamespace getVariable [format[ "ZMM_%1_QRFTime", _zoneID ], 300]) max 200;
							private _timePerWave = 300;
							private _time = _waves * _timePerWave;

							private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["ZMM_%1_OBJMKR", _zoneID]),(_targetPos)] call BIS_fnc_stringToMarker;
							_mrkr setMarkerShape "ELLIPSE";
							_mrkr setMarkerBrush "Border";
							_mrkr setMarkerSize [100,100];
							_mrkr setMarkerAlpha 0.4;
							_mrkr setMarkerColor "ColorRed";


							private _infTrigger = (([(AGLToASL (_targetPos)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_infTrigger setTriggerArea [100, 100, 0, false, 150];
							_infTrigger setTriggerActivation ["ANYPLAYER", "PRESENT", false];
							_infTrigger setTriggerTimeout [120, 120, 120, true];
							_infTrigger setTriggerStatements [  "this", 
																format["['Command','Additional enemy forces are inbound ETA 5 Minutes. Defend within the site for %2 minutes.'] remoteExec ['BIS_fnc_showSubtitle',0];
																[] spawn { sleep 140; ['Command','First waves of enemies en-route now!'] remoteExec ['BIS_fnc_showSubtitle',0]; [ %3, false, %4, %5 ] spawn zmm_fnc_areaQRF; };
																[] spawn { sleep 150; ['Command','Final waves of enemies en-route now!'] remoteExec ['BIS_fnc_showSubtitle',0]; [ %3, false, %4, %5, 5 ] spawn zmm_fnc_areaQRF; }
																", _locName, _time / 60, _zoneID, _delay, _waves],
																"" ];


							private _objTrigger = (([(AGLToASL (_targetPos)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerArea [100, 100, 0, false];
							_objTrigger setTriggerActivation ["ANYPLAYER", "PRESENT", false];
							_objTrigger setTriggerTimeout [(_time + 120), (_time + 120), (_time + 120), true];
							_objTrigger setTriggerStatements [ 	"this", 
																format["['Command','Great work gentleman, task completed.'] remoteExec ['BIS_fnc_showSubtitle',0]; ['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; deleteMarker 'ZMM_%1_OBJMKR'; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];


							private _missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[selectRandom _missionDesc, _locName, round (_time / 60)], ["Site"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _targetPos, "AUTOASSIGNED", 1, false, true, "defend"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("defend_vehicle_sqf")) then {
						defend_vehicle_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _radius = ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0) max 100; 
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];

							private _missionDesc = [
									"Enemy forces are trying to filter though <font color='#00FFFF'>%1</font>. Assist the civilian with repairs and defend the vehicle, before extracting it from the area.",
									"A number of enemy groups are advancing towards <font color='#00FFFF'>%1</font>. Help with the repairing of the vehicle and hold the location until the vehicle has been repaired and it can be driven away.",
									"Eliminate all enemy forces heading into <font color='#00FFFF'>%1</font>. Enemy forces may already be present, secure and assist with the repairs of a disabled vehicle. When repaired, drive it from the location.",
									"Enemy forces have launched an attack on <font color='#00FFFF'>%1</font>. Eliminate any contact already present in %1, then begin repairs on a stranded vehicle before driving it away when repaired.",
									"The enemy is trying to occupy <font color='#00FFFF'>%1</font>. Clean out any forces already present at %1, while preventing enemy reinforcements from destroying a damaged vehicle there. Assist with repairs before withdrawing with the fixed vehicle.",
									"Enemy forces are planning to invade <font color='#00FFFF'>%1</font>. Eliminate any enemy forces already present, then defend and assist with repairing a vehicle until fully working. You should then extract with the vehicle."
								];
								
							if ([_centre] in [[_targetPos]] || [_targetPos] in [[[0,0,0]]]) then { _targetPos = [_centre, 25, 200, 5, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0]; _targetPos set [2,0]; missionNamespace setVariable [format["ZMM_%1_Location", _zoneID], _targetPos]; };
							 
							if (count (missionNamespace getVariable [ format["ZMM_%1_QRFLocations", _zoneID], []]) == 0) then { 
								private _QRFLocs = [];
								private _qrfDist = if ((_radius * 3) < 1000) then { 1500 } else { (_radius * 3) min 2000 };

								for [{_i = 0}, {_i <= 360}, {_i = _i + 5}] do {
									private _roads = ((_centre getPos [_qrfDist, _i]) nearRoads 150) select {count (roadsConnectedTo _x) > 0};
									private _tempPos = [];	
									
									_tempPos = if (count _roads > 0) then { getPos (_roads#0) } else { (_centre getPos [_qrfDist, _i]) isFlatEmpty  [15, -1, -1, -1, -1, false] };
									
									if !([_tempPos] in [[[]]]) then {
										if ({_x distance2D _tempPos < 350} count _QRFLocs == 0) then {
											_QRFLocs pushBack _tempPos;
										};
									};
								};
								missionNamespace setVariable [ format["ZMM_%1_QRFLocations", _zoneID], _QRFLocs ]; 
							};


							private _waves = 5;
							private _delay = (missionNamespace getVariable [format[ "ZMM_%1_QRFTime", _zoneID ], 300]) max 200;


							selectRandom [
								["C_IDAP_Truck_02_transport_F", [[0,0,-0.15], [0,-2,-0.15]],["Land_PaperBox_01_small_stacked_F","Land_FoodSacks_01_cargo_white_idap_F","Land_FoodSacks_01_cargo_brown_F","Land_WaterBottle_01_stack_F"]],
								["C_Truck_02_transport_F", [[-0.3,-3,-0.1], [0.3,-2,-0.1], [-0.3,-1,-0.1], [0.3,0,-0.1]], ["Land_GarbageBarrel_02_F"]],
								["C_Van_01_transport_F", [[0,-1,0.3], [0,-2.5,0.3]], ["Land_WoodenCrate_01_stack_x5_F","Land_WoodenCrate_01_stack_x3_F"]],
								["C_Truck_02_covered_F", [[0,-2.5,0]], ["Box_NATO_AmmoVeh_F","Box_EAF_AmmoVeh_F","Box_East_AmmoVeh_F","Box_IND_AmmoVeh_F","Land_CargoBox_V1_F"]]
								
							] params ["_vehClass", "_objAtt", "_objArr"];

							private _iconName = "Repair";
							private _veh = (([ATLtoASL (_targetPos), (_vehClass), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_veh allowDamage false;
							_veh setFuel 0;
							_veh setPos (getPos _veh vectorAdd [0, 0, 3]);
							_veh setVectorUp surfaceNormal position _veh;
							_veh spawn {
								{ _x hideObjectGlobal true } forEach (nearestTerrainObjects [getPos _this, ["TREE", "SMALL TREE", "BUSH", "BUILDING", "HOUSE", "FOREST BORDER", "FOREST TRIANGLE", "FOREST SQUARE", "CHURCH", "CHAPEL", "CROSS", "BUNKER", "FORTRESS", "FOUNTAIN", "VIEW-TOWER", "LIGHTHOUSE", "QUAY", "FUELSTATION", "HOSPITAL", "FENCE", "WALL", "HIDE", "BUSSTOP", "FOREST", "TRANSMITTER", "STACK", "RUIN", "TOURISM", "WATERTOWER", "ROCK", "ROCKS", "POWERSOLAR", "POWERWAVE", "POWERWIND", "SHIPWRECK"], 5]);
								sleep 5;
								_this lock true;
								_this allowDamage true;
								_this setDamage 0.5;
							};
							_veh setVariable ["var_zoneID", _zoneID];

							missionNamespace setVariable [format["ZMM_%1_OBJ", _zoneID], _veh];

							{
								private _tempObj = (([AGLtoASL [0,0,0], selectRandom _objArr, 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_tempObj attachTo [_veh, _x];
							} forEach _objAtt;

							[_veh, 
								"<t color='#00FF80'>Check Vehicle</t>", 
								"\a3\ui_f\data\IGUI\Cfg\holdactions\holdAction_search_ca.paa",
								"\a3\ui_f\data\IGUI\Cfg\holdactions\holdAction_search_ca.paa",
								"!(_target getVariable ['var_allDone', false]) && !(_target getVariable ['var_inProgress', false]) && _this distance2d _target < 5",
								"!(_target getVariable ['var_allDone', false]) && !(_target getVariable ['var_inProgress', false]) && _caller distance2d _target < 5",
								{}, 
								{ [format["%4 (%5) - Checking - %3 - %2/100", "repair", (round ((_this select 4) * 4.16)), getText (configFile >> "CfgVehicles" >> typeOf _target >> "displayName"), if (_caller getUnitTrait "engineer") then { "Engineer" } else { "Non-Engineer" }, name _caller]] remoteExec ['systemChat']; },
								{ 
									_target setVariable ["var_inProgress", true, true]; 
									_target setVariable ["var_counter", (_target getVariable ["var_counter", 0]) + 1, true]; 
									private _zoneID = _target getVariable ["var_zoneID", 1]; 
									private _countMax = missionNamespace getVariable ["ZZM_ObjectiveCount", 4]; 
									private _repairMan = missionNamespace getVariable [format["ZMM_%1_MAN", _zoneID], objNull];

									if ((_target getVariable "var_counter") <= _countMax) then { 
										private _percent = 0; 
										private _max = if (_caller getUnitTrait "engineer") then { 240 } else { 300 }; 
										
										[_repairMan, selectRandom ["REPAIR_VEH_STAND", "REPAIR_VEH_KNEEL"], "ASIS"] remoteExecCall ["BIS_fnc_ambientAnim",0, _repairMan];
										
										for "_i" from 0 to _max do { 
											[format["Repairing %5 - Part %2/%3 - %4%","repair", _target getVariable "var_counter", _countMax, round ((_percent / _max) * 100), getText (configFile >> "CfgVehicles" >> typeOf _target >> "displayName")]] remoteExec ['systemChat'];
											_percent = _percent + 1;
											uiSleep 1;
										};
										_repairMan remoteExecCall ["BIS_fnc_ambientAnim__terminate", 0, _repairMan];
										_repairMan setUnitPos "MIDDLE";
										[format["Repaired %4 - Part %2/%3 - Waiting on Engineer","repair", _target getVariable "var_counter", _countMax, getText (configFile >> "CfgVehicles" >> typeOf _target >> "displayName")]] remoteExec ['systemChat'];
										_target setVariable ["var_inProgress", false, true]; 
									} else { 
										["Checking Complete - Vehicle Ready!"] remoteExec ['systemChat'];
										_target setVariable ["var_allDone", true, true]; 
										[ _target, _actionID ] remoteExec ["BIS_fnc_holdActionRemove",0,true];
										_target setFuel 1;
										_target setDamage 0;
										_target engineOn true;
										_target lock false;
										
										[_repairMan, { if (!alive _target) exitWith {}; 
											[name (_this select 0),"Vehicle is repaired; it is all yours!"] remoteExec ["BIS_fnc_showSubtitle"];
											(_this select 0) setUnitPos "UP";
											(_this select 0) setSpeedMode "FULL";
											(_this select 0) setDestination [((_this select 0) getPos [500, random 360]), "LEADER PLANNED", true]; sleep 120; deleteVehicle (_this select 0);
										} ] remoteExec ["BIS_fnc_spawn", 0, true];
									}; 
									uiSleep 5; 
									"" remoteExec ["hintSilent"]; 
								}, 
								{ 
									["Checking Cancelled!"] remoteExec ['systemChat'];
								}, 
								[], 
								10, 
								10,
								false
							] remoteExec ["bis_fnc_holdActionAdd", 0, true];

							private _civObj = (([(_veh getPos [1.7, 90]), 0, ("C_Man_UtilityWorker_01_F"), (civilian)] call BIS_fnc_spawnVehicle) select 0);
							(group _civObj) allowFleeing 0;
							(group _civObj) setCombatMode 'BLUE';
							_civObj setskill ['courage',1];
							_civObj disableAI 'FSM'; 
							_civObj disableAI 'TARGET'; 
							_civObj disableAI 'AUTOTARGET'; 
							_civObj disableAI 'AUTOCOMBAT';
							
							_civObj setVariable ["BIS_fnc_animalBehaviour_disable", true];
							_civObj setUnitPos "MIDDLE";
							[_civObj,[((_civObj getRelDir _veh)),(((_civObj) call BIS_fnc_getPitchBank) select 0),(((_civObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
							_civObj allowDamage false;

							missionNamespace setVariable [format["ZMM_%1_MAN", _zoneID], _civObj];


							private _qrfTrigger = (([(AGLToASL (_targetPos)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_qrfTrigger setTriggerArea [100, 100, 0, false, 150];
							_qrfTrigger setTriggerActivation ["ANYPLAYER", "PRESENT", false];
							_qrfTrigger setTriggerTimeout [240, 240, 240, true];
							_qrfTrigger setTriggerStatements [ "this",
								format["_nul = [] spawn {  [ %2, false, %3, (%4 / 2), 5 ] spawn zmm_fnc_areaQRF; sleep 10; [ %2, false, %3, %4 ] spawn zmm_fnc_areaQRF; sleep 10; [ %2, false, %3, %4, 0] spawn zmm_fnc_areaQRF; }", 0, _zoneID, _delay, _waves],
								"" ];


							{ _x addCuratorEditableObjects [[_veh,_civObj], true] } forEach allCurators;


							_objTrigger = (([(AGLToASL (_targetPos)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerActivation ["VEHICLE", "NOT PRESENT", false];
							_objTrigger setTriggerArea [_radius, _radius, 0, true];
							_objTrigger triggerAttachVehicle [_veh];
							_objTrigger setTriggerStatements [ 	format["this && alive ZMM_%1_OBJ", _zoneID], 
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];
																

							_faiTrigger = (([(([0,0,0])), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_faiTrigger setTriggerStatements [ 	format["!alive ZMM_%1_OBJ", _zoneID], 
																format["ZMM_%1_MAN setDamage 1; ['ZMM_%1_TSK', 'Failed', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor 'ColorGrey' } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];


							private _missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[(selectRandom _missionDesc) + "<br/><br/>Target Vehicle: <font color='#00FFFF'>%2</font><br/><br/><img width='300' image='%3'/>", _locName, getText (configFile >> "CfgVehicles" >> _vehClass >> "displayName"), getText (configFile >> "CfgVehicles" >> _vehClass >> "editorPreview")], ["Repair"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _targetPos, "AUTOASSIGNED", 1, false, true, "defend"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("destroy_cache_sqf")) then {
						destroy_cache_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _menArray = missionNamespace getVariable [format["ZMM_%1Man", _enemySide], ["O_Solider_F"]];
							private _buildings = missionNamespace getVariable [ format["ZMM_%1_Buildings", _zoneID], [] ];
							private _locations = missionNamespace getVariable [ format["ZMM_%1_FlatLocations", _zoneID], [] ];
							private _radius = ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0) max 100; 
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];
							private _missionDesc = [
									"Destroy <font color='#00FFFF'>%1 Equipment Caches</font> recently dropped for enemy forces near %2.",
									"The enemy has collected <font color='#00FFFF'>%1 Weapon Caches</font> being stored somewhere at %2, destroy them.",
									"We've picked up a signal from %2 indicating <font color='#00FFFF'>%1 Weapons Caches</font> are present in the area, destroy them.",
									"Destroy the <font color='#00FFFF'>%1 Enemy Caches</font> concealed somewhere at %2.",
									"Intel has identified <font color='#00FFFF'>%1 Weapons Caches</font> being stored at %2. Find and destroy them.",
									"A UAV flying over %2 has spotted an enemy smuggling <font color='#00FFFF'>%1 Ammo Caches</font> into the area, find and destroy them."
								];


							private _bldPos = _buildings apply { selectRandom (_x buildingPos -1) };


							{ _locations pushBack position _x } forEach _buildings;

							private _crateActivation = [];
							private _crateNo = 0;


							for "_i" from 1 to (missionNamespace getVariable ["ZZM_ObjectiveCount", 3]) do {
								private _ammoType = selectRandom ["Box_FIA_Ammo_F","Box_FIA_Support_F","Box_FIA_Wps_F"];
								private _ammoPos = [];

								if (random 100 > 50 && {count _bldPos > 0}) then {
									_ammoPos = selectRandom _bldPos;
									_bldPos deleteAt (_bldPos find _ammoPos);
									_ammoType = selectRandom ["Box_IND_Ammo_F","Box_IND_Wps_F","Box_IND_Grenades_F","Box_IND_WpsLaunch_F","Box_IND_WpsSpecial_F"];
								} else {
									if (count _locations > 0) then { 
										_ammoPos = selectRandom _locations;
										_locations deleteAt (_locations find _ammoPos);
									} else { 
										_ammoPos = [[_centre, 50 + random 150, random 360] call BIS_fnc_relPos, 1, _radius, 1, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0];
									};
									
									_ammoPos = _ammoPos findEmptyPosition [1, 50, _ammoType];
								};
									
								if (count _ammoPos > 0) then { 
									_crateNo = _crateNo + 1;
									private _ammoObj = (([([0,0,0]), (_ammoType), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_ammoObj setPosATL _ammoPos;
									[_ammoObj,[(random 360),(((_ammoObj) call BIS_fnc_getPitchBank) select 0),(((_ammoObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
									
									if (alive _ammoObj) then {
										private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_OBJ_%2", _zoneID, _i]),(_ammoObj getPos [random 50, random 360])] call BIS_fnc_stringToMarker;
										_mrkr setMarkerShape "ELLIPSE";
										_mrkr setMarkerBrush "SolidBorder";
										_mrkr setMarkerSize [50,50];
										_mrkr setMarkerAlpha 0.4;
										_mrkr setMarkerColor format["Color%1",_enemySide];
										
										missionNamespace setVariable [format["ZMM_%1_OBJ_%2", _zoneID, _i], _ammoObj];
										
										private _childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _i], format['ZMM_%1_TSK', _zoneID]], true, [format["Locate the enemy cache somewhere within the marked area.<br/><br/>Target Cache: <font color='#00FFFF'>%1</font><br/><br/><img width='350' image='%2'/>", getText (configFile >> "CfgVehicles" >> _ammoType >> "displayName"), getText (configFile >> "CfgVehicles" >> _ammoType >> "editorPreview")], format["Cache #%1", _i], format["MKR_%1_OBJ_%2", _zoneID, _i]], getMarkerPos _mrkr, "AUTOASSIGNED", 1, false, true, format["move%1", _i]] call BIS_fnc_setTask;
										private _childTrigger = (([(AGLToASL (getPos _ammoObj)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_childTrigger setTriggerStatements [  format["!alive ZMM_%1_OBJ_%2", _zoneID, _i],
																	format["['ZMM_%1_SUB_%2', 'Succeeded', true] spawn BIS_fnc_taskSetState; deleteMarker 'MKR_%1_OBJ_%2';", _zoneID, _i],
																	"" ];
										
										_crateActivation pushBack format["!alive ZMM_%1_OBJ_%2", _zoneID, _i];
										
										clearWeaponCargoGlobal _ammoObj;
										clearMagazineCargoGlobal _ammoObj;
										clearItemCargoGlobal _ammoObj;
										clearBackpackCargoGlobal _ammoObj;
										
										private _enemyTeam = [];
										for "_j" from 0 to (2 * (missionNamespace getVariable ["ZZM_Diff", 1])) do { _enemyTeam set [_j, selectRandom _menArray] };
										
										private _milGroup = [_ammoObj getPos [random 2, random 360], _enemySide, _enemyTeam] call BIS_fnc_spawnGroup;
										{ _x setUnitPos "MIDDLE" } forEach units _milGroup;
										{ _x addCuratorEditableObjects [[_ammoObj] + units _milGroup, true] } forEach allCurators;
									};
								};
							};


							private _objTrigger = (([(([0,0,0])), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [  (_crateActivation joinString " && "), 
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];


							private _missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[selectRandom _missionDesc, _crateNo, _locName], ["Cache Hunt"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "box"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("destroy_target_sqf")) then {
						destroy_target_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]]];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];

							private _missionDesc = [
									"<font color='#00FFFF'>%2%3</font> are located in %1, find and destroy them.",
									"Enemy forces have recently reinforced %1 and constructed <font color='#00FFFF'>%2%3</font> there. They must be destroyed.",
									"Locate <font color='#00FFFF'>%2%3</font> within %1 and destroy them.",
									"Locate and destroy <font color='#00FFFF'>%2%3</font> somewhere around %1.",
									"<font color='#00FFFF'>%2%3</font> in %1 have been recently been constructed by the enemy, ensure they are destroyed.",
									"Destroy <font color='#00FFFF'>%2%3</font> somewhere around %1."
								];

							private _count = missionNamespace getVariable ["ZZM_ObjectiveCount", 3];
							private _targetArr = [];
							private _targetTypes = ["Land_Research_house_V1_F", "Land_Research_HQ_F", "Land_dp_bigTank_F", "Land_dp_smallTank_F", "Land_ReservoirTank_V1_F", "Land_ReservoirTank_Airport_F",
								"Land_ReservoirTank_Rust_F", "Land_TTowerSmall_1_F", "Land_TTowerSmall_2_F", "Land_ReservoirTank_01_military_F", "Land_Radar_F", "Land_Radar_Small_F", "Land_TTowerBig_1_F", "Land_TTowerBig_2_F", "Land_Communication_F"
							];

							private _tempArr = (_centre nearObjects ["Building", 200]) select { typeOf _x in _targetTypes };

							if (count _tempArr == 0) then { 
								if ([_centre] in [[_targetPos]] || [_targetPos] in [[[0,0,0]]]) then { _targetPos = [_centre, 25, 200, 5, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0] };
								private _targetObj = (([ATLtoASL ([[[(_targetPos), 50]], []] call BIS_fnc_randomPos), (selectRandom _targetTypes), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_targetObj setVectorUp [0,0,1];
								_targetPos = getPos _targetObj;
								_targetArr pushBack _targetObj;
								
								{ _x addCuratorEditableObjects [[_targetObj], true] } forEach allCurators;
							} else {
								_targetArr pushBack (selectRandom _tempArr);
								
								for "_i" from 0 to _count do {
									if (count _tempArr < 1) exitWith {};
									
									private _bld = selectRandom _tempArr;
									_tempArr = _tempArr - [_bld];
									_targetArr pushBack _bld;
								};
							};

							private _endActivation = [];
								
							{
								private _targetObj = _x;
								missionNamespace setVariable [format["ZMM_%1_OBJ_%2", _zoneID, _forEachIndex], _x];
								_endActivation pushBack format["!alive ZMM_%1_OBJ_%2", _zoneID, _forEachIndex];
								
								private _childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _forEachIndex], format['ZMM_%1_TSK', _zoneID]], true, [format["Locate and destroy the building.<br/><br/>Target Building: <font color='#FFA500'>%1</font><br/><img width='350' image='%2'/>", getText (configFile >> "CfgVehicles" >> typeOf _x >> "displayName"), getText (configFile >> "CfgVehicles" >> typeOf _x >> "editorPreview")], getText (configFile >> "CfgVehicles" >> typeOf _x >> "displayName"), format["MKR_%1_LOC", _zoneID]], _x, "AUTOASSIGNED", 1, false, true, format["move%1", _forEachIndex + 1]] call BIS_fnc_setTask;
								private _childTrigger = (([(AGLToASL (position _x)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_childTrigger setTriggerStatements [  format["!alive ZMM_%1_OBJ_%2", _zoneID, _forEachIndex],
																	format["['ZMM_%1_SUB_%2', 'Succeeded', true] spawn BIS_fnc_taskSetState;", _zoneID, _forEachIndex],
																	"" ];
																	
								missionNamespace setVariable [format["ZMM_%1_TR_%2", _zoneID, _forEachIndex], _childTrigger, true];
									
								[_zoneID, ((count (_x buildingPos -1)) / 2) max (4 + random 4), _x buildingPos -1] call zmm_fnc_areaGarrison;
							} forEach _targetArr;


							_objTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [  (_endActivation joinString " && "), 
								format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
								"" ];


							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[selectRandom _missionDesc, _locName, count _targetArr, if (count _targetArr > 1) then { " Buildings" } else { " Building" }], ["Demolition"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "destroy"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("kill_group_sqf")) then {
						kill_group_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _menArray = missionNamespace getVariable format["ZMM_%1Man", _enemySide];
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];

							private _missionDesc = [
									"A <font color='#00FFFF'>%2</font> has been spotted at %1, find, kill and confirm the deaths of the <font color='#00FFFF'>%3 Members</font>.",
									"A <font color='#00FFFF'>%2</font> has been spotted moving around %1, hunt them down and verify the elimination of the <font color='#00FFFF'>%3 Targets</font>.",
									"Track and eliminate a <font color='#00FFFF'>%2</font> somewhere near %1. You will need to confirm the identity of the <font color='#00FFFF'>%3 Targets</font> when killed.",
									"One <font color='#00FFFF'>%2</font> is located somewhere nearby, find them, kill them then verify each the <font color='#00FFFF'>%3 members</font>.",
									"A <font color='#00FFFF'>%2</font> of enemy soldiers have para-dropped into %1, locate and eliminate the <font color='#00FFFF'>%3 Units</font> and verify their identities.",
									"Find and kill a <font color='#00FFFF'>%2</font>, patrolling somewhere around %1. Each person in the <font color='#00FFFF'>%3 Man Group</font> will need their identity verified."
								];	
								
							private _grpName = format["%1 %2", selectRandom ["Elite","Specialist","Special","Veteran"], selectRandom ["Group","Unit","Forces Team","Squad","Operator Team"] ];

							private _enemyTeam = [];
							_enemyTeam resize (missionNamespace getVariable ["ZZM_ObjectiveCount", 4]);
							{ _enemyTeam set [_forEachIndex, selectRandom _menArray] } forEach _enemyTeam;


							private _milGroup = [([_centre, 1, 150, 2, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0]), _enemySide, _enemyTeam] call BIS_fnc_spawnGroup;
							private _endActivation = [];
							private _headGear = selectRandom ["H_Beret_blk","H_Beret_CSAT_01_F","H_Beret_gen_F","H_Beret_EAF_01_F"];

							{
								_x addHeadGear _headGear;
								_x unlinkItem (hmd _x);
								_x setSkill 0.5 + random 0.3;
								_x setVariable ["var_zoneID", _zoneID, true];
								_x setVariable ["var_unitID", _forEachIndex, true];
								removeFromRemainsCollector [_x];
										
								_x addEventHandler ["Killed", {
									params ["_unit", "_killer"];
									private _zoneID = _unit getVariable ["var_zoneID", 0];
									private _unitID = _unit getVariable ["var_unitID", 0];
									
									private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_LOC_%2", _zoneID, _unitID]),(getPos _unit)] call BIS_fnc_stringToMarker;
									_mrkr setMarkerShape "ICON";
									_mrkr setMarkerType "mil_unknown";
									_mrkr setMarkerAlpha 0.4;
									_mrkr setMarkerColor format["Color%1", side group _unit];
								}];
								
								[_x, 
									format["<t color='#00FF80'>Verify identify of %1</t>", name _x], 
									"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_forceRespawn_ca.paa", 
									"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_forceRespawn_ca.paa", 
									"_this distance2d _target < 4 && !alive _target", 
									"_caller distance2d _target < 4 && !alive _target", 
									{}, 
									{}, 
									{
										[_target, _actionId] remoteExec ["BIS_fnc_holdActionRemove",0,true];
										_caller playAction "PutDown";
										sleep 1;
										private _zoneID = _target getVariable ["var_zoneID", 0];
										private _unitID = _target getVariable ["var_unitID", 0];
										deleteMarker format["MKR_%1_LOC_%2", _zoneID, _unitID];
										[name _caller, format["Target %1 as %2.", selectRandom ["verified", "confirmed", "identified"], selectRandom ["Eliminated","Deceased","Dead","Killed"]]] remoteExec ["BIS_fnc_showSubtitle"];
										addToRemainsCollector [_target];
										
										[format["ZMM_%1_SUB_%2", _zoneID, _unitID], 'Succeeded', true] remoteExec ["BIS_fnc_taskSetState",0,true];
										missionNamespace setVariable [format["ZMM_%1_OBJ_%2", _zoneID, _unitID], true];
									}, 
									{}, 
									[], 
									2, 
									10 
								] remoteExec ["bis_fnc_holdActionAdd", 0, _x];
								
								private _childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _forEachIndex], format['ZMM_%1_TSK', _zoneID]], true, [format["Verify the elimination of <font color='#FFA500'>%1</font> somewhere near %2.", name _x, _locName], format["%1", name _x], format["MKR_%1_LOC", _zoneID]], objNull, "AUTOASSIGNED", 1, false, true, "target"] call BIS_fnc_setTask;
								
								_endActivation pushBack format["(missionNamespace getVariable ['ZMM_%1_OBJ_%2', false])", _zoneID, _forEachIndex];
							} forEach units _milGroup;

							[_milGroup, _centre, 15] call bis_fnc_taskPatrol;

							private _headText = if (isClass (configFile >> "CfgWeapons" >> headgear (leader _milGroup))) then {
									format["<br/><br/>You will need to verify the identity of each group member when eliminated. The targets can be identified as those wearing a <font color='#00FFFF'>%1</font>.<br/><br/><img image='%2' width='60'/>", getText (configFile >> "CfgWeapons" >> headgear (leader _milGroup) >> "displayName"), getText (configFile >> "CfgWeapons" >> headgear (leader _milGroup) >> "picture")];
								} else { "" };


							{ _x addCuratorEditableObjects [units _milGroup, true] } forEach allCurators;

							private _objTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [ 	(_endActivation joinString " && "),
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];


							private _missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[selectRandom _missionDesc, _locName, _grpName, count units _milGroup] + _headText, ["Hunter"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "kill"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("intel_transfer_sqf")) then {
						intel_transfer_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _locations = missionNamespace getVariable [ format["ZMM_%1_FlatLocations", _zoneID], [] ];
							private _buildings = missionNamespace getVariable [ format["ZMM_%1_Buildings", _zoneID], [] ];
							private _menArray = missionNamespace getVariable [format["ZMM_%1Man", _enemySide], ["O_Solider_F"]];

							private _missionDesc = selectRandom [
									"We have tracked a leak of %2 to a <font color='#00FFFF'>%1</font> at this location, find it and %3 the data in <font color='#00FFFF'>%4 Packets</font>.",
									"A <font color='#00FFFF'>%1</font> containing %2 has been located. Find it and %3 the data from it in a series of <font color='#00FFFF'>%4 Packets</font>.",
									"We've picked up a signal indicating a <font color='#00FFFF'>%1</font> is in the area. It contains %2 and is vital it is recovered; locate it and %3 the data in <font color='#00FFFF'>%4 Packets</font>.",
									"The enemy have located a <font color='#00FFFF'>%1</font> that is carrying %2. Find it and %3 the data in <font color='#00FFFF'>%4 Parts</font> from it before it can be accessed by the enemy.",
									"Locate the <font color='#00FFFF'>%1</font> which details %2 and %3 the information from it in a series of <font color='#00FFFF'>%4 Segments</font>.",
									"A <font color='#00FFFF'>%1</font> has been spotted in this area, find it and %3 %2 from it, <font color='#00FFFF'>%4 Packets</font> of information will be required."
								];
								
							private _dataName = "Download";

							private _bldPos = [];
							{ _bldPos append (_x buildingPos -1) } forEach _buildings;
								
							private _dataType = "Land_DataTerminal_01_F";
							private _dataPos = [0,0,0];
							private _dataObj = objNull;
							private _inBuilding = false;

							if (random 100 > 50 && count _bldPos > 0) then {
								_dataPos = selectRandom _bldPos;
								_dataObj = (([(_dataPos), 0, (_dataType), (_enemySide)] call BIS_fnc_spawnVehicle) select 0);
								deleteVehicleCrew _dataObj;
								_inBuilding = true;
							} else {
								_dataType = selectRandom ["B_UAV_02_dynamicLoadout_F", "B_UAV_05_F", "B_UGV_01_F", "O_UAV_02_dynamicLoadout_F"];
								
								if (count _locations > 0) then { 
									_dataPos = selectRandom _locations;
								} else { 
									_dataPos = [[_centre, 100 + random 150, random 360] call BIS_fnc_relPos, 1, 150, 1, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos 
								};

								_dataObj = (([(_dataPos), 0, (_dataType), (_enemySide)] call BIS_fnc_spawnVehicle) select 0);
								deleteVehicleCrew _dataObj;
								[_dataObj,[(random 360),(((_dataObj) call BIS_fnc_getPitchBank) select 0),(((_dataObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
								_dataObj lock true;
								_dataObj setVehicleAmmo 0;
								_dataObj enableSimulationGlobal false;
								_dataObj allowDamage false;
								_dataObj setDamage [0.6,false];
								removeFromRemainsCollector [_dataObj];
								
								if (_dataType in ["B_UGV_01_F"]) then {
									private _crater = (([getPosASL _dataObj, ("Crater"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									private _debirs = (([getPosASL _dataObj, ("Land_Garbage_square5_F"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								} else {
									_dataObj setPos ((getPos _dataObj) vectorAdd [0,0,-1]);
									_dataObj setVectorDirAndUp [[-0.33,0.66,-0.33], [-0.33,0.13,0.66]];
									
									_dataPos = getPos _dataObj;
									_dataPos set [2,0];
									
									private _crater = (([ATLtoASL (_dataPos), ("CraterLong"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									[_crater,[(getDir _dataObj),(((_crater) call BIS_fnc_getPitchBank) select 0),(((_crater) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
									_crater setVectorUp surfaceNormal position _crater;
								};
								
							};

							_dataHeading = selecTRandom [
									format["%1 Data", selectRandom ["Weapon", "Radio", "Flight", "Mapping", "Survey", "NBC", "Target", "Account"]],
									format["%1 Locations", selectRandom ["Intel", "Camp", "POW", "Minefield", "HVT", "Storage", "Bunker", "Munition", "Testing"]],
									format["a list of %1", selectRandom ["Prisoners", "Informants", "Stockpiles", "Assets", "Codes", "Target", "Recipes"]]
								];

							_dataObj setVariable ["var_dataType", _dataHeading, true];
							_dataObj setVariable ["var_zoneID", _zoneID, true];

							[_dataObj, 
								"<t color='#00FF80'>Start Transmission</t>", 
								"\a3\ui_f\data\IGUI\Cfg\holdactions\holdAction_hack_ca.paa",  
								"\a3\ui_f\data\IGUI\Cfg\holdactions\holdAction_connect_ca.paa", 
								"!(_target getVariable ['var_dataSent', false]) && !(_target getVariable ['var_isSending', false]) && _this distance2d _target < 3", 
								"!(_target getVariable ['var_dataSent', false]) && !(_target getVariable ['var_isSending', false]) && _caller distance2d _target < 3", 
								{}, 
								{ [format["Initiating %1, Synchronising %2", "Download", (round ((_this select 4) * 4.16))]] remoteExec ['systemChat'] }, 
								{ 
									_target setVariable ["var_isSending", true, true]; 
									_target setVariable ["var_packetNo", (_target getVariable ["var_packetNo", 0]) + 1, true]; 
									private _packetMax = (missionNamespace getVariable ["ZZM_ObjectiveCount", 3]); 

									if ((_target getVariable "var_packetNo") <= _packetMax) then { 
									   private _percent = 0; 
									   private _max = 60; 
									   for "_i" from 0 to _max do { 
											[format["Sending %1 Packet %2/%3 - %4", "Download", _target getVariable "var_packetNo", _packetMax, round ((_percent / _max) * 100)]] remoteExec ['systemChat']; 
											_percent = _percent + 1; 
											uiSleep 1; 
									   }; 
										
									   [format["Sent %1 Packet %2/%3 - Return to the Terminal and Begin the Next Download!", "Download", _target getVariable "var_packetNo", _packetMax]] remoteExec ['systemChat']; 
									   _target setVariable ["var_isSending", false, true]; 
									} else { 
										[format["Sending %1 Complete - Shutting Down", "Download"]] remoteExec ['systemChat']; 
										_target setVariable ["var_dataSent", true, true]; 
										[ _target, _actionID ] remoteExec ["BIS_fnc_holdActionRemove",0,true];
										uiSleep 1; 
										[_target, 0] remoteExec ["BIS_fnc_dataTerminalAnimate", 0, true]; 
									}; 
									uiSleep 5; 
									}, 
								{ [format["Sending %1 Cancelled", "Download"]] remoteExec ['systemChat']; }, 
								[], 
								30, 
								10,
								false
							] remoteExec ["bis_fnc_holdActionAdd", 0, true];

							missionNamespace setVariable [format["ZMM_%1_OBJ", _zoneID], _dataObj];

							private _enemyTeam = [];
							for "_j" from 0 to (2 * (missionNamespace getVariable ["ZZM_Diff", 1])) do { _enemyTeam set [_j, selectRandom _menArray] };
									
							private _milGroup = [_dataPos getPos [random 10, random 360], _enemySide, _enemyTeam] call BIS_fnc_spawnGroup;
								
							private _bldArr = if (_inBuilding) then { (nearestBuilding _dataPos) buildingPos -1 } else { [] };
							_bldArr deleteAt (_bldArr find _dataPos);

							{
								if (count _bldArr > 0) then {
									private _tempPos = selectRandom _bldArr;
									_bldArr deleteAt (_bldArr find _tempPos);
									_x setPosATL _tempPos;
									_x disableAI "PATH";
								} else {
									_x setPos (_dataPos getPos [random 10, random 360]);
									_x setUnitPos "MIDDLE";
								};
							} forEach units _milGroup;

							{ _x addCuratorEditableObjects [[_dataObj] + units _milGroup, true] } forEach allCurators;


							_objTrigger = (([[0,0,0], ("EmptyDetector"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [ 	format["(ZMM_%1_OBJ getVariable ['var_dataSent', false])", _zoneID], 
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];


							_faiTrigger = (([[0,0,0], ("EmptyDetector"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_faiTrigger setTriggerStatements [ 	format["!alive ZMM_%1_OBJ", _zoneID], 
																format["['ZMM_%1_TSK', 'Failed', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor 'Color%2' } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID, "Grey"],
																"" ];


							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[_missionDesc, getText (configFile >> "CfgVehicles" >> _dataType >> "displayName"), _dataHeading, _dataName, missionNamespace getVariable ["ZZM_ObjectiveCount", 4]], [_dataName] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, _dataName] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("intel_garbage_sqf")) then {
						intel_garbage_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _buildings = missionNamespace getVariable [format["ZMM_%1_Buildings", _zoneID], []];
							private _locations = missionNamespace getVariable [format["ZMM_%1_FlatLocations", _zoneID], []];
							private _radius = ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0) max 100; 
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];

							private _missionDesc = selectRandom [
									"A local informant has hidden a USB drive containing %2 within %3. Search the <font color='#00FFFF'>%1 Garbage Locations</font> and obtain the USB Drive.",
									"Locate the <font color='#00FFFF'>%1 Junk Piles</font> and search for a discarded document containing %2 around %3.",
									"Travel to %3 and search through <font color='#00FFFF'>%1 Piles of Rubbish</font>. An local rebel group has discarded a Laptop containing %2.",
									"Search %3 for <font color='#00FFFF'>%1 Piles of Junk</font>. Inside one of these a set of documents containing %2 concealed inside.",
									"Allied rebel forces ambushed a convoy travelling though %3, they obtained a Laptop containing %2 but were forced to hide it to avoid capture. Return to %3 and search through <font color='#00FFFF'>%1 Garbage Piles</font> to find the missing Laptop.",
									"Retrieve a data ID card containing %2 that has been hidden in <font color='#00FFFF'>%1 Rubbish Piles</font> somewhere around %3."
								];
								
							private _garInfo = selectRandom ["nearby Munitions Caches", "possible Chemical Weapons", "an enemy HQ", "enemy movements", "a planned ambush"];
							private _garCount = 0;


							private _bldPos = _buildings apply { selectRandom (_x buildingPos -1) };


							{ _locations pushBack position _x } forEach _buildings;


							for "_i" from 1 to (missionNamespace getVariable ["ZZM_ObjectiveCount", 3]) do {
								private _garType = selectRandom ["Land_GarbagePallet_F", "Land_GarbageBags_F", "Land_GarbageWashingMachine_F"];
								private _garPos = [];
								private _inBuilding = false;

								if (random 100 > 50 && {count _bldPos > 0}) then {
									_garPos = selectRandom _bldPos;
									_bldPos deleteAt (_bldPos find _garPos);
									_garType = selectRandom ["Land_BarrelTrash_F","Land_BarrelTrash_grey_F"];
									_inBuilding = true;
								} else {
									if (count _locations > 0) then { 
										_garPos = selectRandom _locations;
										_locations deleteAt (_locations find _garPos);
									} else {
										_garPos = [_centre getPos [50 + random 100, random 360], 1, _radius, 1, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0];
									};
									
									_garPos = _garPos findEmptyPosition [1, 50, _garType];
								};
								
								if (count _garPos > 0) then { 
								
									private _garObj = (([([0,0,0]), (_garType), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_garObj setPosATL _garPos;
									[_garObj,[(random 360),(((_garObj) call BIS_fnc_getPitchBank) select 0),(((_garObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
									_garObj allowDamage false;
									
									if !_inBuilding then {
										_garObj setVectorUp surfaceNormal getPos _garObj;
										_litObj = (([([0,0,0]), ("Land_Garbage_square5_F"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_litObj setPosATL getPosATL _garObj;
										_litObj setVectorUp surfaceNormal getPos _garObj;
									};
									
									if (alive _garObj) then {
										_garCount = _garCount + 1;	
										
										_mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_OBJ_%2", _zoneID, _i]),(_garObj getPos [random 50, random 360])] call BIS_fnc_stringToMarker;
										_mrkr setMarkerShape "ELLIPSE";
										_mrkr setMarkerBrush "SolidBorder";
										_mrkr setMarkerSize [50,50];
										_mrkr setMarkerAlpha 0.4;
										_mrkr setMarkerColor format["Color%1",_enemySide];
										
										_garObj setVariable ["var_zID", _zoneID, true];
										_garObj setVariable ["var_iID", _i, true];
										
										_childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _i], format['ZMM_%1_TSK', _zoneID]], true, [format["Search the garbage located somewhere inside the marked area.<br/><br/>Object: <font color='#00FFFF'>%1</font><br/><br/><img width='350' image='%2'/>", getText (configFile >> "CfgVehicles" >> _garType >> "displayName"), getText (configFile >> "CfgVehicles" >> _garType >> "editorPreview")], format["Garbage #%1", _i], format["MKR_%1_OBJ_%2", _zoneID, _i]], getMarkerPos _mrkr, "AUTOASSIGNED", 1, false, true, "search"] call BIS_fnc_setTask;

										[_garObj, 
											format["<t color='#00FF80'>Search the %1</t>", getText (configFile >> "CfgVehicles" >> _garType >> "displayName")], 
											"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_search_ca.paa", 
											"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_search_ca.paa", 
											"_this distance2d _target < 3", 
											"_caller distance2d _target < 3", 
											{}, 
											{}, 
											{
												[_target, _actionId] remoteExec ["BIS_fnc_holdActionRemove",0,true];
												_caller playAction "PutDown";
												sleep 1;
												private _varName = format["ZMM_%1_TSK_Counter", (_target getVariable ["var_zID", 0])];
												missionNamespace setVariable [_varName, (missionNamespace getVariable [_varName, 0]) - ((random 1) + 1), true];
												deleteMarker format["MKR_%1_OBJ_%2", (_target getVariable ["var_zID", 0]), (_target getVariable ["var_iID", 0])];
												[name _caller, if (missionNamespace getVariable [_varName, 0] >= 1) then { "There is nothing of value in here." } else { "We have got what we came for, mission complete." }] remoteExec ["BIS_fnc_showSubtitle"];
												[format["ZMM_%1_SUB_%2", (_target getVariable ["var_zID", 0]), (_target getVariable ["var_iID", 0])], 'Succeeded', true] remoteExec ["BIS_fnc_taskSetState",0,true];
												[_target, { sleep 120; deleteVehicle _this }] remoteExec ["BIS_fnc_spawn", 0, true];
											}, 
											{}, 
											[], 
											2, 
											10 
										] remoteExec ["bis_fnc_holdActionAdd", 0, true];
									};
								};
							};


							missionNamespace setVariable [format['ZMM_%1_TSK_Counter', _zoneID], _garCount, true];


							private _objTrigger = (([(([0,0,0])), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [  format["(missionNamespace getVariable ['ZMM_%1_TSK_Counter',0]) < 1", _zoneID, _garCount], 
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];


							private _missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[_missionDesc, _garCount, _garInfo, _locName], ["Intel"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "intel"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("intel_talk_sqf")) then {
						intel_talk_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _buildings = missionNamespace getVariable [format["ZMM_%1_Buildings", _zoneID], []];
							private _locations = missionNamespace getVariable [format["ZMM_%1_FlatLocations", _zoneID], []];
							private _radius = ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0) max 100; 
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];

							private _missionDesc = selectRandom [
									"Locate and speak to <font color='#00FFFF'>%1 Undercover Informants</font> with information on %2 within %3.",
									"Search around %3 for <font color='#00FFFF'>%1 Contacts</font> regarding %2.",
									"Allied forces wish to identify %2 near %3, speak to <font color='#00FFFF'>%1 Civilians</font> and obtain their intel.",
									"Undercover civilians within %3, are investigating %2. Locate <font color='#00FFFF'>%1 Civilians</font> and speak to them to discover their findings.",
									"Locate <font color='#00FFFF'>%1 Informants</font> around %3, that have information on %2.",
									"Around %3, find <font color='#00FFFF'>%1 Contacts</font> that have information on %2."
								];
								
							private _civInfo = selectRandom ["nearby Munitions Caches", "possible Chemical Weapons", "an enemy HQ", "enemy movements", "an underground bunker", "a planned ambush"];


							private _bldPos = _buildings apply { selectRandom (_x buildingPos -1) };


							{ _locations pushBack position _x } forEach _buildings;

							private _civCount = 0;


							for "_i" from 1 to (missionNamespace getVariable ["ZZM_ObjectiveCount", 3]) do {
								private _civType = selectRandom ["C_man_polo_1_F_afro","C_man_polo_3_F_afro","C_man_polo_6_F_afro","C_man_polo_2_F_euro","C_man_polo_4_F_euro","C_man_polo_5_F_asia"];
								private _civPos = [];
								
								if (random 100 > 50 && {count _bldPos > 0}) then {
									_civPos = selectRandom _bldPos;
									_bldPos deleteAt (_bldPos find _civPos);
									_contType = selectRandom ["Box_NATO_Wps_F","Box_EAF_Wps_F","Box_East_Wps_F","Box_T_East_Wps_F","Box_IND_Wps_F"];
								} else {
									if (count _locations > 0) then { 
										_civPos = selectRandom _locations;
										_locations deleteAt (_locations find _civPos);
									} else { 
										_civPos = [_centre getPos [50 + random _radius, random 360], 1, _radius, 1, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0];
									};
									
									_civPos = _civPos findEmptyPosition [1, 50, _civType];
								};

								if (count _civPos > 0) then {		
									_civCount = _civCount + 1;
									private _civObj = (([([0,0,0]), 0, (_civType), (civilian)] call BIS_fnc_spawnVehicle) select 0);
									(group _civObj) allowFleeing 0;
									(group _civObj) setCombatMode 'BLUE';
									_civObj setskill ['courage',1];
									_civObj disableAI 'FSM'; 
									_civObj disableAI 'TARGET'; 
									_civObj disableAI 'AUTOTARGET'; 
									_civObj disableAI 'AUTOCOMBAT';
									
									_civObj setVariable ["BIS_fnc_animalBehaviour_disable", true];
									_civObj setPosATL _civPos;
									[_civObj,[(random 360),(((_civObj) call BIS_fnc_getPitchBank) select 0),(((_civObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
									_civObj allowDamage false;
										
									if (alive _civObj) then {
										private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_OBJ_%2", _zoneID, _i]),(_civObj getPos [random 50, random 360])] call BIS_fnc_stringToMarker;
										_mrkr setMarkerShape "ELLIPSE";
										_mrkr setMarkerBrush "SolidBorder";
										_mrkr setMarkerSize [50,50];
										_mrkr setMarkerAlpha 0.4;
										_mrkr setMarkerColor "ColorCivilian";
										
										_civObj setVariable ["var_zoneID", _zoneID, true];
										_civObj setVariable ["var_itemID", _i, true];
										
										_childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _i], format['ZMM_%1_TSK', _zoneID]], true, [format["Speak to the civilian somewhere within the marked area.<br/><br/>Contact: <font color='#00FFFF'>%1</font><br/><br/><img width='350' image='%2'/>", name _civObj, getText (configFile >> "CfgVehicles" >> _civType >> "editorPreview")], format["Person #%1", _i], format["MKR_%1_OBJ_%2", _zoneID, _i]], getMarkerPos _mrkr, "AUTOASSIGNED", 1, false, true, format["talk%1", _i]] call BIS_fnc_setTask;

										[_civObj, 
											format["<t color='#00FF80'>Speak to %1</t>", name _civObj], 
											"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_requestleadership_ca.paa", 
											"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_requestleadership_ca.paa", 
											"_this distance2d _target < 3", 
											"_caller distance2d _target < 3", 
											{}, 
											{}, 
											{
												private _zoneID = _target getVariable ["var_zoneID", 0];
												private _itemID = _target getVariable ["var_itemID", 0];
												private _varName = format["ZMM_%1_TSK_Counter", _zoneID];
												missionNamespace setVariable [_varName, (missionNamespace getVariable [_varName, 0]) + 1, true];
												deleteMarker format["MKR_%1_OBJ_%2", _zoneID, _itemID];
												[_target, _actionId] remoteExec ["BIS_fnc_holdActionRemove",0,true];
																
												[name _target, 
													format[ selectRandom ["Yes, here is the %1 you need.",
														"OK, I will leave the %1 with the usual contact.",
														"No, but I will give you the %1 in two days.",
														"The %1 has already been left with another Operative, I have nothing more for you.",
														"I hid the %1 to stop it from falling into enemy hands, here it is."], selectRandom ["information","papers","drive","documents","recording","intelligence"]]
												] remoteExec ["BIS_fnc_showSubtitle"];
												sleep 3;
												[_target, [_target getPos [500, random 360], "LEADER PLANNED", true]] remoteExec ["setDestination", 0, true];
												[_target, { sleep 120; deleteVehicle _this }] remoteExec ["BIS_fnc_spawn", 0, true];
												[format["ZMM_%1_SUB_%2", _zoneID, _itemID], 'Succeeded', true] remoteExec ["BIS_fnc_taskSetState", 0 , true];
											}, 
											{}, 
											[], 
											2, 
											10 
										] remoteExec ["bis_fnc_holdActionAdd", 0, true];
									};
								};
							};


							private _objTrigger = (([(([0,0,0])), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [  format["(missionNamespace getVariable ['ZMM_%1_TSK_Counter',0]) >= %2", _zoneID, _civCount], 
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];


							private _missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[_missionDesc, _civCount, _civInfo, _locName], ["Talk"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "talk"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("collect_backpack_sqf")) then {
						collect_backpack_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _buildings = missionNamespace getVariable [format["ZMM_%1_Buildings", _zoneID], []];
							private _locations = missionNamespace getVariable [format["ZMM_%1_FlatLocations", _zoneID], []];
							private _radius = ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0) max 100; 
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _menArray = missionNamespace getVariable [format["ZMM_%1Man", _enemySide], ["O_Solider_F"]];
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];

							private _missionDesc = selectRandom [
									"Intel has identified <font color='#00FFFF'>%1x %2s</font> being stored at %3, find them and extract them.",
									"%3 is known to have enemy forces trying to smuggle <font color='#00FFFF'>%1x %2s</font> out the area, find where they are keeping them and take the items.",
									"Smugglers have hidden <font color='#00FFFF'>%1x %2s</font> within %3. Find the packs and take them from the area.",
									"Somewhere in %3 are <font color='#00FFFF'>%1x %2s</font>. Find and take the packs before enemy forces can move them out of the area.",
									"Locate <font color='#00FFFF'>%1x %2s</font> in %3 and remove the items from the area."
								];


							private _bldPos = _buildings apply { selectRandom (_x buildingPos -1) };


							{ _locations pushBack position _x } forEach _buildings;

							private _itemCount = 0;
							private _itemType = selectRandom ["B_RadioBag_01_eaf_F","B_RadioBag_01_ghex_F","B_RadioBag_01_mtp_F","B_RadioBag_01_tropic_F","B_RadioBag_01_oucamo_F","B_RadioBag_01_wdl_F"];


							for "_i" from 1 to (missionNamespace getVariable ["ZZM_ObjectiveCount", 3]) do {
								private _itemPos = [];

								if (random 100 > 50 && {count _bldPos > 0}) then {
									_itemPos = selectRandom _bldPos;
									_bldPos deleteAt (_bldPos find _itemPos);
								} else {
									if (count _locations > 0) then { 
										_itemPos = selectRandom _locations;
										_locations deleteAt (_locations find _itemPos);
									} else { 
										_itemPos = [_centre getPos [50 + random _radius, random 360], 1, _radius, 1, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0];
									};
									
									_itemPos = _itemPos findEmptyPosition [1, 50, "B_Soldier_F"];
								};
								
								if (count _itemPos > 0) then { 		
									_itemCount = _itemCount + 1;
									
									private _itemHolder = (([([0,0,0]), ("GroundWeaponHolder_scripted"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_itemHolder setPosATL _itemPos;
									[_itemHolder,[(random 360),(((_itemHolder) call BIS_fnc_getPitchBank) select 0),(((_itemHolder) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
									_itemHolder addBackpackCargoGlobal [_itemType, 1];
									{ clearMagazineCargoGlobal _x; clearItemCargoGlobal _x } forEach [firstBackpack _itemHolder];
										
									private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_OBJ_%2", _zoneID, _i]),(_itemHolder getPos [random 50, random 360])] call BIS_fnc_stringToMarker;
									_mrkr setMarkerShape "ELLIPSE";
									_mrkr setMarkerBrush "SolidBorder";
									_mrkr setMarkerSize [50,50];
									_mrkr setMarkerAlpha 0.4;
									_mrkr setMarkerColor format[ "color%1", _enemySide ];
									
									missionNamespace setVariable [format["ZMM_%1_OBJ_%2", _zoneID, _i], _itemHolder, true];
									
									_childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _i], format['ZMM_%1_TSK', _zoneID]], true, [format["Find and collect the item somewhere within the marked area.<br/><br/>Target: <font color='#00FFFF'>%1</font><br/><br/>", getText (configFile >> "CfgVehicles" >> _itemType >> "displayName")], format["Item #%1", _i], format["MKR_%1_OBJ_%2", _zoneID, _i]], getMarkerPos _mrkr, "AUTOASSIGNED", 1, false, true, format["move%1", _i]] call BIS_fnc_setTask;
									
									private _objTrigger = (([(AGLToASL (_itemPos)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_objTrigger setTriggerStatements [  format["!('%3' in (backpackCargo ZMM_%1_OBJ_%2))", _zoneID, _i, _itemType], 
										format["['ZMM_%1_SUB_%2', 'Succeeded', true] spawn BIS_fnc_taskSetState; deleteMarker 'MKR_%1_OBJ_%2'; missionNamespace setVariable ['ZMM_%1_TSK_Counter', (missionNamespace getVariable ['ZMM_%1_TSK_Counter', 0]) + 1, true]; [] spawn { sleep 120; deleteVehicle ZMM_%1_OBJ_%2; }", _zoneID, _i],
										"" ];

									private _enemyTeam = [];
									for "_j" from 0 to (2 * (missionNamespace getVariable ["ZZM_Diff", 1])) do { _enemyTeam set [_j, selectRandom _menArray] };
									
									private _milGroup = [_itemHolder getPos [random 2, random 360], _enemySide, _enemyTeam] call BIS_fnc_spawnGroup;
									{ _x setUnitPos "MIDDLE" } forEach units _milGroup;
									{ _x addCuratorEditableObjects [[_itemHolder] + units _milGroup, true] } forEach allCurators;
								};
							};


							private _objTrigger = (([(([0,0,0])), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [  format["(missionNamespace getVariable ['ZMM_%1_TSK_Counter',0]) >= %2", _zoneID, _itemCount], 
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];


							private _missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[_missionDesc + format["<br/><br/>Backpack: <font color='#00FFFF'>%1</font><br/><br/><img width='350' image='%2'/>", getText (configFile >> "CfgVehicles" >> _itemType >> "displayName"), getText (configFile >> "CfgVehicles" >> _itemType >> "picture")], _itemCount, getText (configFile >> "CfgVehicles" >> _itemType >> "displayName"), _locName], ["Find"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "radio"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("collect_container_sqf")) then {
						collect_container_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _menArray = missionNamespace getVariable [format["ZMM_%1Man", _enemySide], ["O_Solider_F"]];
							private _buildings = missionNamespace getVariable [ format["ZMM_%1_Buildings", _zoneID], [] ];
							private _locations = missionNamespace getVariable [ format["ZMM_%1_FlatLocations", _zoneID], [] ];
							private _radius = ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0) max 100; 
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];

							private _missionDesc = selectRandom [
									"Intel has identified <font color='#00FFFF'>%1x Items</font> being stored at %4, find their containers and obtain the items.",
									"%4 is known to have enemy forces smuggling <font color='#00FFFF'>%1x Items</font> into the area, find where they are keeping them and take the items.",
									"Smugglers have hidden <font color='#00FFFF'>%1x Items</font> within %4. Find the caches containing the item and take it.",
									"Somewhere in %4 are <font color='#00FFFF'>%1x Items</font>. Find and take the items before enemy forces can move them out of the area.",
									"Locate the caches containing <font color='#00FFFF'>%1x Items</font> in %4 and take the items."
								];


							private _bldPos = _buildings apply { selectRandom (_x buildingPos -1) };


							{ _locations pushBack position _x } forEach _buildings;

							private _crateActivation = [];
							private _crateNo = 0;
							private _prefix = selectRandom ["Rare","Marked","Special","Unique","Unusual","Specialised","Modified"];
							private _findObj = selectRandom ["ChemicalDetector_01_watch_F","ItemCompass","ItemGPS","MineDetector","ItemMap","ItemRadio","ItemWatch"];
							private _findName = format["%1 %2", _prefix, getText (configFile >> "CfgWeapons" >> _findObj >> "displayName")];


							for "_i" from 1 to (missionNamespace getVariable ["ZZM_ObjectiveCount", 3]) do {
								private _contType = selectRandom ["Box_FIA_Support_F"];
								private _contPos = [];
								private _inBuilding = false;

								if (random 100 > 50 && {count _bldPos > 0}) then {
									_inBuilding = true;
									_contPos = selectRandom _bldPos;
									_bldPos deleteAt (_bldPos find _contPos);
									_contType = selectRandom ["Box_IND_Ammo_F","Box_IND_Wps_F","Box_IND_Grenades_F","Box_IND_WpsLaunch_F"];
								} else {
									if (count _locations > 0) then { 
										_contPos = selectRandom _locations;
										_locations deleteAt (_locations find _contPos);
									} else { 
										_contPos = [_centre getPos [50 + random _radius, random 360], 1, _radius, 1, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0];
									};
									
									_contPos = _contPos findEmptyPosition [1, 50, _contType];
								};
									
								if (count _contPos > 0) then { 
									_crateNo = _crateNo + 1;
									_contObj = (([ATLtoASL ([[[([0,0,0]), 150]], []] call BIS_fnc_randomPos), (_contType), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_contObj setPosATL _contPos;
									[_contObj,[(random 360),(((_contObj) call BIS_fnc_getPitchBank) select 0),(((_contObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
									_contObj allowDamage false;
									
									if (alive _contObj) then {
										_mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_OBJ_%2", _zoneID, _i]),(_contObj getPos [random 50, random 360])] call BIS_fnc_stringToMarker;
										_mrkr setMarkerShape "ELLIPSE";
										_mrkr setMarkerBrush "SolidBorder";
										_mrkr setMarkerSize [50,50];
										_mrkr setMarkerAlpha 0.4;
										_mrkr setMarkerColor format["Color%1",_enemySide];
										
										_contStr = format["ZMM_%1_OBJ_%2", _zoneID, _i];
										missionNamespace setVariable [_contStr, _contObj, true];
										_contObj setVariable ["ZMM_Id", _contStr + "_DONE", true];
										_contObj setVariable ["ZMM_Type", _findObj, true];
										
										_childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _i], format['ZMM_%1_TSK', _zoneID]], true, [format["Locate the cache somewhere within the marked area.<br/><br/>Target Cache: <font color='#00FFFF'>%1</font><br/><br/><img width='350' image='%2'/>", getText (configFile >> "CfgVehicles" >> _contType >> "displayName"), getText (configFile >> "CfgVehicles" >> _contType >> "editorPreview")], format["Cache #%1", _i], format["MKR_%1_OBJ_%2", _zoneID, _i]], getMarkerPos _mrkr, "AUTOASSIGNED", 1, false, true, format["move%1", _i]] call BIS_fnc_setTask;
										_childTrigger = (([(AGLToASL (getPos _contObj)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_childTrigger setTriggerStatements [  format["(missionNamespace getVariable ['ZMM_%1_OBJ_%2_DONE', false])", _zoneID, _i],
																	format["['ZMM_%1_SUB_%2', 'Succeeded', true] spawn BIS_fnc_taskSetState; deleteMarker 'MKR_%1_OBJ_%2';", _zoneID, _i],
																	"" ];
										
										_crateActivation pushBack format["(missionNamespace getVariable ['ZMM_%1_OBJ_%2_DONE', false])", _zoneID, _i];
													
										clearWeaponCargoGlobal _contObj;
										clearMagazineCargoGlobal _contObj;
										clearItemCargoGlobal _contObj;
										clearBackpackCargoGlobal _contObj;
										
										_contObj addItemCargoGlobal [_findObj, 1];
										
										if !(_inBuilding) then { _contObj setVectorUp surfaceNormal position _contObj };
										
										[_contObj, ["ContainerClosed", { 
											params ["_cont", "_unit"]; 
											
											private _id = _cont getVariable ["ZMM_Id", "NULL"];
											private _item = _cont getVariable ["ZMM_Type", "Item_FirstAidKit"];
											
											if !(_item in ((weaponCargo _cont) + (itemCargo _cont) + (magazineCargo _cont))) then {
												missionNamespace setVariable [_id, true, true];
												["IntelAdded", [format["<t size='1.5' color='#72E500'>Collected:</t><br/><t size='1.25'>%2</t><br/><br/><img size='2' image='\a3\ui_f\data\IGUI\Cfg\simpleTasks\types\search_ca.paa'/><br/><br/>Found By: <t color='#0080FF'>%1</t><br/>", name _unit, getText (configFile >> "CfgWeapons" >> _item >> "displayName")]]] remoteExec ['BIS_fnc_showNotification'];
												[_cont, "ContainerClosed"] remoteExec ["removeAllEventHandlers", 0, true];
											};
										}]] remoteExec ["addEventHandler", 0, true];
									
										private _enemyTeam = [];
										for "_j" from 0 to (4 * (missionNamespace getVariable ["ZZM_Diff", 1])) do { _enemyTeam set [_j, selectRandom _menArray] };
										
										private _milGroup = [_contPos getPos [random 10, random 360], _enemySide, _enemyTeam] call BIS_fnc_spawnGroup;
											
										private _bldArr = if (_inBuilding) then { (nearestBuilding _contPos) buildingPos -1 } else { [] };
										_bldArr deleteAt (_bldArr find _contPos);
										
										{
											if (count _bldArr > 0) then {
												private _tempPos = selectRandom _bldArr;
												_bldArr deleteAt (_bldArr find _tempPos);
												_x setPosATL _tempPos;
												_x disableAI "PATH";
											} else {
												_x setVehiclePosition [_contObj getPos [random 5, random 360], [], 0, "NONE"];
												_x setUnitPos "MIDDLE";
												doStop _x;
											};
										} forEach units _milGroup;

										{ _x addCuratorEditableObjects [[_contObj] + units _milGroup, true] } forEach allCurators;
									};
								};
							};


							_objTrigger = (([(([0,0,0])), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [  (_crateActivation joinString " && "), 
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];


							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[_missionDesc + "<br/><br/>Target Item: <font color='#00FFFF'>%2</font><br/><br/><img width='150' image='%3'/>", count _crateActivation, _findName, getText (configFile >> "CfgWeapons" >> _findObj >> "picture"), _locName], ["Take Item"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "box"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("collect_items_sqf")) then {
						collect_items_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _buildings = missionNamespace getVariable [format["ZMM_%1_Buildings", _zoneID], []];
							private _locations = missionNamespace getVariable [format["ZMM_%1_FlatLocations", _zoneID], []];
							private _radius = ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0) max 100; 
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];

							private _missionDesc = selectRandom [
									"Collect <font color='#00FFFF'>%1 %2 Supplies</font> that were recently left by enemy forces in %3.",
									"Search %3 for <font color='#00FFFF'>%1 %2 Supplies</font> left around the area by enemy forces.",
									"Allied forces were forced to quickly withdraw from %3, leaving <font color='#00FFFF'>%1 %2 Supplies</font>. Enter the area and recover the items.",
									"Enemy forces ambushed a convoy travelling though %3, transporting <font color='#00FFFF'>%1 %2 Supplies</font>. Locate and recover the items.",
									"Locate <font color='#00FFFF'>%1 %2 Supplies</font> that have been hidden somewhere around %3.",
									"Retrieve <font color='#00FFFF'>%1 %2 Supplies</font> that have been hidden by enemy forces somewhere around %3."
								];

							private _itemMax = missionNamespace getVariable ["ZZM_ObjectiveCount", 4];


							private _bldPos = _buildings apply { selectRandom (_x buildingPos -1) };


							{ _locations pushBack position _x } forEach _buildings;

							(selectRandom [
								["Aid",["Land_PaperBox_01_small_closed_brown_IDAP_F","Land_PaperBox_01_small_closed_white_med_F","Land_PaperBox_01_small_closed_white_IDAP_F","Land_PaperBox_01_small_closed_brown_food_F","Land_FoodSack_01_full_white_idap_F","Land_FoodSack_01_full_brown_idap_F","Land_PlasticCase_01_small_idap_F"]]
								,["Refugee",["Land_WaterBottle_01_pack_F","Land_FoodContainer_01_White_F","Land_PlasticBucket_01_closed_F","Land_Sleeping_bag_folded_F","Land_CanisterPlastic_F","Land_Ground_sheet_folded_yellow_F","Land_Ground_sheet_folded_blue_F","Land_Sleeping_bag_blue_folded_F","Land_EmergencyBlanket_02_stack_F","Land_EmergencyBlanket_01_stack_F"]]
								,["Fuel",["Land_GasTank_01_blue_F","Land_GasTank_01_yellow_F","Land_GasTank_01_khaki_F","Land_CanisterFuel_F","Land_CanisterFuel_Red_F","Land_CanisterFuel_Blue_F","Land_CanisterFuel_White_F"]]
								,["CBRN",["CBRNCase_01_F","CBRNContainer_01_closed_olive_F","CBRNContainer_01_closed_yellow_F","Land_PlasticCase_01_small_CBRN_F","Land_PlasticCase_01_small_black_CBRN_F","Land_PlasticCase_01_small_olive_CBRN_F"]]
							]) params ["_itemName","_itemArr"];

							private _itemTask = "<br/><br/>Search for any of the following items Located in the Area:";
							{
								_itemTask = _itemTask + format["<br/><br/>%1:<br/><img width='200' image='%2'/>", getText (configFile >> "CfgVehicles" >> _x >> "displayName"), getText (configFile >> "CfgVehicles" >> _x >> "editorPreview")];
							} forEach _itemArr;

							private _itemCount = 0;


							for "_i" from 1 to (_itemMax + 3) do {
								private _itemType = selectRandom _itemArr;
								private _itemPos = [];

								if (random 100 > 25 && {count _bldPos > 0}) then {
									_itemPos = selectRandom _bldPos;
									_bldPos deleteAt (_bldPos find _itemPos);
								} else {
									if (count _locations > 0) then { 
										_itemPos = selectRandom _locations;
										_locations deleteAt (_locations find _itemPos);
									} else { 
										_itemPos = [_centre getPos [50 + random 100, random 360], 1, _radius, 1, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0];
									};
									
									_itemPos = _itemPos findEmptyPosition [1, 50, _itemType];
								};
									
								if (count _itemPos > 0) then {		
									_itemCount = _itemCount + 1;
									_itemObj = (([([0,0,0]), (_itemType), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_itemObj setPosATL _itemPos;
									[_itemObj,[(random 360),(((_itemObj) call BIS_fnc_getPitchBank) select 0),(((_itemObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
										
									if (alive _itemObj) then {
										_itemObj setVariable ["var_zoneID", _zoneID, true];

										[_itemObj, 
											format["<t color='#00FF80'>Take %1</t>", getText (configFile >> "CfgVehicles" >> _itemType >> "displayName")], 
											"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_Search_ca.paa", 
											"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_Search_ca.paa", 
											"_this distance2d _target < 3", 
											"_caller distance2d _target < 3", 
											{}, 
											{}, 
											{
												_varName = format["ZMM_%1_TSK_Counter", (_target getVariable ["var_zoneID", 0])];
												missionNamespace setVariable [_varName, (missionNamespace getVariable [_varName, 0]) + 1, true];
												_caller playAction "PutDown"; 
												sleep 1;
												deleteVehicle _target;
												["IntelAdded", [format["<t size='1.5' color='#72E500'>Item Collected:</t><br/><t size='1.25'>%2</t><br/><br/><img size='2' image='\a3\ui_f\data\IGUI\Cfg\simpleTasks\types\search_ca.paa'/><br/><br/>Found By: <t color='#0080FF'>%1</t><br/>Total Collected: <t color='#FF7F00'>%3</t>", name _caller, getText (configFile >> "CfgVehicles" >> typeOf _target >> "displayName"), missionNamespace getVariable _varName]]] remoteExec ['BIS_fnc_showNotification'];
											}, 
											{}, 
											[], 
											2, 
											10 
										] remoteExec ["bis_fnc_holdActionAdd", 0, true];
									};
								};
							};


							_objTrigger = (([(([0,0,0])), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [  format["(missionNamespace getVariable ['ZMM_%1_TSK_Counter',0]) >= %2", _zoneID, _itemMax], 
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];


							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[_missionDesc, _itemMax, _itemName, _locName] + _itemTask, ["Item Hunt"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "box"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("collect_paradrop_sqf")) then {
						collect_paradrop_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							_centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							_radius = ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0) max 100; 

							_missionDesc = [
									"A cargo transport flying over the area is due to make a drop, search the area for nearby for one <font color='#00FFFF'>%1</font> and mark its location.",
									"An enemy air transport is due to fly through this area, locate one <font color='#00FFFF'>%1</font> and upload the coordinates of its location.",
									"One <font color='#00FFFF'>%1</font> is due to be dropped into the area, locate it and upload the coordinates.",
									"Search for one <font color='#00FFFF'>%1</font>, due to be dropped into this area.",
									"An air transport carrying supplies will be dropping one <font color='#00FFFF'>%1</font> into this area, locate it and upload the coordinates of its landing point.",
									"A transport has been spotted near this location. It is due to drop one <font color='#00FFFF'>%1</font> locate it and upload its location to allied forces."
								];	


							private _dropPos = [_centre getPos [random 100, random 360], 1, _radius, 1, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0];
							_dropType = selectRandom ["CargoNet_01_barrels_F","CargoNet_01_box_F","I_CargoNet_01_ammo_F","O_CargoNet_01_ammo_F","C_IDAP_CargoNet_01_supplies_F","B_CargoNet_01_ammo_F"];
							_dropName = [getText (configFile >> "CfgVehicles" >> _dropType >> "displayName"),"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_- "] call BIS_fnc_filterString;

							private _dropObj = (([([0,0,0]), (_dropType), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_dropObj allowDamage false; 

							if (!(isnil 'aioArsenalActions')) then {
								[_dropObj] call aioArsenalActions;
							} else {
								[[_dropObj], {
									(_this select 0) addAction ['Open Arsenal', {
										params ['_object', '_caller', '_id'];
										
										[] call LM_fnc_arsenalOpen;
									}];
								}] remoteExec ['bis_fnc_call',0,true];
							};

							private _lightObj =  (([([0,0,0]), ("PortableHelipadLight_01_white_F"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_lightObj attachTo [_dropObj,[0, 0, ((boundingBoxReal _dropObj) select 1) select 2]];


							[_dropObj, 
								"<t color='#00FF80'>Upload Drop Position</t>", 
								"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_connect_ca.paa",  
								"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_connect_ca.paa",  
								"(_target getVariable ['var_canUse', true])", 
								"(_target getVariable ['var_canUse', true])", 
								{}, 
								{}, 
								{
									_target setVariable ["var_canUse", false, true]; 
									[ _target, _actionID ] remoteExec ["BIS_fnc_holdActionRemove", 0, true];
								}, 
								{}, 
								[], 
								1, 
								10 
							] remoteExec ["bis_fnc_holdActionAdd", 0, true];

							missionNamespace setVariable [format["ZMM_%1_OBJ", _zoneID], _dropObj];


							_dropTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_dropTrigger setTriggerArea [_radius, _radius, 0, false];
							_dropTrigger setTriggerActivation ["ANYPLAYER", "PRESENT", false];
							_dropTrigger setTriggerStatements ["this", 
															 format["ZMM_%1_OBJ setPos [%2, %3, 250]; [objNull, ZMM_%1_OBJ] call BIS_fnc_curatorobjectedited; playSound3D ['A3\Sounds_F\environment\ambient\battlefield\battlefield_jet1.wss', objNull, false, AGLToASL [%2, %3, 0], 2, 1, 1000]; _nul = [] spawn { waitUntil { sleep 5; playSound3D ['a3\sounds_f\sfx\beep_target.wss', ZMM_%1_OBJ, false, getPosASL ZMM_%1_OBJ, 1, 0.5, 75]; !(ZMM_%1_OBJ getVariable ['var_canUse', true]); }; };", _zoneID, _dropPos select 0, _dropPos select 1],
															 ""];



							_objTrigger = (([(([0,0,0])), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [  format["!(ZMM_%1_OBJ getVariable ['var_canUse', true])", _zoneID], 
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];


							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[selectRandom _missionDesc, _dropName] + format["<br/><br/><img width='350' image='%1'/>", getText (configFile >> "CfgVehicles" >> _dropType >> "editorPreview")], ["Drop"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "airdrop"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("collect_weapon_sqf")) then {
						collect_weapon_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _buildings = missionNamespace getVariable [ format["ZMM_%1_Buildings", _zoneID], [] ];
							private _locations = missionNamespace getVariable [ format["ZMM_%1_FlatLocations", _zoneID], [] ];
							private _radius = ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0) max 100; 
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];

							private _missionDesc = selectRandom [
									"Intel has identified <font color='#00FFFF'>%1x Weapons</font> being stored at %4, find their containers and obtain the weapon.",
									"%4 is known to have enemy forces smuggling <font color='#00FFFF'>%1x Launchers</font> into the area, find where they are keeping them and take the weapons.",
									"Smugglers have hidden <font color='#00FFFF'>%1x Weapons</font> within %4. Find the caches containing the weapon and take it.",
									"Somewhere in %4 are <font color='#00FFFF'>%1x Missile Launchers</font>. Find and take the weapons before enemy forces can move them out of the area.",
									"Locate the caches containing <font color='#00FFFF'>%1x Weapons</font> in %4 and take the weapons."
								];


							private _bldPos = _buildings apply { selectRandom (_x buildingPos -1) };


							{ _locations pushBack position _x } forEach _buildings;

							private _crateActivation = [];
							private _crateNo = 0;
							private _prefix = selectRandom ["Legendary","Marked","Specialised","Custom","Polished","Shiny"];
							private _findObj = selectRandom ["launch_O_Vorona_green_F","launch_B_Titan_olive_F","launch_RPG32_green_F","launch_MRAWS_olive_rail_F"];
							private _findName = format["%1 %2", _prefix, getText (configFile >> "CfgWeapons" >> _findObj >> "displayName")];


							for "_i" from 1 to (missionNamespace getVariable ["ZZM_ObjectiveCount", 3]) do {
								private _contType = selectRandom ["Box_FIA_Wps_F"];
								private _contPos = [];

								if (random 100 > 50 && {count _bldPos > 0}) then {
									_contPos = selectRandom _bldPos;
									_bldPos deleteAt (_bldPos find _contPos);
									_contType = selectRandom ["Box_NATO_Wps_F","Box_EAF_Wps_F","Box_East_Wps_F","Box_T_East_Wps_F","Box_IND_Wps_F"];
								} else {
									if (count _locations > 0) then { 
										_contPos = selectRandom _locations;
										_locations deleteAt (_locations find _contPos);
									} else { 
										_contPos = [_centre getPos [50 + random 100, random 360], 1, _radius, 1, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0];
									};
									
									_contPos = _contPos findEmptyPosition [1, 50, _contType];
								};
									
								if (count _contPos > 0) then { 
									_crateNo = _crateNo + 1;
									private _contObj = (([([0,0,0]), (_contType), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_contObj setPosATL _contPos;
									[_contObj,[(random 360),(((_contObj) call BIS_fnc_getPitchBank) select 0),(((_contObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
									_contObj allowDamage false;
									
									if (alive _contObj) then {
										private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_OBJ_%2", _zoneID, _i]),(_contObj getPos [random 50, random 360])] call BIS_fnc_stringToMarker;
										_mrkr setMarkerShape "ELLIPSE";
										_mrkr setMarkerBrush "SolidBorder";
										_mrkr setMarkerSize [50,50];
										_mrkr setMarkerAlpha 0.4;
										_mrkr setMarkerColor format["Color%1",_enemySide];
										
										private _contStr = format["ZMM_%1_OBJ_%2", _zoneID, _i];
										_contObj setVariable ["ZMM_Id", _contStr + "_DONE", true];
										_contObj setVariable ["ZMM_Type", _findObj, true];
										missionNamespace setVariable [_contStr, _contObj, true];
										
										private _childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _i], format['ZMM_%1_TSK', _zoneID]], true, [format["Locate the cache somewhere within the marked area.<br/><br/>Target Cache: <font color='#00FFFF'>%1</font><br/><br/><img width='350' image='%2'/>", getText (configFile >> "CfgVehicles" >> _contType >> "displayName"), getText (configFile >> "CfgVehicles" >> _contType >> "editorPreview")], format["Cache #%1", _i], format["MKR_%1_OBJ_%2", _zoneID, _i]], getMarkerPos _mrkr, "AUTOASSIGNED", 1, false, true, format["move%1", _i]] call BIS_fnc_setTask;
										private _childTrigger = (([(AGLToASL (getPos _contObj)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_childTrigger setTriggerStatements [  format["(missionNamespace getVariable ['ZMM_%1_OBJ_%2_DONE', false])", _zoneID, _i],
																	format["['ZMM_%1_SUB_%2', 'Succeeded', true] spawn BIS_fnc_taskSetState; deleteMarker 'MKR_%1_OBJ_%2';", _zoneID, _i],
																	"" ];
										
										_crateActivation pushBack format["(missionNamespace getVariable ['ZMM_%1_OBJ_%2_DONE', false])", _zoneID, _i];
													
										clearWeaponCargoGlobal _contObj;
										clearMagazineCargoGlobal _contObj;
										clearItemCargoGlobal _contObj;
										clearBackpackCargoGlobal _contObj;
										
										_contObj addWeaponCargoGlobal [_findObj, 1];
										
										[_contObj, ["ContainerClosed", { 
											params ["_cont", "_unit"]; 
											
											private _id = _cont getVariable ["ZMM_Id", "NULL"];
											private _item = _cont getVariable ["ZMM_Type", "Item_FirstAidKit"];
											
											if !(_item in ((weaponCargo _cont) + (itemCargo _cont) + (magazineCargo _cont))) then {
												missionNamespace setVariable [_id, true, true];
												["IntelAdded", [format["<t size='1.5' color='#72E500'>Collected:</t><br/><t size='1.25'>%2</t><br/><br/><img size='2' image='\a3\ui_f\data\IGUI\Cfg\simpleTasks\types\search_ca.paa'/><br/><br/>Found By: <t color='#0080FF'>%1</t><br/>", name _unit, getText (configFile >> "CfgWeapons" >> _item >> "displayName")]]] remoteExec ['BIS_fnc_showNotification'];
												[_cont, "ContainerClosed"] remoteExec ["removeAllEventHandlers", 0, true];
											};
										}]] remoteExec ["addEventHandler", 0, true];
									};
								};
							};


							private _objTrigger = (([(([0,0,0])), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [  (_crateActivation joinString " && "), 
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];


							private _missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[_missionDesc + "<br/><br/>Target Weapon: <font color='#00FFFF'>%2</font><br/><br/><img width='150' image='%3'/>", _crateNo, _findName, getText (configFile >> "CfgWeapons" >> _findObj >> "picture"), _locName], ["Take Weapon"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "rifle"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("collect_minefield_sqf")) then {
						collect_minefield_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];

							if ([_centre] in [[_targetPos]] || [_targetPos] in [[[0,0,0]]]) then { _targetPos = [_centre, 25, 200, 5, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos; _targetPos set [2,0]; };

							if (isNil "_targetPos") then { _targetPos = selectRandom (missionNamespace getVariable [ format["ZMM_%1_FlatLocations", _zoneID], [_centre getPos [50, random 360]] ]) };

							private _missionDesc = selectRandom [
								"A Ranger Team carrying %1 has fell silent having entered an enemy minefield near %4, locate and recover the <font color='#00FFFF'>%2</font> and evac any wounded back to HQ.",
								"An allied unit was wiped out when it entered a minefield. They were transporting %1 from %4, it is vital this is recovered. Locate the fallen team and recover the <font color='#00FFFF'>%2</font>.",
								"A friendly team encountered a minefield while escaping with %1 nearby %4. The entire team was killed but enemy forces have not yet secured the <font color='#00FFFF'>%2</font>. Locate and retrieve it before the enemy can.",
								"Zulu Unit went MIA while carrying %1 inside a <font color='#00FFFF'>%2</font>. It is believed they ran into an enemy minefield somewhere nearby %4. Locate and secure any survivors and the intelligence.",
								"A Recon Team have been hit by a mine while carrying vital %1 within a <font color='#00FFFF'>%2</font>. The team are all KIA however it is vital the intelligence is recovered - Locate it somewhere around %4 and bring it back.",
								"We have lost contact with a team moving though an enemy minefield, they were carrying %1 and it is vital this intel is returned to base. Locate the <font color='#00FFFF'>%2</font> the team was carrying near %4 and return it safely."
							];
								
							private _cutter = (([AGLtoASL (_targetPos), ("Land_ClutterCutter_small_F"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_crater = (([AGLToASL _targetPos, ("Crater"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_crater setVectorUp surfaceNormal position _crater;
							_crater setPos ((getPos _crater) vectorAdd [0,0,0.02]);

							for "_i" from 0 to (random 1 + 2) do {
								private _man = (([(_targetPos), 0, ("C_man_w_worker_F"), (civilian)] call BIS_fnc_spawnVehicle) select 0);
								_man disableAI "MOVE";
								
								_man spawn {
									sleep 0.1;
									_this setPos ((_this getPos [1.5 + random 3, random 360]) vectorAdd [0,0,2]);
									[_this,[(random 360),(((_this) call BIS_fnc_getPitchBank) select 0),(((_this) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;	
									_this setDamage 1;
									sleep 5;
									_this forceAddUniform (uniform selectRandom allPlayers);
									_this addVest (vest selectRandom allPlayers);
									_this addHeadgear (headgear selectRandom allPlayers);
									removeFromRemainsCollector [_this];
									_this switchMove selectRandom ["KIA_gunner_standup01","KIA_passenger_boat_holdleft","Static_Dead","KIA_gunner_static_low01","KIA_gunner_standup01"];
									
									private _blood = (([AGLtoASL (_this getPos [random 1, random 360]), (selectRandom ["BloodPool_01_Medium_New_F","BloodSplatter_01_Medium_New_F","BloodSplatter_01_Small_New_F"]), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_blood setVectorUp surfaceNormal position _blood;
									_blood setPos ((getPos _blood) vectorAdd [0,0,0.02]);
								};
							};

							private _mineType = selectRandom ["APERSBoundingMine_Range_Ammo","APERSMine_Range_Ammo"];

							for "_i" from -25 to 25 step 5 do {
								for "_j" from -25 to 25 step 5 do {
									_minePos = _targetPos vectorAdd [_i, _j];
									_minePos set [2, 0.02];
									if (random 1 > 0.65 && _targetPos distance2D _minePos > 2 && !surfaceIsWater _minePos && count(lineIntersectsObjs [_minePos, [_minePos#0, _minePos#1, 20]]) == 0) then {
										private _mine = (([([[[(_minePos), 3]], []] call BIS_fnc_randomPos), 0, (_mineType), (_enemySide)] call BIS_fnc_spawnVehicle) select 0);
										_enemySide revealMine _mine;
										CIVILIAN revealMine _mine;
									};
								};
							};

							private _randPos = _targetPos getPos [random 125, random 360];

							private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_OBJ", _zoneID]),(_randPos)] call BIS_fnc_stringToMarker;
							_mrkr setMarkerShape "ELLIPSE";
							_mrkr setMarkerBrush "Border";
							_mrkr setMarkerSize [150, 150];
							_mrkr setMarkerAlpha 0.4;
							_mrkr setMarkerColor "ColorRed";

							private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_ICO", _zoneID]),(_randPos)] call BIS_fnc_stringToMarker;
							_mrkr setMarkerType "MinefieldAP";
							_mrkr setMarkerSize [1,1];
							_mrkr setMarkerAlpha 0.4;
							_mrkr setMarkerColor "ColorRed";

							private _endTrigger = "";

							private _itemType = selectRandom ["Land_Suitcase_F","Land_MetalCase_01_small_F","Land_PlasticCase_01_small_F","Land_PlasticCase_01_small_gray_F"];

							private _itemObj = (([AGLtoASL (_targetPos getPos [1 + random 2, random 360]), (_itemType), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							[_itemObj,[(random 360),(((_itemObj) call BIS_fnc_getPitchBank) select 0),(((_itemObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
									
							private _missionData = selecTRandom [
								format["%1 Data", selectRandom ["Weapon", "Radio", "Flight", "Mapping", "Survey", "NBC", "Target", "Account"]],
								format["%1 Locations", selectRandom ["Intel", "Camp", "POW", "Minefield", "HVT", "Storage", "Bunker", "Cache", "Testing"]],
								format["a list of %1", selectRandom ["Prisoners", "Informants", "Stockpiles", "Assets", "Codes", "Target", "Recipes"]]
							];

							private _missionDesc = format[_missionDesc + "<br/><br/><font color='#00FF80'>Target Item:</font><br/><img width='350' image='%3'/>", _missionData, getText (configFile >> "CfgVehicles" >> _itemType >> "displayName"), getText (configFile >> "CfgVehicles" >> _itemType >> "editorPreview"), _locName];
									
							_itemObj setVariable ["var_zoneID", _zoneID, true];

							[_itemObj, 
								format["<t color='#00FF80'>Take %1</t>", getText (configFile >> "CfgVehicles" >> _itemType >> "displayName")], 
								"\a3\ui_f\data\IGUI\Cfg\holdactions\holdAction_Search_ca.paa", 
								"\a3\ui_f\data\IGUI\Cfg\holdactions\holdAction_Search_ca.paa", 
								"_this distance2d _target < 3", 
								"_caller distance2d _target < 3", 
								{}, 
								{}, 
								{
									private _zoneID = _target getVariable ["var_zoneID", 0];
									missionNamespace setVariable [format["ZMM_%1_TSK_Completed", _zoneID], true, true];
									_caller playAction "PutDown"; 
									sleep 1;
									deleteVehicle _target;
									["IntelAdded", [format["<t size='1.5' color='#72E500'>Intelligence Collected:</t><br/><t size='1.25'>%2</t><br/><br/><img size='2' image='\a3\ui_f\data\IGUI\Cfg\simpleTasks\types\search_ca.paa'/><br/><br/>Found By: <t color='#0080FF'>%1</t><br/>", name _caller, getText (configFile >> "CfgVehicles" >> typeOf _target >> "displayName")]]] remoteExec ["BIS_fnc_showNotification"];
								}, 
								{}, 
								[], 
								2, 
								10 
							] remoteExec ["bis_fnc_holdActionAdd", 0, true];

							private _objTrigger = (([AGLtoASL (_centre), ("EmptyDetector"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [  format["(missionNamespace getVariable ['ZMM_%1_TSK_Completed', false])", _zoneID], 
								format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { deleteMarker _x } forEach ['MKR_%1_OBJ','MKR_%1_ICO']; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
								"" ];

							private _missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + _missionDesc, ["Recover"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "mine"] call BIS_fnc_setTask;
						};
					};

					if (isNil("capture_location_sqf")) then {
						capture_location_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _menArray = missionNamespace getVariable [format["ZMM_%1Man", _enemySide], ["O_Solider_F"]];
							private _playerSide = missionNamespace getVariable [ "ZMM_playerSide", WEST ];
							private _locations = missionNamespace getVariable [ format["ZMM_%1_FlatLocations", _zoneID], [] ];
							private _buildings = missionNamespace getVariable [ format["ZMM_%1_Buildings", _zoneID], [] ];
							private _radius = ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0) max 100; 
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];

							private _missionDesc = selectRandom [
									"Secure the area around <font color='#0080FF'>%1</font color> then locate and capture the <font color='#00FFFF'>%2 flag%3</font color> in the area.",
									"Capture <font color='#0080FF'>%1</font color> by claiming the surrounding area and locating the <font color='#00FFFF'>%2 flag%3</font color> somewhere in the area.",
									"<font color='#0080FF'>%1</font color> is occupied by enemy forces, eliminate them and secure the area by claiming the <font color='#00FFFF'>%2 flag%3</font color>.",
									"Claim the <font color='#00FFFF'>%2 flag%3</font color> located somewhere in <font color='#0080FF'>%1</font color> after you have eliminated all enemy forces there.",
									"Enemy forces have occupied <font color='#0080FF'>%1</font color>, eliminate them and claim the <font color='#00FFFF'>%2 flag%3</font color> in the area.",
									"Locate the <font color='#00FFFF'>%2 flag%3</font color> somewhere in <font color='#0080FF'>%1</font color> after you have liberated it from enemy forces."
								];
								

							if (count _buildings > 0) then {
								{
									private _building = _x;
									if ({_x distance2D _building < 250} count _locations == 0) then {		
											_locations pushBack getPos _building;
									};
								} forEach _buildings;
							};

							private _zmm_getFlag = {
								params [ "_flagSide", "_getTexture" ];
								
								_defaultFlag = switch ( _flagSide ) do { 
									case WEST: { ["Flag_Blue_F", "\A3\Data_F\Flags\Flag_Blue_CO.paa"]}; 
									case EAST: { ["Flag_Red_F", "\A3\Data_F\Flags\Flag_Red_CO.paa"]}; 
									case INDEPENDENT: { ["Flag_Green_F", "\A3\Data_F\Flags\Flag_Green_CO.paa"]}; 
									default { ["Flag_White_F", "\A3\Data_F\Flags\Flag_White_CO.paa"]};
								};
									
								_flagVar = missionNamespace getVariable [ format[ "ZMM_%1Flag", _flagSide ], _defaultFlag ];
								
								if (_getTexture) exitWith { _flagVar select 1 };
								
								_flagVar select 0
							};

							private _enemyGrp = [[0,0,0], _enemySide, 0] call BIS_fnc_spawnGroup;
							private _flagNo = 0;
							private _flagType = [ _enemySide, false ] call _zmm_getFlag;
							private _flagPTex = [ _playerSide, true ] call _zmm_getFlag;
							private _flagActivation = [];

							for "_i" from 1 to (missionNamespace getVariable ["ZZM_ObjectiveCount", 3]) do {
								private _flagPos = [];

								if (count _locations > 0) then { 
									_flagPos = selectRandom _locations;
									_locations deleteAt (_locations find _flagPos);
								} else { 
									_flagPos = [[_centre, 100 + random 150, random 360] call BIS_fnc_relPos, 1, _radius, 1, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0];
								};
									
								_flagPos = _flagPos findEmptyPosition [1, 15, _flagType];
									
								if (count _flagPos > 0) then {
									_flagNo = _flagNo + 1;
									private _flagObj = (([([[[(_flagPos), 5]], []] call BIS_fnc_randomPos), 0, (_flagType), (_enemySide)] call BIS_fnc_spawnVehicle) select 0);
									_flagObj allowDamage false;
									_flagObj setVariable [ "var_number", _flagNo, true ];
									_flagObj setVariable [ "var_zoneID", _zoneID, true ];
									_flagObj setVariable [ "var_texture", _flagPTex, true ];

									[_flagObj, 
										"<t color='#00FF80'>Capture Flag</t>", 
										"\a3\ui_f\data\IGUI\Cfg\holdactions\holdAction_requestleadership_ca.paa",
										"\a3\ui_f\data\IGUI\Cfg\holdactions\holdAction_requestleadership_ca.paa",
										"!(_target getVariable ['var_claimed', false]) && _this distance2d _target < 5", 
										"!(_target getVariable ['var_claimed', false]) && _caller distance2d _target < 5", 
										{}, 
										{}, 
										{ 	[ _target, _target getVariable ["var_texture", "\A3\Data_F\Flags\Flag_White_CO.paa"]] remoteExec ['setFlagTexture', 0, true];
											private _flagNo = _target getVariable ["var_number", 0];
											private _zoneID = _target getVariable ["var_zoneID", 0];
											_target setVariable ['var_claimed', true, true];
											missionNamespace setVariable [ format["ZMM_%1_FLAG_%2", _zoneID, _flagNo], true, true ];
											[ _target, _actionID ] remoteExec ["BIS_fnc_holdActionRemove", 0, true];
										}, 
										{}, 
										[], 
										5, 
										10 
									] remoteExec ["bis_fnc_holdActionAdd", 0, true];
										
									_flagActivation pushBack format["(missionNamespace getVariable ['ZMM_%1_FLAG_%2', false])", _zoneID, _flagNo];
									
									_relPos = [ position _flagObj, random 75, random 360 ] call BIS_fnc_relPos;
									
									_mrk = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format[ "MKR_%1_FLAG_%2", _zoneID, _flagNo ]),(_relPos)] call BIS_fnc_stringToMarker;
									_mrk setMarkerShape "ELLIPSE";
									_mrk setMarkerBrush "SolidBorder";
									_mrk setMarkerAlpha 0.5;
									_mrk setMarkerColor format[ "color%1", _enemySide ];
									_mrk setMarkerSize [ 75, 75 ];
									
									private _childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _flagNo], format['ZMM_%1_TSK', _zoneID]], true, ["Find and capture the flag located somewhere within the marked area.", format["Flag #%1", _flagNo], format["MKR_%1_FLAG_%2", _zoneID, _flagNo]], _relPos, "AUTOASSIGNED", 1, false, true, format["move%1", _flagNo]] call BIS_fnc_setTask;
									_childTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_childTrigger setTriggerStatements [  format["(missionNamespace getVariable [ 'ZMM_%1_FLAG_%2', false ])", _zoneID, _flagNo],
																	format["['ZMM_%1_SUB_%2', 'Succeeded', true] spawn BIS_fnc_taskSetState; deleteMarker 'MKR_%1_FLAG_%2';", _zoneID, _flagNo],
																	"" ];
									
									if (surfaceIsWater _relPos) then {
										_flagObj setPosASL [position _flagObj select 0, position _flagObj select 1, 0];
										_flagStone = (([([0,0,0]), ("Land_W_sharpStone_02"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_flagStone setPosASL [ getMarkerPos _flagMarker select 0, (getMarkerPos _flagMarker select 1) - 5, -1 ];
									} else {
										for "_i" from 0 to 1 + random 3 do {
											_sObj = (([AGLtoASL (_flagObj getPos [2 + random 5, random 360]), (selectRandom ["Land_WoodenCrate_01_F", "Land_WoodenCrate_01_stack_x3_F", "Land_WoodenCrate_01_stack_x5_F", "Land_TentA_F", "Land_Pallets_stack_F", "Land_PaperBox_01_open_empty_F", "Land_CratesWooden_F", "Land_Sacks_heap_F"]), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0); 
											[_sObj,[(random 360),(((_sObj) call BIS_fnc_getPitchBank) select 0),(((_sObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
										};
										
										private _enemyTeam = [];
										for "_j" from 0 to (4 * (missionNamespace getVariable ["ZZM_Diff", 1])) do { _enemyTeam set [_j, selectRandom _menArray] };
										
										private _milGroup = [_flagObj getPos [random 10, random 360], _enemySide, _enemyTeam] call BIS_fnc_spawnGroup;
										
										{
											_x setVehiclePosition [_flagObj getPos [10 + random 5, random 360], [], 0, "NONE"];
											_x disableAI "PATH";
											[_x,[(((_flagObj getRelDir _x) - 180)),(((_x) call BIS_fnc_getPitchBank) select 0),(((_x) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
											_x setFormDir ((_flagObj getRelDir _x) - 180);
											_x setBehaviour "SAFE";
											_x setUnitPos "MIDDLE";
										} forEach units _milGroup;

										{ _x addCuratorEditableObjects [[_flagObj] + units _milGroup, true] } forEach allCurators;
										
										_milGroup spawn { sleep 5; _this enableDynamicSimulation true };
									};
								};
							}; 


							_enemyGrp spawn { sleep 5; _this enableDynamicSimulation true };


							_objTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [  (_flagActivation joinString " && "), 
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];


							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[_missionDesc, _locName, count _flagActivation, if (count _flagActivation > 1) then {"s"} else {""}], ["Capture"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "attack"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("capture_object_sqf")) then {
						capture_object_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _menArray = missionNamespace getVariable [format["ZMM_%1Man", _enemySide], ["O_Solider_F"]];
							private _locations = missionNamespace getVariable [ format["ZMM_%1_FlatLocations", _zoneID], [] ];
							private _buildings = missionNamespace getVariable [ format["ZMM_%1_Buildings", _zoneID], [] ];
							private _radius = ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0) max 100; 
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];

							private _missionDesc = selectRandom [
									"Secure the area around <font color='#0080FF'>%1</font color> then locate and mark the locations of <font color='#00FFFF'>%2 Container(s)</font color> in the area.",
									"Investigate <font color='#0080FF'>%1</font color> by searching the surrounding area and locating <font color='#00FFFF'>%2 Container(s)</font color> somewhere in the area.",
									"<font color='#0080FF'>%1</font color> is occupied by enemy forces, eliminate them and secure the area while identifying the <font color='#00FFFF'>%2 Container(s)</font color>.",
									"Hunt down the locations of <font color='#00FFFF'>%2 Container(s)</font color> somewhere in <font color='#0080FF'>%1</font color>.",
									"Enemy forces have occupied <font color='#0080FF'>%1</font color>, eliminate them and find the <font color='#00FFFF'>%2 Container(s)</font color> in the area.",
									"Locate the <font color='#00FFFF'>%2 Container(s)</font color> hidden somewhere in <font color='#0080FF'>%1</font color>."
								];

							private _bldPos = _buildings apply { selectRandom (_x buildingPos -1) };
							private _itemNo = 0;
							private _itemActivation = [];

							for "_i" from 1 to (missionNamespace getVariable ["ZZM_ObjectiveCount", 3]) do {
								private _itemType = selectRandom ["C_IDAP_supplyCrate_F", "Box_FIA_Ammo_F", "Land_MetalCase_01_large_F", "Land_PlasticCase_01_large_F", "Land_PlasticCase_01_large_gray_F"];
								private _itemPos = [];
								private _inBuilding = false;

								if (random 100 > 50 && {count _bldPos > 0}) then {
									_inBuilding = true;
									_itemPos = selectRandom _bldPos;
									_bldPos deleteAt (_bldPos find _itemPos);
									_itemType = selectRandom ["Land_MetalCase_01_medium_F", "Land_PlasticCase_01_medium_F", "Land_PlasticCase_01_medium_gray_F", "Land_PlasticCase_01_small_F", "Land_PlasticCase_01_small_gray_F", "Land_MetalCase_01_small_F"];
								} else {
									if (count _locations > 0) then { 
										_itemPos = selectRandom _locations;
										_locations deleteAt (_locations find _itemPos);
									} else { 
										_itemPos = [[_centre, 100 + random 150, random 360] call BIS_fnc_relPos, 1, _radius, 1, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0];
									};
									
									_itemPos = _itemPos findEmptyPosition [1, 15, _itemType];
								};
									
								if (count _itemPos > 0) then {
									_itemNo = _itemNo + 1;
									private _item = (([ATLtoASL ([[[([0,0,0]), 150]], []] call BIS_fnc_randomPos), (_itemType), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_item setPosATL _itemPos;
									[_item,[(random 360),(((_item) call BIS_fnc_getPitchBank) select 0),(((_item) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
									_item allowDamage false;
								
									_item allowDamage false;
									_item setVariable [ "var_Number", _itemNo, true ];
									_item setVariable [ "var_zoneID", _zoneID, true ];
									
									[_item, 
										format["<t color='#00FF80'>Mark %1</t>", getText (configFile >> "CfgVehicles" >> _itemType >> "displayName")], 
										"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_Search_ca.paa",  
										"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_Search_ca.paa",  
										"true", 
										"true", 
										{}, 
										{}, 
										{ 	
											_itemNo = ( _target getVariable [ "var_Number", 0 ] );
											_zoneID = ( _target getVariable [ "var_zoneID", 0 ] );
											missionNamespace setVariable [ format[ "ZMM_%1_ITEM_%2", _zoneID, _itemNo ], true, true];
											[ _target, _actionID ] remoteExec ["BIS_fnc_holdActionRemove", 0, true];
											["IntelAdded", [format["<t size='1.5' color='#72E500'>Item Located:</t><br/><t size='1.25'>%1</t><br/><br/><img size='2' image='\a3\ui_f\data\IGUI\Cfg\simpleTasks\types\search_ca.paa'/><br/><br/>Found By: <t color='#0080FF'>%2</t><br/>", getText (configFile >> "CfgVehicles" >> typeOf _target >> "displayName"), name _caller]]] remoteExec ['BIS_fnc_showNotification', 0, true];
										}, 
										{}, 
										[], 
										5, 
										10 
									] remoteExec ["BIS_fnc_holdActionAdd", 0, true];

									_itemDist = if (_inBuilding) then { 35 } else { 50 };
									
									_relPos = [ position _item, random _itemDist, random 360 ] call BIS_fnc_relPos;	
									_mrk = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format[ "MKR_%1_ITEM_%2", _zoneID, _itemNo ]),(_relPos)] call BIS_fnc_stringToMarker;
									_mrk setMarkerPos _relPos;
									_mrk setMarkerShape "ELLIPSE";
									_mrk setMarkerBrush "SolidBorder";
									_mrk setMarkerAlpha 0.5;
									_mrk setMarkerColor format[ "color%1", _enemySide ];
									_mrk setMarkerSize [ _itemDist, _itemDist ];
									
									_childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _itemNo], format['ZMM_%1_TSK', _zoneID]], true, [format["Search for the object somewhere within the marked area.<br/><br/>Target Object: <font color='#00FFFF'>%1</font><br/><br/><img width='350' image='%2'/>", [getText (configFile >> "CfgVehicles" >> _itemType >> "displayName"),"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_- "] call BIS_fnc_filterString, getText (configFile >> "CfgVehicles" >> _itemType >> "editorPreview")], format["Object #%1", _itemNo], format["MKR_%1_ITEM_%2", _zoneID, _itemNo]], _relPos, "AUTOASSIGNED", 1, false, true, format["move%1", _itemNo]] call BIS_fnc_setTask;
									_childTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_childTrigger setTriggerStatements [  format["(missionNamespace getVariable ['ZMM_%1_ITEM_%2', false])", _zoneID, _itemNo],
										format["['ZMM_%1_SUB_%2', 'Succeeded', true] spawn BIS_fnc_taskSetState; deleteMarker 'MKR_%1_ITEM_%2';", _zoneID, _itemNo],
										"" ];
									
									_itemActivation pushBack format["(missionNamespace getVariable [ 'ZMM_%1_ITEM_%2', false ])", _zoneID, _itemNo];
									
									if (underwater _item) then {
										_item setPosASL [position _item select 0, position _item select 1, 0];
										_item enableSimulationGlobal false;
									} else {
										if !_inBuilding then {
											for "_j" from 0 to 1 + random 3 do {
												_sObj = (([AGLtoASL (_item getPos [2 + random 5, random 360]), (selectRandom ["Land_WoodenCrate_01_F", "Land_WoodenCrate_01_stack_x3_F", "Land_WoodenCrate_01_stack_x5_F", "Land_TentA_F", "Land_Pallets_stack_F", "Land_PaperBox_01_open_empty_F", "Land_CratesWooden_F", "Land_Sacks_heap_F"]), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0); 
												[_sObj,[(random 360),(((_sObj) call BIS_fnc_getPitchBank) select 0),(((_sObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
											};
										};
									
										private _enemyTeam = [];
										for "_j" from 0 to (4 * (missionNamespace getVariable ["ZZM_Diff", 1])) do { _enemyTeam set [_j, selectRandom _menArray] };

										private _milGroup = [_item getPos [random 10, random 360], _enemySide, _enemyTeam] call BIS_fnc_spawnGroup;
										
										private _bldArr = if (_inBuilding) then { (nearestBuilding _itemPos) buildingPos -1 } else { [] };
										_bldArr deleteAt (_bldArr find _itemPos);
										
										{
											if (count _bldArr > 0) then {
												private _tempPos = selectRandom _bldArr;
												_bldArr deleteAt (_bldArr find _tempPos);
												_x setPosATL _tempPos;
												_x disableAI "PATH";
											} else {
												_x setVehiclePosition [_item getPos [random 5, random 360], [], 0, "NONE"];
												_x setUnitPos "MIDDLE";
											};
										} forEach units _milGroup;

										{ _x addCuratorEditableObjects [[_item] + units _milGroup, true] } forEach allCurators;
										
										_milGroup spawn { sleep 5; _this enableDynamicSimulation true };
									};
								};
							};


							_objTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [  (_itemActivation joinString " && "), 
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];


							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[_missionDesc, _locName, count _itemActivation], ["Search"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "search"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("clear_location_sqf")) then {
						clear_location_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _menArray = missionNamespace getVariable [format["ZMM_%1Man", _enemySide], ["O_Solider_F"]];
							private _radius = ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0) max 100; 
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];

							private _minUnits = missionNamespace getVariable ["ZZM_ObjectiveCount", 3];

							private _missionDesc = [
									"Enemy forces have occupied an area near <font color='#00FFFF'>%1</font>, eliminate 90&#37; of their forces.",
									"A number of enemy groups have been spotted nearby <font color='#00FFFF'>%1</font>, locate and eliminate 90&#37; of all contacts.",
									"Eliminate all enemy forces in the area nearby <font color='#00FFFF'>%1</font>. Ensure at least 90&#37; of the enemy forces are killed.",
									"Enemy forces have recently entered <font color='#00FFFF'>%1</font>, destroy 90&#37; of their forces before they can reinforce it.",
									"The enemy appears to have occupied <font color='#00FFFF'>%1</font> overnight, eliminate 90&#37; of all forces there.",
									"Enemy forces are trying to capture <font color='#00FFFF'>%1</font>, move in and eliminate 90&#37; of all resistance."
								];		

							private _locPos = [_centre, 1, _radius, 2, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0];
							_locPos = _locPos findEmptyPosition [1, 25, "B_Soldier_F"];


							if (count _locPos <= 0) then { _locPos = _centre; };
								

							private _enemyTeam = [];
							for "_j" from 0 to (8 * (missionNamespace getVariable ["ZZM_Diff", 1])) do { _enemyTeam set [_j, selectRandom _menArray] };
										
							private _milGroup = [_locPos, _enemySide, _enemyTeam] call BIS_fnc_spawnGroup;
							[_milGroup, _centre, 10] call bis_fnc_taskPatrol;


							{ _x addCuratorEditableObjects [units _milGroup, true] } forEach allCurators;


							missionNamespace setVariable [format["ZMM_%1_TSK_Group", _zoneID], _milGroup];

							private _objTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerActivation [format["%1",_enemySide], "NOT PRESENT", false];
							_objTrigger setTriggerArea [_radius, _radius, 0, true];
							_objTrigger setTriggerStatements [  format["count thisList <=  %1", _minUnits], 
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];


							private _missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[selectRandom _missionDesc, _locName], [_locName] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "attack"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("clear_building_sqf")) then {
						clear_building_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]]];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];

							_missionDesc = [
									"A number of enemy strongholds have been located within %1. Clear out the <font color='#00FFFF'>%2%3</font> identified in this area.",
									"Enemy forces have recently reinforced %1 and occupied <font color='#00FFFF'>%2%3</font>. Eliminate all contacts found within.",
									"Locate <font color='#00FFFF'>%2%3</font> within the %1 and clear them of all enemy forces.",
									"Locate and clear <font color='#00FFFF'>%2%3</font> somewhere around %1.",
									"<font color='#00FFFF'>%2%3</font> located within %1 have been occupied by enemy forces, recapture all marked areas.",
									"Clear out the enemy found within <font color='#00FFFF'>%2%3</font> in %1."
								];

							_buildCount = missionNamespace getVariable ["ZZM_ObjectiveCount", 3];

							private _targetArr = [];
							private _tempBlds = nearestObjects [_centre, ["building","static"], 150, true];
							private _bldHuge = _tempBlds select { count (_x buildingPos -1) >= 12 }; 
							private _bldLarge = _tempBlds select { count (_x buildingPos -1) >= 8 }; 
							private _bldSmall = _tempBlds select { count (_x buildingPos -1) >= 3 }; 
							private _foundBlds = if (count _bldHuge >= _buildCount) then { _bldHuge } else { if (count _bldLarge >= _buildCount) then { _bldLarge } else { _bldSmall }; };


							if (count _foundBlds == 0) then { 
								_targetArr pushBack (nearestBuilding _centre);
							} else {
								for "_i" from 0 to _buildCount do {
									if (count _foundBlds < 1) exitWith {};
									
									private _bld = selectRandom _foundBlds;
									_foundBlds = _foundBlds - [_bld];
									_targetArr pushBack _bld;
								};
							};

							private _endActivation = [];

							{
								missionNamespace setVariable [format["ZMM_%1_OBJ_%2", _zoneID, _forEachIndex], _x];
								_endActivation pushBack format["triggerActivated ZMM_%1_TR_%2", _zoneID, _forEachIndex];
								
								private _mrkr = _x call BIS_fnc_boundingBoxMarker;
								_mrkr setMarkerColor format["Color%1", _enemySide];

								private _max = ((getMarkerSize _mrkr)#0) max ((getMarkerSize _mrkr)#1);

								private _childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _forEachIndex], format['ZMM_%1_TSK', _zoneID]], true, [format["Locate and clear the building.<br/><br/>Target Building: <font color='#FFA500'>%1</font><br/><img width='350' image='%2'/>", getText (configFile >> "CfgVehicles" >> typeOf _x >> "displayName"), getText (configFile >> "CfgVehicles" >> typeOf _x >> "editorPreview")], getText (configFile >> "CfgVehicles" >> typeOf _x >> "displayName"), format["MKR_%1_LOC", _zoneID]], _x, "AUTOASSIGNED", 1, false, true, format["move%1", _forEachIndex + 1]] call BIS_fnc_setTask;
								private _childTrigger = (([(AGLToASL (position _x)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_childTrigger setTriggerActivation [format["%1",_enemySide], "NOT PRESENT", false];
								_childTrigger setTriggerArea [_max, _max, 0, true];
								_childTrigger setTriggerTimeout [10, 10, 10, true];
								_childTrigger setTriggerStatements [  format["count thisList <= %1", (count (_x buildingPos -1) min 2)], 
																	format["['ZMM_%1_SUB_%2', 'Succeeded', true] spawn BIS_fnc_taskSetState; deleteMarker '%3';", _zoneID, _forEachIndex, _mrkr],
																	"" ];
																	
								missionNamespace setVariable [format["ZMM_%1_TR_%2", _zoneID, _forEachIndex], _childTrigger, true];

								[_zoneID, ((count (_x buildingPos -1)) / 2) max (4 + random 4), _x buildingPos -1] call zmm_fnc_areaGarrison; 
							} forEach _targetArr;



							_objTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [  (_endActivation joinString " && "), 
								format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
								"" ];
																

							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[selectRandom _missionDesc, _locName, count _targetArr, if (count _targetArr > 1) then { " Buildings" } else { " Building" }], ["Clear"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "target"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("clear_uprising_sqf")) then {
						clear_uprising_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _menArray = missionNamespace getVariable [format["ZMM_%1Man", _enemySide], ["O_Solider_F"]];
							private _buildings = missionNamespace getVariable [ format["ZMM_%1_Buildings", _zoneID], [] ];
							private _locations = missionNamespace getVariable [ format["ZMM_%1_FlatLocations", _zoneID], [] ];
							private _radius = ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0) max 100; 
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];

							private _missionType = [ "Militia", "Insurgent", "Rebel", "Rogue", "Bandit" ];
							private _missionRank = [ "General", "Supervisor", "Lieutenant", "Soldier", "Leader", "Assassin" ];

							private _missionDesc = selectRandom [
									"A local <font color='#00FFFF'>%3 %4</font> and their team are attempting to negotiate an arms deal with forces in %1. Eliminate all %2 members of the group found somewhere inside the marked locations.",
									"Eliminate a <font color='#00FFFF'>%3 %4</font> and their guards (%2 infantry) who have entered %1 to trade intel with enemy forces there, clear all guards at the marked locations.",
									"A group of %2 infantry lead by <font color='#00FFFF'>%3 %4</font> have entered %1 in an attempt to join forces with the enemy. Eliminate all members of the group found at the marked locations.",
									"Local residents have reported a team of %2 men entering %1. A <font color='#00FFFF'>%3 %4</font> is believed to be in charge of the group, ensure the entire team is eliminated by checking the marked locations.",
									"Intel shows that a <font color='#00FFFF'>%3 %4</font> has recently arrived in %1. Find all eliminate all %2 members of the group found somewhere inside the marked locations.",
									"Overnight, %2 men have arrived in %1 and began killing local villagers. Intel indicates they are being lead by a <font color='#00FFFF'>%3 %4</font>. Hunt down all %2 members of the group inside the marked locations."
								];
								

							private _bldPos = _buildings apply { selectRandom (_x buildingPos -1) };


							{ _locations pushBack position _x } forEach _buildings;

							private _endActivation = [];
							private _civMarkers = [];
							private _civCount = 0;
							private _civTypes = ("configName _x isKindOf 'Man' && [getText (_x >> ""editorSubcategory"")] in [[""EdSubcat_Personnel_Bandits""]]" configClasses (configFile >> "CfgVehicles")) apply { configName _x };

							private _enemyGrp = [[0,0,0], _enemySide, 0] call BIS_fnc_spawnGroup;

							for "_i" from 1 to (missionNamespace getVariable ["ZZM_ObjectiveCount", 4]) do {
								private _civType = selectRandom _civTypes;
								private _civPos = [];

								if (random 100 > 50 && {count _bldPos > 0}) then {
									_civPos = selectRandom _bldPos;
									_bldPos deleteAt (_bldPos find _civPos);
									_contType = selectRandom ["Box_NATO_Wps_F","Box_EAF_Wps_F","Box_East_Wps_F","Box_T_East_Wps_F","Box_IND_Wps_F"];
								} else {
									if (count _locations > 0) then { 
										_civPos = selectRandom _locations;
										_locations deleteAt (_locations find _civPos);
									} else { 
										_civPos = [_centre getPos [50 + random _radius, random 360], 1, _radius, 1, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0];
									};
									
									_civPos = _civPos findEmptyPosition [1, 50, _civType];
								};
								
								private _civUnit =  (([([[[([0,0,0]), 50]], []] call BIS_fnc_randomPos), 0, (_civType), (_enemyGrp)] call BIS_fnc_spawnVehicle) select 0);
								[_civUnit] joinSilent _enemyGrp;
								_civUnit disableAI "PATH";
								_civUnit setPos _civPos;
								_civUnit setCombatMode "RED";
								_civUnit setBehaviour "AWARE";
								
								if !(isNil "zmm_fnc_unitDirPos") then {
									[_civUnit] call zmm_fnc_unitDirPos;
								} else {
									[_civUnit,[(random 360),(((_civUnit) call BIS_fnc_getPitchBank) select 0),(((_civUnit) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
								};
									
								if (alive _civUnit) then {
									_civCount = _civCount + 1;

									private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_OBJ_%2", _zoneID, _i]),(_civUnit getPos [random 25, random 360])] call BIS_fnc_stringToMarker;
									_mrkr setMarkerShape "ELLIPSE";
									_mrkr setMarkerBrush "SolidBorder";
									_mrkr setMarkerSize [25,25];
									_mrkr setMarkerAlpha 0.4;
									_mrkr setMarkerColor format["Color%1",_enemySide];
									_civMarkers pushBack format["MKR_%1_OBJ_%2", _zoneID, _i];
								
									uiSleep 0.5; 
									missionNamespace setVariable [format["ZMM_%1_HVT_%2", _zoneID, _i], _civUnit];	
									
									_endActivation pushBack format["!alive ZMM_%1_HVT_%2", _zoneID, _i];

									private _childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _i], format['ZMM_%1_TSK', _zoneID]], true, [format["Find and eliminate <font color='#FFA500'>%1</font> somewhere near %2.", name _civUnit, _locName], format["%1", name _civUnit], format["MKR_%1_LOC", _zoneID]], getMarkerPos _mrkr, "AUTOASSIGNED", 1, false, true, "kill"] call BIS_fnc_setTask;
									private _childTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_childTrigger setTriggerStatements [  format["!alive ZMM_%1_HVT_%2", _zoneID, _i],
										format["['ZMM_%1_SUB_%2', 'Succeeded', true] spawn BIS_fnc_taskSetState; deleteMarker 'MKR_%1_OBJ_%2';", _zoneID, _i],
										"" ];
								};
							};


							{ _x addCuratorEditableObjects [units _enemyGrp, true] } forEach allCurators;


							for "_i" from 0 to (random 2) do {	
								private _enemyTeam = [];
								for "_j" from 0 to (3 * (missionNamespace getVariable ["ZZM_Diff", 1])) do { _enemyTeam set [_j, selectRandom _menArray] };

								_huntGroup = [(leader _enemyGrp) getPos [15, random 360], _enemySide, _enemyTeam] call BIS_fnc_spawnGroup;
								_huntGroup deleteGroupWhenEmpty true;
								
								[_huntGroup, getPos leader _huntGroup, 25] call BIS_fnc_taskPatrol;

								missionNamespace setVariable [format["ZMM_%1_HUNT_%2", _zoneID, _i], _huntGroup];	
								
								_huntTrigger = (([(([0,0,0])), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_huntTrigger setTriggerTimeout [10, 10, 10, true];
								_huntTrigger setTriggerArea [150, 150, 0, false, 25];
								_huntTrigger setTriggerActivation ["ANYPLAYER", "PRESENT", false];
								_huntTrigger setTriggerStatements [  "this", 
									format["[ZMM_%1_HUNT_%2, group (selectRandom thisList)] spawn BIS_fnc_stalk;", _zoneID, _i],
									"" ];
																
								_huntTrigger attachTo [leader _huntGroup, [0,0,0]];
								
								{ _x addCuratorEditableObjects [units _huntGroup, true] } forEach allCurators;
								
								_huntGroup spawn { sleep 10; _this enableDynamicSimulation true };
							};


							for "_i" from 1 to random 1 do {
								private _bombGroup = [[0,0,0], _enemySide, 0] call BIS_fnc_spawnGroup;
								private _bomber = (([([[[([0,0,0]), 150]], []] call BIS_fnc_randomPos), 0, (selectRandom _civTypes), (_bombGroup)] call BIS_fnc_spawnVehicle) select 0);
								[_bomber] joinSilent _bombGroup;
								_bomber setPos ((leader _enemyGrp) findEmptyPosition [1, 50]);
								[_bomber,[(random 360),(((_bomber) call BIS_fnc_getPitchBank) select 0),(((_bomber) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
								removeAllWeapons _bomber;
								removeBackpack _bomber;
								removeVest _bomber;
								
								private _ied1 = (([([0,0,0]), 0, "DemoCharge_Remote_Ammo", (_enemySide)] call BIS_fnc_spawnVehicle) select 0);
								private _ied2 = (([([0,0,0]), 0, "DemoCharge_Remote_Ammo", (_enemySide)] call BIS_fnc_spawnVehicle) select 0);
								private _ied3 = (([([0,0,0]), 0, "DemoCharge_Remote_Ammo", (_enemySide)] call BIS_fnc_spawnVehicle) select 0);

								_ied1 attachTo [_bomber, [-0.1,0.1,0.15],"Pelvis"];
								_ied1 setVectorDirAndUp [[0.5,0.5,0],[-0.5,0.5,0]];

								_ied2 attachTo [_bomber, [0,0.15,0.15],"Pelvis"];
								_ied2 setVectorDirAndUp [[1,0,0],[0,1,0]];

								_ied3 attachTo [_bomber, [0.1,0.1,0.15],"Pelvis"];
								_ied3 setVectorDirAndUp [[0.5,-0.5,0],[0.5,0.5,0]];
								
								_bomber setBehaviour "CARELESS";
								
								_bomber addEventHandler ["killed",{ { deleteVehicle _x } forEach attachedObjects (_this#0) }];

								missionNamespace setVariable [format["ZMM_%1_IED_%2", _zoneID, _i], _bomber];	
								
								private _bombTrigger = (([(([0,0,0])), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_bombTrigger setTriggerTimeout [10, 10, 10, true];
								_bombTrigger setTriggerArea [150, 150, 0, false, 25];
								_bombTrigger setTriggerActivation ["ANYPLAYER", "PRESENT", false];
								_bombTrigger setTriggerStatements [ "this", format["[group ZMM_%1_IED_%2, group (selectRandom thisList)] spawn BIS_fnc_stalk; [ZMM_%1_IED_%2] spawn { params ['_unit']; waitUntil { sleep 1; playSound3D ['A3\sounds_f\sfx\beep_target.wss', _unit, false, getPosASL _unit, 1, 0.5, 100]; (!alive _unit || allPlayers findIf { alive _x && _unit distance _x < 5 } >= 0) }; _exp = (([ATLtoASL (getPos _unit), ('HelicopterExploSmall'), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0); _exp attachTo [_unit,[-0.02,-0.07,0.042],'rightHand']; };", _zoneID, _i], "" ];
																
								_bombTrigger attachTo [_bomber, [0,0,0]];
								
								{ _x addCuratorEditableObjects [[_bomber],true] } forEach allCurators;
								
								_bombGroup spawn { sleep 5; _this enableDynamicSimulation true };
							};


							private _objTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [  (_endActivation joinString " && "), 
								format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
								"" ];


							private _missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[_missionDesc, _locName, count units _enemyGrp, selectRandom _missionType, selectRandom _missionRank], ["Uprising"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "meet"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("kill_animal_sqf")) then {
						kill_animal_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _buildings = missionNamespace getVariable [format["ZMM_%1_Buildings", _zoneID], []];
							private _locations = missionNamespace getVariable [format["ZMM_%1_FlatLocations", _zoneID], []];
							private _radius = ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0) max 100; 
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];

							private _missionDesc = selectRandom [
									"Hunt down <font color='#00FFFF'>%1 Animals</font> that have been %2 somewhere within %3.",
									"Around %3 are <font color='#00FFFF'>%1 Animals</font> that are suspected of being %2, locate and terminate them.",
									"Local wildlife has been %2 by enemy forces near %3, eliminate <font color='#00FFFF'>%1 Animals</font>.",
									"Within %3, a group of animals have been %2. Locate the <font color='#00FFFF'>%1 Animals</font> and neutralise them before they become a significant threat.",
									"Locate <font color='#00FFFF'>%1 Animals</font> that were last seen in %3. They are known to have been %2 and must be destroyed.",
									"Travel to %3, track down <font color='#00FFFF'>%1 Animals</font> and eliminate them. They likely have been %2 by enemy forces."
								];


							private _bldPos = _buildings apply { selectRandom (_x buildingPos -1) };


							{ _locations pushBack position _x } forEach _buildings;

							private _aniActivation = [];
							private _animalNo = missionNamespace getVariable ["ZZM_ObjectiveCount", 3];
							private _aniPrefix = selectRandom ["infected with a brain parasite","used for chemical testing","marked for organ harvesting","poisoned with a radioactive isotope","used to smuggle weapons into the region","placed to infect other livestock"];


							for "_i" from 1 to (_animalNo + 2) do {
								private _aniType = selectRandom ["Cock_random_F","Hen_random_F","Goat_random_F","Sheep_random_F","Alsatian_Random_F","Fin_random_F"];
								private _aniPos = [];

								if (random 100 > 75 && {count _bldPos > 0}) then {
									_aniPos = selectRandom _bldPos;
									_bldPos deleteAt (_bldPos find _aniPos);
								} else {
									if (count _locations > 0) then { 
										_aniPos = selectRandom _locations;
										_locations deleteAt (_locations find _aniPos);
									} else { 
										_aniPos = [_centre getPos [50 + random 100, random 360], 1, _radius, 1, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0];
									};
									
									_aniPos = _aniPos findEmptyPosition [1, 50, _aniType];
								};
								
								if (count _aniPos > 0) then {
									_civObj = ([[0,0,0], 0, "C_man_1", civilian] call BIS_fnc_spawnVehicle) select 0;
									_turretObj = ([[0,0,0], 0, "B_W_Static_Designator_01_F", civilian] call BIS_fnc_spawnVehicle) select 0;
									deleteVehicleCrew _turretObj;
									_aniObj = ([_turretObj, group _civObj, false, "", _aniType] call BIS_fnc_spawnCrew) select 0;
									deleteVehicle _turretObj;
									deleteVehicle _civObj;
									(group _aniObj) allowFleeing 0;
									(group _aniObj) setCombatMode 'BLUE';
									_aniObj setskill ['courage',1];
									_aniObj disableAI 'FSM'; 
									_aniObj disableAI 'TARGET'; 
									_aniObj disableAI 'AUTOTARGET'; 
									_aniObj disableAI 'AUTOCOMBAT';
									
									_aniObj setPosATL _aniPos;
									[_aniObj,[(random 360),(((_aniObj) call BIS_fnc_getPitchBank) select 0),(((_aniObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
									
									missionNamespace setVariable [format["ZMM_%1_OBJ_%2", _zoneID, _i], _aniObj, true];
									_aniActivation pushBack format["(missionNamespace getVariable ['ZMM_%1_OBJ_%2', objNull])", _zoneID, _i];
								};
							};


							private _objTrigger = (([(([0,0,0])), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [  format["{ !alive _x } count [%1] >= %2", (_aniActivation joinString ","), _animalNo], 
								format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
								"" ];


							private _missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[_missionDesc + "<br/><br/>Target animals will include; Dogs, Sheep, Goats and Chickens.", _animalNo, _aniPrefix, _locName], ["Hunt"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "target"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("patrol_area_sqf")) then {
						patrol_area_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _menArray = missionNamespace getVariable format["ZMM_%1Man", _enemySide];
							private _radius = ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0) max 100;
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];

							private _missionDesc = [
									"Secure the area around <font color='#0080FF'>%1</font color> by investigating <font color='#00FFFF'>%2 grid%3</font color> in the area.",
									"Recon <font color='#0080FF'>%1</font color> by patrolling the <font color='#00FFFF'>%2 grid%3</font color> in the area.",
									"<font color='#0080FF'>%1</font color> is occupied by enemy forces, eliminate them and secure the <font color='#00FFFF'>%2 grid%3</font color>.",
									"Patrol the <font color='#00FFFF'>%2 grid%3</font color> located in <font color='#0080FF'>%1</font color> and eliminate any enemy forces encountered along the way.",
									"Enemy forces have occupied <font color='#0080FF'>%1</font color>, eliminate any you find while moving through <font color='#00FFFF'>%2 grid%3</font color> in the area.",
									"Locate the <font color='#00FFFF'>%2 grid%3</font color> within <font color='#0080FF'>%1</font color>, move through each and eliminate any enemy forces there."
								];

							_enemyGrp = [[0,0,0], _enemySide, 0] call BIS_fnc_spawnGroup;
							_areaActivation = [];
							_areaGrids = [];
							_allGrids = [
									_centre getPos [100 + random _radius, 15 + random 60],
									_centre getPos [100 + random _radius, 105 + random 60],
									_centre getPos [100 + random _radius, 195 + random 60],
									_centre getPos [100 + random _radius, 285 + random 60],
									_centre getPos [250 + random _radius, 15 + random 60],
									_centre getPos [250 + random _radius, 105 + random 60],
									_centre getPos [250 + random _radius, 195 + random 60],
									_centre getPos [250 + random _radius, 285 + random 60]
								];
								
							_allGrids resize ((missionNamespace getVariable ["ZZM_ObjectiveCount", 4]) min 8);

							{
								private _gridRef = mapGridPosition _x;
								private _gridID = _forEachIndex + 1;
									
								private _gridRef = format["%1%2", _gridRef#0, _gridRef#1];
								
								if (!(surfaceIsWater _x) && !(_gridRef in _areaGrids)) then {
									_areaGrids pushBack _gridRef;

									private _gridSize = 50;
									private _gridPos = _x apply { ((floor (_x / 100))*100) + _gridSize };
									_gridPosCNV = ((_gridPos call BIS_fnc_gridToPos) select 0) vectorAdd [0,0,0];
									[format["GridPos: %1", _gridPos]] remoteExec ['systemChat'];
									[format["GirdPos Converted: %1", _gridPosCNV]] remoteExec ['systemChat'];
											
									private _mrk = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format[ "MKR_%1_ICON_%2", _zoneID, _gridID ]),(_gridPosCNV)] call BIS_fnc_stringToMarker;
									_mrk setMarkerShape "RECTANGLE";
									_mrk setMarkerBrush "BDiagonal";
									_mrk setMarkerAlpha 0.4;
									_mrk setMarkerColor format[ "color%1", _enemySide ];
									_mrk setMarkerSize [_gridSize, _gridSize];
									
									private _childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _gridID], format['ZMM_%1_TSK', _zoneID]], true, [format["Patrol within the area of %1.", _gridRef], format["Position #%1", _gridID], format["MKR_%1_ICON_%2", _zoneID, _gridID]], _gridPosCNV, "AUTOASSIGNED", 1, false, true, format["move%1", _gridID]] call BIS_fnc_setTask;
									private _childTrigger = (([ATLtoASL (_gridPosCNV), ("EmptyDetector"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_childTrigger setTriggerActivation ["ANYPLAYER", "PRESENT", false];
									_childTrigger setTriggerArea [_gridSize, _gridSize, 0, true, 50];
									_childTrigger setTriggerTimeout [5, 5, 5, false];
									_childTrigger setTriggerStatements [ "this",
										format["missionNamespace setVariable ['ZMM_%1_OBJ_%2', true, true]; ['ZMM_%1_SUB_%2', 'Succeeded', true] spawn BIS_fnc_taskSetState; deleteMarker 'MKR_%1_ICON_%2';", _zoneID, _gridID],
										"" ];
										
									_areaActivation pushBack format["(missionNamespace getVariable ['ZMM_%1_OBJ_%2', false])", _zoneID, _gridID];
										
									for "_i" from 0 to 1 + random 2 do {
										private _unitType = selectRandom _menArray;
										private _unit = (([(_gridPosCNV getPos [random 25, random 360]), 0, (_unitType), (_enemySide)] call BIS_fnc_spawnVehicle) select 0);
										[_unit] joinSilent _enemyGrp; 
										_unit disableAI "PATH";
										[_unit,[(random 360),(((_unit) call BIS_fnc_getPitchBank) select 0),(((_unit) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
										_unit setFormDir random 360;
										_unit setUnitPos "MIDDLE";
										_unit setBehaviour "SAFE";
									};
								};
							} forEach _allGrids;

							_enemyGrp spawn { sleep 5; _this enableDynamicSimulation true };

							_objTrigger = (([ATLtoASL (_centre), ("EmptyDetector"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [  (_areaActivation joinString " && "), 
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];

							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[selectRandom _missionDesc, _locName, count _areaActivation, if (count _areaActivation > 1) then {"s"} else {""}], ["Patrol"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "walk"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("kill_hvt_sqf")) then {
						kill_hvt_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]], ["_bld", objNull] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _menArray = missionNamespace getVariable [format["ZMM_%1Man", _enemySide], ["O_Solider_F"]];
							private _buildings = missionNamespace getVariable [ format["ZMM_%1_Buildings", _zoneID], []];
							private _locations = missionNamespace getVariable [ format["ZMM_%1_FlatLocations", _zoneID], [] ];
							private _radius = ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0) max 100; 
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];

							private _missionDesc = selectRandom [
									"Locate and eliminate <font color='#00FFFF'>El %2</font> and any of their nearby %3.<br/><br/>They can be found nearby %1 within the marked location.",
									"An Officer identified as <font color='#00FFFF'>The %2</font> has been spotted entering the area near %1, they must be eliminated along with any of their %3.",
									"There is an enemy insurgent known as <font color='#00FFFF'>The %2</font>.<br/><br/>The %2 is trying to leave %1 and is awaiting extraction from this location, they must be tracked down and eliminated along with any of their %3.",
									"Find and eliminate <font color='#00FFFF'>%2</font> and any of their %3. They are hiding somewhere in or near %1.",
									"A local known as <font color='#00FFFF'>The %3</font> has been identified.<br/><br/>They have been seen moving around the area outside %1, find them and kill the leader and all their %3.",
									"A high-ranking Officer until only identified as <font color='#00FFFF'>La %3</font> has been confirmed to be somewhere in the area near %1, ensure they are eliminated along with any of their %3."
								];
								

							if (!isNull _bld) then { _buildings = [_bld] }; 
								

							private _bldPos = _buildings apply { selectRandom (_x buildingPos -1) };


							{ _locations pushBack position _x } forEach _buildings;

							private _activation = [];
							private _counter = 0;
							private _hat = selectRandom (["H_Beret_blk","H_Beret_CSAT_01_F","H_Beret_gen_F","H_Beret_EAF_01_F"] select { isClass (configFile >> "CfgWeapons" >> _x) });
							private _alias = selectRandom ["Butcher", "Diablo", "Doctor", "Reaper", "Scorpion", "Hyena", "Jackal", "Lion", "Serpent"];
							private _team = selectRandom ["Henchmen", "Generals", "Commandos", "Sympathisers", "Associates", "Bodyguards", "Protectors", "Guards"];
								
							for "_i" from 1 to (missionNamespace getVariable ["ZZM_ObjectiveCount", 3]) do {
								private _pos = [];
								private _inBuilding = false;
								private _enemyTeam = [];
								
								for "_j" from 0 to (4 * (missionNamespace getVariable ["ZZM_Diff", 1])) do { _enemyTeam set [_j, selectRandom _menArray] };

								private _milGroup = [([_centre, 1, 150, 2, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0]), _enemySide, _enemyTeam] call BIS_fnc_spawnGroup;

								if (random 100 > 50 && {count _bldPos > 0}) then {
									_inBuilding = true;
									_pos = selectRandom _bldPos;
									_bldPos deleteAt (_bldPos find _pos);
								} else {
									if (count _locations > 0) then { 
										_pos = selectRandom _locations;
										_locations deleteAt (_locations find _pos);
									} else { 
										_pos = [_centre getPos [50 + random _radius, random 360], 1, _radius, 1, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0];
									};
									
									_pos = _pos findEmptyPosition [1, 50, "B_Soldier_F"];
								};
								
								private _bldArr = if (_inBuilding) then { (nearestBuilding _pos) buildingPos -1 } else { [] };
								_bldArr deleteAt (_bldArr find _pos);

								{
									if (leader _x == _x) then {
										_x setPosATL _pos;
										_x addHeadGear _hat;
										_x addGoggles "G_Aviator";
										_x unlinkItem (hmd _x);
										_x setSkill 0.5 + random 0.3;
										_x setUnitPos "MIDDLE";
										_x setVariable ["var_zID", _zoneID, true];
										_x setVariable ["var_uID", _i, true];
										removeFromRemainsCollector [_x];
										
										if (_inBuilding) then { _x disableAI "PATH" };
										
										_x addEventHandler ["Killed", {
											params ["_unit", "_killer"];
											private _zID = _unit getVariable ["var_zID", 0];
											private _uID = _unit getVariable ["var_uID", 0];
											
											private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_OBJ_%2", _zID, _uID]),(getPos _unit)] call BIS_fnc_stringToMarker;
											_mrkr setMarkerShape "ICON";
											_mrkr setMarkerType "mil_unknown";
											_mrkr setMarkerAlpha 0.4;
											_mrkr setMarkerColor format["Color%1", side group _unit];
										}];
												
										[_x, 
											format["<t color='#00FF80'>Verify identify of %1</t>", name _x], 
											"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_forceRespawn_ca.paa", 
											"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_forceRespawn_ca.paa", 
											"_this distance2d _target < 3 && !alive _target", 
											"_caller distance2d _target < 3 && !alive _target", 
											{}, 
											{}, 
											{
												[_target, _actionId] remoteExec ["BIS_fnc_holdActionRemove", 0, true];
												_caller playAction "PutDown";
												sleep 1;
												private _zID = _target getVariable ["var_zID", 0];
												private _uID = _target getVariable ["var_uID", 0];
												deleteMarker format["MKR_%1_OBJ_%2", _zID, _uID];
												[name _caller, format["Target %1 is %2.", selectRandom ["verified", "confirmed", "identified"], selectRandom ["eliminated","deceased","dead","killed"]]] remoteExec ["BIS_fnc_showSubtitle"];
												addToRemainsCollector [_target];
												
												missionNamespace setVariable [format["ZMM_%1_OBJ_%2_DONE", _zID, _uID], true, true];
											}, 
											{}, 
											[], 
											2, 
											10 
										] remoteExec ["bis_fnc_holdActionAdd", 0, true];
									} else {
										if (count _bldArr > 0) then {
											private _tempPos = selectRandom _bldArr;
											_bldArr deleteAt (_bldArr find _tempPos);
											_x setPosATL _tempPos;
											_x disableAI "PATH";
										} else {
											_x setVehiclePosition [leader _x getPos [random 10, random 360], [], 0, "NONE"];
											_x setUnitPos "MIDDLE";
											[_x,[((leader _x getRelDir getPos _x)),(((_x) call BIS_fnc_getPitchBank) select 0),(((_x) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
											doStop _x;
										};
									};
								} forEach units _milGroup;
								
								private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_OBJ_%2", _zoneID, _i]),(leader _milGroup getPos [random 50, random 360])] call BIS_fnc_stringToMarker;
								_mrkr setMarkerShape "ELLIPSE";
								_mrkr setMarkerBrush "SolidBorder";
								_mrkr setMarkerSize [100,100];
								_mrkr setMarkerAlpha 0.4;
								_mrkr setMarkerColor format["Color%1",_enemySide];
								
								_childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _i], format['ZMM_%1_TSK', _zoneID]], true, [format["Eliminate the target within the marked area.<br/><br/>Target: <font color='#00FFFF'>%1</font><br/><br/>", name leader _milGroup], format["HVT #%1", _i], format["MKR_%1_OBJ_%2", _zoneID, _i]], getMarkerPos _mrkr, "AUTOASSIGNED", 1, false, true, format["move%1", _i]] call BIS_fnc_setTask;
								_childTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_childTrigger setTriggerStatements [  format["(missionNamespace getVariable ['ZMM_%1_OBJ_%2_DONE', false])", _zoneID, _i],
									format["['ZMM_%1_SUB_%2', 'Succeeded', true] spawn BIS_fnc_taskSetState; deleteMarker 'MKR_%1_OBJ_%2';", _zoneID, _i],
									"" ];
								
								_activation pushBack format["(missionNamespace getVariable ['ZMM_%1_OBJ_%2_DONE', false])", _zoneID, _i];

								{ _x addCuratorEditableObjects [units _milGroup, true] } forEach allCurators;
							};


							private _objTrigger = (([(([0,0,0])), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [  (_activation joinString " && "), 
								format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
								"" ];


							private _missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[_missionDesc + format["<br/><br/>You will need to verify the identity of any target when eliminated. Each target is known to be wearing a <font color='#00FFFF'>%1</font>.<br/><br/><img image='%2' width='60'/>", getText (configFile >> "CfgWeapons" >> _hat >> "displayName"), getText (configFile >> "CfgWeapons" >> _hat >> "picture")], _locName, _alias, _team], ["Killer"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "target"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("rescue_prisoner_sqf")) then {
						rescue_prisoner_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]], ["_bld", objNull ] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _menArray = missionNamespace getVariable [format["ZMM_%1Man", _enemySide], ["O_Solider_F"]];
							private _buildings = missionNamespace getVariable [ format["ZMM_%1_Buildings", _zoneID], []];
							private _locations = missionNamespace getVariable [ format["ZMM_%1_FlatLocations", _zoneID], [] ];
							private _radius = ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0) max 100; 
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];

							private _missionDesc = selectRandom [
									"Locate and rescue <font color='#00FFFF'>%2 %3s</font> who have been captured nearby %1.",
									"Save <font color='#00FFFF'>%2 %3s</font> who were spotted by the enemy entering %1, they must be saved.",
									"There are <font color='#00FFFF'>%2 %3s</font> who where trying to flee %1 but were captured and are awaiting execution, rescue them.",
									"Find and rescue <font color='#00FFFF'>%2 %3s</font> being held hostage somewhere nearby %1.",
									"Set free <font color='#00FFFF'>%2 %3s</font> last seen around the area outside %1, find them and rescue them.",
									"A group of <font color='#00FFFF'>%2 %3s</font> are confirmed to be in the area near %1, ensure they are brought back to safety."
								];


							private _bldPos = _buildings apply { selectRandom (_x buildingPos -1) };


							{ _locations pushBack position _x } forEach _buildings;


							private _hvtActivation = [];
							private _hvtFailure = [];
							private _hvtGroup = [[0,0,0], civilian, 0] call BIS_fnc_spawnGroup;
							private _inBuilding = true;

							selectRandom [
								["Journalist", 	["C_journalist_F","C_Journalist_01_War_F"]],
								["Pilot", 		["C_man_pilot_F","C_IDAP_Pilot_01_F","I_C_Pilot_F"]],
								["Prisoner", 	["C_man_p_fugitive_F","C_man_p_fugitive_F_afro","C_man_p_fugitive_F_asia","C_man_p_fugitive_F_euro"]],
								["Paramedic", 	["C_Man_Paramedic_01_F","C_IDAP_Man_Paramedic_01_F"]],
								["Worker", 		["C_Man_ConstructionWorker_01_Black_F","C_Man_ConstructionWorker_01_Blue_F","C_Man_ConstructionWorker_01_Red_F","C_Man_ConstructionWorker_01_Vrana_F","C_Man_UtilityWorker_01_F"]],
								["Informant", 	["C_man_hunter_1_F"]],
								["Aid Worker", 	["C_IDAP_Man_AidWorker_01_F","C_IDAP_Man_AidWorker_02_F","C_IDAP_Man_AidWorker_03_F","C_IDAP_Man_AidWorker_04_F","C_IDAP_Man_AidWorker_05_F","C_IDAP_Man_AidWorker_06_F","C_IDAP_Man_AidWorker_07_F","C_IDAP_Man_AidWorker_08_F","C_IDAP_Man_AidWorker_09_F"]],
								["Soldier", 	["I_G_Survivor_F"]]
							] params ["_rescueType","_rescueClass"];

							for "_i" from 1 to (missionNamespace getVariable ["ZZM_ObjectiveCount", 3]) do {
								private _hvtClass = selectRandom _rescueClass;
								private _hvtPos = [];
								private _inBuilding = false;
								
								if (random 100 > 50 && {count _bldPos > 0}) then {
									_hvtPos = selectRandom _bldPos;
									_bldPos deleteAt (_bldPos find _hvtPos);
									_inBuilding = true;
								} else {
									if (count _locations > 0) then { 
										_hvtPos = selectRandom _locations;
										_locations deleteAt (_locations find _hvtPos);
									} else { 
										_hvtPos = [_centre getPos [50 + random _radius, random 360], 1, _radius, 1, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0];
									};
									
									_hvtPos = _hvtPos findEmptyPosition [1, 50, _hvtClass];
								};
									
								private _hvtObj = (([([[[([0,0,0]), 150]], []] call BIS_fnc_randomPos), 0, (_hvtClass), (_hvtGroup)] call BIS_fnc_spawnVehicle) select 0);
								_hvtObj setCaptive true;
								_hvtObj setPosATL _hvtPos;
								[_hvtObj,[(random 360),(((_hvtObj) call BIS_fnc_getPitchBank) select 0),(((_hvtObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
								_hvtObj disableAI "ALL";
								
								removeBackpack _hvtObj;
								removeAllWeapons _hvtObj;
								
								_hvtObj setVariable ["var_zoneID", _zoneID, true];
								_hvtObj setVariable ["var_itemID", _i, true];
								
								_hvtObj addEventHandler ["killed",{
									private _killer = if (isNull (_this#2)) then { (_this#0) getVariable ["ace_medical_lastDamageSource", (_this#1)] } else { (_this#2) };
									if (isPlayer _killer) then { format["%1 (%2) killed %3", name _killer, groupId group _killer, name (_this#0)] remoteExec ["systemChat",0] };
								}];

								private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_OBJ_%2", _zoneID, _i]),(_hvtObj getPos [random 50, random 360])] call BIS_fnc_stringToMarker;
										_mrkr setMarkerShape "ELLIPSE";
										_mrkr setMarkerBrush "SolidBorder";
										_mrkr setMarkerSize [50,50];
										_mrkr setMarkerAlpha 0.4;
										_mrkr setMarkerColor "ColorCivilian";

								if (_rescueType == "Soldier") then {
									_hvtObj spawn {
										sleep 5;
										_this forceAddUniform (uniform selectRandom allPlayers);
										_this addVest (vest selectRandom allPlayers);
										_this addHeadgear (headgear selectRandom allPlayers);
										removeFromRemainsCollector [_this];
									};
								};				
								
								missionNamespace setVariable [format["ZMM_%1_HVT_%2", _zoneID, _i], _hvtObj];
								
								waitUntil { !([name _hvtObj] in [[""]]) }; 
								
								private _childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _i], format['ZMM_%1_TSK', _zoneID]], true, [format["Rescue %2, a captured %1 from enemy forces, ensuring they come to no harm.<br/><br/>Target: <font color='#00FFFF'>%2</font><br/><br/><img width='350' image='%3'/>", _rescueType, name _hvtObj, getText (configFile >> "CfgVehicles" >> _hvtClass >> "editorPreview")], format["Rescue %1", name _hvtObj], format["MKR_%1_OBJ", _zoneID]], getMarkerPos _mrkr, "AUTOASSIGNED", 1, false, true, format["move%1", _i]] call BIS_fnc_setTask;
								_childTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_childTrigger setTriggerStatements [  format["(alive ZMM_%1_HVT_%2 && ZMM_%1_HVT_%2 distance2D %3 > 400)", _zoneID, _i, _centre],
																format["['ZMM_%1_SUB_%2', 'Succeeded', true] spawn BIS_fnc_taskSetState;", _zoneID, _i],
																"" ];
								
								private _hvtTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_hvtTrigger setTriggerStatements [ 	format["!alive ZMM_%1_HVT_%2", _zoneID, _i], 
																format["['ZMM_%1_SUB_%2', 'Failed', true] spawn BIS_fnc_taskSetState; deleteMarker 'MKR_%1_OBJ_%2';", _zoneID, _i],
																"" ];
																
								_hvtActivation pushBack format["((alive ZMM_%1_HVT_%2 && ZMM_%1_HVT_%2 distance2D %3 > 400) || !alive ZMM_%1_HVT_%2)", _zoneID, _i, _centre];
								_hvtFailure pushBack format["(!alive ZMM_%1_HVT_%2)", _zoneID, _i];
								
								if (!isNil "ace_captives_setHandcuffed") then {
									[_hvtObj, true] call ace_captives_setHandcuffed;
								} else {
									[_hvtObj, selectRandom ["AmovPercMstpSnonWnonDnon_Ease", "Acts_JetsMarshallingStop_loop", "Acts_JetsShooterIdle"]] remoteExec ["switchMove", 0, true]; 
									
									_hvtObj setVariable ["FAR_var_isStable", true, true];
									
									[_hvtObj, 
										format["<t color='#00FF80'>Untie %1</t>", name _hvtObj], 
										"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_unbind_ca.paa",  
										"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_unbind_ca.paa",  
										"_this distance2d _target < 3",   
										"_caller distance2d _target < 3",   
										{}, 
										{},
										{ 
											[ _target, _actionID ] remoteExec ["BIS_fnc_holdActionRemove", 0, true];
											private _zoneID = _target getVariable ["var_zoneID", 0];
											private _itemID = _target getVariable ["var_itemID", 0];
											deleteMarker format["MKR_%1_OBJ_%2", _zoneID, _itemID];
											[_target] joinSilent group _caller; 
											sleep 2;
											[_target, "ALL"] remoteExec ["enableAI", 0, true]; 
											[_target, ""] remoteExec ["playMoveNow", 0, true]; 
											[_target, false] remoteExec ["setCaptive", 0, true];
										}, 
										{}, 
										[], 
										3, 
										10 
									] remoteExec ["BIS_fnc_holdActionAdd", 0, true];
								};
								
								private _enemyTeam = [];
								for "_j" from 0 to (2 * (missionNamespace getVariable ["ZZM_Diff", 1])) do { _enemyTeam set [_j, selectRandom _menArray] };
								
								private _milGroup = [_hvtPos getPos [random 2, random 360], _enemySide, _enemyTeam] call BIS_fnc_spawnGroup;
								
								private _bldArr = if (_inBuilding) then { (nearestBuilding _hvtObj) buildingPos -1 } else { [] };
								_bldArr deleteAt (_bldArr find _hvtPos);
								
								{
									if (count _bldArr > 0) then {
										private _tempPos = selectRandom _bldArr;
										_bldArr deleteAt (_bldArr find _tempPos);
										_x setPosATL _tempPos;
										_x disableAI "PATH";
									} else {
										_x setVehiclePosition [_hvtObj getPos [random 10, random 360], [], 0, "NONE"];
										_x setUnitPos "MIDDLE";
									};
								} forEach units _milGroup;

								{ _x addCuratorEditableObjects [[_hvtObj] + units _milGroup, true] } forEach allCurators;
							};


							_objTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [ 	(_hvtActivation joinString " && "), 
																format["if (%2) then { ['ZMM_%1_TSK', 'Failed', true] spawn BIS_fnc_taskSetState; } else { ['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; }; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID, (_hvtFailure joinString " || ")],
																"" ];

							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[_missionDesc, _locName, count units _hvtGroup, _rescueType], ["Rescue"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "help"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("destroy_site_sqf")) then {
						destroy_site_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _menArray = missionNamespace getVariable format["ZMM_%1Man", _enemySide];
							private _missionDesc = [
									"Destroy a <font color='#00FFFF'>%2</font> recently established by enemy forces somewhere within %1.",
									"The enemy has established a <font color='#00FFFF'>%2</font>, it must be destroyed. Search around %1 to locate it.",
									"We've picked up a signal indicating a small <font color='#00FFFF'>%2</font> is present somewhere within %1, find it and destroy it.",
									"Destroy the <font color='#00FFFF'>%2</font> found somewhere within %1.",
									"Intel has identified a small enemy <font color='#00FFFF'>%2</font> around %1, destroy it.",
									"A UAV flying over %1 has spotted enemy movements that indicate a <font color='#00FFFF'>%2</font> is present in the area. Move into %1, locate the site and destroy it swiftly."
								];

							if ([_centre] in [[_targetPos]] || [_targetPos] in [[[0,0,0]]]) then { _targetPos = [_centre, 25, 200, 5, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0] };
								 
							_targetPos = [_zoneID, _targetPos, false, true] call zmm_fnc_areaSite;

							if ([_targetPos] in [[[]]]) then { _targetPos = _centre };

							private _foundArr = nearestObjects [_targetPos, ["Land_Sacks_heap_F"], 150, true];

							if (count _foundArr > 0) then {
								_targetPos = getPos (_foundArr#0);
								deleteVehicle (_foundArr#0);
							} else {
								for "_i" from 0 to 2 do {
									private _sObj = (([AGLtoASL (_targetPos getPos [2 + random 5, random 360]), (selectRandom ["Land_WoodenCrate_01_F", "Land_WoodenCrate_01_stack_x3_F", "Land_WoodenCrate_01_stack_x5_F", "Land_TentA_F", "Land_Pallets_stack_F", "Land_PaperBox_01_open_empty_F", "Land_CratesWooden_F", "Land_Sacks_heap_F"]), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0); 
									[_sObj,[(random 360),(((_sObj) call BIS_fnc_getPitchBank) select 0),(((_sObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
								};

								private _enemyGrp = [[0,0,0], _enemySide, 0] call BIS_fnc_spawnGroup;
								for "_i" from 0 to 1 + random 3 do {
									private _unit = (([(_targetPos getPos [random 15, random 360]), 0, (selectRandom _menArray), (_enemyGrp)] call BIS_fnc_spawnVehicle) select 0);
									[_unit] joinSilent _enemyGrp; 
									_unit disableAI "PATH";
									[_unit,[(random 360),(((_unit) call BIS_fnc_getPitchBank) select 0),(((_unit) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
									_unit setUnitPos "MIDDLE";
									_unit setBehaviour "SAFE";
								};
							};

							private _targetType = selectRandom ["Land_TTowerSmall_1_F","Land_TTowerSmall_2_F"];
							private _obj = (([ATLtoASL (_targetPos), (_targetType), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_obj setVectorUp [0,0,1];

							missionNamespace setVariable [format["ZMM_%1_OBJ", _zoneID], _obj];

							{ _x addCuratorEditableObjects [[_obj], true] } forEach allCurators;


							_objTrigger = (([(([0,0,0])), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [ 	format["!alive ZMM_%1_OBJ", _zoneID], 
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];


							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[selectRandom _missionDesc, _locName, format["%1 %2", selectRandom ["Communications", "Listening", "Radio", "LRR"], selectRandom ["Station", "Post", "Site", "Camp"]]] + format["<br/><br/>Target Tower: <font color='#00FFFF'>%1</font><br/><br/><img width='300' image='%2'/>", getText (configFile >> "CfgVehicles" >> _targetType >> "displayName"), getText (configFile >> "CfgVehicles" >> _targetType >> "editorPreview")], ["Site"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "radio"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("destroy_crashsite_sqf")) then {
						destroy_crashsite_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _menArray = missionNamespace getVariable [format["ZMM_%1Man", _enemySide], ["O_Solider_F"]];
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];
							private _missionDesc = [
									"The enemy has engaged a cargo transport flying over %2, search the crash site for nearby for <font color='#00FFFF'>%1 Ammo Crates</font> and destroy them.",
									"An enemy air transport has crashed near %2, search the area for <font color='#00FFFF'>%1 Ammo Crates</font> and destroy them.",
									"<font color='#00FFFF'>%1 Ammo Crates</font> have been spotted near a wreck at %2, move in and destroy them.",
									"Search and destroy the <font color='#00FFFF'>%1 Ammo Crates</font> at a downed transport somewhere around %2.",
									"An air transport carrying supplies has crashed at %2. Secure the area and destroy the <font color='#00FFFF'>%1 Ammo Crates</font> before they can fall into enemy hands.",
									"A crashed transport has been spotted near %2. Find the <font color='#00FFFF'>%1 Ammo Crates</font> before the enemy can and destroy them."
								];
								
							private _crateNo = missionNamespace getVariable ["ZZM_ObjectiveCount", 3];
								
							if ([_centre] in [[_targetPos]] || [_targetPos] in [[[0,0,0]]]) then { _targetPos = [_centre, 25, 200, 5, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0]; _targetPos set [2,0]; };


							private _wreck = (([(AGLToASL (_targetPos)), (selectRandom [ "Land_Mi8_wreck_F", "Land_Wreck_Heli_02_Wreck_01_F"]), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_wreck setVectorUp surfaceNormal position _wreck;
							
							[
								_wreck, 
								format["Rig <t color='#00FF80'>%1</t> to Detonate", getText (configFile >> "CfgVehicles" >> typeOf _wreck >> "displayName")], 
								"\a3\ui_f_oldman\data\IGUI\Cfg\holdactions\destroy_ca.paa",  
								"\a3\ui_f_oldman\data\IGUI\Cfg\holdactions\destroy_ca.paa",  
								"true", 
								"true", 
								{}, 
								{}, 
								{ 	
									[ _target, _actionID ] remoteExec ["BIS_fnc_holdActionRemove", 0, true];
									_caller playAction "PutDown";
									[name _caller, "Scatter, charges set to blow in 30 seconds!"] remoteExec ["BIS_fnc_showSubtitle"];
									(([AGLtoASL (getPos _caller), "SatchelCharge_Remote_Ammo_Scripted", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									sleep 30;
									(([AGLtoASL (getPos _target), "Bo_GBU12_LGB", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									sleep 1;
									_nearObjs = _target nearObjects 5;
									{(if (typeOf _x == "test_EmptyObjectForSmoke") then {deleteVehicle _x})} forEach _nearObjs;
									deleteVehicle _target;
								}, 
								{}, 
								[], 
								5, 
								10 
							] remoteExec ["BIS_fnc_holdActionAdd", 0, true];

							missionNamespace setVariable [format["ZMM_%1_OBJ_WRECK", _zoneID], _wreck];

							private _wreckTask = [[format["ZMM_%1_SUB_WRECK", _zoneID], format['ZMM_%1_TSK', _zoneID]], true, [format["Locate the wreck somewhere within the marked area and interact with it to set charges.<br/><br/>Target: <font color='#00FFFF'>%1</font><br/><br/><img width='300' image='%2'/>", getText (configFile >> "CfgVehicles" >> typeOf _wreck >> "displayName"), getText (configFile >> "CfgVehicles" >> typeOf _wreck >> "editorPreview")], "Destroy Wreck", format["MKR_%1_LOC", _zoneID]], objNull, "AUTOASSIGNED", 1, false, true, "destroy"] call BIS_fnc_setTask;
							private _wreckTrigger = (([(AGLToASL (_targetPos)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_wreckTrigger setTriggerStatements [ format["!alive ZMM_%1_OBJ_WRECK", _zoneID],
								format["['ZMM_%1_SUB_WRECK', 'Succeeded', true] spawn BIS_fnc_taskSetState;", _zoneID, _i],
								"" ];

							private _crateActivation = [format["!alive ZMM_%1_OBJ_WRECK", _zoneID]];

							private _smoke = (([ATLtoASL (position _wreck), ("test_EmptyObjectForSmoke"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							private _crater = (([AGLtoASL (position _wreck), ("CraterLong"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_crater setVectorUp surfaceNormal position _wreck;


							{ _x addCuratorEditableObjects [[_wreck], true] } forEach allCurators;


							for "_i" from 1 to _crateNo do {
								private _ammoType = selectRandom ["Box_Syndicate_Ammo_F","Box_Syndicate_WpsLaunch_F"];
								private _ammoPos = [_centre, 100 + random 50, 200, 2, 0, 0.5, 0, [], [ _targetPos, _targetPos ]] call BIS_fnc_findSafePos vectorAdd [0,0,0];
								_ammoPos = _ammoPos findEmptyPosition [1, 25, _ammoType];

								if (count _ammoPos > 0) then { 
									private _ammoObj = (([ATLtoASL (_ammoPos), (_ammoType), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									[_ammoObj,[(random 90),(((_ammoObj) call BIS_fnc_getPitchBank) select 0),(((_ammoObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
									
									missionNamespace setVariable [format["ZMM_%1_OBJ_%2", _zoneID, _i], _ammoObj];
									
									_crateActivation pushBack format["!alive ZMM_%1_OBJ_%2", _zoneID, _i];
									
									clearWeaponCargoGlobal _ammoObj;
									clearMagazineCargoGlobal _ammoObj;
									clearItemCargoGlobal _ammoObj;
									clearBackpackCargoGlobal _ammoObj;
											
									private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_OBJ_%2", _zoneID, _i]),(_ammoPos getPos [random 50, random 360])] call BIS_fnc_stringToMarker;
									_mrkr setMarkerShape "ELLIPSE";
									_mrkr setMarkerBrush "SolidBorder";
									_mrkr setMarkerSize [50,50];
									_mrkr setMarkerAlpha 0.4;
									_mrkr setMarkerColor format["Color%1",_enemySide];
													
									private _childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _i], format['ZMM_%1_TSK', _zoneID]], true, [format["Locate the crate somewhere within the marked area.<br/><br/>Target Object: <font color='#00FFFF'>%1</font><br/><br/><img width='300' image='%2'/>", getText (configFile >> "CfgVehicles" >> _ammoType >> "displayName"), getText (configFile >> "CfgVehicles" >> _ammoType >> "editorPreview")], format["Crate #%1", _i], format["MKR_%1_OBJ_%2", _zoneID, _i]], getMarkerPos _mrkr, "AUTOASSIGNED", 1, false, true, format["move%1", _i]] call BIS_fnc_setTask;
									private _childTrigger = (([(AGLToASL (_ammoPos)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_childTrigger setTriggerStatements [ format["!alive ZMM_%1_OBJ_%2", _zoneID, _i],
										format["['ZMM_%1_SUB_%2', 'Succeeded', true] spawn BIS_fnc_taskSetState; deleteMarker 'MKR_%1_OBJ_%2';", _zoneID, _i],
										"" ];

									private _enemyTeam = [];
									for "_j" from 0 to (2 * (missionNamespace getVariable ["ZZM_Diff", 1])) do { _enemyTeam set [_j, selectRandom _menArray] };
									
									private _milGroup = [_ammoObj getPos [random 2, random 360], _enemySide, _enemyTeam] call BIS_fnc_spawnGroup;
									{ _x setUnitPos "MIDDLE" } forEach units _milGroup;
									{ _x addCuratorEditableObjects [[_ammoObj] + units _milGroup, true] } forEach allCurators;
								};
							};


							private _objTrigger = (([(AGLToASL (_targetPos)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [  (_crateActivation joinString " && "),
								format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
								"" ];


							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[selectRandom _missionDesc, _crateNo, _locName], ["Crash"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "plane"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("destroy_tower_sqf")) then {
						destroy_tower_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							_centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];

							_missionDesc = [
									"Destroy a <font color='#00FFFF'>%1</font> recently constructed by enemy forces.",
									"The enemy has established a <font color='#00FFFF'>%1</font> at this location, destroy it.",
									"We've picked up a signal indicating a <font color='#00FFFF'>%1</font> is present in the area, destroy it.",
									"Destroy the <font color='#00FFFF'>%1</font> at the marked location.",
									"Intel has identified an enemy <font color='#00FFFF'>%1</font>, destroy it.",
									"A UAV has spotted an enemy <font color='#00FFFF'>%1</font> recently built by the enemy, destroy it."
								];

							_objClass = selectRandom ["Land_TTowerBig_1_F","Land_TTowerBig_2_F","Land_Communication_F"];

							if ([_centre] in [[_targetPos]] || [_targetPos] in [[[0,0,0]]]) then { _targetPos = [_centre, 25, 200, 5, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0] };
							if (isNil "_targetPos") then { _targetPos = _centre };
							_targetPos set [2,0];


							_nearTowers = (_centre nearObjects ["building", 300]) select {typeOf _x in ["Land_TTowerBig_1_F", "Land_TTowerBig_2_F", "Land_Communication_F"]};
							_obj = objNull;

							if (count _nearTowers > 0) then {
								_obj = selectRandom _nearTowers;
							} else {
								if !(isClass (configFile >> "CfgVehicles" >> _objClass)) exitWith {
									format["[ZMM] Invalid vehicle class: %1", _objClass] call zmm_fnc_logMsg;
									false
								};

								_emptyPos = _targetPos findEmptyPosition [1, 50, _objClass];

								if !(count _emptyPos > 0) then { _emptyPos = _targetPos; };
									
								_obj = (([ATLtoASL (_emptyPos), (_objClass), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_obj setVectorUp [0,0,1];
							};

							missionNamespace setVariable [format["ZMM_%1_OBJ", _zoneID], _obj];


							_objTrigger = (([(AGLToASL (_targetPos)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [ 	format["!alive ZMM_%1_OBJ", _zoneID], 
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];


							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[selectRandom _missionDesc, getText (configFile >> "CfgVehicles" >> _objClass >> "displayName")] + format["<br/><br/><img width='350' image='%1'/>", getText (configFile >> "CfgVehicles" >> _objClass >> "editorPreview")], ["Tower"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "destroy"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("collect_crashsite_sqf")) then {
						collect_crashsite_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _menArray = missionNamespace getVariable [format["ZMM_%1Man", _enemySide], ["O_Solider_F"]];
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];
							private _missionDesc = selectRandom [
									"The enemy has engaged a cargo transport over %2, search the crash site for nearby for <font color='#00FFFF'>%1 Crates or Boxes</font> and collect them.",
									"An enemy transporter has crashed near %2, search the area for <font color='#00FFFF'>%1 Crates or Boxes</font> and secure them.",
									"<font color='#00FFFF'>%1 Crates or Boxes</font> have been spotted near a wreck at %2, move in and recover them.",
									"Search for and collect the <font color='#00FFFF'>%1 Crates or Boxes</font> at a downed transport somewhere around %2.",
									"A transporter carrying supplies has crashed at %2. Secure the area and recover the <font color='#00FFFF'>%1 Crates or Boxes</font> before they can fall into enemy hands.",
									"A crashed transport has been spotted near %2. Find the <font color='#00FFFF'>%1 Crates or Boxes</font> before the enemy can and collect them."
								];
								
							if ([_centre] in [[_targetPos]] || [_targetPos] in [[[0,0,0]]]) then { _targetPos = [_centre, 25, 200, 5, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0]; _targetPos set [2,0]; };


							private _wreck = (([ATLtoASL (_targetPos), (selectRandom [ "Land_Mi8_wreck_F", "Land_Wreck_Heli_02_Wreck_01_F"]), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_wreck setVectorUp surfaceNormal position _wreck;
							
							[
								_wreck, 
								format["Rig <t color='#00FF80'>%1</t> to Detonate", getText (configFile >> "CfgVehicles" >> typeOf _wreck >> "displayName")], 
								"\a3\ui_f_oldman\data\IGUI\Cfg\holdactions\destroy_ca.paa",  
								"\a3\ui_f_oldman\data\IGUI\Cfg\holdactions\destroy_ca.paa",  
								"true", 
								"true", 
								{}, 
								{}, 
								{ 	
									[ _target, _actionID ] remoteExec ["BIS_fnc_holdActionRemove", 0, true];
									_caller playAction "PutDown";
									[name _caller, "Scatter, charges set to blow in 30 seconds!"] remoteExec ["BIS_fnc_showSubtitle"];
									(([AGLtoASL (getPos _caller), "SatchelCharge_Remote_Ammo_Scripted", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									sleep 30;
									(([AGLtoASL (getPos _target), "Bo_GBU12_LGB", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									sleep 1;
									_nearObjs = _target nearObjects 5;
									{(if (typeOf _x == "test_EmptyObjectForSmoke") then {deleteVehicle _x})} forEach _nearObjs;
									deleteVehicle _target;
								}, 
								{}, 
								[], 
								5, 
								10 
							] remoteExec ["BIS_fnc_holdActionAdd", 0, true];

							missionNamespace setVariable [format["ZMM_%1_OBJ_WRECK", _zoneID], _wreck];

							private _wreckTask = [[format["ZMM_%1_SUB_WRECK", _zoneID], format['ZMM_%1_TSK', _zoneID]], true, [format["Locate the wreck somewhere within the marked area.<br/><br/>Target: <font color='#00FFFF'>%1</font><br/><br/><img width='300' image='%2'/>", getText (configFile >> "CfgVehicles" >> typeOf _wreck >> "displayName"), getText (configFile >> "CfgVehicles" >> typeOf _wreck >> "editorPreview")], "Destroy Wreck", format["MKR_%1_LOC", _zoneID]], objNull, "AUTOASSIGNED", 1, false, true, "destroy"] call BIS_fnc_setTask;
							private _wreckTrigger = (([(AGLToASL (_targetPos)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_wreckTrigger setTriggerStatements [ format["!alive ZMM_%1_OBJ_WRECK", _zoneID],
								format["['ZMM_%1_SUB_WRECK', 'Succeeded', true] spawn BIS_fnc_taskSetState;", _zoneID, _i],
								"" ];

							private _crateActivation = [format["!alive ZMM_%1_OBJ_WRECK", _zoneID]];

							private _smoke = (([ATLtoASL (position _wreck), ("test_EmptyObjectForSmoke"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							private _crater = (([AGLtoASL (position _wreck), ("CraterLong"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_crater setVectorUp surfaceNormal position _wreck;


							for "_i" from 1 to (missionNamespace getVariable ["ZZM_ObjectiveCount", 3]) do {
								private _ammoType = selectRandom ["Box_Syndicate_Ammo_F","Box_Syndicate_WpsLaunch_F","Land_PaperBox_01_small_closed_white_med_F","Land_PaperBox_01_small_closed_brown_food_F","Box_East_Ammo_F","Box_EAF_AmmoOrd_F","Box_IND_Grenades_F"];
								private _ammoPos = [_centre, 100 + random 50, 200, 2, 0, 0.5, 0, [], [ _targetPos, _targetPos ]] call BIS_fnc_findSafePos vectorAdd [0,0,0];
								_ammoPos = _ammoPos findEmptyPosition [1, 25, _ammoType];

								if (count _ammoPos > 0) then { 
									private _ammoObj = (([ATLtoASL (_ammoPos), (_ammoType), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_ammoObj allowDamage false;
									[_ammoObj,[(random 90),(((_ammoObj) call BIS_fnc_getPitchBank) select 0),(((_ammoObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
									
									missionNamespace setVariable [format["ZMM_%1_OBJ_%2", _zoneID, _i], _ammoObj];
									
									_crateActivation pushBack format["!alive ZMM_%1_OBJ_%2", _zoneID, _i];
									
									clearWeaponCargoGlobal _ammoObj;
									clearMagazineCargoGlobal _ammoObj;
									clearItemCargoGlobal _ammoObj;
									clearBackpackCargoGlobal _ammoObj;
											
									private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_OBJ_%2", _zoneID, _i]),(_ammoPos getPos [random 50, random 360])] call BIS_fnc_stringToMarker;
									_mrkr setMarkerShape "ELLIPSE";
									_mrkr setMarkerBrush "SolidBorder";
									_mrkr setMarkerSize [50,50];
									_mrkr setMarkerAlpha 0.4;
									_mrkr setMarkerColor format["Color%1",_enemySide];
									
									[_ammoObj, 
											format["<t color='#00FF80'>Take %1</t>", getText (configFile >> "CfgVehicles" >> _ammoType >> "displayName")], 
											"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_Search_ca.paa", 
											"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_Search_ca.paa", 
											"_this distance2d _target < 3", 
											"_caller distance2d _target < 3", 
											{}, 
											{}, 
											{
												_caller playAction "PutDown"; 
												sleep 1;
												deleteVehicle _target;
												["IntelAdded", [format["<t size='1.5' color='#72E500'>Crate Collected:</t><br/><t size='1.25'>%2</t><br/><br/><img size='2' image='\a3\ui_f\data\IGUI\Cfg\simpleTasks\types\search_ca.paa'/><br/><br/>Found By: <t color='#0080FF'>%1</t><br/>", name _caller, getText (configFile >> "CfgVehicles" >> typeOf _target >> "displayName")]]] remoteExec ['BIS_fnc_showNotification'];
											}, 
											{}, 
											[], 
											2, 
											10 
										] remoteExec ["bis_fnc_holdActionAdd", 0, true];
													
									private _childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _i], format['ZMM_%1_TSK', _zoneID]], true, [format["Locate the crate somewhere within the marked area.<br/><br/>Target Object: <font color='#00FFFF'>%1</font><br/><br/><img width='300' image='%2'/>", getText (configFile >> "CfgVehicles" >> _ammoType >> "displayName"), getText (configFile >> "CfgVehicles" >> _ammoType >> "editorPreview")], format["Crate #%1", _i], format["MKR_%1_OBJ_%2", _zoneID, _i]], getMarkerPos _mrkr, "AUTOASSIGNED", 1, false, true, format["move%1", _i]] call BIS_fnc_setTask;
									private _childTrigger = (([(AGLToASL (_ammoPos)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_childTrigger setTriggerStatements [ format["!alive ZMM_%1_OBJ_%2", _zoneID, _i],
										format["['ZMM_%1_SUB_%2', 'Succeeded', true] spawn BIS_fnc_taskSetState; deleteMarker 'MKR_%1_OBJ_%2';", _zoneID, _i],
										"" ];

									private _enemyTeam = [];
									for "_j" from 0 to (2 * (missionNamespace getVariable ["ZZM_Diff", 1])) do { _enemyTeam set [_j, selectRandom _menArray] };
										
									private _milGroup = [_ammoObj getPos [random 2, random 360], _enemySide, _enemyTeam] call BIS_fnc_spawnGroup;
									{ _x setUnitPos "MIDDLE" } forEach units _milGroup;
									{ _x addCuratorEditableObjects [[_ammoObj] + units _milGroup, true] } forEach allCurators;
								};
							};


							private _objTrigger = (([(AGLToASL (_targetPos)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [  (_crateActivation joinString " && "),
								format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
								"" ];


							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[_missionDesc, (count _crateActivation) + 1, _locName], ["Crash"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "plane"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("rescue_minefield_sqf")) then {
						rescue_minefield_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];

							if ([_centre] in [[_targetPos]] || [_targetPos] in [[[0,0,0]]]) then { _targetPos = [_centre, 25, 200, 5, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0]; _targetPos set [2,0]; };

							if (isNil "_targetPos") then { _targetPos = selectRandom (missionNamespace getVariable [ format["ZMM_%1_FlatLocations", _zoneID], [_centre getPos [50, random 360]] ]) };

							private _missionDesc = selectRandom [
								"An allied Scout Team has hit an enemy minefield nearby %1, locate and stabilise the survivors and evacuate them back to HQ.",
								"A Recon Unit reported discovering an enemy minefield at %1, contact was lost shortly afterwards. Locate the unit and recover any survivors at the site.",
								"While under fire from enemy forces, an allied team have wandered into an minefield. Move into the area and secure the allied team somewhere at %1, extracting any survivors.",
								"A Recon Team are believed to have walked into an enemy minefield in the vicinity of %1. Locate the team and rescue any survivors in the area.",
								"Allied forces have hit an enemy minefield at %1, they are understood to be heavily wounded and required immediate evacuation. Locate the friendly units and extract any survivors.",
								"While retreating from enemy contact an allied team have hit an enemy minefield. Heavy casualties have been reported at %1, locate them and extract any survivors."
							];
								

							private _cutter = (([ATLtoASL (_targetPos), ("Land_ClutterCutter_small_F"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							private _crater = (([AGLtoASL (_targetPos), ("Crater"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_crater setVectorUp surfaceNormal position _crater;
							_crater setPos ((getPos _crater) vectorAdd [0,0,0.02]);


							for "_i" from 1 to (random 3) do {
								private _man = (([(_targetPos), 0, ("C_man_w_worker_F"), ([[0,0,0], civilian, 0] call BIS_fnc_spawnGroup)] call BIS_fnc_spawnVehicle) select 0);
								_man disableAI "MOVE";
								
								_man spawn {
									sleep 0.1;
									_this setPos ((_this getPos [1.5 + random 3, random 360]) vectorAdd [0,0,2]);
									[_this,[(random 360),(((_this) call BIS_fnc_getPitchBank) select 0),(((_this) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;	
									_this setDamage 1;
									sleep 5;
									_this forceAddUniform (uniform selectRandom allPlayers);
									_this addVest (vest selectRandom allPlayers);
									_this addHeadgear (headgear selectRandom allPlayers);
									removeFromRemainsCollector [_this];
									_this switchMove selectRandom ["KIA_gunner_standup01","KIA_passenger_boat_holdleft","Static_Dead","KIA_gunner_static_low01","KIA_gunner_standup01"];
									
									private _blood = (([([0,0,0]), (selectRandom ["BloodPool_01_Medium_New_F","BloodSplatter_01_Medium_New_F","BloodSplatter_01_Small_New_F"]), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_blood setPos (_this getPos [random 1, random 360]);
									_blood setVectorUp surfaceNormal position _blood;
									_blood setPos ((getPos _blood) vectorAdd [0,0,0.02]);
								};
							};

							private _mineType = selectRandom ["APERSBoundingMine_Range_Ammo","APERSMine_Range_Ammo"];

							for "_i" from -25 to 25 step 5 do {
								for "_j" from -25 to 25 step 5 do {
									_minePos = _targetPos vectorAdd [_i, _j];
									_minePos set [2, 0.02];
									if (random 1 > 0.65 && _targetPos distance2D _minePos > 2 && !surfaceIsWater _minePos && count(lineIntersectsObjs [_minePos, [_minePos#0, _minePos#1, 20]]) == 0) then {
										private _mine = (([([[[(_minePos), 3]], []] call BIS_fnc_randomPos), 0, (_mineType), (_enemySide)] call BIS_fnc_spawnVehicle) select 0);
										_enemySide revealMine _mine;
										CIVILIAN revealMine _mine;
									};
								};
							};

							private _randPos = _targetPos getPos [random 125, random 360];

							private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_OBJ", _zoneID]),(_randPos)] call BIS_fnc_stringToMarker;
							_mrkr setMarkerShape "ELLIPSE";
							_mrkr setMarkerBrush "Border";
							_mrkr setMarkerSize [150, 150];
							_mrkr setMarkerAlpha 0.4;
							_mrkr setMarkerColor "ColorRed";

							private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_ICO", _zoneID]),(_randPos)] call BIS_fnc_stringToMarker;
							_mrkr setMarkerType "MinefieldAP";
							_mrkr setMarkerSize [1,1];
							_mrkr setMarkerAlpha 0.4;
							_mrkr setMarkerColor "ColorRed";


							private _evacMan = (([([[[([0,0,0]), 150]], []] call BIS_fnc_randomPos), 0, ("C_man_w_worker_F"), ([[0,0,0], civilian, 0] call BIS_fnc_spawnGroup)] call BIS_fnc_spawnVehicle) select 0);	
							_evacMan allowDamage false;
							_evacMan disableAI "MOVE";
							_evacMan setPos (_targetPos getPos [random 1, random 360]);
							[_evacMan,[(random 360),(((_evacMan) call BIS_fnc_getPitchBank) select 0),(((_evacMan) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;

							_evacMan spawn {
								sleep 5;
								_this forceAddUniform (uniform selectRandom allPlayers);
								_this addVest (vest selectRandom allPlayers);
								_this addHeadgear (headgear selectRandom allPlayers);
								removeFromRemainsCollector [_this];
								if (isClass(configFile >> "CfgPatches" >> "ace_main")) then { [_this, true] call ace_medical_fnc_setUnconscious } else { _this setUnconscious true };
							};

							_evacMan addEventHandler ["killed",{
								private _killer = if (isNull (_this#2)) then { (_this#0) getVariable ["ace_medical_lastDamageSource", (_this#1)] } else { (_this#2) };
								if (isPlayer _killer) then { format["%1 (%2) killed %3",name _killer,groupId group _killer,name (_this select 0)] remoteExec ["systemChat",0] };
							}];

							private _blood = (([([0,0,0]), (selectRandom ["BloodPool_01_Large_New_F","BloodPool_01_Medium_New_F","BloodSplatter_01_Large_New_F","BloodSplatter_01_Medium_New_F","BloodSplatter_01_Small_New_F"]), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_blood setPos (_evacMan getPos [random 1, random 360]);
							_blood setVectorUp surfaceNormal position _blood;
							_blood setPos ((getPos _blood) vectorAdd [0,0,0.02]);

							missionNamespace setVariable [format["ZMM_%1_HVT", _zoneID], _evacMan];


							_evacMan setVariable ["FAR_var_isStable", true, true];
							
							[_evacMan, 
								format["<t color='#00FF80'>Revive %1</t>", name _evacMan], 
								"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_revive_ca.paa",  
								"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_revive_ca.paa",  
								"_this distance2d _target < 3",   
								"_caller distance2d _target < 3",   
								{ _caller playAction "medic" }, 
								{},
								{ 
									[ _target, _actionID ] remoteExec ["BIS_fnc_holdActionRemove", 0, true];
									[_target] joinSilent group _caller; 
									sleep 2;
									[_target, false] remoteExec ["setUnconscious", 0, true]; 
									[_target, "ALL"] remoteExec ["enableAI", 0, true]; 
									[_target, ""] remoteExec ["switchMove", 0, true]; 
									[_target, ""] remoteExec ["playMove", 0, true]; 
									[_target, ""] remoteExec ["playMoveNow", 0, true]; 
									[_target, false] remoteExec ["setCaptive", 0, true];
								}, 
								{}, 
								[], 
								3, 
								10 
							] remoteExec ["BIS_fnc_holdActionAdd", 0, true];


							private _allowDmgTrigger = (([(AGLToASL (_targetPos)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_allowDmgTrigger setTriggerActivation ["ANYPLAYER", "PRESENT", false];
							_allowDmgTrigger setTriggerArea [25, 25, 0, false, 25];
							_allowDmgTrigger setTriggerStatements [	format["this", _zoneID], 
								format["ZMM_%1_HVT allowDamage true;", _zoneID],
								"" ];


							private _objTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [ format["alive ZMM_%1_HVT && %2 distance2D ZMM_%1_HVT > 300", _zoneID, _centre], 
								format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { deleteMarker _x } forEach ['MKR_%1_OBJ','MKR_%1_ICO']; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
								"" ];


							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + (format[_missionDesc, _locName]), ["CASVAC"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "mine"] call BIS_fnc_setTask;
						};
					};

					if (isNil("intel_site_sqf")) then {
						intel_site_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _menArray = missionNamespace getVariable format["ZMM_%1Man", _enemySide];
							private _missionDesc = [
									"Locate a <font color='#00FFFF'>%1</font> that has been recently acquired by enemy forces. It is somewhere in %3 and contains %2, find and return the %1 safely.",
									"Enemy forces at %3 are known to have come into possession of a <font color='#00FFFF'>%1</font>, containing %2. Find and secure the %1.",
									"Somewhere within %3 a <font color='#00FFFF'>%1</font> with %2 is presently being guarded by enemy forces. Find its location and recover the %1.",
									"Locate and take a <font color='#00FFFF'>%1</font> containing %2 somewhere within %3.",
									"Intel has identified a <font color='#00FFFF'>%1</font>, with %2 that is currently somewhere in %3. Find the %1 and take it.",
									"A Recon Unit has confirmed that the enemy are in possession of a <font color='#00FFFF'>%1</font> with %2. It was last seen being transported into %3, move in and secure the %1."
								];
								
							private _intelTypes = selectRandom [
								[	"Laptop", 
									selectRandom ["Land_Laptop_unfolded_F","Land_Laptop_03_black_F","Land_Laptop_03_olive_F","Land_Laptop_03_sand_F","Land_Laptop_02_unfolded_F"], 
									format["%1 on %2", selectRandom ["information", "data", "details", "statistics", "a report", "intelligence", "evidence"], selectRandom ["recent enemy movements", "enemy operating procedures", "nuclear rocket tests"]]
								],
								[	format["%1 %2", selectRandom ["Secret", "Confidential", "Signed"], selectRandom ["Document", "File", "Order"]],
									selectRandom ["Land_Document_01_F","Land_File1_F","Land_FilePhotos_F","Land_File2_F","Land_File_research_F"],
									format["a %1 of %2", selectRandom ["list", "collection", "catalogue", "inventory", "register", "check-list", "source"], selectRandom ["enemy commanders", "escaped prisoners", "nuclear rocket tests", "CBRN incidents", "infected wildlife"]]
								],
								[	selectRandom ["Lined Suitcase", "Secure Case", "Metal Suitcase"],
									selectRandom ["Land_Suitcase_F"],
									selectRandom ["counterfeit money inside", "bars of gold bullion", "a radioactive isotope inside"]
								],
								[	selectRandom ["Lined Case", "Secure Case", "Transport Case"],
									selectRandom ["Land_MetalCase_01_small_F", "Land_PlasticCase_01_small_idap_F"],
									format["a %1 %2", selectRandom ["frozen", "thawing", "freezing", "decaying", "suspended"], selectRandom ["chicken", "monkey", "sample of nuclear waste", "vial of a newly-developed nerve agent"]]
								],
								[	selectRandom ["CBRN Case", "Secure Container", "Sealed CBRN Container"],
									selectRandom ["Land_PlasticCase_01_small_CBRN_F", "Land_PlasticCase_01_small_olive_CBRN_F"],
									format["a %1 %2 inside", selectRandom ["highly-advanced", "newly developed", "futuristic", "captured", "never seen"], selectRandom ["item of filtration equipment", "air conditioning system", "sample from a nearby site of interest"]]
								],
								[	selectRandom ["Small Container", "Sealed Container"],
									selectRandom ["Land_FoodContainer_01_F","Land_FoodContainer_01_White_F"],
									format["%1 of %2", selectRandom ["samples", "bottles", "a flask", "a syringe"], selectRandom ["an unknown nerve agent", "radioactive ants", "antibiotics", "blood"]]
								]
							];

							_intelTypes params ["_intelName", "_intelType", "_intelCont"];

							if ([_centre] in [[_targetPos]] || [_targetPos] in [[[0,0,0]]]) then { _targetPos = [_centre, 25, 200, 5, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0] };

							_targetPos = [_zoneID, _targetPos, false, true] call zmm_fnc_areaSite;


							if ([_targetPos] in [[[]]]) then { _targetPos = _centre };
							 
							private _foundArr = nearestObjects [_targetPos, ["Land_CampingTable_small_F","Land_CampingTable_small_white_F","Land_CampingTable_F","Land_CampingTable_white_F","Land_WoodenTable_large_F","Land_WoodenTable_small_F","Land_TableBig_01_F","OfficeTable_01_new_F","OfficeTable_01_old_F"], 150, true];

							if (count _foundArr > 0) then {
								_targetPos = getPos (_foundArr#0);
								
								private _bbr = boundingBoxReal (_foundArr#0);
								_targetPos set [2, 0.05 + (abs ((_bbr#1#2) - (_bbr#0#2)))];
							} else {
								private _table = (([ATLtoASL (_targetPos), ("Land_WoodenTable_small_F"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_targetPos = getPos _table;
								
								private _bbr = boundingBoxReal _table;
								_targetPos set [2, 0.05 + (abs ((_bbr#1#2) - (_bbr#0#2)))];
								
								for "_i" from 0 to 1 + random 3 do {
									private _sObj = (([AGLtoASL (_table getPos [2 + random 5, random 360]), (selectRandom ["Land_WoodenCrate_01_F", "Land_WoodenCrate_01_stack_x3_F", "Land_WoodenCrate_01_stack_x5_F", "Land_TentA_F", "Land_Pallets_stack_F", "Land_PaperBox_01_open_empty_F", "Land_CratesWooden_F", "Land_Sacks_heap_F"]), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0); 
									[_sObj,[(random 360),(((_sObj) call BIS_fnc_getPitchBank) select 0),(((_sObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
								};

								private _enemyGrp = [[0,0,0], _enemySide, 0] call BIS_fnc_spawnGroup;
								for "_i" from 0 to 1 + random 2 do {
									private _unit = (([(_table getPos [random 15, random 360]), 0, (selectRandom _menArray), (_enemyGrp)] call BIS_fnc_spawnVehicle) select 0);
									[_unit] joinSilent _enemyGrp; 
									_unit disableAI "PATH";
									[_unit,[(((_table getRelDir _unit) - 180)),(((_unit) call BIS_fnc_getPitchBank) select 0),(((_unit) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
									_unit setFormDir ((_table getRelDir _unit) - 180);
									_unit setUnitPos "MIDDLE";
									_unit setBehaviour "SAFE";
								};
							};

							private _itemObj = (([([0,0,0]), (_intelType), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							[_itemObj,[(random 360),(((_itemObj) call BIS_fnc_getPitchBank) select 0),(((_itemObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
							_itemObj allowDamage false;
							_itemObj setPosATL _targetPos;

							missionNamespace setVariable [format["ZMM_%1_OBJ", _zoneID], _itemObj];

							if (alive _itemObj) then {
								[_itemObj, 
									format["<t color='#00FF80'>Take %1</t>", getText (configFile >> "CfgVehicles" >> _intelType >> "displayName")], 
									"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_Search_ca.paa", 
									"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_Search_ca.paa", 
									"_this distance2d _target < 3", 
									"_caller distance2d _target < 3", 
									{}, 
									{}, 
									{
										_caller playAction "PutDown"; 
										sleep 1;
										deleteVehicle _target;
										["IntelAdded", [format["<t size='1.5' color='#72E500'>Collected:</t><br/><t size='1.25'>%2</t><br/><br/><img size='2' image='%3'/><br/><br/>Found By: <t color='#0080FF'>%1</t><br/>", name _caller, getText (configFile >> "CfgVehicles" >> typeOf _target >> "displayName"), getText (configFile >> "CfgVehicles" >> typeOf _target >> "editorPreview")]]] remoteExec ['BIS_fnc_showNotification'];
									}, 
									{}, 
									[], 
									2, 
									10 
								] remoteExec ["bis_fnc_holdActionAdd", 0, true];
								
								{ _x addCuratorEditableObjects [[_itemObj], true] } forEach allCurators;
							};


							_objTrigger = (([(([0,0,0])), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [ 	format["!alive ZMM_%1_OBJ", _zoneID], 
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];


							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[selectRandom _missionDesc, _intelName, _intelCont, _locName] + format["<br/><br/>Intel indicates that there is an small enemy POI located somewhere in this area that houses the %1.<br/><br/>Target Item: <font color='#00FFFF'>%1</font><br/><br/><img width='300' image='%2'/>", getText (configFile >> "CfgVehicles" >> _intelType >> "displayName"), getText (configFile >> "CfgVehicles" >> _intelType >> "editorPreview")], ["Site"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "radio"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("destroy_convoy_sqf")) then {
						destroy_convoy_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];

							private _manList = missionNamespace getVariable [format["ZMM_%1Man", _enemySide],["O_Solider_F"]];
							private _carList = missionNamespace getVariable [format["ZMM_%1Veh_Convoy", _enemySide],[]];

							private _missionDesc = [
									"A %3 %4 has just finished a meeting in %1 with an enemy Commander there. Destroy %4s convoy of <font color='#00FFFF'>%2 Vehicles</font>.",
									"Destroy a group of <font color='#00FFFF'>%2 Vehicles</font> understood to be owned by a %3 %4 living somewhere nearby %1.",
									"A %3 %4 is passing through the enemy-controlled area of %1. Locate the %4s <font color='#00FFFF'>%2 Vehicles</font> and destroy them.",
									"Neutralise a %3 %4 by destroying their vehicles and escort; <font color='#00FFFF'>%2 Vehicles</font> in total. The %4 will be travelling somewhere around %1.",
									"The area around %1 has long be controlled by a %3 %4. They will be driving around the enemy-controlled area of %1, locate the %4s <font color='#00FFFF'>%2 Vehicles</font> and eliminate them all.",
									"The %3 %4 of %1 has just completed a deal with rebel forces in the area. Find the %4s <font color='#00FFFF'>%2 Vehicles</font> and ensure both the %4 and all vehicles are destroyed."
								];	

							private _conVerb = selectRandom ['feared', 'respected', 'notorious', 'senior', 'high-ranking', 'decorated', 'wealthy', 'rogue', 'dangerous', 'long-wanted', 'reclusive'];
							private _conType = selectRandom ['Diplomat', 'Warlord', 'Terrorist', 'Official', 'Advisor', 'Leader', 'Kingpin', 'Drug Baron', 'Arms Dealer', 'Convict'];
							private _objArr = selectRandom [
								[selectRandom ["Land_MetalCase_01_small_F","Land_MetalCase_01_small_F","Land_Suitcase_F"], format["%1 %2", selectRandom ["Chemical","Nuclear","Radioactive","Stolen"], selectRandom ["Detonator","Explosive","Substance","Agent","Munition","Weapon","Bomb","Plans"]]],
								["Land_Money_F", format["%1 %2", selectRandom ["Forged","Stolen","Counterfeit"], selectRandom ["Ancient Coin","stack of Banknotes","selection of Bills","stack of Cash"]]]
							];

							_objArr params ["_itemType","_itemDesc"];
							private _itemText = format["<br/><br/>The %1 is known to be travelling with a %2 concealed inside a <font color='#00FFFF'>%3</font>. When either the %1 or the vehicle they are travelling in are destroyed, this item will be dropped nearby and must be collected by our forces.<br/><br/>Mission Item: <font color='#FFA500'>%3</font><br/><img width='350' image='%4'/>", _conType, _itemDesc, getText (configFile >> "CfgVehicles" >> _itemType >> "displayName"), getText (configFile >> "CfgVehicles" >> _itemType >> "editorPreview")];;

							if (count _carList == 0) then {
								_carList = switch _enemySide do {
									case west: {
										[ 
											["B_LSV_01_armed_F", "[_grpVeh, ['Black',1] ] call BIS_fnc_initVehicle;"]
											,["B_LSV_01_unarmed_F", "[_grpVeh, ['Black',1] ] call BIS_fnc_initVehicle;"]
											,["B_LSV_01_armed_F", "[_grpVeh, ['Black',1] ] call BIS_fnc_initVehicle;"]
										]
									};
									case east: {
										[
											["O_LSV_02_armed_F", "[_grpVeh, ['Black',1] ] call BIS_fnc_initVehicle;"]
											,["O_LSV_02_unarmed_F", "[_grpVeh, ['Black',1] ] call BIS_fnc_initVehicle;"]
											,["O_LSV_02_armed_F", "[_grpVeh, ['Black',1] ] call BIS_fnc_initVehicle;"]
										]
									};	
									case independent: {
										[ 
											["I_G_Offroad_01_armed_F",""]
											,["I_G_Offroad_01_F",""]
											,["I_G_Offroad_01_armed_F",""]
										]
									};
								};
							};

							private _enemyGrp = [[0,0,0], _enemySide, 0] call BIS_fnc_spawnGroup;
							private _vehCount = 0;
							private _endActivation = [];
							private _objHVT = ObjNull;

							{
								_x params [["_vehType", ""], ["_customInit", ""]];
								
								if !(isClass (configFile >> "cfgVehicles" >> _vehType)) exitWith {
								
								};
								
								private _foundRoad = objNull;
								
								for "_i" from 50 to 1000 step 50 do {
									private _road = selectRandom (_targetPos nearRoads _i);
									if !(isNil "_road") exitWith { _foundRoad = _road };
								};
								
								private _tempPos = [0,0,0];
								
								if !(isNull _foundRoad) then {
									_tempPos = (getPos _foundRoad) findEmptyPosition [1, 25, _vehType];
								} else {
									_tempPos = (_centre getPos [10 + random 40, random 360]) findEmptyPosition [1, 25, _vehType];
								};
								
								["DEBUG", format["destroy_convoy (%1) - Spawning %2 at %3", _zoneID, _vehType, _tempPos]] call zmm_fnc_logMsg;
								
								_grpVeh = (([AGLtoASL ([_tempPos, 0, 150, 10, 0, 20] call BIS_fnc_findSafePos vectorAdd [0,0,0]), (_vehType), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								
								if (isNil "_foundRoad" && count roadsConnectedTo _foundRoad > 0) then { [_grpVeh,[([_foundRoad, (roadsConnectedTo _foundRoad) # 0] call BIS_fnc_DirTo),(((_grpVeh) call BIS_fnc_getPitchBank) select 0),(((_grpVeh) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation };
									
								missionNamespace setVariable [format["ZMM_%1_VEH_%2", _zoneID, _forEachIndex], _grpVeh];	
								
								_cargoS = count fullCrew [_grpVeh, "cargo", true];
								_cargoF = count fullCrew [_grpVeh, "turret", true];	
								_crew = (count fullCrew [_grpVeh, "", true]) - _cargoS - _cargoF;

								for "_i" from 1 to _crew do {
									_tempMan = (([([[[[0,0,0], 150]], []] call BIS_fnc_randomPos), 0, (selectRandom _manList), (_enemySide)] call BIS_fnc_spawnVehicle) select 0);
									[_tempMan] joinSilent _enemyGrp; 
									_tempMan moveInAny _grpVeh;
								};
								
								if ((_cargoS + _cargoF) > 1) then {
									_cargoGrp = [[0,0,0], _enemySide, 0] call BIS_fnc_spawnGroup;
									for "_i" from 1 to (_cargoS + _cargoF) do {
										_tempMan = (([([[[[0,0,0], 150]], []] call BIS_fnc_randomPos), 0, (selectRandom _manList), (_enemySide)] call BIS_fnc_spawnVehicle) select 0);
										[_tempMan] joinSilent _enemyGrp; 
										_tempMan moveInAny _grpVeh;
									};
									
									if (_forEachIndex == 1) then {
										_objHVT = selectRandom (if (count units _cargoGrp > 0) then { units _cargoGrp } else { crew _grpVeh });
										_objHVT addHeadgear "H_Beret_blk";
										_objHVT setVariable ["var_zoneID", _zoneID, true];
										_objHVT setVariable ["var_itemType", _itemType, true];
										_objHVT setVariable ["var_itemDesc", _itemDesc, true];
										_objHVT unlinkItem (hmd _objHVT);
									};
									
									{ _x addCuratorEditableObjects [units _cargoGrp, true] } forEach allCurators;
								};
									
								if (alive _grpVeh) then {
									{ _x addCuratorEditableObjects [[_grpVeh], true] } forEach allCurators;
									
									_grpVeh setConvoySeparation 20;
								
									_endActivation pushBack format["!alive ZMM_%1_VEH_%2", _zoneID, _forEachIndex];
								
									_childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _forEachIndex], format['ZMM_%1_TSK', _zoneID]], true, [format["Locate and destroy the convoy vehicle.<br/><br/>Target Vehicle: <font color='#FFA500'>%1</font><br/><img width='350' image='%2'/>", getText (configFile >> "CfgVehicles" >> _vehType >> "displayName"), getText (configFile >> "CfgVehicles" >> _vehType >> "editorPreview")], format["Vehicle #%1", _forEachIndex + 1], format["MKR_%1_LOC", _zoneID]], nil, "AUTOASSIGNED", 1, false, true, format["move%1", _forEachIndex + 1]] call BIS_fnc_setTask;
									_childTrigger = (([AGLtoASL (_centre), ("EmptyDetector"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_childTrigger setTriggerStatements [  format["!alive ZMM_%1_VEH_%2", _zoneID, _forEachIndex],
																	format["['ZMM_%1_SUB_%2', 'Succeeded', true] spawn BIS_fnc_taskSetState;", _zoneID, _forEachIndex],
																	"" ];
																	
									_vehCount = _vehCount + 1;
								};
							} forEach _carList;

							if (!isNull _objHVT) then {	
								_objHVT addEventHandler ["Killed", {
									params ["_unit", "_killer"];
									private _zoneID = _unit getVariable ["var_zoneID", 0];
									private _itemType = _unit getVariable ["var_itemType", objNull];
									private _itemDesc = _unit getVariable ["var_itemDesc", ""];
									
									private _itemObj = (([AGLtoASL ([[[(position _unit), 10]], []] call BIS_fnc_randomPos), (_itemType), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_itemObj setVariable ["var_zoneID", _zoneID, true];
									
									private _itemTask = [[format["ZMM_%1_OBJ_TSK", _zoneID], format['ZMM_%1_TSK', _zoneID]], true, [format["Collect the %3.<br/><br/>Target Item: <font color='#FFA500'>%1</font><br/><img width='350' image='%2'/>", getText (configFile >> "CfgVehicles" >> _itemType >> "displayName"), getText (configFile >> "CfgVehicles" >> _itemType >> "editorPreview"), _itemDesc], format["Take %1", _itemDesc], format["MKR_%1_LOC", _zoneID]], _itemObj, "ASSIGNED", 1, false, true, "take"] call BIS_fnc_setTask;

									[_itemObj, 
										format["<t color='#00FF80'>Take %1</t>", getText (configFile >> "CfgVehicles" >> _itemType >> "displayName")], 
										"\a3\ui_f\data\IGUI\Cfg\holdactions\holdAction_Search_ca.paa", 
										"\a3\ui_f\data\IGUI\Cfg\holdactions\holdAction_Search_ca.paa", 
										"_this distance2d _target < 3", 
										"_caller distance2d _target < 3", 
										{}, 
										{}, 
										{
											private _zoneID = _target getVariable ["var_zoneID", 0];
											_caller playAction "PutDown"; 
											[format["ZMM_%1_OBJ_TSK", _zoneID], 'Succeeded', true] spawn BIS_fnc_taskSetState;
											sleep 1;
											deleteVehicle _target;
											missionNamespace setVariable [format["ZMM_%1_OBJ", _zoneID], true, true];
										}, 
										{}, 
										[], 
										2, 
										10 
									] remoteExec ["bis_fnc_holdActionAdd", 0, true];
								}];

								_endActivation pushBack format["(missionNamespace getVariable ['ZMM_%1_OBJ', false])", _zoneID ];
							} else {
								_itemText = "";
							};

							[leader _enemyGrp, format["MKR_%1_MAX", _zoneID], "SHOWMARKER"] spawn zmm_fnc_aiUPS;

							{ _x addCuratorEditableObjects [units _enemyGrp, true] } forEach allCurators;

							_objTrigger = (([AGLtoASL (_centre), ("EmptyDetector"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [ 	(_endActivation joinString " && "), 
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];
											
							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[selectRandom _missionDesc, _locName, _vehCount, _conVerb, _conType] + _itemText, ["Convoy"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "car"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("destroy_vehicle_sqf")) then {
						destroy_vehicle_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _locations = missionNamespace getVariable [format["ZMM_%1_FlatLocations", _zoneID], []];
							private _vehUtil = missionNamespace getVariable[format["ZMM_%1Veh_Util",_enemySide],[""]];
							private _vehMed = missionNamespace getVariable[format["ZMM_%1Veh_Medium",_enemySide],[""]];
							private _vehTank = missionNamespace getVariable[format["ZMM_%1Veh_Heavy",_enemySide],[""]];
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _radius = ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0) max 150; 

							private _missionDesc = selectRandom [
									"Locate and destroy <font color='#00FFFF'>%1 Prototype %2</font> spotted in %3. Each prototype will need an item collected from the wreck.",
									"Enemy forces have recently reinforced %3 with modified vehicles. Destroy the <font color='#00FFFF'>%1 %2</font> located there and obtain key parts from each.",
									"Hunt down <font color='#00FFFF'>%1 %2</font> found somewhere around %3, the %2 has been modified and HQ will need a part bought back for research.",
									"<font color='#00FFFF'>%1 %2</font> entered %3 recently. The %3 will have modified parts which must be collected after they are destroyed.",
									"Destroy <font color='#00FFFF'>%1 Modified %2</font> stationed somewhere around %3. When destroyed move in and collect the modified part from each vehicle."
								];	
								
							private _vehNo = 0;
							private _vehArr =  [];
							private _roadPos = (_centre nearRoads _radius) apply { getPos _x };
							private _vehActivation = [];

							{
								private _veh = _x;
								if (typeName _x == typeName []) then { _veh = _x#0 };
								
								if !(isClass (configFile >> "CfgVehicles" >> _veh)) then {
									["WARNING", format["Invalid vehicle class: %1", _veh]] call zmm_fnc_logMsg;
									_veh = "";
								};
								_vehArr set [_forEachIndex, _veh];
							} forEach (_vehUtil + _vehMed + _vehTank);

							_vehArr = _vehArr - [""];

							for "_i" from 1 to (missionNamespace getVariable ["ZZM_ObjectiveCount", 1]) do {
								private _vehClass = selectRandom _vehArr;
								private _vehPos = [0,0,0];

								if (count _roadPos == 0) then {
									if (count _locations > 0) then {
										_vehPos = selectRandom _locations;
										_locations deleteAt (_locations find _vehPos);
									} else {
										_vehPos = _centre findEmptyPosition [50, 150, _vehClass];
									};
								} else {
									_vehPos = selectRandom _roadPos;
									_roadPos deleteAt (_roadPos find _vehPos);
								};

								if (([missionNamespace getVariable ["ZZM_ObjectiveCount", 1]] in [[1]] && !([_targetPos] in [[_centre]]) && !([_targetPos] in [[[0,0,0]]])) || count _vehPos == 0) then { _vehPos = _targetPos };
								
								["DEBUG", format["destroy_vehicle (%1) - Spawning %2 at %3", _zoneID, _vehClass, _vehPos]] call zmm_fnc_logMsg;

								private _vehObj = (([_vehPos, 0, _vehClass, _enemySide] call BIS_fnc_spawnVehicle) select 0);
								private _randAnim = [];
								{ 
									_configName = configName _x; 
									_displayName = getText (_x >> "displayName"); 
									if (_displayName != "" && {getNumber (_x >> "scope") > 1 || !isNumber (_x >> "scope")}) then { 
										_randAnim pushBack _configName;
										_randAnim pushBack random 1; 
									}; 
								} forEach (configProperties [configFile >> "cfgVehicles" >> (typeOf _vehObj) >> "animationSources", "isClass _x", true]);
								[_vehObj, "", _randAnim] call bis_fnc_initVehicle;
								
								_vehObj allowDamage false;
								_vehObj spawn {
									{ _x hideObjectGlobal true } forEach (nearestTerrainObjects [getPos _this, ["TREE", "SMALL TREE", "BUSH", "BUILDING", "HOUSE", "FOREST BORDER", "FOREST TRIANGLE", "FOREST SQUARE", "CHURCH", "CHAPEL", "CROSS", "BUNKER", "FORTRESS", "FOUNTAIN", "VIEW-TOWER", "LIGHTHOUSE", "QUAY", "FUELSTATION", "HOSPITAL", "FENCE", "WALL", "HIDE", "BUSSTOP", "FOREST", "TRANSMITTER", "STACK", "RUIN", "TOURISM", "WATERTOWER", "ROCK", "ROCKS", "POWERSOLAR", "POWERWAVE", "POWERWIND", "SHIPWRECK"], 5]);
									sleep 5;
									_this lock true;
									_this allowDamage true;
								};
								
								if (alive _vehObj) then {
									_vehNo = _vehNo + 1;		
									_vehObj setVariable [ "var_Number", _vehNo, true ];
									_vehObj setVariable [ "var_zoneID", _zoneID, true ];

									if (isOnRoad _vehObj) then { 
										[_vehObj,[(getDir (roadAt _vehObj)),(((_vehObj) call BIS_fnc_getPitchBank) select 0),(((_vehObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation; 
										_nul = [driver _vehObj, format["MKR_%1_MIN", _zoneID], "SHOWMARKER"] spawn zmm_fnc_aiUPS;
									} else {
										[_vehObj,[(random 360),(((_vehObj) call BIS_fnc_getPitchBank) select 0),(((_vehObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
										if (random 100 < 25) then { _nul = [driver _vehObj, format["MKR_%1_MIN", _zoneID], "SHOWMARKER"] spawn zmm_fnc_aiUPS };
									};
									
									_vehText = selectRandom [
										"Lift Hook",
										"Reinforced Wheel",
										"Armour Plate",
										"Battery Cell",
										"Tow Hook",
										"Spare Track",
										"Sloped Vent",
										"Fender Flap",
										"Rear Muffler",
										"Main Aerial",
										"Left Headlight",
										"Rear Door",
										"Oil Sample",
										"Fuel Sample",
										"Radio Array",
										"Muzzle Case",
										"Steel Bolts"
									];

									{ _x addCuratorEditableObjects [[_vehObj], true] } forEach allCurators;

									removeFromRemainsCollector [_vehObj];
									
									missionNamespace setVariable [format["ZMM_%1_OBJ_%2", _zoneID, _vehNo], _vehObj];

									_vehActivation pushBack format["(missionNamespace getVariable ['ZMM_%1_OBJ_%2_DEAD', false])", _zoneID, _vehNo];
									
									_childTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_childTrigger setTriggerStatements [  format["!alive (missionNamespace getVariable ['ZMM_%1_OBJ_%2', objNull])", _zoneID, _vehNo],
										format["['ZMM_%1_SUB_%2', [missionNamespace getVariable ['ZMM_%1_OBJ_%2', objNull], true]] spawn BIS_fnc_taskSetDestination;", _zoneID, _vehNo],
										"" ];
									
									[_vehObj, 
										format["<t color='#00FF80'>Remove %1 from %2</t>", _vehText, getText (configFile >> "CfgVehicles" >> _vehClass >> "displayName")], 
										"\a3\missions_f_oldman\data\img\holdactions\holdAction_box_ca.paa", 
										"\a3\missions_f_oldman\data\img\holdactions\holdAction_box_ca.paa", 
										"!alive _target && _this distance2d _target < 10", 
										"!alive _target && _caller distance2d _target < 10", 
										{}, 
										{}, 
										{
											private _vehNo = ( _target getVariable ["var_Number", 0]);
											private _zoneID = ( _target getVariable ["var_zoneID", 0]);
											missionNamespace setVariable [ format["ZMM_%1_OBJ_%2_DEAD", _zoneID, _vehNo], true, true];
											[_target, _actionID] remoteExecCall ["BIS_fnc_holdActionRemove", 0, true];			
											[format["ZMM_%1_SUB_%2", _zoneID, _vehNo], 'Succeeded', true] remoteExec ["BIS_fnc_taskSetState"];
										}, 
										{}, 
										[], 
										2, 
										10 
									] remoteExec ["bis_fnc_holdActionAdd", 0, true];
													
									private _childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _vehNo], format['ZMM_%1_TSK', _zoneID]], true, [format["Destroy the vehicle somewhere within the area and then approach it. Interact with the destroyed vehicle collect the <font color='#00FFFF'>%3</font> from it.<br/><br/>Target Vehicle: <font color='#00FFFF'>%1</font><br/><br/><img width='300' image='%2'/>", getText (configFile >> "CfgVehicles" >> _vehClass >> "displayName"), getText (configFile >> "CfgVehicles" >> _vehClass >> "editorPreview"), _vehText], format["Vehicle #%1", _vehNo], format["MKR_%1_MIN", _zoneID]], nil, "AUTOASSIGNED", 1, false, true, "target"] call BIS_fnc_setTask;
								} else { deleteVehicle _vehObj };
							};

							_objTrigger = (([(AGLToASL (_targetPos)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [ 	(_vehActivation joinString " && "),
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];


							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[_missionDesc, count _vehActivation, if (count _vehActivation > 1) then {"Vehicles"} else {"Vehicle"}, _locName], ["Destroy"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "destroy"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("capture_vehicle_sqf")) then {
						capture_vehicle_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _locations = missionNamespace getVariable [format["ZMM_%1_FlatLocations", _zoneID], []];
							private _vehUtil = missionNamespace getVariable[format["ZMM_%1Veh_Util",_enemySide],[""]];
							private _vehMed = missionNamespace getVariable[format["ZMM_%1Veh_Medium",_enemySide],[""]];
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _radius = ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0) max 150; 

							private _missionDesc = selectRandom [
									"Commandeer <font color='#00FFFF'>%1 %2</font> that has been abandoned in %3.",
									"An enemy crews have dismounted from <font color='#00FFFF'>%1 %2</font> within %3, move in and secure them.",
									"Capture <font color='#00FFFF'>%1 %2</font> somewhere in %3.",
									"Steal <font color='#00FFFF'>%1 %2</font> parked somewhere within %3.",
									"The crew of <font color='#00FFFF'>%1 %2</font> ejected and fled the area, locate them somewhere in %3.",
									"A <font color='#00FFFF'>%1 %2</font> was abandoned by its crew within %3. Find and capture them."
								];
								
							private _vehNo = 0;
							private _vehArr =  [];
							private _roadPos = (_centre nearRoads _radius) apply { getPos _x };
							private _vehActivation = [];
							private _vehFailure = [];

							{
								private _veh = _x;
								if (typeName _x == typeName []) then { _veh = _x#0 };
								
								if !(isClass (configFile >> "CfgVehicles" >> _veh)) then {
									["WARNING", format["Invalid vehicle class: %1", _veh]] call zmm_fnc_logMsg;
									_veh = "";
								};
								_vehArr set [_forEachIndex, _veh];
							} forEach (_vehUtil + _vehMed);

							_vehArr = _vehArr - [""];

							for "_i" from 1 to (missionNamespace getVariable ["ZZM_ObjectiveCount", 2]) do {
								private _vehClass = selectRandom _vehArr;
								private _vehPos = [0,0,0];

								if (count _roadPos == 0) then {
									if (count _locations > 0) then {
										_vehPos = selectRandom _locations;
										_locations deleteAt (_locations find _vehPos);
									} else {
										_vehPos = _centre findEmptyPosition [50, 150, _vehClass];
									};
								} else {
									_vehPos = selectRandom _roadPos;
									_roadPos deleteAt (_roadPos find _vehPos);
								};

								if (([missionNamespace getVariable ["ZZM_ObjectiveCount", 1]] in [[1]] && !([_targetPos] in [[_centre]]) && !([_targetPos] in [[[0,0,0]]])) || count _vehPos == 0) then { _vehPos = _targetPos };
								
								["DEBUG", format["capture_vehicle (%1) - Spawning %2 at %3", _zoneID, _vehClass, _vehPos]] call zmm_fnc_logMsg;

								private _vehObj = (([ATLtoASL (_vehPos), (_vehClass), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								private _randAnim = [];
								{ 
									_configName = configName _x; 
									_displayName = getText (_x >> "displayName"); 
									if (_displayName != "" && {getNumber (_x >> "scope") > 1 || !isNumber (_x >> "scope")}) then { 
										_randAnim pushBack _configName;
										_randAnim pushBack random 1; 
									}; 
								} forEach (configProperties [configFile >> "cfgVehicles" >> (typeOf _vehObj) >> "animationSources", "isClass _x", true]);
								[_vehObj, "", _randAnim] call bis_fnc_initVehicle;
								
								_vehObj allowDamage false;
								_vehObj spawn {
									{ _x hideObjectGlobal true } forEach (nearestTerrainObjects [getPos _this, ["TREE", "SMALL TREE", "BUSH", "BUILDING", "HOUSE", "FOREST BORDER", "FOREST TRIANGLE", "FOREST SQUARE", "CHURCH", "CHAPEL", "CROSS", "BUNKER", "FORTRESS", "FOUNTAIN", "VIEW-TOWER", "LIGHTHOUSE", "QUAY", "FUELSTATION", "HOSPITAL", "FENCE", "WALL", "HIDE", "BUSSTOP", "FOREST", "TRANSMITTER", "STACK", "RUIN", "TOURISM", "WATERTOWER", "ROCK", "ROCKS", "POWERSOLAR", "POWERWAVE", "POWERWIND", "SHIPWRECK"], 5]);
									sleep 5;
									_this lock true;
									_this allowDamage true;
									_this setFuel random 0.4;
									_this setVehicleAmmo random 0.6;
								};
								
								if (alive _vehObj) then {
									_vehNo = _vehNo + 1;		

									missionNamespace setVariable [format["ZMM_%1_OBJ_%2", _zoneID, _vehNo], _vehObj];
									
									if (isOnRoad _vehObj) then { [_vehObj,[(getDir (roadAt _vehObj)),(((_vehObj) call BIS_fnc_getPitchBank) select 0),(((_vehObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation } else { [_vehObj,[(random 360),(((_vehObj) call BIS_fnc_getPitchBank) select 0),(((_vehObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation };

									[_vehObj,  
										format["<t color='#72E500'>Unlock %1</t>", getText (configFile >> "CfgVehicles" >> _vehClass >> "displayName")],  
										"\a3\ui_f\data\IGUI\Cfg\holdactions\holdAction_Search_ca.paa",  
										"\a3\ui_f\data\IGUI\Cfg\holdactions\holdAction_Search_ca.paa",  
										"_this distance2d _target < 4 && locked _target >= 1",  
										"_caller distance2d _target < 4 && locked _target >= 1",  
										{},  
										{},  
										{
											[_target, false] remoteExec ["lock",0,true];
											[ _target, _actionID ] remoteExec ["BIS_fnc_holdActionRemove",0,true];
										},   
										{},   
										[],   
										1,   
										10] remoteExec ["bis_fnc_holdActionAdd", 0, true];
										
									_vehActivation pushBack format["(triggerActivated ZMM_%1_TRIGGER_%2 || !alive ZMM_%1_OBJ_%2)", _zoneID, _vehNo];
									_vehFailure pushBack format["(!alive ZMM_%1_OBJ_%2)", _zoneID, _vehNo];
									
									_vehSucceed = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_vehSucceed setTriggerActivation ["VEHICLE", "NOT PRESENT", false];
									_vehSucceed setTriggerArea [_radius * 2, _radius * 2, 0, true];
									_vehSucceed triggerAttachVehicle [_vehObj];
									_vehSucceed setTriggerStatements [ format["this && alive ZMM_%1_OBJ_%2", _zoneID, _vehNo],
										format["['ZMM_%1_SUB_%2', 'Succeeded', true] spawn BIS_fnc_taskSetState;", _zoneID, _vehNo],
										"" ];
										
									missionNamespace setVariable [format["ZMM_%1_TRIGGER_%2", _zoneID, _vehNo], _vehSucceed];
										
									private _vehFail = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_vehFail setTriggerStatements [ format["!alive ZMM_%1_OBJ_%2", _zoneID, _vehNo], 
										format["['ZMM_%1_SUB_%2', 'Failed', true] spawn BIS_fnc_taskSetState;", _zoneID, _vehNo],
										"" ];

									{ _x addCuratorEditableObjects [[_vehObj], true] } forEach allCurators;
									
									private _childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _vehNo], format['ZMM_%1_TSK', _zoneID]], true, [format["Capture the empty vehicle found somewhere within the area. Interact with the vehicle to unlock it.<br/><br/>Target Vehicle: <font color='#00FFFF'>%1</font><br/><br/><img width='300' image='%2'/>", getText (configFile >> "CfgVehicles" >> _vehClass >> "displayName"), getText (configFile >> "CfgVehicles" >> _vehClass >> "editorPreview")], format["Vehicle #%1", _vehNo], format["MKR_%1_LOC", _zoneID]], nil, "AUTOASSIGNED", 1, false, true, "target"] call BIS_fnc_setTask;
								} else { deleteVehicle _vehObj };
							};


							_objTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [ 	(_vehActivation joinString " && "), 
								format["if (%2) then { ['ZMM_%1_TSK', 'Failed', true] spawn BIS_fnc_taskSetState; } else { ['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; }; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor 'ColorGrey' } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID, (_vehFailure joinString " || ")],
								"" ];


							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[_missionDesc, count _vehActivation, if (count _vehActivation > 1) then {"Vehicles"} else {"Vehicle"}, _locName], ["Steal"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "truck"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("rescue_ambush_sqf")) then {
						rescue_ambush_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];

							private _missionDesc = [
									"An allied team attempted to infiltrate %1 but were ambushed when attempting to escape in an a %3. <font color='#00FFFF'>%2 Soldiers</font> have been left wounded in critical condition, secure the area and evacuate the casualties.",
									"Friendly units have been ambushed near %1, <font color='#00FFFF'>%2 Soldiers</font> attempted to flee in a %3 and require immediate rescue. Locate and extract them.",
									"Find and rescue <font color='#00FFFF'>%2 Soldiers</font> wounded when their vehicle, a %3 hit an IED somewhere within %1.",
									"An enemy ambush at %1 has left <font color='#00FFFF'>%2 Soldiers</font> trying to recover a captured %3 wounded and requiring immediate evacuation. Locate the ambush site and save the Soldiers.",
									"A %3 captured from the enemy has hit a mine when passing through %1, at least <font color='#00FFFF'>%2 Soldiers</font> are reported to be injured. Locate them and extract them from the area.",
									"Enemy forces within %1 attacked a convoy escorting a captured %3. <font color='#00FFFF'>%2 Soldiers</font> are believed MIA, likely requiring immediate evacuation. Locate the Soldiers and rescue them."
								];	

							if ([_centre] in [[_targetPos]] || [_targetPos] in [[[0,0,0]]]) then { _targetPos = [_centre, 25, 200, 5, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0] };
							if (isNil "_targetPos") then { _targetPos = _centre };

							private _targetPos = _targetPos findEmptyPosition [1, 100, "Land_Wreck_Ural_F"];
								

							private _wreck = objNull;
							private _wreckList = (missionNamespace getVariable [format["ZMM_%1Veh_Light", _enemySide], []]) + (missionNamespace getVariable [format["ZMM_%1Veh_Medium", _enemySide], []]) + (missionNamespace getVariable [format["ZMM_%1Veh_Heavy", _enemySide], []]);

							if (count _wreckList > 0) then {
								_wreckType = selectRandom _wreckList;
								
								if (typeName _wreckType == typeName []) then { _wreckType = _wreckType#0 };
								
								_wreck = (([ATLtoASL ([[[(_targetPos), 5]], []] call BIS_fnc_randomPos), (_wreckType), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								[_wreck,[(random 360),(((_wreck) call BIS_fnc_getPitchBank) select 0),(((_wreck) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
								_wreck lock true;
								_wreck setVehicleAmmo 0;
								_wreck allowDamage false;	
								{ _wreck setObjectTextureGlobal [_forEachIndex, "a3\structures_f\wrecks\data\plane_transport_01_body_co.paa"] } forEach (getObjectTextures _wreck);	
								removeFromRemainsCollector [_wreck];
								
								_targetPos = getPos _wreck;
							} else {
								_wreck = (([ATLtoASL (_targetPos), (selectRandom ["Land_Wreck_Ural_F", "Land_Wreck_UAZ_F", "Land_Wreck_HMMWV_F"]), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							};

							_wreck setVectorUp surfaceNormal position _wreck;

							private _smoke = (([ATLtoASL ((position _wreck) vectorAdd [0,0,-3]), ("test_EmptyObjectForFireBig"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							private _crater = (([AGLtoASL (_targetPos), ("Crater"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_crater setPos ((getPos _crater) vectorAdd [0,0,0.02]);


							private _relPos = [ _targetPos, random 50, random 360 ] call BIS_fnc_relPos;

							private _hvtGroup = [[0,0,0], civilian, 0] call BIS_fnc_spawnGroup;
							private _hvtActivation = [];
							private _hvtFailure = [];
							private _hvtNum = 0;

							for "_i" from 1 to (missionNamespace getVariable ["ZZM_ObjectiveCount", 3]) do {
								_hvtNum = _hvtNum + 1;
									
								private _evacMan = (([([[[(_targetPos getPos [5 + random 25, random 360]), 3]], []] call BIS_fnc_randomPos), 0, ("C_man_w_worker_F"), (_hvtGroup)] call BIS_fnc_spawnVehicle) select 0);	
								_evacMan setCaptive true;
								_evacMan disableAI "MOVE";
								[_evacMan,[(random 360),(((_evacMan) call BIS_fnc_getPitchBank) select 0),(((_evacMan) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
								
								_evacMan addEventHandler ["killed",{
									private _killer = if (isNull (_this#2)) then { (_this#0) getVariable ["ace_medical_lastDamageSource", (_this#1)] } else { (_this#2) };
									if (isPlayer _killer) then { format["%1 (%2) killed %3",name _killer,groupId group _killer,name (_this select 0)] remoteExec ["systemChat",0] };
								}];
								
								{ _x addCuratorEditableObjects [[_evacMan], true] } forEach allCurators;
								
								_evacMan spawn {
									sleep 5;
									_this forceAddUniform (uniform selectRandom allPlayers);
									_this addVest (vest selectRandom allPlayers);
									_this addHeadgear (headgear selectRandom allPlayers);
									removeFromRemainsCollector [_this];
									
									private _blood = (([([0,0,0]), (selectRandom ["BloodPool_01_Large_New_F","BloodPool_01_Medium_New_F","BloodSplatter_01_Large_New_F","BloodSplatter_01_Medium_New_F","BloodSplatter_01_Small_New_F"]), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_blood setPos getPos _this;
									_blood setVectorUp surfaceNormal position _blood;
									_blood setPos ((getPos _blood) vectorAdd [0,0,0.02]);
									
									if (isClass(configFile >> "CfgPatches" >> "ace_main")) then { [_this, true] call ace_medical_fnc_setUnconscious } else { _this setUnconscious true };
								};

								missionNamespace setVariable [format["ZMM_%1_HVT_%2", _zoneID, _i], _evacMan];

								if !(isClass(configFile >> "CfgPatches" >> "ace_main")) then {
									_evacMan setVariable ["FAR_var_isStable", true, true];
									
									[_evacMan, 
										format["<t color='#00FF80'>Revive %1</t>", name _evacMan], 
										"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_revive_ca.paa", 
										"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_revive_ca.paa", 
										"lifeState _target == 'INCAPACITATED' && _this distance2d _target < 3",   
										"lifeState _target == 'INCAPACITATED' && _caller distance2d _target < 3",   
										{ _caller playAction "medic" },
										{}, 
										{
											[_target, _actionID] remoteExecCall ["BIS_fnc_holdActionRemove", 0, true];			
											[_target] join group _caller;
											sleep 2;
											[_target, false] remoteExecCall ["setUnconscious", 0, true]; 
											[_target, "MOVE"] remoteExecCall ["enableAI", 0, true];
											[_target, false] remoteExec ["setCaptive", 0, true];
										}, 
										{_caller switchMove ""},
										[], 
										5, 
										10 
									] remoteExec ["bis_fnc_holdActionAdd", 0, true];
								};

								private _childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _i], format['ZMM_%1_TSK', _zoneID]], true, [format["Locate and stabilize <font color='#00FFFF'>%1</font>, then extract them from the area.", name _evacMan], format["Rescue Soldier #%1", _i], format["MKR_%1_OBJ", _zoneID]], objNull, "AUTOASSIGNED", 1, false, true, format["move%1", _i]] call BIS_fnc_setTask;
								private _childTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_childTrigger setTriggerStatements [  format["(alive ZMM_%1_HVT_%2 && ZMM_%1_HVT_%2 distance2D %3 > 400)", _zoneID, _i, _centre],
																format["['ZMM_%1_SUB_%2', 'Succeeded', true] spawn BIS_fnc_taskSetState;", _zoneID, _i],
																"" ];
								
								private _hvtTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_hvtTrigger setTriggerStatements [ 	format["!alive ZMM_%1_HVT_%2", _zoneID, _i], 
																format["['ZMM_%1_SUB_%2', 'Failed', true] spawn BIS_fnc_taskSetState;", _zoneID, _i],
																"" ];
																
								_hvtActivation pushBack format["((alive ZMM_%1_HVT_%2 && ZMM_%1_HVT_%2 distance2D %3 > 400) || !alive ZMM_%1_HVT_%2)", _zoneID, _i, _centre];
								_hvtFailure pushBack format["(!alive ZMM_%1_HVT_%2)", _zoneID, _i];
							};


							private _objTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [ 	(_hvtActivation joinString " && "), 
																format["if (%2) then { ['ZMM_%1_TSK', 'Failed', true] spawn BIS_fnc_taskSetState; { _x setMarkerColor 'ColorGrey' } forEach ['MKR_%1_LOC','MKR_%1_MIN'] } else { ['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN'] }; missionNamespace setVariable ['ZMM_DONE', true, true];", _zoneID, (_hvtFailure joinString " || ")],
																"" ];

							private _missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[selectRandom _missionDesc, _locName, round _hvtNum], ["Rescue"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "heal"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("rescue_transport_sqf")) then {
						rescue_transport_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];

							private _missionDesc = selectRandom [
									"A group of %3 have been captured by enemy forces near %1 and are being transported to a prison camp. Locate the unarmed transport, disable the vehicle and free the <font color='#00FFFF'>%2 %3</font>.",
									"An unarmed transport carrying <font color='#00FFFF'>%2 %3</font> captured by enemy forces will be passing through %1 shortly. Ambush the vehicle, disable it and free the %3 from the vehicle.",
									"A transport carrying captive %1 has been located near %1. Disable the vehicle and free the <font color='#00FFFF'>%2 %3</font> aboard.",
									"Track down and free <font color='#00FFFF'>%2 %3</font> that are being transported near %1.",
									"Enemy forces have captured and are trying to transport <font color='#00FFFF'>%2 %3</font> through %1. Locate the truck and free the %3 from captivity.",
									"A number of %3 have been rounded up by enemy forces somewhere in %1. Locate the truck transporting them and free <font color='#00FFFF'>%2 %3</font>."
								];	

							private _prisonerType = selectRandom ['Civilians', 'POWs', 'Prisoners', 'Dissidents', 'Rebels', 'Soldiers', 'Scientists', 'Workers'];
								
							if ([_centre] in [[_targetPos]] || [_targetPos] in [[[0,0,0]]]) then { _targetPos = [_centre, 25, 200, 5, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0] };
							if (isNil "_targetPos") then { _targetPos = _centre };

							private _targetPos = _targetPos findEmptyPosition [1, 100, "C_Truck_02_covered_F"];
								

							private _truckType = selectRandom ["C_Truck_02_covered_F", "C_Truck_02_transport_F"];
							private _truck = (([ATLtoASL (_targetPos), (_truckType), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);

							missionNamespace setVariable [format["ZMM_%1_VEH", _zoneID], _truck, true];


							switch _truckType do {
								case "C_Truck_02_covered_F": { [_truck, ["BlueBlue", 0.25, "BlueOlive", 0.25, "OrangeOlive", 0.25]] call BIS_fnc_initVehicle };
								case "C_Truck_02_transport_F": { [_truck, ["Blue", 0.5]] call BIS_fnc_initVehicle };
							};


							private _enemyGrp = [[0,0,0], _enemySide, 0] call BIS_fnc_spawnGroup;
							private _driver = (([([0,0,0]), 0, (selectRandom (missionNamespace getVariable format["ZMM_%1Man", _enemySide])), (_enemyGrp)] call BIS_fnc_spawnVehicle) select 0);
							[_driver] joinSilent _enemyGrp; 
							_driver moveInDriver _truck;
							[group _driver, getPos _driver, 50] call bis_fnc_taskPatrol;

							_truck lockDriver true;
							_truck lock true;
							_truck setVariable ["var_zoneID", _zoneID, true];

							[_truck,  
								format["<t color='#72E500'>Unlock %1</t>", getText (configFile >> "CfgVehicles" >> _truckType >> "displayName")],  
								"\a3\ui_f\data\IGUI\Cfg\holdactions\holdAction_unbind_ca.paa",  
								"\a3\ui_f\data\IGUI\Cfg\holdactions\holdAction_unbind_ca.paa",  
								"_this distance2d _target < 4 && locked _target >= 1",  
								"_caller distance2d _target < 4 && locked _target >= 1",  
								{},  
								{},  
								{
									[ _target, _actionID ] remoteExec ["BIS_fnc_holdActionRemove", 0, true];
									private _zoneID = _target getVariable ["var_zoneID", 0];
									missionNamespace setVariable [format["ZMM_%1_UNLOCK", _zoneID], true, true];
									[_target, {
										{
											unassignVehicle _x;
											_x action ['EJECT', (vehicle _x)];
											_x setSpeedMode "FULL";
											_x setDestination [_x getPos [500, random 360], "LEADER PLANNED", true];
											_x spawn { sleep (120 + random 120); deleteVehicle _this; };
											sleep 1 + random 2;
										} forEach ((crew _this) select { alive _x })}
									] remoteExec ["bis_fnc_spawn", 0, true];
								},   
								{},   
								[],   
								3,   
								10] remoteExec ["bis_fnc_holdActionAdd", 0, true];


							{ _x addCuratorEditableObjects [[_truck], true] } forEach allCurators;


							private _prisMax = getNumber (configFile >> "CfgVehicles" >> _truckType >> "transportSoldier");

							for "_i" from 1 to _prisMax do {
								private _tempMan = (([([[[([0,0,0]), 150]], []] call BIS_fnc_randomPos), 0, ("C_man_w_worker_F"), (civilian)] call BIS_fnc_spawnVehicle) select 0);
								(group _tempMan) allowFleeing 0;
								(group _tempMan) setCombatMode 'BLUE';
								_tempMan setskill ['courage',1];
								_tempMan disableAI 'FSM'; 
								_tempMan disableAI 'TARGET'; 
								_tempMan disableAI 'AUTOTARGET'; 
								_tempMan disableAI 'AUTOCOMBAT';
								
								_tempMan setVariable ["BIS_fnc_animalBehaviour_disable", true];
								_tempMan assignAsCargo _truck;
								_tempMan moveInCargo _truck;
								
								[] params [["_newU",""],["_newH",""],["_newG",""],["_newV",""]];
								
								switch (_prisonerType) do {
									case "Soldiers": { 
										_newU = selectRandom ["U_I_G_Story_Protagonist_F","U_B_CombatUniform_mcam_tshirt","U_B_CombatUniform_mcam"];
										_newH = selectRandom ["H_Booniehat_khk","H_Booniehat_mcamo","H_HeadBandage_stained_F","H_HeadBandage_bloody_F","H_Cap_tan_specops_US","H_Bandanna_mcamo","H_Bandanna_khk",""];
										_newG = selectRandom ["G_Bandanna_blk","","G_Bandanna_khk","","G_Bandanna_oli","",""];
									};
									case "Rebels": { 
										_newU = selectRandom ["U_BG_Guerrilla_6_1","U_BG_Guerilla1_2_F","U_BG_Guerilla1_1","U_BG_leader","U_I_C_Soldier_Para_3_F","U_I_C_Soldier_Para_5_F"]; 
										_newH = selectRandom ["H_Shemag_olive","H_HeadBandage_stained_F","H_ShemagOpen_tan","","H_HeadBandage_bloody_F","",""];
										_newV = selectRandom ["V_BandollierB_blk","","V_BandollierB_rgr","","V_BandollierB_oli",""];
									};
									case "Scientists": {
										_newU = "U_C_Scientist";
										_newH = selectRandom ["H_Cap_White_IDAP_F","H_Construction_basic_orange_F","H_Construction_basic_white_F","H_Construction_basic_red_F","H_Construction_basic_yellow_F","H_HeadBandage_stained_F","H_HeadBandage_bloody_F",""];
										_newG = selectRandom ["G_Respirator_white_F","G_Respirator_blue_F","G_Respirator_yellow_F","G_EyeProtectors_F",""];
									};
									case "Workers": { 
										_newU = "U_C_WorkerCoveralls";
										_newH = selectRandom ["H_Cap_White_IDAP_F","H_Construction_basic_orange_F","H_Construction_basic_white_F","H_Construction_basic_red_F","H_Construction_basic_yellow_F","H_HeadBandage_stained_F","H_HeadBandage_bloody_F",""];
										_newG = selectRandom ["G_Respirator_white_F","G_Respirator_blue_F","G_Respirator_yellow_F","G_EyeProtectors_F",""];
										_newV = selectRandom ["V_Safety_orange_F","V_Safety_blue_F","V_Safety_yellow_F",""];
									};
									default {
										_newU = selectRandom ["U_IG_Guerilla2_1","U_IG_Guerilla2_2","U_IG_Guerilla2_3","U_C_Poor_1","U_BG_Guerilla3_1","U_C_Mechanic_01_F","U_C_Man_casual_4_F","U_C_Man_casual_5_F","U_C_Man_casual_6_F"];
										_newH = selectRandom ["","","H_HeadBandage_stained_F","","","H_HeadBandage_bloody_F","",""];
									};
								};
								
								if (_newU != "") then { _tempMan forceAddUniform _newU } else { removeUniform _tempMan };
								if (_newH != "") then { _tempMan addHeadgear _newH } else { removeHeadgear _tempMan };
								if (_newG != "") then { _tempMan addGoggles _newG } else { removeGoggles _tempMan };
								if (_newV != "") then { _tempMan addVest _newV } else { removeVest _tempMan };
							};


							_failTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_failTrigger setTriggerStatements [ 	format["!alive ZMM_%1_VEH && locked ZMM_%1_VEH > 0", _zoneID], 
																format["['ZMM_%1_TSK', 'Failed', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor 'ColorGrey' } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];



							_objTrigger = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [ 	format["ZMM_%1_UNLOCK", _zoneID], 
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];
																

							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[_missionDesc, _locName, _prisMax, _prisonerType] + format["<br/><br/>Model: <font color='#FFA500'>%1</font><br/>Registration: <font color='#FFA500'>%2</font><br/><img width='350' image='%3'/>", getText (configFile >> "CfgVehicles" >> _truckType >> "displayName"), getPlateNumber _truck, getText (configFile >> "CfgVehicles" >> _truckType >> "editorPreview")], ["Rescue"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "truck"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("disarm_ied_sqf")) then {
						disarm_ied_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];

							private _missionDesc = selectRandom [
									"Locate and disarm or destroy <font color='#00FFFF'>%1 IEDs</font> that have been planted around %2. You will need a <font color='#00FFFF'>toolkit</font> to disarm the IEDs.",
									"Search %2 to locate and diffuse or destroy <font color='#00FFFF'>%1 IEDs</font> that have been placed there. You will need a <font color='#00FFFF'>toolkit</font> to disarm the IEDs.",
									"Find, disarm or destroy <font color='#00FFFF'>%1 IEDs</font> located at %2. You will need a <font color='#00FFFF'>toolkit</font> to disarm the IEDs.",
									"Search %2 diffuse or destroy <font color='#00FFFF'>%1 IEDs</font> placed by enemy forces. You will need a <font color='#00FFFF'>toolkit</font> to disarm the IEDs.",
									"<font color='#00FFFF'>%1 IEDs</font> have been placed within %2. Find, disarm or destroy all the explosives. You will need a <font color='#00FFFF'>toolkit</font> to disarm the IEDs."
								];

							_missionDesc = _missionDesc + "<br/><br/>The IEDs are wired to a motion sensor; walking or crawling slowly to an IED will stop it from detonating.<br/><br/>IEDs can either be disarmed by an engineer or disabled with an explosive.";
								
							private _bombMax = missionNamespace getVariable ["ZZM_ObjectiveCount", 3];
							private _bombLocs = [];

							{
								private _road = _x;
								if ({ _road distance2D _x < 100 } count _bombLocs == 0) then {
									_bombLocs pushBack (_road getPos [(boundingBoxReal _road#0#0) * 0.5, ((_road getDir ((roadsConnectedTo _road)#0)) + 90) + selectRandom [0,180]]); 
								};
							} forEach (_centre nearRoads 250);

							private _bombActivation = []; 


							if (count _bombLocs < _bombMax) then {
								for "_i" from 0 to (_bombMax) do {
									_bombLocs pushBack (_centre getPos [50 + random 50, random 360]);
								};
							};


							for "_i" from 1 to _bombMax do {
								if ([_bombLocs] in [[[]]]) exitWith {};

								private _bombPos = selectRandom _bombLocs;
								_bombLocs deleteAt (_bombLocs find _bombPos);
								
								private _isUrban = _bombPos distance2D nearestBuilding _bombPos < 100;
								
								private _bombType = "IEDUrbanSmall_Remote_Ammo";
								
								private _mineObj = (([(_bombPos) vectorAdd [0,0,0.1], 0, (_bombType), (_enemySide)] call BIS_fnc_spawnVehicle) select 0);
								[_mineObj,[(random 360),(((_mineObj) call BIS_fnc_getPitchBank) select 0),(((_mineObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
								private _tempObj = (([AGLtoASL (_bombPos), (selectRandom ["Land_Garbage_square3_F","Land_Garbage_square5_F","Land_Garbage_line_F"]), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_tempObj setVectorUp surfaceNormal getPos _tempObj;
								[_tempObj,[(random 360),(((_tempObj) call BIS_fnc_getPitchBank) select 0),(((_tempObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
								
								private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_OBJ_%2", _zoneID, _i]),(_mineObj getPos [random 25, random 360])] call BIS_fnc_stringToMarker;
								_mrkr setMarkerShape "ELLIPSE";
								_mrkr setMarkerBrush "SolidBorder";
								_mrkr setMarkerSize [25,25];
								_mrkr setMarkerAlpha 0.4;
								_mrkr setMarkerColor format["Color%1",_enemySide];
								
								missionNamespace setVariable [format["ZMM_%1_OBJ_%2", _zoneID, _i], _mineObj];
								
								private _bombTrigger = (([(AGLToASL (getPos _mineObj)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_bombTrigger setTriggerActivation ["ANYPLAYER", "PRESENT", false];
								_bombTrigger setTriggerArea [10, 10, 5, false];
								_bombTrigger setTriggerStatements [ format["alive ZMM_%1_OBJ_%2 && { stance _x != 'PRONE' && speed _x > 6 } count thisList > 0", _zoneID, _i], format["(([getPosASL thisTrigger, (selectRandom ['Bo_Mk82','Rocket_03_HE_F','M_Mo_82mm_AT_LG','Bo_GBU12_LGB','Bo_GBU12_LGB_MI10','HelicopterExploSmall']), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0); (([getPosASL thisTrigger, ('Crater'), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0); deleteMarker 'MKR_%1_OBJ_%2'; deleteVehicle ZMM_%1_OBJ_%2;", _zoneID, _i], "" ];
								
								private _childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _i], format['ZMM_%1_TSK', _zoneID]], true, [format["Locate the IED somewhere within the marked area.<br/><br/>Target Explosive: <font color='#00FFFF'>%1</font><br/><br/><img width='350' image='%2'/>", getText (configFile >> "CfgVehicles" >> "IEDUrbanSmall_F" >> "displayName"), getText (configFile >> "CfgVehicles" >> "IEDUrbanSmall_F" >> "editorPreview")], format["IED #%1", _i], format["MKR_%1_OBJ_%2", _zoneID, _i]], getMarkerPos _mrkr, "AUTOASSIGNED", 1, false, true, format["move%1", _i]] call BIS_fnc_setTask;
								private _childTrigger = (([(AGLToASL (getPos _mineObj)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_childTrigger setTriggerTimeout [1, 1, 1, true];
								_childTrigger setTriggerStatements [  format["!alive ZMM_%1_OBJ_%2", _zoneID, _i],
										format["if (getMarkerColor 'MKR_%1_OBJ_%2' == '') then { ['ZMM_%1_SUB_%2', 'Failed', true] spawn BIS_fnc_taskSetState; } else { ['ZMM_%1_SUB_%2', 'Succeeded', true] spawn BIS_fnc_taskSetState; deleteMarker 'MKR_%1_OBJ_%2'; };", _zoneID, _i],
									"" ];
								
								_bombActivation pushBack format["!alive ZMM_%1_OBJ_%2", _zoneID, _i];
								
								{ _x addCuratorEditableObjects [[_mineObj], true] } forEach allCurators;
							};


							for "_i" from 0 to 8 do {
								if ([_bombLocs] in [[[]]]) exitWith {};
								
								private _bombPos = selectRandom _bombLocs;
								_bombLocs deleteAt (_bombLocs find _bombPos);
								
								private _isUrban = _bombPos distance2D nearestBuilding _bombPos < 100;

								private _tempObj = (([AGLtoASL (_bombPos), (selectRandom ["Land_GarbagePallet_F","Land_GarbageWashingMachine_F","Land_JunkPile_F","Land_Garbage_square3_F", "Land_Garbage_square5_F", "Land_Garbage_line_F"]), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_tempObj setVectorUp surfaceNormal getPos _tempObj;
								
								[_tempObj,[(random 360),(((_tempObj) call BIS_fnc_getPitchBank) select 0),(((_tempObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
								
								if (random 1 > 0.7) then {
									private _mineObj = (([_bombPos vectorAdd [0,0,0.1], 0, "IEDUrbanSmall_Remote_Ammo", (_enemySide)] call BIS_fnc_spawnVehicle) select 0);
									[_mineObj,[(random 360),(((_mineObj) call BIS_fnc_getPitchBank) select 0),(((_mineObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
								
									private _bombTrigger = (([getPosASL _mineObj, ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_bombTrigger setTriggerActivation ["ANYPLAYER", "PRESENT", false];
									_bombTrigger setTriggerArea [10, 10, 5, false];
									_bombTrigger setTriggerStatements [ format["{ stance _x != 'PRONE' && speed _x > 6 } count thisList > 0", _zoneID, _i], format["if ({ thisTrigger distance2D _x < 1.5} count allMines > 0) then { (([getPosASL thisTrigger, (selectRandom ['Bo_Mk82','Rocket_03_HE_F','M_Mo_82mm_AT_LG','Bo_GBU12_LGB','Bo_GBU12_LGB_MI10','HelicopterExploSmall']), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0); (([getPosASL thisTrigger, ('Crater'), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0); deleteVehicle ZMM_%1_OBJ_%2; }", _zoneID, _i], "" ];
										
									{ _x addCuratorEditableObjects [[_mineObj], true] } forEach allCurators;
								};
							};


							_objTrigger = (([(([0,0,0])), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [  (_bombActivation joinString " && "), 
								format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
								"" ];


							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[_missionDesc, count _bombActivation, _locName], ["Disarm"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "mine"] call BIS_fnc_setTask;

							true
						};
					};
					
					if (isNil("disarm_bomb_sqf")) then {
						disarm_bomb_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _buildings = missionNamespace getVariable [format["ZMM_%1_Buildings", _zoneID], []];
							private _locations = missionNamespace getVariable [format["ZMM_%1_FlatLocations", _zoneID], []];
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];

							private _missionDesc = [
									"Locate and disarm <font color='#00FFFF'>%1 Explosives</font> that have been planted around %2. You will need a <font color='#00FFFF'>toolkit</font> to disarm the bombs.",
									"Search %2 to locate and diffuse <font color='#00FFFF'>%1 IEDs</font> that have been placed there. You will need a <font color='#00FFFF'>toolkit</font> to disarm the bombs.",
									"Find and disarm <font color='#00FFFF'>%1 Explosive Charges</font> located at %2. You will need a <font color='#00FFFF'>toolkit</font> to disarm the bombs.",
									"Search %2 diffuse <font color='#00FFFF'>%1 Charges</font> placed by enemy forces. You will need a <font color='#00FFFF'>toolkit</font> to disarm the bombs.",
									"<font color='#00FFFF'>%1 Demo Charges</font> have been placed within %2. Find and disarm all the explosives. You will need a <font color='#00FFFF'>toolkit</font> to disarm the bombs."
								];

							private _bombMax = missionNamespace getVariable ["ZZM_ObjectiveCount", 3];

							private _positions = [];
							{ _positions pushBack selectRandom (_x buildingPos -1) } forEach _buildings;


							if (count _positions < _bombMax) then {
								{ _positions pushBack _x } forEach _locations;
							};

							private _bombCount = 0;
							private _bombActivation = [];
							private _bombMarker = [];
							private _inBuild = true;
							private _radius = 20;


							if ([_positions] in [[[]]]) then {
								for "_i" from 0 to _bombMax do {
									_positions pushBack (_centre getPos [25 + random 50, random 360]);
								};
							};


							for "_i" from 1 to _bombMax do {
								if ([_positions] in [[[]]]) exitWith {};

								private _bombType = selectRandom ["SatchelCharge_Remote_Ammo_Scripted"];
								private _bombPos = selectRandom _positions;
								if (count _positions > _bombMax) then { _positions deleteAt (_positions find _bombPos) };

								if (count _bombPos > 0) then { 
									if (_bombPos#2 == 0) then {
										_bombPos = _bombPos findEmptyPosition [1, 25, "B_Soldier_F"];
										_inBuild = false;
										_radius = 10;
									};
									
									_bombCount = _bombCount + 1;
									private _bombObj = (([(_bombPos), 0, (_bombType), (_enemySide)] call BIS_fnc_spawnVehicle) select 0);
									[_bombObj,[(random 360),(((_bombObj) call BIS_fnc_getPitchBank) select 0),(((_bombObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
									
									if (alive _bombObj) then {
										private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_OBJ_%2", _zoneID, _i]),(_bombObj getPos [random _radius, random 360])] call BIS_fnc_stringToMarker;
										_mrkr setMarkerShape "ELLIPSE";
										_mrkr setMarkerBrush "SolidBorder";
										_mrkr setMarkerSize [_radius,_radius];
										_mrkr setMarkerAlpha 0.4;
										_mrkr setMarkerColor format["Color%1",_enemySide];
										_bombMarker pushBack _mrkr;
										
										private _sign = selectRandom ["RoadCone_F","Land_RoadCone_01_F"];
									
										for "_i" from 1 to 360 step 25 do {
											private _relPos = AGLToASL ((getMarkerPos _mrkr) getPos [_radius + 1,_i]);

												_obj = (([(_relPos), (_sign), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
												[_obj,[((_obj getDir (getMarkerPos _mrkr))),(((_obj) call BIS_fnc_getPitchBank) select 0),(((_obj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
										};
										
										missionNamespace setVariable [format["ZMM_%1_OBJ_%2", _zoneID, _i], _bombObj];
										
										private _childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _i], format['ZMM_%1_TSK', _zoneID]], true, [format["Locate the explosive somewhere within the marked area.<br/><br/>Target Object: <font color='#00FFFF'>%1</font><br/><br/><img width='350' image='%2'/>", getText (configFile >> "CfgMagazines" >> "SatchelCharge_Remote_Mag" >> "displayName"), getText (configFile >> "CfgMagazines" >> "SatchelCharge_Remote_Mag" >> "picture")], format["Explosive #%1", _i], format["MKR_%1_OBJ_%2", _zoneID, _i]], getMarkerPos _mrkr, "AUTOASSIGNED", 1, false, true, format["move%1", _i]] call BIS_fnc_setTask;
										private _childTrigger = (([(AGLToASL (getPos _bombObj)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_childTrigger setTriggerStatements [  format["!alive ZMM_%1_OBJ_%2", _zoneID, _i],
																	format["['ZMM_%1_SUB_%2', 'Succeeded', true] spawn BIS_fnc_taskSetState; deleteMarker 'MKR_%1_OBJ_%2'; deleteVehicle ZMM_%1_OBJ_%2;", _zoneID, _i],
																	"" ];
										
										_bombActivation pushBack format["!alive ZMM_%1_OBJ_%2", _zoneID, _i];
										
										{ _x addCuratorEditableObjects [[_bombObj], true] } forEach allCurators;
									};
								};
							};


							_objTrigger = (([(([0,0,0])), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [  (_bombActivation joinString " && "), 
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];


							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[selectRandom _missionDesc, _bombCount, _locName], ["Disarm"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "mine"] call BIS_fnc_setTask;

							true
						};
					};

					if (isNil("disarm_uxo_sqf")) then {
						disarm_uxo_sqf = {
							params [ ["_zoneID", 0], ["_targetPos", [0,0,0]] ];

							private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], _targetPos];
							private _enemySide = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
							private _locations = missionNamespace getVariable [format["ZMM_%1_FlatLocations", _zoneID], []];
							private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
							private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];

							private _missionDesc = [
									"Locate and disarm <font color='#00FFFF'>%1 UXOs</font> that have been planted around %2. You will need a <font color='#00FFFF'>toolkit</font> to disarm the UXOs.",
									"Search %2 to locate and diffuse <font color='#00FFFF'>%1 UXOs</font> that have been placed there. You will need a <font color='#00FFFF'>toolkit</font> to disarm the UXOs.",
									"Find and disarm <font color='#00FFFF'>%1 UXOs</font> located at %2. You will need a <font color='#00FFFF'>toolkit</font> to disarm the UXOs.",
									"Search %2 diffuse <font color='#00FFFF'>%1 UXOs</font> placed by enemy forces. You will need a <font color='#00FFFF'>toolkit</font> to disarm the UXOs.",
									"<font color='#00FFFF'>%1 UXOs</font> have been placed within %2. Find and disarm all the explosives. You will need a <font color='#00FFFF'>toolkit</font> to disarm the UXOs."
								];

							private _bombMax = missionNamespace getVariable ["ZZM_ObjectiveCount", 3];

							private _positions = _locations;
							private _bombCount = 0;
							private _bombActivation = [];
							private _bombAreas = [];
							private _radius = 20;

							if ([_positions] in [[[]]]) then {
								for "_i" from 0 to _bombMax do {
									_positions pushBack (_centre getPos [50 + random 100, random 360]);
								};
							};

							for "_i" from 1 to _bombMax do {
								if ([_positions] in [[[]]]) exitWith {};

								private _bombType = "BombCluster_01_UXO1_Ammo_F";
								private _bombPos = selectRandom _positions;
								
								_positions deleteAt (_positions find _bombPos);
								
								if (count _bombPos > 0) then { 	
									_bombPos set [2, 0.1];
									private _bombObj = (([(_bombPos) vectorAdd [0,0,0.1], 0, (_bombType), (_enemySide)] call BIS_fnc_spawnVehicle) select 0);
									_enemySide revealMine _bombObj;
									CIVILIAN revealMine _bombObj;
									_bombObj spawn { sleep 5; _this enableSimulationGlobal false; };
									
									if (alive _bombObj) then {
										private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_OBJ_%2", _zoneID, _i]),(_bombObj getPos [random _radius, random 360])] call BIS_fnc_stringToMarker;
										_mrkr setMarkerShape "ELLIPSE";
										_mrkr setMarkerBrush "SolidBorder";
										_mrkr setMarkerSize [_radius,_radius];
										_mrkr setMarkerAlpha 0.4;
										_mrkr setMarkerColor format["Color%1",_enemySide];
										
										private _sign = selectRandom ["RoadCone_F","Land_RoadCone_01_F","Land_Sign_Mines_F","Land_Sign_MinesTall_F","Land_Sign_MinesTall_English_F"];
										
										_bombAreas pushBack _mrkr;
										
										missionNamespace setVariable [format["ZMM_%1_OBJ_%2", _zoneID, _i], _bombObj, true];
										
										_objEnable = (([AGLtoASL (getPos _bombObj), ("EmptyDetector"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_objEnable setTriggerActivation ["ANYPLAYER", "PRESENT", false];
										_objEnable setTriggerArea [25, 25, 0, false];
										_objEnable setTriggerStatements [ "this", 
																format["if (alive ZMM_%1_OBJ_%2) then { ZMM_%1_OBJ_%2 enableSimulationGlobal true };", _zoneID, _i],
																"" ];
										
										private _childTask = [[format["ZMM_%1_SUB_%2", _zoneID, _i], format['ZMM_%1_TSK', _zoneID]], true, [format["Locate the UXO somewhere within the marked area.<br/><br/>Target Object: <font color='#00FFFF'>%1</font><br/><br/><img width='300' image='%2'/>", getText (configFile >> "CfgVehicles" >> "BombCluster_01_UXO1_F" >> "displayName"), getText (configFile >> "CfgVehicles" >> "BombCluster_01_UXO1_F" >> "editorPreview")], format["UXO #%1", _i], format["MKR_%1_OBJ_%2", _zoneID, _i]], getMarkerPos _mrkr, "AUTOASSIGNED", 1, false, true, format["move%1", _i]] call BIS_fnc_setTask;
										private _childTrigger = (([AGLtoASL (getPos _bombObj), ("EmptyDetector"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_childTrigger setTriggerStatements [  format["(!mineActive ZMM_%1_OBJ_%2 || !alive ZMM_%1_OBJ_%2 || 'empty.p3d' in (getModelInfo ZMM_%1_OBJ_%2))", _zoneID, _i],
																	format["['ZMM_%1_SUB_%2', 'Succeeded', true] spawn BIS_fnc_taskSetState; deleteMarker 'MKR_%1_OBJ_%2'; deleteVehicle ZMM_%1_OBJ_%2;", _zoneID, _i],
																	"" ];
										
										_bombActivation pushBack format["(!alive ZMM_%1_OBJ_%2 || 'empty.p3d' in (getModelInfo ZMM_%1_OBJ_%2))", _zoneID, _i];
										
										{ _x addCuratorEditableObjects [[_bombObj], true] } forEach allCurators;
										
										_bombCount = _bombCount + 1;
									};
								};
							};

							_objTrigger = (([[0,0,0], ("EmptyDetector"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_objTrigger setTriggerStatements [  (_bombActivation joinString " && "), 
																format["['ZMM_%1_TSK', 'Succeeded', true] spawn BIS_fnc_taskSetState; missionNamespace setVariable ['ZMM_DONE', true, true]; { _x setMarkerColor ('Color' + str(missionNamespace getVariable ['ZMM_playerSide',WEST])) } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
																"" ];

							_missionTask = [format["ZMM_%1_TSK", _zoneID], true, [format["<font color='#00FF80'>Mission (#ID%1)</font><br/>", _zoneID] + format[selectRandom _missionDesc, _bombCount, _locName], ["Disarm"] call zmm_fnc_nameGen, format["MKR_%1_LOC", _zoneID]], _centre, "AUTOASSIGNED", 1, false, true, "mine"] call BIS_fnc_setTask;

							true
						};
					};

					ZMM_tasks = [
						["Defence", "Defend Location", "Clear and hold a location from enemy forces", "\A3\ui_f\data\igui\cfg\simpleTasks\types\defend_ca.paa", "Anywhere", defend_location_sqf, [300, false, false, false]]
						,["Defence", "Defend Site", "Capture and hold an enemy side from responding forces", "\A3\ui_f\data\igui\cfg\simpleTasks\types\defend_ca.paa", "Anywhere", defend_site_sqf, [300, false, false, false]]
						,["Defence", "Defend Vehicle", "Hold a location and assist with repairing a civilian vehicle", "\A3\ui_f\data\igui\cfg\simpleTasks\types\defend_ca.paa", "Anywhere", defend_vehicle_sqf, [300, false, false, false]]
						,["Denial", "Destroy Cache", "Take out a number of enemy weapons caches", "\A3\ui_f\data\igui\cfg\simpleTasks\types\destroy_ca.paa", "Anywhere", destroy_cache_sqf]
						,["Denial", "Destroy Target", "One or more specific buildings must be destroyed", "\A3\ui_f\data\igui\cfg\simpleTasks\types\destroy_ca.paa", "Anywhere", destroy_target_sqf]
						,["Denial", "Eliminate Group", "Track down and eliminate a group of infantry", "\A3\ui_f\data\igui\cfg\simpleTasks\types\destroy_ca.paa", "Anywhere", kill_group_sqf]
						,["Intel", "Intel Transfer", "Transfer data from a Terminal or UAV", "\A3\ui_f\data\igui\cfg\simpleTasks\types\intel_ca.paa", "Anywhere", intel_transfer_sqf]
						,["Intel", "Intel Search", "Track down intelligence left behind by an operative", "\A3\ui_f\data\igui\cfg\simpleTasks\types\intel_ca.paa", "Anywhere", intel_garbage_sqf]
						,["Intel", "Intel Meeting", "Obtain key intel by talking to local informants", "\A3\ui_f\data\igui\cfg\simpleTasks\types\intel_ca.paa", "Anywhere", intel_talk_sqf]
						,["Recovery", "Collect Backpack", "Find and collect one or more special backpacks", "\A3\ui_f\data\igui\cfg\simpleTasks\types\search_ca.paa", "Anywhere", collect_backpack_sqf]
						,["Recovery", "Collect Container", "Obtain the special items located inside containers", "\A3\ui_f\data\igui\cfg\simpleTasks\types\search_ca.paa", "Anywhere", collect_container_sqf]
						,["Recovery", "Collect Items", "Hunt down specific items found around a location", "\A3\ui_f\data\igui\cfg\simpleTasks\types\search_ca.paa", "Anywhere", collect_items_sqf]
						,["Recovery", "Collect Drop", "Secure a drop due to land shortly within the area", "\A3\ui_f\data\igui\cfg\simpleTasks\types\search_ca.paa", "Anywhere", collect_paradrop_sqf]
						,["Recovery", "Collect Weapon", "Obtain one or more weapons located in the location", "\A3\ui_f\data\igui\cfg\simpleTasks\types\search_ca.paa", "Anywhere", collect_weapon_sqf]
						,["Recovery", "Collect Minefield", "Recover an object from an enemy minefield", "\A3\ui_f\data\igui\cfg\simpleTasks\types\search_ca.paa", "Anywhere", collect_minefield_sqf]
						,["Secure", "Capture Location", "Capture the location by securing flags within the location", "\A3\ui_f\data\igui\cfg\simpleTasks\types\attack_ca.paa", "Anywhere", capture_location_sqf]
						,["Secure", "Capture Object", "Mark the locations of key objects in the area", "\A3\ui_f\data\igui\cfg\simpleTasks\types\attack_ca.paa", "Anywhere", capture_object_sqf]
						,["Secure", "Clear Location", "Eliminate all enemy forces from the location", "\A3\ui_f\data\igui\cfg\simpleTasks\types\attack_ca.paa", "Anywhere", clear_location_sqf, [900]]
						,["Secure", "Clear Building", "Secure one or more buildings of significant value", "\A3\ui_f\data\igui\cfg\simpleTasks\types\attack_ca.paa", "Anywhere", clear_building_sqf]
						,["Secure", "Clear Uprising", "Track down HVTs that are directing attacks in the area", "\A3\ui_f\data\igui\cfg\simpleTasks\types\attack_ca.paa", "Anywhere", clear_uprising_sqf]
						,["Secure", "Kill Animals", "A number of animals must be eliminated", "\A3\ui_f\data\igui\cfg\simpleTasks\types\attack_ca.paa", "Anywhere", kill_animal_sqf]
						
						,["Denial", "Kill HVT", "Ensure a high value target is eliminated", "\A3\ui_f\data\igui\cfg\simpleTasks\types\destroy_ca.paa", "Building", kill_hvt_sqf]
						,["Rescue", "Prisoner Rescue", "Save a number of prisoners captured by enemy forces", "\A3\ui_f\data\igui\cfg\simpleTasks\types\help_ca.paa", "Building", rescue_prisoner_sqf]

						,["Denial", "Destroy Site", "A target of opportunity will be present at a nearby site", "\A3\ui_f\data\igui\cfg\simpleTasks\types\destroy_ca.paa", "Location", destroy_site_sqf]
						,["Denial", "Crash Site", "Destroy a crashed wreck and any of its lost cargo", "\A3\ui_f\data\igui\cfg\simpleTasks\types\destroy_ca.paa", "Location", destroy_crashsite_sqf]
						,["Denial", "Destroy Tower", "Disrupt enemy communications by destroying a tower", "\A3\ui_f\data\igui\cfg\simpleTasks\types\destroy_ca.paa", "Location", destroy_tower_sqf]
						,["Recovery", "Collect Crash Site", "Locate a crashed wreck and recover its lost cargo", "\A3\ui_f\data\igui\cfg\simpleTasks\types\search_ca.paa", "Location", collect_crashsite_sqf]
						,["Rescue", "Minefield Rescue", "Recover people from an enemy minefield", "\A3\ui_f\data\igui\cfg\simpleTasks\types\help_ca.paa", "Location", rescue_minefield_sqf]
						,["Intel", "Intel Site", "Obtain a key item or document from an enemy site", "\A3\ui_f\data\igui\cfg\simpleTasks\types\intel_ca.paa", "Location", intel_site_sqf]

						,["Denial", "Destroy Convoy", "Eliminate an enemy convoy of three vehicles", "\A3\ui_f\data\igui\cfg\simpleTasks\types\destroy_ca.paa", "Road", destroy_convoy_sqf]
						,["Denial", "Destroy Vehicle", "Locate and destroy a mechanised or armoured vehicle", "\A3\ui_f\data\igui\cfg\simpleTasks\types\destroy_ca.paa", "Road", destroy_vehicle_sqf]
						,["Recovery", "Capture Vehicle", "Locate and capture a motorised enemy asset", "\A3\ui_f\data\igui\cfg\simpleTasks\types\search_ca.paa", "Road", capture_vehicle_sqf]
						,["Rescue", "Ambush Rescue", "Secure a number of personnel from an enemy ambush", "\A3\ui_f\data\igui\cfg\simpleTasks\types\help_ca.paa", "Road", rescue_ambush_sqf]
						,["Rescue", "Transport Rescue", "Free a number of personnel from an enemy transport", "\A3\ui_f\data\igui\cfg\simpleTasks\types\help_ca.paa", "Road", rescue_transport_sqf]
						,["Disarm", "IED Clearing", "Secure and disarm a number of IEDs within the location", "\A3\ui_f\data\igui\cfg\simpleTasks\types\mine_ca.paa", "Road", disarm_ied_sqf]
						
						,["Disarm", "Bomb Squad", "Diffuse charges that have been rigged to go off in the area", "\A3\ui_f\data\igui\cfg\simpleTasks\types\mine_ca.paa", "Anywhere", disarm_bomb_sqf]
						,["Disarm", "UXO Search", "Secure and remove a number of UXOs from the location", "\A3\ui_f\data\igui\cfg\simpleTasks\types\mine_ca.paa", "Anywhere", disarm_uxo_sqf]
					];

					ZMM_Version = 4.35;
					if (_setupDebug) then {
						ZMM_Debug = isMultiplayer;
					} else {
						ZMM_Debug = !isMultiplayer;
					};

					"Group" setDynamicSimulationDistance 800;
					"Vehicle" setDynamicSimulationDistance 1000;

					switch (missionNamespace getVariable ["f_param_factionWest",_factionWEST#0]) do {
						case 0: {
							switch (worldName) do {
								case "Stratis";
								case "Malden";
								case "Altis": {
									ZMM_WESTFlag = ["Flag_NATO_F", "\A3\ui_f\data\map\markers\flags\nato_ca.paa"];
									ZMM_WESTMan = ["B_Soldier_A_F", "B_soldier_AAR_F", "B_support_AMG_F", "B_support_AMort_F", "B_soldier_AAA_F", "B_soldier_AAT_F", "B_soldier_AR_F", "B_soldier_exp_F", "B_Soldier_GL_F", "B_support_Mort_F", "B_HeavyGunner_F", "B_soldier_M_F", "B_soldier_mine_F", "B_soldier_AA_F", "B_soldier_AT_F", "B_officer_F", "B_soldier_repair_F", "B_Soldier_F", "B_soldier_LAT_F", "B_soldier_LAT2_F", "B_Soldier_lite_F", "B_Soldier_SL_F", "B_Sharpshooter_F", "B_Soldier_TL_F", "B_soldier_UAV_F", "B_soldier_UAV_06_medical_F", "B_soldier_UAV_06_F", "B_soldier_UGV_02_Demining_F", "B_soldier_UGV_02_Science_F", "B_Patrol_Soldier_A_F", "B_Patrol_Soldier_AR_F", "B_Patrol_Medic_F", "B_Patrol_Engineer_F", "B_Patrol_Soldier_MG_F", "B_Patrol_HeavyGunner_F", "B_Patrol_Soldier_M_F", "B_Patrol_Soldier_AT_F", "B_Patrol_Soldier_TL_F", "B_Patrol_Soldier_UAV_F", "B_medic_F", "B_engineer_F", "B_support_GMG_F", "B_support_MG_F", "B_Story_Protagonist_F", "B_Captain_Jay_F", "B_Story_Pilot_F", "B_Story_SF_Captain_F", "B_Captain_Pettka_F", "B_CTRG_soldier_engineer_exp_F", "B_CTRG_soldier_M_medic_F", "B_CTRG_soldier_GL_LAT_F", "B_CTRG_Sharphooter_F", "B_CTRG_soldier_AR_A_F", "B_CTRG_Soldier_arid_F", "B_CTRG_Soldier_2_arid_F", "B_CTRG_Soldier_3_arid_F"];
									ZMM_WESTGrp_Sentry = [configFile >> "CfgGroups" >> "West" >> "BLU_F" >> "Infantry" >> "BUS_InfSentry"];
									ZMM_WESTGrp_Team = [configFile >> "CfgGroups" >> "West" >> "BLU_F" >> "Infantry" >> "BUS_InfTeam"];
									ZMM_WESTGrp_Squad = [configFile >> "CfgGroups" >> "West" >> "BLU_F" >> "Infantry" >> "BUS_InfAssault"];
									ZMM_WESTVeh_Truck = ["B_Truck_01_transport_F","B_Truck_01_covered_F","B_Truck_01_medical_F"];
									ZMM_WESTVeh_Util = ["B_Truck_01_Repair_F","B_Truck_01_fuel_F","B_Truck_01_ammo_F"];
									ZMM_WESTVeh_Light = ["B_MRAP_01_F","B_MRAP_01_gmg_F","B_MRAP_01_hmg_F","B_LSV_01_AT_F","B_LSV_01_armed_F","B_LSV_01_unarmed_F","B_Quadbike_01_F","B_UGV_01_F","B_UGV_01_rcws_F"];
									ZMM_WESTVeh_Medium = [["B_APC_Wheeled_01_cannon_F","[_grpVeh, false, ['showBags',0.5,'showCamonetHull',0.5,'showCamonetCannon',0.5,'showCamonetTurret',0.5,'showSLATHull',0.5,'showSLATTurret',0.5]] call BIS_fnc_initVehicle;"], ["B_APC_Tracked_01_CRV_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetPlates1',0.5,'showCamonetPlates2',0.5,'showWheels',0.5,'showAmmobox',0.5,'showBags',0.5]] call BIS_fnc_initVehicle;"], ["B_APC_Tracked_01_rcws_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetPlates1',0.5,'showCamonetPlates2',0.5]] call BIS_fnc_initVehicle;"], ["B_AFV_Wheeled_01_cannon_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetCannon',0.5,'showCamonetTurret',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"], ["B_AFV_Wheeled_01_up_cannon_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetCannon',0.5,'showCamonetTurret',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];
									ZMM_WESTVeh_Heavy = [["B_MBT_01_cannon_F","[_grpVeh, false, ['showCamonetCannon',0.5,'showCamonetPlates1',0.5,'showCamonetPlates2',0.5,'showCamonetTurret',0.5,'showCamonetHull',0.5]] call BIS_fnc_initVehicle;"], ["B_MBT_01_TUSK_F","[_grpVeh, false, ['showCamonetCannon',0.5,'showCamonetPlates1',0.5,'showCamonetPlates2',0.5,'showCamonetTurret',0.5,'showCamonetHull',0.5,'showBags',0.5]] call BIS_fnc_initVehicle;"], ["B_APC_Tracked_01_AA_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetTurret',0.5,'showCamonetPlates1',0.5,'showCamonetPlates2',0.5]] call BIS_fnc_initVehicle;"]];
									ZMM_WESTVeh_Air = ["B_Heli_Transport_03_F","B_Heli_Transport_03_unarmed_F","B_Heli_Light_01_F","B_Heli_Transport_01_F","B_CTRG_Heli_Transport_01_sand_F"];
									ZMM_WESTVeh_CasH = ["B_Heli_Light_01_dynamicLoadout_F","B_Heli_Attack_01_dynamicLoadout_F","B_T_UAV_03_dynamicLoadout_F"];
									ZMM_WESTVeh_CasP = ["B_Plane_CAS_01_dynamicLoadout_F","B_Plane_Fighter_01_F","B_Plane_Fighter_01_Stealth_F","B_UAV_02_dynamicLoadout_F","B_UAV_05_F","B_T_VTOL_01_armed_F"];
									ZMM_WESTVeh_Convoy = ["B_MRAP_01_hmg_F","B_Truck_01_covered_F","B_APC_Wheeled_01_cannon_F"];
									ZMM_WESTVeh_Static = ["B_GMG_01_high_F","B_HMG_01_high_F","B_static_AA_F","B_static_AT_F"];
								};
								case "Tanoa": {
									ZMM_WESTFlag = ["Flag_NATO_F", "\A3\ui_f\data\map\markers\flags\nato_ca.paa"];
									ZMM_WESTMan = ["B_T_Soldier_AAR_F", "B_T_Soldier_A_F", "B_T_Support_AMG_F", "B_T_Support_AMort_F", "B_T_Soldier_AAA_F", "B_T_Soldier_AAT_F", "B_T_Soldier_AR_F", "B_T_Medic_F", "B_T_Crew_F", "B_T_Engineer_F", "B_T_Soldier_Exp_F", "B_T_Soldier_GL_F", "B_T_Support_GMG_F", "B_T_Support_MG_F", "B_T_Support_Mort_F", "B_T_Helipilot_F", "B_T_soldier_M_F", "B_T_soldier_mine_F", "B_T_Soldier_AA_F", "B_T_Soldier_AT_F", "B_T_Officer_F", "B_T_Soldier_Repair_F", "B_T_Soldier_F", "B_T_Soldier_LAT_F", "B_T_Soldier_LAT2_F", "B_T_Soldier_SL_F", "B_T_Soldier_TL_F", "B_T_Soldier_UAV_F", "B_T_soldier_UAV_06_medical_F", "B_T_soldier_UAV_06_F", "B_CTRG_Soldier_AR_tna_F", "B_CTRG_Soldier_JTAC_tna_F", "B_CTRG_Soldier_M_tna_F", "B_CTRG_Soldier_LAT_tna_F", "B_CTRG_Soldier_TL_tna_F", "B_CTRG_Miller_F", "B_CTRG_Soldier_Exp_tna_F", "B_CTRG_Soldier_Medic_tna_F", "B_CTRG_Soldier_LAT2_tna_F", "B_CTRG_Soldier_tna_F"];
									ZMM_WESTGrp_Sentry = [configFile >> "CfgGroups" >> "West" >> "BLU_T_F" >> "Infantry" >> "B_T_InfSentry"];
									ZMM_WESTGrp_Team = [configFile >> "CfgGroups" >> "West" >> "BLU_T_F" >> "Infantry" >> "B_T_InfTeam"];
									ZMM_WESTGrp_Squad = [configFile >> "CfgGroups" >> "West" >> "BLU_T_F" >> "Infantry" >> "B_T_InfSquad_Weapons"];
									ZMM_WESTVeh_Truck = ["B_T_Truck_01_transport_F","B_T_Truck_01_covered_F","B_T_Truck_01_medical_F"];
									ZMM_WESTVeh_Util = ["B_T_Truck_01_Repair_F","B_T_Truck_01_fuel_F","B_T_Truck_01_ammo_F"];
									ZMM_WESTVeh_Light = ["B_T_MRAP_01_F","B_T_MRAP_01_gmg_F","B_T_MRAP_01_hmg_F","B_T_LSV_01_AT_F","B_T_LSV_01_armed_F","B_T_LSV_01_unarmed_F","B_T_Quadbike_01_F","B_T_UGV_01_olive_F","B_T_UGV_01_rcws_olive_F","B_CTRG_LSV_01_light_F"];
									ZMM_WESTVeh_Medium = [["B_T_APC_Wheeled_01_cannon_F","[_grpVeh, false, ['showBags',0.5,'showCamonetHull',0.5,'showCamonetCannon',0.5,'showCamonetTurret',0.5,'showSLATHull',0.5,'showSLATTurret',0.5]] call BIS_fnc_initVehicle;"], ["B_T_APC_Tracked_01_CRV_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetPlates1',0.5,'showCamonetPlates2',0.5,'showWheels',0.5,'showAmmobox',0.5,'showBags',0.5]] call BIS_fnc_initVehicle;"], ["B_T_APC_Tracked_01_rcws_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetPlates1',0.5,'showCamonetPlates2',0.5]] call BIS_fnc_initVehicle;"], ["B_T_AFV_Wheeled_01_cannon_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetCannon',0.5,'showCamonetTurret',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"], ["B_T_AFV_Wheeled_01_up_cannon_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetCannon',0.5,'showCamonetTurret',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];
									ZMM_WESTVeh_Heavy = [["B_T_MBT_01_cannon_F","[_grpVeh, false, ['showCamonetCannon',0.5,'showCamonetPlates1',0.5,'showCamonetPlates2',0.5,'showCamonetTurret',0.5,'showCamonetHull',0.5]] call BIS_fnc_initVehicle;"], ["B_T_MBT_01_TUSK_F","[_grpVeh, false, ['showCamonetCannon',0.5,'showCamonetPlates1',0.5,'showCamonetPlates2',0.5,'showCamonetTurret',0.5,'showCamonetHull',0.5,'showBags',0.5]] call BIS_fnc_initVehicle;"], ["B_T_APC_Tracked_01_AA_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetTurret',0.5,'showCamonetPlates1',0.5,'showCamonetPlates2',0.5]] call BIS_fnc_initVehicle;"]];
									ZMM_WESTVeh_Air = ["B_Heli_Transport_03_F","B_Heli_Transport_03_unarmed_F","B_Heli_Light_01_F","B_Heli_Transport_01_F","B_CTRG_Heli_Transport_01_tropic_F"];
									ZMM_WESTVeh_CasH = ["B_Heli_Light_01_dynamicLoadout_F","B_Heli_Attack_01_dynamicLoadout_F","B_T_UAV_03_dynamicLoadout_F"];
									ZMM_WESTVeh_CasP = ["B_Plane_CAS_01_dynamicLoadout_F","B_Plane_Fighter_01_F","B_Plane_Fighter_01_Stealth_F","B_UAV_02_dynamicLoadout_F","B_UAV_05_F","B_T_VTOL_01_armed_F"];
									ZMM_WESTVeh_Convoy = ["B_T_MRAP_01_hmg_F","B_T_Truck_01_covered_F","B_T_APC_Wheeled_01_cannon_F"];
									ZMM_WESTVeh_Static = ["B_GMG_01_high_F","B_HMG_01_high_F","B_T_Static_AA_F","B_T_Static_AT_F"];
								};
								case "Enoch": {
									ZMM_WESTFlag = ["Flag_NATO_F", "\A3\ui_f\data\map\markers\flags\nato_ca.paa"];
									ZMM_WESTMan = ["B_W_Soldier_A_F", "B_W_Soldier_AAR_F", "B_W_Support_AMG_F", "B_W_Support_AMort_F", "B_W_Soldier_AAA_F", "B_W_Soldier_AAT_F", "B_W_Soldier_AR_F", "B_W_Soldier_CBRN_F", "B_W_Medic_F", "B_W_Engineer_F", "B_W_Soldier_Exp_F", "B_W_Soldier_GL_F", "B_W_Support_MG_F", "B_W_Support_GMG_F", "B_W_Support_Mort_F", "B_W_soldier_mine_F", "B_W_soldier_M_F", "B_W_Soldier_AA_F", "B_W_Soldier_AT_F", "B_W_Officer_F", "B_W_RadioOperator_F", "B_W_Soldier_Repair_F", "B_W_Soldier_LAT_F", "B_W_Soldier_F", "B_W_Soldier_LAT2_F", "B_W_Soldier_SL_F", "B_W_Soldier_TL_F", "B_W_Soldier_UAV_F", "B_W_soldier_UGV_02_Demining_F", "B_W_soldier_UGV_02_Science_F", "B_CTRG_Soldier_AR_tna_F", "B_CTRG_Soldier_JTAC_tna_F", "B_CTRG_Soldier_M_tna_F", "B_CTRG_Soldier_LAT_tna_F", "B_CTRG_Soldier_TL_tna_F", "B_CTRG_Miller_F", "B_CTRG_Soldier_Exp_tna_F", "B_CTRG_Soldier_Medic_tna_F", "B_CTRG_Soldier_LAT2_tna_F", "B_CTRG_Soldier_tna_F"];
									ZMM_WESTGrp_Sentry = [configFile >> "CfgGroups" >> "West" >> "BLU_W_F" >> "Infantry" >> "B_W_InfSentry"];
									ZMM_WESTGrp_Team = [configFile >> "CfgGroups" >> "West" >> "BLU_W_F" >> "Infantry" >> "B_W_InfTeam"];
									ZMM_WESTGrp_Squad = [configFile >> "CfgGroups" >> "West" >> "BLU_W_F" >> "Infantry" >> "B_W_InfSquad_Weapons"];
									ZMM_WESTVeh_Truck = ["B_T_Truck_01_transport_F","B_T_Truck_01_covered_F","B_T_Truck_01_medical_F"];
									ZMM_WESTVeh_Util = ["B_T_Truck_01_Repair_F","B_T_Truck_01_fuel_F","B_T_Truck_01_ammo_F"];
									ZMM_WESTVeh_Light = ["B_T_MRAP_01_F","B_T_MRAP_01_gmg_F","B_T_MRAP_01_hmg_F","B_T_LSV_01_AT_F","B_T_LSV_01_armed_F","B_T_LSV_01_unarmed_F","B_T_Quadbike_01_F","B_T_UGV_01_olive_F","B_T_UGV_01_rcws_olive_F","B_CTRG_LSV_01_light_F"];
									ZMM_WESTVeh_Medium = [["B_T_APC_Wheeled_01_cannon_F","[_grpVeh, false, ['showBags',0.5,'showCamonetHull',0.5,'showCamonetCannon',0.5,'showCamonetTurret',0.5,'showSLATHull',0.5,'showSLATTurret',0.5]] call BIS_fnc_initVehicle;"], ["B_T_APC_Tracked_01_CRV_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetPlates1',0.5,'showCamonetPlates2',0.5,'showWheels',0.5,'showAmmobox',0.5,'showBags',0.5]] call BIS_fnc_initVehicle;"], ["B_T_APC_Tracked_01_rcws_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetPlates1',0.5,'showCamonetPlates2',0.5]] call BIS_fnc_initVehicle;"], ["B_T_AFV_Wheeled_01_cannon_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetCannon',0.5,'showCamonetTurret',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"], ["B_T_AFV_Wheeled_01_up_cannon_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetCannon',0.5,'showCamonetTurret',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];
									ZMM_WESTVeh_Heavy = [["B_T_MBT_01_cannon_F","[_grpVeh, false, ['showCamonetCannon',0.5,'showCamonetPlates1',0.5,'showCamonetPlates2',0.5,'showCamonetTurret',0.5,'showCamonetHull',0.5]] call BIS_fnc_initVehicle;"], ["B_T_MBT_01_TUSK_F","[_grpVeh, false, ['showCamonetCannon',0.5,'showCamonetPlates1',0.5,'showCamonetPlates2',0.5,'showCamonetTurret',0.5,'showCamonetHull',0.5,'showBags',0.5]] call BIS_fnc_initVehicle;"], ["B_T_APC_Tracked_01_AA_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetTurret',0.5,'showCamonetPlates1',0.5,'showCamonetPlates2',0.5]] call BIS_fnc_initVehicle;"]];
									ZMM_WESTVeh_Air = ["B_Heli_Transport_03_F","B_Heli_Transport_03_unarmed_F","B_Heli_Light_01_F","B_Heli_Transport_01_F","B_CTRG_Heli_Transport_01_tropic_F"];
									ZMM_WESTVeh_CasH = ["B_Heli_Light_01_dynamicLoadout_F","B_Heli_Attack_01_dynamicLoadout_F","B_T_UAV_03_dynamicLoadout_F"];
									ZMM_WESTVeh_CasP = ["B_Plane_CAS_01_dynamicLoadout_F","B_Plane_Fighter_01_F","B_Plane_Fighter_01_Stealth_F","B_UAV_02_dynamicLoadout_F","B_UAV_05_F","B_T_VTOL_01_armed_F"];
									ZMM_WESTVeh_Convoy = ["B_T_MRAP_01_hmg_F","B_T_Truck_01_covered_F","B_T_APC_Wheeled_01_cannon_F"];
									ZMM_WESTVeh_Static = ["B_GMG_01_high_F","B_HMG_01_high_F","B_T_Static_AA_F","B_T_Static_AT_F"];
								};
								default {
									ZMM_WESTFlag = ["Flag_NATO_F", "\A3\ui_f\data\map\markers\flags\nato_ca.paa"];
									ZMM_WESTMan = ["B_Soldier_A_F", "B_soldier_AAR_F", "B_support_AMG_F", "B_support_AMort_F", "B_soldier_AAA_F", "B_soldier_AAT_F", "B_soldier_AR_F", "B_soldier_exp_F", "B_Soldier_GL_F", "B_support_Mort_F", "B_HeavyGunner_F", "B_soldier_M_F", "B_soldier_mine_F", "B_soldier_AA_F", "B_soldier_AT_F", "B_officer_F", "B_soldier_repair_F", "B_Soldier_F", "B_soldier_LAT_F", "B_soldier_LAT2_F", "B_Soldier_lite_F", "B_Soldier_SL_F", "B_Sharpshooter_F", "B_Soldier_TL_F", "B_soldier_UAV_F", "B_soldier_UAV_06_medical_F", "B_soldier_UAV_06_F", "B_soldier_UGV_02_Demining_F", "B_soldier_UGV_02_Science_F", "B_Patrol_Soldier_A_F", "B_Patrol_Soldier_AR_F", "B_Patrol_Medic_F", "B_Patrol_Engineer_F", "B_Patrol_Soldier_MG_F", "B_Patrol_HeavyGunner_F", "B_Patrol_Soldier_M_F", "B_Patrol_Soldier_AT_F", "B_Patrol_Soldier_TL_F", "B_Patrol_Soldier_UAV_F", "B_medic_F", "B_engineer_F", "B_support_GMG_F", "B_support_MG_F", "B_Story_Protagonist_F", "B_Captain_Jay_F", "B_Story_Pilot_F", "B_Story_SF_Captain_F", "B_Captain_Pettka_F", "B_CTRG_soldier_engineer_exp_F", "B_CTRG_soldier_M_medic_F", "B_CTRG_soldier_GL_LAT_F", "B_CTRG_Sharphooter_F", "B_CTRG_soldier_AR_A_F", "B_CTRG_Soldier_arid_F", "B_CTRG_Soldier_2_arid_F", "B_CTRG_Soldier_3_arid_F"];
									ZMM_WESTGrp_Sentry = [configFile >> "CfgGroups" >> "West" >> "BLU_F" >> "Infantry" >> "BUS_InfSentry"];
									ZMM_WESTGrp_Team = [configFile >> "CfgGroups" >> "West" >> "BLU_F" >> "Infantry" >> "BUS_InfTeam"];
									ZMM_WESTGrp_Squad = [configFile >> "CfgGroups" >> "West" >> "BLU_F" >> "Infantry" >> "BUS_InfAssault"];
									ZMM_WESTVeh_Truck = ["B_Truck_01_transport_F","B_Truck_01_covered_F","B_Truck_01_medical_F"];
									ZMM_WESTVeh_Util = ["B_Truck_01_Repair_F","B_Truck_01_fuel_F","B_Truck_01_ammo_F"];
									ZMM_WESTVeh_Light = ["B_MRAP_01_F","B_MRAP_01_gmg_F","B_MRAP_01_hmg_F","B_LSV_01_AT_F","B_LSV_01_armed_F","B_LSV_01_unarmed_F","B_Quadbike_01_F","B_UGV_01_F","B_UGV_01_rcws_F"];
									ZMM_WESTVeh_Medium = [["B_APC_Wheeled_01_cannon_F","[_grpVeh, false, ['showBags',0.5,'showCamonetHull',0.5,'showCamonetCannon',0.5,'showCamonetTurret',0.5,'showSLATHull',0.5,'showSLATTurret',0.5]] call BIS_fnc_initVehicle;"], ["B_APC_Tracked_01_CRV_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetPlates1',0.5,'showCamonetPlates2',0.5,'showWheels',0.5,'showAmmobox',0.5,'showBags',0.5]] call BIS_fnc_initVehicle;"], ["B_APC_Tracked_01_rcws_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetPlates1',0.5,'showCamonetPlates2',0.5]] call BIS_fnc_initVehicle;"], ["B_AFV_Wheeled_01_cannon_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetCannon',0.5,'showCamonetTurret',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"], ["B_AFV_Wheeled_01_up_cannon_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetCannon',0.5,'showCamonetTurret',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];
									ZMM_WESTVeh_Heavy = [["B_MBT_01_cannon_F","[_grpVeh, false, ['showCamonetCannon',0.5,'showCamonetPlates1',0.5,'showCamonetPlates2',0.5,'showCamonetTurret',0.5,'showCamonetHull',0.5]] call BIS_fnc_initVehicle;"], ["B_MBT_01_TUSK_F","[_grpVeh, false, ['showCamonetCannon',0.5,'showCamonetPlates1',0.5,'showCamonetPlates2',0.5,'showCamonetTurret',0.5,'showCamonetHull',0.5,'showBags',0.5]] call BIS_fnc_initVehicle;"], ["B_APC_Tracked_01_AA_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetTurret',0.5,'showCamonetPlates1',0.5,'showCamonetPlates2',0.5]] call BIS_fnc_initVehicle;"]];
									ZMM_WESTVeh_Air = ["B_Heli_Transport_03_F","B_Heli_Transport_03_unarmed_F","B_Heli_Light_01_F","B_Heli_Transport_01_F","B_CTRG_Heli_Transport_01_sand_F"];
									ZMM_WESTVeh_CasH = ["B_Heli_Light_01_dynamicLoadout_F","B_Heli_Attack_01_dynamicLoadout_F","B_T_UAV_03_dynamicLoadout_F"];
									ZMM_WESTVeh_CasP = ["B_Plane_CAS_01_dynamicLoadout_F","B_Plane_Fighter_01_F","B_Plane_Fighter_01_Stealth_F","B_UAV_02_dynamicLoadout_F","B_UAV_05_F","B_T_VTOL_01_armed_F"];
									ZMM_WESTVeh_Convoy = ["B_MRAP_01_hmg_F","B_Truck_01_covered_F","B_APC_Wheeled_01_cannon_F"];
									ZMM_WESTVeh_Static = ["B_GMG_01_high_F","B_HMG_01_high_F","B_static_AA_F","B_static_AT_F"];
								};
							};
						};
						case 1: {
							ZMM_WESTFlag = ["Flag_Gendarmerie_F", "\A3\Ui_f\data\Map\Markers\Flags\tanoaGendarmerie_ca.paa"];
							ZMM_WESTMan = ["B_GEN_Soldier_F","B_GEN_Commander_F","B_Captain_Dwarden_F"];
							ZMM_WESTGrp_Sentry = [configFile >> "CfgGroups" >> "West" >> "Gendarmerie" >> "Infantry" >> "GENDARME_Inf_Patrol"];
							ZMM_WESTGrp_Team = [configFile >> "CfgGroups" >> "West" >> "Gendarmerie" >> "Infantry" >> "GENDARME_Inf_Patrol"];
							ZMM_WESTGrp_Squad = [configFile >> "CfgGroups" >> "West" >> "Gendarmerie" >> "Motorized" >> "GENDARME_MotInf_Patrol"];
							ZMM_WESTVeh_Truck = ["B_GEN_Van_02_transport_F","C_Van_02_medevac_F"];
							ZMM_WESTVeh_Util = ["B_GEN_Van_02_vehicle_F","C_Offroad_01_repair_F","C_Van_02_service_F","C_Truck_02_fuel_F","C_Van_01_fuel_F"];
							ZMM_WESTVeh_Light = ["B_GEN_Offroad_01_gen_F", "B_GEN_Offroad_01_comms_F", "B_GEN_Offroad_01_covered_F"];
							ZMM_WESTVeh_Medium = [["I_E_APC_tracked_03_cannon_F","[_grpVeh, false, ['showBags',0.5,'showBags2',0.5,'showCamonetHull',0.5,'showCamonetTurret',0.5,'showTools',0.5,'showSLATHull',0.5,'showSLATTurret',0.5]] call BIS_fnc_initVehicle;"]];
							ZMM_WESTVeh_Medium = [["I_LT_01_cannon_F","[_grpVeh,['Indep_Olive',1],['showCamonetHull',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"],["I_LT_01_AT_F","[_grpVeh,['Indep_Olive',1],['showCamonetHull',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];
							ZMM_WESTVeh_Heavy = [["I_APC_Wheeled_03_cannon_F","[_grpVeh,['Guerilla_02',1],['showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];
							ZMM_WESTVeh_Air = [["B_Heli_Light_01_F","_grpVeh setObjectTextureGlobal [0, selectRandom['\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_graywatcher_co.paa','\A3\air_f\heli_light_01\data\heli_light_01_ext_ion_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_wasp_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_shadow_co.paa']];"]];
							ZMM_WESTVeh_CasH = [["B_Heli_Light_01_dynamicLoadout_F","_grpVeh setObjectTextureGlobal [0, selectRandom['\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_graywatcher_co.paa','\A3\air_f\heli_light_01\data\heli_light_01_ext_ion_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_wasp_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_shadow_co.paa']];"]];
							ZMM_WESTVeh_CasP = [["I_Plane_Fighter_04_F","[_grpVeh,['CamoGrey',1]] call BIS_fnc_initVehicle;"]];
							ZMM_WESTVeh_Convoy = [["B_GEN_Offroad_01_gen_F",""],["B_GEN_Van_02_transport_F",""],["I_APC_Wheeled_03_cannon_F","[_grpVeh,['Guerilla_01',1,'Guerilla_03',0.5],['showSLATHull',0.3]] call BIS_fnc_initVehicle;"]];
							ZMM_WESTVeh_Static = ["I_G_HMG_02_high_F"];
						};
						default {
							ZMM_WESTFlag = ["Flag_FIA_F", "\A3\Data_F\Flags\Flag_FIA_CO.paa"];
							ZMM_WESTMan = ["B_G_Soldier_F","B_G_Soldier_LAT_F","B_G_Soldier_F","B_G_Soldier_SL_F","B_G_Soldier_F","B_G_Soldier_AR_F","B_G_Soldier_F","B_G_Soldier_LAT2_F"];
							ZMM_WESTGrp_Sentry = [configFile >> "CfgGroups" >> "West" >> "Guerilla" >> "Infantry" >> "B_G_InfTeam_Light"];
							ZMM_WESTGrp_Team = [configFile >> "CfgGroups" >> "West" >> "Guerilla" >> "Infantry" >> "B_G_InfTeam_Light"];
							ZMM_WESTGrp_Squad = [configFile >> "CfgGroups" >> "West" >> "Guerilla" >> "Infantry" >> "B_G_InfSquad_Assault"];
							ZMM_WESTVeh_Truck = ["B_G_Van_01_transport_F"];
							ZMM_WESTVeh_Util = ["B_G_Offroad_01_repair_F","B_G_Van_01_fuel_F"];
							ZMM_WESTVeh_Light = ["B_G_Offroad_01_AT_F","B_G_Offroad_01_armed_F"];
							ZMM_WESTVeh_Medium = [["I_LT_01_cannon_F","[_grpVeh,['Indep_Olive',1],['showCamonetHull',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"],["I_LT_01_AT_F","[_grpVeh,['Indep_Olive',1],['showCamonetHull',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];;
							ZMM_WESTVeh_Heavy = [["I_APC_Wheeled_03_cannon_F","[_grpVeh,['Guerilla_02',1],['showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];
							ZMM_WESTVeh_Air = ["B_Heli_Light_01_F"];
							ZMM_WESTVeh_CasH = ["B_Heli_Light_01_dynamicLoadout_F"];
							ZMM_WESTVeh_CasP = [["I_Plane_Fighter_04_F","[_grpVeh,['CamoGrey',1]] call BIS_fnc_initVehicle;"]];
							ZMM_WESTVeh_Convoy = [["I_G_Offroad_01_armed_F",""],["I_G_Van_01_transport_F",""],["I_APC_Wheeled_03_cannon_F","[_grpVeh,['Guerilla_01',1,'Guerilla_03',0.5],['showSLATHull',0.3]] call BIS_fnc_initVehicle;"]];
							ZMM_WESTVeh_Static = ["B_G_HMG_02_high_F"];
						};
					};
					switch (missionNamespace getVariable ["f_param_factionEast",_factionEAST#0]) do {
						case 0: {
							switch (worldName) do {
								case "Stratis";
								case "Malden";
								case "Altis": {
									ZMM_EASTFlag = ["Flag_CSAT_F", "\A3\Data_F\Flags\Flag_CSAT_CO.paa"];
									ZMM_EASTMan = ["O_Soldier_A_F", "O_Soldier_AAR_F", "O_support_AMG_F", "O_support_AMort_F", "O_Soldier_AHAT_F", "O_Soldier_AAA_F", "O_Soldier_AAT_F", "O_Soldier_AR_F", "O_medic_F", "O_engineer_F", "O_soldier_exp_F", "O_Soldier_GL_F", "O_support_GMG_F", "O_support_Mort_F", "O_HeavyGunner_F", "O_support_MG_F", "O_soldier_M_F", "O_soldier_mine_F", "O_Soldier_AA_F", "O_Soldier_AT_F", "O_Soldier_F", "O_Soldier_LAT_F", "O_Soldier_HAT_F", "O_Soldier_TL_F", "O_officer_F", "O_soldier_repair_F", "O_Soldier_lite_F", "O_Sharpshooter_F", "O_Soldier_SL_F", "O_soldier_UAV_F", "O_soldier_UAV_06_F", "O_soldier_UAV_06_medical_F", "O_soldierU_A_F", "O_soldierU_AAR_F", "O_soldierU_AAA_F", "O_soldierU_AAT_F", "O_soldierU_AR_F", "O_soldierU_medic_F", "O_soldierU_exp_F", "O_SoldierU_GL_F", "O_Urban_HeavyGunner_F", "O_soldierU_M_F", "O_soldierU_AT_F", "O_soldierU_LAT_F", "O_SoldierU_SL_F", "O_Urban_Sharpshooter_F", "O_A_soldier_TL_F", "O_engineer_U_F", "O_soldierU_AA_F", "O_soldierU_repair_F", "O_soldierU_F", "O_soldierU_TL_F", "O_A_soldier_F", "O_V_Soldier_Exp_hex_F", "O_V_Soldier_JTAC_hex_F", "O_V_Soldier_M_hex_F", "O_V_Soldier_hex_F", "O_V_Soldier_Medic_hex_F", "O_V_Soldier_LAT_hex_F", "O_V_Soldier_TL_hex_F"];
									ZMM_EASTGrp_Sentry = [configFile >> "CfgGroups" >> "East" >> "OPF_F" >> "Infantry" >> "OIA_InfSentry"];
									ZMM_EASTGrp_Team = [configFile >> "CfgGroups" >> "East" >> "OPF_F" >> "Infantry" >> "OIA_InfTeam"];
									ZMM_EASTGrp_Squad = [configFile >> "CfgGroups" >> "East" >> "OPF_F" >> "Infantry" >> "OIA_InfAssault"];
									ZMM_EASTVeh_Truck = ["O_Truck_03_medical_F","O_Truck_03_transport_F","O_Truck_03_covered_F","O_Truck_02_medical_F","O_Truck_02_transport_F","O_Truck_02_covered_F"];
									ZMM_EASTVeh_Util = ["O_Truck_03_ammo_F","O_Truck_03_fuel_F","O_Truck_03_repair_F","O_Truck_02_Ammo_F","O_Truck_02_fuel_F","O_Truck_02_box_F"];
									ZMM_EASTVeh_Light = ["O_MRAP_02_F","O_MRAP_02_gmg_F","O_MRAP_02_hmg_F","O_LSV_02_AT_F","O_LSV_02_armed_F","O_LSV_02_unarmed_F","O_Quadbike_01_F","O_UGV_01_F","O_UGV_01_rcws_F"];
									ZMM_EASTVeh_Medium = [["O_APC_Tracked_02_cannon_F","[_grpVeh, false, ['showTracks',0.5,'showCamonetHull',0.5,'showBags',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"], ["O_APC_Wheeled_02_rcws_v2_F","[_grpVeh, false, ['showBags',0.5,'showCanisters',0.5,'showTools',0.5,'showCamonetHull',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];
									ZMM_EASTVeh_Heavy = [["O_APC_Tracked_02_AA_F","[_grpVeh, false, ['showTracks',0.5,'showCamonetHull',0.5,'showCamonetTurret',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"], ["O_MBT_02_cannon_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetCannon',0.5,'showCamonetTurret',0.5,'showLog',0.5]] call BIS_fnc_initVehicle;"], ["O_MBT_04_cannon_F","[_grpVeh, false, ['showCamonetCannon',0.5,'showCamonetHull',0.5,'showCamonetTurret',0.5]] call BIS_fnc_initVehicle;"], ["O_MBT_04_command_F","[_grpVeh, false, ['showCamonetCannon',0.5,'showCamonetHull',0.5,'showCamonetTurret',0.5]] call BIS_fnc_initVehicle;"]];
									ZMM_EASTVeh_Air = ["O_Heli_Transport_04_bench_F","O_Heli_Transport_04_covered_F","O_Heli_Light_02_unarmed_F"];
									ZMM_EASTVeh_CasH = ["O_Heli_Attack_02_dynamicLoadout_F","O_Heli_Light_02_dynamicLoadout_F"];
									ZMM_EASTVeh_CasP = ["O_Plane_CAS_02_dynamicLoadout_F","O_Plane_Fighter_02_F","O_Plane_Fighter_02_Stealth_F","O_UAV_02_dynamicLoadout_F","O_T_VTOL_02_infantry_dynamicLoadout_F","O_T_UAV_04_CAS_F"];
									ZMM_EASTVeh_Convoy = ["O_MRAP_02_hmg_F","O_Truck_03_transport_F","O_APC_Wheeled_02_rcws_v2_F"];
									ZMM_EASTVeh_Static = ["O_HMG_01_high_F","O_GMG_01_high_F","O_static_AA_F","O_static_AT_F"];
								};
								case "Tanoa": {
									ZMM_EASTFlag = ["Flag_CSAT_F", "\A3\Data_F\Flags\Flag_CSAT_CO.paa"];
									ZMM_EASTMan = ["O_T_Soldier_A_F", "O_T_Soldier_AAR_F", "O_T_Support_AMG_F", "O_T_Support_AMort_F", "O_T_Soldier_AHAT_F", "O_T_Soldier_AAA_F", "O_T_Soldier_AAT_F", "O_T_Soldier_AR_F", "O_T_Medic_F", "O_T_Engineer_F", "O_T_Soldier_Exp_F", "O_T_Soldier_GL_F", "O_T_Support_GMG_F", "O_T_Support_MG_F", "O_T_Support_Mort_F", "O_T_Soldier_M_F", "O_T_soldier_mine_F", "O_T_Soldier_AA_F", "O_T_Soldier_AT_F", "O_T_Officer_F", "O_T_Soldier_Repair_F", "O_T_Soldier_F", "O_T_Soldier_LAT_F", "O_T_Soldier_HAT_F", "O_T_Soldier_SL_F", "O_T_Soldier_TL_F", "O_T_Soldier_UAV_F", "O_T_soldier_UAV_06_F", "O_T_soldier_UAV_06_medical_F", "O_V_Soldier_Exp_ghex_F", "O_V_Soldier_JTAC_ghex_F", "O_V_Soldier_M_ghex_F", "O_V_Soldier_ghex_F", "O_V_Soldier_Medic_ghex_F", "O_V_Soldier_LAT_ghex_F", "O_V_Soldier_TL_ghex_F"];
									ZMM_EASTGrp_Sentry = [configFile >> "CfgGroups" >> "East" >> "OPF_T_F" >> "Infantry" >> "O_T_InfSentry"];
									ZMM_EASTGrp_Team = [configFile >> "CfgGroups" >> "East" >> "OPF_T_F" >> "Infantry" >> "O_T_InfTeam"];
									ZMM_EASTGrp_Squad = [configFile >> "CfgGroups" >> "East" >> "OPF_T_F" >> "Infantry" >> "O_T_InfSquad_Weapons"];
									ZMM_EASTVeh_Truck = ["O_T_Truck_03_transport_ghex_F","O_T_Truck_03_covered_ghex_F","O_T_Truck_02_transport_F","O_T_Truck_02_F"];
									ZMM_EASTVeh_Util = ["O_T_Truck_03_ammo_ghex_F","O_T_Truck_03_fuel_ghex_F","O_T_Truck_03_repair_ghex_F","O_T_Truck_02_Ammo_F","O_T_Truck_02_fuel_F","O_T_Truck_02_Box_F"];
									ZMM_EASTVeh_Light = ["O_T_MRAP_02_ghex_F","O_T_MRAP_02_gmg_ghex_F","O_T_MRAP_02_hmg_ghex_F","O_T_LSV_02_AT_F","O_T_LSV_02_armed_F","O_T_LSV_02_unarmed_F","O_T_Quadbike_01_ghex_F","O_T_UGV_01_ghex_F","O_T_UGV_01_rcws_ghex_F"];
									ZMM_EASTVeh_Medium = [["O_T_APC_Tracked_02_cannon_ghex_F","[_grpVeh, false, ['showTracks',0.5,'showCamonetHull',0.5,'showBags',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"], ["O_T_APC_Wheeled_02_rcws_v2_ghex_F","[_grpVeh, false, ['showBags',0.5,'showCanisters',0.5,'showTools',0.5,'showCamonetHull',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];
									ZMM_EASTVeh_Heavy = [["O_T_APC_Tracked_02_AA_ghex_F","[_grpVeh, false, ['showTracks',0.5,'showCamonetHull',0.5,'showCamonetTurret',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"], ["O_T_MBT_02_cannon_ghex_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetCannon',0.5,'showCamonetTurret',0.5,'showLog',0.5]] call BIS_fnc_initVehicle;"], ["O_T_MBT_04_cannon_F","[_grpVeh, false, ['showCamonetCannon',0.5,'showCamonetHull',0.5,'showCamonetTurret',0.5]] call BIS_fnc_initVehicle;"], ["O_T_MBT_04_command_F","[_grpVeh, false, ['showCamonetCannon',0.5,'showCamonetHull',0.5,'showCamonetTurret',0.5]] call BIS_fnc_initVehicle;"]];
									ZMM_EASTVeh_Air = ["O_Heli_Transport_04_bench_F","O_Heli_Transport_04_covered_F","O_Heli_Light_02_unarmed_F"];
									ZMM_EASTVeh_CasH = ["O_Heli_Attack_02_dynamicLoadout_F","O_Heli_Light_02_dynamicLoadout_F"];
									ZMM_EASTVeh_CasP = ["O_Plane_CAS_02_dynamicLoadout_F","O_Plane_Fighter_02_F","O_Plane_Fighter_02_Stealth_F","O_UAV_02_dynamicLoadout_F","O_T_VTOL_02_infantry_dynamicLoadout_F","O_T_UAV_04_CAS_F"];
									ZMM_EASTVeh_Convoy = ["O_T_MRAP_02_hmg_ghex_F","O_T_Truck_03_covered_ghex_F","O_T_APC_Wheeled_02_rcws_v2_ghex_F"];
									ZMM_EASTVeh_Static = ["O_HMG_01_high_F","O_GMG_01_high_F","O_static_AA_F","O_static_AT_F"];
								};
								case "Enoch": {
									ZMM_EASTFlag = ["Flag_CSAT_F", "\A3\Data_F\Flags\Flag_CSAT_CO.paa"];
									ZMM_EASTMan = ["O_T_Soldier_A_F", "O_T_Soldier_AAR_F", "O_T_Support_AMG_F", "O_T_Support_AMort_F", "O_T_Soldier_AHAT_F", "O_T_Soldier_AAA_F", "O_T_Soldier_AAT_F", "O_T_Soldier_AR_F", "O_T_Medic_F", "O_T_Engineer_F", "O_T_Soldier_Exp_F", "O_T_Soldier_GL_F", "O_T_Support_GMG_F", "O_T_Support_MG_F", "O_T_Support_Mort_F", "O_T_Soldier_M_F", "O_T_soldier_mine_F", "O_T_Soldier_AA_F", "O_T_Soldier_AT_F", "O_T_Officer_F", "O_T_Soldier_Repair_F", "O_T_Soldier_F", "O_T_Soldier_LAT_F", "O_T_Soldier_HAT_F", "O_T_Soldier_SL_F", "O_T_Soldier_TL_F", "O_T_Soldier_UAV_F", "O_T_soldier_UAV_06_F", "O_T_soldier_UAV_06_medical_F", "o_r_medic_f", "o_r_soldier_ar_f", "o_r_soldier_exp_f", "o_r_soldier_gl_f", "o_r_jtac_f", "o_r_soldier_lat_f", "o_r_soldier_m_f", "o_r_soldier_tl_f", "o_r_patrol_soldier_a_f", "o_r_patrol_soldier_ar2_f", "o_r_patrol_soldier_ar_f", "o_r_patrol_soldier_medic", "o_r_patrol_soldier_engineer_f", "o_r_patrol_soldier_gl_f", "o_r_patrol_soldier_m2_f", "o_r_patrol_soldier_lat_f", "o_r_patrol_soldier_m_f", "o_r_patrol_soldier_tl_f"];
									ZMM_EASTGrp_Sentry = [configFile >> "CfgGroups" >> "East" >> "OPF_T_F" >> "Infantry" >> "O_T_InfSentry"];
									ZMM_EASTGrp_Team = [configFile >> "CfgGroups" >> "East" >> "OPF_T_F" >> "Infantry" >> "O_T_InfTeam"];
									ZMM_EASTGrp_Squad = [configFile >> "CfgGroups" >> "East" >> "OPF_T_F" >> "Infantry" >> "O_T_InfSquad_Weapons"];
									ZMM_EASTVeh_Truck = ["O_T_Truck_03_transport_ghex_F","O_T_Truck_03_covered_ghex_F","O_T_Truck_02_transport_F","O_T_Truck_02_F"];
									ZMM_EASTVeh_Util = ["O_T_Truck_03_ammo_ghex_F","O_T_Truck_03_fuel_ghex_F","O_T_Truck_03_repair_ghex_F","O_T_Truck_02_Ammo_F","O_T_Truck_02_fuel_F","O_T_Truck_02_Box_F"];
									ZMM_EASTVeh_Light = ["O_T_MRAP_02_ghex_F","O_T_MRAP_02_gmg_ghex_F","O_T_MRAP_02_hmg_ghex_F","O_T_LSV_02_AT_F","O_T_LSV_02_armed_F","O_T_LSV_02_unarmed_F","O_T_Quadbike_01_ghex_F","O_T_UGV_01_ghex_F","O_T_UGV_01_rcws_ghex_F"];
									ZMM_EASTVeh_Medium = [["O_T_APC_Tracked_02_cannon_ghex_F","[_grpVeh, false, ['showTracks',0.5,'showCamonetHull',0.5,'showBags',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"], ["O_T_APC_Wheeled_02_rcws_v2_ghex_F","[_grpVeh, false, ['showBags',0.5,'showCanisters',0.5,'showTools',0.5,'showCamonetHull',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];
									ZMM_EASTVeh_Heavy = [["O_T_APC_Tracked_02_AA_ghex_F","[_grpVeh, false, ['showTracks',0.5,'showCamonetHull',0.5,'showCamonetTurret',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"], ["O_T_MBT_02_cannon_ghex_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetCannon',0.5,'showCamonetTurret',0.5,'showLog',0.5]] call BIS_fnc_initVehicle;"], ["O_T_MBT_04_cannon_F","[_grpVeh, false, ['showCamonetCannon',0.5,'showCamonetHull',0.5,'showCamonetTurret',0.5]] call BIS_fnc_initVehicle;"], ["O_T_MBT_04_command_F","[_grpVeh, false, ['showCamonetCannon',0.5,'showCamonetHull',0.5,'showCamonetTurret',0.5]] call BIS_fnc_initVehicle;"]];
									ZMM_EASTVeh_Air = ["O_Heli_Transport_04_bench_F","O_Heli_Transport_04_covered_F","O_Heli_Light_02_unarmed_F"];
									ZMM_EASTVeh_CasH = ["O_Heli_Attack_02_dynamicLoadout_F","O_Heli_Light_02_dynamicLoadout_F"];
									ZMM_EASTVeh_CasP = ["O_Plane_CAS_02_dynamicLoadout_F","O_Plane_Fighter_02_F","O_Plane_Fighter_02_Stealth_F","O_UAV_02_dynamicLoadout_F","O_T_VTOL_02_infantry_dynamicLoadout_F","O_T_UAV_04_CAS_F"];
									ZMM_EASTVeh_Convoy = ["O_T_MRAP_02_hmg_ghex_F","O_T_Truck_03_covered_ghex_F","O_T_APC_Wheeled_02_rcws_v2_ghex_F"];
									ZMM_EASTVeh_Static = ["O_HMG_01_high_F","O_GMG_01_high_F","O_static_AA_F","O_static_AT_F"];
								};
								default {
									ZMM_EASTFlag = ["Flag_CSAT_F", "\A3\Data_F\Flags\Flag_CSAT_CO.paa"];
									ZMM_EASTMan = ["O_Soldier_A_F", "O_Soldier_AAR_F", "O_support_AMG_F", "O_support_AMort_F", "O_Soldier_AHAT_F", "O_Soldier_AAA_F", "O_Soldier_AAT_F", "O_Soldier_AR_F", "O_medic_F", "O_engineer_F", "O_soldier_exp_F", "O_Soldier_GL_F", "O_support_GMG_F", "O_support_Mort_F", "O_HeavyGunner_F", "O_support_MG_F", "O_soldier_M_F", "O_soldier_mine_F", "O_Soldier_AA_F", "O_Soldier_AT_F", "O_Soldier_F", "O_Soldier_LAT_F", "O_Soldier_HAT_F", "O_Soldier_TL_F", "O_officer_F", "O_soldier_repair_F", "O_Soldier_lite_F", "O_Sharpshooter_F", "O_Soldier_SL_F", "O_soldier_UAV_F", "O_soldier_UAV_06_F", "O_soldier_UAV_06_medical_F", "O_soldierU_A_F", "O_soldierU_AAR_F", "O_soldierU_AAA_F", "O_soldierU_AAT_F", "O_soldierU_AR_F", "O_soldierU_medic_F", "O_soldierU_exp_F", "O_SoldierU_GL_F", "O_Urban_HeavyGunner_F", "O_soldierU_M_F", "O_soldierU_AT_F", "O_soldierU_LAT_F", "O_SoldierU_SL_F", "O_Urban_Sharpshooter_F", "O_A_soldier_TL_F", "O_engineer_U_F", "O_soldierU_AA_F", "O_soldierU_repair_F", "O_soldierU_F", "O_soldierU_TL_F", "O_A_soldier_F", "O_V_Soldier_Exp_hex_F", "O_V_Soldier_JTAC_hex_F", "O_V_Soldier_M_hex_F", "O_V_Soldier_hex_F", "O_V_Soldier_Medic_hex_F", "O_V_Soldier_LAT_hex_F", "O_V_Soldier_TL_hex_F"];
									ZMM_EASTGrp_Sentry = [configFile >> "CfgGroups" >> "East" >> "OPF_F" >> "Infantry" >> "OIA_InfSentry"];
									ZMM_EASTGrp_Team = [configFile >> "CfgGroups" >> "East" >> "OPF_F" >> "Infantry" >> "OIA_InfTeam"];
									ZMM_EASTGrp_Squad = [configFile >> "CfgGroups" >> "East" >> "OPF_F" >> "Infantry" >> "OIA_InfAssault"];
									ZMM_EASTVeh_Truck = ["O_Truck_03_medical_F","O_Truck_03_transport_F","O_Truck_03_covered_F","O_Truck_02_medical_F","O_Truck_02_transport_F","O_Truck_02_covered_F"];
									ZMM_EASTVeh_Util = ["O_Truck_03_ammo_F","O_Truck_03_fuel_F","O_Truck_03_repair_F","O_Truck_02_Ammo_F","O_Truck_02_fuel_F","O_Truck_02_box_F"];
									ZMM_EASTVeh_Light = ["O_MRAP_02_F","O_MRAP_02_gmg_F","O_MRAP_02_hmg_F","O_LSV_02_AT_F","O_LSV_02_armed_F","O_LSV_02_unarmed_F","O_Quadbike_01_F","O_UGV_01_F","O_UGV_01_rcws_F"];
									ZMM_EASTVeh_Medium = [["O_APC_Tracked_02_cannon_F","[_grpVeh, false, ['showTracks',0.5,'showCamonetHull',0.5,'showBags',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"], ["O_APC_Wheeled_02_rcws_v2_F","[_grpVeh, false, ['showBags',0.5,'showCanisters',0.5,'showTools',0.5,'showCamonetHull',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];
									ZMM_EASTVeh_Heavy = [["O_APC_Tracked_02_AA_F","[_grpVeh, false, ['showTracks',0.5,'showCamonetHull',0.5,'showCamonetTurret',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"], ["O_MBT_02_cannon_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetCannon',0.5,'showCamonetTurret',0.5,'showLog',0.5]] call BIS_fnc_initVehicle;"], ["O_MBT_04_cannon_F","[_grpVeh, false, ['showCamonetCannon',0.5,'showCamonetHull',0.5,'showCamonetTurret',0.5]] call BIS_fnc_initVehicle;"], ["O_MBT_04_command_F","[_grpVeh, false, ['showCamonetCannon',0.5,'showCamonetHull',0.5,'showCamonetTurret',0.5]] call BIS_fnc_initVehicle;"]];
									ZMM_EASTVeh_Air = ["O_Heli_Transport_04_bench_F","O_Heli_Transport_04_covered_F","O_Heli_Light_02_unarmed_F"];
									ZMM_EASTVeh_CasH = ["O_Heli_Attack_02_dynamicLoadout_F","O_Heli_Light_02_dynamicLoadout_F"];
									ZMM_EASTVeh_CasP = ["O_Plane_CAS_02_dynamicLoadout_F","O_Plane_Fighter_02_F","O_Plane_Fighter_02_Stealth_F","O_UAV_02_dynamicLoadout_F","O_T_VTOL_02_infantry_dynamicLoadout_F","O_T_UAV_04_CAS_F"];
									ZMM_EASTVeh_Convoy = ["O_MRAP_02_hmg_F","O_Truck_03_transport_F","O_APC_Wheeled_02_rcws_v2_F"];
									ZMM_EASTVeh_Static = ["O_HMG_01_high_F","O_GMG_01_high_F","O_static_AA_F","O_static_AT_F"];
								};
							};
						};
						case 1: {
							ZMM_EASTFlag = ["Flag_Gendarmerie_F", "\A3\Ui_f\data\Map\Markers\Flags\tanoaGendarmerie_ca.paa"];
							ZMM_EASTMan = ["B_GEN_Soldier_F","B_GEN_Commander_F","B_Captain_Dwarden_F"];
							ZMM_EASTGrp_Sentry = [configFile >> "CfgGroups" >> "West" >> "Gendarmerie" >> "Infantry" >> "GENDARME_Inf_Patrol"];
							ZMM_EASTGrp_Team = [configFile >> "CfgGroups" >> "West" >> "Gendarmerie" >> "Infantry" >> "GENDARME_Inf_Patrol"];
							ZMM_EASTGrp_Squad = [configFile >> "CfgGroups" >> "West" >> "Gendarmerie" >> "Motorized" >> "GENDARME_MotInf_Patrol"];
							ZMM_EASTVeh_Truck = ["B_GEN_Van_02_transport_F","C_Van_02_medevac_F"];
							ZMM_EASTVeh_Util = ["B_GEN_Van_02_vehicle_F","C_Offroad_01_repair_F","C_Van_02_service_F","C_Truck_02_fuel_F","C_Van_01_fuel_F"];
							ZMM_EASTVeh_Light = ["B_GEN_Offroad_01_gen_F", "B_GEN_Offroad_01_comms_F", "B_GEN_Offroad_01_covered_F"];
							ZMM_EASTVeh_Medium = [["I_LT_01_cannon_F","[_grpVeh,['Indep_Olive',1],['showCamonetHull',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"],["I_LT_01_AT_F","[_grpVeh,['Indep_Olive',1],['showCamonetHull',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];
							ZMM_EASTVeh_Heavy = [["I_APC_Wheeled_03_cannon_F","[_grpVeh,['Guerilla_02',1],['showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];
							ZMM_EASTVeh_Air = [["B_Heli_Light_01_F","_grpVeh setObjectTextureGlobal [0, selectRandom['\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_graywatcher_co.paa','\A3\air_f\heli_light_01\data\heli_light_01_ext_ion_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_wasp_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_shadow_co.paa']];"]];
							ZMM_EASTVeh_CasH = [["B_Heli_Light_01_dynamicLoadout_F","_grpVeh setObjectTextureGlobal [0, selectRandom['\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_graywatcher_co.paa','\A3\air_f\heli_light_01\data\heli_light_01_ext_ion_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_wasp_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_shadow_co.paa']];"]];
							ZMM_EASTVeh_CasP = [["I_Plane_Fighter_04_F","[_grpVeh,['CamoGrey',1]] call BIS_fnc_initVehicle;"]];
							ZMM_EASTVeh_Convoy = [["B_GEN_Offroad_01_gen_F",""],["B_GEN_Van_02_transport_F",""],["I_APC_Wheeled_03_cannon_F","[_grpVeh,['Guerilla_01',1,'Guerilla_03',0.5],['showSLATHull',0.3]] call BIS_fnc_initVehicle;"]];
							ZMM_EASTVeh_Static = ["I_G_HMG_02_high_F"];
						};
						default {
							ZMM_EASTFlag = ["Flag_FIA_F", "\A3\Data_F\Flags\Flag_FIA_CO.paa"];
							ZMM_EASTMan = ["O_G_Soldier_A_F","O_G_Soldier_AR_F","O_G_medic_F","O_G_engineer_F","O_G_Soldier_exp_F","O_G_Soldier_GL_F","O_G_Soldier_M_F","O_G_officer_F","O_G_Soldier_F","O_G_Soldier_LAT_F","O_G_Soldier_lite_F","O_G_Soldier_LAT2_F","O_G_Sharpshooter_F","O_G_Soldier_TL_F","O_G_Soldier_SL_F"];
							ZMM_EASTGrp_Sentry = [configfile >> "CfgGroups" >> "East" >> "OPF_G_F" >> "Infantry" >> "O_G_InfTeam_Light"];
							ZMM_EASTGrp_Team = [configfile >> "CfgGroups" >> "East" >> "OPF_G_F" >> "Infantry" >> "O_G_InfTeam_Light"];
							ZMM_EASTGrp_Squad = [configfile >> "CfgGroups" >> "East" >> "OPF_G_F" >> "Infantry" >> "O_G_InfSquad_Assault"];
							ZMM_EASTVeh_Truck = ["O_G_Van_02_transport_F"];
							ZMM_EASTVeh_Util = ["O_G_Offroad_01_repair_F","O_G_Van_01_fuel_F"];
							ZMM_EASTVeh_Light = ["O_G_Offroad_01_armed_F","O_G_Offroad_01_AT_F"];
							ZMM_EASTVeh_Medium = [["I_LT_01_cannon_F","[_grpVeh,['Indep_Olive',1],['showCamonetHull',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"],["I_LT_01_AT_F","[_grpVeh,['Indep_Olive',1],['showCamonetHull',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];
							ZMM_EASTVeh_Heavy = [["I_APC_Wheeled_03_cannon_F","[_grpVeh,['Guerilla_02',1],['showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];
							ZMM_EASTVeh_Air = [["B_Heli_Light_01_F","_grpVeh setObjectTextureGlobal [0, selectRandom['\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_graywatcher_co.paa','\A3\air_f\heli_light_01\data\heli_light_01_ext_ion_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_wasp_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_shadow_co.paa']];"]];
							ZMM_EASTVeh_CasH = [["B_Heli_Light_01_dynamicLoadout_F","_grpVeh setObjectTextureGlobal [0, selectRandom['\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_graywatcher_co.paa','\A3\air_f\heli_light_01\data\heli_light_01_ext_ion_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_wasp_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_shadow_co.paa']];"]];
							ZMM_EASTVeh_CasP = [["I_Plane_Fighter_04_F","[_grpVeh,['CamoGrey',1]] call BIS_fnc_initVehicle;"]];
							ZMM_EASTVeh_Convoy = [["I_G_Offroad_01_armed_F",""],["I_G_Van_01_transport_F",""],["I_APC_Wheeled_03_cannon_F","[_grpVeh,['Guerilla_01',1,'Guerilla_03',0.5],['showSLATHull',0.3]] call BIS_fnc_initVehicle;"]];
							ZMM_EASTVeh_Static = ["O_G_HMG_02_high_F"];
						};
					};
					switch (missionNamespace getVariable ["f_param_factionGuer",_factionGUER#0]) do {
						case 0: {
							ZMM_GUERFlag = ["Flag_AAF_F", "\A3\ui_f\data\map\markers\flags\AAF_ca.paa"];
							ZMM_GUERMan = ["I_Soldier_A_F", "I_Soldier_AAR_F", "I_support_AMG_F", "I_support_AMort_F", "I_medic_F", "I_Soldier_AAA_F", "I_Soldier_AAT_F", "I_Soldier_AR_F", "I_engineer_F", "I_Soldier_exp_F", "I_Soldier_GL_F", "I_support_GMG_F", "I_support_MG_F", "I_support_Mort_F", "I_Soldier_M_F", "I_soldier_mine_F", "I_Soldier_AA_F", "I_Soldier_AT_F", "I_officer_F", "I_Soldier_repair_F", "I_soldier_F", "I_Soldier_LAT_F", "I_Soldier_LAT2_F", "I_Soldier_lite_F", "I_Soldier_SL_F", "I_Soldier_TL_F", "I_soldier_UAV_F", "I_soldier_UAV_06_F", "I_soldier_UAV_06_medical_F", "I_Story_Officer_01_F"];
							ZMM_GUERGrp_Sentry = [configFile >> "CfgGroups" >> "Indep" >> "IND_F" >> "Infantry" >> "HAF_InfSentry"];
							ZMM_GUERGrp_Team = [configFile >> "CfgGroups" >> "Indep" >> "IND_F" >> "Infantry" >> "HAF_InfTeam"];
							ZMM_GUERGrp_Squad = [configFile >> "CfgGroups" >> "Indep" >> "IND_F" >> "Infantry" >> "HAF_InfSquad_Weapons"];
							ZMM_GUERVeh_Truck = ["I_Truck_02_transport_F","I_Truck_02_covered_F","I_Truck_02_medical_F"];
							ZMM_GUERVeh_Util = ["I_Truck_02_fuel_F","I_Truck_02_ammo_F","I_Truck_02_box_F"];
							ZMM_GUERVeh_Light = ["I_Quadbike_01_F","I_MRAP_03_F","I_MRAP_03_gmg_F","I_MRAP_03_hmg_F","I_UGV_01_F","I_UGV_01_rcws_F"];
							ZMM_GUERVeh_Medium = [["I_APC_Wheeled_03_cannon_F","[_grpVeh, false, ['showCamonetHull',0.5,'showBags',0.5,'showBags2',0.5,'showTools',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"], ["I_APC_tracked_03_cannon_F","[_grpVeh, false, ['showBags',0.5,'showBags2',0.5,'showCamonetHull',0.5,'showCamonetTurret',0.5,'showTools',0.5,'showSLATHull',0.5,'showSLATTurret',0.5]] call BIS_fnc_initVehicle;"], ["I_LT_01_AT_F","[_grpVeh, false, ['showCamonetPlates1',0.5,'showCamonetPlates2',0.5,'showCamonetHull',0.5,'showBags',0.5,'showBags2',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"], ["I_LT_01_scout_F","[_grpVeh, false, ['showCamonetPlates1',0.5,'showCamonetPlates2',0.5,'showCamonetHull',0.5,'showBags',0.5,'showBags2',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"], ["I_LT_01_cannon_F","[_grpVeh, false, ['showCamonetPlates1',0.5,'showCamonetPlates2',0.5,'showCamonetHull',0.5,'showBags',0.5,'showBags2',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];
							ZMM_GUERVeh_Heavy = [["I_LT_01_AA_F","[_grpVeh, false, ['showCamonetPlates1',0.5,'showCamonetPlates2',0.5,'showCamonetHull',0.5,'showBags',0.5,'showBags2',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"], ["I_MBT_03_cannon_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetTurret',0.5,'showCamonetCannon',0.5,'showCamonetCannon1',0.5]] call BIS_fnc_initVehicle;"]];
							ZMM_GUERVeh_Air = ["I_Heli_Transport_02_F","I_Heli_light_03_unarmed_F"];
							ZMM_GUERVeh_CasH = ["I_Heli_light_03_dynamicLoadout_F"];
							ZMM_GUERVeh_CasP = ["I_Plane_Fighter_03_dynamicLoadout_F","I_Plane_Fighter_04_F","I_UAV_02_dynamicLoadout_F"];
							ZMM_GUERVeh_Convoy = ["I_MRAP_03_hmg_F","I_Truck_02_covered_F","I_APC_Wheeled_03_cannon_F"];
							ZMM_GUERVeh_Static = ["I_HMG_02_high_F","I_HMG_01_high_F","I_GMG_01_high_F","I_static_AA_F","I_static_AT_F"];
						};
						case 1: {
							ZMM_GUERFlag = ["Flag_Enoch_F", "\a3\UI_F_Enoch\Data\CfgMarkers\LDF_CA.paa"];
							ZMM_GUERMan = ["I_E_Soldier_A_F", "I_E_Soldier_AAR_F", "I_E_Support_AMG_F", "I_E_Support_MG_F", "I_E_Support_AMort_F", "I_E_Soldier_AAA_F", "I_E_Soldier_AR_F", "I_E_Soldier_CBRN_F", "I_E_Engineer_F", "I_E_Support_GMG_F", "I_E_Soldier_GL_F", "I_E_Soldier_AAT_F", "I_E_Medic_F", "I_E_Support_Mort_F", "I_E_soldier_Mine_F", "I_E_Soldier_AA_F", "I_E_Soldier_AT_F", "I_E_Officer_F", "I_E_Soldier_Pathfinder_F", "I_E_Soldier_Repair_F", "I_E_Soldier_LAT_F", "I_E_Soldier_LAT2_F", "I_E_Soldier_Exp_F", "I_E_soldier_M_F", "I_E_Soldier_MP_F", "I_E_RadioOperator_F", "I_E_Soldier_F", "I_E_Soldier_lite_F", "I_E_Soldier_SL_F", "I_E_Soldier_TL_F", "I_E_soldier_UAV_06_F", "I_E_soldier_UAV_06_medical_F", "I_E_soldier_UGV_02_Demining_F", "I_E_soldier_UGV_02_Science_F", "I_E_Soldier_UAV_F"];
							ZMM_GUERGrp_Sentry = [configFile >> "CfgGroups" >> "Indep" >> "IND_E_F" >> "Infantry" >> "I_E_InfSentry"];
							ZMM_GUERGrp_Team = [configFile >> "CfgGroups" >> "Indep" >> "IND_E_F" >> "Infantry" >> "I_E_InfTeam"];
							ZMM_GUERGrp_Squad = [configFile >> "CfgGroups" >> "Indep" >> "IND_E_F" >> "Infantry" >> "I_E_InfSquad"];
							ZMM_GUERVeh_Truck = ["I_E_Van_02_transport_F","I_E_Van_02_transport_MP_F","I_E_Truck_02_transport_F","I_E_Truck_02_F","I_E_Truck_02_Medical_F"];
							ZMM_GUERVeh_Util = ["I_E_Truck_02_Ammo_F","I_E_Truck_02_fuel_F","I_E_Truck_02_Box_F"];
							ZMM_GUERVeh_Light = ["I_E_Offroad_01_F","I_E_Offroad_01_comms_F","I_E_Offroad_01_covered_F","I_E_Quadbike_01_F","I_E_UGV_01_F","I_E_UGV_01_rcws_F"];
							ZMM_GUERVeh_Medium = [["I_E_APC_tracked_03_cannon_F","[_grpVeh, false, ['showBags',0.5,'showBags2',0.5,'showCamonetHull',0.5,'showCamonetTurret',0.5,'showTools',0.5,'showSLATHull',0.5,'showSLATTurret',0.5]] call BIS_fnc_initVehicle;"]];
							ZMM_GUERVeh_Heavy = [["I_LT_01_AA_F","[_grpVeh, false, ['showCamonetPlates1',0.5,'showCamonetPlates2',0.5,'showCamonetHull',0.5,'showBags',0.5,'showBags2',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"], ["I_MBT_03_cannon_F","[_grpVeh, false, ['showCamonetHull',0.5,'showCamonetTurret',0.5,'showCamonetCannon',0.5,'showCamonetCannon1',0.5]] call BIS_fnc_initVehicle;"]];
							ZMM_GUERVeh_Air = ["I_E_Heli_light_03_unarmed_F"];
							ZMM_GUERVeh_CasH = ["I_E_Heli_light_03_dynamicLoadout_F"];
							ZMM_GUERVeh_CasP = ["I_Plane_Fighter_03_dynamicLoadout_F","I_Plane_Fighter_04_F","I_UAV_02_dynamicLoadout_F"];
							ZMM_GUERVeh_Convoy = ["I_E_Offroad_01_F","I_E_Truck_02_transport_F","I_E_APC_tracked_03_cannon_F"];
							ZMM_GUERVeh_Static = ["I_E_HMG_01_high_F","I_E_GMG_01_high_F","I_E_Static_AA_F","I_E_Static_AT_F"];
						};
						case 2: {
							ZMM_GUERFlag = ["Flag_Syndikat_F", "\A3\Ui_f\data\Map\Markers\Flags\syndicat_ca.paa"];
							ZMM_GUERMan = ["I_C_Soldier_Bandit_7_F", "I_C_Soldier_Bandit_3_F", "I_C_Soldier_Bandit_2_F", "I_C_Pilot_F", "I_C_Soldier_Bandit_5_F", "I_C_Soldier_Bandit_6_F", "I_C_Soldier_Bandit_1_F", "I_C_Soldier_Bandit_8_F", "I_C_Soldier_Bandit_4_F", "I_C_Soldier_Para_7_F", "I_C_Soldier_Para_2_F", "I_C_Helipilot_F", "I_C_Soldier_Para_3_F", "I_C_Soldier_Para_4_F", "I_C_Soldier_Para_6_F", "I_C_Soldier_Para_8_F", "I_C_Soldier_Para_1_F", "I_C_Soldier_Para_5_F", "I_L_Criminal_SG_F", "I_L_Criminal_SMG_F", "I_L_Hunter_F", "I_L_Looter_Rifle_F", "I_L_Looter_Pistol_F", "I_L_Looter_SG_F", "I_L_Looter_SMG_F"];
							ZMM_GUERGrp_Sentry = [configFile >> "CfgGroups" >> "Indep" >> "IND_C_F" >> "Infantry" >> "BanditFireTeam"];
							ZMM_GUERGrp_Team = [configFile >> "CfgGroups" >> "Indep" >> "IND_C_F" >> "Infantry" >> "BanditShockTeam"];
							ZMM_GUERGrp_Squad = [configFile >> "CfgGroups" >> "Indep" >> "IND_C_F" >> "Infantry" >> "BanditCombatGroup"];
							ZMM_GUERVeh_Truck = ["I_C_Van_02_transport_F"];
							ZMM_GUERVeh_Util = ["I_G_Offroad_01_repair_F","I_G_Van_01_fuel_F"];
							ZMM_GUERVeh_Light = ["I_C_Offroad_02_unarmed_F","I_C_Offroad_02_AT_F","I_C_Offroad_02_LMG_F","I_C_Van_01_transport_F"];
							ZMM_GUERVeh_Medium = [["I_LT_01_cannon_F","[_grpVeh,['Indep_Olive',1],['showCamonetHull',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"],["I_LT_01_AT_F","[_grpVeh,['Indep_Olive',1],['showCamonetHull',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];
							ZMM_GUERVeh_Heavy = [["I_APC_Wheeled_03_cannon_F","[_grpVeh,['Guerilla_02',1],['showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];
							ZMM_GUERVeh_Air = [["B_Heli_Light_01_F","_grpVeh setObjectTextureGlobal [0, selectRandom['\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_graywatcher_co.paa','\A3\air_f\heli_light_01\data\heli_light_01_ext_ion_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_wasp_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_shadow_co.paa']];"]];
							ZMM_GUERVeh_CasH = [["B_Heli_Light_01_dynamicLoadout_F","_grpVeh setObjectTextureGlobal [0, selectRandom['\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_graywatcher_co.paa','\A3\air_f\heli_light_01\data\heli_light_01_ext_ion_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_wasp_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_shadow_co.paa']];"]];
							ZMM_GUERVeh_CasP = [["I_Plane_Fighter_04_F","[_grpVeh,['CamoGrey',1]] call BIS_fnc_initVehicle;"]];
							ZMM_GUERVeh_Convoy = [["I_C_Offroad_02_LMG_F",""],["I_C_Van_02_transport_F",""],["I_APC_Wheeled_03_cannon_F","[_grpVeh,['Guerilla_01',1,'Guerilla_03',0.5],['showSLATHull',0.3]] call BIS_fnc_initVehicle;"]];
							ZMM_GUERVeh_Static = ["I_C_HMG_02_high_F"];
						};
						case 3: {
							ZMM_GUERFlag = ["Flag_Gendarmerie_F", "\A3\Ui_f\data\Map\Markers\Flags\tanoaGendarmerie_ca.paa"];
							ZMM_GUERMan = ["B_GEN_Soldier_F","B_GEN_Commander_F","B_Captain_Dwarden_F"];
							ZMM_GUERGrp_Sentry = [configFile >> "CfgGroups" >> "West" >> "Gendarmerie" >> "Infantry" >> "GENDARME_Inf_Patrol"];
							ZMM_GUERGrp_Team = [configFile >> "CfgGroups" >> "West" >> "Gendarmerie" >> "Infantry" >> "GENDARME_Inf_Patrol"];
							ZMM_GUERGrp_Squad = [configFile >> "CfgGroups" >> "West" >> "Gendarmerie" >> "Motorized" >> "GENDARME_MotInf_Patrol"];
							ZMM_GUERVeh_Truck = ["B_GEN_Van_02_transport_F","C_Van_02_medevac_F"];
							ZMM_GUERVeh_Util = ["B_GEN_Van_02_vehicle_F","C_Offroad_01_repair_F","C_Van_02_service_F","C_Truck_02_fuel_F","C_Van_01_fuel_F"];
							ZMM_GUERVeh_Light = ["B_GEN_Offroad_01_gen_F", "B_GEN_Offroad_01_comms_F", "B_GEN_Offroad_01_covered_F"];
							ZMM_GUERVeh_Medium = [["I_LT_01_cannon_F","[_grpVeh,['Indep_Olive',1],['showCamonetHull',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"],["I_LT_01_AT_F","[_grpVeh,['Indep_Olive',1],['showCamonetHull',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];
							ZMM_GUERVeh_Heavy = [["I_APC_Wheeled_03_cannon_F","[_grpVeh,['Guerilla_02',1],['showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];
							ZMM_GUERVeh_Air = [["B_Heli_Light_01_F","_grpVeh setObjectTextureGlobal [0, selectRandom['\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_graywatcher_co.paa','\A3\air_f\heli_light_01\data\heli_light_01_ext_ion_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_wasp_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_shadow_co.paa']];"]];
							ZMM_GUERVeh_CasH = [["B_Heli_Light_01_dynamicLoadout_F","_grpVeh setObjectTextureGlobal [0, selectRandom['\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_graywatcher_co.paa','\A3\air_f\heli_light_01\data\heli_light_01_ext_ion_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_wasp_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_shadow_co.paa']];"]];
							ZMM_GUERVeh_CasP = [["I_Plane_Fighter_04_F","[_grpVeh,['CamoGrey',1]] call BIS_fnc_initVehicle;"]];
							ZMM_GUERVeh_Convoy = [["B_GEN_Offroad_01_gen_F",""],["B_GEN_Van_02_transport_F",""],["I_APC_Wheeled_03_cannon_F","[_grpVeh,['Guerilla_01',1,'Guerilla_03',0.5],['showSLATHull',0.3]] call BIS_fnc_initVehicle;"]];
							ZMM_GUERVeh_Static = ["I_G_HMG_02_high_F"];
						};
						default {
							ZMM_GUERFlag = ["Flag_FIA_F", "\A3\Data_F\Flags\Flag_FIA_CO.paa"];
							ZMM_GUERMan = ["I_G_Soldier_F","I_G_Soldier_LAT_F","I_G_Soldier_F","I_G_Soldier_SL_F","I_G_Soldier_F","I_G_Soldier_AR_F","I_G_Soldier_F","I_G_Soldier_LAT2_F"];
							ZMM_GUERGrp_Sentry = [configFile >> "CfgGroups" >> "Indep" >> "IND_G_F" >> "Infantry" >> "I_G_InfTeam_Light"];
							ZMM_GUERGrp_Team = [configFile >> "CfgGroups" >> "Indep" >> "IND_G_F" >> "Infantry" >> "I_G_InfTeam_Light"];
							ZMM_GUERGrp_Squad = [configFile >> "CfgGroups" >> "Indep" >> "IND_G_F" >> "Infantry" >> "I_G_InfSquad_Assault"];
							ZMM_GUERVeh_Truck = ["I_G_Van_01_transport_F"];
							ZMM_GUERVeh_Util = ["I_G_Offroad_01_repair_F","I_G_Van_01_fuel_F"];
							ZMM_GUERVeh_Light = ["I_G_Offroad_01_armed_F","I_G_Offroad_01_AT_F"];
							ZMM_GUERVeh_Medium = [["I_LT_01_cannon_F","[_grpVeh,['Indep_Olive',1],['showCamonetHull',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"],["I_LT_01_AT_F","[_grpVeh,['Indep_Olive',1],['showCamonetHull',0.5,'showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];
							ZMM_GUERVeh_Heavy = [["I_APC_Wheeled_03_cannon_F","[_grpVeh,['Guerilla_02',1],['showSLATHull',0.5]] call BIS_fnc_initVehicle;"]];
							ZMM_GUERVeh_Air = [["B_Heli_Light_01_F","_grpVeh setObjectTextureGlobal [0, selectRandom['\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_graywatcher_co.paa','\A3\air_f\heli_light_01\data\heli_light_01_ext_ion_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_wasp_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_shadow_co.paa']];"]];
							ZMM_GUERVeh_CasH = [["B_Heli_Light_01_dynamicLoadout_F","_grpVeh setObjectTextureGlobal [0, selectRandom['\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_graywatcher_co.paa','\A3\air_f\heli_light_01\data\heli_light_01_ext_ion_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_wasp_co.paa','\A3\air_f\heli_light_01\data\skins\heli_light_01_ext_shadow_co.paa']];"]];
							ZMM_GUERVeh_CasP = [["I_Plane_Fighter_04_F","[_grpVeh,['CamoGrey',1]] call BIS_fnc_initVehicle;"]];
							ZMM_GUERVeh_Convoy = [["I_G_Offroad_01_armed_F",""],["I_G_Van_01_transport_F",""],["I_APC_Wheeled_03_cannon_F","[_grpVeh,['Guerilla_01',1,'Guerilla_03',0.5],['showSLATHull',0.3]] call BIS_fnc_initVehicle;"]];
							ZMM_GUERVeh_Static = ["I_G_HMG_02_high_F"];
						};
					};

					
					if (isNil("zmm_brief_custom")) then {
						zmm_brief_custom = {
							params ['_entity'];
							if !(player == _entity) exitWith {};
							
							if (isNil "loc_mkr") then {
								private _mkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",("loc_mkr"),([0,0])] call BIS_fnc_stringToMarker;
								_mkr setMarkerShape "ELLIPSE";
								_mkr setMarkerColor "ColorWhite";
								_mkr setMarkerBrush 'Border';
								if ((ZMM_Debug)) then { 
									_mkr setMarkerAlpha 1;
								} else {
									_mkr setMarkerAlpha 0;
								};
								_mkr setMarkerSize [0,0];
							};

							if (isNil "ZMM_playerSide") then {
								missionNamespace setVariable ["ZMM_playerSide", side group player, true];
							};
							
							player setVariable ["ZMM_ZoneTypes_Desc", [["Airport","","\A3\ui_f\data\map\markers\nato\o_plane.paa"],["NameCityCapital","","\A3\ui_f\data\map\markers\nato\o_hq.paa"],["NameCity","","\A3\ui_f\data\map\markers\nato\o_installation.paa"],["NameVillage","","\A3\ui_f\data\map\markers\nato\o_support.paa"],["NameLocal","","\A3\ui_f\data\map\markers\nato\o_unknown.paa"],["Ambient","","\A3\ui_f\data\map\markers\nato\o_unknown.paa"],["Task","","\A3\ui_f\data\map\markers\handdrawn\start_CA.paa"]]];
							_ZoneTypes_IDs = [];
							for "_x" from 0 to ((count (player getVariable "ZMM_ZoneTypes_Desc")) -1) do {
								_ZoneTypes_IDs append [((player getVariable "ZMM_ZoneTypes_Desc")#_x)#0];
							};
							player setVariable ["ZMM_ZoneTypes_IDs", _ZoneTypes_IDs];
							
							player setVariable ["ZMM_QRFTypes_Desc", [["Reserve","",""],["Motorized","",""],["Mechanised","",""],["Armoured","",""],["Airborne","",""],["Infantry","",""],["Helicopter","",""],["Aircraft","",""]]];
							_QRFTypes_IDs = [];
							for "_x" from 0 to ((count (player getVariable "ZMM_QRFTypes_Desc")) -1) do {
								_QRFTypes_IDs append [((player getVariable "ZMM_QRFTypes_Desc")#_x)#0];
							};
							player setVariable ["ZMM_QRFTypes_IDs", _QRFTypes_IDs];

							ZMM_tasks sort true;
						};
					};
					
					if (isNil "ZZM_Mode") then { ZZM_Mode = missionNamespace getVariable ["f_param_ZMMMode", _setupMode] };
					if (isNil "ZZM_Diff") then { ZZM_Diff = missionNamespace getVariable ["f_param_ZMMDiff", _setupDiff#0] };
					if (isNil "ZZM_IED") then { ZZM_IED = missionNamespace getVariable ["f_param_ZMMIED", _setupIED] };
					if (isNil "ZZM_QRF") then { ZZM_QRF = missionNamespace getVariable ["f_param_ZMMQRF", _setupQRF] };

					if (([ZZM_Mode] in [[0]]) && (hasInterface)) exitWith { _nul = [_entity] spawn zmm_brief_custom; };

					if isServer then {
						EAST setFriend [RESISTANCE, 0];
						RESISTANCE setFriend [EAST, 0];
						WEST setFriend [RESISTANCE, 0];
						RESISTANCE setFriend [WEST, 0];
						
						if (isNil("zmm_fnc_aiUPS")) then {
							zmm_fnc_aiUPS = {
								if !isServer exitWith {};

								_cycle = 10;
								_safeDist = 200;
								_closeEnough = 50;
								_shareDist = 400; 
								_alertTime = 300;
								_artyTime = 300;
								_artyRural = 100;
								_artyUrban = 50;
								_unitSkill = [['aimingAccuracy',0.3],['aimingShake',0.15],['aimingSpeed',0.05],['commanding',1],['courage',1],['general',1],['reloadSpeed',1],['spotDistance',1],['spotTime',0.85]];

								if (isNil "ZAI_Debug") then { ZAI_Debug = !isMultiplayer };

								_ZAI_fnc_LogMsg = {
									params [["_lev", ""], ["_msg", ""]];
									if (ZAI_Debug || _lev != "DEBUG") then { 
										systemChat format["UPS %1: %2",_lev, _msg];
										diag_log text format["[UPS] %1: %2",_lev, _msg];
									};
								};

								_ZAI_fnc_setGroupVariable = {
									params ["_grp","_type","_tsk"];
									_grpID = _grp getVariable ["ZAI_ID", -1];
									_grp setVariable [format["ZAI_%1", toUpper _type], _tsk];
									if (_type == "Task") then { _grp setGroupIdGlobal [format["ZAI_%1_%2_%3", _grpID, _tsk, waypointBehaviour [_grp, currentWaypoint _grp]]]};
								};

								if (count _this < 2) exitWith {
									if (format["%1",_this]!="INIT") then {
										["ERROR", "Unit and marker name have to be defined!"] call _ZAI_fnc_LogMsg;
									};
								};

								_params = [];
								{ if ( typeName _x == typeName "" ) then { _params pushBack (toUpper _x) } } forEach _this;

								params ["_grp", "_areaMarker"];

								if (isNil "_areaMarker") exitWith { ["ERROR", "Area marker not defined. Typo, or name not enclosed in quotation marks?"] call _ZAI_fnc_LogMsg };	

								private ["_areaName","_areaSize"];

								if (typeName _areaMarker == typeName "") then {
									_areaName = _areaMarker;
									_areaSize = getMarkerSize _areaMarker;
									if !("SHOWMARKER" in _params) then { _areaMarker setMarkerAlpha 0; };
								} else {
									_areaName = vehicleVarName _areaMarker;
									_areaSize = triggerArea _areaMarker;
								};

								if (_areaSize#0 == 0 || count _areaSize == 0) exitWith { ["ERROR", format["Invalid Marker/Trigger: %1",_areaName]] call _ZAI_fnc_LogMsg };

								_minDist = (_areaSize#0 + _areaSize#1) / 4;

								sleep 3 + random 3;

								missionNamespace setVariable ["ZAI_ID", (missionNamespace getVariable ["ZAI_ID", 0]) + 1];

								if (isNil "_grp") exitWith { ["ERROR", format["Invalid Object %1", _grp]] call _ZAI_fnc_LogMsg };
								if (_grp isKindOf "Logic") exitWith { ["ERROR", format["Logic Passed: %1", _grp]] call _ZAI_fnc_LogMsg };
								if (typeName _grp == typeName objNull) then { _grp = group _grp };
								if ({alive _x} count units _grp == 0) then { ["ERROR", format["No living units in %1", _grp]] call _ZAI_fnc_LogMsg };

								if ((_grp getVariable ["ZAI_ID", -1]) > 0) exitWith { ["ERROR", format["UPS Already Active on %1", _grp]] call _ZAI_fnc_LogMsg };

								_grpIDx = str ZAI_ID;
								_grp setGroupId [format["ZAI_%1_%2", side _grp, _grpIDx]];
								_grp setVariable ["ZAI_ID", ZAI_ID];
								_grp setVariable ["ZAI_AREA", _areaName];

								missionNamespace setVariable [format ["ZAI_%1_%2", side _grp, _grpIDx], _grp];

								_grpVehicle = objNull;
								{ 
									if (!isNull assignedVehicle _x) then { _grpVehicle = vehicle _x };
								} forEach units _grp;

								_isAir = _grpVehicle isKindOf "air";
								_isBoat = _grpVehicle isKindOf "ship";
								_isCar = _grpVehicle isKindOf "car";
								_isTank = _grpVehicle isKindOf "tank" || _grpVehicle isKindOf "armored";
								_isArty = if (!isNull _grpVehicle) then { "Artillery" in getArray (configFile >> "CfgVehicles" >> typeOf _grpVehicle >> "availableForSupportTypes") } else { FALSE }; 
								_isStatic = _grpVehicle isKindOf "staticWeapon" || _grpVehicle isKindOf "static" || (!isNull _grpVehicle && isNull driver _grpVehicle);
								_isMan = !_isAir && !_isBoat && !_isCar && !_isTank && !_isStatic && !_isArty;

								if (!isNull _grpVehicle && _isMan) then { ["WARNING", format["[%1] was an unknown vehicle type", typeOf _grpVehicle]] call _ZAI_fnc_LogMsg; };
								if (!isNull _grpVehicle) then { _grp selectLeader driver _grpVehicle; [leader _grp] orderGetIn true; };

								_grpType = ([(["","Man"] select _isMan), (["","Air"] select _isAir), (["","Ship"] select _isBoat), (["","Vehicle"] select _isCar), (["","Armoured"] select _isTank), (["","Static"] select _isStatic), (["","Artillery"] select _isArty) ] - [""]);
								_grp setVariable ["ZAI_Type", _grpType apply { toUpper _x }];
								_grp setVariable ["ZAI_Vehicle", _grpVehicle];
								["DEBUG", format["[%1] was detected as %2 %3", groupID _grp, _grpType  joinString ", ", if (!isNull _grpVehicle) then { format["(%1)", typeOf _grpVehicle] } else {  format["(%1)", typeOf leader _grp] }]] call _ZAI_fnc_LogMsg;

								if _isAir then { _closeEnough = 1000 };

								_isSoldier = FALSE;
								{
									if (side _grp getFriend _x < 0.6) exitWith { _isSoldier = TRUE };
								} forEach [EAST, WEST, INDEPENDENT, CIVILIAN];

								_alliedUnitList = [];

								if _isSoldier then {
									{
										if ([side _x, side _grp] call BIS_fnc_areFriendly) then { _alliedUnitList pushBack _x };
									} forEach allUnits;
								};

								_alliedUnitList = _alliedUnitList - (switchableUnits + playableUnits) - (units _grp);

								_noFollow = ("NOFOLLOW" in _params);
								_noShare = ("NOSHARE" in _params);
								_holdMove = ("NOMOVE" in _params || "NOWP" in _params);
								if ("NOAI" in _params) then {_isSoldier = FALSE } else {
									{
										_ai = _x;
										_ai setSkill 1;
										_ai allowFleeing 0;
										{ _ai setSkill _x } forEach _unitSkill;
									} forEach units _grp;
								};

								if (_holdMove) then { [_grp, "Task", "HOLD"] call _ZAI_fnc_setGroupVariable; };

								if (!_holdMove && !("NOSLOW" in _params)) then {
									_grp setBehaviour "SAFE"; 
									_grp setCombatBehaviour "SAFE";
									_grp setSpeedMode "LIMITED";
									_grp setCombatMode "YELLOW";
									{ _x setUnitPos "AUTO" } forEach units _grp;
								};

								_unitPos = getPos leader _grp;
								if ("RANDOM" in _params) then {
									if (dynamicSimulationEnabled _grp) then { 
										_grp enableDynamicSimulation false;
										if (!isNull _grpVehicle && !_isStatic) then { 
											_grp spawn { sleep 30; _this enableDynamicSimulation true; };
										};
									};
									
									_randPos = _unitPos;

									_choosePos = TRUE;
									_counter = 0;
									while {_choosePos} do {
										_counter = _counter + 1;
										_randPos = [_areaMarker] call BIS_fnc_randomPosTrigger;
										
										if (isNull (nearestObject [_randPos, "MineGeneric"])) then {
											if (_isAir) exitWith { _choosePos = FALSE };
											if (_isBoat && surfaceIsWater _randPos) exitWith { _choosePos = FALSE };
											if (!surfaceIsWater _randPos) exitWith { _choosePos = FALSE };
										};
										
										if (_counter > 25) then { _choosePos = FALSE };
									};
									
									_randPos = [_randPos, 1, 50, 2, 0, 0, 0, [], [_unitPos,_unitPos]] call BIS_fnc_findSafePos vectorAdd [0,0,0];
									
									if (!isNull _grpVehicle && !_isStatic) then {
										_vehArray = (units _grp apply { assignedVehicle _x }) - [objNull];		
										_randPos = [_randPos, 1, 250, round ((sizeOf (typeOf _grpVehicle)) / 2), 0, 0, 0, [], [_randPos,_randPos]] call BIS_fnc_findSafePos vectorAdd [0,0,0];
										
										{ 
											_roads = _randPos nearRoads 250;
											
											if (count _roads > 0 && (_isCar || _isTank)) then {
												_x setVehiclePosition [getPos (selectRandom _roads), [], 25, "NONE"]; 
											} else {
												_x setVehiclePosition [_randPos, [], 50, "NONE"]; 
											};
											
											_randPos = getPos _x;
										} forEach (_vehArray arrayIntersect _vehArray);
									};
									
									{ 
										if (_x distance2D _randPos > 25 && vehicle _x == _x) then { 
											_x setVehiclePosition [_randPos, [], 5, "NONE"]; 
										};
									} forEach units _grp;
								};

								_trackGrp = ("TRACK" in _params || ZAI_Debug);
								if (_trackGrp) then {
									_grp addGroupIcon ["o_inf"];
									_grp setgroupIconParams [[side _grp, false] call BIS_fnc_sideColor,_grpIDx,0.8,TRUE];
									
									if !ZAI_Debug exitWith {};
									
									addMissionEventHandler ["GroupIconOverEnter", {
										params [
											"_is3D", "_group", "_waypointId",
											"_posX", "_posY",
											"_shift", "_control", "_alt"
										];
										
										_fnc_MarkDot = { 
											params ["_name","_pos","_color"];
											_mkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(_name),(_pos)] call BIS_fnc_stringToMarkerLocal;
											_mkr setMarkerShapeLocal "ICON";
											_mkr setMarkerTypeLocal "MIL_DOT";
											_mkr setMarkerColorLocal _color;
											_mkr setMarkerSizeLocal [.8,.8];
										};
										
										_fnc_MarkLine = {
											params ["_name","_from","_to","_color"];
											_la = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(_name),(_from)] call BIS_fnc_stringToMarkerLocal;
											_la setMarkerShapelocal "RECTANGLE";
											_la setMarkerColorlocal _color;
											_ld = ((_from distance _to) / 2);
											_lr = ((_to#0) - (_from#0)) atan2 ((_to#1) - (_from#1));
											_lp = [(_from#0) + (Sin (_lr) * _ld),(_from#1) + (Cos (_lr) * _ld),0];
											_la setMarkerSizelocal [_ld,1];
											_la setMarkerPosLocal _lp;
											_la setMarkerDirlocal (_lr - 90);
										};
										
										_wp = (wayPoints _group) select (currentWaypoint _group);
										
										_text = format["<br/><t size='1.25' font='TahomaB' color='#72E500'>%1 Group</t><br/>",groupId _group];
										
										_text = _text + format["%1 Units - %2", {alive _x } count units _group, (_group getVariable ["ZAI_Type", []]) joinString ", "];
										_text = _text + "<t align='left'>";
										_text = _text + format["Task: %1 (%2)<br/>",_group getVariable ["ZAI_Task", "-"], if (_group getVariable ["ZAI_WaitTime", time] >= time ) then { (_group getVariable ["ZAI_WaitTime", time]) - time } else { "-" }];
										_text = _text + format["Combat: %1<br/>", combatMode leader _group];
										_text = _text + format["Behaviour: (%1/%2)<br/>",_group getVariable ["ZAI_Behaviour", "-"], behaviour leader _group];
										_text = _text + format["Speed: (%1/%2)<br/>",_group getVariable ["ZAI_Speed", "-"], speedMode leader _group];
										_text = _text + format["Nearest Enemy: %1 (%2)<br/>",if (isNull (_group getVariable ["ZAI_EnemyUnit", objNull])) then { "None" } else { _group getVariable "ZAI_EnemyUnit" }, _group knowsAbout (_group getVariable ["ZAI_EnemyUnit", objNull])];
										_text = _text + format["Attack Pos: %1<br/>",_group getVariable ["ZAI_EnemyPos", []]];
										_text = _text + "<br/>";
										
										if (!isNil "_wp") then {
											_text = _text + format["Current WP (#%1)<br/>Type: %2<br/>Combat: %3<br/>Speed: %4<br/>", (currentWaypoint _group), waypointType _wp, waypointBehaviour _wp, waypointSpeed _wp];
										};
										_text = _text + "</t><br/><br/>";
										_text = _text + "<br/>";
										
										_lastPos = getPos leader _group;
										
										{
											_x params ["_grp","_wpID"];
											
											_color = switch (waypointBehaviour _x) do {
												case "CARELESS": { "ColorWhite" };
												case "SAFE": { "ColorGreen" };
												case "AWARE": { "ColorOrange" };
												case "COMBAT": { "ColorRed" };
												case "STEALTH": { "ColorBlue" };
												default { "ColorBlack" };
											};
											
											[format["gIcon_wp_dot_%1", _forEachIndex], getWPPos _x, _color] call _fnc_MarkDot;
											[format["gIcon_wp_line_%1", _forEachIndex], _lastPos, getWPPos _x, _color] call _fnc_MarkLine;

											_lastPos = getWPPos _x;
										} forEach (wayPoints _group select { _x#1 >= (currentWaypoint _group) });
										
										if !(_group getVariable ["ZAI_EnemyPos", []] in [[],[0,0,0]]) then {
											_pos = _group getVariable ["ZAI_EnemyPos", []];
											["gIcon_at_dot",_pos,"ColorRed"] call _fnc_MarkDot;
											["gIcon_at_line",getPos leader _group,_pos,"ColorRed"] call _fnc_MarkLine;
										};
											
										["IntelAdded", [_text]] remoteExec ['BIS_fnc_showNotification'];
									}];

									addMissionEventHandler ["GroupIconOverLeave", { { deleteMarkerLocal _x; } forEach (allMapMarkers select { ["gIcon_",_x] call BIS_fnc_inString }); hintSilent "" }];
								};	

								_lastDamage = 0;
								_lastCount = 0;
								_lastPos = _unitPos;

								_grp deleteGroupWhenEmpty TRUE; 

								_currCycle = _cycle;

								while {TRUE} do {
									if (isNil "_grp") exitWith { ["DEBUG", format["[%1] Exiting - Null Group", _grpIDx]] call _ZAI_fnc_LogMsg };
									if ([units _grp select { alive _x }] in [[[]]]) exitWith { ["DEBUG", format["[%1] Exiting - All Dead!", _grpIDx]] call _ZAI_fnc_LogMsg; };
									if ({isPlayer _x} count units _grp > 0) exitWith { _grp selectLeader ((units _grp select { isPlayer _x })#0); };

									private _wasStruck = FALSE;
									private _taskType = "PATROL";
									private _grpLeader = leader _grp;
									private _lastTime = _grp getVariable ["WaitTime", 0];
									
									private _newDamage = 0; 
									{
										if (damage _x > 0.2) then {
											_newDamage = _newDamage + (damage _x); 
											if (_newDamage > _lastDamage) then {
												["DEBUG", format["[%1] Taken Damage (%2/%3)", _grpIDx, _newDamage, _lastDamage]] call _ZAI_fnc_LogMsg;
												_lastDamage = _newDamage;
												_wasStruck = TRUE;
												_currCycle = 1;
											};
										};
									} forEach units _grp;
									
									_unitPos = getPos _grpLeader;
										
									_foundEnemy = _grpLeader findNearestEnemy _unitPos;
									
									if (_grpLeader distance2D _foundEnemy < _shareDist) then {
									
										_enemyOffset = (21 - ((_grp knowsAbout _foundEnemy) * 5)) * 5;
										_attackPos = _foundEnemy getPos [random _enemyOffset, random 360];
										_attackPos set [2,0];
										
										if ({ _x distance _attackPos < _safeDist } count (missionNamespace getVariable [format["ZAI_%1_ArtyQueue", side _grp],[]]) == 0) then { 
											missionNamespace setVariable [format["ZAI_%1_ArtyQueue", side _grp],(missionNamespace getVariable [format["ZAI_%1_ArtyQueue", side _grp],[]]) + [_attackPos]];
										};
										
										if (!_noShare && _grp knowsAbout _foundEnemy >= 1.5) then {
											{
												_kbType = (group _x) getVariable ["ZAI_Type",[]];
												_kb = switch (true) do {
													case ("VEHICLE" in _kbType): { 2 };
													case ("ARMOURED" in _kbType): { 3 };
													case ("STATIC" in _kbType): { 3 };
													case ("AIR" in _kbType): { 4 };
													default { 1.5 };
												};
												
												if (_x knowsAbout _foundEnemy < _kb) then {
													["DEBUG", format["[%1] Revealing %2 to %3 (%4 to %5)", _grpIDx, _foundEnemy, group _x, _x knowsAbout _foundEnemy, _kb]] call _ZAI_fnc_LogMsg;
													(group _x) reveal [_foundEnemy, _kb];
												};
											} forEach (_alliedUnitList select { 
												alive _x &&
												local _x &&
												((_x distance _foundEnemy < _shareDist) || "STATIC" in (_x getVariable ["ZAI_Type",[]])) &&
												leader _x == _x && 
												(_grp getVariable ["ZAI_AREA", _areaName]) == _areaName
											});
										};
										
										if (time < _lastTime || (getPosATL _foundEnemy) # 0 > 25) exitWith {};

										["DEBUG", format["[%1] Spotted %2 - %3m", _grpIDx, name _foundEnemy, round (_grpLeader distance2D _foundEnemy)]] call _ZAI_fnc_LogMsg;
										
										if (_wasStruck) then {
											_grp enableAttack true;
											 
											if (_isMan) then {
												{ 
													_x setUnitPosWeak "DOWN";
													_x doWatch _foundEnemy;
													if (random 1 > 0.5) then { sleep 1; _x selectWeapon "throw"; _x forceWeaponFire ["SmokeShellMuzzle","SmokeShellMuzzle"] };
												} forEach units _grp;
												
												(selectRandom units _grp) suppressFor (10 + random 10);
											};
										};
													
										_lastTime = time + _alertTime;
										
										if (_isStatic || !_isSoldier) exitWith {};
										
										_holdMove = FALSE;
												
										_moveDist = _safeDist min (_grpLeader distance _foundEnemy);
										
										_avoidPos = _grpLeader getRelPos [_moveDist,(_grpLeader getRelDir _foundEnemy) - (90 + random 25 - random 25)];
										_flankPos = _foundEnemy getRelPos [_moveDist,(_foundEnemy getRelDir _grpLeader) + (90 + random 25 - random 25)];
										
										_avoidPosR = _grpLeader getRelPos [_moveDist,(_grpLeader getRelDir _foundEnemy) + (90 + random 25 - random 25)];
										_flankPosR = _foundEnemy getRelPos [_moveDist,(_foundEnemy getRelDir _grpLeader) - (90 + random 25 - random 25)];
												
										if (random 1 > 0.5) then { _avoidPos = _avoidPosR; _flankPos = _flankPosR };	
										
										if (!isNull _grpVehicle) then {
											_avoidRoad = [_avoidPos, 100] call BIS_fnc_nearestRoad;
											if (!isNull _avoidRoad) then { _avoidPos = getPos _avoidRoad };
										
											_flankRoad = [_flankPos, 100] call BIS_fnc_nearestRoad;
											if (!isNull _flankRoad) then { _flankPos = getPos _flankRoad };
										};
										
										_movePos = _avoidPos;
										{
											if (_x#0 inArea _areaMarker) exitWith { _movePos = _x#0 };
										} forEach (selectBestPlaces [_foundEnemy, _safeDist,"(6*hills + 2*forest + 4*houses + 1.5*meadow + 2*trees) - (1000*sea) - (100*deadbody)", 100, 5]);
												
										_evadeWPs = [_avoidPos, _flankPos, _attackPos];
										
										{ 
											if (surfaceIsWater _x) then { _evadeWPs deleteAt _forEachIndex };
										} forEach _evadeWPs;	
										
										if (count _evadeWPs == 0) exitWith {}; 
										
										if (surfaceIsWater _movePos) then { _movePos = selectRandom _evadeWPs };
										
										while {count wayPoints _grp > 1} do { deleteWaypoint ((wayPoints _grp)#0); sleep 0.5; };
										
										if (_wasStruck && _isMan) then {
											if (count units _grp > 2) then {
												_wp = _grp addWaypoint [_attackPos, 0];
												_wp setWaypointType "SAD";
												_wp setWaypointSpeed "NORMAL";
												_wp setWaypointFormation "WEDGE";
												_grp setCurrentWaypoint _wp;
												_grp enableAttack true;
												
												[_grp, "Task", "ATTACK"] call _ZAI_fnc_setGroupVariable;
											} else {
												_smoke = (([ATLtoASL (_grpLeader getPos [random 3, ( _attackPos getDir _grpLeader)]), ("SmokeShell"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0); 
												_wp = _grp addWaypoint [( _grpLeader getPos [_safeDist, ( _attackPos getDir _grpLeader)]), 0];
												_wp setWaypointSpeed "NORMAL";
												_wp setWaypointStatements ["true", "(group this) enableAttack true"];
												_wp setWaypointFormation "WEDGE";
												_grp setCurrentWaypoint _wp;
												_grp enableAttack false;
												{ doStop _x; _x doFollow _grpLeader } forEach units _grp; 
												
												[_grp, "Task", "RETREAT"] call _ZAI_fnc_setGroupVariable;
											};
										} else {
											_taskType = selectRandom ["EVADE","EVADE","FLANK","ATTACK","ASSAULT"];
											[_grp,"Task",_taskType] call _ZAI_fnc_setGroupVariable;
											switch (_taskType) do {
												case "EVADE": { _evadeWPs = [_movePos] };
												case "FLANK": { _evadeWPs = _evadeWPs - [_attackPos] };
												case "ATTACK": { _evadeWPs = _evadeWPs - [_avoidPos] - [_flankPos] };
												default {};
											};
									
											{
												_wp = _grp addWaypoint [_x, 0];
												_wp setWaypointType "MOVE";
												_wp setWaypointSpeed "NORMAL";
												_wp setWaypointBehaviour "AWARE";
												_wp setWaypointCompletionRadius (_closeEnough / 2);
												
												if (_isMan) then { _wp setWaypointFormation "WEDGE"; };
												
												if (_forEachIndex == 0) then { _grp setCurrentWaypoint _wp };
												if ([_x] in [[_flankPos]] && !canFire (vehicle _grpLeader)) then { _wp setWaypointType "GETOUT"; _wp setWaypointStatements ["true", "{ unassignVehicle _x; [_x] orderGetIn false; } forEach units this;"]; };
												if ([_x] in [[_attackPos]]) then { _wp setWaypointSpeed "NORMAL"; _wp setWaypointType "SAD"; };
											} forEach _evadeWPs;
											
											["DEBUG", format["[%1] Task %2 - %3 WPs added.", _grpIDx, _taskType, count _evadeWPs]] call _ZAI_fnc_LogMsg;
										};

										_lastTime = time + _alertTime;
									};
												
									
									if (!_isStatic && !_holdMove) then {
									
										
										_combatArea = (_alliedUnitList findIf { side _grp == side _x && _grpLeader distance leader _x < (_shareDist * 2) && behaviour leader _x == "COMBAT" && alive leader _x } > 0);

										
										if ([(count wayPoints _grp) - (currentWaypoint _grp)] in [[0]]) then {	
											
											_newGrpPos = getPos _grpLeader;				
														
											_tries = 0;					
											while {(_unitPos distance2D _newGrpPos) < _minDist} do {
												_tries = _tries + 1;
												_tempPos = [_areaMarker] call BIS_fnc_randomPosTrigger;					
												_roads = (_tempPos nearRoads _safeDist) select { count (roadsConnectedTo _x) > 0};
												_water = surfaceIsWater _tempPos;
												
												
												if _isAir exitWith { _newGrpPos = _tempPos };
												
												
												if (_water && _isBoat) exitWith { _newGrpPos = _tempPos };
												
												
												if (!_water && (_isCar || _isTank) && !([_roads] in [[[]]])) exitWith { _newGrpPos = getPos (_roads#0) };
												
												
												if (!_water && _isMan && !([_roads] in [[[]]]) && random 1 > 0.5) exitWith { _newGrpPos = getPos (_roads#0) };
												if (!_water && _isMan) exitWith { _newGrpPos = _tempPos; };
												
												if (_tries > 25) exitWith { 
													["WARNING", format["[%1] Tried %2 times to find WP [%3]",_grpIDx, _tries, _grpType]] call _ZAI_fnc_LogMsg;
													_newGrpPos = _tempPos
												};
												
												sleep 0.1;
											};
											
											_newGrpPos set [2,0];
											
											

											_wp = _grp addWaypoint [_newGrpPos, 25];
											_wp setWaypointType (["MOVE","SAD"] select _isAir);
											_wp setWaypointCompletionRadius (_closeEnough / 2);
											
											_wp setWaypointCombatMode "YELLOW";
											_wp setWaypointFormation "FILE";
											_wp setWaypointBehaviour (["SAFE", "AWARE"] select (!isNull _foundEnemy || _combatArea ));
											_wp setWaypointSpeed (["LIMITED", "NORMAL"] select (!isNull _foundEnemy || _combatArea ));
											
											_grp setCurrentWaypoint _wp;
											
											if (isNull _foundEnemy || !_combatArea) then { [_grp, "Task", "PATROL"] call _ZAI_fnc_setGroupVariable };
											
											if ("Man" in _grpType) then { _grpLeader commandMove _newGrpPos; { doStop _x; _x doFollow _grpLeader } forEach units _grp; }; 
										} else {
											
											if (_combatArea && combatBehaviour _grp == "SAFE") then {
												_grp setBehaviour "AWARE";
												_grp setCombatBehaviour "AWARE";
												_grp setSpeedMode "NORMAL";
											};
										};
									};
									
									
									if _isArty then {					
										_artyQueue = missionNamespace getVariable [format["ZAI_%1_ArtyQueue", side _grp],[]];
										_artyRadius = 0;
										_artyTarget = [0,0,0];
										
										if (count _artyQueue == 0) exitWith {};
										
										if (!canFire _grpVehicle) exitWith { 
											_isArty = false;
											["DEBUG", format["[%1] Artillery Aborted (Gun Cannot Fire)", _grpIDx]] call _ZAI_fnc_LogMsg;
										};
										
										if (_lastTime > time) exitWith {
											["DEBUG", format["[%1] Artillery Waiting (Ready: %2s - Waiting: %3)", _grpIDx, _lastTime - time, count _artyQueue]] call _ZAI_fnc_LogMsg;
										};
										
										
										{
											_artyRadius = if (_x distance (nearestBuilding _x) < 25) then { _artyUrban } else { _artyRural };
											_artyEntities = (_x nearEntities (_artyRadius - 50)) select { !isAgent teamMember _x && side _x in [WEST, EAST, INDEPENDENT, CIVILIAN] };
											
											_bluClose = { side _x in [side _grp, CIVILIAN] } count _artyEntities;
											_opfClose = { side _x != side _grp && side _x != CIVILIAN } count _artyEntities;

											
											if (_opfClose > 0 && _bluClose < _opfClose) exitWith {				
												_artyTarget = _x;
												["DEBUG", format["[%1] Artillery Target Found %2 (BLU: %3 OPF: %4)", _grpIDx, _artyTarget, _bluClose, _opfClose]] call _ZAI_fnc_LogMsg;
											};
											
											
											_artyQueue = _artyQueue - [_x];
											["DEBUG", format["[%1] Artillery Removing %2 (BLU: %3 OPF: %4)", _grpIDx, _x, _bluClose, _opfClose]] call _ZAI_fnc_LogMsg;
										} forEach _artyQueue;
										
										
										missionNamespace setVariable [format["ZAI_%1_ArtyQueue", side _grp], (_artyQueue - (_artyQueue select { _x distance _artyTarget <= _artyRadius }))];
										
										if ([_artyTarget] in [[[0,0,0]]]) exitWith { 
											_lastTime = time + 10;
											["DEBUG", format["[%1] Artillery Aborted - No Valid Targets", _grpIDx]] call _ZAI_fnc_LogMsg;
										};
										
										if !(_artyTarget inRangeOfArtillery [[_grpLeader], (getArtilleryAmmo [_grpVehicle] select 0)]) exitWith {
											_lastTime = time + 10;
											["DEBUG", format["[%1] Artillery Aborted - Invalid Range", _grpIDx]] call _ZAI_fnc_LogMsg;
										};

										["DEBUG", format["[%1] Artillery Mission Started %2", _grpIDx, _artyTarget]] call _ZAI_fnc_LogMsg;
										_lastTime = time + _artyTime + 30;
										
										if (sunOrMoon > 0.9) then {
											private _tempSmoke = (([ATLtoASL (_artyTarget getPos [random 5, random 360]), ("SmokeShellRed"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0); 
										} else {
											for "_i" from 1 to 3 do {
												private _rPos = _artyTarget getPos [25, random 360];
												_rPos set [2,150];
												private _tempFlare = (([ATLtoASL (_rPos), ("F_20mm_Red"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
												[_tempFlare, [0,-90,0]] call BIS_fnc_setObjectRotation;
												sleep 3;
											};
										};
										
										sleep 30;
										
										for "_i" from 1 to 6 do {
											_grpLeader commandArtilleryFire [(_artyTarget getPos [random _artyRadius, random 360]), (getArtilleryAmmo [vehicle _grpLeader] select 0), 1];
											["DEBUG", format["[%1] Artillery Mission Round Out (%2 of 6)", _grpIDx, _i]] call _ZAI_fnc_LogMsg;
											sleep 5 + random 10;
										};
										
										(vehicle _grpLeader) setVehicleAmmo 1;
										missionNamespace setVariable [format["ZAI_%1_ArtyRequest", side _grp], []];
										
									};

									
									if (!_isStatic && !_holdMove && !dynamicSimulationEnabled _grp && !dynamicSimulationEnabled _grpVehicle) then {
										if ((_lastPos distance2D getPos _grpLeader) == 0 && !_wasStruck) then {
											_lastCount = _lastCount + 1;
											
											
											if (!_isMan) then {
												if (_lastCount == 10) exitWith { 
													while {count wayPoints _grp > 0} do { deleteWaypoint ((wayPoints _grp)#0); sleep 0.5; };
													_wp = _grp addWaypoint [getPos _grpLeader, 0];
													["WARNING", format["[%1] Vehicle held for %2 cycles - Clearing WPs", _grpIDx, _lastCount]] call _ZAI_fnc_LogMsg;
												};
												if (_lastCount == 20) exitWith {
													vehicle _grpLeader setDamage 0;
													_grp leaveVehicle vehicle _grpLeader;
													["WARNING", format["[%1] Vehicle held for %2 cycles - Repairing", _grpIDx, _lastCount]] call _ZAI_fnc_LogMsg;
												};
												if (_lastCount == 30) exitWith {
													vehicle _grpLeader setFuel 0.05;
													_grp leaveVehicle vehicle _grpLeader;
													["WARNING", format["[%1] Vehicle held for %2 cycles - Abandoning", _grpIDx, _lastCount]] call _ZAI_fnc_LogMsg;
												};
											};
											
											
											if (_isMan) then {
												if (_lastCount == 10) exitWith {
													while {count wayPoints _grp > 1} do { deleteWaypoint ((wayPoints _grp)#0); sleep 0.5; };
													["WARNING", format["[%1] Leader held for %2 cycles - Clearing WPs", _grpIDx, _lastCount]] call _ZAI_fnc_LogMsg;
												};
												if (_lastCount == 15) exitWith {
													{
														_x setPos ([getPos _x, 1, 25, 2, 0, 0, 0, [], [getPos _x, getPos _x]] call BIS_fnc_findSafePos vectorAdd [0,0,0]);
													} forEach units _grp;
													["WARNING", format["[%1] Leader held for %2 cycles - Moving to SafePos", _grpIDx, _lastCount]] call _ZAI_fnc_LogMsg;
												};
												if (_lastCount MOD 5 == 0) then {
													(_grpLeader) selectWeapon primaryWeapon (_grpLeader);
													["WARNING", format["[%1] Leader held for %2 cycles - Resetting Weapon", _grpIDx, _lastCount]] call _ZAI_fnc_LogMsg;
												};
											};
										} else {
											_lastCount = 0;
										};
									};
									
									_lastPos = getPos _grpLeader;
									
									[_grp, "EnemyUnit", _foundEnemy] call _ZAI_fnc_setGroupVariable;
									[_grp, "EnemyPos", getPos _foundEnemy] call _ZAI_fnc_setGroupVariable;
									[_grp, "Behaviour", behaviour leader _grp] call _ZAI_fnc_setGroupVariable;
									[_grp, "Speed", speedMode _grp] call _ZAI_fnc_setGroupVariable;
									[_grp, "WaitTime", _lastTime] call _ZAI_fnc_setGroupVariable;
									
									
									if (_currCycle < _cycle) then { _currCycle = _currCycle + 0.5};
									sleep _currCycle;
								};

								["DEBUG", format["[%1] Loop Aborted!", _grpIDx]] call _ZAI_fnc_LogMsg;
							};
						};
						if (isNil("zmm_fnc_areaIED")) then {
							zmm_fnc_areaIED = {
								if !isServer exitWith {};

								params [
									["_zoneID", 0],
									["_centre", (missionNamespace getVariable [ format[ "ZMM_%1_Location", _this#0], [0,0,0]])],
									["_count", (missionNamespace getVariable [ format[ "ZMM_%1_IEDs", _this#0], 10])],
									["_radius", (missionNamespace getVariable [ format[ "ZMM_%1_Radius", _this#0], 300])],
									["_side", (missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST])]
								];

								if ([_centre] in [[[0,0,0]]]) exitWith { ["ERROR", format["Zone%1 - Invalid IED location: %1 (%2)", _zoneID, _centre]] call zmm_fnc_logMsg };

								private _mineLocs = [];

								{
									private _road = _x;
									if ({ _road distance2D _x < 100 } count _mineLocs == 0) then {
										if (count roadsConnectedTo _road > 0) then {
											_mineLocs pushBack (_road getPos [(boundingBoxReal _road#0#0) * 0.5, ((_road getDir ((roadsConnectedTo _road)#0)) + 90) + selectRandom [0,180]]); 
										};
									};
								} forEach (_centre nearRoads _radius);

								if (count _mineLocs < _count) then {
									for "_i" from 0 to (_count) do {
										_mineLocs pushBack (_centre getPos [25 + random 50, random 360]);
									};
								};

								["DEBUG", format["Zone%1 - Spawning IEDs: %2 in %4 positions (%3m)", _zoneID, ((_count * 3) max 6), _radius, count _mineLocs]] call zmm_fnc_logMsg;

								for "_i" from 0 to ((_count * 3) max 6) do {
									if ([_mineLocs] in [[[]]]) exitWith {};
									
									private _minePos = selectRandom _mineLocs;
									_mineLocs deleteAt (_mineLocs find _minePos);
									
									private _isUrban = _minePos distance2D nearestBuilding _minePos < 100;

									
									private _tempObj = (([AGLtoASL (_minePos), (selectRandom ["Land_Garbage_square3_F", "Land_Garbage_square5_F", "Land_Garbage_line_F"]), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_tempObj setVectorUp surfaceNormal getPos _tempObj;
									[_tempObj,[(random 360),(((_tempObj) call BIS_fnc_getPitchBank) select 0),(((_tempObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
									
									
									if (_count < _i) then {
										private _mineObj = (([(_minePos vectorAdd [0,0,0.1]), 0, "IEDUrbanSmall_Remote_Ammo", (_side)] call BIS_fnc_spawnVehicle) select 0);
										
										[_mineObj,[(random 360),(((_mineObj) call BIS_fnc_getPitchBank) select 0),(((_mineObj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
										
										private _mineMkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format ["OBLK_%1_%2", _zoneID, _i]),(_minePos)] call BIS_fnc_stringToMarkerLocal;
										_mineMkr setMarkerTypeLocal "mil_dot";
										_mineMkr setMarkerColorLocal "ColorRed";
										_mineMkr setMarkerTextLocal format["IED_%1", _i];
									
										private _mineTrigger = (([[_mineObj, "GROUND"], "EmptyDetector", 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_mineTrigger setTriggerActivation ["ANYPLAYER", "PRESENT", false];
										_mineTrigger setTriggerArea [10, 10, 5, false];
										_mineTrigger setTriggerStatements [ "{ stance _x != 'PRONE' && speed _x > 6 } count thisList > 0",
											"if ({ thisTrigger distance2D _x < 1.5} count allMines > 0) then { [getPosASL thisTrigger, (selectRandom ['Bo_Mk82','Rocket_03_HE_F','M_Mo_82mm_AT_LG','Bo_GBU12_LGB','Bo_GBU12_LGB_MI10','HelicopterExploSmall']), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects;
											(([getPosASL thisTrigger, ('Crater'), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
											{ deleteVehicle _x } forEach (allMines select { thisTrigger distance2D _x < 1.5 }) }; deleteVehicle thisTrigger;", "" ];
									};
								};
							};
						};
						if (isNil("zmm_fnc_areaGarrison")) then {
							zmm_fnc_areaGarrison = {
								if !isServer exitWith {};

								params [["_zoneID", 0], ["_enemyCount", -1], ["_bPos",[]]];

								private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], [0,0,0]];
								private _side = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
								private _buildings = missionNamespace getVariable [format["ZMM_%1_Buildings", _zoneID], []];
								private _menArray = missionNamespace getVariable [format["ZMM_%1Man", _side], []];

								if (_enemyCount < 0) then { 
									_enemyCount = missionNamespace getVariable [format[ "ZMM_%1_Garrison", _zoneID ], 14];
									missionNamespace setVariable [format[ "ZMM_%1_Garrison", _zoneID ], 0];
								};

								if (_enemyCount < 1) exitWith {};

								if ([count _buildings] in [[0]] && [count _bPos] in [[0]]) exitWith {};

								if ([count _bPos] in [[0]]) then {
									{
										if (count (_x buildingPos -1) >= 4) then {
											_bPos append (_x buildingPos -1);
										};
									} forEach _buildings;
								};

								["DEBUG", format["Zone%1 - Spawning Garrison: %2 units (%3 positions)", _zoneID, _enemyCount, count _bPos]] call zmm_fnc_logMsg;

								if ([count _menArray] in [[0]]) exitWith { ["ERROR", format["Zone%1 (%2) - No valid units passed, were global unit variables declared?", _zoneID, _side]] call zmm_fnc_logMsg };

								private _grp = [[0,0,0], _side, 0] call BIS_fnc_spawnGroup;

								for "_i" from 1 to (_enemyCount) do {
									 _unitType = selectRandom _menArray;
									 _inHouse = true;
									 
									if (count _bPos == 0) exitWith {
										
										if (random 1 > 0.8) then {
											_unit = (([([[[([0,0,0]), 150]], []] call BIS_fnc_randomPos), 0, (_unitType), (_grp)] call BIS_fnc_spawnVehicle) select 0);
											[_unit] joinSilent _grp; 
											_unit setPos (([_centre, random 150, random 360] call BIS_fnc_relPos) findEmptyPosition [0, 25, _unitType]);
											_unit setFormDir ((_unit getRelDir _centre) - 180);
											[_unit,[(((_unit getRelDir _centre) - 180)),(((_unit) call BIS_fnc_getPitchBank) select 0),(((_unit) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
											_unit setUnitPos "MIDDLE";
											_unit setBehaviour "SAFE";
											_inHouse = false;
										};
									};
									
									_newPos = selectRandom _bPos;
									_bPos = _bPos - [_newPos];
									
									if (count (_newPos nearEntities ["Man", 1]) < 1) then {
										_unit = (([([[[([0,0,0]), 150]], []] call BIS_fnc_randomPos), 0, (_unitType), (_grp)] call BIS_fnc_spawnVehicle) select 0);
										[_unit] joinSilent _grp; 
										_unit setPosATL _newPos;

										
										if (random 1 > 0.7) then { doStop _unit } else { _unit disableAI "PATH" };

										[_unit] spawn zmm_fnc_unitDirPos;
									};
								};

								_grp setVariable ["VCM_DISABLE", true];
								_grp enableDynamicSimulation true;

								{ _x addCuratorEditableObjects [units _grp, true] } forEach allCurators;

								["DEBUG", format["Zone%1 - Garrison Centre - Made: %2 units", _zoneID, count units _grp]] call zmm_fnc_logMsg;
							};
						};
						if (isNil("zmm_fnc_areaMilitarise")) then {
							zmm_fnc_areaMilitarise = {
								if !isServer exitWith {};

								params [["_zoneID", 0], ["_enemyCount", 30]];

								private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], [0,0,0]];
								private _side = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
								private _menArray = missionNamespace getVariable [format["ZMM_%1Man", _side], []];

								if ([count _menArray] in [[0]]) exitWith { ["ERROR", format["Zone%1 (%2) - No valid units passed, were global unit variables declared?", _zoneID, _side]] call zmm_fnc_logMsg };


								private _milPrimary = [
									"Land_Cargo_HQ_V1_F","Land_Cargo_HQ_V2_F","Land_Cargo_HQ_V3_F","Land_Cargo_HQ_V4_F","Land_Medevac_HQ_V1_F",
									"Land_Cargo_House_V1_F","Land_Cargo_House_V2_F","Land_Cargo_House_V3_F","Land_Cargo_House_V4_F","Land_Medevac_house_V1_F",
									"Land_Cargo_Patrol_V1_F","Land_Cargo_Patrol_V2_F","Land_Cargo_Patrol_V3_F","Land_Cargo_Patrol_V4_F",
									"Land_Cargo_Tower_V1_F","Land_Cargo_Tower_V2_F","Land_Cargo_Tower_V3_F","Land_Cargo_Tower_V4_F",
									"Land_HBarrier_01_tower_green_F","Land_HBarrier_01_big_tower_green_F","Land_BagBunker_01_large_green_F","Land_BagBunker_01_small_green_F",
									"Land_HBarrierTower_F","Land_BagBunker_Tower_F","Land_BagBunker_Large_F","Land_BagBunker_Small_F",
									"Land_Airport_01_controlTower_F","Land_Airport_02_controlTower_F",
									"Land_Barracks_01_camo_F","Land_Barracks_01_dilapidated_F","Land_Barracks_01_grey_F","Land_Barracks_06_F",
									"Land_Bunker_01_HQ_F","Land_Bunker_01_big_F","Land_Bunker_01_small_F","Land_Bunker_01_tall_F",
									"Land_Cargo_Tower_V1_No1_F","Land_Cargo_Tower_V1_No2_F","Land_Cargo_Tower_V1_No3_F","Land_Cargo_Tower_V1_No4_F","Land_Cargo_Tower_V1_No5_F","Land_Cargo_Tower_V1_No6_F","Land_Cargo_Tower_V1_No7_F",
									"Land_ControlTower_01_F","Land_ControlTower_02_F",
									"Land_DeerStand_01_F","Land_DeerStand_02_F",
									"Land_GuardTower_01_F","Land_GuardTower_02_F","Land_MilOffices_V1_F",
									"Land_i_Barracks_V1_F","Land_i_Barracks_V2_F","Land_u_Barracks_V2_F","Land_vn_airport_02_controltower_f",
									"Land_vn_b_gunpit_01","Land_vn_b_mortarpit_01","Land_vn_b_tower_01","Land_vn_b_trench_bunker_04_01","Land_vn_b_trench_firing_05","Land_vn_bagbunker_01_large_green_f","Land_vn_bagbunker_01_small_green_f","Land_vn_barracks_01_camo_f","Land_vn_barracks_01_dilapidated_f","Land_vn_barracks_01_grey_f","Land_vn_barracks_06_f","Land_vn_bunker_big_01","Land_vn_bunker_big_02","Land_vn_bunker_small_01","Land_vn_controltower_01_f",
									"Land_vn_hut_tower_01","Land_vn_hut_tower_02",
									"Land_vn_i_barracks_v1_dam_f","Land_vn_i_barracks_v1_f","Land_vn_i_barracks_v2_dam_f","Land_vn_i_barracks_v2_f",
									"Land_vn_o_bunker_02","Land_vn_o_bunker_03","Land_vn_o_bunker_04",
									"Land_vn_o_platform_01","Land_vn_o_platform_02","Land_vn_o_platform_03","Land_vn_o_platform_04","Land_vn_o_platform_05","Land_vn_o_platform_06",
									"Land_vn_o_shelter_02","Land_vn_o_shelter_05",
									"Land_vn_o_snipertree_01","Land_vn_o_snipertree_02","Land_vn_o_snipertree_03","Land_vn_o_snipertree_04","Land_vn_o_tower_01","Land_vn_o_tower_02","Land_vn_o_tower_03","Land_vn_pillboxbunker_01_big_f","Land_vn_pillboxbunker_01_hex_f","Land_vn_pillboxbunker_02_hex_f","Land_vn_radar_01_antenna_base_f","Land_vn_radar_01_hq_f",
									"Land_vn_tent_01_01","Land_vn_tent_01_02","Land_vn_tent_01_03","Land_vn_tent_01_04","Land_vn_tent_02_01","Land_vn_tent_02_02","Land_vn_tent_02_03","Land_vn_tent_02_04",
									"vn_o_snipertree_01","vn_o_snipertree_02","vn_o_snipertree_03","vn_o_snipertree_04"
								];

								private _milGrp = [[0,0,0], _side, 0] call BIS_fnc_spawnGroup;
								private _milBlds = nearestObjects [_centre, _milPrimary, 500];

								{
									if (count units _milGrp > _enemyCount) exitWith {};
									
									if (random 1 > 0.25 || count (_x buildingPos -1) < 5) then {
										private _pos = selectRandom (_x buildingPos -1);
										
										if (count (_pos nearEntities ["Man", 1]) < 1) then {
											private _type = selectRandom _menArray;	
											private _unit = (([([[[([0,0,0]), 150]], []] call BIS_fnc_randomPos), 0, (_type), (_milGrp)] call BIS_fnc_spawnVehicle) select 0);
											[_unit] joinSilent _milGrp; 
											_unit setPosATL _pos;
											
											
											if (random 1 > 0.7) then { doStop _unit } else { _unit disableAI "PATH" };
											
											[_unit] spawn zmm_fnc_unitDirPos;
										};
									};
								} forEach _milBlds;

								if (count units _milGrp > 0) then {
									["DEBUG", format["Zone%1 - Garrison Military - Made: %2 units", _zoneID, count units _milGrp]] call zmm_fnc_logMsg;
									
									_milGrp setVariable ["VCM_DISABLE", true];
									_milGrp enableDynamicSimulation true;

									
									{ _x addCuratorEditableObjects [units _milGrp, true] } forEach allCurators;
								};
							};
						};
						if (isNil("zmm_fnc_areaPatrols")) then {
							zmm_fnc_areaPatrols = {
								params [ ["_zoneID", 0], ["_locType", ""], ["_markerOverride", ""] ];

								private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], [0,0,0]];
								private _side = missionNamespace getVariable [format["ZMM_%1_enemySide", _zoneID], EAST];

								private _sentry = missionNamespace getVariable [format["ZMM_%1Grp_Sentry", _side], []];
								private _team = missionNamespace getVariable [format["ZMM_%1Grp_Team", _side], []];
								private _squad = missionNamespace getVariable [format["ZMM_%1Grp_Squad", _side], []];
								private _light = missionNamespace getVariable [format["ZMM_%1Veh_Light", _side], []];
								private _medium = missionNamespace getVariable [format["ZMM_%1Veh_Medium", _side], []];
								private _heavy = missionNamespace getVariable [format["ZMM_%1Veh_Heavy", _side], []];
								private _cas = missionNamespace getVariable [format["ZMM_%1Veh_CasH",_side], (missionNamespace getVariable [format["ZMM_%1Veh_CasP",_side],[]])];
								private _veh = objNull;

								if ([_locType] in [[""]]) then { _locType = type (nearestLocation [_centre,""]) };

								_fnc_spawnGroup = {
									params ["_zoneID", "_centre", ["_types", []], ["_marker", ""], "_count"];
									
									if (round _count <= 0) exitWith {};
									if ([count _types] in [[0]]) exitWith { ["ERROR", format["Zone%1 (%2) - No valid units passed, were global unit variables declared?", _zoneID, _side]] call zmm_fnc_logMsg };
									
									if ([_markerOverride] in [[""]]) then { 
										if ([_marker] in [[""]]) then { 
											_marker = format["MKR_%1_MAX", _zoneID];
										};
									} else {
										_marker = _markerOverride;
									};

									for [{_i = 0}, {_i < _count}, {_i = _i + 1}] do {
										_group = grpNull;
										
										
										(selectRandom _types) params [["_type", objNull], ["_customInit", ""]];

										if (typeName _type == typeName "") then {
											if (isClass (configFile >> "CfgVehicles" >> _type)) then {
												_isAir = false;
												if ("Air" in ([(configFile >> "CfgVehicles" >> _type), true] call BIS_fnc_returnParents)) then { _isAir = true };
																
												
												_roads = (getMarkerPos _marker nearRoads (getMarkerSize _marker select 0)) select { count (roadsConnectedTo _x) > 0};

												if (count _roads > 0) then { _centre = position (selectRandom _roads) };
												_veh = (([if _isAir then {[0,0,500]} else {[_centre, 0, 150, 10, 0, 20] call BIS_fnc_findSafePos vectorAdd [0,0,0]}, 0, _type, _side] call BIS_fnc_spawnVehicle) select 0);
												[_veh, true] remoteExec ["enableDynamicSimulation", 0, true];
												
												if !([_customInit] in [[""]]) then { _grpVeh = _veh; [] spawn {_customInit}; };
												if !_isAir then { _veh enableDynamicSimulation true };
												
												
												if (side driver _veh != _side) then {
													_group = [[0,0,0], _side, 0] call BIS_fnc_spawnGroup;
													(crew _veh) joinSilent _group;
													[_group, true] remoteExec ["enableDynamicSimulation", 0, true];
												};
												
												{ _x addCuratorEditableObjects [ crew _veh, true ] } forEach allCurators;
												[group (driver _veh), true] remoteExec ["enableDynamicSimulation", 0, true];
												
												["DEBUG", format["Zone%1 (%3) - Spawning '%2' [%4]", _zoneID, if (typeName _type == typeName configFile) then { configName _type } else { _type }, _side, getPos _veh]] call zmm_fnc_logMsg;
												[driver _veh, _marker, "SHOWMARKER"] spawn zmm_fnc_aiUPS;
											} else {
												["ERROR", format["Invalid vehicle class: %1", _type]] call zmm_fnc_logMsg;
											};
										} else {
											_group = [[0,0,0], _side, _type] call BIS_fnc_spawnGroup;
											_group spawn { sleep 30; _this enableDynamicSimulation true };
												
											if !([_customInit] in [[""]]) then {
												_grpVeh = selectRandom (units _group select { vehicle _x != _x });
												[_grpVeh, true] remoteExec ["enableDynamicSimulation", 0, true];
												[] spawn {_customInit};
											};
											
											{ _x addCuratorEditableObjects [ units _group, true ] } forEach allCurators;
											[_group, true] remoteExec ["enableDynamicSimulation", 0, true];
											
											["DEBUG", format["Zone%1 (%3) - Spawning '%2' [Random]", _zoneID, if (typeName _type == typeName configFile) then { configName _type } else { _type }, _side]] call zmm_fnc_logMsg;
											[leader _group, _marker, "SHOWMARKER", "RANDOM"] spawn zmm_fnc_aiUPS;
										};
										
										if (time > 0) then { uiSleep 1 };
									};
								};

								["DEBUG", format["Zone%1 - Spawning Patrols (%2)", _zoneID, _locType]] call zmm_fnc_logMsg;

								private _str = selectRandom ["Heavy", "Normal", "Light"];
								private _multiplier = missionNamespace getVariable ["ZZM_Diff", 1];
								private _customInfSml = missionNamespace getVariable ["ZMM_CustomSentry", -1];
								private _customInfMed = missionNamespace getVariable ["ZMM_CustomTeam", -1];
								private _customInfLrg = missionNamespace getVariable ["ZMM_CustomSquad", -1];
								private _customVehSml = missionNamespace getVariable ["ZMM_CustomLight", -1];
								private _customVehMed = missionNamespace getVariable ["ZMM_CustomMedium", -1];
								private _customVehLrg = missionNamespace getVariable ["ZMM_CustomHeavy", -1];

								switch (_locType) do {
									case "Airport": { 		
										[_zoneID, _centre, _light, format["MKR_%1_MAX", _zoneID], if (_customVehSml >= 0) then { _customVehSml } else { (2 * _multiplier) + random 1 }] call _fnc_spawnGroup;
										[_zoneID, _centre, _medium, format["MKR_%1_MAX", _zoneID], if (_customVehMed >= 0) then { _customVehMed } else { (2 * _multiplier) + random 1 }] call _fnc_spawnGroup;
										[_zoneID, _centre, _heavy, format["MKR_%1_MIN", _zoneID], if (_customVehLrg >= 0) then { _customVehLrg } else { (2 * _multiplier) + random 1 }] call _fnc_spawnGroup;
										[_zoneID, _centre, _sentry, format["MKR_%1_MAX", _zoneID], if (_customInfSml >= 0) then { _customInfSml } else { (3 * _multiplier) + random 2 }] call _fnc_spawnGroup;	
										[_zoneID, _centre, _team, format["MKR_%1_MIN", _zoneID], if (_customInfMed >= 0) then { _customInfMed } else { (2 * _multiplier) + random 1 }] call _fnc_spawnGroup;	
										[_zoneID, _centre, _squad, format["MKR_%1_MIN", _zoneID], if (_customInfLrg >= 0) then { _customInfLrg } else { (1 * _multiplier) + random 1 }] call _fnc_spawnGroup;
									};
									case "NameCityCapital": { 
										[_zoneID, _centre, _light, format["MKR_%1_MAX", _zoneID], if (_customVehSml >= 0) then { _customVehSml } else { (2 * _multiplier) + random 1 }] call _fnc_spawnGroup;
										[_zoneID, _centre, _medium, format["MKR_%1_MAX", _zoneID], if (_customVehMed >= 0) then { _customVehMed } else { (1 * _multiplier) + random 1 }] call _fnc_spawnGroup;
										[_zoneID, _centre, _heavy, format["MKR_%1_MIN", _zoneID], if (_customVehLrg >= 0) then { _customVehLrg } else { (1 * _multiplier) + random 1 }] call _fnc_spawnGroup;
										[_zoneID, _centre, _sentry, format["MKR_%1_MAX", _zoneID], if (_customInfSml >= 0) then { _customInfSml } else { (3 * _multiplier) + random 2 }] call _fnc_spawnGroup;	
										[_zoneID, _centre, _team, format["MKR_%1_MIN", _zoneID], if (_customInfMed >= 0) then { _customInfMed } else { (2 * _multiplier) + random 1 }] call _fnc_spawnGroup;
										[_zoneID, _centre, _squad, format["MKR_%1_MIN", _zoneID], if (_customInfLrg >= 0) then { _customInfLrg } else { (1 * _multiplier) + random 1 }] call _fnc_spawnGroup;	
									};
									case "NameCity": { 
										[_zoneID, _centre, _light, format["MKR_%1_MAX", _zoneID], if (_customVehSml >= 0) then { _customVehSml } else { (2 * _multiplier) + random 1 }] call _fnc_spawnGroup;
										[_zoneID, _centre, _medium, format["MKR_%1_MAX", _zoneID], if (_customVehMed >= 0) then { _customVehMed } else { (2 * _multiplier) + random 1 }] call _fnc_spawnGroup;
										[_zoneID, _centre, _heavy, format["MKR_%1_MIN", _zoneID], if (_customVehLrg >= 0) then { _customVehLrg } else { (1 * _multiplier) + random 1 }] call _fnc_spawnGroup;
										[_zoneID, _centre, _sentry, format["MKR_%1_MAX", _zoneID], if (_customInfSml >= 0) then { _customInfSml } else { (2 * _multiplier) + random 2 }] call _fnc_spawnGroup;
										[_zoneID, _centre, _team, format["MKR_%1_MIN", _zoneID], if (_customInfMed >= 0) then { _customInfMed } else { (1 * _multiplier) + random 1 }] call _fnc_spawnGroup;
										[_zoneID, _centre, _squad, format["MKR_%1_MAX", _zoneID], _customInfLrg] call _fnc_spawnGroup;  
									};
									case "NameVillage": { 
										[_zoneID, _centre, _light, format["MKR_%1_MAX", _zoneID], if (_customVehSml >= 0) then { _customVehSml } else { (1 * _multiplier) + random 1 }] call _fnc_spawnGroup;
										[_zoneID, _centre, _medium, format["MKR_%1_MAX", _zoneID], if (_customVehMed >= 0) then { _customVehMed } else { (1 * _multiplier) + random 1 }] call _fnc_spawnGroup;
										[_zoneID, _centre, _heavy, format["MKR_%1_MIN", _zoneID], _customVehLrg] call _fnc_spawnGroup;  
										[_zoneID, _centre, _sentry, format["MKR_%1_MAX", _zoneID], if (_customInfSml >= 0) then { _customInfSml } else { (2 * _multiplier) + random 2 }] call _fnc_spawnGroup;	
										[_zoneID, _centre, _team, format["MKR_%1_MIN", _zoneID], if (_customInfMed >= 0) then { _customInfMed } else { (1 * _multiplier) + random 1 }] call _fnc_spawnGroup;
										[_zoneID, _centre, _squad, format["MKR_%1_MAX", _zoneID], _customInfLrg] call _fnc_spawnGroup;  
									};
									case "NameLocal": { 
										[_zoneID, _centre, _light, format["MKR_%1_MAX", _zoneID], if (_customVehSml >= 0) then { _customVehSml } else { (1 * _multiplier) + random 1 }] call _fnc_spawnGroup;
										[_zoneID, _centre, _medium, format["MKR_%1_MAX", _zoneID], if (_customVehMed >= 0) then { _customVehMed } else { (1 * _multiplier) + random 1 }] call _fnc_spawnGroup;
										[_zoneID, _centre, _heavy, format["MKR_%1_MIN", _zoneID], _customVehLrg] call _fnc_spawnGroup;  
										[_zoneID, _centre, _sentry, format["MKR_%1_MAX", _zoneID], if (_customInfSml >= 0) then { _customInfSml } else { (2 * _multiplier) + random 2 }] call _fnc_spawnGroup;	
										[_zoneID, _centre, _team, format["MKR_%1_MIN", _zoneID], if (_customInfMed >= 0) then { _customInfMed } else { (1 * _multiplier) + random 1 }] call _fnc_spawnGroup;
										[_zoneID, _centre, _squad, format["MKR_%1_MAX", _zoneID], _customInfLrg] call _fnc_spawnGroup;  
									};
									default { 		
										switch (_str) do {
											case "Heavy": { 
												[_zoneID, _centre, _light, format["MKR_%1_MAX", _zoneID], if (_customVehSml >= 0) then { _customVehSml } else { (1 * _multiplier) }] call _fnc_spawnGroup; 
												[_zoneID, _centre, _medium, format["MKR_%1_MAX", _zoneID], if (_customVehMed >= 0) then { _customVehMed } else { (1 * _multiplier) + random 1 }] call _fnc_spawnGroup;
												[_zoneID, _centre, _heavy, format["MKR_%1_MIN", _zoneID], _customVehLrg] call _fnc_spawnGroup;  
												[_zoneID, _centre, _sentry, format["MKR_%1_MIN", _zoneID], if (_customInfSml >= 0) then { _customInfSml } else { (3 * _multiplier) + random 1 }] call _fnc_spawnGroup;
												[_zoneID, _centre, _team, format["MKR_%1_MIN", _zoneID], if (_customInfMed >= 0) then { _customInfMed } else { (2 * _multiplier) + random 1 }] call _fnc_spawnGroup;
												[_zoneID, _centre, _squad, format["MKR_%1_MAX", _zoneID], _customInfLrg] call _fnc_spawnGroup;  
											};
											case "Light": { 
												[_zoneID, _centre, _light, format["MKR_%1_MAX", _zoneID], if (_customVehSml >= 0) then { _customVehSml } else { (1 * _multiplier) }] call _fnc_spawnGroup;
												[_zoneID, _centre, _medium, format["MKR_%1_MAX", _zoneID], _customVehMed] call _fnc_spawnGroup; 
												[_zoneID, _centre, _heavy, format["MKR_%1_MIN", _zoneID], _customVehLrg] call _fnc_spawnGroup;  
												[_zoneID, _centre, _sentry, format["MKR_%1_MIN", _zoneID], if (_customInfSml >= 0) then { _customInfSml } else { (3 * _multiplier) + random 1 }] call _fnc_spawnGroup;
												[_zoneID, _centre, _team, format["MKR_%1_MAX", _zoneID], _customInfMed] call _fnc_spawnGroup;  
												[_zoneID, _centre, _squad, format["MKR_%1_MAX", _zoneID], _customInfLrg] call _fnc_spawnGroup;  
											};
											default { 
												[_zoneID, _centre, _light, format["MKR_%1_MAX", _zoneID], if (_customVehSml >= 0) then { _customVehSml } else { (1 * _multiplier) + random 1 }] call _fnc_spawnGroup;
												[_zoneID, _centre, _medium, format["MKR_%1_MAX", _zoneID], _customVehMed] call _fnc_spawnGroup; 
												[_zoneID, _centre, _heavy, format["MKR_%1_MIN", _zoneID], _customVehLrg] call _fnc_spawnGroup;  
												[_zoneID, _centre, _sentry, format["MKR_%1_MIN", _zoneID], if (_customInfSml >= 0) then { _customInfSml } else { (2 * _multiplier) + random 1 }] call _fnc_spawnGroup;
												[_zoneID, _centre, _team, format["MKR_%1_MIN", _zoneID], if (_customInfMed >= 0) then { _customInfMed } else { (2 * _multiplier) + random 1 }] call _fnc_spawnGroup;
												[_zoneID, _centre, _squad, format["MKR_%1_MAX", _zoneID], _customInfLrg] call _fnc_spawnGroup;  
											};
										};
									};
								};

								missionNamespace setVariable [format[ "ZMM_%1_PatrolsEnabled", _zoneID], false];
								missionNamespace setVariable [format[ "ZMM_%1_PatrolsStrength", _zoneID], _str];

								true
							};
						};
						if (isNil("zmm_fnc_areaQRF")) then {
							zmm_fnc_areaQRF = {
								if !isServer exitWith {};
								params [
									["_zoneID", 0],
									["_triggerOnly", false],
									["_delay", 300],
									["_maxWave", 10],
									["_qrfType", -1],
									["_diff",-1]
								];

								_qrfTypes = [
									"Reserve",
									"Motorized",
									"Mechanised",
									"Armoured",
									"Airborne",
									"Infantry",
									"Helicopter",
									"Aircraft"
								];

								if _triggerOnly exitWith {
									if ([(missionNamespace getVariable [format['ZMM_%1_QRFTime', _zoneID], 600])] in [[0]] || [(missionNamespace getVariable [format['ZMM_%1_QRFWaves', _zoneID], 3])] in [[0]])	exitWith {};
									
									_centre = missionNamespace getVariable [ format[ "ZMM_%1_Location", _zoneID ], [0,0,0]];
									_radius = (getMarkerSize format["MKR_%1_MAX", _zoneID]) select 0;
									_timeOut = (missionNamespace getVariable ['ZMM_%1_QRFTime', 600]) / 2;

									_detectedTrg = (([(AGLToASL (_centre)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									
									
									if ([missionNamespace getVariable [format["ZMM_%1_enemySide", _zoneID], CIVILIAN]] in [[CIVILIAN]]) then {
										_detectedTrg setTriggerActivation ["ANYPLAYER", "PRESENT", false];
									} else {
										_detectedTrg setTriggerActivation ["ANYPLAYER", toUpper format["%1 D", (missionNamespace getVariable format["ZMM_%1_enemySide", _zoneID])], false];
									};
									
									_detectedTrg setTriggerTimeout [_timeOut, _timeOut, _timeOut, true];
									_detectedTrg setTriggerArea [_radius, _radius, 0, false];
									_detectedTrg setTriggerStatements ["this", format["[%1, false, (missionNamespace getVariable ['ZMM_%1_QRFTime', %2]), (missionNamespace getVariable ['ZMM_%1_QRFWaves', %3]), %4, %5] spawn zmm_fnc_areaQRF;", _zoneID, _delay, _maxWave, _qrfType, _diff], ""];
								};

								if (_delay < 1) then {
									["DEBUG", format["Zone%1 - Delay was not set, defaulting to: %2", _zoneID, 300]] call zmm_fnc_logMsg;
									_delay = 300;
								};

								if (_maxWave < 1) then {  _maxWave = 3 };

								missionNamespace setVariable [format[ "ZMM_%1_QRFTime", _zoneID ], 0];

								private _centre = missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], [0,0,0]];
								private _side = missionNamespace getVariable [format["ZMM_%1_enemySide", _zoneID], EAST];
								private _locations = missionNamespace getVariable [format["ZMM_%1_QRFLocations", _zoneID], []];

								private _indQRF = [
									0,	2.5, 				
									1,	2.5, 				
									2,	1.5, 				
									3,	(0.25 * ZZM_Diff), 	
									4,	0.5, 				
									5,	3.5, 				
									6,	(0.25 * ZZM_Diff), 	
									7,	(0.25 * ZZM_Diff)	
								];

								private _opfQRF = [
									0,	2.5, 				
									1,	2.5, 				
									2,	2.5, 				
									3,	(2.0 * ZZM_Diff),	
									4,	2.5, 				
									5,	2.5, 				
									6,	(2.0 * ZZM_Diff),	
									7,	(2.0 * ZZM_Diff)	
								];

								if (_qrfType < 0) then { 
									_qrfType = if (_side == independent) then { selectRandomWeighted _indQRF } else { selectRandomWeighted _opfQRF };
								};

								if (_qrfType >= count _qrfTypes) then { _qrfType = 0 };

								private _sentry = missionNamespace getVariable [format["ZMM_%1Grp_Sentry",_side],[]];
								private _team = missionNamespace getVariable [format["ZMM_%1Grp_Team",_side],[]];
								private _squad = missionNamespace getVariable [format["ZMM_%1Grp_Squad",_side],[]];
								private _truck = missionNamespace getVariable [format["ZMM_%1Veh_Truck",_side],[]];
								private _light = missionNamespace getVariable [format["ZMM_%1Veh_Light",_side],[]];
								private _medium = missionNamespace getVariable [format["ZMM_%1Veh_Medium",_side],[]];
								private _heavy = missionNamespace getVariable [format["ZMM_%1Veh_Heavy",_side],[]];
								private _air = missionNamespace getVariable [format["ZMM_%1Veh_Air",_side],[]];
								private _casH = missionNamespace getVariable [format["ZMM_%1Veh_CasH",_side], (missionNamespace getVariable [format["ZMM_%1Veh_Cas",_side],[]])];
								private _casP = missionNamespace getVariable [format["ZMM_%1Veh_CasP",_side], (missionNamespace getVariable [format["ZMM_%1Veh_Cas",_side],[]])];

								["DEBUG", format["Zone%1 - Starting QRF - T:%2 D:%3 W:%4", _zoneID, _qrfTypes select _qrfType, _diff, _maxWave]] call zmm_fnc_logMsg;


								sleep (_delay / 4);

								for [{_wave = 1}, {_wave <= _maxWave}, {_wave = _wave + 1}] do {
									["DEBUG", format["Zone%1 - Spawning QRF #%2", _zoneID, _wave]] call zmm_fnc_logMsg;
									
									if ([({ _centre distance2D _x < 1000 } count (switchableUnits + playableUnits))] in [[0]]) exitWith {
										["DEBUG", format["Zone%1 - Stopping QRF: No players nearby", _zoneID]] call zmm_fnc_logMsg;
									};
									
									switch (_qrfType) do {
										
										case 1: {
											switch (_diff) do {
												
												case 0: {
													switch (_wave) do {
														case 1: {
															[_centre, _locations, _side, selectRandom _truck] call zmm_fnc_spawnUnit;
														};
														case 2;
														case 3;
														case 4: {
															[_centre, _locations, _side, selectRandom _truck] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _truck] call zmm_fnc_spawnUnit;
														};
														default {
															[_centre, _locations, _side, selectRandom _truck] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _truck] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _light] call zmm_fnc_spawnUnit;
														};
													};
												};
												
												case 2: {
													switch (_wave) do {
														default {
															[_centre, _locations, _side, selectRandom _light] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _light] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _medium] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _truck] call zmm_fnc_spawnUnit;
														};
													};
												};
												default {
													switch (_wave) do {
														case 1: {
															[_centre, _locations, _side, selectRandom _light] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _truck] call zmm_fnc_spawnUnit;
														};
														case 2;
														case 3;
														case 4: {
															[_centre, _locations, _side, selectRandom _light] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _truck] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _truck] call zmm_fnc_spawnUnit;
														};
														default {
															[_centre, _locations, _side, selectRandom _light] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _medium] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _medium] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _truck] call zmm_fnc_spawnUnit;
														};
													};
												};
											};
										};
										
										
										case 2: {
											switch (_diff) do {
												
												case 0: {
													switch (_wave) do {
														default {
															[_centre, _locations, _side, selectRandom _medium] call zmm_fnc_spawnUnit;
														};
													};
												};
												
												case 2: {
													switch (_wave) do {
														default {
															[_centre, _locations, _side, selectRandom _medium] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _medium] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _medium] call zmm_fnc_spawnUnit;
														};
													};
												};
												default {
													switch (_wave) do {
														case 1: {
															[_centre, _locations, _side, selectRandom _medium] call zmm_fnc_spawnUnit;
														};
														case 2: {
															[_centre, _locations, _side, selectRandom _light] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _medium] call zmm_fnc_spawnUnit;
														};
														case 3;
														case 4: {
															[_centre, _locations, _side, selectRandom _light] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _medium] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _medium] call zmm_fnc_spawnUnit;
														};
														default {
															[_centre, _locations, _side, selectRandom _light] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _medium] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _medium] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _heavy] call zmm_fnc_spawnUnit;
														};

													};
												};
											};
											switch (_wave) do {
											};
										};
										
										
										case 3: {
											switch (_diff) do {
												
												case 0: {
													switch (_wave) do {
														case 1: {
															[_centre, _locations, _side, selectRandom _medium] call zmm_fnc_spawnUnit;
														};
														case 2;
														case 3;
														case 4: {
															[_centre, _locations, _side, selectRandom _heavy] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _heavy] call zmm_fnc_spawnUnit;
														};
														default {
															[_centre, _locations, _side, selectRandom _heavy] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _heavy] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _heavy] call zmm_fnc_spawnUnit;
														};
													};
												};
												
												case 2: {
													switch (_wave) do {
														default {
															[_centre, _locations, _side, selectRandom _heavy] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _heavy] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _heavy] call zmm_fnc_spawnUnit;
														};
													};
												};
												default {
													switch (_wave) do {
														case 1: {
															[_centre, _locations, _side, selectRandom _medium] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _heavy] call zmm_fnc_spawnUnit;
														};
														case 2: {
															[_centre, _locations, _side, selectRandom _medium] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _heavy] call zmm_fnc_spawnUnit;
														};
														case 3;
														case 4: {
															[_centre, _locations, _side, selectRandom _heavy] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _heavy] call zmm_fnc_spawnUnit;
														};
														default {
															[_centre, _locations, _side, selectRandom _heavy] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _heavy] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _heavy] call zmm_fnc_spawnUnit;
														};
													};
												};
											};
										};
										
										
										case 4: {
											switch (_diff) do {
												
												case 0: {
													switch (_wave) do {
														case 1;
														case 2: {
															[_centre, _side] call zmm_fnc_spawnPara;
														};
														case 3: {
															[_centre, _side] call zmm_fnc_spawnPara;
															[_centre, _locations, _side, selectRandom _air] call zmm_fnc_spawnUnit;
														};
														case 4: {
															[_centre, _side] call zmm_fnc_spawnPara;
															[_centre, _locations, _side, selectRandom _air] call zmm_fnc_spawnUnit;
														};
														default {
															[_centre, _side] call zmm_fnc_spawnPara;
															[_centre, _locations, _side, selectRandom _air] call zmm_fnc_spawnUnit;
														};
													};
												};
												
												case 2: {
													switch (_wave) do {
														case 1;
														case 2: {
															[_centre, _locations, _side, selectRandom _air] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom (_casH + _casP)] call zmm_fnc_spawnUnit;
														};
														case 3: {
															[_centre, _side] call zmm_fnc_spawnPara;
															[_centre, _locations, _side, selectRandom _air] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _casH] call zmm_fnc_spawnUnit;
														};
														case 4: {
															[_centre, _side] call zmm_fnc_spawnPara;
															[_centre, _side] call zmm_fnc_spawnPara;
															[_centre, _locations, _side, selectRandom _air] call zmm_fnc_spawnUnit;
														};
														default {
															[_centre, _side] call zmm_fnc_spawnPara;
															[_centre, _side] call zmm_fnc_spawnPara;
															[_centre, _locations, _side, selectRandom (_casH + _casP)] call zmm_fnc_spawnUnit;
														};
													};
												};
												default {
													switch (_wave) do {
														case 1;
														case 2: {
															[_centre, _locations, _side, selectRandom _air] call zmm_fnc_spawnUnit;
															[_centre, _side] call zmm_fnc_spawnPara;
														};
														case 3: {
															[_centre, _side] call zmm_fnc_spawnPara;
															[_centre, _locations, _side, selectRandom _air] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _casH] call zmm_fnc_spawnUnit;
														};
														case 4: {
															[_centre, _side] call zmm_fnc_spawnPara;
															[_centre, _side] call zmm_fnc_spawnPara;
															[_centre, _locations, _side, selectRandom _air] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _air] call zmm_fnc_spawnUnit;
														};
														default {
															[_centre, _side] call zmm_fnc_spawnPara;
															[_centre, _side] call zmm_fnc_spawnPara;
															[_centre, _locations, _side, selectRandom (_casH + _casP)] call zmm_fnc_spawnUnit;
														};
													};
												};
											};
										};	
										
										
										case 5: {
											switch (_diff) do {
												
												case 0: {
													switch (_wave) do {
														case 1: {
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _team] call zmm_fnc_spawnUnit;
														};
														case 2;
														case 3: {
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _team] call zmm_fnc_spawnUnit;
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _team] call zmm_fnc_spawnUnit;
														};
														default {
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _team] call zmm_fnc_spawnUnit;
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _team] call zmm_fnc_spawnUnit;
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _team] call zmm_fnc_spawnUnit;
														};
													};
												};
												
												case 2: {
													switch (_wave) do {
														case 1: {
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _squad] call zmm_fnc_spawnUnit;
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _squad] call zmm_fnc_spawnUnit;
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _squad] call zmm_fnc_spawnUnit;
														};
														case 2;
														case 3: {
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _squad] call zmm_fnc_spawnUnit;
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _squad] call zmm_fnc_spawnUnit;
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _squad] call zmm_fnc_spawnUnit;
														};
														default {
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _squad] call zmm_fnc_spawnUnit;
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _squad] call zmm_fnc_spawnUnit;
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _squad] call zmm_fnc_spawnUnit;
														};
													};
												};
												default {
													switch (_wave) do {
														case 1: {
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _team] call zmm_fnc_spawnUnit;
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _team] call zmm_fnc_spawnUnit;
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _team] call zmm_fnc_spawnUnit;
														};
														case 2;
														case 3: {
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _team] call zmm_fnc_spawnUnit;
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _squad] call zmm_fnc_spawnUnit;
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _squad] call zmm_fnc_spawnUnit;
														};
														default {
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _team] call zmm_fnc_spawnUnit;
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _squad] call zmm_fnc_spawnUnit;
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _squad] call zmm_fnc_spawnUnit;
														};
													};
												};
											};
										};
										
										
										case 6: {
											switch (_diff) do {
												
												case 0: {
													switch (_wave) do {
														case 3;
														case 4: {
															[_centre, _locations, _side, selectRandom _air] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _air] call zmm_fnc_spawnUnit;
														};
														default {
															[_centre, _side] call zmm_fnc_spawnPara;
														};
													};
												};
												
												case 2: {
													switch (_wave) do {
														default {
															[_centre, _side] call zmm_fnc_spawnPara;
															[_centre, _locations, _side, selectRandom (_air + _casH)] call zmm_fnc_spawnUnit;
														};
													};
												};
												default {
													switch (_wave) do {
														case 1;
														case 2;
														case 3: {
															[_centre, _side] call zmm_fnc_spawnPara;
															[_centre, _locations, _side, selectRandom _air] call zmm_fnc_spawnUnit;
														};
														case 4: {
															[_centre, _side] call zmm_fnc_spawnPara;
															[_centre, _locations, _side, selectRandom _air] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _air] call zmm_fnc_spawnUnit;
														};
														default {
															[_centre, _side] call zmm_fnc_spawnPara;
															[_centre, _locations, _side, selectRandom _casH] call zmm_fnc_spawnUnit;
														};
													};
												};
											};
										};	
										
										
										case 7: {
											switch (_diff) do {
												
												case 0: {
													switch (_wave) do {
														case 3: {
															[_centre, _locations, _side, selectRandom _casP] call zmm_fnc_spawnUnit;
														};
														default {
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _squad] call zmm_fnc_spawnUnit;
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _squad] call zmm_fnc_spawnUnit;
														};
													};
												};
												
												case 2: {
													switch (_wave) do {
														case 1;
														case 3: {
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _squad] call zmm_fnc_spawnUnit;
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _squad] call zmm_fnc_spawnUnit;
														};
														default {
															[_centre, _locations, _side, selectRandom _casP] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _casP] call zmm_fnc_spawnUnit;
														};
													};
												};
												default {
													switch (_wave) do {
														case 2: {
															[_centre, _locations, _side, selectRandom _casP] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _casP] call zmm_fnc_spawnUnit;
														};
														default {
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _squad] call zmm_fnc_spawnUnit;
															[_centre, [(_centre getPos [600, random 360]),(_centre getPos [600, random 360]),(_centre getPos [600, random 360])], _side, selectRandom _squad] call zmm_fnc_spawnUnit;
														};
													};
												};
											};
										};	
										
										
										default {
											switch (_diff) do {
												
												case 0: {
													switch (_wave) do {
														case 1: {
															[_centre, _side] call zmm_fnc_spawnPara;
														};
														case 2: {
															[_centre, _locations, _side, selectRandom (_light + _truck)] call zmm_fnc_spawnUnit;
														};
														case 3;
														case 4: {
															[_centre, _locations, _side, selectRandom (_light + _truck)] call zmm_fnc_spawnUnit;
														};
														default {
															[_centre, _locations, _side, selectRandom (_light + _medium)] call zmm_fnc_spawnUnit;
														};
													};
												};
												
												case 2: {
													switch (_wave) do {
														case 1: {
															[_centre, _locations, _side, selectRandom (_light + _truck)] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _medium] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _casH] call zmm_fnc_spawnUnit;
														};
														case 2: {
															[_centre, _locations, _side, selectRandom (_light + _medium)] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom (_light + _medium)] call zmm_fnc_spawnUnit;
															[_centre, _side] call zmm_fnc_spawnPara;
														};
														case 3;
														case 4: {
															[_centre, _locations, _side, selectRandom (_medium + _heavy)] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom (_medium + _heavy)] call zmm_fnc_spawnUnit;
															[_centre, _side] call zmm_fnc_spawnPara;
														};
														default {
															[_centre, _locations, _side, selectRandom (_medium + _heavy)] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom (_medium + _heavy)] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _air] call zmm_fnc_spawnUnit;
														};
													};
												};
												default {
													switch (_wave) do {
														case 1: {
															[_centre, _locations, _side, selectRandom (_light + _truck)] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _light] call zmm_fnc_spawnUnit;
														};
														case 2: {
															[_centre, _locations, _side, selectRandom (_light + _truck)] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom (_light + _medium)] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom _medium] call zmm_fnc_spawnUnit;
															[_centre, _side] call zmm_fnc_spawnPara;
														};
														case 3;
														case 4: {
															[_centre, _locations, _side, selectRandom (_light + _medium)] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom (_medium + _heavy)] call zmm_fnc_spawnUnit;
														};
														default {
															[_centre, _locations, _side, selectRandom (_light + _medium)] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom (_medium + _heavy)] call zmm_fnc_spawnUnit;
															[_centre, _locations, _side, selectRandom (_casH + _air)] call zmm_fnc_spawnUnit;
														};
													};
												};
											};
										};
									};

									private _tNextWave = time + _delay + (random (_delay / 2));	
									waitUntil {sleep 1; time > _tNextWave};
								};
							};
						};
						if (isNil("zmm_fnc_areaRoadblock")) then {
							zmm_fnc_areaRoadblock = {
								if !isServer exitWith {};

								params [
									["_zoneID", 0],
									["_centre", (missionNamespace getVariable [ format[ "ZMM_%1_Location", _this#0], [0,0,0]])]
								];

								if ([_centre] in [[[0,0,0]]]) exitWith { ["ERROR", format["Zone%1 - Invalid roadblock location: %1 (%2)", _zoneID, _centre]] call zmm_fnc_logMsg };

								private _side = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
								private _locations = missionNamespace getVariable [ format[ "ZMM_%1_BlockLocations", _zoneID ], []]; 

								private _radius = missionNamespace getVariable [ format[ "ZMM_%1_Radius", _zoneID ], 150];
								private _count = missionNamespace getVariable [format["ZMM_%1_Roadblocks", _zoneID], 1];
								private _menArr = missionNamespace getVariable [format["ZMM_%1Man",_side],[]];

								private _vehL = missionNamespace getVariable [format["ZMM_%1Veh_Light",_side],[]];
								private _vehM = missionNamespace getVariable [format["ZMM_%1Veh_Medium",_side],[]];
								private _vehH = missionNamespace getVariable [format["ZMM_%1Veh_Heavy",_side],[]];

								if (_count == 0) then { _count = 1 };

								["DEBUG", format["Zone%1 - Spawning Roadblocks: %2", _zoneID, _count]] call zmm_fnc_logMsg;

								private _vehArr = _vehL;
								if ((missionNamespace getVariable ["ZZM_Diff", 1]) >= 1) then { _vehArr append _vehM };
								if ((missionNamespace getVariable ["ZZM_Diff", 1]) >= 1.5) then { _vehArr append _vehH };

								private _hmgArr = missionNamespace getVariable [format["ZMM_%1Veh_Static",_side],[]];

								if (count _hmgArr == 0) then { _hmgArr = ["B_GMG_01_high_F","B_HMG_01_high_F"] };

								if (count _locations == 0) then {
									
									for [{_i = 0}, {_i < 360}, {_i = _i + 10}] do {
										private _roads = ((_centre getPos [(_radius * (1 + random 0.5)) max 300, _i]) nearRoads 100) select {count roadsConnectedTo _x > 0 && (nearestBuilding _x) distance _x > 75 && !([(getPos _x) isFlatEmpty [-1, -1, 0.25, 6]] in [[[]]])};
											
										if (count _roads > 0) then {
											private _road = _roads#0;
											if ({_x distance2D _road < 600} count _locations == 0) then {
												_locations pushBack _road;
											};
										};
									};
								};

								private _buildingList = [
									[
										["S","Land_BagBunker_Small_F", [8.25,-0.5,-0.1], 180, false],
										["S","Land_BagFence_Long_F", [-10.25,3.5,0], 0],
										["S","Land_BagFence_Long_F", [-7.5,3.5,0], 0],
										["S","Land_BagFence_Round_F", [-13,3.25,0], 150],
										["S","Land_CncBarrierMedium4_F", [-6.5,-0.5,0], 90],
										["S","Land_CncBarrierMedium_F", [-14.5,1,0], 270],
										["S","Land_CncBarrierMedium_F", [11.75,-1.5,0], 0],
										["S","Land_CncBarrierMedium_F", [13.75,-2.5,0], 30],
										["S","Land_CncBarrier_F", [-11.5,6.5,0], 165],
										["S","Land_CncBarrier_F", [12.25,4.5,0], 30],
										["S","Land_CncBarrier_stripes_F", [-7.5,6.5,0], 0],
										["S","Land_CncBarrier_stripes_F", [8.25,5.5,0], 0],
										["V", selectRandom _hmgArr, [8.5,-0.25,0.2], 0, false],
										["V", selectRandom _vehArr, [-10.125,-2,0.2], 0, false]
									],
									[
										["S","Land_BagFence_End_F", [-7.25,4.5,0], 60],
										["S","Land_BagFence_Long_F", [-10.25,6.5,0], 0],
										["S","Land_BagFence_Long_F", [-13.5,3.75,0], 90],
										["S","Land_BagFence_Round_F", [-12.75,5.75,0], 135],
										["S","Land_BagFence_Round_F", [-8,5.75,0], 225],
										["S","Land_BagFence_Round_F", [11.25,2,0], 225],
										["S","Land_BagFence_Round_F", [9.25,2,0], 135],
										["S","RoadBarrier_F", [-14,10,0], 0],
										["S","RoadBarrier_F", [-8,10,0], 0],
										["V", selectRandom _hmgArr, [10.5,1.25,0.2], 0, false],
										["V", selectRandom _vehArr, [-10,0,0.2], 0, false]
									],
									[
										["S","Land_BagBunker_Tower_F", [-11,1,-0.1], 180, false],
										["S","Land_CncBarrier_F", [-11,7,0], 0],
										["S","Land_CncBarrier_F", [-14.5,6.25,0], 315],
										["S","Land_CncBarrier_F", [12,7,0], 0],
										["S","Land_CncBarrier_F", [15,6,0], 45],
										["S","Land_CncBarrier_F", [16,3,0], 90],
										["S","Land_CncBarrier_stripes_F", [-8,7,0], 0],
										["S","Land_CncBarrier_stripes_F", [16,-0.75,0], 90],
										["S","Land_CncBarrier_stripes_F", [9,7,0], 0],
										["S","RoadBarrier_F", [-9,10,0], 0],
										["S","RoadBarrier_F", [10,10,0], 0],
										["S","RoadBarrier_small_F", [-12,10,0], 330],
										["S","RoadBarrier_small_F", [14,10,0], 15],
										["V", selectRandom _hmgArr, [-10.25,3,2.8], 0, false],
										["V", selectRandom _vehArr, [11.25,0.5,0.2], 0, false]
									]
								];

								["DEBUG", format["Zone%1 - Spawning Roadblocks: %2 in %4 positions (%3m)", _zoneID, _count, _radius, count _locations]] call zmm_fnc_logMsg;

								for "_i" from 1 to _count do {
									if (count _locations == 0) exitWith {};
									
									private _road = selectRandom _locations;
									_locations deleteAt (_locations find _road);
									
									private _farRoad = objNull;
									
									{if ((_x distance _centre) < (_farRoad distance _centre)) then {_farRoad = _x}} forEach (roadsConnectedTo _road);

									
									
									private _key = (([ATLtoASL (getPosATL _road), ("Land_HelipadEmpty_F"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									[_key,[(((_road getDir _farRoad) + 180)),(((_key) call BIS_fnc_getPitchBank) select 0),(((_key) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
									
									
									{ [_x, true] remoteExec ["hideObject", 0, true] } forEach (nearestTerrainObjects [_road, [], 25]);
									
									
									{
										_x params ["_type", ["_class",""], ["_rel",[0,0,0]], ["_dir", 0], ["_flat", true]];
										private _worldPos = _key modeltoWorld _rel;	
										private _obj = [_zoneID, _side, _type, _class, [_worldPos#0, _worldPos#1, _rel#2], getDir _key + _dir, _flat] call zmm_fnc_spawnObject;		
									} forEach selectRandom _buildingList;
									
									uiSleep 1;
									
									
									private _grpArr = [];
											
									for "_j" from 0 to (1 + random 3) do {
										_grpArr pushBack (selectRandom _menArr);
									};

									private _tempGrp = [_key getPos [25, random 360], _side, _grpArr] call BIS_fnc_spawnGroup;
									[_tempGrp, getPos _key] call BIS_fnc_taskDefend;
									_tempGrp deleteGroupWhenEmpty true;
									_tempGrp enableDynamicSimulation true;
									{ _x addCuratorEditableObjects [units _tempGrp, true] } forEach allCurators;
									
									if (missionNamespace getVariable ["ZZM_Mode", 0] != 1) then {
										private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_CP_%2", _zoneID, _i]),(_road getPos [25, random 360])] call BIS_fnc_stringToMarker;
										_mrkr setMarkerType "mil_unknown";
										_mrkr setMarkerSize [0.6, 0.6];
										_mrkr setMarkerColor format["Color%1",_side];

										private _cpTrigger = (([(AGLToASL (getPos _road)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_cpTrigger setTriggerActivation [format["%1",_side], "NOT PRESENT", false];
										_cpTrigger setTriggerArea [25, 25, 0, false];
										_cpTrigger setTriggerStatements [  "this", format["'MKR_%1_CP_%2' setMarkerColor 'ColorGrey'", _zoneID, _i], "" ];
										
										private _hdTrigger = (([(AGLToASL (getPos _road)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_hdTrigger setTriggerActivation ["ANYPLAYER", "PRESENT", false];
										_hdTrigger setTriggerArea [150, 150, 0, false, 25];
										_hdTrigger setTriggerStatements [  "this", format["'MKR_%1_CP_%2' setMarkerType 'o_installation'", _zoneID, _i], "" ];
									} else {
										private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format ["MKR_%1_CP_%2", _zoneID, _i]),(getPos _road)] call BIS_fnc_stringToMarkerLocal;
										_mrkr setMarkerTypeLocal "mil_dot";
										_mrkr setMarkerColorLocal "ColorBlue";
										_mrkr setMarkerTextLocal format["R%1", _i];
									};
									
									deleteVehicle _key;
								};

								missionNamespace setVariable [ format[ "ZMM_%1_BlockLocations", _zoneID ], _locations];
							};
						};
						if (isNil("zmm_fnc_areaSite")) then {
							zmm_fnc_areaSite = {
								if !isServer exitWith {};

								params [
									["_zoneID", 0],
									["_centre", (missionNamespace getVariable [ format[ "ZMM_%1_Location", _this#0], [0,0,0]])],
									["_showMarker", true],
									["_forcePos", false],
									["_forceID", -1]
								];

								if ([_centre] in [[[0,0,0]]]) then { _centre = [_centre, 0, 200, 5, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0] };

								private _side = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
								private _locations = missionNamespace getVariable [ format[ "ZMM_%1_SiteLocations", _zoneID ], []];  

								private _radius = missionNamespace getVariable [ format[ "ZMM_%1_Radius", _zoneID ], 150];
								private _count = missionNamespace getVariable [format["ZMM_%1_Supports", _zoneID], 1];
								private _menArr = missionNamespace getVariable [format["ZMM_%1Man",_side],[]];

								private _vehL = missionNamespace getVariable [format["ZMM_%1Veh_Light",_side],[]];
								private _vehM = missionNamespace getVariable [format["ZMM_%1Veh_Medium",_side],[]];
								private _vehH = missionNamespace getVariable [format["ZMM_%1Veh_Heavy",_side],[]];
								private _vehU = missionNamespace getVariable [format["ZMM_%1Veh_Util",_side],[]];
								private _hmgArr = missionNamespace getVariable [format["ZMM_%1Veh_Static",_side],[]];

								if (_count == 0) then { _count = 1 };

								["DEBUG", format["Zone%1 - Spawning Site: Count %2 at %3%4", _zoneID, _count, _centre, [""," [FORCED]"] select _forcePos]] call zmm_fnc_logMsg;

								private _vehArr = [];
								if (count _vehL > 1) then { _vehArr append _vehL; _vehArr append _vehL; }; 
								if (count _vehM > 1) then { _vehArr append _vehM; }; 
								if (count _hmgArr == 0) then { _hmgArr = ["B_GMG_01_high_F","B_HMG_01_high_F"] };

								if (!_forcePos && count _locations == 0) then {
									
									for [{_i = 0}, {_i < 360}, {_i = _i + 5}] do {
										for [{_j = _radius * 0.25}, {_j <= (_radius * 1.5)}, {_j = _j + 25}] do {
											private _tempPos = _centre getPos [_j, _i];
														
											if ({_x distance2D _tempPos < 400} count _locations == 0 && !([_tempPos isFlatEmpty [8, -1, 0.25, 5]] in [[[]]])) then {
												
												if (count (_tempPos nearRoads 50) == 0 &&
													count (nearestObjects [_tempPos, ["House", "Building"], 50]) == 0)
												then {
													_locations pushBack _tempPos;
												};
											};
										};
										
										if (count _locations > _count) exitWith {};
									};
								} else {
									if _forcePos then { _locations = [_centre] };
								};


								private _buildingList = [
									[
										"o_recon",
										[
											["O","Land_CampingTable_F", [-1.625,-2.125,0], 0],
											["O","Land_Sacks_heap_F", [-1.875,2.25,0], 165],
											["S","CamoNet_BLUFOR_open_F", [0,0,0.625], 90],
											["S","Land_BagFence_Long_F", [-0.375,7.625,0], 0],
											["S","Land_BagFence_Long_F", [2.875,-6.625,0], 180],
											["S","Land_BagFence_Long_F", [5.875,-3.375,0], 270],
											["S","Land_BagFence_Round_F", [-2.875,6.875,0], 129],
											["S","Land_BagFence_Round_F", [0.5,-6.125,0], 35],
											["S","Land_BagFence_Round_F", [2,7.125,0], 215],
											["S","Land_BagFence_Round_F", [5.375,-5.875,0], 309],
											["S","Land_CampingChair_V2_F", [-1.125,-1.5,0], 30],
											["S","Land_NetFence_03_m_3m_F", [-2,-2.75,0], 180],
											["S","Land_NetFence_03_m_3m_F", [-2,3.25,0], 0],
											["S","Land_NetFence_03_m_3m_F", [-3.5,1.75,0], 270],
											["S","Land_NetFence_03_m_3m_F", [1,3.25,0], 0],
											["S","Land_NetFence_03_m_3m_F", [2.5,-1.25,0], 90],
											["S","Land_NetFence_03_m_3m_d_F", [1,-2.75,0], 180],
											["S","Land_NetFence_03_m_3m_hole_F", [-3.5,-1.25,0], 270],
											["S","Land_NetFence_03_m_3m_hole_F", [2.5,1.75,0], 90],
											["S","Land_Pallet_F", [-2.875,-5.875,0], 240],
											["S","Land_Pallet_F", [1.375,2.25,0], 255],
											["S","Land_PaperBox_closed_F", [-4.375,2.5,0], 0],
											["S","Land_PaperBox_closed_F", [-5.125,0.75,0], 210],
											["S","Land_Sacks_goods_F", [-6.125,2.125,0], 255],
											["V", selectRandom (_vehL + _vehM), [8.25,4.49805,0.2], 15],
											["V", selectRandom _hmgArr, [-0.125,6.375,0.2], 0],
											["V", selectRandom _hmgArr, [2.625,-5.375,0.2], 180]
										]
									],
									[
										"o_recon",
										[
											["O","Land_CampingTable_F", [-2.75,-3.375,0], 0],
											["O","Land_Sacks_heap_F", [-3.25,-1.125,0], 90],
											["O","Land_TinWall_01_m_gate_v2_F", [1.625,-4.25,0], 0],
											["S","CamoNet_BLUFOR_open_F", [-0.25,-0.125,0.625], 90],
											["S","Land_CampingChair_V2_F", [-2.25,-2.75,0], 30],
											["S","Land_CratesWooden_F", [-2,4.875,0], 0],
											["S","Land_FieldToilet_F", [-2.875,1.125,0], 270],
											["S","Land_Pallets_stack_F", [-0.5,2.5,0], 165],
											["S","Land_PaperBox_closed_F", [1.375,2.5,0], 0],
											["S","Land_TinWall_01_m_4m_v1_F", [-4.25,-2.25,0], 90],
											["S","Land_TinWall_01_m_4m_v1_F", [1.625,3.625,0], 180],
											["S","Land_TinWall_01_m_4m_v1_F", [3.625,-2.25,0], 270],
											["S","Land_TinWall_01_m_4m_v1_F", [3.625,1.625,0], 270],
											["S","Land_TinWall_01_m_4m_v2_F", [-2.25,3.625,0], 180],
											["S","Land_TinWall_01_m_4m_v2_F", [-2.38867,-4.2124,0], 0],
											["S","Land_TinWall_01_m_4m_v2_F", [-4.25,1.625,0], 90],
											["V", selectRandom (_vehL + _vehM), [6.25,1.12305,0.2], 0],
											["V", selectRandom _hmgArr, [-2.875,-6.375,0.2], 180]
										]
									],
									[
										"o_recon",
										[
											["O","Land_NetFence_01_m_gate_F", [-3.875,2.25,0], 90],
											["O","Land_Sacks_heap_F", [-2.375,-2.125,0], 15],
											["O","Land_WoodenTable_large_F", [1.375,3,0], 0],
											["S","CamoNet_BLUFOR_open_F", [-0.375,0.25,0.625], 180],
											["S","Land_BagFence_Long_F", [-0.125,8.75,0], 0],
											["S","Land_BagFence_Round_F", [-2.625,8,0], 129],
											["S","Land_BagFence_Round_F", [2.25,8.25,0], 215],
											["S","Land_ChairWood_F", [0.75,2.50293,0], 255],
											["S","Land_ChairWood_F", [2,3.37793,0], 75],
											["S","Land_CratesShabby_F", [-4.625,-1,0], 0],
											["S","Land_FieldToilet_F", [6.375,2.625,0], 285],
											["S","Land_FieldToilet_F", [6.75,4.5,0], 255],
											["S","Land_NetFence_01_m_4m_F", [-1.875,-3.75,0], 0],
											["S","Land_NetFence_01_m_4m_F", [-1.875,4.25,0], 0],
											["S","Land_NetFence_01_m_4m_F", [-3.875,-1.75,0], 90],
											["S","Land_NetFence_01_m_4m_F", [2.125,-3.75,0], 180],
											["S","Land_NetFence_01_m_4m_F", [2.125,4.25,0], 180],
											["S","Land_NetFence_01_m_d_F", [4.125,-1.75,0], 270],
											["S","Land_NetFence_01_m_d_F", [4.125,2.25,0], 90],
											["S","Land_NetFence_01_m_pole_F", [0.125,-3.75,0], 0],
											["S","Land_NetFence_01_m_pole_F", [0.125,4.25,0], 0],
											["S","Land_NetFence_01_m_pole_F", [4.125,0.25,0], 0],
											["S","Land_Pallets_F", [0.625,-2.125,0], 300],
											["S","Land_Pallets_stack_F", [2.5,-2.375,0], 0],
											["S","Land_PaperBox_closed_F", [-3.125,-4.75,0], 0],
											["S","Land_PaperBox_closed_F", [-5.875,-2.625,0], 210],
											["V", selectRandom (_vehL + _vehM), [-0.5,-7.62695,0.2], 255],
											["V", selectRandom _hmgArr, [0.125,7.5,0.2], 0]
										]
									],
									[
										"o_installation",
										[
											["O","Land_CampingTable_F", [-4,0.5,0], 0],
											["O","Land_Sacks_heap_F", [1,0.875,0], 330],
											["S","Land_BagFence_Long_F", [-0.75,9.25,0], 0],
											["S","Land_BagFence_Round_F", [-3.25,8.5,0], 129],
											["S","Land_BagFence_Round_F", [1.625,8.75,0], 215],
											["S","Land_CampingChair_V2_F", [-3.5,1.125,0], 30],
											["S","Land_CratesWooden_F", [-0.5,-3.625,0], 0],
											["S","Land_FoodSacks_01_large_brown_F", [3.5,3,0], 330],
											["S","Land_Mil_WallBig_4m_battered_F", [-2.125,-5.125,0], 0],
											["S","Land_Mil_WallBig_4m_battered_F", [-5.125,-2.125,0], 90],
											["S","Land_Mil_WallBig_4m_battered_F", [-5.125,1.875,0], 90],
											["S","Land_Mil_WallBig_4m_damaged_center_F", [4.875,-2.125,0], 270],
											["S","Land_Mil_WallBig_4m_damaged_left_F", [4.875,1.875,0], 270],
											["S","Land_Mil_WallBig_4m_damaged_right_F", [1.875,-5.125,0], 0],
											["S","Land_Mil_WallBig_corner_battered_F", [-4.875,-4.875,0], 0],
											["S","Land_Mil_WallBig_corner_battered_F", [-4.875,4.625,0], 90],
											["S","Land_Mil_WallBig_corner_battered_F", [4.625,4.625,0], 180],
											["S","Land_Mil_WallBig_debris_F", [3.875,-3,0], 150],
											["S","Land_Pallets_stack_F", [-3.125,-3.5,0], 30],
											["S","Land_PaperBox_01_open_empty_F", [6.75,3.75,0], 30],
											["S","Land_PaperBox_01_small_ransacked_brown_F", [3.125,4.375,0], 285],
											["S","Land_PaperBox_closed_F", [-3,5.25,0], 0],
											["S","Land_PaperBox_closed_F", [-3.875,3.5,0], 210],
											["V", selectRandom (_vehL + _vehM), [7.75,-6.87695,0.2], 195],
											["V", selectRandom _hmgArr, [-0.5,8,0.2], 0]
										]
									],
									[
										"o_installation",
										[
											["O","Land_Sacks_heap_F", [-3.375,-3,0], 15],
											["O","Land_WoodenTable_large_F", [2.375,-3.125,0], 30],
											["S","Land_BagFence_Corner_F", [-7.75,8.875,0], 270],
											["S","Land_BagFence_Short_F", [-6.479,9.20264,0], 0],
											["S","Land_BagFence_Short_F", [-8.104,7.45264,0], 90],
											["S","Land_ChairWood_F", [1.61133,-3.24658,0], 285],
											["S","Land_ChairWood_F", [3.13135,-3.11377,0], 105],
											["S","Land_FieldToilet_F", [4.625,5.5,0], 105],
											["S","Land_Mil_WallBig_4m_F", [-2.5,-5.125,0], 0],
											["S","Land_Mil_WallBig_4m_F", [-5.5,-2.125,0], 90],
											["S","Land_Mil_WallBig_4m_F", [-5.5,1.875,0], 90],
											["S","Land_Mil_WallBig_4m_F", [1.5,-5.125,0], 0],
											["S","Land_Mil_WallBig_4m_F", [4.5,-2.125,0], 270],
											["S","Land_Mil_WallBig_4m_F", [4.5,1.875,0], 270],
											["S","Land_Mil_WallBig_Corner_F", [-5.25,-4.875,0], 0],
											["S","Land_Mil_WallBig_Corner_F", [-5.25,4.625,0], 90],
											["S","Land_Mil_WallBig_Corner_F", [4.25,-4.875,0], 270],
											["S","Land_Mil_WallBig_Corner_F", [4.25,4.625,0], 180],
											["S","Land_Pallets_F", [3.25,1.125,0], 0],
											["S","Land_PaperBox_01_small_open_white_IDAP_F", [3.5,2.5,0], 315],
											["S","Land_PaperBox_closed_F", [-3.5,4.25,0], 210],
											["S","Land_PaperBox_closed_F", [-3.75,6.125,0], 285],
											["S","Land_PaperBox_closed_F", [-4.25,2.375,0], 0],
											["V", selectRandom (_vehL + _vehM), [6,10.123,0.2], 75],
											["V", selectRandom _hmgArr, [-6.625,8.125,0.2], 270]
										]
									],
									[
										"o_recon",
										[
											["O","Land_Sacks_heap_F", [-0.125,1.75,0], 150],
											["O","Land_WoodenTable_large_F", [-6,0.625,0], 30],
											["S","CamoNet_BLUFOR_open_F", [0,0,0.625], 90],
											["S","Land_BagFence_Corner_F", [-6.5,5.25,0], 270],
											["S","Land_BagFence_Corner_F", [6,-6,0], 90],
											["S","Land_BagFence_Short_F", [-5.229,5.57764,0], 0],
											["S","Land_BagFence_Short_F", [-6.854,3.82764,0], 90],
											["S","Land_BagFence_Short_F", [4.729,-6.32764,0], 180],
											["S","Land_BagFence_Short_F", [6.354,-4.57764,0], 270],
											["S","Land_ChairWood_F", [-5.24365,0.63623,0], 105],
											["S","Land_ChairWood_F", [-6.76367,0.503418,0], 285],
											["S","Land_CratesWooden_F", [-2.125,1,0], 90],
											["S","Land_FieldToilet_F", [-4.125,-4.375,0], 105],
											["S","Land_FoodSacks_01_small_brown_F", [1.125,-2,0.2], 300],
											["S","Land_IndFnc_3_D_F", [-3.375,-1.62549,0], 270],
											["S","Land_IndFnc_3_D_F", [2.625,1.37451,0], 90],
											["S","Land_IndFnc_3_F", [-1.875,-3.12549,0], 180],
											["S","Land_IndFnc_3_F", [-1.875,2.87451,0], 0],
											["S","Land_IndFnc_3_F", [-3.375,1.37451,0], 270],
											["S","Land_IndFnc_3_F", [1.125,2.87451,0], 0],
											["S","Land_IndFnc_3_F", [2.625,-1.62549,0], 90],
											["S","Land_IndFnc_3_Hole_F", [1.125,-3.125,0], 180],
											["S","Land_Pallet_F", [1.125,-2,0], 0],
											["S","Land_PaperBox_closed_F", [-0.875,4.5,0], 210],
											["S","Land_PaperBox_closed_F", [1.25,4.375,0], 0],
											["V", selectRandom (_vehL + _vehM), [9.75,5.49805,0.2], 15],
											["V", selectRandom _hmgArr, [4.875,-5.25,0.2], 90]
										]
									],
									[
										"o_unknown",
										[
											["O","Land_Sacks_heap_F", [1.25,-1.875,0], 330],
											["O","Land_WoodenTable_large_F", [-1.125,2.25,0], 90],
											["S","Land_BagFence_Short_F", [5.375,-3.125,0], 120],
											["S","Land_BagFence_Short_F", [6.07959,4.44482,0], 255],
											["S","Land_BagFence_Short_F", [6.25,-1.75,0], 120],
											["S","Land_BagFence_Short_F", [6.5,2.875,0], 255],
											["S","Land_BagFence_Short_F", [6.64697,-0.263672,0], 90],
											["S","Land_BagFence_Short_F", [6.64697,1.36133,0], 90],
											["S","Land_ChairWood_F", [-0.689941,1.58057,0], 165],
											["S","Land_FieldToilet_F", [-2.875,-2.125,0], 195],
											["S","Land_FoodSack_01_full_brown_F", [0.25,2.25,0], 45],
											["S","Land_FoodSacks_01_small_brown_F", [1.25,2.375,0], 60],
											["S","Land_FoodSacks_01_small_brown_F", [2.03369,2.82568,0], 165],
											["S","Land_Pallets_F", [2,-4.5,0], 120],
											["S","Land_PaperBox_closed_F", [-0.875,-2.375,0], 210],
											["S","Land_Wall_IndCnc_2deco_F", [-1,3,0], 0],
											["S","Land_Wall_IndCnc_2deco_F", [-2,-3.875,0], 180],
											["S","Land_Wall_IndCnc_2deco_F", [-3.625,2,0], 135],
											["S","Land_Wall_IndCnc_2deco_F", [-4.125,-2.75,0], 255],
											["S","Land_Wall_IndCnc_2deco_F", [1,-3.5,0], 165],
											["S","Land_Wall_IndCnc_2deco_F", [2,3.375,0], 345],
											["S","Land_Wall_IndCnc_2deco_F", [2.875,-1.625,0], 105],
											["V", selectRandom (_vehL + _vehM), [-5,5.87305,0.2], 255],
											["V", selectRandom _hmgArr, [5.125,-0.875,0.2], 120]
										]
									],
									[
										"o_installation",
										[
											["O","Land_Sacks_heap_F", [0.125,-2.125,0], 0],
											["O","Land_WoodenTable_large_F", [-2.75,-1.75,0], 180],
											["S","Land_BagFence_Corner_F", [-5.771,6.29736,0], 270],
											["S","Land_BagFence_Corner_F", [4.5,6.125,0], 0],
											["S","Land_BagFence_Short_F", [-4.5,6.625,0], 0],
											["S","Land_BagFence_Short_F", [-6.125,4.875,0], 90],
											["S","Land_BagFence_Short_F", [3.07764,6.479,0], 180],
											["S","Land_BagFence_Short_F", [4.82764,4.854,0], 90],
											["S","Land_CamoConcreteWall_01_l_4m_d_v1_F", [1.875,-0.25,0], 270],
											["S","Land_CamoConcreteWall_01_l_4m_v1_F", [-0.75,-3.125,0], 0],
											["S","Land_CamoConcreteWall_01_l_4m_v1_F", [-3.625,-0.125,0], 90],
											["S","Land_CamoConcreteWall_01_l_end_v1_F", [-2.5,2.625,0], 0],
											["S","Land_CamoConcreteWall_01_l_end_v1_F", [1.125,3,0], 180],
											["S","Land_ChairWood_F", [-2.1123,-1.35449,0], 75],
											["S","Land_CratesWooden_F", [0.625,-4.375,0], 0],
											["S","Land_FoodSacks_01_large_brown_F", [1.25,1.875,0], 0],
											["S","Land_FoodSacks_01_small_brown_F", [-2.625,-0.375,0], 330],
											["S","Land_Pallets_stack_F", [-2.25,4.375,0], 45],
											["S","Land_PaperBox_closed_F", [-2.5,1.625,0], 0],
											["V", selectRandom (_vehL + _vehM), [-6,-4.87695,0.2], 165],
											["V", selectRandom _hmgArr, [3.75,5,0.2], 0]
										]
									],
									[
										"o_unknown",
										[
											["O","Land_CampingTable_F", [2.5,1.375,0], 270],
											["O","Land_Sacks_heap_F", [1.625,-2,0], 300],
											["S","Land_BagFence_Corner_F", [6.271,-7.92236,0], 90],
											["S","Land_BagFence_Short_F", [5,-8.25,0], 180],
											["S","Land_BagFence_Short_F", [6.625,-1.5,0], 270],
											["S","Land_BagFence_Short_F", [6.625,-3.125,0], 270],
											["S","Land_BagFence_Short_F", [6.625,-4.875,0], 270],
											["S","Land_BagFence_Short_F", [6.625,-6.5,0], 270],
											["S","Land_CampingChair_V2_F", [1.875,1.875,0], 300],
											["S","Land_CratesWooden_F", [0.625,5,0], 0],
											["S","Land_FoodSacks_01_cargo_brown_F", [-3.375,1.375,0], 0],
											["S","Land_Mil_WiredFenceD_F", [-0.75,-3.75,0], 0],
											["S","Land_Mil_WiredFence_F", [-0.689941,3.26807,0], 180],
											["S","Land_Mil_WiredFence_F", [-4.18994,-0.231934,0], 90],
											["S","Land_Mil_WiredFence_F", [2.81006,-0.231934,0], 270],
											["S","Land_Pallets_stack_F", [4.125,2.125,0], 0],
											["S","Land_PaperBox_closed_F", [-3.125,-2.375,0], 210],
											["S","Land_PaperBox_closed_F", [-3.25,-0.5,0], 0],
											["V", selectRandom (_vehL + _vehM), [-7.75,-5,0.2], 330],
											["V", selectRandom _hmgArr, [4.75,-6.875,0.2], 180]
										]
									],
									[
										"o_installation",
										[
											["O","Land_CampingTable_F", [1.375,2.75,0], 180],
											["O","Land_Sacks_heap_F", [3,-3.5,0], 330],
											["S","Land_BagFence_Short_F", [-6.875,-2.5,0], 85],
											["S","Land_BagFence_Short_F", [-7,-0.875,0], 85],
											["S","Land_BagFence_Short_F", [5.52979,-3.2959,0], 325],
											["S","Land_BagFence_Short_F", [6.75,-2.125,0], 310],
											["S","Land_Bunker_01_blocks_1_F", [-1,-5.375,0], 180],
											["S","Land_Bunker_01_blocks_1_F", [-2.75,-5.125,0], 195],
											["S","Land_Bunker_01_blocks_1_F", [-4.375,-4.375,0], 210],
											["S","Land_Bunker_01_blocks_1_F", [-6.5,4.125,0], 300],
											["S","Land_Bunker_01_blocks_1_F", [-7.125,2.5,0], 285],
											["S","Land_Bunker_01_blocks_1_F", [-7.375,0.75,0], 270],
											["S","Land_Bunker_01_blocks_1_F", [0.75,-5.375,0], 180],
											["S","Land_Bunker_01_blocks_1_F", [2.5,-5.25,0], 165],
											["S","Land_Bunker_01_blocks_1_F", [4.25,-4.5,0], 150],
											["S","Land_Bunker_01_blocks_1_F", [5.875,3.625,0], 60],
											["S","Land_Bunker_01_blocks_1_F", [6.5,2,0], 75],
											["S","Land_Bunker_01_blocks_1_F", [6.75,0.25,0], 90],
											["S","Land_Bunker_01_small_F", [-0.125,5.375,0], 180],
											["S","Land_CampingChair_V2_F", [1.88916,2.20898,0], 150],
											["S","Land_CratesWooden_F", [-0.5,-3.75,0], 0],
											["S","Land_PaperBox_open_full_F", [-3.25,-3.125,0], 120],
											["V", selectRandom (_vehL + _vehM), [-3.875,-11.252,0.2], 105],
											["V", selectRandom _hmgArr, [-5.75,-1.5,0.2], 270],
											["V", selectRandom _hmgArr, [5,-2,0.2], 135]
										]
									],
									[
										"o_unknown",
										[
											["O","Land_CampingTable_F", [-3.25,-2,0], 150],
											["O","Land_Sacks_heap_F", [3.875,-2.375,0], 105],
											["S","Land_BagBunker_Small_F", [-3.25,2.5,0], 150],
											["S","Land_BagFence_Long_F", [1.125,4.125,0], 180],
											["S","Land_BagFence_Round_F", [-6.25,-4.25,0], 45],
											["S","Land_BagFence_Round_F", [-6.25,1.125,0], 135],
											["S","Land_BagFence_Round_F", [3.62549,3.49951,0], 225],
											["S","Land_BagFence_Round_F", [5.625,-4.125,0], 315],
											["S","Land_BagFence_Short_F", [-1,4.125,0], 180],
											["S","Land_BagFence_Short_F", [-2.625,-5,0], 0],
											["S","Land_BagFence_Short_F", [-4.375,-5,0], 0],
											["S","Land_BagFence_Short_F", [-6.875,-0.625,0], 270],
											["S","Land_BagFence_Short_F", [-6.875,-2.25,0], 270],
											["S","Land_BagFence_Short_F", [3.75,-4.75,0], 180],
											["S","Land_BagFence_Short_F", [4.25,1.5,0], 90],
											["S","Land_BagFence_Short_F", [6.25,-2.25,0], 270],
											["S","Land_BarrelTrash_grey_F", [0.875,-3.125,0], 0],
											["S","Land_CampingChair_V2_F", [-2.53418,-2.21143,0], 120],
											["S","Land_CratesWooden_F", [-0.179199,-1.83301,0], 0],
											["S","Land_PaperBox_open_empty_F", [2.0708,-2.33301,0], 0],
											["S","Land_PaperBox_open_full_F", [1.32031,-0.33,0], 120],
											["S","Land_Razorwire_F", [-4.6792,6.66699,0], 165],
											["S","Land_Razorwire_F", [3.0708,6.79199,0], 195],
											["V", selectRandom (_vehL + _vehM), [-11.125,0.623047,0.2], 0],
											["V", selectRandom _hmgArr, [-3.25,2.5,0.2], 330]
										]
									],
									[
										"o_unknown",
										[
											["O","Land_CampingTable_F", [6.75,0,0], 90],
											["O","Land_Sacks_heap_F", [0.5,-2.25,0], 60],
											["S","Land_BagBunker_Small_F", [0,4.125,0], 180],
											["S","Land_BagFence_Corner_F", [5.125,2.125,0], 0],
											["S","Land_BagFence_Corner_F", [5.23975,-3.75195,0], 90],
											["S","Land_BagFence_Long_F", [3.5,-4.125,0], 180],
											["S","Land_BagFence_Round_F", [-3.20801,2.91406,0], 135],
											["S","Land_BagFence_Round_F", [-3.25,0.75,0], 45],
											["S","Land_BagFence_Short_F", [3.75,2.375,0], 0],
											["S","Land_BagFence_Short_F", [5.5,-2.375,0], 90],
											["S","Land_CampingChair_V2_F", [7.29102,0.51416,0], 60],
											["S","Land_CratesPlastic_F", [1.5,-5.125,0], 60],
											["S","Land_CratesWooden_F", [3.75,-0.25,0], 90],
											["S","Land_GarbagePallet_F", [-3.25,-3.875,0], 195],
											["S","Land_GarbageWashingMachine_F", [-0.51,-5.3,0], 315],
											["S","Land_HBarrier_3_F", [5.5,0.125,0], 90],
											["S","Land_Razorwire_F", [-6.75,2.25,0], 90],
											["S","Land_Tyre_F", [-0.943848,-3.021,0], 195],
											["S","Land_Wreck_Ural_F", [-3.5,-6.625,0], 120],
											["S","MetalBarrel_burning_F", [4.125,-2.125,0], 300],
											["V", selectRandom (_vehL + _vehM), [6.75,-8.5,0.2], 75],
											["V", selectRandom _hmgArr, [0.25,4.125,0.2], 0]
										]
									],
									[
										"o_unknown",
										[
											["O","Land_CampingTable_F", [1.375,-1,0], 150],
											["O","Land_Sacks_heap_F", [-2.375,-2.625,0], 0],
											["S","Land_BagBunker_Small_F", [-3.35815,1.41455,0], 180],
											["S","Land_BagFence_Long_F", [-2.10815,-3.83545,0], 0],
											["S","Land_BagFence_Long_F", [-4.98315,-0.585449,0], 270],
											["S","Land_BagFence_Long_F", [3.52222,2.1084,0], 90],
											["S","Land_BagFence_Round_F", [-0.852783,4.6084,0], 135],
											["S","Land_BagFence_Round_F", [-4.3584,-3.21045,0], 45],
											["S","Land_BagFence_Round_F", [2.94995,4.61914,0], 225],
											["S","Land_BagFence_Short_F", [1.02222,5.2334,0], 180],
											["S","Land_CampingChair_V2_F", [2.09082,-1.21143,0], 120],
											["S","Land_CratesShabby_F", [-1.25,-4.5,0], 96],
											["S","Land_CratesShabby_F", [4.51685,-3.08545,0], 312],
											["S","Land_GarbagePallet_F", [2.89185,-3.83545,0], 54],
											["S","Land_Pallet_MilBoxes_F", [-2.625,-5,0], 180],
											["S","MetalBarrel_burning_F", [0.516846,-0.335449,0], 300],
											["V", selectRandom _hmgArr, [-3.125,1.25,0.2], 0]
										]
									],
									[
										"o_unknown",
										[
											["O","Land_CampingTable_F", [3,-6.25,0], 270],
											["O","Land_Sacks_heap_F", [-0.875,-4.125,0], 180],
											["S","Land_BagBunker_Small_F", [0.296387,1.07861,0], 180],
											["S","Land_BagFence_Long_F", [-1.125,-3.25,0], 0],
											["S","Land_BagFence_Long_F", [-3.0459,0.490234,0], 180],
											["S","Land_BagFence_Long_F", [2.00049,-0.931152,0], 270],
											["S","Land_BagFence_Round_F", [2.62549,-3.55615,0], 45],
											["S","Land_BarrelSand_F", [3.17139,-4.79639,0], 0],
											["S","Land_CampingChair_V2_F", [2.45898,-6.76416,0], 240],
											["S","Land_CratesShabby_F", [-3.125,-4.625,0], 336],
											["S","Land_CratesWooden_F", [-4.875,-5,0], 0],
											["S","Land_HBarrier_3_F", [-4.125,-3.25,0], 0],
											["S","Land_HBarrier_3_F", [-5.0459,-0.884766,0], 90],
											["S","Land_HBarrier_3_F", [4.37549,-5.55615,0], 90],
											["S","Land_Pallets_F", [3.54639,-1.42139,0], 165],
											["S","Land_PaperBox_open_empty_F", [-3.375,-1.5,0], 0],
											["S","Land_Razorwire_F", [0.250488,5.69385,0], 180],
											["V", selectRandom (_vehL + _vehM), [-3.75,-9.37695,0.2], 285],
											["V", selectRandom _hmgArr, [0.375,1.25,0.2], 0]
										]
									],
									[
										"o_unknown",
										[
											["O","Land_CampingTable_F", [-4,-4.875,0], 180],
											["O","Land_Sacks_heap_F", [2.625,-6,0], 105],
											["S","Land_BagBunker_Tower_F", [-0.100586,2.57666,0], 90],
											["S","Land_BagFence_End_F", [-5.19727,0.282715,0], 180],
											["S","Land_BagFence_End_F", [-7.07227,-1.71729,0], 90],
											["S","Land_BagFence_End_F", [5.80273,-2.34277,0], 270],
											["S","Land_BagFence_Round_F", [-6.44727,-0.342285,0], 135],
											["S","Land_BagFence_Round_F", [-6.44751,-2.96729,0], 45],
											["S","Land_BagFence_Round_F", [5.05273,-3.71777,0], 315],
											["S","Land_BagFence_Round_F", [5.17798,-1.09229,0], 225],
											["S","Land_BarrelSand_F", [3.14941,-0.79834,0], 0],
											["S","Land_CampingChair_V2_F", [-3.48584,-5.41602,0], 150],
											["S","Land_CratesWooden_F", [0.625,-6.375,0], 0],
											["S","Land_HBarrier_3_F", [-3.94727,-3.59229,0], 0],
											["S","Land_PaperBox_closed_F", [1.14941,-4.79883,0], 0],
											["S","Land_PaperBox_open_empty_F", [-7.125,-4.5,0], 120],
											["V", selectRandom (_vehL + _vehM), [-1,-10.877,0.2], 105],
											["V", selectRandom _hmgArr, [-1.25,2.75,2.8], 0]
										]
									],
									[
										"o_unknown",
										[
											["O","Land_CampingTable_F", [-4.75,0.25,0], 180],
											["O","Land_Sacks_heap_F", [-1.875,-7.25,0], 180],
											["S","Land_BagBunker_Tower_F", [1.34814,1.73975,0], 90],
											["S","Land_BagFence_Corner_F", [4.12012,3.28174,2.75], 180],
											["S","Land_BagFence_Corner_F", [4.24512,0.531738,2.75], 90],
											["S","Land_BagFence_End_F", [0.745117,0.156738,2.75], 180],
											["S","Land_BagFence_Long_F", [-6.15186,3.61475,0], 90],
											["S","Land_BagFence_Long_F", [-6.375,-0.625,0], 90],
											["S","Land_BagFence_Long_F", [0.598145,-5.88525,0], 180],
											["S","Land_BagFence_Long_F", [2.12012,3.53174,2.75], 180],
											["S","Land_BagFence_Long_F", [2.37012,0.156738,2.75], 180],
											["S","Land_BagFence_Long_F", [4.49512,1.65674,2.75], 270],
											["S","Land_BagFence_Round_F", [-3.27661,5.86475,0], 225],
											["S","Land_BagFence_Round_F", [-5.44092,5.90674,0], 135],
											["S","Land_BagFence_Round_F", [3.09814,-5.26025,0], 315],
											["S","Land_CampingChair_V2_F", [-4.23584,-0.291016,0.2], 150],
											["S","Land_GarbageBags_F", [-4.75,-6.625,0], 0],
											["S","Land_HBarrier_3_F", [-2.27686,-5.63525,0], 180],
											["S","Land_HBarrier_3_F", [-5.02686,1.61475,0], 0],
											["S","Land_HBarrier_3_F", [3.84814,-2.63525,0], 90],
											["S","Land_Pallets_F", [-7.375,-7.5,0], 255],
											["S","Land_PaperBox_open_full_F", [0.598145,-2.13525,0], 75],
											["V", selectRandom (_vehL + _vehM), [-11.375,0.623047,0], 345],
											["V", selectRandom _hmgArr, [-4.125,5.25,0.2], 0],
											["V", selectRandom _hmgArr, [2.75,2,2.8], 0]
										]
									],
									[
										"o_unknown",
										[
											["O","Land_CampingTable_F", [6.875,1.875,0], 180],
											["O","Land_Sacks_heap_F", [-5,0.625,0], 240],
											["S","Land_BagBunker_Tower_F", [0.677246,2.31348,0], 90],
											["S","Land_CampingChair_V2_F", [7.38916,1.33398,0], 150],
											["S","Land_HBarrier_1_F", [-6.94775,2.31348,0], 195],
											["S","Land_HBarrier_1_F", [10.0522,-0.186523,0], 345],
											["S","Land_HBarrier_3_F", [-5.19775,2.56348,0], 165],
											["S","Land_HBarrier_3_F", [-7.57275,-2.93652,0], 90],
											["S","Land_HBarrier_3_F", [6.67725,3.18848,0], 0],
											["S","Land_HBarrier_3_F", [8.55225,-4.18652,0], 0],
											["S","Land_HBarrier_Big_F", [0.80249,-4.56152,0], 180],
											["S","Land_MetalBarrel_F", [2.92725,-1.06152,0], 270],
											["S","Land_MetalBarrel_F", [3.302,-1.71094,0], 60],
											["S","Land_MetalBarrel_F", [3.71875,-1.18213,0], 195],
											["S","Land_Pallet_MilBoxes_F", [4.05225,-6.31152,0], 345],
											["S","Land_Pallets_F", [-8.375,2.875,0], 270],
											["S","Land_Pallets_stack_F", [-1.57275,-6.68652,0], 0],
											["S","Land_PaperBox_closed_F", [0.302246,-6.56152,0], 345],
											["S","Land_PaperBox_closed_F", [2.05225,-6.56152,0], 180],
											["V", selectRandom _hmgArr, [-0.375,2.375,2.8], 0]
										]
									],
									[
										"o_unknown",
										[
											["O","Land_CampingTable_F", [2.625,-2.625,0], 270],
											["O","Land_Sacks_heap_F", [-1.375,-4.625,0], 60],
											["S","Land_BagBunker_Tower_F", [0.121582,1.479,0], 90],
											["S","Land_BagFence_Round_F", [-2,-5.625,0], 45],
											["S","Land_BagFence_Round_F", [3.375,-5.625,0], 315],
											["S","Land_BagFence_Round_F", [7.12158,0.479004,0], 315],
											["S","Land_BagFence_Round_F", [7.12183,2.479,0], 225],
											["S","Land_BagFence_Short_F", [-0.25,-6.25,0], 180],
											["S","Land_BagFence_Short_F", [-2.625,-3.75,0], 270],
											["S","Land_BagFence_Short_F", [1.5,-6.25,0], 0],
											["S","Land_BagFence_Short_F", [5.24658,3.229,0], 180],
											["S","Land_CampingChair_V2_F", [2.08398,-3.13916,0], 240],
											["S","Land_HBarrier_3_F", [3.99658,-2.896,0], 90],
											["V", selectRandom (_vehL + _vehM), [-8.75,-2.50195,0.2], 345],
											["V", selectRandom _hmgArr, [-1.625,1.625,2.8], 0],
											["V", selectRandom _hmgArr, [1.125,-4.875,0.2], 180]
										]
									],
									[
										"o_unknown",
										[
											["O","Land_Sacks_heap_F", [2.625,-2.125,0], 180],
											["O","Land_WoodenTable_small_F", [-1.25,-4.125,0], 120],
											["S","Land_BagBunker_Tower_F", [-1.47388,1.74951,0], 90],
											["S","Land_BagFence_Long_F", [-2.74976,-5.875,0], 180],
											["S","Land_BagFence_Long_F", [-5.59888,-2.62549,0], 270],
											["S","Land_BagFence_Long_F", [6.27612,1.24951,0], 90],
											["S","Land_BagFence_Round_F", [-5,-5.25,0], 45],
											["S","Land_BagFence_Round_F", [1.25024,-5.25,0], 315],
											["S","Land_BagFence_Round_F", [5.62842,3.75391,0], 225],
											["S","Land_BagFence_Short_F", [-0.624756,-5.875,0], 180],
											["S","Land_BagFence_Short_F", [3.77612,4.49951,0], 180],
											["S","Land_ChairWood_F", [-1.00537,-3.58057,0], 15],
											["S","Land_CratesWooden_F", [-2.5,-7.125,0], 0],
											["S","Land_Pallets_stack_F", [-4.375,-2.25,0], 165],
											["S","Land_PaperBox_open_empty_F", [-6.75,-2.375,0], 0],
											["S","Land_PaperBox_open_full_F", [2.375,-6.5,0], 195],
											["S","Land_Razorwire_F", [-1.34888,5.49951,0], 180],
											["V", selectRandom (_vehL + _vehM), [9.625,-4.12695,0.2], 30],
											["V", selectRandom _hmgArr, [-2.26,1.46,2.8], 0],
											["V", selectRandom _hmgArr, [4.875,1.875,0.2], 90]
										]
									],
									[
										"o_unknown",
										[
											["O","Land_Sacks_heap_F", [4.375,0.75,0], 180],
											["O","Land_WoodenTable_small_F", [1.375,-2,0], 270],
											["S","Land_BagBunker_Tower_F", [-1.4519,1.80322,0], 90],
											["S","Land_BagFence_Corner_F", [5.2981,1.55322,0], 0],
											["S","Land_BagFence_Corner_F", [5.41089,-3.93848,0], 90],
											["S","Land_BagFence_Long_F", [3.54614,-4.31152,0], 180],
											["S","Land_BagFence_Long_F", [5.67114,-0.186523,0], 270],
											["S","Land_BagFence_Short_F", [3.92114,1.81348,0], 0],
											["S","Land_BagFence_Short_F", [5.67114,-2.56201,0], 90],
											["S","Land_BarrelSand_F", [-2.5,-4.875,0], 0],
											["S","Land_ChairWood_F", [1.47266,-2.68555,0], 165],
											["S","Land_CratesWooden_F", [-4.75,-2.25,0], 180],
											["S","Land_HBarrier_3_F", [-2.3269,-2.82178,0], 90],
											["S","Land_Pallet_MilBoxes_F", [4.25,-6,0], 255],
											["S","Land_PaperBox_closed_F", [-1.125,-5.125,0], 225],
											["V", selectRandom (_vehL + _vehM), [-3.75,-9.00195,0.2], 285],
											["V", selectRandom _hmgArr, [-2.17,1.39,2.8], 0]
										]
									],
									[
										"o_unknown",
										[
											["O","Land_Sacks_heap_F", [0.625,-4,0], 0],
											["O","Land_WoodenTable_small_F", [-3,-4.125,0], 105],
											["S","Land_BagBunker_Tower_F", [1.2312,2.68604,0], 90],
											["S","Land_ChairWood_F", [-2.91772,-3.53906,0], 0],
											["S","Land_HBarrier_1_F", [-2.646,-5.64209,0], 90],
											["S","Land_HBarrier_1_F", [-3.875,-5.5,0], 105],
											["S","Land_HBarrier_1_F", [-4.875,-4.875,0], 315],
											["S","Land_HBarrier_1_F", [-6.1228,3.45313,0], 240],
											["S","Land_HBarrier_3_F", [1.354,-5.64209,0], 180],
											["S","Land_HBarrier_3_F", [3.7522,-1.67188,0], 90],
											["S","Land_Pallets_F", [-6.25,1.75,0], 255],
											["S","Land_PaperBox_closed_F", [-1.0188,-1.18896,0], 90],
											["S","Land_WaterBarrel_F", [0.481201,-0.938965,0], 360],
											["S","MetalBarrel_burning_F", [-4.25,0.5,0], 300],
											["V", selectRandom (_vehL + _vehM), [-11.375,0,0.2], 345],
											["V", selectRandom _hmgArr, [0.168,2.57,2.8], 0]
										]
									],
									[
										"o_unknown",
										[
											["O","Land_Sacks_heap_F", [1.375,-4.25,0], 180],
											["O","Land_WoodenTable_small_F", [-1.625,-1.5,0], 15],
											["S","Land_BagBunker_Small_F", [-2.31201,2.66846,0], 180],
											["S","Land_BagFence_Long_F", [-4.18701,0.293457,0], 90],
											["S","Land_BagFence_Long_F", [0.562988,-3.08105,0], 180],
											["S","Land_BagFence_Long_F", [0.687988,1.79395,0], 180],
											["S","Land_BagFence_Round_F", [3.06738,-2.43359,0], 315],
											["S","Land_BagFence_Round_F", [3.18823,1.16846,0], 225],
											["S","Land_BagFence_Short_F", [-4.43701,-1.95654,0], 105],
											["S","Land_BagFence_Short_F", [3.81299,-0.581055,0], 270],
											["S","Land_ChairWood_F", [-2.25537,-1.47461,0], 270],
											["S","Land_CratesShabby_F", [-0.563721,0.988281,0], 90],
											["S","Land_CratesShabby_F", [0.437988,0.918945,0], 0],
											["S","Land_Pallet_F", [1.875,3.5,0], 253],
											["S","Land_PaperBox_closed_F", [3.875,2.75,0], 300],
											["S","Land_Razorwire_F", [-1.18701,5.91846,0], 180],
											["S","MetalBarrel_burning_F", [-4.875,0.5,0], 300],
											["V", selectRandom (_vehL + _vehM), [-5.75,-6.25195,0.2], 285],
											["V", selectRandom _hmgArr, [-2,3,0.2], 0],
											["V", selectRandom _hmgArr, [2.75,-1,0.2], 90]
										]
									],
									[
										"o_unknown",
										[
											["O","Land_Sacks_heap_F", [-6.50342,-3.2998,0], 210],
											["O","Land_WoodenTable_small_F", [-3.75,-2.75,0], 180],
											["S","Land_BagBunker_Small_F", [-0.175537,2.03223,0], 180],
											["S","Land_BagFence_Long_F", [-4.92554,-1.96777,0], 90],
											["S","Land_BagFence_Round_F", [-4.30054,0.532227,0], 135],
											["S","Land_BagFence_Round_F", [-4.30078,-4.34277,0], 45],
											["S","Land_BagFence_Round_F", [2.44971,0.407227,0], 225],
											["S","Land_BagFence_Round_F", [3.69922,-1.84277,0], 45],
											["S","Land_BagFence_Short_F", [-2.55054,-4.96777,0], 0],
											["S","Land_BagFence_Short_F", [-2.55054,1.15723,0], 180],
											["S","Land_ChairWood_F", [-3.10913,-2.70947,0], 75],
											["S","Land_Pallets_F", [-6.25,0.375,0], 120],
											["S","Land_Pallets_stack_F", [4.5,-1,0], 109],
											["S","Land_PaperBox_closed_F", [-6.375,-1.375,0], 225],
											["S","Land_PaperBox_open_empty_F", [-3.80054,-0.967773,0], 0],
											["S","Land_Razorwire_F", [-0.25,5.875,0], 180],
											["V", selectRandom (_vehL + _vehM), [0.875,-7.75195,0.2], 255],
											["V", selectRandom _hmgArr, [0.125,2.125,0.2], 0]
										]
									],
									[
										"o_unknown",
										[
											["O","Land_Sacks_heap_F", [3,-1.875,0], 255],
											["O","Land_WoodenTable_small_F", [-0.451172,-5.2373,0], 255],
											["S","Land_BagBunker_Small_F", [1.38965,2.91455,0], 180],
											["S","Land_BagFence_Corner_F", [-3.75,0.75,0], 180],
											["S","Land_BagFence_Corner_F", [-3.87476,4.375,0], 270],
											["S","Land_BagFence_Corner_F", [3.76465,-0.835449,0], 0],
											["S","Land_BagFence_Long_F", [-2.125,4.75,0], 180],
											["S","Land_BagFence_Long_F", [-4.125,2.5,0], 90],
											["S","Land_BagFence_Long_F", [3.13965,0.789551,0], 270],
											["S","Land_BagFence_Long_F", [4.13965,-2.58545,0], 270],
											["S","Land_ChairWood_F", [-0.192383,-5.87744,0], 150],
											["S","Land_CratesPlastic_F", [-0.360352,-1.83545,0], 120],
											["S","Land_Pallet_F", [-2.48535,-4.58545,0], 95],
											["S","Land_Pallets_F", [-4.27466,-2.01416,0], 330],
											["S","Land_PaperBox_closed_F", [-0.735352,-3.21045,0], 195],
											["S","Land_PaperBox_closed_F", [-2.48535,-2.83545,0], 0],
											["S","Land_PaperBox_open_empty_F", [-1.61035,-1.08545,0], 105],
											["V", selectRandom (_vehL + _vehM), [3.5,-7.75195,0.2], 60],
											["V", selectRandom _hmgArr, [-3,3.625,0.2], 315],
											["V", selectRandom _hmgArr, [1.625,3.125,0.2], 0]
										]
									],
									[
										"o_unknown",
										[
											["O","Land_Sacks_heap_F", [2.625,1.5,0], 180],
											["O","Land_WoodenTable_small_F", [-2,-0.75,0], 300],
											["S","Land_BagBunker_Small_F", [0.0510254,3.44629,0], 180],
											["S","Land_BagFence_Long_F", [-2.94897,2.44629,0], 0],
											["S","Land_BagFence_Long_F", [3,-3.625,0], 0],
											["S","Land_BagFence_Long_F", [3.17603,2.44629,0], 180],
											["S","Land_BagFence_Long_F", [6.25,-0.75,0], 90],
											["S","Land_BagFence_Round_F", [-5.32397,1.82129,0], 135],
											["S","Land_BagFence_Round_F", [0.749756,-2.875,0], 45],
											["S","Land_BagFence_Round_F", [5.5,-3,0], 315],
											["S","Land_BagFence_Round_F", [5.62524,1.75,0], 225],
											["S","Land_ChairWood_F", [-2.23193,-1.396,0], 195],
											["S","Land_Pallets_F", [-7.375,0.5,0], 210],
											["S","Land_PaperBox_closed_F", [-0.5,-3.625,0], 150],
											["S","Land_PaperBox_closed_F", [1.375,-4.75,0], 195],
											["V", selectRandom (_vehL + _vehM), [-5.875,-4.87695,0.2], 300],
											["V", selectRandom _hmgArr, [0.375,3.75,0.2], 0],
											["V", selectRandom _hmgArr, [5.125,-1,0.2], 90]
										]
									],
									[
										"o_unknown",
										[
											["O","Land_CampingTable_F", [-3.5,-3,0], 270],
											["O","Land_Sacks_heap_F", [-0.375,-2,0], 0],
											["S","Land_BagBunker_Small_F", [4.125,0.5,0], 210],
											["S","Land_BagFence_Long_F", [0.845215,0.407227,0], 180],
											["S","Land_BagFence_Round_F", [-1.22705,3.04297,0], 225],
											["S","Land_BagFence_Round_F", [-5.03076,3.15137,0], 135],
											["S","Land_BagFence_Round_F", [-5.0791,-0.586426,0], 45],
											["S","Land_BagFence_Short_F", [-0.529785,1.15723,0], 270],
											["S","Land_BagFence_Short_F", [-3.07959,3.78857,0], 180],
											["S","Land_BagFence_Short_F", [-3.22656,-1.33203,0], 0],
											["S","Land_BagFence_Short_F", [-5.77637,1.29932,0], 90],
											["S","Land_BagFence_Short_F", [2.47021,-3.71777,0], 0],
											["S","Land_CampingChair_V2_F", [-4.04102,-3.51416,0], 240],
											["S","Land_GarbageWashingMachine_F", [0.25,5.75,0], 15],
											["S","Land_HBarrier_3_F", [-2.15479,-2.71777,0], 90],
											["S","Land_HBarrier_3_F", [0.0952148,-3.59277,0], 0],
											["S","Land_Pallets_stack_F", [2.22021,-5.21777,0], 330],
											["S","Land_PaperBox_open_empty_F", [-1.40479,-5.46777,0], 90],
											["S","Land_PaperBox_open_full_F", [0.345215,-5.46777,0], 90],
											["S","Land_WaterBarrel_F", [-2.90479,-5.21777,0], 360],
											["V", selectRandom (_vehL + _vehM), [10.875,-5.00195,0.2], 60],
											["V", selectRandom _hmgArr, [-2.875,2.625,0.2], 0],
											["V", selectRandom _hmgArr, [4.625,0.5,0.2], 30]
										]
									],
									[
										"o_installation",
										[
											["O","Land_Cargo_Patrol_V2_F", [-0.160645,-0.798828,0], 180],
											["O","Land_Sacks_heap_F", [-0.875,-5,0], 135],
											["O","Land_WoodenTable_small_F", [2.25,0.625,0], 0],
											["S","Land_BagFence_Long_F", [-4.16064,-1.79883,0], 90],
											["S","Land_BagFence_Long_F", [4.33936,-1.79883,0], 90],
											["S","Land_BagFence_Round_F", [-3.53564,-4.17383,0], 45],
											["S","Land_BagFence_Round_F", [3.71436,-4.17383,0], 315],
											["S","Land_BagFence_Short_F", [-0.910645,3.70117,0], 0],
											["S","Land_BagFence_Short_F", [0.589355,3.70117,0], 180],
											["S","Land_BarrelTrash_grey_F", [-0.160645,-2.54883,0], 360],
											["S","Land_ChairWood_F", [1.62158,0.482422,0], 255],
											["S","Land_CratesWooden_F", [-2.03564,1.45117,0], 285],
											["S","Land_GarbageBags_F", [-2.03564,-1.79883,0], 0],
											["S","Land_HBarrier_3_F", [-3.28564,3.70117,0], 180],
											["S","Land_HBarrier_3_F", [-4.16064,1.45117,0], 90],
											["S","Land_HBarrier_3_F", [2.96436,3.45117,0], 180],
											["S","Land_HBarrier_3_F", [3.83936,1.20117,0], 270],
											["V", selectRandom (_vehL + _vehM), [-9.5,-1,0.2], 0],
											["V", selectRandom _hmgArr, [-1.625,0.25,4.55], 0]
										]
									],
									[
										"o_installation",
										[
											["O","Land_Cargo_Patrol_V3_F", [-1.41602,1.9375,0], 180],
											["O","Land_Sacks_heap_F", [6.625,-2.125,0], 75],
											["O","Land_WoodenTable_small_F", [-1.25,-2.625,0], 165],
											["S","Land_BagFence_Long_F", [-3.16602,-5.4375,0], 0],
											["S","Land_BagFence_Long_F", [-6.16602,-2.4375,0], 90],
											["S","Land_BagFence_Long_F", [-6.16602,0.4375,0], 90],
											["S","Land_BagFence_Long_F", [5.45898,-2.6875,0], 90],
											["S","Land_BagFence_Round_F", [-5.41602,2.9375,0], 135],
											["S","Land_BagFence_Round_F", [-5.54126,-4.8125,0], 45],
											["S","Land_BagFence_Round_F", [4.70898,-4.9375,0], 315],
											["S","Land_BagFence_Short_F", [-0.916016,-5.4375,0], 0],
											["S","Land_BagFence_Short_F", [2.95898,-5.5625,0], 180],
											["S","Land_BarrelSand_F", [-4.54102,2.1875,0], 0],
											["S","Land_ChairWood_F", [-0.654297,-2.42285,0], 60],
											["S","Land_CratesWooden_F", [7.20898,1.6875,0], 270],
											["S","Land_HBarrier_3_F", [-2.79102,3.4375,0], 180],
											["S","Land_HBarrier_3_F", [0.458984,3.4375,0], 180],
											["S","Land_HBarrier_3_F", [5.45898,0.4375,0], 90],
											["S","Land_MetalBarrel_F", [-1.5,-6.75,0], 225],
											["S","Land_MetalBarrel_F", [-2.125,-7,0], 90],
											["S","Land_MetalBarrel_F", [-2.12524,-6.25,0], 300],
											["S","Land_Pallet_MilBoxes_F", [-3.25,-6.625,0], 180],
											["S","Land_WaterBarrel_F", [7.08398,-0.3125,0], 0],
											["S","Land_WaterTank_F", [-3.16602,0.8125,0], 90],
											["S","MetalBarrel_burning_F", [-3.41602,-1.1875,0], 90],
											["V", selectRandom (_vehL + _vehM), [-10.375,0.5,0.2], 0],
											["V", selectRandom _hmgArr, [-5,-3.25,0.2], 270],
											["V", selectRandom _hmgArr, [0.375,3,4.55], 0]
										]
									],
									[
										"o_recon",
										[
											["O","CamoNet_BLUFOR_open_F", [0.479004,0.344727,0], 0],
											["O","Land_Sacks_heap_F", [-6.75,-5.125,0], 150],
											["O","Land_WoodenTable_small_F", [1.552,0.250977,0], 270],
											["S","Land_Ammobox_rounds_F", [-1.11328,-4.09961,0], 270],
											["S","Land_Ammobox_rounds_F", [0.894043,0.4375,0], 70],
											["S","Land_Ammobox_rounds_F", [1.28369,0.580078,0], 219],
											["S","Land_BagBunker_Small_F", [-2.92627,2.49707,0], 180],
											["S","Land_BagFence_End_F", [2.771,1.01758,0], 90],
											["S","Land_BagFence_Long_F", [-5.59424,0.887695,0], 300],
											["S","Land_BagFence_Long_F", [1.16943,1.74902,0], 180],
											["S","Land_BagFence_Long_F", [5.29492,-1.77441,0], 85],
											["S","Land_BagFence_Round_F", [-6.74561,-3.6416,0], 349],
											["S","Land_BagFence_Round_F", [-7.56104,-0.335938,0], 160],
											["S","Land_BagFence_Round_F", [-8.6604,-2.37793,0], 74],
											["S","Land_BagFence_Round_F", [3.34399,2.41309,0], 129],
											["S","Land_BagFence_Round_F", [5.49878,2.61719,0], 214],
											["S","Land_BagFence_Round_F", [5.96582,0.5,0], 300],
											["S","Land_BottlePlastic_V1_F", [2.52075,-3.74707,0], 53],
											["S","Land_BottlePlastic_V1_F", [2.74487,-3.76953,0], 293],
											["S","Land_CanisterFuel_F", [-0.509766,-4.02344,0], 239],
											["S","Land_CanisterFuel_F", [0.0668945,-4.02832,0], 266],
											["S","Land_CanisterFuel_F", [1.94092,0.385742,0], 140],
											["S","Land_CncBarrierMedium4_F", [0.59668,-4.99023,0], 180],
											["S","Land_CncBarrierMedium_F", [0.169434,1.53711,0], 180],
											["S","Land_CncBarrierMedium_F", [1.66943,1.53711,0], 180],
											["S","Land_CratesWooden_F", [1.86865,-3.55469,0], 5],
											["S","Land_Garbage_square5_F", [-1.77832,-2.08594,0], 270],
											["S","Land_Garbage_square5_F", [1.38013,3.06445,0], 8],
											["S","Land_Pallet_vertical_F", [-5.33813,0.56543,0], 120],
											["S","Land_PlasticCase_01_small_F", [0.0131836,-3.59668,0], 70],
											["S","Land_PortableLongRangeRadio_F", [2.85498,-3.13086,0], 220],
											["S","Land_Sack_F", [3.3667,-3.96094,0], 270],
											["V", selectRandom _hmgArr, [-2.625,2.625,0.2], 0],
											["V", selectRandom _hmgArr, [4.875,1.125,0.2], 45]
										]
									],
									[
										"o_unknown",
										[
											["O","CamoNet_BLUFOR_F", [0.224365,-0.899414,0], 180],
											["O","Land_Sacks_heap_F", [-1.31543,3.87207,0], 330],
											["O","Land_WoodenTable_small_F", [-1.125,0.5,0], 210],
											["S","Land_BagBunker_Small_F", [2.59375,3.2168,0], 180],
											["S","Land_BagFence_Long_F", [-0.65625,2.5918,0], 180],
											["S","Land_BagFence_Long_F", [-3.40625,2.5918,0], 180],
											["S","Land_BagFence_Long_F", [-6.40625,-0.533203,0], 90],
											["S","Land_BagFence_Round_F", [-5.78149,1.9668,0], 135],
											["S","Land_ChairWood_F", [-0.522949,0.210938,0], 105],
											["S","Land_CratesShabby_F", [1.96875,-3.5332,0], 300],
											["S","Land_Garbage_square5_F", [2.18384,-0.757813,0], 180],
											["S","Land_Pallet_vertical_F", [-2.68994,-2.7334,0], 200],
											["S","Land_Pallets_stack_F", [-0.78125,-3.0332,0], 270],
											["S","Land_Sack_F", [1.21875,-3.03418,0], 135],
											["V", selectRandom _hmgArr, [-4.875,0.875,0.2], 315],
											["V", selectRandom _hmgArr, [3,3.5,0.2], 0]
										]
									],
									[
										"o_recon",
										[
											["O","CamoNet_BLUFOR_open_F", [0.302979,0.00390625,0], 0],
											["O","Land_Sacks_heap_F", [-3.28809,-6.4375,0], 225],
											["O","Land_WoodenTable_small_F", [-3.875,-0.75,0], 240],
											["S","Land_Ammobox_rounds_F", [2.67798,-1.99609,0], 315],
											["S","Land_BagBunker_Small_F", [-0.947021,4.25391,0], 180],
											["S","Land_BagFence_End_F", [-2.94702,-4.24609,0], 225],
											["S","Land_BagFence_End_F", [-6.32202,-4.49609,0], 75],
											["S","Land_BagFence_End_F", [2.42798,-1.62109,0], 150],
											["S","Land_BagFence_End_F", [2.55298,-4.99512,0], 345],
											["S","Land_BagFence_Long_F", [-6.69702,-0.496094,0], 105],
											["S","Land_BagFence_Long_F", [2.55298,4.62891,0], 0],
											["S","Land_BagFence_Round_F", [-2.07227,-5.62109,0], 45],
											["S","Land_BagFence_Round_F", [-5.69702,2.00391,0], 135],
											["S","Land_BagFence_Round_F", [-6.94702,-2.99609,0], 75],
											["S","Land_BagFence_Round_F", [1.42798,-6.12109,0], 315],
											["S","Land_BagFence_Round_F", [4.05298,-1.12109,0], 330],
											["S","Land_BagFence_Round_F", [4.80322,4.00391,0], 225],
											["S","Land_BagFence_Short_F", [-0.447021,-6.49609,0], 195],
											["S","Land_BagFence_Short_F", [5.17798,0.378906,0], 105],
											["S","Land_BagFence_Short_F", [5.42798,2.00391,0], 90],
											["S","Land_ChairWood_F", [-3.47168,-1.30469,0], 135],
											["S","Land_Garbage_square5_F", [-0.572021,0.50293,0], 0],
											["S","Land_HBarrier_1_F", [1.05298,2.75391,0], 0],
											["S","Land_HBarrier_3_F", [-0.0720215,-2.49609,0], 90],
											["S","Land_HBarrier_3_F", [-2.82202,2.62891,0], 0],
											["S","Land_HBarrier_3_F", [2.17798,1.25488,0], 0],
											["V", selectRandom _hmgArr, [-0.75,4.625,0.2], 0],
											["V", selectRandom _hmgArr, [0.75,-5.5,0.2], 180]
										]
									],
									[
										"o_unknown",
										[
											["O","Land_Sacks_heap_F", [-1.44141,-5.19238,0], 180],
											["O","Land_WoodenTable_small_F", [4.75,-0.5,0], 0],
											["S","Land_BagBunker_Tower_F", [-1.65234,4.09082,0], 90],
											["S","Land_BagFence_Long_F", [-2.27148,-0.362305,0], 180],
											["S","Land_BagFence_Round_F", [-4.10742,-5.2793,0], 315],
											["S","Land_BagFence_Round_F", [-6.27173,-5.2373,0], 45],
											["S","Land_BagFence_Round_F", [0.228516,0.262695,0], 315],
											["S","Land_BagFence_Round_F", [5.58081,4.64258,0], 225],
											["S","Land_BagFence_Short_F", [3.72852,5.38672,0], 180],
											["S","Land_BagFence_Short_F", [6.21729,2.69043,0], 270],
											["S","Land_BarrelSand_F", [-2.77148,-4.8623,0], 0],
											["S","Land_ChairWood_F", [4.12158,-0.642578,0], 255],
											["S","Land_CratesWooden_F", [5.47852,-5.3623,0], 0],
											["S","Land_HBarrier_3_F", [-2.39648,-3.6123,0], 0],
											["S","Land_HBarrier_3_F", [-6.77148,-2.3623,0], 90],
											["S","Land_HBarrier_3_F", [-6.77148,0.637695,0], 90],
											["S","Land_HBarrier_3_F", [3.97852,-3.7373,0], 0],
											["S","Land_HBarrier_3_F", [6.21729,-2.80957,0], 90],
											["S","Land_HBarrier_3_F", [6.21729,0.31543,0], 90],
											["S","Land_MetalBarrel_F", [4.06201,-2.24219,0], 15],
											["S","Land_MetalBarrel_F", [4.47852,-1.71289,0], 240],
											["S","Land_MetalBarrel_F", [4.85352,-2.3623,0], 90],
											["S","Land_Pallet_F", [3.10352,-5.9873,0], 22],
											["S","Land_Pallet_F", [4.97852,-7.4873,0], 232],
											["V", selectRandom _hmgArr, [-2.58,3.89,2.8], 0],
											["V", selectRandom _hmgArr, [4.75,3.875,0.2], 60]
										]
									],
									[
										"o_recon",
										[
											["O","CamoNet_BLUFOR_open_F", [1.03149,-0.807617,0], 180],
											["O","Land_Sacks_heap_F", [2.25,-6.25,0], 120],
											["O","Land_WoodenTable_small_F", [-3.25,-0.75,0], 165],
											["S","Land_Ammobox_rounds_F", [7.1123,-2.80566,0], 187],
											["S","Land_BagBunker_Small_F", [3.40161,4.08691,0], 180],
											["S","Land_BagFence_End_F", [7.01147,-3.42871,0], 152],
											["S","Land_BagFence_Long_F", [6.28149,2.19238,0], 62],
											["S","Land_BagFence_Round_F", [-6.96899,-2.05469,0], 72],
											["S","Land_BagFence_Round_F", [7.78198,-2.05566,0], 277],
											["S","Land_CanisterFuel_F", [7.47339,-2.37402,0], 157],
											["S","Land_ChairWood_F", [-2.6543,-0.547852,0], 60],
											["S","Land_CncBarrierMedium4_F", [-2.09351,2.56738,0], 180],
											["S","Land_CncBarrierMedium_F", [-6.46851,1.81738,0], 135],
											["S","Land_CncBarrierMedium_F", [-7.09326,0.192383,0], 90],
											["S","Land_CncBarrierMedium_F", [7.40649,0.0664063,0], 75],
											["S","Land_CratesWooden_F", [0.625,-2.125,0], 30],
											["S","Land_Garbage_square5_F", [3.77637,1.08594,0], 0],
											["S","Land_PlasticCase_01_small_F", [7.40698,-1.86035,0], 347],
											["S","Land_Sack_F", [-6.71851,-3.55859,0], 17],
											["V", selectRandom _hmgArr, [3.625,4.375,0.2], 0]
										]
									],
									[
										"o_installation",
										[
											["O","Land_Cargo_Patrol_V2_F", [-1.87109,0.65332,0.0627961], 180],
											["O","Land_Sacks_heap_F", [3.125,-7.75,0], 345],
											["O","Land_WoodenTable_small_F", [2.5,3,0], 270],
											["S","Land_BagFence_Long_F", [1.62891,-4.47168,0], 180],
											["S","Land_BagFence_Long_F", [5.00391,-1.34668,0], 270],
											["S","Land_BagFence_Long_F", [5.00391,1.40332,0], 270],
											["S","Land_BagFence_Round_F", [-0.746094,-5.09668,0], 135],
											["S","Land_BagFence_Round_F", [-5.24634,-6.72168,0], 45],
											["S","Land_BagFence_Round_F", [4.25391,-3.84668,0], 315],
											["S","Land_BagFence_Round_F", [4.37915,3.77832,0], 225],
											["S","Land_BagFence_Short_F", [-1.49609,-6.97168,0], 90],
											["S","Land_BagFence_Short_F", [-5.87109,-4.84668,0], 90],
											["S","Land_ChairWood_F", [2.59814,2.31445,0], 165],
											["S","Land_GarbageBags_F", [-3.37109,2.27832,0], 333],
											["S","Land_GarbageWashingMachine_F", [-3.24609,-0.84668,0], 210],
											["S","Land_Garbage_square5_F", [-1.24609,1.90332,0], 0],
											["S","Land_Garbage_square5_F", [-3.62109,-3.22168,0], 0],
											["S","Land_HBarrier_3_F", [-0.871094,4.65332,0], 180],
											["S","Land_HBarrier_3_F", [-3.87109,4.65332,0], 180],
											["S","Land_HBarrier_3_F", [-5.87109,-2.34668,0], 270],
											["S","Land_HBarrier_3_F", [-5.87109,0.65332,0], 270],
											["S","Land_HBarrier_3_F", [-5.87109,3.65332,0], 270],
											["S","Land_HBarrier_3_F", [2.12891,4.65332,0], 180],
											["S","Land_Pallet_F", [-0.246094,-10.3467,0], 121],
											["S","Land_Pallets_F", [1.51465,-8.54395,0], 315],
											["S","Land_PaperBox_open_empty_F", [-0.246094,2.90332,0], 90],
											["S","Land_Razorwire_F", [-2.24609,6.40332,0], 180],
											["S","Land_Razorwire_F", [-7.24609,2.65332,0], 90],
											["S","Land_Wreck_Skodovka_F", [3.37915,-9.84668,0], 60],
											["V", selectRandom _hmgArr, [-3.5,1.625,4.6], 0],
											["V", selectRandom _hmgArr, [3.58398,0.163086,0.2], 90]
										]
									],
									[
										"o_unknown",
										[
											["O","CamoNet_BLUFOR_F", [-0.594971,-1.40527,0], 180],
											["O","Land_CampingTable_F", [-1.82617,-3.54395,0], 17],
											["O","Land_Sacks_heap_F", [1.125,3.5,0], 15],
											["S","Land_BagBunker_Small_F", [-3.21973,3.21875,0], 180],
											["S","Land_BagFence_End_F", [0.155029,1.34473,0], 105],
											["S","Land_BagFence_End_F", [3.15503,1.59473,0], 45],
											["S","Land_BagFence_End_F", [4.28003,1.34473,0], 120],
											["S","Land_BagFence_Long_F", [1.65503,1.84375,0], 0],
											["S","Land_BagFence_Long_F", [6.15454,-2.03125,0], 120],
											["S","Land_BagFence_Round_F", [5.65503,1.84473,0], 180],
											["S","Land_BagFence_Round_F", [7.15503,0.34375,0], 270],
											["S","Land_BottlePlastic_V1_F", [-2.44995,-2.55859,0], 270],
											["S","Land_BottlePlastic_V1_F", [-2.54028,-2.46777,0], 270],
											["S","Land_Bucket_clean_F", [-2.25024,-3.09961,0], 270],
											["S","Land_CampingChair_V1_F", [-0.978516,-3.01855,0], 60],
											["S","Land_CanisterPlastic_F", [-4.03052,-1.56641,0], 75],
											["S","Land_CncBarrierMedium4_F", [-1.21997,-5.03027,0], 0],
											["S","Land_CncBarrierMedium4_F", [-5.09473,-1.53125,0], 90],
											["S","Land_CncBarrierMedium_F", [-0.594971,2.21875,0], 180],
											["S","Land_CncBarrierMedium_F", [3.40552,-5.03027,0], 165],
											["S","Land_CncBarrierMedium_F", [3.78003,2.46875,0], 180],
											["S","Land_CncBarrierMedium_F", [4.65503,-3.78027,0], 120],
											["S","Land_CratesWooden_F", [2.40503,-1.65527,0], 30],
											["S","Land_Garbage_square5_F", [0.155029,-1.53125,0], 270],
											["S","Land_MetalCase_01_small_F", [3.28003,-0.905273,0], 315],
											["S","Land_PaperBox_open_empty_F", [-3.59497,-2.78027,0], 0],
											["V", selectRandom _hmgArr, [-3.125,3.875,0.2], 0]
										]
									],
									[
										"o_unknown",
										[
											["O","CamoNet_BLUFOR_F", [0.0830078,3.11816,0], 180],
											["O","Land_Sacks_heap_F", [-2.10278,-2.00293,0], 150],
											["O","Land_WoodenTable_large_F", [1.875,-1.875,0], 265],
											["S","Land_BagBunker_Small_F", [-0.166992,3.99316,0], 180],
											["S","Land_BagFence_End_F", [-2.58398,-6.29785,0], 225],
											["S","Land_BagFence_End_F", [-4.54199,-2.00684,0], 30],
											["S","Land_BagFence_End_F", [2.29102,-5.92188,0], 315],
											["S","Land_BagFence_Long_F", [-0.958984,-6.54785,0], 180],
											["S","Land_BagFence_Long_F", [5.33301,-1.88184,0], 135],
											["S","Land_BagFence_Round_F", [-5.91724,-1.13184,0], 45],
											["S","Land_BagFence_Round_F", [-6.16699,1.11914,0], 120],
											["S","Land_BagFence_Round_F", [6.20825,1.86914,0], 225],
											["S","Land_BagFence_Short_F", [-4.41699,2.24316,0], 345],
											["S","Land_BagFence_Short_F", [1.33301,-6.38281,0], 345],
											["S","Land_BagFence_Short_F", [4.33301,2.49316,0], 180],
											["S","Land_BagFence_Short_F", [6.58301,-0.00683594,0], 105],
											["S","Land_CampingChair_V2_F", [1.25,-2.625,0], 203],
											["S","Land_CampingChair_V2_F", [2.375,-2.5,0], 168],
											["S","Land_CanisterPlastic_F", [2.75,-3.25,0], 180],
											["S","Land_CncBarrierMedium4_F", [-0.0419922,-0.506836,0], 180],
											["S","Land_CncBarrierMedium_F", [-0.416992,0.868164,0], 180],
											["S","Land_CncBarrierMedium_F", [-2.2915,0.618164,0], 165],
											["S","Land_CncBarrierMedium_F", [-2.7915,2.86816,0], 165],
											["S","Land_CncBarrierMedium_F", [-3.66699,-1.63184,0], 270],
											["S","Land_CncBarrierMedium_F", [-3.66699,-3.50684,0], 90],
											["S","Land_CncBarrierMedium_F", [1.45752,0.618164,0], 195],
											["S","Land_CncBarrierMedium_F", [2.70752,2.86816,0], 195],
											["S","Land_CncBarrierMedium_F", [3.58301,-1.63184,0], 90],
											["S","Land_CncBarrierMedium_F", [3.58301,-3.50684,0], 90],
											["V", selectRandom _hmgArr, [-1.625,-5.375,0.2], 180],
											["V", selectRandom _hmgArr, [0.125,4.375,0.2], 0]
										]
									]
								];

								["DEBUG", format["Zone%1 - Spawning Site: %2 in %3 positions (%4 types)", _zoneID, _count, count _locations, count _buildingList]] call zmm_fnc_logMsg;

								for "_i" from 1 to _count do {	
									if (count _locations == 0) exitWith { _centre = [] };
									
									private _pos = selectRandom _locations;
									_locations deleteAt (_locations find _pos);

									private _key = (([ATLtoASL (_pos), ("Land_ClutterCutter_small_F"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									[_key,[(random 360),(((_key) call BIS_fnc_getPitchBank) select 0),(((_key) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
										
									
									{ [_x, true] remoteExec ["hideObject", 0, true] } forEach (nearestTerrainObjects [_pos, ["TREE", "SMALL TREE", "BUSH", "BUILDING", "HOUSE", "FOREST BORDER", "FOREST TRIANGLE", "FOREST SQUARE", "CHURCH", "CHAPEL", "CROSS", "BUNKER", "FORTRESS", "FOUNTAIN", "VIEW-TOWER", "LIGHTHOUSE", "QUAY", "FUELSTATION", "HOSPITAL", "FENCE", "WALL", "HIDE", "BUSSTOP", "FOREST", "TRANSMITTER", "STACK", "RUIN", "TOURISM", "WATERTOWER", "ROCK", "ROCKS", "POWERSOLAR", "POWERWAVE", "POWERWIND", "SHIPWRECK"], 25]);
									
									
									_bID = if (_forceID >= 0 && _forceID < count _buildingList) then { _forceID } else { floor random count _buildingList };
									(_buildingList#_bID) params ["_icon", "_buildingObjects"];
									
									["DEBUG", format["Zone%1 - Spawning Site: %5 of %6 - ID%2 (%3) at %4", _zoneID, _bID, _icon, _pos, _i, _count]] call zmm_fnc_logMsg;

									{
										_x params ["_type", ["_class",""], ["_rel",[0,0,0]], ["_dir", 0], ["_flat", true]];
										private _worldPos = _key modeltoWorld _rel;	
										private _obj = [_zoneID, _side, _type, _class, [_worldPos#0, _worldPos#1, _rel#2], getDir _key + _dir, _flat] call zmm_fnc_spawnObject;		
									} forEach _buildingObjects;

									
									private _grpArr = [];
									for "_j" from 0 to (1 + random 3) do { _grpArr pushBack (selectRandom _menArr) };

									private _tempGrp = [_key getPos [15, random 360], _side, _grpArr] call BIS_fnc_spawnGroup;
									[_tempGrp, getPos _key] call BIS_fnc_taskDefend;
									_tempGrp deleteGroupWhenEmpty true;
									_tempGrp enableDynamicSimulation true;
									{ _x addCuratorEditableObjects [units _tempGrp, true] } forEach allCurators;
									
									if (_showMarker) then {
										if (missionNamespace getVariable ["ZZM_Mode", 0] != 1) then {
											private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_SP_%2", _zoneID, _i]),(_pos getPos [25, random 360])] call BIS_fnc_stringToMarker;
											_mrkr setMarkerType "mil_unknown";
											_mrkr setMarkerSize [0.6, 0.6];
											_mrkr setMarkerColor format["Color%1",_side];

											private _cpTrigger = (([(AGLToASL (_pos)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
											_cpTrigger setTriggerActivation [format["%1",_side], "NOT PRESENT", false];
											_cpTrigger setTriggerArea [25, 25, 0, false];
											_cpTrigger setTriggerStatements [  "this", format["'MKR_%1_SP_%2' setMarkerColor 'ColorGrey'", _zoneID, _i], "" ];
											
											private _hdTrigger = (([(AGLToASL (_pos)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
											_hdTrigger setTriggerActivation ["ANYPLAYER", "PRESENT", false];
											_hdTrigger setTriggerArea [250, 250, 0, false, 100];
											_hdTrigger setTriggerStatements [  "this", format["'MKR_%1_SP_%2' setMarkerType '%3'", _zoneID, _i, _icon], "" ];
										} else {
											private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format ["MKR_%1_SP_%2", _zoneID, _i]),(_pos)] call BIS_fnc_stringToMarkerLocal;
											_mrkr setMarkerTypeLocal _icon;
											_mrkr setMarkerColorLocal format["Color%1",_side];
											if (!isMultiplayer) then { _mrkr setMarkerTextLocal format["Site%1", _bID]; };
										};
									};
								};

								_centre set [2,0];
								_centre
							};
						};
						if (isNil("zmm_fnc_areaSupport")) then {
							zmm_fnc_areaSupport = {
								if !isServer exitWith {};

								params [
									["_zoneID", 0],
									["_centre", (missionNamespace getVariable [ format[ "ZMM_%1_Location", _this#0], [0,0,0]])],
									["_showMarker", true],
									["_forcePos", false],
									["_forceID", -1]
								];

								if ([_centre] in [[[0,0,0]]]) then { _centre = [_centre, 0, 200, 5, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0] };

								private _side = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
								private _locations = missionNamespace getVariable [ format[ "ZMM_%1_SupportLocations", _zoneID ], []];  

								private _radius = missionNamespace getVariable [ format[ "ZMM_%1_Radius", _zoneID ], 150];
								private _count = missionNamespace getVariable [format["ZMM_%1_Supports", _zoneID], 1];
								private _menArr = missionNamespace getVariable [format["ZMM_%1Man",_side],[]];

								private _vehL = missionNamespace getVariable [format["ZMM_%1Veh_Light",_side],[]];
								private _vehM = missionNamespace getVariable [format["ZMM_%1Veh_Medium",_side],[]];
								private _vehH = missionNamespace getVariable [format["ZMM_%1Veh_Heavy",_side],[]];
								private _vehU = missionNamespace getVariable [format["ZMM_%1Veh_Util",_side],[]];
								private _hmgArr = missionNamespace getVariable [format["ZMM_%1Veh_Static",_side],[]];

								if (_count == 0) then { _count = 1 };

								["DEBUG", format["Zone%1 - Spawning Support: Count %2 at %3%4", _zoneID, _count, _centre, [""," [FORCED]"] select _forcePos]] call zmm_fnc_logMsg;

								private _vehArr = _vehL;
								if ((missionNamespace getVariable ["ZZM_Diff", 1]) >= 1) then { _vehArr append _vehM };
								if ((missionNamespace getVariable ["ZZM_Diff", 1]) >= 1.5) then { _vehArr append _vehH };
								if (count _hmgArr == 0) then { _hmgArr = ["B_GMG_01_high_F","B_HMG_01_high_F"] };

								if (!_forcePos && count _locations == 0) then {
									
									for [{_i = 0}, {_i < 360}, {_i = _i + 5}] do {
										for [{_j = _radius * 0.75}, {_j <= (_radius * 2)}, {_j = _j + 25}] do {
											private _tempPos = _centre getPos [_j, _i];
														
											if ({_x distance2D _tempPos < 400} count _locations == 0 && !([_tempPos isFlatEmpty [15, -1, 0.25, 5]] in [[[]]])) then {
												
												if (count (_tempPos nearRoads 50) == 0 &&
													count (nearestObjects [_tempPos, ["House", "Building"], 50]) == 0)
												then {
													_locations pushBack _tempPos;
												};
											};
										};
										
										if (count _locations > _count) exitWith {};
									};
								} else {
									if _forcePos then { _locations = [_centre] };
								};

								private _buildingList = [
									[
										"o_uav", 
										[
											["O","B_UGV_01_F", [0.125,-3.67139,0.2], 180, false],
											["O","Land_CanisterFuel_F", [-3.5,-5,0], 120],
											["O","Land_CanisterFuel_F", [-3.625,-4.5,0], 0],
											["S","Land_CampingTable_F", [2.25,-0.125,0], 180],
											["S","Land_CratesPlastic_F", [2.75,-1.625,0], 240],
											["S","Land_HBarrier_3_F", [-1.14551,1.34229,0], 0],
											["S","Land_HBarrier_3_F", [-3.27051,-2.40771,0], 270],
											["S","Land_HBarrier_3_F", [-3.27051,0.467285,0], 270],
											["S","Land_HBarrier_3_F", [1.72949,1.34229,0], 0],
											["S","Land_MetalBarrel_F", [-4.5,-4.25,0], 255],
											["S","Land_MetalBarrel_empty_F", [-5.17725,-3.65479,0], 105],
											["S","Land_Pallets_F", [4.5,2.25,0], 135],
											["S","Land_PortableCabinet_01_closed_sand_F", [3.5,-4,0], 105],
											["S","Land_PortableCabinet_01_closed_sand_F", [3.75,-5.125,0], 60],
											["S","Land_Sacks_heap_F", [4.5,0.25,0], 105],
											["S","SatelliteAntenna_01_Sand_F", [4.375,-4.625,0], 120],
											["V", selectRandom _vehArr, [-3.75,5.87305,0.2], 285]
										]
									],
									[
										"o_maint", 
										[
											["O","Land_RepairDepot_01_green_F", [1.75,-2.75,0], 0],
											["S","Land_BagFence_Long_F", [-5.75,-6.75,0], 0],
											["S","Land_BagFence_Long_F", [-7.25,-5.25,0], 270],
											["S","Land_BagFence_Long_F", [4,5.25,0], 180],
											["S","Land_BagFence_Long_F", [5.5,3.75,0], 90],
											["S","Land_BagFence_Long_F", [6.5,-6.625,0], 180],
											["S","Land_BagFence_Long_F", [8,-5.125,0], 270],
											["S","Land_CampingChair_V2_F", [-3.375,-4.875,0], 345],
											["S","Land_CampingTable_F", [-2.875,-5.5,0], 0],
											["S","Land_HBarrier_3_F", [-2,5.25,0], 180],
											["S","Land_HBarrier_3_F", [-2.625,-6.875,0], 180],
											["S","Land_HBarrier_3_F", [0.625,-6.875,0], 180],
											["S","Land_HBarrier_3_F", [0.875,5.25,0], 180],
											["S","Land_HBarrier_3_F", [3.5,-6.875,0], 180],
											["S","Land_Sacks_heap_F", [0,-5.125,0], 285],
											["S","Land_ScrapHeap_1_F", [-1.875,3.5,0], 270],
											["V", selectRandom _hmgArr, [-6.03076,-5.51025,0.2], 180],
											["V", selectRandom _hmgArr, [6.76025,-5.40576,0.2], 90],
											["V", selectRandom _vehArr, [-7.5,3.74805,0.2], 15, false]
										]
									],
									[
										"o_ordnance", 
										[
											["O","Box_Syndicate_WpsLaunch_F", [5,-3.75,0.1], 165],
											["O","Box_Syndicate_WpsLaunch_F", [5.5,-2.375,0.1], 75],
											["O","Land_ToiletBox_F", [-2.875,3.875,0], 105],
											["S","Land_BagFence_Round_F", [-6.125,-5.5,0], 39],
											["S","Land_BagFence_Round_F", [-6.39063,-3.20068,0], 125],
											["S","Land_MetalBarrel_F", [2.25488,1.27783,0], 270],
											["S","Land_MetalBarrel_F", [3.125,0.875,0], 300],
											["S","Land_MetalBarrel_F", [4,1.125,0], 165],
											["S","Land_Net_Fence_4m_F", [-1.75,-4,0], 90],
											["S","Land_Net_Fence_4m_F", [0.25,-6,0], 0],
											["S","Land_Net_Fence_4m_F", [0.25,2,0], 180],
											["S","Land_Net_Fence_4m_F", [4.25,-6,0], 0],
											["S","Land_Net_Fence_4m_F", [4.25,2,0], 180],
											["S","Land_Net_Fence_4m_F", [6.25,-4,0], 270],
											["S","Land_Net_Fence_4m_F", [6.25,0,0], 270],
											["S","Land_Net_Fence_pole_F", [-1.75,-2,0], 0],
											["S","Land_PaperBox_closed_F", [3.375,-4.875,0], 210],
											["S","Land_PaperBox_closed_F", [5.375,-5.125,0], 0],
											["V", selectRandom _hmgArr, [-5.5,-4.125,0.2], 270]
										]
									],
									[
										"o_recon", 
										[
											["O","Land_Cargo_House_V2_F", [3,-2.875,0.2], 180, false],
											["O","Land_TTowerSmall_1_F", [-0.75,-6.5,4.76837e-007], 0, false],
											["S","Land_BagFence_Long_F", [-0.625,2,0], 90],
											["S","Land_BagFence_Long_F", [-3.62451,5.4668,0], 190],
											["S","Land_BagFence_Long_F", [6.00049,1.3418,0], 190],
											["S","Land_BagFence_Long_F", [9,-2.125,0], 90],
											["S","Land_BagFence_Round_F", [-1.3042,4.53564,0], 225],
											["S","Land_BagFence_Round_F", [8.32129,0.410645,0], 225],
											["S","Land_TBox_F", [1.25,-8.75,0], 0],
											["V", selectRandom _hmgArr, [-3.23291,4.0293,0.2], 15],
											["V", selectRandom _hmgArr, [7.625,-0.625,0.2], 45],
											["V", selectRandom _vehArr, [-5.5,-3.75,0.2], 195, false]
										]
									],
									[
										"o_service", 
										[
											["O","Land_RepairDepot_01_green_F", [-4.875,-4.125,0], 90],
											["O","Land_TentHangar_V1_F", [-0.25,-0.625,0], 0],
											["O","WaterPump_01_forest_F", [7.75,-0.375,0], 15],
											["S","Land_BagFence_Long_F", [8.25,13.375,0], 180],
											["S","Land_BagFence_Long_F", [9.75,11.875,0], 90],
											["S","Land_BarrelTrash_grey_F", [2.25,-12.5,0], 120],
											["S","Land_GarbagePallet_F", [5.75,-4,0], 195],
											["S","Land_HBarrier_3_F", [-2.37988,-14,0], 180],
											["S","Land_HBarrier_3_F", [-5,12.125,0], 15],
											["S","Land_HBarrier_3_F", [-5.375,-13.625,0], 195],
											["S","Land_HBarrier_3_F", [-7.5,11.875,0], 330],
											["S","Land_HBarrier_3_F", [-7.75,-12.23,0], 225],
											["S","Land_HBarrier_3_F", [-8.75,10,0], 90],
											["S","Land_HBarrier_3_F", [-8.75,6.875,0], 90],
											["S","Land_HBarrier_3_F", [0.649902,-14,0], 180],
											["S","Land_HBarrier_3_F", [4.625,-5.875,0], 0],
											["S","Land_HBarrier_3_F", [7.75,-5.875,0], 0],
											["S","Land_MetalBarrel_empty_F", [-5.8999,-12,0], 120],
											["S","Land_MetalBarrel_empty_F", [-6.25,-11.3452,0], 330],
											["S","Land_MetalBarrel_empty_F", [-7.2002,-10.5,0], 225],
											["S","Land_PaperBox_closed_F", [-6.875,6.625,0], 345],
											["S","Land_PaperBox_closed_F", [-7,3.5,0], 15],
											["S","Land_Sacks_goods_F", [-2.1499,-12.1001,0], 0],
											["S","Land_WaterBarrel_F", [-4.25,9.625,0], 0],
											["V", selectRandom _hmgArr, [8.53076,12.1353,0.2], 0],
											["V", selectRandom _vehH, [2.25,6.75,0.2], 0, false]
										]
									],
									[
										"o_mortar", 
										[
											["S","Land_BagFence_Round_F", [-0.924316,-2.51563,0], 35],
											["S","Land_BagFence_Round_F", [-1.04639,2.55176,0], 144],
											["S","Land_BagFence_Round_F", [1.24316,2.21338,0], 230],
											["S","Land_BagFence_Round_F", [1.375,-2.25,0], 309],
											["S","Land_MetalBarrel_F", [-2.875,-3,0], 105],
											["S","Land_MetalBarrel_F", [-3.75,-2.5,0], 60],
											["V","B_Mortar_01_F", [-0.25,-0.125488,0.2], 0]
										]
									],
									[
										"o_support", 
										[
											["O","CamoNet_BLUFOR_open_F", [-1.5,-3.875,0], 0, false],
											["O","Land_CanisterFuel_F", [-0.0249023,1.74512,0], 0],
											["O","Land_CanisterFuel_F", [-0.25,1.25,0], 120],
											["O","MetalBarrel_burning_F", [-3.625,-5.875,0], 90],
											["S","Land_BagFence_End_F", [-3.88477,-8.875,0], 30],
											["S","Land_BagFence_End_F", [-6.9751,-5.5752,0], 255],
											["S","Land_BagFence_Long_F", [-5.50488,-8.625,0], 0],
											["S","Land_BagFence_Long_F", [-6.875,-7.25049,0], 270],
											["S","Land_CratesPlastic_F", [2.99316,3.62256,0], 240],
											["S","Land_HBarrier_3_F", [-1.25,5.5,0], 0],
											["S","Land_HBarrier_3_F", [-4.125,5.5,0], 0],
											["S","Land_HBarrier_3_F", [-6.25,1.75,0], 270],
											["S","Land_HBarrier_3_F", [-6.25,4.625,0], 270],
											["S","Land_HBarrier_3_F", [1.75,5.5,0], 0],
											["S","Land_MetalBarrel_F", [-4.50488,-1.0752,0], 135],
											["S","Land_MetalBarrel_F", [-5.125,-1.875,0], 90],
											["S","Land_MetalBarrel_F", [0.75,1.375,0], 0],
											["S","Land_MetalBarrel_empty_F", [1.5,2.125,0], 210],
											["S","Land_MetalBarrel_empty_F", [3.375,-4.875,0], 0],
											["S","Land_Pallets_F", [4,4,0], 135],
											["S","Land_PaperBox_closed_F", [-6.625,-1,0.1], 270],
											["S","Land_Tank_rust_F", [-1.625,3.125,0], 180],
											["V", selectRandom _hmgArr, [-5.5,-6.75,0.2], 180],
											["V", selectRandom _vehArr, [9.875,3,0.2], 15, false],
											["V", selectRandom _vehU, [0,10.25,0.2], 270, false]
										]
									]
								];

								["DEBUG", format["Zone%1 - Spawning Support: %2 in %3 positions (%4 types)", _zoneID, _count, count _locations, count _buildingList]] call zmm_fnc_logMsg;

								private _pos = [];

								for "_i" from 1 to _count do {	
									if (count _locations == 0) exitWith { false	};
									
									private _pos = selectRandom _locations;
									_locations deleteAt (_locations find _pos);
									
									private _key = (([ATLtoASL (_pos), ("Land_HelipadEmpty_F"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									[_key,[(random 360),(((_key) call BIS_fnc_getPitchBank) select 0),(((_key) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
										
									
									{ [_x, true] remoteExec ["hideObject", 0, true] } forEach (nearestTerrainObjects [_pos, ["TREE", "SMALL TREE", "BUSH", "BUILDING", "HOUSE", "FOREST BORDER", "FOREST TRIANGLE", "FOREST SQUARE", "CHURCH", "CHAPEL", "CROSS", "BUNKER", "FORTRESS", "FOUNTAIN", "VIEW-TOWER", "LIGHTHOUSE", "QUAY", "FUELSTATION", "HOSPITAL", "FENCE", "WALL", "HIDE", "BUSSTOP", "FOREST", "TRANSMITTER", "STACK", "RUIN", "TOURISM", "WATERTOWER", "ROCK", "ROCKS", "POWERSOLAR", "POWERWAVE", "POWERWIND", "SHIPWRECK"], 25]);
									
									
									_bID = if (_forceID >= 0 && _forceID < count _buildingList) then { _forceID } else { floor random count _buildingList };
									(_buildingList#_bID) params ["_icon", "_list"];
									
									["DEBUG", format["Zone%1 - Spawning Support: %5 of %6 - ID%2 (%3) at %4", _zoneID, _bID, _icon, _pos, _i, _count]] call zmm_fnc_logMsg;
									
									{
										_x params ["_type", ["_class",""], ["_rel",[0,0,0]], ["_dir", 0], ["_flat", true]];
										private _worldPos = _key modeltoWorld _rel;
										private _obj = [_zoneID, _side, _type, _class, [_worldPos#0, _worldPos#1, _rel#2], getDir _key + _dir, _flat] call zmm_fnc_spawnObject;		
									} forEach _list;
									
									
									private _grpArr = [];
									for "_j" from 0 to (1 + random 3) do { _grpArr pushBack (selectRandom _menArr) };

									private _tempGrp = [_key getPos [15, random 360], _side, _grpArr] call BIS_fnc_spawnGroup;
									[_tempGrp, getPos _key] call BIS_fnc_taskDefend;
									_tempGrp deleteGroupWhenEmpty true;
									_tempGrp enableDynamicSimulation true;
									
									if (_showMarker) then {
										if (missionNamespace getVariable ["ZZM_Mode", 0] != 1) then {
											private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_SP_%2", _zoneID, _i]),(_pos getPos [25, random 360])] call BIS_fnc_stringToMarker;
											_mrkr setMarkerType "mil_unknown";
											_mrkr setMarkerSize [0.6, 0.6];
											_mrkr setMarkerColor format["Color%1",_side];

											private _cpTrigger = (([(AGLToASL (_pos)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
											_cpTrigger setTriggerActivation [format["%1",_side], "NOT PRESENT", false];
											_cpTrigger setTriggerArea [25, 25, 0, false];
											_cpTrigger setTriggerStatements [  "this", format["'MKR_%1_SP_%2' setMarkerColor 'ColorGrey'", _zoneID, _i], "" ];
											
											private _hdTrigger = (([(AGLToASL (_pos)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
											_hdTrigger setTriggerActivation ["ANYPLAYER", "PRESENT", false];
											_hdTrigger setTriggerArea [150, 150, 0, false, 25];
											_hdTrigger setTriggerStatements [  "this", format["'MKR_%1_SP_%2' setMarkerType '%3'", _zoneID, _i, _icon], "" ];
										} else {
											private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format ["MKR_%1_SP_%2", _zoneID, _i]),(_pos)] call BIS_fnc_stringToMarkerLocal;
											_mrkr setMarkerTypeLocal _icon;
											_mrkr setMarkerColorLocal format["Color%1",_side];
											if (!isMultiplayer) then { _mrkr setMarkerTextLocal format["Support%1", _bID]; };
										};
									};
								};

								missionNamespace setVariable [ format[ "ZMM_%1_SupportLocations", _zoneID ], _locations];

								_centre set [2,0];
								_centre
							};
						};
						if (isNil("zmm_fnc_areaStatic")) then {
							zmm_fnc_areaStatic = {
								if !isServer exitWith {};

								params [
									["_zoneID", 0],
									["_centre", (missionNamespace getVariable [ format[ "ZMM_%1_Location", _this#0], [0,0,0]])],
									["_showMarker", true],
									["_forcePos", false],
									["_forceID", -1]
								];

								if ([_centre] in [[[0,0,0]]]) then { _centre = [_centre, 0, 200, 5, 0, 0.5, 0, [], [ _centre, _centre ]] call BIS_fnc_findSafePos vectorAdd [0,0,0] };

								private _side = missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST];
								private _locations = missionNamespace getVariable [ format[ "ZMM_%1_StaticLocations", _zoneID ], []];  

								private _radius = missionNamespace getVariable [ format[ "ZMM_%1_Radius", _zoneID ], 150];
								private _count = missionNamespace getVariable [format["ZMM_%1_Supports", _zoneID], 1];
								private _menArr = missionNamespace getVariable [format["ZMM_%1Man",_side],[]];

								private _vehL = missionNamespace getVariable [format["ZMM_%1Veh_Light",_side],[]];
								private _vehM = missionNamespace getVariable [format["ZMM_%1Veh_Medium",_side],[]];
								private _vehH = missionNamespace getVariable [format["ZMM_%1Veh_Heavy",_side],[]];
								private _vehU = missionNamespace getVariable [format["ZMM_%1Veh_Util",_side],[]];
								private _hmgArr = missionNamespace getVariable [format["ZMM_%1Veh_Static",_side],[]];

								if (_count == 0) then { _count = 1 };

								["DEBUG", format["Zone%1 - Spawning Static: Count %2 at %3%4", _zoneID, _count, _centre, [""," [FORCED]"] select _forcePos]] call zmm_fnc_logMsg;

								private _vehArr = _vehL;
								if ((missionNamespace getVariable ["ZZM_Diff", 1]) >= 1) then { _vehArr append _vehM };
								if ((missionNamespace getVariable ["ZZM_Diff", 1]) >= 1.5) then { _vehArr append _vehH };
								if (count _hmgArr == 0) then { _hmgArr = ["B_GMG_01_high_F","B_HMG_01_high_F"] };

								private _vehAAA = missionNamespace getVariable [format["ZMM_%1Veh_AAA",_side],_vehArr];
								private _vehART = missionNamespace getVariable [format["ZMM_%1Veh_ART",_side],_vehArr];

								if (!_forcePos && count _locations == 0) then {
									
									for [{_i = 0}, {_i < 360}, {_i = _i + 5}] do {
										for [{_j = _radius * 0.25}, {_j <= (_radius * 1.5)}, {_j = _j + 25}] do {
											private _tempPos = _centre getPos [_j, _i];
														
											if ({_x distance2D _tempPos < 400} count _locations == 0 && !([_tempPos isFlatEmpty [8, -1, 0.25, 5]] in [[[]]])) then {
												
												if (count (_tempPos nearRoads 50) == 0 &&
													count (nearestObjects [_tempPos, ["House", "Building"], 50]) == 0)
												then {
													_locations pushBack _tempPos;
												};
											};
										};
										
										if (count _locations > _count) exitWith {};
									};
								} else {
									if _forcePos then { _locations = [_centre] };
								};


								private _buildingList = [
									[
										"o_antiair",
										[
											["V", selectRandom _vehAAA, [0,0,0.625],0],
											["S","Land_BagFence_Round_F",[-3.75,5.25,0],135],
											["S","Land_BagFence_Round_F",[3.875,5.25,0],225],
											["S","Land_BagFence_Round_F",[-3.625,-6.125,0],45],
											["S","Land_BagFence_Round_F",[4,-6.125,0],315],
											["S","Land_PaperBox_01_open_empty_F",[-4.81787,-3.60107,0],285],
											["S","Land_BagFence_Short_F",[-1.69287,5.89893,0],0],
											["S","Land_BagFence_Short_F",[-1.69287,-6.85107,0],0],
											["S","Land_BagFence_Short_F",[1.93213,-6.72607,0],180],
											["S","Land_BagFence_Short_F",[2.05713,6.02393,0],180],
											["S","Land_CratesShabby_F",[-3.69287,-4.60107,0],0],
											["S","Land_CratesWooden_F",[5.55713,4.14893,0],90],
											["V", selectRandom _hmgArr,[-2.5,4.5,0.2],330]
										]
									],
									[
										"o_antiair",
										[
											["V", selectRandom _vehAAA, [0,0,0.625],0],
											["S","Land_BagFence_Round_F",[3.375,6.25,0],225],
											["S","Land_BagFence_Round_F",[-4.25,6.25,0],135],
											["S","Land_BagFence_Short_F",[-2.33643,6.88208,0],0],
											["S","Land_BagFence_Short_F",[1.53857,7.00708,0],180],
											["S","Land_CratesShabby_F",[-3.5,-3.125,0],0],
											["S","Land_CratesWooden_F",[5.78857,-2.24292,0],90],
											["S","Land_HBarrier_3_F",[4.125,-2.5,0],270],
											["S","Land_HBarrier_3_F",[-4.75,-2.375,0],270],
											["V", selectRandom _hmgArr,[-2.5,5,0.2],330]
										]
									],
									[
										"o_antiair",
										[
											["V", selectRandom _vehAAA, [0,0,0.625],0],
											["S","Land_BagFence_Round_F",[3.875,5.75,0],225],
											["S","Land_BagFence_Round_F",[-3.625,-5.625,0],45],
											["S","Land_PaperBox_01_open_empty_F",[-4.375,-0.125,0],255],
											["S","Land_CratesShabby_F",[3.625,5.125,0],0],
											["S","Land_CratesWooden_F",[-6.125,-1.375,0],90],
											["S","Land_HBarrier_3_F",[-4.25,-2.875,0],270],
											["S","Land_HBarrier_3_F",[4.5,2.875,0],270],
											["S","Land_BagFence_Long_F",[-1.25,-6.25,0],0],
											["S","Land_BagFence_Long_F",[1.5,6.375,0],180],
											["V", selectRandom _hmgArr,[2,5,0.2],0]
										]
									],
									[
										"o_antiair",
										[
											["V", selectRandom _vehAAA, [0,0,0.625],0],
											["S","Land_BagFence_Round_F",[3.875,7.25,0],225],
											["S","Land_BagFence_Round_F",[-3.75,7.25,0],135],
											["S","Land_CratesShabby_F",[-5.72119,3.78418,0],0],
											["S","Land_HBarrier_3_F",[-4.5,4.625,0],270],
											["S","Land_HBarrier_3_F",[4.5,4.375,0],270],
											["S","Land_BagFence_Long_F",[1.5,7.875,0],180],
											["S","Land_BagFence_Long_F",[-1.25,7.875,0],180],
											["V", selectRandom _hmgArr,[2,5.5,0.2],30],
											["V", selectRandom _hmgArr,[-2,5.5,0.2],315]
										]
									],
									[
										"o_antiair",
										[
											["V", selectRandom _vehAAA, [0,0,0.625],0],
											["S","Land_BagFence_Round_F",[-3.75,5.75,0],135],
											["S","Land_BagFence_Round_F",[3.875,5.75,0],225],
											["S","Land_BagFence_Round_F",[-3.625,-5.625,0],45],
											["S","Land_BagFence_Round_F",[4,-5.625,0],315],
											["S","Land_PaperBox_01_open_empty_F",[-2.5,-7.5,0],0],
											["S","Land_CratesShabby_F",[-1,-7,0],0],
											["S","Land_CratesWooden_F",[6.125,3.375,0],90],
											["S","Land_HBarrier_3_F",[-4.25,-2.875,0],270],
											["S","Land_HBarrier_3_F",[4.625,-3,0],270],
											["S","Land_HBarrier_3_F",[4.5,2.875,0],270],
											["S","Land_BagFence_Long_F",[-4.375,3.375,0],90],
											["S","Land_BagFence_Long_F",[-1.25,6.375,0],180],
											["S","Land_BagFence_Long_F",[1.5,-6.25,0],0],
											["S","Land_BagFence_Long_F",[-1.25,-6.25,0],0],
											["S","Land_BagFence_Long_F",[1.5,6.375,0],180],
											["V", selectRandom _hmgArr,[-2.5,4.5,0.2],315]
										]
									],
									[
										"o_antiair",
										[
											["V", selectRandom _vehAAA, [0,0,0.625],0],
											["S","Land_BagFence_Round_F",[-4.25,5.25,0],135],
											["S","Land_BagFence_Round_F",[3.375,5.25,0],225],
											["S","Land_BagFence_Round_F",[3.5,-6.125,0],315],
											["S","Land_BagFence_Round_F",[-4.125,-6.125,0],45],
											["S","Land_PaperBox_01_open_empty_F",[-5.92627,-4.37427,0],0],
											["S","Land_CratesShabby_F",[-4.80127,-3.87427,0],0],
											["S","Land_BagFence_Long_F",[1,-6.75,0],0],
											["S","Land_BagFence_Long_F",[1,5.875,0],180],
											["S","Land_BagFence_Long_F",[-1.75,5.875,0],180],
											["S","Land_BagFence_Long_F",[-1.75,-6.75,0],0],
											["V", selectRandom _hmgArr,[2.479,3.96826,0.2],45]
										]
									],
									[
										"o_antiair",
										[
											["V", selectRandom _vehAAA, [0,0,0.625],0],
											["S","Land_BagFence_Round_F",[-4.25,6.25,0],135],
											["S","Land_PaperBox_01_open_empty_F",[5.92822,-3.57007,0],0],
											["S","Land_CratesShabby_F",[5.05322,-4.69507,0],90],
											["S","Land_CratesWooden_F",[5.80322,3.42993,0],90],
											["S","Land_HBarrier_3_F",[4.125,-2.5,0],270],
											["S","Land_HBarrier_3_F",[-4.75,-2.375,0],270],
											["S","Land_HBarrier_3_F",[-5,3.625,0],270],
											["S","Land_HBarrier_3_F",[4,3.375,0],270],
											["S","Land_BagFence_Long_F",[4.17822,0.429932,0],90],
											["S","Land_BagFence_Long_F",[-4.69678,0.554932,0],90],
											["S","Land_BagFence_Long_F",[-1.75,6.875,0],0],
											["V", selectRandom _hmgArr,[-2.5,5,0.2],0]
										]
									]
								];

								["DEBUG", format["Zone%1 - Spawning Static: %2 in %3 positions (%4 types)", _zoneID, _count, count _locations, count _buildingList]] call zmm_fnc_logMsg;

								for "_i" from 1 to _count do {	
									if (count _locations == 0) exitWith { _centre = [0,0,0] };
									
									private _pos = selectRandom _locations;
									_locations deleteAt (_locations find _pos);

									private _key = (([ATLtoASL (_pos), ("Land_ClutterCutter_small_F"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									[_key,[(random 360),(((_key) call BIS_fnc_getPitchBank) select 0),(((_key) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
										
									
									{ [_x, true] remoteExec ["hideObject", 0, true] } forEach (nearestTerrainObjects [_pos, ["TREE", "SMALL TREE", "BUSH", "BUILDING", "HOUSE", "FOREST BORDER", "FOREST TRIANGLE", "FOREST SQUARE", "CHURCH", "CHAPEL", "CROSS", "BUNKER", "FORTRESS", "FOUNTAIN", "VIEW-TOWER", "LIGHTHOUSE", "QUAY", "FUELSTATION", "HOSPITAL", "FENCE", "WALL", "HIDE", "BUSSTOP", "FOREST", "TRANSMITTER", "STACK", "RUIN", "TOURISM", "WATERTOWER", "ROCK", "ROCKS", "POWERSOLAR", "POWERWAVE", "POWERWIND", "SHIPWRECK"], 5]);
									
									
									_bID = if (_forceID >= 0 && _forceID < count _buildingList) then { _forceID } else { floor random count _buildingList };
									(_buildingList#_bID) params ["_icon", "_buildingObjects"];
									
									["DEBUG", format["Zone%1 - Spawning Static: %5 of %6 - ID%2 (%3) at %4", _zoneID, _bID, _icon, _pos, _i, _count]] call zmm_fnc_logMsg;

									{
										_x params ["_type", ["_class",""], ["_rel",[0,0,0]], ["_dir", 0], ["_flat", true]];
										private _worldPos = _key modeltoWorld _rel;	
										private _obj = [_zoneID, _side, _type, _class, [_worldPos#0, _worldPos#1, _rel#2], getDir _key + _dir, _flat] call zmm_fnc_spawnObject;		
									} forEach _buildingObjects;

									
									private _grpArr = [];
									for "_j" from 0 to (1 + random 3) do { _grpArr pushBack (selectRandom _menArr) };

									private _tempGrp = [_key getPos [15, random 360], _side, _grpArr] call BIS_fnc_spawnGroup;
									[_tempGrp, getPos _key] call BIS_fnc_taskDefend;
									_tempGrp deleteGroupWhenEmpty true;
									_tempGrp enableDynamicSimulation true;
									{ _x addCuratorEditableObjects [units _tempGrp, true] } forEach allCurators;
									
									if (_showMarker) then {
										if (missionNamespace getVariable ["ZZM_Mode", 0] != 1) then {
											private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_SP_%2", _zoneID, _i]),(_pos getPos [25, random 360])] call BIS_fnc_stringToMarker;
											_mrkr setMarkerType "mil_unknown";
											_mrkr setMarkerSize [0.6, 0.6];
											_mrkr setMarkerColor format["Color%1",_side];

											private _cpTrigger = (([(AGLToASL (_pos)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
											_cpTrigger setTriggerActivation [format["%1",_side], "NOT PRESENT", false];
											_cpTrigger setTriggerArea [25, 25, 0, false];
											_cpTrigger setTriggerStatements [  "this", format["'MKR_%1_SP_%2' setMarkerColor 'ColorGrey'", _zoneID, _i], "" ];
											
											private _hdTrigger = (([(AGLToASL (_pos)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
											_hdTrigger setTriggerActivation ["ANYPLAYER", "PRESENT", false];
											_hdTrigger setTriggerArea [250, 250, 0, false, 100];
											_hdTrigger setTriggerStatements [  "this", format["'MKR_%1_SP_%2' setMarkerType '%3'", _zoneID, _i, _icon], "" ];
										} else {
											private _mrkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format ["MKR_%1_SP_%2", _zoneID, _i]),(_pos)] call BIS_fnc_stringToMarkerLocal;
											_mrkr setMarkerTypeLocal _icon;
											_mrkr setMarkerColorLocal format["Color%1",_side];
											if (!isMultiplayer) then { _mrkr setMarkerTextLocal format["Static%1", _bID]; };
										};
									};
								};

								_centre set [2,0];
								_centre
							};
						};
						if (isNil("zmm_fnc_logMsg")) then {
							zmm_fnc_logMsg = {
								params ["_lev", "_msg"];

								if (missionNamespace getVariable ["ZMM_Debug", false] || !( [toUpper _lev] in [["DEBUG"]])) then { format["[ZMM] [%1] %2", _lev, _msg] remoteExec ["systemChat"] };
								diag_log text format ["[ZMM] [%1] %2", _lev, _msg];
								if ([_lev] in [["ERROR"]]) then { format ["[ZMM] [%1] %2", _lev, _msg] remoteExec ["SystemChat"] };
							};
						};
						if (isNil("zmm_fnc_nameGen")) then {
							zmm_fnc_nameGen = {
								private _adj = [
									"Aback",
									"Abject",
									"Absorbed",
									"Accurate",
									"Acidic",
									"Ambiguous",
									"Ambitious",
									"Ancient",
									"Arrogant",
									"Assorted",
									"Average",
									"Awful",
									"Bitter",
									"Bizarre",
									"Bloody",
									"Boring",
									"Bouncy",
									"Bustling",
									"Confused",
									"Cowardly",
									"Crooked",
									"Crowded",
									"Cruel",
									"Dazzling",
									"Dead",
									"Deez Nuts",
									"Didactic",
									"Dispensable",
									"Efficient",
									"Eminent",
									"Familiar",
									"Famous",
									"Feeble",
									"Fertile",
									"Glib",
									"Gullible",
									"Halting",
									"Happy",
									"Hungry",
									"Ill-Fated",
									"Imported",
									"Itchy",
									"Jumbled",
									"Left",
									"Lying",
									"Lyrical",
									"Mammoth",
									"Married",
									"Meaty",
									"Mighty",
									"Milky",
									"Nappy",
									"Near",
									"Nutritious",
									"Obscene",
									"Old-Fashioned",
									"Orange",
									"Oval",
									"Penitent",
									"Perfect",
									"Periodic",
									"Petite",
									"Piping",
									"Placid",
									"Possible",
									"Psychotic",
									"Puzzling",
									"Quaint",
									"Ratty",
									"Responsible",
									"Rhetorical",
									"Rightful",
									"Roomy",
									"Ruddy",
									"Rude",
									"Salty",
									"Scandalous",
									"Selfish",
									"Shaky",
									"Sick",
									"Silent",
									"Solid",
									"Spiky",
									"Spurious",
									"Supreme",
									"Tasty",
									"Terrible",
									"Tremendous",
									"Typical",
									"Unbiased",
									"Uneven",
									"Uptight",
									"Voracious",
									"Wasteful",
									"Well-Off",
									"Well-To-Do",
									"Wise",
									"Wistful",
									"Workable",
									"Zealous",
									"Zesty"
								];

								private _noun = [
									"Achievement",
									"Actor",
									"Aid",
									"Airport",
									"Alarm",
									"Apparatus",
									"Attraction",
									"Aunt",
									"Bedroom",
									"Blow",
									"Bridge",
									"Brother",
									"Bushes",
									"Cake",
									"Camp",
									"Card",
									"Cent",
									"Chess",
									"Clover",
									"Coal",
									"Coil",
									"Copper",
									"Corn",
									"Dad",
									"Desk",
									"Discovery",
									"Doctor",
									"Dust",
									"Ear",
									"Education",
									"Fang",
									"Flower",
									"Fold",
									"Friends",
									"Front",
									"Grandmother",
									"Grip",
									"Growth",
									"Island",
									"Jail",
									"Jar",
									"Juice",
									"Jump",
									"Ladybug",
									"Land",
									"Leather",
									"Letters",
									"Limit",
									"Line",
									"Linen",
									"Mailbox",
									"Match",
									"Meal",
									"Measure",
									"Metal",
									"Minister",
									"Mist",
									"Mitten",
									"Nation",
									"Oatmeal",
									"Passenger",
									"Pear",
									"Pencil",
									"Pie",
									"Plate",
									"Play",
									"Plot",
									"Plough",
									"Popcorn",
									"Pot",
									"Power",
									"Protest",
									"Quarter",
									"Quiet",
									"Reading",
									"Record",
									"Respect",
									"Scene",
									"Scent",
									"Scissors",
									"Seashore",
									"Seed",
									"Side",
									"Size",
									"Smash",
									"Smile",
									"Snail",
									"Spy",
									"Statement",
									"Step",
									"Stew",
									"Stretch",
									"Taste",
									"Temper",
									"Thread",
									"Title",
									"Verse",
									"Vest",
									"Voyage",
									"Yam"
								];

								private _pre = [
									"Assault",
									"Codename",
									"Invasion",
									"Mission",
									"Objective",
									"Operation",
									"Project",
									"Raid",
									"Strike",
									"Task Force",
									"War Game"
								];

								params [["_prefix", selectRandom _pre]];

								format["%1: %2 %3", _prefix, selectRandom _adj, selectRandom _noun]
							};
						};
						if (isNil("zmm_fnc_unitDirPos")) then {
							zmm_fnc_unitDirPos = {
								params [["_unit", objNull]];

								if (isNull _unit) exitWith {};

								private _unitEyePos = eyePos _unit;

								if (count (lineIntersectsWith [_unitEyePos, (_unitEyePos vectorAdd [0, 0, 10])] select {_x isKindOf 'Building'}) < 1) then {
									_unit setUnitPos "MIDDLE";
									
									_unitEyePos = eyePos _unit; 
								}; 

								private _p1 = []; 
								private _p2 = []; 
								private _p3 = []; 
								private _p4 = []; 

								private _unitBld = nearestBuilding _unit;

								if (!isNull _unitBld) then {
									for "_dir" from (getDir _unitBld) to ((getDir _unitBld) + 359) step 45 do { 
										
										if (count (lineIntersectsWith [_unitEyePos, [_unitEyePos, 3, _dir] call BIS_fnc_relPos] select {_x isKindOf 'Building'}) > 0) then { 
											_p4 pushBack _dir;
										} else { 
											
											if (count (lineIntersectsWith [_unitEyePos, [_unitEyePos, 10, _dir] call BIS_fnc_relPos] select {_x isKindOf 'Building'}) > 0) then { 
												_p3 pushBack _dir;
											} else { 
												if (abs ((_unitEyePos getDir _unitBld) - _dir) >= 120) then {
													_p1 pushBack _dir;
												} else {
													_p2 pushBack _dir;
												};
											};
										};
									};  
								};
									
								private _finalDir = random 360;
								{	
									if (count _x > 0) exitWith {_finalDir = selectRandom _x };
								} forEach [_p1, _p2, _p3, _p4];

								[_unit,[(_finalDir),(((_unit) call BIS_fnc_getPitchBank) select 0),(((_unit) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
								_unit doWatch (_unit getPos [200,_finalDir]);

								if (count (_p1 + _p2) >= 5 && random 1 > 0.2) then { _unit setUnitPos "MIDDLE" };

								if (count (_p1 + _p2) >= 7) then { 
									if (random 1 > 0.8) then { _unit setUnitPos "MIDDLE" } else { _unit setUnitPos "DOWN" };
								};
							};
						};
						if (isNil("zmm_fnc_setupPopulate")) then {
							zmm_fnc_setupPopulate = {
								if !isServer exitWith {};

								params [ "_zoneID", ["_locType", ""], ["_forceTask", ""],  ["_militarize", false]];


								if (([_locType] in [["Task"]]) && (ZZM_Mode != 1 || _forceTask != "")) then {
									
									
									
									[_zoneID, _forceTask] call zmm_fnc_setupTask;
								};

								private _doPatrols = missionNamespace getVariable [ format[ "ZMM_%1_Patrols", _zoneID ], true];
								private _doGarrison = missionNamespace getVariable [ format[ "ZMM_%1_Garrison", _zoneID ], 14] > 0;
								private _doRoadblock = missionNamespace getVariable [ format[ "ZMM_%1_Roadblocks", _zoneID ], floor random 2] > 0;
								private _doSupport = missionNamespace getVariable [ format[ "ZMM_%1_Supports", _zoneID ], 0] > 0;
								private _doQRF = count (missionNamespace getVariable [ format["ZMM_%1_QRFLocations", _zoneID], []]) > 0 && missionNamespace getVariable ["f_param_ZMMQRF", 1] == 1;
								private _doIED = missionNamespace getVariable [ format["ZMM_%1_IEDs", _zoneID], 0] > 0 && missionNamespace getVariable ["f_param_ZMMIED", 1] == 1;

								["DEBUG", format["Zone%1 - Populating %2 %3 [%4%5%6%7]", _zoneID, _locType, _forceTask, ["","+Patrols"] select _doPatrols, ["","+Garrison"] select _doGarrison, ["","+Roadblock"] select _doRoadblock, ["","+Support"] select _doSupport, ["","+QRF"] select _doQRF]] call zmm_fnc_logMsg;

								if _doPatrols then { [_zoneID, _locType] call zmm_fnc_areaPatrols };
								if _doGarrison then { [_zoneID] spawn zmm_fnc_areaGarrison; 
									if (_militarize) then { [_zoneID] spawn zmm_fnc_areaMilitarise };
								};
								if _doRoadblock then { [_zoneID] spawn zmm_fnc_areaRoadblock };
								if _doSupport then { [_zoneID] spawn zmm_fnc_areaSupport };
								if _doQRF then { [_zoneID, true] spawn zmm_fnc_areaQRF };
								if _doIED then { [_zoneID] spawn zmm_fnc_areaIED };

								if (_locType == "Task" && getMarkerColor format["MKR_%1_MAX", _zoneID] != "") then {
									[
										_zoneID,
										format["ZMM_%1_PatrolsStrength", _zoneID],
										missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "Location"],
										format["
											<br/><font size='18' color='#80FF00'>ENEMY INTEL</font>
											<br/>The following units are known to be operational in %6:
											<br/>%1%2
											<br/>%3%4%5",
											((((vehicles inAreaArray format["MKR_%1_MAX", _zoneID]) select { side _x getFriend ZMM_playerSide < 0.6 && count crew _x > 0}) apply {  getText (configFile >> "CfgVehicles" >> typeOf _x >> "displayName") }) call BIS_fnc_consolidateArray) apply { format["%2x <font color='#00FFFF'>%1</font><br/>", _x#0, _x#1] } joinString "",
											format["%1x <font color='#00FFFF'>Infantry Groups</font><br/>", { side _x getFriend ZMM_playerSide < 0.6 && count units _x >= 2 && vehicle leader _x == leader _x} count ((allGroups apply { leader _x }) inAreaArray format["MKR_%1_MAX", _zoneID])],
											if (_doGarrison) then { "<br/>Enemy forces will have occupied buildings within the marked zone.<br/>" } else { "" },
											if (_doRoadblock || _doSupport) then { "<br/>Roadblocks or support buildings are present in the area and will likely have a mechanised or motorised vehicle nearby.<br/>" } else { "" },
											if (_doIED) then { "<br/>The enemy is known to be using IEDs with motion detector triggers - Slow movement will not set them off.<br/>" } else { "" },
											missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "Location"]
										]
									] spawn {
										sleep 30;
										["IntelAdded", [format["%1 (Sector #%2)", _this#2, _this#0], _this#3]] remoteExec ['BIS_fnc_showNotification'];
										format["*** Intel Available For: %1 ***", _this#2] remoteExec ["systemChat"];
									};
								};

								if (ZZM_Mode == 1 && ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0) > 0) then {
									private _clearTrg = (([(AGLToASL (missionNamespace getVariable [format["ZMM_%1_Location", _zoneID], [0,0,0]])), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									_clearTrg setTriggerArea [ ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0), ((getMarkerSize format["MKR_%1_MIN", _zoneID])#0), 0, false, 150 ];
									_clearTrg setTriggerActivation [ str (missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST]), "NOT PRESENT", true ];
									_clearTrg setTriggerTimeout [10, 10, 10, true];
									_clearTrg setTriggerStatements [ "count thisList < 4", 
										format["{ _x setMarkerColor 'ColorGrey' } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID],
										format["{ _x setMarkerColor 'Color%2' } forEach ['MKR_%1_LOC','MKR_%1_MIN']", _zoneID, missionNamespace getVariable [format["ZMM_%1_EnemySide", _zoneID], EAST]]];
										
									missionNamespace setVariable [format["TR_%1_CLEARED", _zoneID], _clearTrg];
								};
							};
						};
						if (isNil("zmm_fnc_setupTask")) then {
							zmm_fnc_setupTask = {
								if !isServer exitWith {};

								params [ "_zoneID", ["_filterTask", ""] ];

								if (isNil "_zoneID") then {
									private _markersAll = missionNamespace getVariable ["ZMM_ZoneMarkers", []];
									private _markersFar = [];
									
									if ([_markersAll] in [[[]]]) exitWith {}; 
									
									{
										_mkr = _x;
										if ([(playableUnits + switchableUnits) findIf { _x distance (getmarkerPos _mkr) < 1500 }] in [[-1]]) then { _markersFar pushBack _mkr };
									} forEach _markersAll;
									
									private _foundZone = selectRandom _markersAll;
									
									if !([_markersFar] in [[[]]]) then { _foundZone = selectRandom _markersFar };
									
									ZMM_ZoneMarkers = ZMM_ZoneMarkers - [_foundZone];
									
									_zoneID = parseNumber ((_foundZone splitString "_") select 1);
								};

								if (isNil "_zoneID") exitWith { ["ERROR", "Invalid Objective Zone"] call zmm_fnc_logMsg };

								missionNamespace setVariable ["ZMM_DONE", false, true];

								private _centre = missionNamespace getVariable [ format[ "ZMM_%1_Location", _zoneID ], [0,0,0] ];
								private _side = missionNamespace getVariable [ format[ "ZMM_%1_EnemySide", _zoneID ], EAST ];
								private _radius = (getMarkerSize format["MKR_%1_MIN", _zoneID]) select 0;
								private _locName = missionNamespace getVariable [format["ZMM_%1_Name", _zoneID], "this Location"];
								private _locType = missionNamespace getVariable [format["ZMM_%1_Type", _zoneID], "Custom"];
								private _buildings = missionNamespace getVariable [ format["ZMM_%1_Buildings", _zoneID], []];

								private _objectives = if (_filterTask != "") then {
										private _filterObjectives = ZMM_tasks select { toUpper (_x#1) == toUpper _filterTask };	
										
										if (count _filterObjectives > 0) exitWith { _filterObjectives };
										
										_filterObjectives = ZMM_tasks select { toUpper (_x#0) == toUpper _filterTask };
											
										if (count _filterObjectives > 0) then { _filterObjectives } else { ZMM_tasks };
									} else { ZMM_tasks };
									
								if (count _objectives == 0) exitWith { 
									["ERROR", format["Zone%1 - No objectives (%2, %3)", _zoneID, _locName, _centre]] call zmm_fnc_logMsg;
									false
								};

								(selectRandom _objectives) params ["_type", "_name", "_desc", "_icon", "_args", "_script", ["_overWrite", []]];

								_args = switch (_args) do {
									
									case "Building": {
										private _lrgBlds = _buildings select { count (_x buildingPos -1) >= 6 }; 
										[_zoneID, if (count _lrgBlds > 0) then { selectRandom _lrgBlds } else { nil } ] 
									};
									
									
									case "Road": { 
										private _roads = [];
										for [{_i = 25}, {_i <= (_radius / 1.5)}, {_i = _i + 25}] do {
											_roads = (_centre nearRoads _i) select { count (roadsConnectedTo _x) > 0};
									
											if (count _roads > 0) exitWith { [_zoneID, position (selectRandom _roads)] };
										};
										
										[_zoneID]
									};
									
									
									case "Location": { 
										private _locations = missionNamespace getVariable [ format["ZMM_%1_FlatLocations", _zoneID], []];
										[_zoneID, if (count _locations > 0) then { selectRandom _locations } else { nil } ] 
									};
									
									default { [_zoneID] };
								};

								if (count _overWrite > 0) then {
									_overWrite params [["_qrfTime", 600], ["_patrols", true], ["_garrison", true], ["_roadblock", true] ];
									
									if !([_qrfTime] in [[600]]) then { missionNamespace setVariable [format[ "ZMM_%1_QRFTime", _zoneID ], _qrfTime] };
									if !_patrols then { missionNamespace setVariable [format[ "ZMM_%1_Patrols", _zoneID ], false] };
									if !_garrison then { missionNamespace setVariable [format[ "ZMM_%1_Garrison", _zoneID ], 0] };	
									if !_roadblock then { missionNamespace setVariable [format[ "ZMM_%1_Roadblocks", _zoneID ], 0] };	
								};
								
								["DEBUG", format["Zone Below: %1", _zoneID]] call zmm_fnc_logMsg;
								["DEBUG", format["Args Below: %1", _args]] call zmm_fnc_logMsg;
								_result = [_args#0] call _script;

								if !_result then {
									["ERROR", format["Zone%1 - Failed to make: %2", _zoneID, _type]] call zmm_fnc_logMsg;
									[_zoneID, ""] call zmm_fnc_setupTask;
								} else {
									["DEBUG", format["Zone%1 - Made Objective %2 - (Wanted: %4) at %3", _zoneID, _type, _locName, _filterTask]] call zmm_fnc_logMsg;
								};

								true
							};
						};
						if (isNil("zmm_fnc_setupWorld")) then {
							zmm_fnc_setupWorld = {
								if !isServer exitWith {};
								params ['_limitAirport','_limitNameCityCapital','_limitNameCity','_limitNameVillage','_limitNameLocal','_randomTasks','_taskObjs','_zoneTrigger'];

								["INFO", format["Populating World: %1 (%2km)", worldName, round (worldSize / 1000)]] call zmm_fnc_logMsg;

								private _counter = 0;
								{
									_configType = _x#0;
									_configLimit = _x#1;
									_counterInternal = 0;
									{
										missionNamespace setVariable ["ZZM_ObjectiveCount", ([1, _taskObjs] call BIS_fnc_randomInt)];
										if (_counterInternal >= _configLimit) exitWith {};
										private ['_locType'];
										_pos = getArray (_x >> 'position');
										_radius = getNumber (_x >> 'radiusA') max getNumber (_x >> 'radiusB');
										_locName = getText (_x >> 'name');
										if ((["Airport", _locName] call BIS_fnc_inString) || (["Airfield", _locName] call BIS_fnc_inString) || (["Airstrip", _locName] call BIS_fnc_inString)) then {
											_locType = 'Airport';
										} else {
											_locType = getText (_x >> 'type');
										};
										
										_pos set [2,0];
											
										_makeLM = true;
										_bypass = false;
										
										
										{
											_mkrPos = getMarkerPos _x;
											_mkrSiz = (getMarkerSize _x) select 0;
											_mkrStr = toUpper _x;
											
											
											if (_mkrStr find "_MAX" > 0) then {
												if ((_pos distance2D _mkrPos) <= (_radius * 2) + (_mkrSiz * 1.5)) then { _makeLM = false };
											};
											
											if (_mkrStr find "_MIN" > 0 || _mkrStr find "SAFEZONE" >= 0) then {
												if (_pos inArea _x) then { _bypass = true };
											};
											
											
											if (_radius > 500) then { _radius = 500 };
											
											if _bypass exitWith {};
										} forEach allMapMarkers;
										
										if (!_bypass) then {
											
											if !(surfaceIsWater (_pos getPos [_radius, 0]) && surfaceIsWater (_pos getPos [_radius, 90]) && surfaceIsWater (_pos getPos [_radius, 180]) && surfaceIsWater (_pos getPos [_radius, 270])) then { 
												
												if _makeLM then { 
													
													if (ZZM_Mode == 1) then {
														_zoneId = [_pos, _locType, _radius, _locName ] call zmm_fnc_setupZone;
														_counterInternal = _counterInternal + 1;
														_counter = _counter + 1;
													} else {
														_zoneId = [_pos, _locType, _radius, _locName, _locType, "", CIVILIAN, false, _randomTasks, _zoneTrigger] call zmm_fnc_setupZone;
														_counterInternal = _counterInternal + 1;
														_counter = _counter + 1;
													};
												} else {
													if (random 100 > 50) then {
														_zoneID = [_pos, "Ambient", _radius, _locName, _locType, "", CIVILIAN, false, _randomTasks, _zoneTrigger] call zmm_fnc_setupZone;
														_counterInternal = _counterInternal + 1;
														_counter = _counter + 1;
													};
												};
											};
										};
									} forEach ("getText (_x >> 'type') == _configType" configClasses (configFile >> "CfgWorlds" >> worldName >> "Names"));
								} forEach [["Airport",_limitAirport], ["NameCityCapital",_limitNameCityCapital], ["NameCity",_limitNameCity], ["NameVillage",_limitNameVillage], ["NameLocal",_limitNameLocal]];

								["INFO", format["Populating World: Complete (%1 Zones)", _counter]] call zmm_fnc_logMsg;
							};
						};
						if (isNil("zmm_fnc_setupZone")) then {
							zmm_fnc_setupZone = {
								if !isServer exitWith {};

								params [ ["_pos", [0,0,0]], ["_locType", "Custom"], ["_radius", 150], ["_locName", "Unnamed"], ["_orgType", "Custom"], ["_forceTask", ""], ["_forceSide", CIVILIAN], ["_forcePopulate", false], ["_randomTask", false], ["_zoneTrigger", true] ];
								
								if (_radius < 50) then {
									_radius = 50;
								};

								_zmm_fnc_findSide = {
									params [[ "_nearPos", []], ["_inDist", 0]];
										
									private _inDist = _inDist max 2500;
									private _foundSide = CIVILIAN;
									private _sideColors = [];
									{_sideColors pushBack toUpper format["Color%1", _x] } forEach ZMM_enemySides;
										
									
									private _foundSides = [];
									{	
										private _findIndex = _sideColors find toUpper (getMarkerColor _x);
										if (_findIndex >= 0) then { _foundSides pushBack _x };
									} forEach (allMapMarkers select { getMarkerPos _x distance2D _nearPos < _inDist && toUpper (getMarkerColor _x) in ["COLORWEST", "COLOREAST", "COLORGUER"] });
									
									
									if (count _foundSides > 0) then {
										private _nearMarker = _foundSides select 0;
										
										{
											if ((markerPos _x distance _pos) < (markerPos _nearMarker distance _pos)) then { _nearMarker = _x }; 
										} forEach _foundSides;
										
										_foundSide = switch (toUpper (getMarkerColor _nearMarker)) do { case "COLORWEST": { WEST }; case "COLOREAST": { EAST }; default { INDEPENDENT }; };
									};
									
									if !([_foundSide] in [[CIVILIAN]]) exitWith { _foundSide };
									
									
									{
										if (side _x in ZMM_enemySides) exitWith { _foundSide = side _x };
									} forEach (_nearPos nearEntities [["Man", "Air", "Car", "Tank"], _inDist]);

									if !([_foundSide] in [[CIVILIAN]]) exitWith { _foundSide };
									
									_foundSide = selectRandom ZMM_enemySides;	
									_foundSide
								};

								switch (typeName _pos) do {
									case "STRING": {_pos = getMarkerPos _pos};
									case "OBJECT": {_pos = getPos _pos};
								};

								_pos set [2,0];

								private _triggerRadius = if ((_radius * 6) < 1000) then { 1000 } else { (_radius * 6) min 2000 };

								private _zoneID = (missionNamespace getVariable ["ZZM_zoneID",0]) + 1;	
								missionNamespace setVariable ["ZZM_zoneID", _zoneID]; 
								missionNamespace setVariable [format["ZMM_%1_Location", _zoneID], _pos]; 
								missionNamespace setVariable [format["ZMM_%1_Name", _zoneID], _locName]; 
								missionNamespace setVariable [format["ZMM_%1_Radius", _zoneID], _radius]; 
								missionNamespace setVariable [format["ZMM_%1_Type", _zoneID], [_orgType, _locType] select (isNil "_orgType")]; 
								
								private _side = _forceSide;
								if ([_forceSide] in [[CIVILIAN]]) then {
									_side = [ _pos, _radius * 5] call _zmm_fnc_findSide;
								};
								
								missionNamespace setVariable [format["ZMM_%1_EnemySide", _zoneID], _side]; 

								["DEBUG", format["Zone%1 - Spawning [%2] %6 (%3) %4 TR:%5m [%7]", _zoneID, _side, _locType, _pos, _triggerRadius, _locName, _forceTask]] call zmm_fnc_logMsg;
								
								private _iconType = '';
								private _iconSize = 1;
								private _locSize = 1;
								private _locMax = 8;
								private _multiplier = missionNamespace getVariable ["ZZM_Diff", 1];
								private _qrfTime = [420, 300, 180] select (missionNamespace getVariable ["ZZM_Diff", 1]);

								missionNamespace setVariable [format[ "ZMM_%1_Patrols", _zoneID ], true];
								missionNamespace setVariable [format[ "ZMM_%1_Garrison", _zoneID ], round (12 * _multiplier)];
								missionNamespace setVariable [format[ "ZMM_%1_QRFTime", _zoneID ], 400];
								missionNamespace setVariable [format[ "ZMM_%1_QRFWaves", _zoneID ], round (3 * _multiplier)];

								switch (_locType) do {
									case "Airport": { 
										_iconSize = 0.8;
										_locSize = 1.25;
										if (_side == WEST) then { _iconType = 'b_plane' } else { if (_side == EAST) then { _iconType = 'o_plane' } else { _iconType = 'n_plane' };};
										missionNamespace setVariable [format[ "ZMM_%1_Garrison", _zoneID ], (15 * _multiplier) + random 10];
										missionNamespace setVariable [format[ "ZMM_%1_Roadblocks", _zoneID ], floor (random 5)];
										missionNamespace setVariable [format[ "ZMM_%1_Supports", _zoneID ], floor (random 3)];
										missionNamespace setVariable [format[ "ZMM_%1_QRFTime", _zoneID ], _qrfTime];
										missionNamespace setVariable [format[ "ZMM_%1_QRFWaves", _zoneID ], round (8 * _multiplier)];
										missionNamespace setVariable [format[ "ZMM_%1_IEDs", _zoneID ], floor (random 3)];
									};
									case "NameCityCapital": { 
										_iconSize = 1;
										_locSize = 1.25;
										if (_side == WEST) then { _iconType = 'b_hq' } else { if (_side == EAST) then { _iconType = 'o_hq' } else { _iconType = 'n_hq' };};
										missionNamespace setVariable [format[ "ZMM_%1_Garrison", _zoneID ], (15 * _multiplier) + random 10];
										missionNamespace setVariable [format[ "ZMM_%1_Roadblocks", _zoneID ], floor (random 5)];
										missionNamespace setVariable [format[ "ZMM_%1_Supports", _zoneID ], floor (random 3)];
										missionNamespace setVariable [format[ "ZMM_%1_QRFTime", _zoneID ], _qrfTime];
										missionNamespace setVariable [format[ "ZMM_%1_QRFWaves", _zoneID ], round (6 * _multiplier)];
										missionNamespace setVariable [format[ "ZMM_%1_IEDs", _zoneID ], floor (random 3)];
									};
									case "NameCity": { 
										_iconSize = 0.85;
										_locSize = 1;
										if (_side == WEST) then { _iconType = 'b_installation' } else { if (_side == EAST) then { _iconType = 'o_installation' } else { _iconType = 'n_installation' };};
										missionNamespace setVariable [format[ "ZMM_%1_Garrison", _zoneID ], (15 * _multiplier) + random 10];
										missionNamespace setVariable [format[ "ZMM_%1_Roadblocks", _zoneID ], floor (random 4)];
										missionNamespace setVariable [format[ "ZMM_%1_Supports", _zoneID ], floor (random 2)];
										missionNamespace setVariable [format[ "ZMM_%1_QRFTime", _zoneID ], _qrfTime];
										missionNamespace setVariable [format[ "ZMM_%1_QRFWaves", _zoneID ], (6 * _multiplier)];
										missionNamespace setVariable [format[ "ZMM_%1_IEDs", _zoneID ], floor (random 2)];
									};
									case "NameVillage": { 
										_iconSize = 0.7;
										_locSize = 0.75;
										if (_side == WEST) then { _iconType = 'b_support' } else { if (_side == EAST) then { _iconType = 'o_support' } else { _iconType = 'n_support' };};
										missionNamespace setVariable [format[ "ZMM_%1_Garrison", _zoneID ], (10 * _multiplier) + random 10];
										missionNamespace setVariable [format[ "ZMM_%1_Roadblocks", _zoneID ], floor (random 2)];
										missionNamespace setVariable [format[ "ZMM_%1_Supports", _zoneID ], floor (random 2)];
										missionNamespace setVariable [format[ "ZMM_%1_QRFTime", _zoneID ], _qrfTime + 100];
										missionNamespace setVariable [format[ "ZMM_%1_QRFWaves", _zoneID ], (4 * _multiplier)];
										missionNamespace setVariable [format[ "ZMM_%1_IEDs", _zoneID ], floor (random 1)];
									};
									case "NameLocal": { 
										_iconSize = 0.55;
										_locSize = 0.75;
										if (_side == WEST) then { _iconType = 'b_unknown' } else { if (_side == EAST) then { _iconType = 'o_unknown' } else { _iconType = 'n_unknown' };};
										missionNamespace setVariable [format[ "ZMM_%1_Garrison", _zoneID ], (8 * _multiplier) + random 6];
										missionNamespace setVariable [format[ "ZMM_%1_Roadblocks", _zoneID ], floor (random 2)];
										missionNamespace setVariable [format[ "ZMM_%1_Supports", _zoneID ], floor (random 1.5)];
										missionNamespace setVariable [format[ "ZMM_%1_QRFTime", _zoneID ], _qrfTime + 200];
										missionNamespace setVariable [format[ "ZMM_%1_QRFWaves", _zoneID ], (4 * _multiplier)];
										missionNamespace setVariable [format[ "ZMM_%1_IEDs", _zoneID ], 0];
									};
									case "Ambient": {
										_iconSize = 0.4;
										_locSize = 0.75;
										if (_side == WEST) then { _iconType = 'b_unknown' } else { if (_side == EAST) then { _iconType = 'o_unknown' } else { _iconType = 'n_unknown' };};
										missionNamespace setVariable [format[ "ZMM_%1_Garrison", _zoneID ], (6 * _multiplier) + random 6];
										missionNamespace setVariable [format[ "ZMM_%1_Roadblocks", _zoneID ], floor (random 1.5)];
										missionNamespace setVariable [format[ "ZMM_%1_Supports", _zoneID ], floor (random 1.5)];
										missionNamespace setVariable [format[ "ZMM_%1_QRFTime", _zoneID ], 0];
										missionNamespace setVariable [format[ "ZMM_%1_QRFWaves", _zoneID ], 0];
										missionNamespace setVariable [format[ "ZMM_%1_IEDs", _zoneID ], 0];
									};
									case "Task": {
										_iconSize = 0.4;
										_locSize = 0.75;
										_iconType = 'hd_start';
										missionNamespace setVariable [format[ "ZMM_%1_Garrison", _zoneID ], (8 * _multiplier) + random 8];
										missionNamespace setVariable [format[ "ZMM_%1_Roadblocks", _zoneID ], 2 + floor (random 2)];
										missionNamespace setVariable [format[ "ZMM_%1_Supports", _zoneID ], floor (random 2)];
										missionNamespace setVariable [format[ "ZMM_%1_QRFTime", _zoneID ], _qrfTime];
										missionNamespace setVariable [format[ "ZMM_%1_QRFWaves", _zoneID ], (6 * _multiplier)];
										if (random 1 > 0.5) then { missionNamespace setVariable [format[ "ZMM_%1_IEDs", _zoneID ], floor (random 1)]; };
									};
									default {
										_iconSize = 0.4;
										_locSize = 0.75;
										if (_side == WEST) then { _iconType = 'b_unknown' } else { if (_side == EAST) then { _iconType = 'o_unknown' } else { _iconType = 'n_unknown' };};
									};
								};

								if (_side != INDEPENDENT) then { missionNamespace setVariable [format[ "ZMM_%1_IEDs", _zoneID ], 0] }; 

								["DEBUG", format["Zone%1 (%2 - %3) - Settings - GAR: %4 RBL: %5 SUP: %6 QRF: %7 IED: %8", _zoneID, _locType, _side,
									missionNamespace getVariable [format[ "ZMM_%1_Garrison", _zoneID ], 0],
									missionNamespace getVariable [format[ "ZMM_%1_Roadblocks", _zoneID ], 0],
									missionNamespace getVariable [format[ "ZMM_%1_Supports", _zoneID ], 0],
									missionNamespace getVariable [format[ "ZMM_%1_QRFWaves", _zoneID ], 0],
									missionNamespace getVariable [format[ "ZMM_%1_IEDs", _zoneID ], 0]]
								] call zmm_fnc_logMsg;

								_mrk = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_LOC", _zoneID]),(_pos)] call BIS_fnc_stringToMarker;
								_mrk setMarkerType _iconType;
								_mrk setMarkerColor format["color%1", _side];
								_mrk setMarkerSize [ _iconSize, _iconSize];
								if ((ZMM_Debug)) then { 
									_mrk setMarkerText format[" (%1) '%2'", _zoneID, _locType];
								} else {
									if (!(_locType == 'NameCityCapital') and !(_locType == 'NameCity') and !(_locType == 'NameVillage')) then {
										_mrk setMarkerText format[" (%1) '%2'", _zoneID, _locName];
									} else {
										_mrk setMarkerText format[" (%1)", _zoneID];
									};
								};

								_mrk = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_MIN", _zoneID]),(_pos)] call BIS_fnc_stringToMarker;
								_mrk setMarkerShape "ELLIPSE";
								_mrk setMarkerBrush "SolidBorder";
								_mrk setMarkerAlpha 0.3;
								_mrk setMarkerColor format["color%1", _side];
								_mrk setMarkerSize [ _radius * _locSize, _radius * _locSize];

								_mrk = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_MAX", _zoneID]),(_pos)] call BIS_fnc_stringToMarkerLocal;
								_mrk setMarkerShapeLocal "ELLIPSE";
								_mrk setMarkerBrushLocal "BORDER";
								_mrk setMarkerAlphaLocal 0.2;
								_mrk setMarkerColorLocal format["color%1", _side];
								_mrk setMarkerSizeLocal [ _radius * 2, _radius * 2];

								_mrk = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format["MKR_%1_TRG", _zoneID]),(_pos)] call BIS_fnc_stringToMarkerLocal;
								_mrk setMarkerShapeLocal "ELLIPSE";
								_mrk setMarkerBrushLocal "BORDER";
								_mrk setMarkerAlphaLocal 0.2;
								_mrk setMarkerColorLocal format[ "color%1", "Black" ];
								_mrk setMarkerSizeLocal [ _triggerRadius, _triggerRadius];

								private _allBlds = nearestObjects [_pos, ["building","static"], ((_radius * _locSize) max 150), true]; 
								missionNamespace setVariable [ format["ZMM_%1_Buildings", _zoneID], (_allBlds select {count (_x buildingPos -1) >= 4}) ]; 

								if (([_locType] in [["Ambient"]]) || ([_locType] in [["Task"]])) then {
									format["MKR_%1_LOC", _zoneID] setMarkerSize [ 0.5, 0.5];
								};

								if (isNil "ZMM_ZoneMarkers") then { ZMM_ZoneMarkers = []; };
								ZMM_ZoneMarkers pushBack format["MKR_%1_LOC", _zoneID];

								private _QRFLocs = [];
								private _qrfDist = if ((_radius * 3) < 1000) then { 1500 } else { (_radius * 3) min 2000 };

								for [{_i = 0}, {_i <= 360}, {_i = _i + 5}] do {
									private _roads = ((_pos getPos [_qrfDist, _i]) nearRoads 150) select {count (roadsConnectedTo _x) > 0};
									private _tempPos = [];	
									
									_tempPos = if (count _roads > 0) then { getPos (_roads#0) } else { (_pos getPos [_qrfDist, _i]) isFlatEmpty [15, -1, -1, -1] };
									
									if !([_tempPos] in [[[]]]) then {
										if ({_x distance2D _tempPos < 350} count _QRFLocs == 0) then {
											{ _x hideObjectGlobal true } forEach (nearestTerrainObjects [_tempPos, ["TREE", "SMALL TREE", "BUSH", "BUILDING", "HOUSE", "FOREST BORDER", "FOREST TRIANGLE", "FOREST SQUARE", "CHURCH", "CHAPEL", "CROSS", "BUNKER", "FORTRESS", "FOUNTAIN", "VIEW-TOWER", "LIGHTHOUSE", "QUAY", "FUELSTATION", "HOSPITAL", "FENCE", "WALL", "HIDE", "BUSSTOP", "FOREST", "TRANSMITTER", "STACK", "RUIN", "TOURISM", "WATERTOWER", "ROCK", "ROCKS", "POWERSOLAR", "POWERWAVE", "POWERWIND", "SHIPWRECK"], 5]);
											_QRFLocs pushBack _tempPos;
										};
									};
									
									if (count _QRFLocs > _locMax) exitWith {};
								};
								missionNamespace setVariable [ format["ZMM_%1_QRFLocations", _zoneID], _QRFLocs ]; 


								private _groundLocs = [];
								for [{_i = 0}, {_i < 360}, {_i = _i + 1}] do {
									for [{_j = 50}, {_j <= (_radius / 1.5)}, {_j = _j + 10}] do {
										private _tempPos = _pos getPos [_j, _i];
										
										if (count (_tempPos nearRoads 50) == 0 && 
											count (nearestObjects [_tempPos, ["House", "Building"], 25]) == 0 && 
											{{_x distance2D _tempPos < 250} count _groundLocs == 0}) 
										then {
											_tempPos = _tempPos isFlatEmpty [5, -1, 0.2, 3];
											if !([_tempPos] in [[[]]]) then { _groundLocs pushBack _tempPos };
										};
									};
									
									if (count _groundLocs > _locMax) exitWith {};
								};
								missionNamespace setVariable [ format["ZMM_%1_FlatLocations", _zoneID], _groundLocs]; 

								{
									private _flatMkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format ["FLAT_%1_%2", _zoneID, _forEachIndex]),(_x)] call BIS_fnc_stringToMarkerLocal;
									_flatMkr setMarkerTypeLocal "mil_dot";
									_flatMkr setMarkerColorLocal "ColorGreen";
									_flatMkr setMarkerAlphaLocal 0.2;
									_flatMkr setMarkerTextLocal format["F%1", _forEachIndex];
								} forEach _groundLocs;



								private _supportLocs = [];
								for [{_i = 0}, {_i < 360}, {_i = _i + 5}] do {
									for [{_j = _radius * 0.75}, {_j <= (_radius * 2)}, {_j = _j + 25}] do {
										private _tempPos = _pos getPos [_j, _i];
													
										if ({_x distance2D _tempPos < 400} count _supportLocs == 0 && !([_tempPos isFlatEmpty [10, -1, 0.25, 5]] in [[[]]])) then {			
											if (count (_tempPos nearRoads 50) == 0 &&
												count (nearestObjects [_tempPos, ["House", "Building"], 50]) == 0)
											then {
												_supportLocs pushBack _tempPos;
											};
										};
									};
									
									if (count _supportLocs > _locMax) exitWith {};
								};

								missionNamespace setVariable [ format["ZMM_%1_SupportLocations", _zoneID], _supportLocs]; 

								{
									private _suppMkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format ["SUPP_%1_%2", _zoneID, _forEachIndex]),(_x)] call BIS_fnc_stringToMarkerLocal;
									_suppMkr setMarkerTypeLocal "mil_dot";
									_suppMkr setMarkerColorLocal "ColorGreen";
									_suppMkr setMarkerAlphaLocal 0.2;
									_suppMkr setMarkerTextLocal format["S%1", _forEachIndex];
								} forEach _supportLocs;



								private _blockLocs = [];
								for [{_i = 0}, {_i < 360}, {_i = _i + 10}] do {
									private _roads = ((_pos getPos [(_radius * (1 + random 0.5)) max 300, _i]) nearRoads 100) select {count roadsConnectedTo _x > 0 && (nearestBuilding _x) distance _x > 75 && !([(getPos _x) isFlatEmpty [-1, -1, 0.25, 2]] in [[[]]])};
										
									if (count _roads > 0) then {
										private _road = _roads#0;
										if ({_x distance2D _road < 600} count _blockLocs == 0) then {
											_blockLocs pushBack _road;
										};
									};
									
									if (count _blockLocs > (_locMax / 2)) exitWith {};
								};
								missionNamespace setVariable [ format["ZMM_%1_BlockLocations", _zoneID], _blockLocs]; 

								{
									private _blckMkr = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",(format ["ROAD_%1_%2", _zoneID, _forEachIndex]),(_x)] call BIS_fnc_stringToMarkerLocal;
									_blckMkr setMarkerTypeLocal "mil_dot";
									_blckMkr setMarkerColorLocal "ColorBlue";
									_blckMkr setMarkerAlphaLocal 0.2;
									_blckMkr setMarkerTextLocal format["R%1", _forEachIndex];
								} forEach _blockLocs;



								["DEBUG", format["Zone%1 - Completed [%2] - Locations: QRF:%3 BLD:%4 FLT:%5", _zoneID, _side, count _QRFLocs, count _allBlds, count _groundLocs]] call zmm_fnc_logMsg;

								if (!(_forcePopulate)) then {
									if (_zoneTrigger) then {
										private _setupTrg = (([(AGLToASL (_pos)), ("EmptyDetector"), 1,[0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_setupTrg setTriggerArea [ _triggerRadius, _triggerRadius, 0, false, 150 ];
										_setupTrg setTriggerActivation [ "ANYPLAYER", "PRESENT", false ];
										_setupTrg setTriggerStatements [ "this", 
											format [ "[%1, '%2'] spawn zmm_fnc_setupPopulate;", _zoneID, _locType], 
											""];
									};
								} else {
									[ _zoneID, _locType, _forceTask ] spawn zmm_fnc_setupPopulate;
								};
								
								if (_randomTask) then {
									[] spawn {
										[_zoneID, ""] call zmm_fnc_setupTask;
									};
								};

								_zoneID
							};
						};
						if (isNil("zmm_fnc_spawnPara")) then {
							zmm_fnc_spawnPara = {
								if !isServer exitWith {};

								scriptName "paradrop.sqf";

								params [["_location", [0,0,0]], ["_side", EAST]];

								private _man = missionNamespace getVariable [format["ZMM_%1Man",_side],["O_Soldier_F"]];
								private _vehicle = selectRandom (missionNamespace getVariable [format["ZMM_%1Veh_Air",_side], (missionNamespace getVariable [format["ZMM_%1Veh_Cas",_side],[]])]);

								sleep random 30;

								private _groupMax = 99; 
								private _groupSize = 8; 

								_startPos = _location getPos [3000, random 360];

								private _init = "";
								if (typeName _vehicle == typeName []) then { _init = _vehicle # 1; _vehicle = _vehicle # 0 };

								private _grpVeh = (([_startPos, 0, _vehicle, _side] call BIS_fnc_spawnVehicle) select 0);
								private _dirTo =  _grpVeh getDir _location;
								private _dirFrom =  (_grpVeh getDir _location) + 180;
								[_grpVeh,[(_dirTo),(((_grpVeh) call BIS_fnc_getPitchBank) select 0),(((_grpVeh) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;

								if !([_init] in [[""]]) then { [] spawn {_init}; };

								(group effectiveCommander _grpVeh) deleteGroupWhenEmpty true;

								if (([getNumber (configFile >> "CfgVehicles" >> _vehicle >> "Side")] call BIS_fnc_sideType) != _side) then {
									_grp = [[0,0,0], _side, 0] call BIS_fnc_spawnGroup;
									(crew _grpVeh) join _grp;
								};

								private _grp = group effectiveCommander _grpVeh;

								private _cargoMax = ([_vehicle, true] call BIS_fnc_crewCount) - ([_vehicle, false] call BIS_fnc_crewCount);

								if (_cargoMax < 1) exitWith { _grpVeh setDamage 1 };

								private _paraList = [];
								private _cargoLeft = _cargoMax;

								for [{_i = 0}, {_i <= ceil (_cargoMax / _groupSize)}, {_i = _i + 1}] do {
									if (_cargoLeft - _groupSize >= _groupSize) then {
										_paraList set [_i,_groupSize];
									} else {
										
										if (_cargoLeft > 2) then {
											_paraList set [_i,_groupSize];
										};
									};
									
									_cargoLeft = _cargoLeft - _groupSize;
								};

								if (count _paraList > _groupMax) then { _paraList resize _groupMax };

								private _grpVehVar = [];
								private _grpVehCount = 0;

								{
									private _paraUnits = [];	
									for [{_i = 1}, {_i <= _x}, {_i = _i + 1}] do { _paraUnits pushBack (selectRandom _man) };

									_grpPara = [[0,0,0], _side, _paraUnits] call BIS_fnc_spawnGroup;

									{ _x moveInAny _grpVeh } forEach units _grpPara;
									
									_wp = _grpPara addWaypoint [_location, 0];
									_wp setWaypointType 'SAD';
									_wp = _grpPara addWaypoint [_location, 0];
									_wp setWaypointType 'GUARD';
									
									sleep 0.5;

									_grpVehVar pushBack _grpPara;
									
									_grpVehCount = _grpVehCount + _x;
								} forEach _paraList;

								_grpVeh setVariable ['var_dropGroup', _grpVehVar];

								_wp = _grp addWaypoint [_startPos, 0];
								_wp setWaypointType "MOVE";
								_wp setWaypointSpeed "FULL";
								_wp setWaypointBehaviour "CARELESS";
								_wp setWaypointStatements ["true","(vehicle this) setPilotLight true;"];


								private  _dropStart = _location getPos [_grpVehCount * 25, _dirFrom];
								private _tmp = format["|%1|%2|Empty|ICON|[1,1]|0|Solid|Default|1|",("dropStart"),(_dropStart)] call BIS_fnc_stringToMarkerLocal;
								_tmp setMarkerTypeLocal "mil_dot";
								_tmp setMarkerTextLocal "Start";

								_wp = _grp addWaypoint [_dropStart, 0];
								_wp setWaypointType "MOVE";
								_wp setWaypointStatements ["true","
									(vehicle this) spawn {
										{
											{
												_x setVariable ['_loadout', (getUnitLoadout _x)];
												_x allowDamage false;
												_x action ['EJECT', (vehicle _x)];
												_x addBackPack 'B_parachute';
												sleep 0.5;
												_x action ['openParachute', _x];
												sleep 0.3;
												_x allowDamage true;
												sleep 2;
											} forEach (units _x);
											sleep 1;
										} forEach (_this getVariable ['var_dropGroup',[]]);
									};
								"];

								private _dropDelete = _location getPos [3000, _dirTo];
								_wp = _grp addWaypoint [_dropDelete, 0];
								_wp setWaypointType "MOVE";
								_wp setWaypointCompletionRadius 500;
								_wp setWaypointStatements ["true","
								(vehicle this) spawn {
										{
											{
												_x setUnitLoadout (_x getVariable '_loadout');
												sleep 0.3;
											} forEach (units _x);
											sleep 1;
										} forEach (_this getVariable ['var_dropGroup',[]]);
								}; _delVeh = (vehicle this); { deleteVehicle (_x#0) } forEach (fullCrew _delVeh); deleteVehicle _delVeh; deleteGroup (group this);"];
							};
						};
						if (isNil("zmm_fnc_spawnUnit")) then {
							zmm_fnc_spawnUnit = {
								params [
									["_targetPos", []],
									["_posArray", []],
									"_side",
									["_unitClass", ""],
									["_tries", 1]
								];

								if ([_unitClass] in [[""]]) exitWith { ["ERROR", format["SpawnUnit - Empty Unit Passed: %1 (%2)", _unitClass, _side]] call zmm_fnc_logMsg };
								if (_tries > 10) exitWith {};

								["DEBUG", format["SpawnUnit - Passed %1: %2 [%3] Try:%4", _targetPos, _unitClass, _side, _tries]] call zmm_fnc_logMsg;

								private _reinfGrp = grpNull;
								private _grpVeh = objNull;
								private _vehType = "";
								private _sleep = true;
								private _dir = 0;
								private _customInit = "";

								if (count _posArray == 0 || count _targetPos == 0) exitWith {};

								{
									switch (typeName _x) do {
										case "STRING": { _posArray set [_forEachIndex, getMarkerPos _x] };
										case "OBJECT": { _posArray set [_forEachIndex, getPos _x] };
									};
								} forEach _posArray;

								private _startingPos = selectRandom _posArray;
								_startingPos set [2,0];
								_dir = _startingPos getDir _targetPos;
								private _manArray = missionNamespace getVariable [format["ZMM_%1Man", _side], ["B_Soldier_F"]];

								if (typeName _unitClass == typeName []) then { _customInit = _unitClass # 1; _unitClass = _unitClass # 0 };

								_isAir = false;
								if (typeName _unitClass == typeName "") then {
									if ("Air" in ([(configFile >> "CfgVehicles" >> _unitClass), true] call BIS_fnc_returnParents)) then { _isAir = true; _startingPos set [2, 500]; };
								};

								if ({ alive _x && _x distance2D _startingPos < (if _isAir then {1000} else {500})} count allPlayers > 0 && isMultiplayer) exitWith { 
									sleep 30;
									[_targetPos, _posArray, _side, _unitClass, _tries + 1] call zmm_fnc_spawnUnit;
								};

								if (typeName _unitClass == typeName "") then {
									_vehType = toLower getText (configFile >> "CfgVehicles" >> _unitClass >> "vehicleClass");
									_vehName = toLower getText (configFile >> "CfgVehicles" >> _unitClass >> "displayName");
									
									_grpVeh = (([if _isAir then {_startingPos} else {[_startingPos, 0, 150, 10, 0, 20] call BIS_fnc_findSafePos vectorAdd [0,0,0]}, 0, _unitClass, _side] call BIS_fnc_spawnVehicle) select 0);
									
									private _randAnim = [];
									{ 
										_configName = configName _x; 
										_displayName = getText (_x >> "displayName"); 
										if (_displayName != "" && {getNumber (_x >> "scope") > 1 || !isNumber (_x >> "scope")}) then { 
											_randAnim pushBack _configName;
											_randAnim pushBack random 1; 
										}; 
									} forEach (configProperties [configFile >> "cfgVehicles" >> (typeOf _grpVeh) >> "animationSources", "isClass _x", true]);
									[_grpVeh, "", _randAnim] call bis_fnc_initVehicle;
									
									_grpVeh setVehicleLock "LOCKEDPLAYER";
									[_grpVeh,[1, 0.5, 0.5]] remoteExec ["setVehicleTIPars"];

									if _isAir then {
										_sleep = false;
										[_grpVeh,[((_grpVeh getDir _targetPos)),(((_grpVeh) call BIS_fnc_getPitchBank) select 0),(((_grpVeh) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
									} else {
										[_grpVeh,[(_dir),(((_grpVeh) call BIS_fnc_getPitchBank) select 0),(((_grpVeh) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
									};
									
									_startingPos set [2,0]; 
									
									if (_vehType == "car" || (!canFire _grpVeh && !_isAir)) then {
										_vehType = "car";
										private _soldierArr = [];
										private _cargoNo = (count fullCrew [_grpVeh, "", true]) min 12;
										
										for "_i" from 1 to _cargoNo do { _soldierArr pushBack (if (_cargoNo > 4) then { selectRandom _manArray } else { _manArray#0 }) }; 
									
										_reinfGrp = [_grpVeh getPos [15, random 360], _side, _soldierArr] call BIS_fnc_spawnGroup;
										_reinfGrp addVehicle _grpVeh;
										
										{ if !(_x moveInAny _grpVeh) then {  }; uiSleep 0.1; } forEach (units _reinfGrp select { vehicle _x == _x });
										
										uiSleep 0.5;
										
										_reinfGrp selectLeader effectiveCommander _grpVeh;
									} else {
										if (([getNumber (configFile >> "CfgVehicles" >> _unitClass >> "Side")] call BIS_fnc_sideType) != _side) then {
											_reinfGrp = [[0,0,0], _side, 0] call BIS_fnc_spawnGroup;
											(crew _grpVeh) join _reinfGrp;
										};
										
										_reinfGrp = group effectiveCommander _grpVeh;
									};	
								} else {
									_reinfGrp = [_startingPos, _side, _unitClass] call BIS_fnc_spawnGroup;
									
									_vehArray = (units _reinfGrp apply { assignedVehicle _x }) - [objNull];
									
									if (count (_vehArray arrayIntersect _vehArray) > 0) then {
										_grpVeh = (_vehArray arrayIntersect _vehArray)#0;
										_vehType = "car";
										
										uiSleep 0.5;
										
										{ if !(_x moveInAny _grpVeh) then { deleteVehicle _x }; uiSleep 0.1; } forEach (units _reinfGrp select { vehicle _x == _x });
										
										_reinfGrp selectLeader effectiveCommander _grpVeh;
									};
								};

								if !(isNil "_customInit") then { 
									if !([_customInit] in [[""]]) then { [] spawn {_customInit}; };
								};

								if !_isAir then {
									if (random 1 > 0.3) then {
										_newWP = _reinfGrp addWaypoint [_targetPos, 100];
										_newWP setWaypointType "SAD";
									};

									_newWP = _reinfGrp addWaypoint [_targetPos, 100];
									_newWP setWaypointType "GUARD";
									
									if (_vehType == "car") then {
										_null = [_reinfGrp, _startingPos, _grpVeh, _targetPos] spawn {
											params ["_selGrp", "_startPos", "_selVeh", "_destPos"];

											private _leader = effectiveCommander _selVeh;
														
											waitUntil{ uiSleep 10; if (_leader distance2D _destPos < (400 + random 200) || !alive _leader || !canMove _selVeh) exitWith {true}; false; };
											
											if (!alive _leader || !canMove _selVeh) exitWith {};
											
											
											if (canFire _selVeh) then {
												_vehGrp = [[0,0,0], (side group _leader), 0] call BIS_fnc_spawnGroup;
												[_leader, driver _selVeh, gunner _selVeh] joinSilent _vehGrp;
											};
											
											_selGrp leaveVehicle _selVeh;
											{unassignVehicle _x; [_x] orderGetIn false; _x allowFleeing 0} forEach units _selGrp;
											
											waitUntil{ uiSleep 1; if ({vehicle _x == _selVeh} count units _selGrp == 0 || !alive _leader || !canMove _selVeh) exitWith {true}; false; };
											
											if (!alive _leader || !canMove _selVeh) exitWith {};
															
											uiSleep 5;
											
											if (canFire _selVeh) then {
												if (random 1 > 0.7) then {
													_newWP = group _leader addWaypoint [_destPos, 100];
													_newWP setWaypointType "SAD";
												};
												
												_newWP = group _leader addWaypoint [_destPos, 100];
												_newWP setWaypointType "GUARD";
											} else {
												_newWP = group _leader addWaypoint [_startPos, 0];
												waitUntil{ uiSleep 0.5; if (_selVeh distance2D _startPos < 50 || !alive _leader || !canMove _selVeh) exitWith {true}; false; };
												if (!alive _leader || !canMove _selVeh) exitWith {};
												_selVeh deleteVehicleCrew driver _selVeh;
												deleteGroup group _leader;
												deleteVehicle _selVeh;
											};
										};
									};
								} else {
									private _paraGrp = grpNull;
									private _cargoNo = ((count fullCrew [_grpVeh, "", true]) - (count fullCrew [_grpVeh, "", false])) min 12;
									
									
									if (_cargoNo > 1) then {
										_reinfGrp setBehaviour "CARELESS";
										_soldierArr = [];
										
										for "_i" from 1 to _cargoNo do { _soldierArr pushBack (selectRandom _manArray) };

										_paraGrp = [[0,0,0], _side, _soldierArr] call BIS_fnc_spawnGroup;
										
										{ if !(_x moveInAny _grpVeh) then { deleteVehicle _x }; uiSleep 0.1; } forEach (units _paraGrp select { vehicle _x == _x });
										
										_landPos = [_targetPos, 300, random 360] call BIS_fnc_relPos;		
										_unloadWP = _reinfGrp addWaypoint [_landPos, 100];
										_unloadWP setWaypointStatements ["true", "(vehicle this) land 'GET OUT'; {unassignVehicle _x; [_x] orderGetIn false} forEach ((crew vehicle this) select {group _x != group this})"];
										_newWP = _reinfGrp addWaypoint [waypointPosition _unloadWP, 0];
										_newWP setWaypointStatements ["{group _x != group this && alive _x} count crew vehicle this == 0", ""];
									};

									_weapCount = 0;
									{ _weapCount = _weapCount + count _x } forEach (([[-1]] + (allTurrets _grpVeh)) apply { (_grpVeh weaponsTurret _x) - [
										"rhsusf_weap_CMDispenser_ANALE39",
										"rhsusf_weap_CMDispenser_ANALE40",
										"rhsusf_weap_CMDispenser_ANALE52",
										"rhsusf_weap_CMDispenser_M130",
										"rhs_weap_CMDispenser_ASO2",
										"rhs_weap_CMDispenser_BVP3026",
										"rhs_weap_CMDispenser_UV26",
										"rhs_weap_MASTERSAFE",
										"rhsusf_weap_LWIRCM",
										"Laserdesignator_pilotCamera",
										"rhs_weap_fcs_ah64"]
									});
									
									
									if (_weapCount > 1) then {
										
										_newWP = _reinfGrp addWaypoint [_targetPos, 0];
										_newWP setWaypointType "SAD";
										_newWP setWaypointCompletionRadius 300;
										_newWP setWaypointBehaviour "AWARE";
										_newWP = _reinfGrp addWaypoint [_targetPos, 1];
										_newWP setWaypointType "LOITER";
										_newWP setWaypointCompletionRadius 500;
										
										_null = [_reinfGrp, _startingPos, _targetPos] spawn {
											params ["_rGrp","_sPos","_tPos"];
															
											private _time = time + 600;
											while {	alive (vehicle leader _rGrp) && time < _time } do {
												uiSleep 30;
												{ if (_rGrp knowsAbout _x < 4) then { _rGrp reveal [_x, 4] } } forEach (allPlayers select {_x distance2D leader _rGrp < 2500 && stance _x != "PRONE" });
											};
										};
									} else {
										_newWP = _reinfGrp addWaypoint [_startingPos, 0];
										_null = [_reinfGrp, _startingPos] spawn {
											params ["_reinfGrp","_startingPos"];
											_heli = vehicle leader _reinfGrp;
											waitUntil{ uiSleep 5; if ((leader _reinfGrp) distance2D _startingPos > 200 || !alive (leader _reinfGrp) || !canMove _heli) exitWith {true}; false; };
											waitUntil{ uiSleep 0.5; if ((leader _reinfGrp) distance2D _startingPos < 200 || !alive (leader _reinfGrp) || !canMove _heli) exitWith {true}; false; };
											if (!alive (leader _reinfGrp) || !canMove _heli) exitWith {};
											{_heli deleteVehicleCrew _x} forEach crew _heli;
											deleteGroup _reinfGrp;
											deleteVehicle _heli;
										};
									};
									
									if (count units _paraGrp > 0) then {
										_newWP = _paraGrp addWaypoint [_targetPos, 100];
										_newWP setWaypointType "SAD";
										_newWP = _paraGrp addWaypoint [_targetPos, 100];
										_newWP setWaypointType "GUARD";
										_reinfGrp = _paraGrp;
									};
								};

								if (!isNull _reinfGrp) then { _reinfGrp deleteGroupWhenEmpty true };

								{ _x addCuratorEditableObjects [(units _reinfGrp) + [_grpVeh], true] } forEach allCurators;

								if (_sleep) then { sleep random 20 };
							};
						};
						if (isNil("zmm_fnc_spawnObject")) then {
							zmm_fnc_spawnObject = {
								params [
									["_zoneID", 0],
									["_side", WEST],
									["_type",""],
									["_class", ""],
									["_worldPos", [0,0,0]],
									["_worldDir", 0],
									["_flat", true]
								];

								if ([_class] in [[""]]) exitWith {};

								private _obj = objNull;
								private _manArr = missionNamespace getVariable [format["ZMM_%1Man",_side], ["B_Soldier_F"]];
										

								switch (_type) do {
									case "V": {
										private _customInit = "";
										
										if (typeName _class == typeName []) then { _customInit = _class#1; _class = _class#0 };
										
										_obj = (([ATLtoASL ([[[([0,0,0]), 150]], []] call BIS_fnc_randomPos), (_class), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										[_obj,[(_worldDir),(((_obj) call BIS_fnc_getPitchBank) select 0),(((_obj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
										_obj setPos _worldPos;
										
										
										if (_obj isKindOf "StaticWeapon") then { _obj setPosATL _worldPos };
										
										if (canMove _obj && canFire _obj) then { _obj setVehicleLock "LOCKEDPLAYER" };
										
										private _crewArr = [];
										for "_j" from 1 to (count ((fullCrew [_obj, "", true]) - fullCrew [_obj, "cargo", true] - fullCrew [_obj, "turret", true])) do { _crewArr pushBack (selectRandom _manArr) };

										private _tempGrp = [_obj getPos [15, random 360], _side, _crewArr] call BIS_fnc_spawnGroup;
										
										{ _x moveInAny _obj } forEach units _tempGrp;

										
										private _grpVeh = _obj;
										if !([_customInit] in [[""]]) then { [] spawn {_customInit}; };
										
										private _clear = (([ATLtoASL (_worldPos), ("Land_ClutterCutter_large_F"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										
										_tempGrp deleteGroupWhenEmpty true;
										_tempGrp enableDynamicSimulation true;
										{ _x addCuratorEditableObjects [[_grpVeh] + units _tempGrp, true] } forEach allCurators;
										
										
										if ("Artillery" in getArray (configFile >> "CfgVehicles" >> _class >> "availableForSupportTypes") && getMarkerType format["MKR_%1_MAX", _zoneID] != "") then {
											[_grpVeh, format["MKR_%1_MAX", _zoneID], "SHOWMARKER", "NOAI", "NOWP"] spawn zmm_fnc_aiUPS;
										};
									};
									case "O": {
										_obj = (([([0,0,0]), (_class), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										[_obj,[(_worldDir),(((_obj) call BIS_fnc_getPitchBank) select 0),(((_obj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
										_obj setPosATL _worldPos;
										if !([(_obj buildingPos -1)] in [[[]]]) then { [_zoneID, 3, (_obj buildingPos -1)] spawn zmm_fnc_areaGarrison };
									};
									default {
										_obj = (([ATLToASL (_worldPos), (_class), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										[_obj,[(_worldDir),(((_obj) call BIS_fnc_getPitchBank) select 0),(((_obj) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
										
									};
								};

								if _flat then { _obj setVectorUp surfaceNormal getPos _obj };
								[_obj, true] remoteExec ["enableDynamicSimulation", 0, true];
								
								_obj
							};
						};
						
						_allSides = [west,east,independent];
						ZMM_enemySides = _setupSides;
						missionNamespace setVariable ["ZMM_playerSide", ((_allSides - ZMM_enemySides) select 0), true];
						
						if ([ZZM_Mode] in [[0]]) exitWith { _nul = [_entity] spawn zmm_brief_custom; };
						
						{
							private _side = _x;
							
							{
								private _varName = _x;
								private _arr = missionNamespace getVariable[_varName,[]];
								
								["INFO", format["%1: %2", _varName, _arr]] call zmm_fnc_logMsg;
								
								if (count _arr == 0) then { ["WARNING", format["Variable '%1' has no valid classes in.", _varName]] call zmm_fnc_logMsg };
								{
									_x params [["_obj",""],["_init",""]];
									
									if ((typeName _obj) == (typeName "")) then {
										if !(isClass (configFile >> "CfgVehicles" >> _obj)) then { ["ERROR", format["Invalid Unit '%1' in %2.", _obj, _varName]] call zmm_fnc_logMsg };
									} else {
										if !(isClass _obj) then { ["ERROR", format["Invalid Class in '%1'.", _varName]] call zmm_fnc_logMsg };
									};
								} forEach _arr;
							} forEach [
								format["ZMM_%1Veh_Truck",_side],
								format["ZMM_%1Veh_Util",_side],
								format["ZMM_%1Veh_Light",_side],
								format["ZMM_%1Veh_Medium",_side],
								format["ZMM_%1Veh_Heavy",_side],
								format["ZMM_%1Veh_Air",_side],
								format["ZMM_%1Veh_CasH",_side],
								format["ZMM_%1Veh_CasP",_side],
								format["ZMM_%1Veh_Convoy",_side],
								format["ZMM_%1Veh_Static",_side]
							];
							
							{
								if !(isClass (configFile >> "CfgVehicles" >> _x)) then { ["ERROR", format["Invalid Unit '%1' in ZMM_%2Man.", _obj, _side]] call zmm_fnc_logMsg };
							} forEach (missionNamespace getVariable [format["ZMM_%1Man", _side], []]);
							
							{
								private _varName = _x;
								private _arr = missionNamespace getVariable[_varName,[]];
								
								["INFO", format["%1: %2", _varName, _arr]] call zmm_fnc_logMsg;
								
								if (count _arr == 0) then { 
									["WARNING", format["Variable '%1' has no valid classes in.", _varName]] call zmm_fnc_logMsg
								} else {
									if ((typeName _arr#0) == (typeName [])) then { _arr = _arr select 0 };
									if ((typeName _arr#0) == (typeName [])) then { _arr = _arr select 0 };
								};
								
								{
									if ((typeName _x) == (typeName "")) then {
										if !(isClass (configFile >> "CfgVehicles" >> _x)) then { ["ERROR", format["Invalid Unit '%1' in %2.", _x, _varName]] call zmm_fnc_logMsg };
									} else {
										if !(isClass _x) then { ["ERROR", format["Invalid Class in '%1'.", _varName]] call zmm_fnc_logMsg };
									};
								} forEach _arr;
							} forEach [
								format["ZMM_%1Grp_Sentry",_side],
								format["ZMM_%1Grp_Team",_side],
								format["ZMM_%1Grp_Squad",_side]
							];
						} forEach ZMM_enemySides;
					};
				}] remoteExec ['bis_fnc_call',0,"LM_JIP_dynamicTasksInit"];

				if(!(missionNamespace getVariable ["ZMM_Setup_Status", false])) then {
					systemchat format["[ LOG ] Initializing Dynamic Tasks Framework with Difficulty '%1', IEDs '%2', QRFs '%3', Enemy Side #1 '%4', Enemy Side #2 '%5', BLUFOR using Faction '%6', OPFOR using Faction '%7', GEUR using Faction '%8', and Debug Mode '%9'!",_setupDiff#1,_setupIED_Text,_setupQRF_Text,_enemySide1,_enemySide2,_factionWEST#1,_factionEAST#1,_factionGUER#1,_setupDebug_Text];
				} else {
					systemchat format["[ LOG ] Re-Initializing Dynamic Tasks Framework with Enemy Side #1 '%1', Enemy Side #2 '%2', BLUFOR using Faction '%3', OPFOR using Faction '%4', GEUR using Faction '%5', and Debug Mode '%6'! Note: IEDs/QRF/Difficulty settings have already been set and cannot be changed until mission restart!",_enemySide1,_enemySide2,_factionWEST#1,_factionEAST#1,_factionGUER#1,_setupDebug_Text];
				};
				
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_populateWorld = {
			if(!(missionNamespace getVariable ["ZMM_Setup_Status", false])) exitWith {["In order to use this module please first complete the 'Initialization' procedure in the opened window!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_dynamicTasks;};
			
			private _locTypes = [["Airport",0], ["NameCityCapital",0], ["NameCity",0], ["NameVillage",0], ["NameLocal",0]];
			private _index = 0;
			{
				_configType = _x#0;
				_counter = _x#1;
				{
					_counter = _counter + 1;
				} forEach ("getText (_x >> 'type') == _configType" configClasses (configFile >> "CfgWorlds" >> worldName >> "Names"));
				_locTypes set [_index, [(_locTypes#_index)#0,_counter]];
				_index = _index + 1;
			} forEach _locTypes;
			
			if((((_locTypes#0)#1) == 0) and (((_locTypes#1)#1) == 0) and (((_locTypes#2)#1) == 0) and (((_locTypes#3)#1) == 0) and (((_locTypes#4)#1) == 0)) exitWith {["Apologies however it seems there are no defined Airport Capital, City, Village, or Rural zones on this map thus this module cannot be used!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			
			["Zone Populate",[
				[
					"SLIDER",
					"Amount of Airport Zones",
					[0,(_locTypes#0)#1,0]
				],
				[
					"SLIDER",
					"Amount of Capital Zones",
					[0,(_locTypes#1)#1,0]
				],
				[
					"SLIDER",
					"Amount of City Zones",
					[0,(_locTypes#2)#1,0]
				],
				[
					"SLIDER",
					"Amount of Village Zones",
					[0,(_locTypes#3)#1,0]
				],
				[
					"SLIDER",
					"Amount of Rural Zones",
					[0,(_locTypes#4)#1,0]
				],
				[
					"TOOLBOX",
					["Random Task Control:","Control whether to spawn a random task on each zone creation."],
					[false,["No Tasks","Random Tasks"]]
				],
				[
					"SLIDER",
					["Task Objs Count:","If random task enabled, choose the max range of objectives for each task to spawn."],
					[1,15,3]
				],
				[
					"TOOLBOX",
					["Population Trigger Control:","Control whether to create trigger for each Zone to autopopulate on nearby player."],
					[true,["No Trigger","Trigger"]]
				]
			],{
				params ["_values","_args","_display"];
				_values params ['_limitAirport','_limitNameCityCapital','_limitNameCity','_limitNameVillage','_limitNameLocal','_zoneTasks','_taskObjs','_zoneTrigger'];
				
				_limitAirport = round _limitAirport;
				_limitNameCityCapital = round _limitNameCityCapital;
				_limitNameCity = round _limitNameCity;
				_limitNameVillage = round _limitNameVillage;
				_limitNameLocal = round _limitNameLocal;
				_taskObjs = round _taskObjs;
				
				if (!((_limitAirport == 0) and (_limitNameCityCapital == 0) and (_limitNameCity == 0) and (_limitNameVillage == 0) and (_limitNameLocal == 0))) then {
					[[_limitAirport,_limitNameCityCapital,_limitNameCity,_limitNameVillage,_limitNameLocal,_zoneTasks,_taskObjs,_zoneTrigger], {
						params ['_limitAirport','_limitNameCityCapital','_limitNameCity','_limitNameVillage','_limitNameLocal','_zoneTasks','_taskObjs','_zoneTrigger'];
						[_limitAirport,_limitNameCityCapital,_limitNameCity,_limitNameVillage,_limitNameLocal,_zoneTasks,_taskObjs,_zoneTrigger] spawn (missionNamespace getVariable "zmm_fnc_setupWorld");
					}] remoteExec ['bis_fnc_call',0,false];
					
					if _zoneTasks then {
						systemchat format["[ LOG ] Populating World with '%1' Airport, '%2' Capital, '%3' City, '%4' Village, '%5' Rural Zones with Random Tasks, each having up to '%6' objs, and Population Trigger creation set to '%7'!",_limitAirport,_limitNameCityCapital,_limitNameCity,_limitNameVillage,_limitNameLocal,_taskObjs,_zoneTrigger];
					} else {
						systemchat format["[ LOG ] Populating World with '%1' Airport, '%2' Capital, '%3' City, '%4' Village, '%5' Rural Zones with Random Tasks set to '%6' and Population Trigger creation set to '%7'!",_limitAirport,_limitNameCityCapital,_limitNameCity,_limitNameVillage,_limitNameLocal,_zoneTasks,_zoneTrigger];
					};
				
				} else {
					["'0' provided for all zone amounts, thus cancelling populating the world!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
				};
				
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_zoneSpawn = {
			if(!(missionNamespace getVariable ["ZMM_Setup_Status", false])) exitWith {["In order to use this module please first complete the 'Initialization' procedure in the opened window!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_dynamicTasks;};
			private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
			
			_zoneTypes = [];
			_zoneTypeDescs = [];
			
			_zoneTypes append (player getVariable "ZMM_ZoneTypes_IDs");
			_zoneTypeDescs append (player getVariable "ZMM_ZoneTypes_Desc");
			
			["Zone Spawn",[
				[
					"VECTOR",
					["Spawn Position:","Choose where to spawn the Zone at, long as it is not water."],
					[_pos,["X","Y","Z"],3]
				],
				[
					"LIST",
					["Zone Type:","Choose a type to populate the Zone with."],
					[
						_zoneTypes,
						_zoneTypeDescs,
						0,
						(count _zoneTypes)
					]
				],
				[
					"SLIDER:RADIUS",
					"Zone Radius:",
					[10,2500,150,_pos,[1,1,1,1]]
				],
				[
					"EDIT",
					["Zone Name:","Choose what to call the Zone to be spawned."],
					[""]
				],
				[
					"LIST",
					["Zone Side:","Choose the side of the spawned zone."],
					[
						[[civilian,'Side of Nearest Enemy Zone'],[west,'BLUFOR'],[east,'OPFOR'],[independent,'Independent']],
						[
							["Side of Nearest Enemy Zone","",""],
							["BLUFOR","",""],
							["OPFOR","",""],
							["INDEPENDENT","",""]
						],
						0,
						4
					]
				],
				[
					"TOOLBOX",
					["Force Populate Control:","Control whether to populate the sector on spawn or to dynamically wait for nearby players."],
					[false,["Wait For Players","Populate Now"]]
				],
				[
					"TOOLBOX",
					["Random Task Control:","Control whether to spawn a random task on zone creation."],
					[false,["No Task","Random Task"]]
				],
				[
					"SLIDER",
					["Task Objs Count:","If random task enabled, choose the number of objectives for the task to spawn."],
					[1,15,3]
				],
				[
					"TOOLBOX",
					["Population Trigger Control:","Control whether to create trigger for each Zone to autopopulate on nearby player."],
					[true,["No Trigger","Trigger"]]
				]
			],{
				params ["_values","_args","_display"];
				_values params ['_zonePos','_zoneType','_zoneRadius','_zoneName','_zoneSide','_zonePopulate','_zoneTask','_taskObjs','_zoneTrigger'];
				
				_taskObjs = round _taskObjs;
				if (!(surfaceIsWater _zonePos)) then {
					[[_zonePos,_zoneType,_zoneRadius,_zoneName,_zoneSide#0,_zonePopulate,_zoneTask,_taskObjs,_zoneTrigger], { 
						 params ['_zonePos','_zoneType','_zoneRadius','_zoneName','_zoneSide','_zonePopulate','_zoneTask','_taskObjs','_zoneTrigger']; 
						 'loc_mkr' setMarkerPos _zonePos; 
						 'loc_mkr' setMarkerSize [_zoneRadius,_zoneRadius]; 
						 missionNamespace setVariable ["ZZM_ObjectiveCount", _taskObjs];
						 [_zonePos, _zoneType, _zoneRadius, _zoneName, _zoneType, '', _zoneSide, _zonePopulate, _zoneTask, _zoneTrigger] call (missionNamespace getVariable "zmm_fnc_setupZone"); 
					}] remoteExec ['bis_fnc_call',2,false];
					
					if _zoneTask then {
						systemchat format["[ LOG ] Spawning Zone at position '%1', with Radius '%2', Type '%3', Side of '%4', Force Populate set to '%5', Randtom Task with '%6' Objs, and Population Trigger creation set to '%7'!",_zonePos,_zoneRadius,_zoneType,_zoneSide#1,_zonePopulate,_taskObjs,_zoneTrigger];
					} else {
						systemchat format["[ LOG ] Spawning Zone at position '%1', with Radius '%2', Type '%3', Side of '%4', Force Populate set to '%5', Task Control set to '%6', and Population Trigger creation set to '%7'!",_zonePos,_zoneRadius,_zoneType,_zoneSide#1,_zonePopulate,_zoneTask,_zoneTrigger];
					};
				
					_display closeDisplay 1;
				} else {
					["Please choose a Zone Spawn position which is not in water!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
				};
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_zonePopulate = {
			[] spawn {
				if(!(missionNamespace getVariable ["ZMM_Setup_Status", false])) exitWith {["In order to use this module please first complete the 'Initialization' procedure in the opened window!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_dynamicTasks;};
				
				_entity = player;
				[[_entity], {
					params ['_entity'];
					_markers = (missionNamespace getVariable ["ZMM_ZoneMarkers",[]]);
					_markerInfo = [];
					_markersAmount = (missionNamespace getVariable ["ZZM_zoneID",0]);
					_varTypes = ['Location','Name','Radius','Type','Patrols','Garrison','Roadblocks','Supports','QRFTime','QRFWaves','IEDs'];
					for "_x" from 1 to _markersAmount do {
						for "_y" from 0 to ((count _varTypes) - 1) do {
							_markerInfo append [[format["ZMM_%1_%2", _x, (_varTypes select _y)], (missionNamespace getVariable format["ZMM_%1_%2", _x, (_varTypes select _y)])]];
						};
					};
					[[_entity, _markerInfo, _markers, _markersAmount], {
						params ['_entity','_markerInfo','_markers','_markersAmount'];
						if (player == _entity) then {
							for "_x" from 0 to ((count _markerInfo) - 1) do {
								_entity setVariable [(_markerInfo#_x)#0, (_markerInfo#_x)#1];
							};
							_entity setVariable ["ZMM_ZoneMarkers", _markers];
							_entity setVariable ["ZZM_zoneID", _markersAmount];
						};
					}] remoteExec ['bis_fnc_call',0,false];	
				}] remoteExec ['bis_fnc_call',2,false];
				
				sleep 1;
				
				if((player getVariable ["ZZM_zoneID",0]) <= 0) exitWith {["In order to use this module you must first spawn a zone, using either the opened window or alternatively through use of the 'Populate World' module!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_zoneSpawn;};
				
				_zoneIDs = [];
				_zoneDescs = [];
				
				for "_x" from 1 to (player getVariable "ZZM_zoneID") do {
					_zoneType = (player getVariable format["ZMM_%1_Type",_x]);
					_zoneMarker = '';
					if ((_zoneType == "Airport")) then {
						_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#0)#2);
					} else {
						if ((_zoneType == "NameCityCapital")) then {
							_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#1)#2);
						} else {
							if ((_zoneType == "NameCity")) then {
								_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#2)#2);
							} else {
								if ((_zoneType == "NameVillage")) then {
									_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#3)#2);
								} else {
									if ((_zoneType == "NameLocal") || (_zoneType == "Ambient")) then {
										_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#4)#2);
									} else {
										if ((_zoneType == "Task")) then {
											_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#5)#2);
										} else {
											_zoneMarker = 'a3\3den\data\displays\display3den\panelright\submode_marker_icon_ca.paa';
										};
									};
								};
							};
						};
					};
					
					_zoneIDs append [format['%1', _x]];
					_zoneDescs append [[format["ID: %1, Name: %2, Type: %3",_x,(player getVariable [format["ZMM_%1_Name",_x],"No Name"]),_zoneType],"",_zoneMarker]];
				};
				
				_zoneTypes = ['Current'];
				_zoneTypeDescs = [["Current Zone Type","","a3\3den\data\displays\display3den\panelright\submode_marker_icon_ca.paa"]];
				
				_zoneTypes append (player getVariable "ZMM_ZoneTypes_IDs");
				_zoneTypeDescs append (player getVariable "ZMM_ZoneTypes_Desc");
				
				["Zone Populate",[
					[
						"LIST",
						["Zone:","Choose a Zone to populate."],
						[
							_zoneIDs,
							_zoneDescs,
							0,
							10
						]
					],
					[
						"LIST",
						["Zone Type:","Choose a type to populate the Zone with."],
						[
							_zoneTypes,
							_zoneTypeDescs,
							0,
							(count _zoneTypes)
						]
					],
					[
						"TOOLBOX:YESNO",
						["Militarise Control:","Control whether to extra populate military buildings in the zone."],
						[false]
					]
				],{
					params ["_values","_args","_display"];
					_values params ['_zoneID','_zoneType','_militarise'];
					
					if (_zoneType == 'Current') then {
						_zoneType = (player getVariable format["ZMM_%1_Type",_zoneID]);
					};
					
					[[_zoneID,_zoneType,_militarise], {
						params ['_zoneID','_zoneType','_militarise'];
						[_zoneID, _zoneType, '', _militarise] spawn (missionNamespace getVariable "zmm_fnc_setupPopulate");
					}] remoteExec ['bis_fnc_call',0,false];
					
					_logMilitarise = 'Disabled';
					if (_militarise) then {
						_logMilitarise = 'Enabled';
					};
					
					systemchat format["[ LOG ] Populating Zone '%1', with Type '%2', with Militarise '%3'!",_zoneID,_zoneType,_logMilitarise];
					
					_display closeDisplay 1;
				},{
					params ["_values","_args","_display"];
					_display closeDisplay 2;
				},[]] call MAZ_EZM_fnc_createDialog;
			};
		};
		
		LM_fnc_zoneEmplacement = {
			[] spawn {
				if(!(missionNamespace getVariable ["ZMM_Setup_Status", false])) exitWith {["In order to use this module please first complete the 'Initialization' procedure in the opened window!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_dynamicTasks;};
				private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
				
				_entity = player;
				[[_entity], {
					params ['_entity'];
					_markers = (missionNamespace getVariable ["ZMM_ZoneMarkers",[]]);
					_markerInfo = [];
					_markersAmount = (missionNamespace getVariable ["ZZM_zoneID",0]);
					_varTypes = ['Location','Name','Radius','Type','Patrols','Garrison','Roadblocks','Supports','QRFTime','QRFWaves','IEDs'];
					for "_x" from 1 to _markersAmount do {
						for "_y" from 0 to ((count _varTypes) - 1) do {
							_markerInfo append [[format["ZMM_%1_%2", _x, (_varTypes select _y)], (missionNamespace getVariable format["ZMM_%1_%2", _x, (_varTypes select _y)])]];
						};
					};
					[[_entity, _markerInfo, _markers, _markersAmount], {
						params ['_entity','_markerInfo','_markers','_markersAmount'];
						if (player == _entity) then {
							for "_x" from 0 to ((count _markerInfo) - 1) do {
								_entity setVariable [(_markerInfo#_x)#0, (_markerInfo#_x)#1];
							};
							_entity setVariable ["ZMM_ZoneMarkers", _markers];
							_entity setVariable ["ZZM_zoneID", _markersAmount];
						};
					}] remoteExec ['bis_fnc_call',0,false];	
				}] remoteExec ['bis_fnc_call',2,false];
				
				sleep 1;
				
				if((player getVariable ["ZZM_zoneID",0]) <= 0) exitWith {["In order to use this module you must first spawn a zone, using either the opened window or alternatively through use of the 'Populate World' module!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_zoneSpawn;};
				
				_zoneIDs = [];
				_zoneDescs = [];
				
				for "_x" from 1 to (player getVariable "ZZM_zoneID") do {
					_zoneType = (player getVariable format["ZMM_%1_Type",_x]);
					_zoneMarker = '';
					if ((_zoneType == "Airport")) then {
						_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#0)#2);
					} else {
						if ((_zoneType == "NameCityCapital")) then {
							_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#1)#2);
						} else {
							if ((_zoneType == "NameCity")) then {
								_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#2)#2);
							} else {
								if ((_zoneType == "NameVillage")) then {
									_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#3)#2);
								} else {
									if ((_zoneType == "NameLocal") || (_zoneType == "Ambient")) then {
										_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#4)#2);
									} else {
										if ((_zoneType == "Task")) then {
											_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#5)#2);
										} else {
											_zoneMarker = 'a3\3den\data\displays\display3den\panelright\submode_marker_icon_ca.paa';
										};
									};
								};
							};
						};
					};
					
					_zoneIDs append [format['%1', _x]];
					_zoneDescs append [[format["ID: %1, Name: %2, Type: %3",_x,(player getVariable [format["ZMM_%1_Name",_x],"No Name"]),_zoneType],"",_zoneMarker]];
				};
				
				["Zone Emplacement",[
					[
						"LIST",
						["Emplacement Type:","Choose the type of Emplacement to spawn."],
						[
							["Static","Support","Site"],
							[
								["Static","",""],
								["Support","",""],
								["Site","",""]
							],
							0,
							3
						]
					],
					[
						"LIST",
						["Zone:","Choose a Zone to spawn the emplacement in."],
						[
							_zoneIDs,
							_zoneDescs,
							0,
							10
						]
					],
					[
						"TOOLBOX",
						["Show Marker:","Control whether to show a marker indicating the position of the emplacement when spawned or spotted."],
						[true,["No Marker","Show Marker"]]
					],
					[
						"TOOLBOX",
						["Emplacement Position Control:","Control whether to spawn the emplacement on desired location or to let the zone decide."],
						[false,["Let Zone Decide","Force Emplacement Position"]]
					],
					[
						"VECTOR",
						["Force Emplacement Position:","Choose the position to spawn the emplacement if you choose 'Force Emplacement Position'."],
						[_pos,["X","Y","Z"],3]
					]
				],{
					params ["_values","_args","_display"];
					_values params ['_emplacementType','_zoneID','_zoneMarker','_emplacementControl','_emplacementPos'];
					
					if ((_emplacementControl) and (surfaceIsWater _emplacementPos)) then {
						["Please choose a Emplacement Spawn position which is not in water!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
					} else {
						[[_emplacementType,_zoneID,_zoneMarker,_emplacementControl,_emplacementPos], { 
							 params ['_emplacementType','_zoneID','_zoneMarker','_emplacementControl','_emplacementPos'];
							 
							 if (_emplacementControl) then {
								[_zoneID, _emplacementPos, _zoneMarker, _emplacementControl] call (missionNamespace getVariable format["zmm_fnc_area%1",_emplacementType]); 
							 } else {
								[_zoneID, [0,0,0], _zoneMarker, _emplacementControl] call (missionNamespace getVariable format["zmm_fnc_area%1",_emplacementType]); 
							 };
						}] remoteExec ['bis_fnc_call',2,false];
						
						if (_emplacementControl) then {
							systemchat format["[ LOG ] Spawning Emplacement type '%1' at position '%2', for Zone '%3', with Show Marker set to '%4'!",_emplacementType,_emplacementPos,_zoneID,_zoneMarker];
						} else {
							systemchat format["[ LOG ] Spawning Emplacement type '%1' at position choosen by Zone, for Zone '%2', with Show Marker set to '%3'!",_emplacementType,_zoneID,_zoneMarker];
						};
					
						_display closeDisplay 1;
					};
				},{
					params ["_values","_args","_display"];
					_display closeDisplay 2;
				},[]] call MAZ_EZM_fnc_createDialog;
			};
		};
		
		LM_fnc_zoneSupport = {
			[] spawn {
				if(!(missionNamespace getVariable ["ZMM_Setup_Status", false])) exitWith {["In order to use this module please first complete the 'Initialization' procedure in the opened window!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_dynamicTasks;};
				private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
				
				_entity = player;
				[[_entity], {
					params ['_entity'];
					_markers = (missionNamespace getVariable ["ZMM_ZoneMarkers",[]]);
					_markerInfo = [];
					_markersAmount = (missionNamespace getVariable ["ZZM_zoneID",0]);
					_varTypes = ['Location','Name','Radius','Type','Patrols','Garrison','Roadblocks','Supports','QRFTime','QRFWaves','IEDs'];
					for "_x" from 1 to _markersAmount do {
						for "_y" from 0 to ((count _varTypes) - 1) do {
							_markerInfo append [[format["ZMM_%1_%2", _x, (_varTypes select _y)], (missionNamespace getVariable format["ZMM_%1_%2", _x, (_varTypes select _y)])]];
						};
					};
					[[_entity, _markerInfo, _markers, _markersAmount], {
						params ['_entity','_markerInfo','_markers','_markersAmount'];
						if (player == _entity) then {
							for "_x" from 0 to ((count _markerInfo) - 1) do {
								_entity setVariable [(_markerInfo#_x)#0, (_markerInfo#_x)#1];
							};
							_entity setVariable ["ZMM_ZoneMarkers", _markers];
							_entity setVariable ["ZZM_zoneID", _markersAmount];
						};
					}] remoteExec ['bis_fnc_call',0,false];	
				}] remoteExec ['bis_fnc_call',2,false];
				
				sleep 1;
				
				if((player getVariable ["ZZM_zoneID",0]) <= 0) exitWith {["In order to use this module you must first spawn a zone, using either the opened window or alternatively through use of the 'Populate World' module!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_zoneSpawn;};
				
				_zoneIDs = [];
				_zoneDescs = [];
				
				for "_x" from 1 to (player getVariable "ZZM_zoneID") do {
					_zoneType = (player getVariable format["ZMM_%1_Type",_x]);
					_zoneMarker = '';
					if ((_zoneType == "Airport")) then {
						_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#0)#2);
					} else {
						if ((_zoneType == "NameCityCapital")) then {
							_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#1)#2);
						} else {
							if ((_zoneType == "NameCity")) then {
								_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#2)#2);
							} else {
								if ((_zoneType == "NameVillage")) then {
									_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#3)#2);
								} else {
									if ((_zoneType == "NameLocal") || (_zoneType == "Ambient")) then {
										_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#4)#2);
									} else {
										if ((_zoneType == "Task")) then {
											_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#5)#2);
										} else {
											_zoneMarker = 'a3\3den\data\displays\display3den\panelright\submode_marker_icon_ca.paa';
										};
									};
								};
							};
						};
					};
					
					_zoneIDs append [format['%1', _x]];
					_zoneDescs append [[format["ID: %1, Name: %2, Type: %3",_x,(player getVariable [format["ZMM_%1_Name",_x],"No Name"]),_zoneType],"",_zoneMarker]];
				};
				
				["Zone Support",[
					[
						"LIST",
						["Zone:","Choose a Zone to spawn the Support for."],
						[
							_zoneIDs,
							_zoneDescs,
							0,
							10
						]
					],
					[
						"TOOLBOX",
						["Show Marker:","Control whether to show a marker indicating the position of the support when spawned or spotted."],
						[true,["No Marker","Show Marker"]]
					],
					[
						"TOOLBOX",
						["Support Position Control:","Control whether to spawn the support on desired location or to let the zone decide."],
						[false,["Let Zone Decide","Force Support Position"]]
					],
					[
						"VECTOR",
						["Force Support Position:","Choose the position to spawn the support if you choose 'Force Support Position'."],
						[_pos,["X","Y","Z"],3]
					]
				],{
					params ["_values","_args","_display"];
					_values params ['_zoneID','_zoneMarker','_supportControl','_supportPos'];
					
					if ((_supportControl) and (surfaceIsWater _supportPos)) then {
						["Please choose a Support Spawn position which is not in water!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
					} else {
						[[_zoneID,_zoneMarker,_supportControl,_supportPos], { 
							 params ['_zoneID','_zoneMarker','_supportControl','_supportPos'];
							 _zoneCenter = (missionNamespace getVariable [ format[ "ZMM_%1_Location", _zoneID], [0,0,0]]);
							 if (_supportControl) then {
								[_zoneID, _supportPos, _zoneMarker, _supportControl] spawn (missionNamespace getVariable "zmm_fnc_areaSupport"); 
							 } else {
								[_zoneID, _zoneCenter, _zoneMarker, _supportControl] spawn (missionNamespace getVariable "zmm_fnc_areaSupport"); 
							 };
						}] remoteExec ['bis_fnc_call',2,false];
						
						if (_supportControl) then {
							systemchat format["[ LOG ] Spawning Support for Zone '%1' at position '%2' with Show Marker set to '%3'!",_zoneID,_supportPos,_zoneMarker];
						} else {
							systemchat format["[ LOG ] Spawning Support for Zone '%1' at position choosen by Zone, with Show Marker set to '%2'!",_zoneID,_zoneMarker];
						};
					
						_display closeDisplay 1;
					};
				},{
					params ["_values","_args","_display"];
					_display closeDisplay 2;
				},[]] call MAZ_EZM_fnc_createDialog;
			};
		};
		
		LM_fnc_zoneRoadblock = {
			[] spawn {
				if(!(missionNamespace getVariable ["ZMM_Setup_Status", false])) exitWith {["In order to use this module please first complete the 'Initialization' procedure in the opened window!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_dynamicTasks;};
				private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
				
				_entity = player;
				[[_entity], {
					params ['_entity'];
					_markers = (missionNamespace getVariable ["ZMM_ZoneMarkers",[]]);
					_markerInfo = [];
					_markersAmount = (missionNamespace getVariable ["ZZM_zoneID",0]);
					_varTypes = ['Location','Name','Radius','Type','Patrols','Garrison','Roadblocks','Supports','QRFTime','QRFWaves','IEDs'];
					for "_x" from 1 to _markersAmount do {
						for "_y" from 0 to ((count _varTypes) - 1) do {
							_markerInfo append [[format["ZMM_%1_%2", _x, (_varTypes select _y)], (missionNamespace getVariable format["ZMM_%1_%2", _x, (_varTypes select _y)])]];
						};
					};
					[[_entity, _markerInfo, _markers, _markersAmount], {
						params ['_entity','_markerInfo','_markers','_markersAmount'];
						if (player == _entity) then {
							for "_x" from 0 to ((count _markerInfo) - 1) do {
								_entity setVariable [(_markerInfo#_x)#0, (_markerInfo#_x)#1];
							};
							_entity setVariable ["ZMM_ZoneMarkers", _markers];
							_entity setVariable ["ZZM_zoneID", _markersAmount];
						};
					}] remoteExec ['bis_fnc_call',0,false];	
				}] remoteExec ['bis_fnc_call',2,false];
				
				sleep 1;
				
				if((player getVariable ["ZZM_zoneID",0]) <= 0) exitWith {["In order to use this module you must first spawn a zone, using either the opened window or alternatively through use of the 'Populate World' module!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_zoneSpawn;};
				
				_zoneIDs = [];
				_zoneDescs = [];
				
				for "_x" from 1 to (player getVariable "ZZM_zoneID") do {
					_zoneType = (player getVariable format["ZMM_%1_Type",_x]);
					_zoneMarker = '';
					if ((_zoneType == "Airport")) then {
						_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#0)#2);
					} else {
						if ((_zoneType == "NameCityCapital")) then {
							_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#1)#2);
						} else {
							if ((_zoneType == "NameCity")) then {
								_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#2)#2);
							} else {
								if ((_zoneType == "NameVillage")) then {
									_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#3)#2);
								} else {
									if ((_zoneType == "NameLocal") || (_zoneType == "Ambient")) then {
										_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#4)#2);
									} else {
										if ((_zoneType == "Task")) then {
											_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#5)#2);
										} else {
											_zoneMarker = 'a3\3den\data\displays\display3den\panelright\submode_marker_icon_ca.paa';
										};
									};
								};
							};
						};
					};
					
					_zoneIDs append [format['%1', _x]];
					_zoneDescs append [[format["ID: %1, Name: %2, Type: %3",_x,(player getVariable [format["ZMM_%1_Name",_x],"No Name"]),_zoneType],"",_zoneMarker]];
				};
				
				["Zone Roadblock",[
					[
						"LIST",
						["Zone:","Choose a Zone to spawn the Roadblock around."],
						[
							_zoneIDs,
							_zoneDescs,
							0,
							10
						]
					]
				],{
					params ["_values","_args","_display"];
					_values params ['_zoneID'];
					
					[[_zoneID], { 
						params ['_zoneID'];
						[_zoneID] spawn (missionNamespace getVariable "zmm_fnc_areaRoadblock");
					}] remoteExec ['bis_fnc_call',2,false];
					
					systemchat format["[ LOG ] Spawning Roadblock for Zone '%1'!",_zoneID];
					
					_display closeDisplay 1;
				},{
					params ["_values","_args","_display"];
					_display closeDisplay 2;
				},[]] call MAZ_EZM_fnc_createDialog;
			};
		};
		
		LM_fnc_zoneGarrison = {
			[] spawn {
				if(!(missionNamespace getVariable ["ZMM_Setup_Status", false])) exitWith {["In order to use this module please first complete the 'Initialization' procedure in the opened window!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_dynamicTasks;};
				private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
				
				_entity = player;
				[[_entity], {
					params ['_entity'];
					_markers = (missionNamespace getVariable ["ZMM_ZoneMarkers",[]]);
					_markerInfo = [];
					_markersAmount = (missionNamespace getVariable ["ZZM_zoneID",0]);
					_varTypes = ['Location','Name','Radius','Type','Patrols','Garrison','Roadblocks','Supports','QRFTime','QRFWaves','IEDs'];
					for "_x" from 1 to _markersAmount do {
						for "_y" from 0 to ((count _varTypes) - 1) do {
							_markerInfo append [[format["ZMM_%1_%2", _x, (_varTypes select _y)], (missionNamespace getVariable format["ZMM_%1_%2", _x, (_varTypes select _y)])]];
						};
					};
					[[_entity, _markerInfo, _markers, _markersAmount], {
						params ['_entity','_markerInfo','_markers','_markersAmount'];
						if (player == _entity) then {
							for "_x" from 0 to ((count _markerInfo) - 1) do {
								_entity setVariable [(_markerInfo#_x)#0, (_markerInfo#_x)#1];
							};
							_entity setVariable ["ZMM_ZoneMarkers", _markers];
							_entity setVariable ["ZZM_zoneID", _markersAmount];
						};
					}] remoteExec ['bis_fnc_call',0,false];	
				}] remoteExec ['bis_fnc_call',2,false];
				
				sleep 1;
				
				if((player getVariable ["ZZM_zoneID",0]) <= 0) exitWith {["In order to use this module you must first spawn a zone, using either the opened window or alternatively through use of the 'Populate World' module!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_zoneSpawn;};
				
				_zoneIDs = [];
				_zoneDescs = [];
				
				for "_x" from 1 to (player getVariable "ZZM_zoneID") do {
					_zoneType = (player getVariable format["ZMM_%1_Type",_x]);
					_zoneMarker = '';
					if ((_zoneType == "Airport")) then {
						_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#0)#2);
					} else {
						if ((_zoneType == "NameCityCapital")) then {
							_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#1)#2);
						} else {
							if ((_zoneType == "NameCity")) then {
								_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#2)#2);
							} else {
								if ((_zoneType == "NameVillage")) then {
									_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#3)#2);
								} else {
									if ((_zoneType == "NameLocal") || (_zoneType == "Ambient")) then {
										_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#4)#2);
									} else {
										if ((_zoneType == "Task")) then {
											_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#5)#2);
										} else {
											_zoneMarker = 'a3\3den\data\displays\display3den\panelright\submode_marker_icon_ca.paa';
										};
									};
								};
							};
						};
					};
					
					_zoneIDs append [format['%1', _x]];
					_zoneDescs append [[format["ID: %1, Name: %2, Type: %3",_x,(player getVariable [format["ZMM_%1_Name",_x],"No Name"]),_zoneType],"",_zoneMarker]];
				};
				
				["Zone Roadblock",[
					[
						"LIST",
						["Zone:","Choose a Zone to Garrison with units."],
						[
							_zoneIDs,
							_zoneDescs,
							0,
							10
						]
					],
					[
						"TOOLBOX",
						["Garrison Amount Control:","Control whether to automatically garrison or to provide a specific amount of units."],
						[false,["Let Zone Decide","Force Amount"]]
					],
					[
						"SLIDER",
						["Force Unit Amount:","Choose an amount of units to spawn if you choose to force the amount."],
						[1,10,1]
					],
					[
						"SLIDER",
						["Force Position Amount:","Choose an amount of positions to spawn the amount of units if you choose to force the amount"],
						[1,20,1]
					]
				],{
					params ["_values","_args","_display"];
					_values params ['_zoneID','_garrisonControl','_garrisonUnits','_garrisonPositions'];
					_garrisonUnits = round _garrisonUnits;
					_garrisonPositions = round _garrisonPositions;
					[[_zoneID,_garrisonControl,_garrisonUnits,_garrisonPositions], { 
						params ['_zoneID','_garrisonControl','_garrisonUnits','_garrisonPositions'];
						if (_garrisonControl) then {
							[_zoneID, _garrisonUnits, _garrisonPositions] spawn (missionNamespace getVariable "zmm_fnc_areaGarrison");
						} else {
							[_zoneID] spawn (missionNamespace getVariable "zmm_fnc_areaGarrison");
						};
					}] remoteExec ['bis_fnc_call',2,false];
					if (_garrisonControl) then {
						systemchat format["[ LOG ] Spawning Garrison for Zone '%1', with '%2' Units, over '%3' Positions!",_zoneID,_garrisonUnits,_garrisonPositions];
					} else {
						systemchat format["[ LOG ] Spawning Garrison for Zone '%1'!",_zoneID];
					};
					
					_display closeDisplay 1;
				},{
					params ["_values","_args","_display"];
					_display closeDisplay 2;
				},[]] call MAZ_EZM_fnc_createDialog;
			};
		};
		
		LM_fnc_zoneMilitarise = {
			[] spawn {
				if(!(missionNamespace getVariable ["ZMM_Setup_Status", false])) exitWith {["In order to use this module please first complete the 'Initialization' procedure in the opened window!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_dynamicTasks;};
				private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
				
				_entity = player;
				[[_entity], {
					params ['_entity'];
					_markers = (missionNamespace getVariable ["ZMM_ZoneMarkers",[]]);
					_markerInfo = [];
					_markersAmount = (missionNamespace getVariable ["ZZM_zoneID",0]);
					_varTypes = ['Location','Name','Radius','Type','Patrols','Garrison','Roadblocks','Supports','QRFTime','QRFWaves','IEDs'];
					for "_x" from 1 to _markersAmount do {
						for "_y" from 0 to ((count _varTypes) - 1) do {
							_markerInfo append [[format["ZMM_%1_%2", _x, (_varTypes select _y)], (missionNamespace getVariable format["ZMM_%1_%2", _x, (_varTypes select _y)])]];
						};
					};
					[[_entity, _markerInfo, _markers, _markersAmount], {
						params ['_entity','_markerInfo','_markers','_markersAmount'];
						if (player == _entity) then {
							for "_x" from 0 to ((count _markerInfo) - 1) do {
								_entity setVariable [(_markerInfo#_x)#0, (_markerInfo#_x)#1];
							};
							_entity setVariable ["ZMM_ZoneMarkers", _markers];
							_entity setVariable ["ZZM_zoneID", _markersAmount];
						};
					}] remoteExec ['bis_fnc_call',0,false];	
				}] remoteExec ['bis_fnc_call',2,false];
				
				sleep 1;
				
				if((player getVariable ["ZZM_zoneID",0]) <= 0) exitWith {["In order to use this module you must first spawn a zone, using either the opened window or alternatively through use of the 'Populate World' module!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_zoneSpawn;};
				
				_zoneIDs = [];
				_zoneDescs = [];
				
				for "_x" from 1 to (player getVariable "ZZM_zoneID") do {
					_zoneType = (player getVariable format["ZMM_%1_Type",_x]);
					_zoneMarker = '';
					if ((_zoneType == "Airport")) then {
						_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#0)#2);
					} else {
						if ((_zoneType == "NameCityCapital")) then {
							_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#1)#2);
						} else {
							if ((_zoneType == "NameCity")) then {
								_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#2)#2);
							} else {
								if ((_zoneType == "NameVillage")) then {
									_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#3)#2);
								} else {
									if ((_zoneType == "NameLocal") || (_zoneType == "Ambient")) then {
										_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#4)#2);
									} else {
										if ((_zoneType == "Task")) then {
											_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#5)#2);
										} else {
											_zoneMarker = 'a3\3den\data\displays\display3den\panelright\submode_marker_icon_ca.paa';
										};
									};
								};
							};
						};
					};
					
					_zoneIDs append [format['%1', _x]];
					_zoneDescs append [[format["ID: %1, Name: %2, Type: %3",_x,(player getVariable [format["ZMM_%1_Name",_x],"No Name"]),_zoneType],"",_zoneMarker]];
				};
				
				["Zone Militarise",[
					[
						"LIST",
						["Zone:","Choose a Zone to Garrison Military Building with units."],
						[
							_zoneIDs,
							_zoneDescs,
							0,
							10
						]
					]
				],{
					params ["_values","_args","_display"];
					_values params ['_zoneID'];
					
					[[_zoneID], { 
						params ['_zoneID'];
						[_zoneID] spawn (missionNamespace getVariable "zmm_fnc_areaMilitarise");
					}] remoteExec ['bis_fnc_call',2,false];
					
					systemchat format["[ LOG ] Spawning Military Garrisons for Zone '%1'!",_zoneID];
					
					_display closeDisplay 1;
				},{
					params ["_values","_args","_display"];
					_display closeDisplay 2;
				},[]] call MAZ_EZM_fnc_createDialog;
			};
		};
		
		LM_fnc_zonePatrols = {
			[] spawn {
				if(!(missionNamespace getVariable ["ZMM_Setup_Status", false])) exitWith {["In order to use this module please first complete the 'Initialization' procedure in the opened window!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_dynamicTasks;};
				
				_entity = player;
				[[_entity], {
					params ['_entity'];
					_markers = (missionNamespace getVariable ["ZMM_ZoneMarkers",[]]);
					_markerInfo = [];
					_markersAmount = (missionNamespace getVariable ["ZZM_zoneID",0]);
					_varTypes = ['Location','Name','Radius','Type','Patrols','Garrison','Roadblocks','Supports','QRFTime','QRFWaves','IEDs'];
					for "_x" from 1 to _markersAmount do {
						for "_y" from 0 to ((count _varTypes) - 1) do {
							_markerInfo append [[format["ZMM_%1_%2", _x, (_varTypes select _y)], (missionNamespace getVariable format["ZMM_%1_%2", _x, (_varTypes select _y)])]];
						};
					};
					[[_entity, _markerInfo, _markers, _markersAmount], {
						params ['_entity','_markerInfo','_markers','_markersAmount'];
						if (player == _entity) then {
							for "_x" from 0 to ((count _markerInfo) - 1) do {
								_entity setVariable [(_markerInfo#_x)#0, (_markerInfo#_x)#1];
							};
							_entity setVariable ["ZMM_ZoneMarkers", _markers];
							_entity setVariable ["ZZM_zoneID", _markersAmount];
						};
					}] remoteExec ['bis_fnc_call',0,false];	
				}] remoteExec ['bis_fnc_call',2,false];
				
				sleep 1;
				
				if((player getVariable ["ZZM_zoneID",0]) <= 0) exitWith {["In order to use this module you must first spawn a zone, using either the opened window or alternatively through use of the 'Populate World' module!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_zoneSpawn;};
				
				_zoneIDs = [];
				_zoneDescs = [];
				
				for "_x" from 1 to (player getVariable "ZZM_zoneID") do {
					_zoneType = (player getVariable format["ZMM_%1_Type",_x]);
					_zoneMarker = '';
					if ((_zoneType == "Airport")) then {
						_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#0)#2);
					} else {
						if ((_zoneType == "NameCityCapital")) then {
							_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#1)#2);
						} else {
							if ((_zoneType == "NameCity")) then {
								_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#2)#2);
							} else {
								if ((_zoneType == "NameVillage")) then {
									_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#3)#2);
								} else {
									if ((_zoneType == "NameLocal") || (_zoneType == "Ambient")) then {
										_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#4)#2);
									} else {
										if ((_zoneType == "Task")) then {
											_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#5)#2);
										} else {
											_zoneMarker = 'a3\3den\data\displays\display3den\panelright\submode_marker_icon_ca.paa';
										};
									};
								};
							};
						};
					};
					
					_zoneIDs append [format['%1', _x]];
					_zoneDescs append [[format["ID: %1, Name: %2, Type: %3",_x,(player getVariable [format["ZMM_%1_Name",_x],"No Name"]),_zoneType],"",_zoneMarker]];
				};
				
				_zoneTypes = ['Current'];
				_zoneTypeDescs = [["Current Zone Type","","a3\3den\data\displays\display3den\panelright\submode_marker_icon_ca.paa"]];
				
				_zoneTypes append (player getVariable "ZMM_ZoneTypes_IDs");
				_zoneTypeDescs append (player getVariable "ZMM_ZoneTypes_Desc");
				
				["Zone Populate",[
					[
						"LIST",
						["Zone:","Choose a Zone to spawn the Patrols in."],
						[
							_zoneIDs,
							_zoneDescs,
							0,
							10
						]
					],
					[
						"LIST",
						["Zone Type:","Choose a Zone type to dictate the type of patrols to be spawned."],
						[
							_zoneTypes,
							_zoneTypeDescs,
							0,
							(count _zoneTypes)
						]
					]
				],{
					params ["_values","_args","_display"];
					_values params ['_zoneID','_zoneType'];
					
					if (_zoneType == 'Current') then {
						_zoneType = (player getVariable format["ZMM_%1_Type",_zoneID]);
					};
					
					[[_zoneID,_zoneType], {
						params ['_zoneID','_zoneType'];
						[_zoneID, _zoneType] call (missionNamespace getVariable "zmm_fnc_areaPatrols");
					}] remoteExec ['bis_fnc_call',0,false];
					
					if (_zoneType == 'Current') then {
						systemchat format["[ LOG ] Spawning Patrols of Type '%1' for Zone '%2'!",_zoneType,_zoneID];
					} else {
						systemchat format["[ LOG ] Spawning Patrols for Zone '%1' using said Zone's type!",_zoneID];
					};
					
					_display closeDisplay 1;
				},{
					params ["_values","_args","_display"];
					_display closeDisplay 2;
				},[]] call MAZ_EZM_fnc_createDialog;
			};
		};
		
		LM_fnc_zoneQRF = {
			[] spawn {
				if(!(missionNamespace getVariable ["ZMM_Setup_Status", false])) exitWith {["In order to use this module please first complete the 'Initialization' procedure in the opened window!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_dynamicTasks;};
				
				_entity = player;
				[[_entity], {
					params ['_entity'];
					_markers = (missionNamespace getVariable ["ZMM_ZoneMarkers",[]]);
					_markerInfo = [];
					_markersAmount = (missionNamespace getVariable ["ZZM_zoneID",0]);
					_varTypes = ['Location','Name','Radius','Type','Patrols','Garrison','Roadblocks','Supports','QRFTime','QRFWaves','IEDs'];
					for "_x" from 1 to _markersAmount do {
						for "_y" from 0 to ((count _varTypes) - 1) do {
							_markerInfo append [[format["ZMM_%1_%2", _x, (_varTypes select _y)], (missionNamespace getVariable format["ZMM_%1_%2", _x, (_varTypes select _y)])]];
						};
					};
					[[_entity, _markerInfo, _markers, _markersAmount], {
						params ['_entity','_markerInfo','_markers','_markersAmount'];
						if (player == _entity) then {
							for "_x" from 0 to ((count _markerInfo) - 1) do {
								_entity setVariable [(_markerInfo#_x)#0, (_markerInfo#_x)#1];
							};
							_entity setVariable ["ZMM_ZoneMarkers", _markers];
							_entity setVariable ["ZZM_zoneID", _markersAmount];
						};
					}] remoteExec ['bis_fnc_call',0,false];	
				}] remoteExec ['bis_fnc_call',2,false];
				
				sleep 1;
				
				if((player getVariable ["ZZM_zoneID",0]) <= 0) exitWith {["In order to use this module you must first spawn a zone, using either the opened window or alternatively through use of the 'Populate World' module!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_zoneSpawn;};
				
				_zoneIDs = [];
				_zoneDescs = [];
				
				for "_x" from 1 to (player getVariable "ZZM_zoneID") do {
					_zoneType = (player getVariable format["ZMM_%1_Type",_x]);
					_zoneMarker = '';
					if ((_zoneType == "Airport")) then {
						_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#0)#2);
					} else {
						if ((_zoneType == "NameCityCapital")) then {
							_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#1)#2);
						} else {
							if ((_zoneType == "NameCity")) then {
								_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#2)#2);
							} else {
								if ((_zoneType == "NameVillage")) then {
									_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#3)#2);
								} else {
									if ((_zoneType == "NameLocal") || (_zoneType == "Ambient")) then {
										_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#4)#2);
									} else {
										if ((_zoneType == "Task")) then {
											_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#5)#2);
										} else {
											_zoneMarker = 'a3\3den\data\displays\display3den\panelright\submode_marker_icon_ca.paa';
										};
									};
								};
							};
						};
					};
					
					_zoneIDs append [format['%1', _x]];
					_zoneDescs append [[format["ID: %1, Name: %2, Type: %3",_x,(player getVariable [format["ZMM_%1_Name",_x],"No Name"]),_zoneType],"",_zoneMarker]];
				};
				
				["Zone QRF",[
					[
						"LIST",
						["Zone:","Choose a Zone to spawn the Quick Reaction Forces for."],
						[
							_zoneIDs,
							_zoneDescs,
							0,
							10
						]
					],
					[
						"TOOLBOX",
						["Force Spawn Control:","Control whether to spawn the QRFs now or to dynamically wait for nearby players."],
						[false,["Wait For Players","Spawn Now"]]
					],
					[
						"SLIDER",
						["Delay Between Waves (Minutes):","Choose an amount of time to wait between spawning waves of QRFs."],
						[1,20,2]
					],
					[
						"SLIDER",
						["Amount of Waves:","Choose an amount of waves to spawn QRFs."],
						[1,20,3]
					],
					[
						"LIST",
						["QRF Type:","Choose the type of Quick Reaction Force to spawn."],
						[
							[[-1,"Vehicles/Transport Helos/CAS Helos"],[1,"Light Vehicles"],[2,"Light/Medium Vehicles"],[3,"Medium/Heavy Vehicles"],[4,"Transport Helos/CAS Helos/CAS Planes/Paratroopers"],[5,"Squads/Teams Infantry"],[6,"Transport Helos/CAS Helos"],[7,"Infantry/CAS Planes"]],
							[
								["Vehicles/Transport Helos/CAS Helos","",""],
								["Light Vehicles","",""],
								["Light/Medium Vehicles","",""],
								["Medium/Heavy Vehicles","",""],
								["Transport Helos/CAS Helos/CAS Planes/Paratroopers","",""],
								["Squads/Teams Infantry","",""],
								["Transport Helos/CAS Helos","",""],
								["Infantry/CAS Planes","",""]
							],
							0,
							7
						]
					],
					[
						"LIST",
						["Difficulty:","Choose the difficulty of the Quick Reaction Force to spawn."],
						[
							[[0,"Recruit"],[2,"Regular"],[-1,"Veteran"]],
							[
								["Recruit","",""],
								["Regular","",""],
								["Veteran","",""]
							],
							0,
							3
						]
					]
				],{
					params ["_values","_args","_display"];
					_values params ['_zoneID','_spawnControl','_waveDelay','_waveAmount','_qrfType','_qrfDiff'];
					[[_zoneID,_spawnControl,(_waveDelay*60),_waveAmount,_qrfType#0,_qrfDiff#0], { 
						params ['_zoneID','_spawnControl','_waveDelay','_waveAmount','_qrfType','_qrfDiff'];
						[_zoneID,_spawnControl,_waveDelay,_waveAmount,_qrfType,_qrfDiff] spawn (missionNamespace getVariable "zmm_fnc_areaQRF");
					}] remoteExec ['bis_fnc_call',2,false];
					
					systemchat format["[ LOG ] Spawning QRF for Zone '%1', with Force Spawn '%2', delay between waves '%3', amount of waves '%4', QRF type '%5', and QRF difficulty '%6'!",_zoneID,_spawnControl,_waveDelay,_waveAmount,_qrfType#1,_qrfDiff#1];
					
					_display closeDisplay 1;
				},{
					params ["_values","_args","_display"];
					_display closeDisplay 2;
				},[]] call MAZ_EZM_fnc_createDialog;
			};
		};
		
		LM_fnc_zoneIED = {
			[] spawn {
				if(!(missionNamespace getVariable ["ZMM_Setup_Status", false])) exitWith {["In order to use this module please first complete the 'Initialization' procedure in the opened window!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_dynamicTasks;};
				
				_entity = player;
				[[_entity], {
					params ['_entity'];
					_markers = (missionNamespace getVariable ["ZMM_ZoneMarkers",[]]);
					_markerInfo = [];
					_markersAmount = (missionNamespace getVariable ["ZZM_zoneID",0]);
					_varTypes = ['Location','Name','Radius','Type','Patrols','Garrison','Roadblocks','Supports','QRFTime','QRFWaves','IEDs'];
					for "_x" from 1 to _markersAmount do {
						for "_y" from 0 to ((count _varTypes) - 1) do {
							_markerInfo append [[format["ZMM_%1_%2", _x, (_varTypes select _y)], (missionNamespace getVariable format["ZMM_%1_%2", _x, (_varTypes select _y)])]];
						};
					};
					[[_entity, _markerInfo, _markers, _markersAmount], {
						params ['_entity','_markerInfo','_markers','_markersAmount'];
						if (player == _entity) then {
							for "_x" from 0 to ((count _markerInfo) - 1) do {
								_entity setVariable [(_markerInfo#_x)#0, (_markerInfo#_x)#1];
							};
							_entity setVariable ["ZMM_ZoneMarkers", _markers];
							_entity setVariable ["ZZM_zoneID", _markersAmount];
						};
					}] remoteExec ['bis_fnc_call',0,false];	
				}] remoteExec ['bis_fnc_call',2,false];
				
				sleep 1;
				
				if((player getVariable ["ZZM_zoneID",0]) <= 0) exitWith {["In order to use this module you must first spawn a zone, using either the opened window or alternatively through use of the 'Populate World' module!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_zoneSpawn;};
				
				_zoneIDs = [];
				_zoneDescs = [];
				
				for "_x" from 1 to (player getVariable "ZZM_zoneID") do {
					_zoneType = (player getVariable format["ZMM_%1_Type",_x]);
					_zoneMarker = '';
					if ((_zoneType == "Airport")) then {
						_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#0)#2);
					} else {
						if ((_zoneType == "NameCityCapital")) then {
							_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#1)#2);
						} else {
							if ((_zoneType == "NameCity")) then {
								_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#2)#2);
							} else {
								if ((_zoneType == "NameVillage")) then {
									_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#3)#2);
								} else {
									if ((_zoneType == "NameLocal") || (_zoneType == "Ambient")) then {
										_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#4)#2);
									} else {
										if ((_zoneType == "Task")) then {
											_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#5)#2);
										} else {
											_zoneMarker = 'a3\3den\data\displays\display3den\panelright\submode_marker_icon_ca.paa';
										};
									};
								};
							};
						};
					};
					
					_zoneIDs append [format['%1', _x]];
					_zoneDescs append [[format["ID: %1, Name: %2, Type: %3",_x,(player getVariable [format["ZMM_%1_Name",_x],"No Name"]),_zoneType],"",_zoneMarker]];
				};
				
				["Zone IEDs",[
					[
						"LIST",
						["Zone:","Choose a Zone to spawn the IEDs in."],
						[
							_zoneIDs,
							_zoneDescs,
							0,
							10
						]
					],
					[
						"SLIDER",
						["IEDs Multiplier:","Choose a multiplier to incease the amount of IEDs to spawn in the Zone."],
						[1,10,1]
					],
					[
						"SLIDER",
						["Placement Radius (From Centre):","Choose a radius to place the IEDs out from the centre of the Zone."],
						[5,2500,300]
					]
				],{
					params ["_values","_args","_display"];
					_values params ['_zoneID','_iedAmount','_iedRadius'];
					_zonePos = (player getVariable format["ZMM_%1_Location",_zoneID]);
					[[_zoneID,_zonePos,_iedAmount,_iedRadius], { 
						params ['_zoneID','_zonePos','_iedAmount','_iedRadius'];
						[_zoneID,_zonePos,_iedAmount,_iedRadius] spawn (missionNamespace getVariable "zmm_fnc_areaIED");
					}] remoteExec ['bis_fnc_call',2,false];
					
					systemchat format["[ LOG ] Spawning '%1' IEDs for Zone '%2' in radius of '%3'm out from Zone centre of '%4'!",_iedAmount,_zoneID,_iedRadius,_zonePos];
					
					_display closeDisplay 1;
				},{
					params ["_values","_args","_display"];
					_display closeDisplay 2;
				},[]] call MAZ_EZM_fnc_createDialog;
			};
		};
		
		LM_fnc_zonePara = {
			if(!(missionNamespace getVariable ["ZMM_Setup_Status", false])) exitWith {["In order to use this module please first complete the 'Initialization' procedure in the opened window!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_dynamicTasks;};
			private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
			
			["Zone Paratroopers",[
				[
					"VECTOR",
					["Drop Position:","Choose the position for the paratroopers to drop."],
					[_pos,["X","Y","Z"],3]
				],
				[
					"LIST",
					["Paratroopers Side:","Choose the side of the Paratroopers."],
					[
						[[WEST,'BLUFOR'],[EAST,'OPFOR'],[INDEPENDENT,'Independent']],
						[
							["BLUFOR","",""],
							["OPFOR","",""],
							["INDEPENDENT","",""]
						],
						0,
						3
					]
				]
			],{
				params ["_values","_args","_display"];
				_values params ['_dropPosition','_paraSide'];
				[[_dropPosition,_paraSide#0], { 
					params ['_dropPosition','_paraSide'];
					[_dropPosition,_paraSide] spawn (missionNamespace getVariable "zmm_fnc_spawnPara");
				}] remoteExec ['bis_fnc_call',2,false];
				
				systemchat format["[ LOG ] Spawning Paratroopers of side '%1' to drop at position '%2'!",_paraSide#1,_dropPosition];
				
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_zoneTask = {
			[] spawn {
				if(!(missionNamespace getVariable ["ZMM_Setup_Status", false])) exitWith {["In order to use this module please first complete the 'Initialization' procedure in the opened window!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_dynamicTasks;};
				
				_entity = player;
				[[_entity], {
					params ['_entity'];
					_markers = (missionNamespace getVariable ["ZMM_ZoneMarkers",[]]);
					_markerInfo = [];
					_markersAmount = (missionNamespace getVariable ["ZZM_zoneID",0]);
					_varTypes = ['Location','Name','Radius','Type','Patrols','Garrison','Roadblocks','Supports','QRFTime','QRFWaves','IEDs'];
					for "_x" from 1 to _markersAmount do {
						for "_y" from 0 to ((count _varTypes) - 1) do {
							_markerInfo append [[format["ZMM_%1_%2", _x, (_varTypes select _y)], (missionNamespace getVariable format["ZMM_%1_%2", _x, (_varTypes select _y)])]];
						};
					};
					[[_entity, _markerInfo, _markers, _markersAmount], {
						params ['_entity','_markerInfo','_markers','_markersAmount'];
						if (player == _entity) then {
							for "_x" from 0 to ((count _markerInfo) - 1) do {
								_entity setVariable [(_markerInfo#_x)#0, (_markerInfo#_x)#1];
							};
							_entity setVariable ["ZMM_ZoneMarkers", _markers];
							_entity setVariable ["ZZM_zoneID", _markersAmount];
						};
					}] remoteExec ['bis_fnc_call',0,false];	
				}] remoteExec ['bis_fnc_call',2,false];
				
				sleep 1;
				
				if((player getVariable ["ZZM_zoneID",0]) <= 0) exitWith {["In order to use this module you must first spawn a zone, using either the opened window or alternatively through use of the 'Populate World' module!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_zoneSpawn;};
				
				_zoneIDs = [];
				_zoneDescs = [];
				
				for "_x" from 1 to (player getVariable "ZZM_zoneID") do {
					_zoneType = (player getVariable format["ZMM_%1_Type",_x]);
					_zoneMarker = '';
					if ((_zoneType == "Airport")) then {
						_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#0)#2);
					} else {
						if ((_zoneType == "NameCityCapital")) then {
							_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#1)#2);
						} else {
							if ((_zoneType == "NameCity")) then {
								_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#2)#2);
							} else {
								if ((_zoneType == "NameVillage")) then {
									_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#3)#2);
								} else {
									if ((_zoneType == "NameLocal") || (_zoneType == "Ambient")) then {
										_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#4)#2);
									} else {
										if ((_zoneType == "Task")) then {
											_zoneMarker = (((player getVariable "ZMM_ZoneTypes_Desc")#5)#2);
										} else {
											_zoneMarker = 'a3\3den\data\displays\display3den\panelright\submode_marker_icon_ca.paa';
										};
									};
								};
							};
						};
					};
					
					_zoneIDs append [format['%1', _x]];
					_zoneDescs append [[format["ID: %1, Name: %2, Type: %3",_x,(player getVariable [format["ZMM_%1_Name",_x],"No Name"]),_zoneType],"",_zoneMarker]];
				};
				
				_taskIDs = [""];
				_taskDescs = [["Random Task","Choose a random task from any Category.","a3\3den\data\displays\display3den\panelright\submode_marker_icon_ca.paa"]];
				ZMM_tasks sort true;
				_currentCategory = "";
				for "_x" from 0 to ((count ZMM_Tasks) - 1) do {
					_task = (ZMM_Tasks select _x);
					_taskCategory = _task#0;
					_taskName = _task#1;
					_taskDesc = _task#2;
					_taskIcon = _task#3;
					
					if (!(_taskCategory == _currentCategory)) then {
						_currentCategory = _taskCategory;
						_taskIDs append [_taskCategory];
						_taskDescs append [[(["Task Category:",_taskCategory] joinString " "),"Choose a random task from this Category.",_taskIcon]];
					};
					_taskIDs append [_taskName];
					_taskDescs append [[(["    -",_taskName] joinString " "),_taskDesc,_taskIcon]];
				};
				
				["Zone Task",[
					[
						"LIST",
						"NOTE: Zones are restricted to one active task at a time!",
						[
							[""],
							[
								["","",""]
							],
							0,
							0
						]
					],
					[
						"LIST",
						["Zone:","Choose a Zone to spawn the Task in."],
						[
							_zoneIDs,
							_zoneDescs,
							0,
							10
						]
					],
					[
						"LIST",
						"NOTE: Inaedquate terrain of a Zone may result in another random task!",
						[
							[""],
							[
								["","",""]
							],
							0,
							0
						]
					],
					[
						"LIST",
						["Task:","Choose a specific task or task category to spawn."],
						[
							_taskIDs,
							_taskDescs,
							0,
							20
						]
					],
					[
						"SLIDER",
						["Task Objs Count:","Choose the number of objectives for the task to spawn."],
						[1,15,3]
					]
				],{
					params ["_values","_args","_display"];
					_values params ['_note1','_zone','_note2','_task','_taskObjs'];
					_taskObjs = round _taskObjs;
					[[_zone,_task,_taskObjs], { 
						params ['_zone','_task','_taskObjs'];
						missionNamespace setVariable ["ZZM_ObjectiveCount", _taskObjs];
						[_zone,_task] call (missionNamespace getVariable "zmm_fnc_setupTask");
					}] remoteExec ['bis_fnc_call',2];
					
					if (_task == "") then {
						systemchat format["[ LOG ] Spawning a random Task of any category in Zone '%1' with '%2' objs!",_zone,_taskObjs];
					} else {
						systemchat format["[ LOG ] Spawning Task '%1' with '%3' objs in Zone '%2'!",_task,_zone,_taskObjs];
					};
					
					_display closeDisplay 1;
				},{
					params ["_values","_args","_display"];
					_display closeDisplay 2;
				},[]] call MAZ_EZM_fnc_createDialog;
			};
		};
		
		LM_fnc_taskStatus = {
			[] spawn {
				if(!(missionNamespace getVariable ["ZMM_Setup_Status", false])) exitWith {["In order to use this module please first complete the 'Initialization' procedure in the opened window!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_dynamicTasks;};
				
				_entity = player;
				[[_entity], {
					params ['_entity'];
					_markers = (missionNamespace getVariable ["ZMM_ZoneMarkers",[]]);
					_markerInfo = [];
					_markersAmount = (missionNamespace getVariable ["ZZM_zoneID",0]);
					_varTypes = ['Location','Name','Radius','Type','Patrols','Garrison','Roadblocks','Supports','QRFTime','QRFWaves','IEDs'];
					for "_x" from 1 to _markersAmount do {
						for "_y" from 0 to ((count _varTypes) - 1) do {
							_markerInfo append [[format["ZMM_%1_%2", _x, (_varTypes select _y)], (missionNamespace getVariable format["ZMM_%1_%2", _x, (_varTypes select _y)])]];
						};
					};
					[[_entity, _markerInfo, _markers, _markersAmount], {
						params ['_entity','_markerInfo','_markers','_markersAmount'];
						if (player == _entity) then {
							for "_x" from 0 to ((count _markerInfo) - 1) do {
								_entity setVariable [(_markerInfo#_x)#0, (_markerInfo#_x)#1];
							};
							_entity setVariable ["ZMM_ZoneMarkers", _markers];
							_entity setVariable ["ZZM_zoneID", _markersAmount];
						};
					}] remoteExec ['bis_fnc_call',0,false];	
				}] remoteExec ['bis_fnc_call',2,false];
				
				sleep 1;
				
				if((player getVariable ["ZZM_zoneID",0]) <= 0) exitWith {["In order to use this module you must first spawn a zone, using either the opened window or alternatively through use of the 'Populate World' module!","addItemFailed"] call MAZ_EZM_fnc_systemMessage; [] call LM_fnc_zoneSpawn;};
				
				["Change Task Status",[
					[
						"LIST",
						"NOTE: Select a Task in the Tasks menu to see the ID listed like 'Mission (#X)'!",
						[
							[""],
							[
								["","",""]
							],
							0,
							0
						]
					],
					[
						"EDIT",
						["Zone Name:","Provide the name of the generated Task to modify."],
						[""]
					],
					[
						"LIST",
						["Task Status:","Choose a status to change the Task to."],
						[
							["AUTOASSIGNED","ASSIGNED","SUCCEEDED","FAILED","CANCELED"],
							[
								["AutoAssigned","",""],
								["Assigned","",""],
								["Succeeded","",""],
								["Failed","",""],
								["Canceled","",""]
							],
							2,
							5
						]
					],
					[
						"TOOLBOX",
						["Task Control:","Choose to keep or to delete the task."],
						[false,["Keep","Delete"]]
					],
					[
						"TOOLBOX",
						["Zone Control:","Choose if to set the zone to friendly if Task Status of SUCCEEDED choosen."],
						[false,["No Change","Friendly"]]
					]
				],{
					params ["_values","_args","_display"];
					_values params ['_note1','_taskID','_taskStatus','_taskControl','_zoneControl'];
					_taskName = format["ZMM_%1_TSK",_taskID];
					if ([_taskName] call BIS_fnc_taskExists) then {
						[[_taskName,_taskStatus,_taskID,_taskControl,_zoneControl], { 
							params ['_taskName','_taskStatus','_taskID','_taskControl','_zoneControl'];
							[_taskName,_taskStatus] call BIS_fnc_taskSetState;
							
							if (_taskStatus == "SUCCEEDED") then {
								missionNamespace setVariable ['ZMM_DONE', true, true];
								if (_zoneControl) then {
									{ _x setMarkerColor format['Color%1',(missionNamespace getVariable ["ZMM_playerside",WEST])] } forEach [format['MKR_%1_LOC',_taskID],format['MKR_%1_MIN',_taskID]];
								};
							};
							if (_taskControl) then {
								[_taskName] call BIS_fnc_deleteTask;
							};
						}] remoteExec ['bis_fnc_call',2,false];
						
						systemchat format["[ LOG ] Setting Task '%1' to status '%2', with removal set to '%3' and Zone Control set to '%4'!",_taskName,_taskStatus,_taskControl,_zoneControl];
						_display closeDisplay 1;
					} else {
						["The Task you provided does not exist, check again!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
					};
				},{
					params ["_values","_args","_display"];
					_display closeDisplay 2;
				},[]] call MAZ_EZM_fnc_createDialog;
			};
		};
		
		LM_fnc_killFeedModule = {
			{
				removeMissionEventHandler ['EntityKilled', (player getVariable ['LM_MEH_killFeed',-1])];
				_mehID = addMissionEventHandler ["EntityKilled", 
				{
					params ["_killed", "_killer", "_instigator"];
					if (isNull _instigator) then {_instigator = _killer};
					
					if ((_killed isKindOf "CAManBase") and (!((side _killed) == (side _killer)))) then {
						if ((_killer == player) || (vehicle _killer == vehicle player)) then {
							_killed_Name = "";
							_kill_HUD = "";
							_killed_Color = "#99D5FF";

							if (!(vehicle _killed == _killed) and !(alive (vehicle _killed))) then {
								_killed_Name = getText (configFile >> "CfgVehicles" >> format["%1",typeOf (vehicle _killed)] >> "Displayname");
							} else {
								if (!(isplayer _killed)) then {
									_killed_Name = getText (configFile >> "CfgVehicles" >> format["%1",typeOf _killed] >> "Displayname");
								} else {
									_killed_Name = name _killed;
								};
							};
							
							private _distance = _killer distance2D _killed; 	
							private _weapon = getText(configFile >> "CfgWeapons" >> currentWeapon (vehicle _killer) >> "displayname");
							_killed_Color = (side group _killed call BIS_fnc_sideColor) call BIS_fnc_colorRGBtoHTML;
							
							_weapon = currentWeapon _killer;
							_pictureweapon = gettext (configFile >> "cfgWeapons" >> _weapon >> "picture");
							if (_pictureweapon == "") then {
								_weapon = typeOf (vehicle _killer);
								_pictureweapon = (getText (configFile >> "cfgVehicles" >> _weapon >> "picture"));
							};
								
							_kill_info = format["[<t color='#FFD700'><img size='0.5' shadow='1' image='%1'/></t>] <t color='%2'>%3</t> %4 M",_pictureweapon,_killed_Color,_killed_Name,floor _distance];
							
							[ 
								"<t size='0.6' align='left' with  %4 >" + _kill_info + "</t>", 
								safeZoneXAbs,
								safeZoneY, 
								10, 
								0.5, 
								0, 
								7016 
							] spawn bis_fnc_dynamicText;
						};
					};
				}];
				player setVariable ['LM_MEH_killFeed',_mehID];
				titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/><t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Kill Feed</t> For Players Now Visible!</t>", "PLAIN DOWN", -1, false, true];
			} remoteExec ["bis_fnc_call",0,true];
			systemchat "[ LOG ] Kill Feed For Players Now Visible!";
		};
		
		LM_fnc_respawnSelection = {
			private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
			["Player/Vehicle Respawn",[
				[
					"SIDES",
					["Respawn Side:","Choose the faction the respawn will belong to."],
					side player
				],
				[
					"TOOLBOX",
					["Respawn Type:","Choose the type of respawn to create."],
					[false,["Player","Vehicle"]]
				]
			],{
				params ["_values","_pos","_display"];
				_values params ["_side","_type"];
				
				private ["_typeDebug"];
				if (_type) then {
					_type = format["ModuleVehicleRespawnPosition%1_F", _side];
					_typeDebug = 'Vehicle';
				} else {
					_type = format["ModuleRespawnPosition%1_F", _side];
					_typeDebug = 'Player';
				};
				
				_newRespawn = createAgent [_type, _pos, [], 0, 'CAN_COLLIDE']; 
				[_newRespawn, true, true] remoteExec ['BIS_fnc_moduleRespawnPosition']; 
				{ 
					[_x, [[_newRespawn], true]] remoteExec ['addCuratorEditableObjects']; 
				} forEach allCurators;
				
				systemchat format["[ LOG ] '%1' Respawn created for side '%2' at '%3'!", _typeDebug, _side, _pos];
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},_pos] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_fadeIntroModule = {
			["Fade-In Intro",[
				[
					"EDIT",
					["Mission Name:","Enter a cool title or just the mission name."],
					[""]
				],
				[
					"EDIT",
					["Command Name:","Enter the faction command name like 'NATO Euro Command'."],
					[""]
				],
				[
					"EDIT",
					["Version Number:","Enter iteration or version of the mission."],
					[""]
				],
				[
					"EDIT",
					["Quote:","Enter some cool words for the upcoming mission."],
					[""]
				],
				[
					"SLIDER",
					"Duration of Quote",
					[3,20,5]
				],
				[
					"LIST",
					["Ambient Muisc:","Choose a soundtrack to pair with the Fade-In & Out"],
					[
						["LeadTrack01_F","LeadTrack01a_F","LeadTrack01b_F","LeadTrack01c_F","LeadTrack02_F","LeadTrack03_F","LeadTrack04_F","LeadTrack04a_F","LeadTrack05_F","LeadTrack06_F","AmbientTrack01_F","AmbientTrack01a_F","AmbientTrack01b_F","AmbientTrack03_F","AmbientTrack04a_F","AmbientTrack04_F","BackgroundTrack03_F","BackgroundTrack01_F","BackgroundTrack01a_F","BackgroundTrack02_F","Track01_Proteus","Track02_SolarPower","Track03_OnTheRoad","Track04_Underwater1","Track05_Underwater2","Track06_CarnHeli","Track07_ActionDark","Track08_Night_ambient","Track09_Night_percussions","Track10_StageB_action","Track11_StageB_stealth","Track12_StageC_action","Track13_StageC_negative","Track14_MainMenu","Track15_MainTheme","LeadTrack01_F_EPA","LeadTrack02_F_EPA","LeadTrack02a_F_EPA","LeadTrack02b_F_EPA","LeadTrack03_F_EPA","LeadTrack03a_F_EPA","EventTrack01_F_EPA","EventTrack01a_F_EPA","EventTrack02_F_EPA","EventTrack02a_F_EPA","EventTrack03_F_EPA","EventTrack03a_F_EPA","LeadTrack01_F_EPB","LeadTrack01a_F_EPB","LeadTrack02_F_EPB","LeadTrack02a_F_EPB","LeadTrack02b_F_EPB","LeadTrack03_F_EPB","LeadTrack03a_F_EPB","LeadTrack04_F_EPB","EventTrack01_F_EPB","EventTrack01a_F_EPB","EventTrack02_F_EPB","EventTrack02a_F_EPB","EventTrack03_F_EPB","EventTrack04_F_EPB","EventTrack04a_F_EPB","EventTrack03a_F_EPB","AmbientTrack01_F_EPB","BackgroundTrack01_F_EPB","LeadTrack01_F_EPC","LeadTrack02_F_EPC","LeadTrack03_F_EPC","LeadTrack04_F_EPC","LeadTrack05_F_EPC","LeadTrack06_F_EPC","LeadTrack06b_F_EPC","EventTrack01_F_EPC","EventTrack02_F_EPC","EventTrack02b_F_EPC","EventTrack03_F_EPC","BackgroundTrack01_F_EPC","BackgroundTrack02_F_EPC","BackgroundTrack03_F_EPC","BackgroundTrack04_F_EPC","C_EA_RadioBroadcast1","C_EA_RadioBroadcast2","C_EA_RadioMusic1","C_EA_RadioMusic2","RadioAmbient1","RadioAmbient2","RadioAmbient3","RadioAmbient4","RadioAmbient5","RadioAmbient6","RadioAmbient7","RadioAmbient8","RadioAmbient9","RadioAmbient10","RadioAmbient11","RadioAmbient12","RadioAmbient13","RadioAmbient14","RadioAmbient15","RadioAmbient16","RadioAmbient17","RadioAmbient18","RadioAmbient19","RadioAmbient20","RadioAmbient21","RadioAmbient22","RadioAmbient23","RadioAmbient24","RadioAmbient25","RadioAmbient26","RadioAmbient27","RadioAmbient28","RadioAmbient29","RadioAmbient30","Fallout","Defcon","Wasteland","SkyNet","MAD","radio_music","LeadTrack01_F_Curator","EventTrack01_F_Curator","EventTrack02_F_Curator","EventTrack03_F_Curator","LeadTrack01_F_Bootcamp","LeadTrack01b_F_Bootcamp","LeadTrack02_F_Bootcamp","LeadTrack03_F_Bootcamp","LeadTrack01_F_Heli","LeadTrack01_F_Mark","LeadTrack02_F_Mark","LeadTrack03_F_Mark","LeadTrack01_F_EXP","LeadTrack01a_F_EXP","LeadTrack01b_F_EXP","LeadTrack01c_F_EXP","LeadTrack02_F_EXP","LeadTrack03_F_EXP","LeadTrack04_F_EXP","AmbientTrack01_F_EXP","AmbientTrack01a_F_EXP","AmbientTrack01b_F_EXP","AmbientTrack02_F_EXP","AmbientTrack02a_F_EXP","AmbientTrack02b_F_EXP","AmbientTrack02c_F_EXP","AmbientTrack02d_F_EXP","LeadTrack01_F_Jets","LeadTrack02_F_Jets","EventTrack01_F_Jets","LeadTrack01_F_Malden","LeadTrack02_F_Malden","LeadTrack01_F_Orange","AmbientTrack02_F_Orange","EventTrack01_F_Orange","EventTrack02_F_Orange","AmbientTrack01_F_Orange","LeadTrack01_F_Tacops","LeadTrack02_F_Tacops","LeadTrack03_F_Tacops","LeadTrack04_F_Tacops","AmbientTrack01a_F_Tacops","AmbientTrack01b_F_Tacops","AmbientTrack02a_F_Tacops","AmbientTrack02b_F_Tacops","AmbientTrack03a_F_Tacops","AmbientTrack03b_F_Tacops","AmbientTrack04a_F_Tacops","AmbientTrack04b_F_Tacops","EventTrack01a_F_Tacops","EventTrack01b_F_Tacops","EventTrack02a_F_Tacops","EventTrack02b_F_Tacops","EventTrack03a_F_Tacops","EventTrack03b_F_Tacops","MainTheme_F_Tank","LeadTrack01_F_Tank","LeadTrack02_F_Tank","LeadTrack03_F_Tank","LeadTrack04_F_Tank","LeadTrack05_F_Tank","LeadTrack06_F_Tank","AmbientTrack01_F_Tank","Music_Menu_Contact","Music_Theme_Contact","Music_Credits_Contact","Music_Probe_Discovered","Music_Arrival","Music_Roaming_Night","Music_Roaming_Night_02","Music_Roaming_Night_Fragment_01_20s","Music_Roaming_Night_Fragment_01_30s","Music_Roaming_Night_Fragment_01_60s","Music_Roaming_Night_Fragment_02_30s","Music_Roaming_Night_Fragment_02_60s","Music_Roaming_Night_Fragment_03_60s","Music_Roaming_Day","Music_Roaming_Day_02","Music_Intro_ThisIsWarA","Music_Intro_02_MissionStart","Music_Intro_03_MissionStart","Music_Intro_02_Emp_Tension_01","Music_Outro2_Ending","Music_Hostile_Drone_Close_01","Music_Failed_Contact","Music_Failed_Contact_02","Music_Battle_Alien","Music_Battle_Human","Music_Russian_Theme","Music_Battle_Human_Loop","Music_Battle_Alien_Loop_01","Music_Battle_Alien_Loop_02","Music_Battle_Alien_Loop_03","Music_Suspended_Loop_01","Music_Tension_Loop_01","Music_Freeroam_01_MissionStart","Music_Freeroam_02_MissionStart","Music_Freeroam_RootExtract","Music_FreeRoam_Battle_Alien_Loop_01","Music_FreeRoam_Battle_Alien_Loop_02","Music_FreeRoam_Battle_Alien_Loop_03","Music_FreeRoam_Suspended_Loop_01","Music_FreeRoam_Tension_Loop_01","Music_FreeRoam_Russian_Theme_Loop","Music_FreeRoam_Russian_Theme","Music_FreeRoam_Battle_Alien","Music_FreeRoam_Battle_Human","Music_FreeRoam_Battle_Human_Loop","Music_Freeroam_End","anomaly_07_05_v1","anomaly_07_05_v2","LeadTrack01_F_6th_Anniversary_Remix","Music_Default","Track_C_01","Track_C_02","Track_C_03","Track_C_04","Track_C_05","Track_C_06","Track_C_07","Track_C_08","Track_C_09","Track_C_10","Track_C_11","Track_C_12","Track_C_13","Track_C_14","Track_C_15","Track_C_16","Track_C_17","Track_C_18","Track_C_19","Track_C_20","Track_D_01","Track_D_02","Track_D_03","Track_M_01","Track_M_02","Track_M_03","News_BackOnline","News_CSAT_convoy_attacked","News_Infection01","News_Jingle","News_outbreak_Boise","News_outbreak_Galili","News_outbreak_Oumere","News_outbreak_Savaka","News_rebels_attack_Lugganville","News_weapons_prohibited","News_checkpoints","News_aircraft","News_arrest","News_depot_fail","News_depot_success","News_depot_success_alone","News_execution","News_hostels","News_house_destroyed","News_idap","News_malaria_boise_secured","News_malaria_galili_secured","News_malaria_luganville_secured","News_malaria_savaka_secured","News_power_plant","News_radar_destroyed","News_rescued","News_sugar_company","News_weapons","Track_O_01","Track_O_02","Track_O_03","Track_O_04","Track_O_05","Track_O_06","Track_O_07","Track_O_08","Track_O_09","Track_O_10","Track_O_11","Track_O_12","Track_O_13","Track_O_14","Track_O_15","Track_O_16","Track_P_01","Track_P_02","Track_P_03","Track_P_04","Track_P_05","Track_P_06","Track_P_07","Track_P_08","Track_P_09","Track_P_10","Track_P_11","Track_P_12","Track_P_13","Track_P_14","Track_P_15","Track_P_16","Track_P_17","Track_P_18","Track_R_01","Track_R_02","Track_R_03","Track_R_04","Track_R_05","Track_R_06","Track_R_07","Track_R_08","Track_R_09","Track_R_10","Track_R_11","Track_R_12","Track_R_13","Track_R_14","Track_R_15","Track_R_16","Track_R_17","Track_R_18","Track_R_19","Track_R_20","Track_R_21","Track_R_22","Track_R_23","Track_R_24","OM_Music01","OM_Music02","OM_Music03","OM_Intro"],
						[
							["LeadTrack01_F","",""],["LeadTrack01a_F","",""],["LeadTrack01b_F","",""],["LeadTrack01c_F","",""],["LeadTrack02_F","",""],["LeadTrack03_F","",""],["LeadTrack04_F","",""],["LeadTrack04a_F","",""],["LeadTrack05_F","",""],["LeadTrack06_F","",""],["AmbientTrack01_F","",""],["AmbientTrack01a_F","",""],["AmbientTrack01b_F","",""],["AmbientTrack03_F","",""],["AmbientTrack04a_F","",""],["AmbientTrack04_F","",""],["BackgroundTrack03_F","",""],["BackgroundTrack01_F","",""],["BackgroundTrack01a_F","",""],["BackgroundTrack02_F","",""],["Track01_Proteus","",""],["Track02_SolarPower","",""],["Track03_OnTheRoad","",""],["Track04_Underwater1","",""],["Track05_Underwater2","",""],["Track06_CarnHeli","",""],["Track07_ActionDark","",""],["Track08_Night_ambient","",""],["Track09_Night_percussions","",""],["Track10_StageB_action","",""],["Track11_StageB_stealth","",""],["Track12_StageC_action","",""],["Track13_StageC_negative","",""],["Track14_MainMenu","",""],["Track15_MainTheme","",""],["LeadTrack01_F_EPA","",""],["LeadTrack02_F_EPA","",""],["LeadTrack02a_F_EPA","",""],["LeadTrack02b_F_EPA","",""],["LeadTrack03_F_EPA","",""],["LeadTrack03a_F_EPA","",""],["EventTrack01_F_EPA","",""],["EventTrack01a_F_EPA","",""],["EventTrack02_F_EPA","",""],["EventTrack02a_F_EPA","",""],["EventTrack03_F_EPA","",""],["EventTrack03a_F_EPA","",""],["LeadTrack01_F_EPB","",""],["LeadTrack01a_F_EPB","",""],["LeadTrack02_F_EPB","",""],["LeadTrack02a_F_EPB","",""],["LeadTrack02b_F_EPB","",""],["LeadTrack03_F_EPB","",""],["LeadTrack03a_F_EPB","",""],["LeadTrack04_F_EPB","",""],["EventTrack01_F_EPB","",""],["EventTrack01a_F_EPB","",""],["EventTrack02_F_EPB","",""],["EventTrack02a_F_EPB","",""],["EventTrack03_F_EPB","",""],["EventTrack04_F_EPB","",""],["EventTrack04a_F_EPB","",""],["EventTrack03a_F_EPB","",""],["AmbientTrack01_F_EPB","",""],["BackgroundTrack01_F_EPB","",""],["LeadTrack01_F_EPC","",""],["LeadTrack02_F_EPC","",""],["LeadTrack03_F_EPC","",""],["LeadTrack04_F_EPC","",""],["LeadTrack05_F_EPC","",""],["LeadTrack06_F_EPC","",""],["LeadTrack06b_F_EPC","",""],["EventTrack01_F_EPC","",""],["EventTrack02_F_EPC","",""],["EventTrack02b_F_EPC","",""],["EventTrack03_F_EPC","",""],["BackgroundTrack01_F_EPC","",""],["BackgroundTrack02_F_EPC","",""],["BackgroundTrack03_F_EPC","",""],["BackgroundTrack04_F_EPC","",""],["C_EA_RadioBroadcast1","",""],["C_EA_RadioBroadcast2","",""],["C_EA_RadioMusic1","",""],["C_EA_RadioMusic2","",""],["RadioAmbient1","",""],["RadioAmbient2","",""],["RadioAmbient3","",""],["RadioAmbient4","",""],["RadioAmbient5","",""],["RadioAmbient6","",""],["RadioAmbient7","",""],["RadioAmbient8","",""],["RadioAmbient9","",""],["RadioAmbient10","",""],["RadioAmbient11","",""],["RadioAmbient12","",""],["RadioAmbient13","",""],["RadioAmbient14","",""],["RadioAmbient15","",""],["RadioAmbient16","",""],["RadioAmbient17","",""],["RadioAmbient18","",""],["RadioAmbient19","",""],["RadioAmbient20","",""],["RadioAmbient21","",""],["RadioAmbient22","",""],["RadioAmbient23","",""],["RadioAmbient24","",""],["RadioAmbient25","",""],["RadioAmbient26","",""],["RadioAmbient27","",""],["RadioAmbient28","",""],["RadioAmbient29","",""],["RadioAmbient30","",""],["Fallout","",""],["Defcon","",""],["Wasteland","",""],["SkyNet","",""],["MAD","",""],["radio_music","",""],["LeadTrack01_F_Curator","",""],["EventTrack01_F_Curator","",""],["EventTrack02_F_Curator","",""],["EventTrack03_F_Curator","",""],["LeadTrack01_F_Bootcamp","",""],["LeadTrack01b_F_Bootcamp","",""],["LeadTrack02_F_Bootcamp","",""],["LeadTrack03_F_Bootcamp","",""],["LeadTrack01_F_Heli","",""],["LeadTrack01_F_Mark","",""],["LeadTrack02_F_Mark","",""],["LeadTrack03_F_Mark","",""],["LeadTrack01_F_EXP","",""],["LeadTrack01a_F_EXP","",""],["LeadTrack01b_F_EXP","",""],["LeadTrack01c_F_EXP","",""],["LeadTrack02_F_EXP","",""],["LeadTrack03_F_EXP","",""],["LeadTrack04_F_EXP","",""],["AmbientTrack01_F_EXP","",""],["AmbientTrack01a_F_EXP","",""],["AmbientTrack01b_F_EXP","",""],["AmbientTrack02_F_EXP","",""],["AmbientTrack02a_F_EXP","",""],["AmbientTrack02b_F_EXP","",""],["AmbientTrack02c_F_EXP","",""],["AmbientTrack02d_F_EXP","",""],["LeadTrack01_F_Jets","",""],["LeadTrack02_F_Jets","",""],["EventTrack01_F_Jets","",""],["LeadTrack01_F_Malden","",""],["LeadTrack02_F_Malden","",""],["LeadTrack01_F_Orange","",""],["AmbientTrack02_F_Orange","",""],["EventTrack01_F_Orange","",""],["EventTrack02_F_Orange","",""],["AmbientTrack01_F_Orange","",""],["LeadTrack01_F_Tacops","",""],["LeadTrack02_F_Tacops","",""],["LeadTrack03_F_Tacops","",""],["LeadTrack04_F_Tacops","",""],["AmbientTrack01a_F_Tacops","",""],["AmbientTrack01b_F_Tacops","",""],["AmbientTrack02a_F_Tacops","",""],["AmbientTrack02b_F_Tacops","",""],["AmbientTrack03a_F_Tacops","",""],["AmbientTrack03b_F_Tacops","",""],["AmbientTrack04a_F_Tacops","",""],["AmbientTrack04b_F_Tacops","",""],["EventTrack01a_F_Tacops","",""],["EventTrack01b_F_Tacops","",""],["EventTrack02a_F_Tacops","",""],["EventTrack02b_F_Tacops","",""],["EventTrack03a_F_Tacops","",""],["EventTrack03b_F_Tacops","",""],["MainTheme_F_Tank","",""],["LeadTrack01_F_Tank","",""],["LeadTrack02_F_Tank","",""],["LeadTrack03_F_Tank","",""],["LeadTrack04_F_Tank","",""],["LeadTrack05_F_Tank","",""],["LeadTrack06_F_Tank","",""],["AmbientTrack01_F_Tank","",""],["Music_Menu_Contact","",""],["Music_Theme_Contact","",""],["Music_Credits_Contact","",""],["Music_Probe_Discovered","",""],["Music_Arrival","",""],["Music_Roaming_Night","",""],["Music_Roaming_Night_02","",""],["Music_Roaming_Night_Fragment_01_20s","",""],["Music_Roaming_Night_Fragment_01_30s","",""],["Music_Roaming_Night_Fragment_01_60s","",""],["Music_Roaming_Night_Fragment_02_30s","",""],["Music_Roaming_Night_Fragment_02_60s","",""],["Music_Roaming_Night_Fragment_03_60s","",""],["Music_Roaming_Day","",""],["Music_Roaming_Day_02","",""],["Music_Intro_ThisIsWarA","",""],["Music_Intro_02_MissionStart","",""],["Music_Intro_03_MissionStart","",""],["Music_Intro_02_Emp_Tension_01","",""],["Music_Outro2_Ending","",""],["Music_Hostile_Drone_Close_01","",""],["Music_Failed_Contact","",""],["Music_Failed_Contact_02","",""],["Music_Battle_Alien","",""],["Music_Battle_Human","",""],["Music_Russian_Theme","",""],["Music_Battle_Human_Loop","",""],["Music_Battle_Alien_Loop_01","",""],["Music_Battle_Alien_Loop_02","",""],["Music_Battle_Alien_Loop_03","",""],["Music_Suspended_Loop_01","",""],["Music_Tension_Loop_01","",""],["Music_Freeroam_01_MissionStart","",""],["Music_Freeroam_02_MissionStart","",""],["Music_Freeroam_RootExtract","",""],["Music_FreeRoam_Battle_Alien_Loop_01","",""],["Music_FreeRoam_Battle_Alien_Loop_02","",""],["Music_FreeRoam_Battle_Alien_Loop_03","",""],["Music_FreeRoam_Suspended_Loop_01","",""],["Music_FreeRoam_Tension_Loop_01","",""],["Music_FreeRoam_Russian_Theme_Loop","",""],["Music_FreeRoam_Russian_Theme","",""],["Music_FreeRoam_Battle_Alien","",""],["Music_FreeRoam_Battle_Human","",""],["Music_FreeRoam_Battle_Human_Loop","",""],["Music_Freeroam_End","",""],["anomaly_07_05_v1","",""],["anomaly_07_05_v2","",""],["LeadTrack01_F_6th_Anniversary_Remix","",""],["Music_Default","",""],["Track_C_01","",""],["Track_C_02","",""],["Track_C_03","",""],["Track_C_04","",""],["Track_C_05","",""],["Track_C_06","",""],["Track_C_07","",""],["Track_C_08","",""],["Track_C_09","",""],["Track_C_10","",""],["Track_C_11","",""],["Track_C_12","",""],["Track_C_13","",""],["Track_C_14","",""],["Track_C_15","",""],["Track_C_16","",""],["Track_C_17","",""],["Track_C_18","",""],["Track_C_19","",""],["Track_C_20","",""],["Track_D_01","",""],["Track_D_02","",""],["Track_D_03","",""],["Track_M_01","",""],["Track_M_02","",""],["Track_M_03","",""],["News_BackOnline","",""],["News_CSAT_convoy_attacked","",""],["News_Infection01","",""],["News_Jingle","",""],["News_outbreak_Boise","",""],["News_outbreak_Galili","",""],["News_outbreak_Oumere","",""],["News_outbreak_Savaka","",""],["News_rebels_attack_Lugganville","",""],["News_weapons_prohibited","",""],["News_checkpoints","",""],["News_aircraft","",""],["News_arrest","",""],["News_depot_fail","",""],["News_depot_success","",""],["News_depot_success_alone","",""],["News_execution","",""],["News_hostels","",""],["News_house_destroyed","",""],["News_idap","",""],["News_malaria_boise_secured","",""],["News_malaria_galili_secured","",""],["News_malaria_luganville_secured","",""],["News_malaria_savaka_secured","",""],["News_power_plant","",""],["News_radar_destroyed","",""],["News_rescued","",""],["News_sugar_company","",""],["News_weapons","",""],["Track_O_01","",""],["Track_O_02","",""],["Track_O_03","",""],["Track_O_04","",""],["Track_O_05","",""],["Track_O_06","",""],["Track_O_07","",""],["Track_O_08","",""],["Track_O_09","",""],["Track_O_10","",""],["Track_O_11","",""],["Track_O_12","",""],["Track_O_13","",""],["Track_O_14","",""],["Track_O_15","",""],["Track_O_16","",""],["Track_P_01","",""],["Track_P_02","",""],["Track_P_03","",""],["Track_P_04","",""],["Track_P_05","",""],["Track_P_06","",""],["Track_P_07","",""],["Track_P_08","",""],["Track_P_09","",""],["Track_P_10","",""],["Track_P_11","",""],["Track_P_12","",""],["Track_P_13","",""],["Track_P_14","",""],["Track_P_15","",""],["Track_P_16","",""],["Track_P_17","",""],["Track_P_18","",""],["Track_R_01","",""],["Track_R_02","",""],["Track_R_03","",""],["Track_R_04","",""],["Track_R_05","",""],["Track_R_06","",""],["Track_R_07","",""],["Track_R_08","",""],["Track_R_09","",""],["Track_R_10","",""],["Track_R_11","",""],["Track_R_12","",""],["Track_R_13","",""],["Track_R_14","",""],["Track_R_15","",""],["Track_R_16","",""],["Track_R_17","",""],["Track_R_18","",""],["Track_R_19","",""],["Track_R_20","",""],["Track_R_21","",""],["Track_R_22","",""],["Track_R_23","",""],["Track_R_24","",""],["OM_Music01","",""],["OM_Music02","",""],["OM_Music03","",""],["OM_Intro","",""]
						],
						0
					]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_missionName","_missionAuthor","_missionVersion","_quote","_duration","_soundtrack"];
				_quote = [_quote] call MAZ_EZM_fnc_checkForBlacklistedWords;
				_missionAuthor = [_missionAuthor] call MAZ_EZM_fnc_checkForBlacklistedWords;
				_missionName = [_missionName] call MAZ_EZM_fnc_checkForBlacklistedWords;
				_missionVersion = [_missionVersion] call MAZ_EZM_fnc_checkForBlacklistedWords;
				[[_missionName, _missionAuthor, _missionVersion, _quote, _duration, _soundtrack],{
					params ["_missionName","_missionAuthor","_missionVersion","_quote","_duration","_soundtrack"];
					if (_missionName == "") then {
						_missionName = " ";
					};
					if (_missionAuthor == "") then {
						_missionAuthor = " ";
					};
					if (_missionVersion == "") then {
						_missionVersion = " ";
					};
					player allowDamage false;
					1 fadeSound 0;
					1 fadeMusic 0;
					sleep 1;
					_duration fadeSound 1;
					_duration fadeMusic 1;
					playMusic _soundtrack;
					titleCut ["", "BLACK", 4];
					_pic = "\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa"; 
					[ 
						'<img align="center" size="1.25" shadow="1" image=' + str(_pic) + ' /><br/><t color=' + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ' align="center" size="0.5" font="PuristaBold" shadow="1"> AEGIS: <t color="#FFFFFF">9.2.0</t></t>', 
						safeZoneXAbs+safeZoneWAbs-0.62,
						safeZoneY+safeZoneH-0.19, 
						4, 
						0, 
						0.25, 
						3090 
					] spawn bis_fnc_dynamicText;
					
					sleep 5;
					titleText [_quote,"PLAIN"];
					titleFadeOut _duration;
					sleep (_duration - 2);
					[ 
						[_missionName,"font = 'PuristaSemiBold'"],
						["","<br/>"],
						[_missionAuthor,"font = 'PuristaMedium'"],
						["","<br/>"],
						[_missionVersion,"font = 'PuristaLight'"]
					]  execVM "\a3\missions_f_bootcamp\Campaign\Functions\GUI\fn_SITREP.sqf";
					sleep 3;
					"dynamicBlur" ppEffectEnable true;
					"dynamicBlur" ppEffectAdjust [6];
					"dynamicBlur" ppEffectCommit 0;
					"dynamicBlur" ppEffectAdjust [0.0];  
					"dynamicBlur" ppEffectCommit 5;
					
					titleCut ["", "BLACK IN", _duration];
					_pic = "\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa"; 
					[ 
						'<img align="center" size="1.25" shadow="1" image=' + str(_pic) + ' /><br/><t color=' + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ' align="center" size="0.5" font="PuristaBold" shadow="1"> AEGIS: <t color="#FFFFFF">9.2.0</t></t>', 
						safeZoneXAbs+safeZoneWAbs-0.62,
						safeZoneY+safeZoneH-0.19, 
						99999, 
						_duration, 
						0, 
						3090 
					] spawn bis_fnc_dynamicText;
					(_duration + 5) fadeMusic 0;
					sleep (_duration + 5);
					player allowDamage true;
					playMusic "";
					0 fadeMusic 1;
				}] remoteExec ['bis_fnc_call',0,false];
				systemchat "[ LOG ] Fade-In Intro started for players!";
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_cinematicIntroModule = {
			private _pos = AGLtoASL ([] call MAZ_EZM_fnc_getScreenPosition);
			["Cinematic Intro",[
				[
					"EDIT",
					["Mission Name:","Enter a cool title or just the mission name."],
					[""]
				],
				[
					"EDIT",
					["Command Name:","Enter the faction command name like 'NATO Euro Command'."],
					[""]
				],
				[
					"EDIT",
					["Quote:","Enter some cool words for the upcoming mission."],
					[""]
				],
				[
					"SLIDER",
					"Height",
					[0,300,25]
				],
				[
					"SLIDER",
					"Radius",
					[1,2000,100]
				],
				[
					"SLIDER",
					"Duration of Camera Pan",
					[30,300,60]
				],
				[
					"SLIDER",
					"FOV of Camera",
					[0.01,5,0.75]
				],
				[
					"LIST",
					["Ambient Muisc:","Choose a soundtrack to pair with the Fade-In & Out"],
					[
						["LeadTrack01_F","LeadTrack01a_F","LeadTrack01b_F","LeadTrack01c_F","LeadTrack02_F","LeadTrack03_F","LeadTrack04_F","LeadTrack04a_F","LeadTrack05_F","LeadTrack06_F","AmbientTrack01_F","AmbientTrack01a_F","AmbientTrack01b_F","AmbientTrack03_F","AmbientTrack04a_F","AmbientTrack04_F","BackgroundTrack03_F","BackgroundTrack01_F","BackgroundTrack01a_F","BackgroundTrack02_F","Track01_Proteus","Track02_SolarPower","Track03_OnTheRoad","Track04_Underwater1","Track05_Underwater2","Track06_CarnHeli","Track07_ActionDark","Track08_Night_ambient","Track09_Night_percussions","Track10_StageB_action","Track11_StageB_stealth","Track12_StageC_action","Track13_StageC_negative","Track14_MainMenu","Track15_MainTheme","LeadTrack01_F_EPA","LeadTrack02_F_EPA","LeadTrack02a_F_EPA","LeadTrack02b_F_EPA","LeadTrack03_F_EPA","LeadTrack03a_F_EPA","EventTrack01_F_EPA","EventTrack01a_F_EPA","EventTrack02_F_EPA","EventTrack02a_F_EPA","EventTrack03_F_EPA","EventTrack03a_F_EPA","LeadTrack01_F_EPB","LeadTrack01a_F_EPB","LeadTrack02_F_EPB","LeadTrack02a_F_EPB","LeadTrack02b_F_EPB","LeadTrack03_F_EPB","LeadTrack03a_F_EPB","LeadTrack04_F_EPB","EventTrack01_F_EPB","EventTrack01a_F_EPB","EventTrack02_F_EPB","EventTrack02a_F_EPB","EventTrack03_F_EPB","EventTrack04_F_EPB","EventTrack04a_F_EPB","EventTrack03a_F_EPB","AmbientTrack01_F_EPB","BackgroundTrack01_F_EPB","LeadTrack01_F_EPC","LeadTrack02_F_EPC","LeadTrack03_F_EPC","LeadTrack04_F_EPC","LeadTrack05_F_EPC","LeadTrack06_F_EPC","LeadTrack06b_F_EPC","EventTrack01_F_EPC","EventTrack02_F_EPC","EventTrack02b_F_EPC","EventTrack03_F_EPC","BackgroundTrack01_F_EPC","BackgroundTrack02_F_EPC","BackgroundTrack03_F_EPC","BackgroundTrack04_F_EPC","C_EA_RadioBroadcast1","C_EA_RadioBroadcast2","C_EA_RadioMusic1","C_EA_RadioMusic2","RadioAmbient1","RadioAmbient2","RadioAmbient3","RadioAmbient4","RadioAmbient5","RadioAmbient6","RadioAmbient7","RadioAmbient8","RadioAmbient9","RadioAmbient10","RadioAmbient11","RadioAmbient12","RadioAmbient13","RadioAmbient14","RadioAmbient15","RadioAmbient16","RadioAmbient17","RadioAmbient18","RadioAmbient19","RadioAmbient20","RadioAmbient21","RadioAmbient22","RadioAmbient23","RadioAmbient24","RadioAmbient25","RadioAmbient26","RadioAmbient27","RadioAmbient28","RadioAmbient29","RadioAmbient30","Fallout","Defcon","Wasteland","SkyNet","MAD","radio_music","LeadTrack01_F_Curator","EventTrack01_F_Curator","EventTrack02_F_Curator","EventTrack03_F_Curator","LeadTrack01_F_Bootcamp","LeadTrack01b_F_Bootcamp","LeadTrack02_F_Bootcamp","LeadTrack03_F_Bootcamp","LeadTrack01_F_Heli","LeadTrack01_F_Mark","LeadTrack02_F_Mark","LeadTrack03_F_Mark","LeadTrack01_F_EXP","LeadTrack01a_F_EXP","LeadTrack01b_F_EXP","LeadTrack01c_F_EXP","LeadTrack02_F_EXP","LeadTrack03_F_EXP","LeadTrack04_F_EXP","AmbientTrack01_F_EXP","AmbientTrack01a_F_EXP","AmbientTrack01b_F_EXP","AmbientTrack02_F_EXP","AmbientTrack02a_F_EXP","AmbientTrack02b_F_EXP","AmbientTrack02c_F_EXP","AmbientTrack02d_F_EXP","LeadTrack01_F_Jets","LeadTrack02_F_Jets","EventTrack01_F_Jets","LeadTrack01_F_Malden","LeadTrack02_F_Malden","LeadTrack01_F_Orange","AmbientTrack02_F_Orange","EventTrack01_F_Orange","EventTrack02_F_Orange","AmbientTrack01_F_Orange","LeadTrack01_F_Tacops","LeadTrack02_F_Tacops","LeadTrack03_F_Tacops","LeadTrack04_F_Tacops","AmbientTrack01a_F_Tacops","AmbientTrack01b_F_Tacops","AmbientTrack02a_F_Tacops","AmbientTrack02b_F_Tacops","AmbientTrack03a_F_Tacops","AmbientTrack03b_F_Tacops","AmbientTrack04a_F_Tacops","AmbientTrack04b_F_Tacops","EventTrack01a_F_Tacops","EventTrack01b_F_Tacops","EventTrack02a_F_Tacops","EventTrack02b_F_Tacops","EventTrack03a_F_Tacops","EventTrack03b_F_Tacops","MainTheme_F_Tank","LeadTrack01_F_Tank","LeadTrack02_F_Tank","LeadTrack03_F_Tank","LeadTrack04_F_Tank","LeadTrack05_F_Tank","LeadTrack06_F_Tank","AmbientTrack01_F_Tank","Music_Menu_Contact","Music_Theme_Contact","Music_Credits_Contact","Music_Probe_Discovered","Music_Arrival","Music_Roaming_Night","Music_Roaming_Night_02","Music_Roaming_Night_Fragment_01_20s","Music_Roaming_Night_Fragment_01_30s","Music_Roaming_Night_Fragment_01_60s","Music_Roaming_Night_Fragment_02_30s","Music_Roaming_Night_Fragment_02_60s","Music_Roaming_Night_Fragment_03_60s","Music_Roaming_Day","Music_Roaming_Day_02","Music_Intro_ThisIsWarA","Music_Intro_02_MissionStart","Music_Intro_03_MissionStart","Music_Intro_02_Emp_Tension_01","Music_Outro2_Ending","Music_Hostile_Drone_Close_01","Music_Failed_Contact","Music_Failed_Contact_02","Music_Battle_Alien","Music_Battle_Human","Music_Russian_Theme","Music_Battle_Human_Loop","Music_Battle_Alien_Loop_01","Music_Battle_Alien_Loop_02","Music_Battle_Alien_Loop_03","Music_Suspended_Loop_01","Music_Tension_Loop_01","Music_Freeroam_01_MissionStart","Music_Freeroam_02_MissionStart","Music_Freeroam_RootExtract","Music_FreeRoam_Battle_Alien_Loop_01","Music_FreeRoam_Battle_Alien_Loop_02","Music_FreeRoam_Battle_Alien_Loop_03","Music_FreeRoam_Suspended_Loop_01","Music_FreeRoam_Tension_Loop_01","Music_FreeRoam_Russian_Theme_Loop","Music_FreeRoam_Russian_Theme","Music_FreeRoam_Battle_Alien","Music_FreeRoam_Battle_Human","Music_FreeRoam_Battle_Human_Loop","Music_Freeroam_End","anomaly_07_05_v1","anomaly_07_05_v2","LeadTrack01_F_6th_Anniversary_Remix","Music_Default","Track_C_01","Track_C_02","Track_C_03","Track_C_04","Track_C_05","Track_C_06","Track_C_07","Track_C_08","Track_C_09","Track_C_10","Track_C_11","Track_C_12","Track_C_13","Track_C_14","Track_C_15","Track_C_16","Track_C_17","Track_C_18","Track_C_19","Track_C_20","Track_D_01","Track_D_02","Track_D_03","Track_M_01","Track_M_02","Track_M_03","News_BackOnline","News_CSAT_convoy_attacked","News_Infection01","News_Jingle","News_outbreak_Boise","News_outbreak_Galili","News_outbreak_Oumere","News_outbreak_Savaka","News_rebels_attack_Lugganville","News_weapons_prohibited","News_checkpoints","News_aircraft","News_arrest","News_depot_fail","News_depot_success","News_depot_success_alone","News_execution","News_hostels","News_house_destroyed","News_idap","News_malaria_boise_secured","News_malaria_galili_secured","News_malaria_luganville_secured","News_malaria_savaka_secured","News_power_plant","News_radar_destroyed","News_rescued","News_sugar_company","News_weapons","Track_O_01","Track_O_02","Track_O_03","Track_O_04","Track_O_05","Track_O_06","Track_O_07","Track_O_08","Track_O_09","Track_O_10","Track_O_11","Track_O_12","Track_O_13","Track_O_14","Track_O_15","Track_O_16","Track_P_01","Track_P_02","Track_P_03","Track_P_04","Track_P_05","Track_P_06","Track_P_07","Track_P_08","Track_P_09","Track_P_10","Track_P_11","Track_P_12","Track_P_13","Track_P_14","Track_P_15","Track_P_16","Track_P_17","Track_P_18","Track_R_01","Track_R_02","Track_R_03","Track_R_04","Track_R_05","Track_R_06","Track_R_07","Track_R_08","Track_R_09","Track_R_10","Track_R_11","Track_R_12","Track_R_13","Track_R_14","Track_R_15","Track_R_16","Track_R_17","Track_R_18","Track_R_19","Track_R_20","Track_R_21","Track_R_22","Track_R_23","Track_R_24","OM_Music01","OM_Music02","OM_Music03","OM_Intro"],
						[
							["LeadTrack01_F","",""],["LeadTrack01a_F","",""],["LeadTrack01b_F","",""],["LeadTrack01c_F","",""],["LeadTrack02_F","",""],["LeadTrack03_F","",""],["LeadTrack04_F","",""],["LeadTrack04a_F","",""],["LeadTrack05_F","",""],["LeadTrack06_F","",""],["AmbientTrack01_F","",""],["AmbientTrack01a_F","",""],["AmbientTrack01b_F","",""],["AmbientTrack03_F","",""],["AmbientTrack04a_F","",""],["AmbientTrack04_F","",""],["BackgroundTrack03_F","",""],["BackgroundTrack01_F","",""],["BackgroundTrack01a_F","",""],["BackgroundTrack02_F","",""],["Track01_Proteus","",""],["Track02_SolarPower","",""],["Track03_OnTheRoad","",""],["Track04_Underwater1","",""],["Track05_Underwater2","",""],["Track06_CarnHeli","",""],["Track07_ActionDark","",""],["Track08_Night_ambient","",""],["Track09_Night_percussions","",""],["Track10_StageB_action","",""],["Track11_StageB_stealth","",""],["Track12_StageC_action","",""],["Track13_StageC_negative","",""],["Track14_MainMenu","",""],["Track15_MainTheme","",""],["LeadTrack01_F_EPA","",""],["LeadTrack02_F_EPA","",""],["LeadTrack02a_F_EPA","",""],["LeadTrack02b_F_EPA","",""],["LeadTrack03_F_EPA","",""],["LeadTrack03a_F_EPA","",""],["EventTrack01_F_EPA","",""],["EventTrack01a_F_EPA","",""],["EventTrack02_F_EPA","",""],["EventTrack02a_F_EPA","",""],["EventTrack03_F_EPA","",""],["EventTrack03a_F_EPA","",""],["LeadTrack01_F_EPB","",""],["LeadTrack01a_F_EPB","",""],["LeadTrack02_F_EPB","",""],["LeadTrack02a_F_EPB","",""],["LeadTrack02b_F_EPB","",""],["LeadTrack03_F_EPB","",""],["LeadTrack03a_F_EPB","",""],["LeadTrack04_F_EPB","",""],["EventTrack01_F_EPB","",""],["EventTrack01a_F_EPB","",""],["EventTrack02_F_EPB","",""],["EventTrack02a_F_EPB","",""],["EventTrack03_F_EPB","",""],["EventTrack04_F_EPB","",""],["EventTrack04a_F_EPB","",""],["EventTrack03a_F_EPB","",""],["AmbientTrack01_F_EPB","",""],["BackgroundTrack01_F_EPB","",""],["LeadTrack01_F_EPC","",""],["LeadTrack02_F_EPC","",""],["LeadTrack03_F_EPC","",""],["LeadTrack04_F_EPC","",""],["LeadTrack05_F_EPC","",""],["LeadTrack06_F_EPC","",""],["LeadTrack06b_F_EPC","",""],["EventTrack01_F_EPC","",""],["EventTrack02_F_EPC","",""],["EventTrack02b_F_EPC","",""],["EventTrack03_F_EPC","",""],["BackgroundTrack01_F_EPC","",""],["BackgroundTrack02_F_EPC","",""],["BackgroundTrack03_F_EPC","",""],["BackgroundTrack04_F_EPC","",""],["C_EA_RadioBroadcast1","",""],["C_EA_RadioBroadcast2","",""],["C_EA_RadioMusic1","",""],["C_EA_RadioMusic2","",""],["RadioAmbient1","",""],["RadioAmbient2","",""],["RadioAmbient3","",""],["RadioAmbient4","",""],["RadioAmbient5","",""],["RadioAmbient6","",""],["RadioAmbient7","",""],["RadioAmbient8","",""],["RadioAmbient9","",""],["RadioAmbient10","",""],["RadioAmbient11","",""],["RadioAmbient12","",""],["RadioAmbient13","",""],["RadioAmbient14","",""],["RadioAmbient15","",""],["RadioAmbient16","",""],["RadioAmbient17","",""],["RadioAmbient18","",""],["RadioAmbient19","",""],["RadioAmbient20","",""],["RadioAmbient21","",""],["RadioAmbient22","",""],["RadioAmbient23","",""],["RadioAmbient24","",""],["RadioAmbient25","",""],["RadioAmbient26","",""],["RadioAmbient27","",""],["RadioAmbient28","",""],["RadioAmbient29","",""],["RadioAmbient30","",""],["Fallout","",""],["Defcon","",""],["Wasteland","",""],["SkyNet","",""],["MAD","",""],["radio_music","",""],["LeadTrack01_F_Curator","",""],["EventTrack01_F_Curator","",""],["EventTrack02_F_Curator","",""],["EventTrack03_F_Curator","",""],["LeadTrack01_F_Bootcamp","",""],["LeadTrack01b_F_Bootcamp","",""],["LeadTrack02_F_Bootcamp","",""],["LeadTrack03_F_Bootcamp","",""],["LeadTrack01_F_Heli","",""],["LeadTrack01_F_Mark","",""],["LeadTrack02_F_Mark","",""],["LeadTrack03_F_Mark","",""],["LeadTrack01_F_EXP","",""],["LeadTrack01a_F_EXP","",""],["LeadTrack01b_F_EXP","",""],["LeadTrack01c_F_EXP","",""],["LeadTrack02_F_EXP","",""],["LeadTrack03_F_EXP","",""],["LeadTrack04_F_EXP","",""],["AmbientTrack01_F_EXP","",""],["AmbientTrack01a_F_EXP","",""],["AmbientTrack01b_F_EXP","",""],["AmbientTrack02_F_EXP","",""],["AmbientTrack02a_F_EXP","",""],["AmbientTrack02b_F_EXP","",""],["AmbientTrack02c_F_EXP","",""],["AmbientTrack02d_F_EXP","",""],["LeadTrack01_F_Jets","",""],["LeadTrack02_F_Jets","",""],["EventTrack01_F_Jets","",""],["LeadTrack01_F_Malden","",""],["LeadTrack02_F_Malden","",""],["LeadTrack01_F_Orange","",""],["AmbientTrack02_F_Orange","",""],["EventTrack01_F_Orange","",""],["EventTrack02_F_Orange","",""],["AmbientTrack01_F_Orange","",""],["LeadTrack01_F_Tacops","",""],["LeadTrack02_F_Tacops","",""],["LeadTrack03_F_Tacops","",""],["LeadTrack04_F_Tacops","",""],["AmbientTrack01a_F_Tacops","",""],["AmbientTrack01b_F_Tacops","",""],["AmbientTrack02a_F_Tacops","",""],["AmbientTrack02b_F_Tacops","",""],["AmbientTrack03a_F_Tacops","",""],["AmbientTrack03b_F_Tacops","",""],["AmbientTrack04a_F_Tacops","",""],["AmbientTrack04b_F_Tacops","",""],["EventTrack01a_F_Tacops","",""],["EventTrack01b_F_Tacops","",""],["EventTrack02a_F_Tacops","",""],["EventTrack02b_F_Tacops","",""],["EventTrack03a_F_Tacops","",""],["EventTrack03b_F_Tacops","",""],["MainTheme_F_Tank","",""],["LeadTrack01_F_Tank","",""],["LeadTrack02_F_Tank","",""],["LeadTrack03_F_Tank","",""],["LeadTrack04_F_Tank","",""],["LeadTrack05_F_Tank","",""],["LeadTrack06_F_Tank","",""],["AmbientTrack01_F_Tank","",""],["Music_Menu_Contact","",""],["Music_Theme_Contact","",""],["Music_Credits_Contact","",""],["Music_Probe_Discovered","",""],["Music_Arrival","",""],["Music_Roaming_Night","",""],["Music_Roaming_Night_02","",""],["Music_Roaming_Night_Fragment_01_20s","",""],["Music_Roaming_Night_Fragment_01_30s","",""],["Music_Roaming_Night_Fragment_01_60s","",""],["Music_Roaming_Night_Fragment_02_30s","",""],["Music_Roaming_Night_Fragment_02_60s","",""],["Music_Roaming_Night_Fragment_03_60s","",""],["Music_Roaming_Day","",""],["Music_Roaming_Day_02","",""],["Music_Intro_ThisIsWarA","",""],["Music_Intro_02_MissionStart","",""],["Music_Intro_03_MissionStart","",""],["Music_Intro_02_Emp_Tension_01","",""],["Music_Outro2_Ending","",""],["Music_Hostile_Drone_Close_01","",""],["Music_Failed_Contact","",""],["Music_Failed_Contact_02","",""],["Music_Battle_Alien","",""],["Music_Battle_Human","",""],["Music_Russian_Theme","",""],["Music_Battle_Human_Loop","",""],["Music_Battle_Alien_Loop_01","",""],["Music_Battle_Alien_Loop_02","",""],["Music_Battle_Alien_Loop_03","",""],["Music_Suspended_Loop_01","",""],["Music_Tension_Loop_01","",""],["Music_Freeroam_01_MissionStart","",""],["Music_Freeroam_02_MissionStart","",""],["Music_Freeroam_RootExtract","",""],["Music_FreeRoam_Battle_Alien_Loop_01","",""],["Music_FreeRoam_Battle_Alien_Loop_02","",""],["Music_FreeRoam_Battle_Alien_Loop_03","",""],["Music_FreeRoam_Suspended_Loop_01","",""],["Music_FreeRoam_Tension_Loop_01","",""],["Music_FreeRoam_Russian_Theme_Loop","",""],["Music_FreeRoam_Russian_Theme","",""],["Music_FreeRoam_Battle_Alien","",""],["Music_FreeRoam_Battle_Human","",""],["Music_FreeRoam_Battle_Human_Loop","",""],["Music_Freeroam_End","",""],["anomaly_07_05_v1","",""],["anomaly_07_05_v2","",""],["LeadTrack01_F_6th_Anniversary_Remix","",""],["Music_Default","",""],["Track_C_01","",""],["Track_C_02","",""],["Track_C_03","",""],["Track_C_04","",""],["Track_C_05","",""],["Track_C_06","",""],["Track_C_07","",""],["Track_C_08","",""],["Track_C_09","",""],["Track_C_10","",""],["Track_C_11","",""],["Track_C_12","",""],["Track_C_13","",""],["Track_C_14","",""],["Track_C_15","",""],["Track_C_16","",""],["Track_C_17","",""],["Track_C_18","",""],["Track_C_19","",""],["Track_C_20","",""],["Track_D_01","",""],["Track_D_02","",""],["Track_D_03","",""],["Track_M_01","",""],["Track_M_02","",""],["Track_M_03","",""],["News_BackOnline","",""],["News_CSAT_convoy_attacked","",""],["News_Infection01","",""],["News_Jingle","",""],["News_outbreak_Boise","",""],["News_outbreak_Galili","",""],["News_outbreak_Oumere","",""],["News_outbreak_Savaka","",""],["News_rebels_attack_Lugganville","",""],["News_weapons_prohibited","",""],["News_checkpoints","",""],["News_aircraft","",""],["News_arrest","",""],["News_depot_fail","",""],["News_depot_success","",""],["News_depot_success_alone","",""],["News_execution","",""],["News_hostels","",""],["News_house_destroyed","",""],["News_idap","",""],["News_malaria_boise_secured","",""],["News_malaria_galili_secured","",""],["News_malaria_luganville_secured","",""],["News_malaria_savaka_secured","",""],["News_power_plant","",""],["News_radar_destroyed","",""],["News_rescued","",""],["News_sugar_company","",""],["News_weapons","",""],["Track_O_01","",""],["Track_O_02","",""],["Track_O_03","",""],["Track_O_04","",""],["Track_O_05","",""],["Track_O_06","",""],["Track_O_07","",""],["Track_O_08","",""],["Track_O_09","",""],["Track_O_10","",""],["Track_O_11","",""],["Track_O_12","",""],["Track_O_13","",""],["Track_O_14","",""],["Track_O_15","",""],["Track_O_16","",""],["Track_P_01","",""],["Track_P_02","",""],["Track_P_03","",""],["Track_P_04","",""],["Track_P_05","",""],["Track_P_06","",""],["Track_P_07","",""],["Track_P_08","",""],["Track_P_09","",""],["Track_P_10","",""],["Track_P_11","",""],["Track_P_12","",""],["Track_P_13","",""],["Track_P_14","",""],["Track_P_15","",""],["Track_P_16","",""],["Track_P_17","",""],["Track_P_18","",""],["Track_R_01","",""],["Track_R_02","",""],["Track_R_03","",""],["Track_R_04","",""],["Track_R_05","",""],["Track_R_06","",""],["Track_R_07","",""],["Track_R_08","",""],["Track_R_09","",""],["Track_R_10","",""],["Track_R_11","",""],["Track_R_12","",""],["Track_R_13","",""],["Track_R_14","",""],["Track_R_15","",""],["Track_R_16","",""],["Track_R_17","",""],["Track_R_18","",""],["Track_R_19","",""],["Track_R_20","",""],["Track_R_21","",""],["Track_R_22","",""],["Track_R_23","",""],["Track_R_24","",""],["OM_Music01","",""],["OM_Music02","",""],["OM_Music03","",""],["OM_Intro","",""]
						],
						0
					]
				],
				[
					"TOOLBOX",
					["Player or Location:","Choose whether the intro will occur where you placed the module or in front of your player."],
					[true, ["Player","Location"], _pos]
				],
				[
					"TOOLBOX",
					["Night Vision:","Choose whether to set / clear using of night vision during the cutscene."],
					[true, ["Enable","Disable"], _pos]
				],
				[
					"LIST",
					"NOTE: If choosing Player keep radius and height very low!",
					[
						[_pos],
						[
							["","",""]
						],
						0,
						0
					]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_missionName","_missionAuthor","_quote","_height","_radius","_duration","_fov","_soundtrack","_type","_nvg","_pos"];
				_entity = player;
				_quote = [_quote] call MAZ_EZM_fnc_checkForBlacklistedWords;
				_missionAuthor = [_missionAuthor] call MAZ_EZM_fnc_checkForBlacklistedWords;
				_missionName = [_missionName] call MAZ_EZM_fnc_checkForBlacklistedWords;
				[[_missionName, _missionAuthor, _quote, _height, _radius, _duration, _fov, _soundtrack, _type, _nvg, _pos, _entity],{
					params ["_missionName","_missionAuthor","_quote","_height","_radius","_duration","_fov","_soundtrack","_type","_nvg","_pos","_entity"];
					if (_missionName == "") then {
						_missionName = " ";
					};
					if (_missionAuthor == "") then {
						_missionAuthor = " ";
					};
					_camera = (([AGLToASL _pos, "camera", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
					player allowDamage false;
					cameraEffectEnableHUD true;
					if (!(_nvg)) then {
						camUseNVG true;
					} else {
						camUseNVG false;
					};
					_camera camSetFov _fov;
					if (_type) then {
						1 fadeSound 0;
						1 fadeMusic 0;
						sleep 1;
						11 fadeSound 1;  
						11 fadeMusic 1;  
						playMusic _soundtrack;  
						titleCut ['', 'BLACK', 4];
						_pic = "\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa"; 
						[ 
							'<img align="center" size="1.25" shadow="1" image=' + str(_pic) + ' /><br/><t color=' + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ' align="center" size="0.5" font="PuristaBold" shadow="1"> AEGIS: <t color="#FFFFFF">9.2.0</t></t>', 
							safeZoneXAbs+safeZoneWAbs-0.62,
							safeZoneY+safeZoneH-0.19, 
							4, 
							0, 
							0.25, 
							3090 
						] spawn bis_fnc_dynamicText;
						sleep 4;
						titleText [_quote,'PLAIN'];  
						titleFadeOut 7; 
						sleep 7;


						_camera camPrepareTarget _pos;  
						_camera camCommitPrepared 0;  
						_camera camPrepareRelPos [0, (_radius / 4), _height];  
						_camera cameraEffect ['internal', 'back'];  
						_camera camCommitPrepared 0;  
						waitUntil { camCommitted _camera }; 


						_camera camPrepareRelPos [0, _radius, _height];  
						_camera camCommitPrepared (_duration / 10);
						'dynamicBlur' ppEffectEnable true;  
						'dynamicBlur' ppEffectAdjust [6];  
						'dynamicBlur' ppEffectCommit 0;  
						'dynamicBlur' ppEffectAdjust [0.0];    
						'dynamicBlur' ppEffectCommit ((_duration / 10) / 2);
						titleCut ['', 'BLACK IN', ((_duration / 10) / 2)]; 
						[0, ((_duration / 10) / 2), true, true ] call BIS_fnc_cinemaBorder; 
						[ 
							[(mapGridPosition getPos _entity) + ", ","font = 'PuristaLight'"],
							[worldName,"font = 'PuristaSemiBold'"],
							["","<br/>"],
							[_missionName,"font = 'PuristaSemiBold'"],
							["","<br/>"],
							[_missionAuthor,"font = 'PuristaSemiBold'"]
						]  execVM "\a3\missions_f_bootcamp\Campaign\Functions\GUI\fn_SITREP.sqf";
						uiSleep ((_duration / 10) / 2);
						waitUntil { camCommitted _camera };    
						 

						_camera camPrepareRelPos [(_radius * ((sqrt 2) / 2)), (_radius * ((sqrt 2) / 2)), _height];  
						_camera camCommitPrepared (_duration / 10);  
						waitUntil { camCommitted _camera }; 

						_camera camPrepareRelPos [_radius, 0, _height];  
						_camera camCommitPrepared (_duration / 10);  
						waitUntil { camCommitted _camera }; 

						_camera camPrepareRelPos [(_radius * ((sqrt 2) / 2)), -(_radius * ((sqrt 2) / 2)), _height];  
						_camera camCommitPrepared (_duration / 10);  
						waitUntil { camCommitted _camera }; 

						_camera camPrepareRelPos [0, -(_radius), _height];  
						_camera camCommitPrepared (_duration / 10);  
						waitUntil { camCommitted _camera }; 

						_camera camPrepareRelPos [-(_radius * ((sqrt 2) / 2)), -(_radius * ((sqrt 2) / 2)), _height];  
						_camera camCommitPrepared (_duration / 10);  
						waitUntil { camCommitted _camera }; 

						_camera camPrepareRelPos [-(_radius), 0, _height];  
						_camera camCommitPrepared (_duration / 10);  
						waitUntil { camCommitted _camera }; 

						_camera camPrepareRelPos [-(_radius * ((sqrt 2) / 2)), (_radius * ((sqrt 2) / 2)), _height];  
						_camera camCommitPrepared (_duration / 10);  
						waitUntil { camCommitted _camera }; 

						_camera camPrepareRelPos [0, (_radius), _height];  
						_camera camCommitPrepared (_duration / 10);  
						waitUntil { camCommitted _camera };  


						_camera camPrepareRelPos [0, (_radius / 2), _height];  
						_camera camCommitPrepared (_duration / 10); 
						'dynamicBlur' ppEffectEnable true;  
						'dynamicBlur' ppEffectAdjust [6];  
						'dynamicBlur' ppEffectCommit ((_duration / 10) / 2); 
						titleCut ['', 'BLACK', ((_duration / 10) / 2)]; 
						[1, ((_duration / 10) / 2), true, true ] call BIS_fnc_cinemaBorder;  
						waitUntil { camCommitted _camera };
						_camera cameraEffect ['terminate', 'back'];
						player enableSimulation true;
						 
						titleCut ['', 'BLACK IN', 4];
						_pic = "\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa"; 
						[ 
							'<img align="center" size="1.25" shadow="1" image=' + str(_pic) + ' /><br/><t color=' + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ' align="center" size="0.5" font="PuristaBold" shadow="1"> AEGIS: <t color="#FFFFFF">9.2.0</t></t>', 
							safeZoneXAbs+safeZoneWAbs-0.62,
							safeZoneY+safeZoneH-0.19, 
							99999, 
							4, 
							0, 
							3090 
						] spawn bis_fnc_dynamicText;							
						'dynamicBlur' ppEffectAdjust [0.0];    
						'dynamicBlur' ppEffectCommit 4; 
						8 fadeMusic 0;  
						sleep 8;
						player allowDamage true;
						playMusic '';  
						0 fadeMusic 1;
					} else {
						1 fadeSound 0;  
						1 fadeMusic 0;
						sleep 1;
						11 fadeSound 1;  
						11 fadeMusic 1;  
						playMusic _soundtrack;  
						titleCut ['', 'BLACK', 4];
						_pic = "\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa"; 
						[ 
							'<img align="center" size="1.25" shadow="1" image=' + str(_pic) + ' /><br/><t color=' + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ' align="center" size="0.5" font="PuristaBold" shadow="1"> AEGIS: <t color="#FFFFFF">9.2.0</t></t>', 
							safeZoneXAbs+safeZoneWAbs-0.62,
							safeZoneY+safeZoneH-0.19, 
							4, 
							0, 
							0.25, 
							3090 
						] spawn bis_fnc_dynamicText;
						sleep 4;  
						titleText [_quote,'PLAIN'];  
						titleFadeOut 7; 
						sleep 7; 


						_camera camPrepareTarget _entity;  
						_camera camCommitPrepared 0;  
						_camera camPrepareRelPos [0, (_radius / 4), _height];  
						_camera cameraEffect ['internal', 'back'];  
						_camera camCommitPrepared 0;  
						waitUntil { camCommitted _camera }; 


						_camera camPrepareRelPos [0, _radius, _height];  
						_camera camCommitPrepared 0;
						'dynamicBlur' ppEffectEnable true;  
						'dynamicBlur' ppEffectAdjust [6];  
						'dynamicBlur' ppEffectCommit 0;  
						'dynamicBlur' ppEffectAdjust [0.0];    
						'dynamicBlur' ppEffectCommit 4; 
						titleCut ['', 'BLACK IN', 4]; 
						[0, 4, true, true ] call BIS_fnc_cinemaBorder; 
						waitUntil { camCommitted _camera }; 
						 

						[ 
							[
								[(str(date select 0) + "-" + str(date select 1) + "-" + str(date select 2) + " " + str(date select 3) + ":" + str(date select 4)), "<t align = 'right' shadow = '1' font='PuristaLight'>%1</t><br/>"],
								["Grid: " + (mapGridPosition getPos _entity) + ", " + worldName, "<t align = 'right' shadow = '1' font='PuristaLight'>%1</t><br/>"],
								[_missionName, "<t align = 'right' shadow = '1' font='PuristaSemiBold'>%1</t><br/>"],
								[_missionAuthor, "<t align = 'right' shadow = '1' font='PuristaSemiBold'>%1</t><br/>"]
							],
							safeZoneX+1.83,  
							safeZoneY+safeZoneH-0.68
						] spawn BIS_fnc_typeText;
						uiSleep ((_duration / 10) / 2);
						sleep _duration;


						'dynamicBlur' ppEffectEnable true;  
						'dynamicBlur' ppEffectAdjust [6];  
						'dynamicBlur' ppEffectCommit 4; 
						titleCut ['', 'BLACK', 4]; 
						[1, 4, true, true ] call BIS_fnc_cinemaBorder;  
						sleep 4;
						_camera cameraEffect ['terminate', 'back'];
						player enableSimulation true;
						titleCut ['', 'BLACK IN', 4];
						_pic = "\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa"; 
						[ 
							'<img align="center" size="1.25" shadow="1" image=' + str(_pic) + ' /><br/><t color=' + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ' align="center" size="0.5" font="PuristaBold" shadow="1"> AEGIS: <t color="#FFFFFF">9.2.0</t></t>', 
							safeZoneXAbs+safeZoneWAbs-0.62,
							safeZoneY+safeZoneH-0.19, 
							99999, 
							4, 
							0, 
							3090 
						] spawn bis_fnc_dynamicText;
						'dynamicBlur' ppEffectAdjust [0.0];    
						'dynamicBlur' ppEffectCommit 4; 
						8 fadeMusic 0;  
						sleep 8;
						player allowDamage true;
						playMusic '';  
						0 fadeMusic 1;
					};
					cameraEffectEnableHUD false;
					camDestroy _camera;
				}] remoteExec ['bis_fnc_call',0,false];
				systemchat "[ LOG ] Cinematic Intro started for players!";
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_phaseTransitionModule = {
			["Phase Transition",[
				[
					"EDIT",
					["Objective Name:","Enter the name of the objective for the subtitle of the transition."],
					[""]
				],
				[
					"LIST",
					["Ambient Muisc:","Choose a soundtrack to pair with the Fade-In & Out"],
					[
						["LeadTrack01_F","LeadTrack01a_F","LeadTrack01b_F","LeadTrack01c_F","LeadTrack02_F","LeadTrack03_F","LeadTrack04_F","LeadTrack04a_F","LeadTrack05_F","LeadTrack06_F","AmbientTrack01_F","AmbientTrack01a_F","AmbientTrack01b_F","AmbientTrack03_F","AmbientTrack04a_F","AmbientTrack04_F","BackgroundTrack03_F","BackgroundTrack01_F","BackgroundTrack01a_F","BackgroundTrack02_F","Track01_Proteus","Track02_SolarPower","Track03_OnTheRoad","Track04_Underwater1","Track05_Underwater2","Track06_CarnHeli","Track07_ActionDark","Track08_Night_ambient","Track09_Night_percussions","Track10_StageB_action","Track11_StageB_stealth","Track12_StageC_action","Track13_StageC_negative","Track14_MainMenu","Track15_MainTheme","LeadTrack01_F_EPA","LeadTrack02_F_EPA","LeadTrack02a_F_EPA","LeadTrack02b_F_EPA","LeadTrack03_F_EPA","LeadTrack03a_F_EPA","EventTrack01_F_EPA","EventTrack01a_F_EPA","EventTrack02_F_EPA","EventTrack02a_F_EPA","EventTrack03_F_EPA","EventTrack03a_F_EPA","LeadTrack01_F_EPB","LeadTrack01a_F_EPB","LeadTrack02_F_EPB","LeadTrack02a_F_EPB","LeadTrack02b_F_EPB","LeadTrack03_F_EPB","LeadTrack03a_F_EPB","LeadTrack04_F_EPB","EventTrack01_F_EPB","EventTrack01a_F_EPB","EventTrack02_F_EPB","EventTrack02a_F_EPB","EventTrack03_F_EPB","EventTrack04_F_EPB","EventTrack04a_F_EPB","EventTrack03a_F_EPB","AmbientTrack01_F_EPB","BackgroundTrack01_F_EPB","LeadTrack01_F_EPC","LeadTrack02_F_EPC","LeadTrack03_F_EPC","LeadTrack04_F_EPC","LeadTrack05_F_EPC","LeadTrack06_F_EPC","LeadTrack06b_F_EPC","EventTrack01_F_EPC","EventTrack02_F_EPC","EventTrack02b_F_EPC","EventTrack03_F_EPC","BackgroundTrack01_F_EPC","BackgroundTrack02_F_EPC","BackgroundTrack03_F_EPC","BackgroundTrack04_F_EPC","C_EA_RadioBroadcast1","C_EA_RadioBroadcast2","C_EA_RadioMusic1","C_EA_RadioMusic2","RadioAmbient1","RadioAmbient2","RadioAmbient3","RadioAmbient4","RadioAmbient5","RadioAmbient6","RadioAmbient7","RadioAmbient8","RadioAmbient9","RadioAmbient10","RadioAmbient11","RadioAmbient12","RadioAmbient13","RadioAmbient14","RadioAmbient15","RadioAmbient16","RadioAmbient17","RadioAmbient18","RadioAmbient19","RadioAmbient20","RadioAmbient21","RadioAmbient22","RadioAmbient23","RadioAmbient24","RadioAmbient25","RadioAmbient26","RadioAmbient27","RadioAmbient28","RadioAmbient29","RadioAmbient30","Fallout","Defcon","Wasteland","SkyNet","MAD","radio_music","LeadTrack01_F_Curator","EventTrack01_F_Curator","EventTrack02_F_Curator","EventTrack03_F_Curator","LeadTrack01_F_Bootcamp","LeadTrack01b_F_Bootcamp","LeadTrack02_F_Bootcamp","LeadTrack03_F_Bootcamp","LeadTrack01_F_Heli","LeadTrack01_F_Mark","LeadTrack02_F_Mark","LeadTrack03_F_Mark","LeadTrack01_F_EXP","LeadTrack01a_F_EXP","LeadTrack01b_F_EXP","LeadTrack01c_F_EXP","LeadTrack02_F_EXP","LeadTrack03_F_EXP","LeadTrack04_F_EXP","AmbientTrack01_F_EXP","AmbientTrack01a_F_EXP","AmbientTrack01b_F_EXP","AmbientTrack02_F_EXP","AmbientTrack02a_F_EXP","AmbientTrack02b_F_EXP","AmbientTrack02c_F_EXP","AmbientTrack02d_F_EXP","LeadTrack01_F_Jets","LeadTrack02_F_Jets","EventTrack01_F_Jets","LeadTrack01_F_Malden","LeadTrack02_F_Malden","LeadTrack01_F_Orange","AmbientTrack02_F_Orange","EventTrack01_F_Orange","EventTrack02_F_Orange","AmbientTrack01_F_Orange","LeadTrack01_F_Tacops","LeadTrack02_F_Tacops","LeadTrack03_F_Tacops","LeadTrack04_F_Tacops","AmbientTrack01a_F_Tacops","AmbientTrack01b_F_Tacops","AmbientTrack02a_F_Tacops","AmbientTrack02b_F_Tacops","AmbientTrack03a_F_Tacops","AmbientTrack03b_F_Tacops","AmbientTrack04a_F_Tacops","AmbientTrack04b_F_Tacops","EventTrack01a_F_Tacops","EventTrack01b_F_Tacops","EventTrack02a_F_Tacops","EventTrack02b_F_Tacops","EventTrack03a_F_Tacops","EventTrack03b_F_Tacops","MainTheme_F_Tank","LeadTrack01_F_Tank","LeadTrack02_F_Tank","LeadTrack03_F_Tank","LeadTrack04_F_Tank","LeadTrack05_F_Tank","LeadTrack06_F_Tank","AmbientTrack01_F_Tank","Music_Menu_Contact","Music_Theme_Contact","Music_Credits_Contact","Music_Probe_Discovered","Music_Arrival","Music_Roaming_Night","Music_Roaming_Night_02","Music_Roaming_Night_Fragment_01_20s","Music_Roaming_Night_Fragment_01_30s","Music_Roaming_Night_Fragment_01_60s","Music_Roaming_Night_Fragment_02_30s","Music_Roaming_Night_Fragment_02_60s","Music_Roaming_Night_Fragment_03_60s","Music_Roaming_Day","Music_Roaming_Day_02","Music_Intro_ThisIsWarA","Music_Intro_02_MissionStart","Music_Intro_03_MissionStart","Music_Intro_02_Emp_Tension_01","Music_Outro2_Ending","Music_Hostile_Drone_Close_01","Music_Failed_Contact","Music_Failed_Contact_02","Music_Battle_Alien","Music_Battle_Human","Music_Russian_Theme","Music_Battle_Human_Loop","Music_Battle_Alien_Loop_01","Music_Battle_Alien_Loop_02","Music_Battle_Alien_Loop_03","Music_Suspended_Loop_01","Music_Tension_Loop_01","Music_Freeroam_01_MissionStart","Music_Freeroam_02_MissionStart","Music_Freeroam_RootExtract","Music_FreeRoam_Battle_Alien_Loop_01","Music_FreeRoam_Battle_Alien_Loop_02","Music_FreeRoam_Battle_Alien_Loop_03","Music_FreeRoam_Suspended_Loop_01","Music_FreeRoam_Tension_Loop_01","Music_FreeRoam_Russian_Theme_Loop","Music_FreeRoam_Russian_Theme","Music_FreeRoam_Battle_Alien","Music_FreeRoam_Battle_Human","Music_FreeRoam_Battle_Human_Loop","Music_Freeroam_End","anomaly_07_05_v1","anomaly_07_05_v2","LeadTrack01_F_6th_Anniversary_Remix","Music_Default","Track_C_01","Track_C_02","Track_C_03","Track_C_04","Track_C_05","Track_C_06","Track_C_07","Track_C_08","Track_C_09","Track_C_10","Track_C_11","Track_C_12","Track_C_13","Track_C_14","Track_C_15","Track_C_16","Track_C_17","Track_C_18","Track_C_19","Track_C_20","Track_D_01","Track_D_02","Track_D_03","Track_M_01","Track_M_02","Track_M_03","News_BackOnline","News_CSAT_convoy_attacked","News_Infection01","News_Jingle","News_outbreak_Boise","News_outbreak_Galili","News_outbreak_Oumere","News_outbreak_Savaka","News_rebels_attack_Lugganville","News_weapons_prohibited","News_checkpoints","News_aircraft","News_arrest","News_depot_fail","News_depot_success","News_depot_success_alone","News_execution","News_hostels","News_house_destroyed","News_idap","News_malaria_boise_secured","News_malaria_galili_secured","News_malaria_luganville_secured","News_malaria_savaka_secured","News_power_plant","News_radar_destroyed","News_rescued","News_sugar_company","News_weapons","Track_O_01","Track_O_02","Track_O_03","Track_O_04","Track_O_05","Track_O_06","Track_O_07","Track_O_08","Track_O_09","Track_O_10","Track_O_11","Track_O_12","Track_O_13","Track_O_14","Track_O_15","Track_O_16","Track_P_01","Track_P_02","Track_P_03","Track_P_04","Track_P_05","Track_P_06","Track_P_07","Track_P_08","Track_P_09","Track_P_10","Track_P_11","Track_P_12","Track_P_13","Track_P_14","Track_P_15","Track_P_16","Track_P_17","Track_P_18","Track_R_01","Track_R_02","Track_R_03","Track_R_04","Track_R_05","Track_R_06","Track_R_07","Track_R_08","Track_R_09","Track_R_10","Track_R_11","Track_R_12","Track_R_13","Track_R_14","Track_R_15","Track_R_16","Track_R_17","Track_R_18","Track_R_19","Track_R_20","Track_R_21","Track_R_22","Track_R_23","Track_R_24","OM_Music01","OM_Music02","OM_Music03","OM_Intro"],
						[
							["LeadTrack01_F","",""],["LeadTrack01a_F","",""],["LeadTrack01b_F","",""],["LeadTrack01c_F","",""],["LeadTrack02_F","",""],["LeadTrack03_F","",""],["LeadTrack04_F","",""],["LeadTrack04a_F","",""],["LeadTrack05_F","",""],["LeadTrack06_F","",""],["AmbientTrack01_F","",""],["AmbientTrack01a_F","",""],["AmbientTrack01b_F","",""],["AmbientTrack03_F","",""],["AmbientTrack04a_F","",""],["AmbientTrack04_F","",""],["BackgroundTrack03_F","",""],["BackgroundTrack01_F","",""],["BackgroundTrack01a_F","",""],["BackgroundTrack02_F","",""],["Track01_Proteus","",""],["Track02_SolarPower","",""],["Track03_OnTheRoad","",""],["Track04_Underwater1","",""],["Track05_Underwater2","",""],["Track06_CarnHeli","",""],["Track07_ActionDark","",""],["Track08_Night_ambient","",""],["Track09_Night_percussions","",""],["Track10_StageB_action","",""],["Track11_StageB_stealth","",""],["Track12_StageC_action","",""],["Track13_StageC_negative","",""],["Track14_MainMenu","",""],["Track15_MainTheme","",""],["LeadTrack01_F_EPA","",""],["LeadTrack02_F_EPA","",""],["LeadTrack02a_F_EPA","",""],["LeadTrack02b_F_EPA","",""],["LeadTrack03_F_EPA","",""],["LeadTrack03a_F_EPA","",""],["EventTrack01_F_EPA","",""],["EventTrack01a_F_EPA","",""],["EventTrack02_F_EPA","",""],["EventTrack02a_F_EPA","",""],["EventTrack03_F_EPA","",""],["EventTrack03a_F_EPA","",""],["LeadTrack01_F_EPB","",""],["LeadTrack01a_F_EPB","",""],["LeadTrack02_F_EPB","",""],["LeadTrack02a_F_EPB","",""],["LeadTrack02b_F_EPB","",""],["LeadTrack03_F_EPB","",""],["LeadTrack03a_F_EPB","",""],["LeadTrack04_F_EPB","",""],["EventTrack01_F_EPB","",""],["EventTrack01a_F_EPB","",""],["EventTrack02_F_EPB","",""],["EventTrack02a_F_EPB","",""],["EventTrack03_F_EPB","",""],["EventTrack04_F_EPB","",""],["EventTrack04a_F_EPB","",""],["EventTrack03a_F_EPB","",""],["AmbientTrack01_F_EPB","",""],["BackgroundTrack01_F_EPB","",""],["LeadTrack01_F_EPC","",""],["LeadTrack02_F_EPC","",""],["LeadTrack03_F_EPC","",""],["LeadTrack04_F_EPC","",""],["LeadTrack05_F_EPC","",""],["LeadTrack06_F_EPC","",""],["LeadTrack06b_F_EPC","",""],["EventTrack01_F_EPC","",""],["EventTrack02_F_EPC","",""],["EventTrack02b_F_EPC","",""],["EventTrack03_F_EPC","",""],["BackgroundTrack01_F_EPC","",""],["BackgroundTrack02_F_EPC","",""],["BackgroundTrack03_F_EPC","",""],["BackgroundTrack04_F_EPC","",""],["C_EA_RadioBroadcast1","",""],["C_EA_RadioBroadcast2","",""],["C_EA_RadioMusic1","",""],["C_EA_RadioMusic2","",""],["RadioAmbient1","",""],["RadioAmbient2","",""],["RadioAmbient3","",""],["RadioAmbient4","",""],["RadioAmbient5","",""],["RadioAmbient6","",""],["RadioAmbient7","",""],["RadioAmbient8","",""],["RadioAmbient9","",""],["RadioAmbient10","",""],["RadioAmbient11","",""],["RadioAmbient12","",""],["RadioAmbient13","",""],["RadioAmbient14","",""],["RadioAmbient15","",""],["RadioAmbient16","",""],["RadioAmbient17","",""],["RadioAmbient18","",""],["RadioAmbient19","",""],["RadioAmbient20","",""],["RadioAmbient21","",""],["RadioAmbient22","",""],["RadioAmbient23","",""],["RadioAmbient24","",""],["RadioAmbient25","",""],["RadioAmbient26","",""],["RadioAmbient27","",""],["RadioAmbient28","",""],["RadioAmbient29","",""],["RadioAmbient30","",""],["Fallout","",""],["Defcon","",""],["Wasteland","",""],["SkyNet","",""],["MAD","",""],["radio_music","",""],["LeadTrack01_F_Curator","",""],["EventTrack01_F_Curator","",""],["EventTrack02_F_Curator","",""],["EventTrack03_F_Curator","",""],["LeadTrack01_F_Bootcamp","",""],["LeadTrack01b_F_Bootcamp","",""],["LeadTrack02_F_Bootcamp","",""],["LeadTrack03_F_Bootcamp","",""],["LeadTrack01_F_Heli","",""],["LeadTrack01_F_Mark","",""],["LeadTrack02_F_Mark","",""],["LeadTrack03_F_Mark","",""],["LeadTrack01_F_EXP","",""],["LeadTrack01a_F_EXP","",""],["LeadTrack01b_F_EXP","",""],["LeadTrack01c_F_EXP","",""],["LeadTrack02_F_EXP","",""],["LeadTrack03_F_EXP","",""],["LeadTrack04_F_EXP","",""],["AmbientTrack01_F_EXP","",""],["AmbientTrack01a_F_EXP","",""],["AmbientTrack01b_F_EXP","",""],["AmbientTrack02_F_EXP","",""],["AmbientTrack02a_F_EXP","",""],["AmbientTrack02b_F_EXP","",""],["AmbientTrack02c_F_EXP","",""],["AmbientTrack02d_F_EXP","",""],["LeadTrack01_F_Jets","",""],["LeadTrack02_F_Jets","",""],["EventTrack01_F_Jets","",""],["LeadTrack01_F_Malden","",""],["LeadTrack02_F_Malden","",""],["LeadTrack01_F_Orange","",""],["AmbientTrack02_F_Orange","",""],["EventTrack01_F_Orange","",""],["EventTrack02_F_Orange","",""],["AmbientTrack01_F_Orange","",""],["LeadTrack01_F_Tacops","",""],["LeadTrack02_F_Tacops","",""],["LeadTrack03_F_Tacops","",""],["LeadTrack04_F_Tacops","",""],["AmbientTrack01a_F_Tacops","",""],["AmbientTrack01b_F_Tacops","",""],["AmbientTrack02a_F_Tacops","",""],["AmbientTrack02b_F_Tacops","",""],["AmbientTrack03a_F_Tacops","",""],["AmbientTrack03b_F_Tacops","",""],["AmbientTrack04a_F_Tacops","",""],["AmbientTrack04b_F_Tacops","",""],["EventTrack01a_F_Tacops","",""],["EventTrack01b_F_Tacops","",""],["EventTrack02a_F_Tacops","",""],["EventTrack02b_F_Tacops","",""],["EventTrack03a_F_Tacops","",""],["EventTrack03b_F_Tacops","",""],["MainTheme_F_Tank","",""],["LeadTrack01_F_Tank","",""],["LeadTrack02_F_Tank","",""],["LeadTrack03_F_Tank","",""],["LeadTrack04_F_Tank","",""],["LeadTrack05_F_Tank","",""],["LeadTrack06_F_Tank","",""],["AmbientTrack01_F_Tank","",""],["Music_Menu_Contact","",""],["Music_Theme_Contact","",""],["Music_Credits_Contact","",""],["Music_Probe_Discovered","",""],["Music_Arrival","",""],["Music_Roaming_Night","",""],["Music_Roaming_Night_02","",""],["Music_Roaming_Night_Fragment_01_20s","",""],["Music_Roaming_Night_Fragment_01_30s","",""],["Music_Roaming_Night_Fragment_01_60s","",""],["Music_Roaming_Night_Fragment_02_30s","",""],["Music_Roaming_Night_Fragment_02_60s","",""],["Music_Roaming_Night_Fragment_03_60s","",""],["Music_Roaming_Day","",""],["Music_Roaming_Day_02","",""],["Music_Intro_ThisIsWarA","",""],["Music_Intro_02_MissionStart","",""],["Music_Intro_03_MissionStart","",""],["Music_Intro_02_Emp_Tension_01","",""],["Music_Outro2_Ending","",""],["Music_Hostile_Drone_Close_01","",""],["Music_Failed_Contact","",""],["Music_Failed_Contact_02","",""],["Music_Battle_Alien","",""],["Music_Battle_Human","",""],["Music_Russian_Theme","",""],["Music_Battle_Human_Loop","",""],["Music_Battle_Alien_Loop_01","",""],["Music_Battle_Alien_Loop_02","",""],["Music_Battle_Alien_Loop_03","",""],["Music_Suspended_Loop_01","",""],["Music_Tension_Loop_01","",""],["Music_Freeroam_01_MissionStart","",""],["Music_Freeroam_02_MissionStart","",""],["Music_Freeroam_RootExtract","",""],["Music_FreeRoam_Battle_Alien_Loop_01","",""],["Music_FreeRoam_Battle_Alien_Loop_02","",""],["Music_FreeRoam_Battle_Alien_Loop_03","",""],["Music_FreeRoam_Suspended_Loop_01","",""],["Music_FreeRoam_Tension_Loop_01","",""],["Music_FreeRoam_Russian_Theme_Loop","",""],["Music_FreeRoam_Russian_Theme","",""],["Music_FreeRoam_Battle_Alien","",""],["Music_FreeRoam_Battle_Human","",""],["Music_FreeRoam_Battle_Human_Loop","",""],["Music_Freeroam_End","",""],["anomaly_07_05_v1","",""],["anomaly_07_05_v2","",""],["LeadTrack01_F_6th_Anniversary_Remix","",""],["Music_Default","",""],["Track_C_01","",""],["Track_C_02","",""],["Track_C_03","",""],["Track_C_04","",""],["Track_C_05","",""],["Track_C_06","",""],["Track_C_07","",""],["Track_C_08","",""],["Track_C_09","",""],["Track_C_10","",""],["Track_C_11","",""],["Track_C_12","",""],["Track_C_13","",""],["Track_C_14","",""],["Track_C_15","",""],["Track_C_16","",""],["Track_C_17","",""],["Track_C_18","",""],["Track_C_19","",""],["Track_C_20","",""],["Track_D_01","",""],["Track_D_02","",""],["Track_D_03","",""],["Track_M_01","",""],["Track_M_02","",""],["Track_M_03","",""],["News_BackOnline","",""],["News_CSAT_convoy_attacked","",""],["News_Infection01","",""],["News_Jingle","",""],["News_outbreak_Boise","",""],["News_outbreak_Galili","",""],["News_outbreak_Oumere","",""],["News_outbreak_Savaka","",""],["News_rebels_attack_Lugganville","",""],["News_weapons_prohibited","",""],["News_checkpoints","",""],["News_aircraft","",""],["News_arrest","",""],["News_depot_fail","",""],["News_depot_success","",""],["News_depot_success_alone","",""],["News_execution","",""],["News_hostels","",""],["News_house_destroyed","",""],["News_idap","",""],["News_malaria_boise_secured","",""],["News_malaria_galili_secured","",""],["News_malaria_luganville_secured","",""],["News_malaria_savaka_secured","",""],["News_power_plant","",""],["News_radar_destroyed","",""],["News_rescued","",""],["News_sugar_company","",""],["News_weapons","",""],["Track_O_01","",""],["Track_O_02","",""],["Track_O_03","",""],["Track_O_04","",""],["Track_O_05","",""],["Track_O_06","",""],["Track_O_07","",""],["Track_O_08","",""],["Track_O_09","",""],["Track_O_10","",""],["Track_O_11","",""],["Track_O_12","",""],["Track_O_13","",""],["Track_O_14","",""],["Track_O_15","",""],["Track_O_16","",""],["Track_P_01","",""],["Track_P_02","",""],["Track_P_03","",""],["Track_P_04","",""],["Track_P_05","",""],["Track_P_06","",""],["Track_P_07","",""],["Track_P_08","",""],["Track_P_09","",""],["Track_P_10","",""],["Track_P_11","",""],["Track_P_12","",""],["Track_P_13","",""],["Track_P_14","",""],["Track_P_15","",""],["Track_P_16","",""],["Track_P_17","",""],["Track_P_18","",""],["Track_R_01","",""],["Track_R_02","",""],["Track_R_03","",""],["Track_R_04","",""],["Track_R_05","",""],["Track_R_06","",""],["Track_R_07","",""],["Track_R_08","",""],["Track_R_09","",""],["Track_R_10","",""],["Track_R_11","",""],["Track_R_12","",""],["Track_R_13","",""],["Track_R_14","",""],["Track_R_15","",""],["Track_R_16","",""],["Track_R_17","",""],["Track_R_18","",""],["Track_R_19","",""],["Track_R_20","",""],["Track_R_21","",""],["Track_R_22","",""],["Track_R_23","",""],["Track_R_24","",""],["OM_Music01","",""],["OM_Music02","",""],["OM_Music03","",""],["OM_Intro","",""]
						],
						0
					]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_missionName","_soundtrack"];
				_entity = player;
				[[_missionName, _soundtrack],{
					params ["_missionName","_soundtrack"];
					player allowDamage false;
					1 fadeMusic 0;
					sleep 1;
					playMusic _soundtrack;
					4 fadeMusic 1;
					_pic = "\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa"; 
					[ 
						'<img align="center" size="1.25" shadow="1" image=' + str(_pic) + ' /><br/><t color=' + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ' align="center" size="0.5" font="PuristaBold" shadow="1"> AEGIS: <t color="#FFFFFF">9.2.0</t></t>', 
						safeZoneXAbs+safeZoneWAbs-0.62,
						safeZoneY+safeZoneH-0.19, 
						5, 
						0, 
						0.25, 
						3090 
					] spawn bis_fnc_dynamicText;
					[0, 4, true, false ] call BIS_fnc_cinemaBorder;
					
					sleep 5;
					[ 
						'<t color="#FFFFFF" align="right" size="1" font="PuristaBold" shadow="1">' + _missionName + '</t>', 
						safeZoneXAbs+safeZoneWAbs-1.031, 
						safeZoneY+safeZoneH-0.19, 
						6, 
						6, 
						0.3, 
						3091 
					] spawn bis_fnc_dynamicText;
					sleep 6;
					
					[1, 4, true, false ] call BIS_fnc_cinemaBorder;
					_pic = "\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa"; 
					[ 
						'<img align="center" size="1.25" shadow="1" image=' + str(_pic) + ' /><br/><t color=' + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ' align="center" size="0.5" font="PuristaBold" shadow="1"> AEGIS: <t color="#FFFFFF">9.2.0</t></t>', 
						safeZoneXAbs+safeZoneWAbs-0.62,
						safeZoneY+safeZoneH-0.19, 
						99999, 
						5, 
						0, 
						3090 
					] spawn bis_fnc_dynamicText;
					8 fadeMusic 0;
					sleep 8;
					player allowDamage true;
					playMusic "";
					0 fadeMusic 1;
				}] remoteExec ['bis_fnc_call',0,false];
				systemchat "[ LOG ] Cinematic Intro started for players!";
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_playerNamesModule = {
			[[],{
				fnc_color = {
				private ["_unit","_he","_b","_ha","_l","_color"];
				_unit = _this select 0;

				_he = _unit getHitPointDamage "HitHead";
				_b = _unit getHitPointDamage "HitBody";
				_ha =_unit getHitPointDamage "HitHands";
				_l = _unit getHitPointDamage "HitLegs";

				_color = [];
					if(((_he) == 0) || ((_b) == 0) || ((_ha) == 0) || ((_l) == 0)) then  
					{
					   _color set [0,0];
					   _color set [1,1];
					   _color set [2,0];
					   _color set [3,1];
					};
					
					if(((_he) >0.1) || ((_b) >0.1) || ((_ha) >0.1) || ((_l) >0.1)) then  
					{
					  _color set [0,1];
					  _color set [1,0.5];
					  _color set [2,0.5];
					  _color set [3,1];
					};
					
					if(((_b) >0.6) || ((_ha) >0.6) || ((_l) >0.6)) then  
					{
					  _color set [0,1];
					  _color set [1,0];
					  _color set [2,0];
					  _color set [3,1];
					};
					
				_color	
				};
				
				removeMissionEventHandler ['Draw3D', (player getVariable ['LM_MEH_playerNames',-1])];
				_mehID = addMissionEventHandler ["Draw3D",
					{
						{
							if((player!=_x)&&([(side _x), playerSide] call BIS_fnc_sideIsFriendly)) then 
							{
								if(_x distance player < 1000) then
								{
									if((((vehicle _x)!=_x)&&(_x==effectiveCommander (vehicle _x)))||((vehicle _x)==_x)) then
									{
										drawIcon3D 
										[
										  ([_x, "texture"] call BIS_fnc_rankParams),
											([side _x, false] call BIS_fnc_sideColor),
											if(((vehicle _x)!=_x)&&(_x==effectiveCommander (vehicle _x))) then {(vehicle _x) modelToWorld [0,0,3]}
											else 
											{if((vehicle _x)==_x) then {_x modelToWorld [0,0,2.3]}},
											if(_x distance player > 500) then { 0.05 } else { if(_x distance player > 100) then{ 0.10 } else { 0.25 }},
											if(_x distance player > 500) then { 0.05 } else { if(_x distance player > 100) then { 0.10 } else { 0.25 }},
											0,
											if(_x distance player > 500 ) then{""} else{
											if(((_x getHitPointDamage "HitHead") >0.50) || ((_x getHitPointDamage "HitBody") >0.50) || ((_x getHitPointDamage "HitHands") >0.50) || ((_x getHitPointDamage "HitLegs") >0.50)) then
											{format ["%1 [Injured]",name _x]}else{format ["%1",name _x]}},
										   1,
											if(_x distance player > 250) then { 0.01 } else {if(_x distance player > 100) then { 0.02} else {0.03}},
										   "PuristaMedium"
										];
									};
								};
							};
						} forEach playableUnits;
					}
				];
				player setVariable ['LM_MEH_playerNames',_mehID];
				titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/><t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Floating 3D Names</t> for players now visible!</t>", "PLAIN DOWN", -1, false, true];
			}] remoteExec ["bis_fnc_call",0,true];
			systemchat "[ LOG ] Floating 3D Names for players now visible!";
		};
		
		LM_fnc_earPlugsModule = {
			[[],{
				waitUntil {!isNull (findDisplay 46) && alive player};
				(findDisplay 46) displayRemoveEventHandler ['KeyDown',(player getVariable ['LM_DEH_earPlugs',-1])];
				1 fadeSound 1;
				player setVariable ['isEarplugs',false];
				_dehID = (findDisplay 46) displayAddEventHandler ["KeyDown", {
					if (((_this select 1) == 6) and (_this select 3)) then {
						_isEarplugsIn = player getVariable 'isEarplugs';
						if(not _isEarplugsIn) then {
							titleText ["<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + " size='2'font='PuristaBold'>EARPLUGS IN, PRESS 'CTRL+5' TO TAKE OUT</t>", "PLAIN DOWN", -1, false, true];	
							1 fadeSound 0.1;
							player setVariable ['isEarplugs',true];
							[ 
								format['<img align="center" size="1.25" shadow="1" image="%1" /><br/><t color="#FFFFFF" align="center" size="0.5" font="PuristaBold" shadow="1">EARPLUGS IN</t>',"a3\ui_f\data\igui\rscingameui\rscunitinfoairrtdfull\ico_cpt_sound_off_ca.paa"], 
								safeZoneXAbs-0.38,
								safeZoneY+safeZoneH-0.19, 
								99999, 
								2, 
								0, 
								3092
							] spawn bis_fnc_dynamicText;
						} else {	
							titleText ["<t color='#FFFFFF' size='2'font='PuristaBold'>EARPLUGS OUT</t>", "PLAIN DOWN", -1, false, true];
							1 fadeSound 1;
							player setVariable ['isEarplugs',false];
							[ 
								'', 
								safeZoneXAbs-0.38,
								safeZoneY+safeZoneH-0.19, 
								99999, 
								2, 
								0, 
								3092 
							] spawn bis_fnc_dynamicText;
						};
					};
				}];
				player setVariable ['LM_DEH_earPlugs',_dehID];
				titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>Press '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">CTRL+5</t>' to use <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">earplugs</t>!</t>", "PLAIN DOWN", -1, false, true];
				["IntelAdded", ["• Earplugs Added! 
 
				<br /><font size='15' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Earplugs
				<br />
				<br /><font size='12' color='#FFFFFF'>This feature lowers your surrounding envrionmental sounds by half, allowing for better comprehension of voice chat and the game music.
				<br />
				<br /><font size='14' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">How to Enable:
				<br />
				<br /><font size='12' color='#FFFFFF'>• Press '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">CTRL+5<font size='12' color='#FFFFFF'>' to enable Earplugs!
				<br />
				<br /><font size='14' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">How to Disable:
				<br />
				<br /><font size='12' color='#FFFFFF'>• Once enabled, press '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">CTRL+5<font size='12' color='#FFFFFF'>' again to disable Earplugs!
				"]] call BIS_fnc_showNotification;
				
				if ((player getVariable ["LM_keybindings_height_earPlugs", 2000]) == 2000) then {
					player setVariable ["LM_keybindings_height", ((player getVariable ["LM_keybindings_height", 2000])+2000)];
					player setVariable ["LM_keybindings_height_earPlugs", (player getVariable "LM_keybindings_height")];
					findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
						_this select 0 drawIcon [
							"\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa",
							[1,1,1,1],
							[worldSize+(500/(("Altis" call BIS_fnc_mapSize) / (worldSize))),worldSize-((player getVariable ["LM_keybindings_height_earPlugs",2000])/(("Altis" call BIS_fnc_mapSize) / (worldSize))),0],
							0,
							0,
							0,
							"• Press 'CTRL+5' to enable Earplugs",
							1,
							(1.75 / (6.4 * worldSize / 8192 * ctrlMapScale ((findDisplay 12) displayCtrl 51)))/(("Altis" call BIS_fnc_mapSize) / (worldSize)),
							"PuristaBold",
							"right"
						]
					}];
				};
			}] remoteExec ['bis_fnc_call',0,"LM_JIP_earPlugs"]; 
			systemchat "[ LOG ] Press 'CTRL+5' to use earplugs";
		};
		
		LM_fnc_holsterWeaponModule = {
			[[],{
				waitUntil {!isNull (findDisplay 46) && alive player};
				(findDisplay 46) displayRemoveEventHandler ['KeyDown',(player getVariable ['LM_DEH_holsterWeapon',-1])];
				player action ["SWITCHWEAPON",player,player,0];
				_dehID = (findDisplay 46) displayAddEventHandler ["KeyDown", {
					if (((_this select 1) == 7) and (_this select 3)) then {
						player action ["SWITCHWEAPON",player,player,-1];
						titleText ["<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + " size='2'font='PuristaBold'>WEAPON HOLSTERED, PRESS '1, 2, 3, or B' TO UNHOLSTER</t>", "PLAIN DOWN", -1, false, true];
					};
				}];
				player setVariable ['LM_DEH_holsterWeapon',_dehID];
				titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>Press '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">CTRL+6</t>' to <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">holster your weapon</t>!</t>", "PLAIN DOWN", -1, false, true];
				["IntelAdded", ["• Holster Weapon Added! 
 
				<br /><font size='15' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Holster Weapon
				<br />
				<br /><font size='12' color='#FFFFFF'>This feature allows you to place your currently equipped weapon in its holster or on your back. Allowing for you to move faster without a weapon drawn.
				<br />
				<br /><font size='14' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">How to Enable:
				<br />
				<br /><font size='12' color='#FFFFFF'>• Press '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">CTRL+6<font size='12' color='#FFFFFF'>' to Holster Weapon!
				<br />
				<br /><font size='14' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">How to Disable:
				<br />
				<br /><font size='12' color='#FFFFFF'>• Once enabled, press '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">CTRL+6<font size='12' color='#FFFFFF'>' again to draw your Weapon!
				"]] call BIS_fnc_showNotification;
				
				if ((player getVariable ["LM_keybindings_height_holsterWeapon", 2000]) == 2000) then {
					player setVariable ["LM_keybindings_height", ((player getVariable ["LM_keybindings_height", 2000])+2000)];
					player setVariable ["LM_keybindings_height_holsterWeapon", (player getVariable "LM_keybindings_height")];
					findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
						_this select 0 drawIcon [
							"\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa",
							[1,1,1,1],
							[worldSize+(500/(("Altis" call BIS_fnc_mapSize) / (worldSize))),worldSize-((player getVariable ["LM_keybindings_height_holsterWeapon",2000])/(("Altis" call BIS_fnc_mapSize) / (worldSize))),0],
							0,
							0,
							0,
							"• Press 'CTRL+6' to Holster Weapon",
							1,
							(1.75 / (6.4 * worldSize / 8192 * ctrlMapScale ((findDisplay 12) displayCtrl 51)))/(("Altis" call BIS_fnc_mapSize) / (worldSize)),
							"PuristaBold",
							"right"
						]
					}];
				};
			}] remoteExec ['bis_fnc_call',0,"LM_JIP_holsterWeapon"]; 
			systemchat "[ LOG ] Press 'CTRL+6' to holster weapon";
		};
		
		LM_fnc_debugConsole = {
			[[], {
				LM_fnc_runInput = { 
					if (isServer) exitWith 
					{ 
					  
					 if (!isMultiplayer) exitWith 
					 { 
					  [[_this select 1], {(parsingNamespace getVariable ["BIS_RscDebugConsoleExpressionResultCtrl", controlNull]) ctrlSetText str ([nil] apply {[] call (_this select 0)} param [0, text ""])}] remoteExec ["call", 0]; 
					 }; 
					  
					  
					  
					 if (!isRemoteExecuted || isRemoteExecutedJIP) exitWith 
					 { 
					  ["This function should not be called stand alone or from JIP queue"] call (missionNamespace getVariable "BIS_fnc_error"); 
					 }; 
					  
					  
					 if ([_this select 0] in [[1]]) exitWith 
					 { 
					  [[_this select 1, remoteExecutedOwner], {(parsingNamespace getVariable ["BIS_RscDebugConsoleExpressionResultCtrl", controlNull]) ctrlSetText ([nil, str ([nil] apply {[] call (_this select 0)} param [0, text ""])] select ([_this select 1] in [[clientOwner]]))}] remoteExec ["call", 0]; 
					 }; 
					  
					  
					 if ([_this select 0] in [[0]]) exitWith 
					 { 
					  [[_this select 1], {(parsingNamespace getVariable ["BIS_RscDebugConsoleExpressionResultCtrl", controlNull]) ctrlSetText str ([nil] apply {[] call (_this select 0)} param [0, text ""])}] remoteExec ["call", remoteExecutedOwner]; 
					 }; 
					 
					  
					 if ([_this select 0] in [[2]]) exitWith 
					 { 
					  [[_this select 1, remoteExecutedOwner], {[str ([nil] apply {[] call (_this select 0)} param [0, text ""]), {(parsingNamespace getVariable ["BIS_RscDebugConsoleExpressionResultCtrl", controlNull]) ctrlSetText _this}] remoteExec ["call", _this select 1]}] remoteExec ["call", 2]; 
					 }; 
					  
					 ["Unsupported remoteExec target: %1", _this select 1] call (missionNamespace getVariable "BIS_fnc_error"); 
					  
					};
				};
			}] remoteExec ['bis_fnc_call',2];
		
			LM_codeDeComment = {
				params ["_input"];
				private _strings = [];
				private _start = -1;
				
				while {_start = _input find "//"; _start > -1} do 
				{	
					_input select [0, _start] call
					{
						private _badQuotes = _this call 
						{
							private _qtsGood = [];
							private _qtsInfo = [];
							private _arr = toArray _this;
							
							{
								_qtsGood pushBack ((count _arr - count (_arr - [_x])) % 2 == 0);
								_qtsInfo pushBack [_this find toString [_x], _x];
							} 
							forEach [34, 39];
							
							if (_qtsGood isEqualTo [true, true]) exitWith {0};
							
							_qtsInfo sort true;
							_qtsInfo select 0 select 1
						};

						if (_badQuotes > 0) exitWith
						{ 
							_last = _input select [_start] find toString [_badQuotes];
							
							if (_last < 0) exitWith 
							{
								_strings = [_input];
								_input = "";
							};
							
							_last = _start + _last + 1;
							_strings pushBack (_input select [0, _last]);
						
							_input = _input select [_last];
						};

						_strings pushBack _this;
						
						_input = _input select [_start];
						
						private _end = _input find toString [10];
						
						if (_end < 0) exitWith {_input = ""};
						
						_input = _input select [_end + 1];
					};
				};
				
				_input = (_strings joinString "") + _input;
				_input
			};
		
			LM_saveExpression = {
				params ["_expressionCtrl"];
				private _currentExpression = ctrlText _expressionCtrl;
				private _lastExpression = profileNamespace getVariable ["RscDebugConsole_expression", ""];
				private _expressionHistory = profileNamespace getVariable ["RscDebugConsole_expressionHistory", []];
				
				if (_lastExpression isEqualTo "" || _currentExpression isEqualTo _lastExpression) then
				{
					_expressionHistory set [count _expressionHistory - 1, _currentExpression];
				}
				else
				{
					if (_expressionHistory pushBack _currentExpression >= 10) then { _expressionHistory deleteRange [0, count _expressionHistory - 10] };
				};
				
				profileNamespace setVariable ["RscDebugConsole_expression", _currentExpression];
				_parentDisplay setVariable ["RscDebugConsole_expressionHistory_index", count _expressionHistory - 1];
			};
		
			LM_expressionResult = {
				params ["_parentDisplay","_buttonType"];
				_backgroundColor = [0,0,0,0];
				switch _buttonType do {
					case 0: {_backgroundColor = [0,0,1,0.25];};
					case 1: {_backgroundColor = [1,0,0,0.25];};
					case 2: {_backgroundColor = [0,1,0,0.25];};
					case 3: {_backgroundColor = [0,0,0,0];};
				};
				(_parentDisplay displayCtrl 13191) ctrlSetBackgroundColor _backgroundColor;
				(parsingNamespace getVariable ["BIS_RscDebugConsoleExpressionResultCtrl", controlNull]) ctrlSetText ((parsingNamespace getVariable "BIS_RscDebugConsoleExpressionResultHistory") select 0);
			};
			
			disableSerialization;
			createDialog 'RscDisplayEmpty';
		    _parentDisplay = findDisplay -1;
			_RSCDEBUGCONSOLE = _parentDisplay ctrlCreate ["RscDebugConsole", -1];
			_RSCDEBUGCONSOLE ctrlSetPosition [0.17,0.0599999,0.66,1];
			
			
			_RSCDEBUGCONSOLE_LINK = _parentDisplay ctrlCreate ["RscHTML", -1, _RSCDEBUGCONSOLE];
			_RSCDEBUGCONSOLE_LINK htmlLoad (["\A3\Ui_f\data\html\RscDebugConsole.html", "\A3\Ui_f\data\html\RscDebugConsoleCDC.html"] select (!isNull getMissionConfig "CfgDisabledCommands" && {count getMissionConfig "CfgDisabledCommands" > 0}));
			_RSCDEBUGCONSOLE_LINK ctrlSetPosition [0.21,0,0.45,0.04];
			_RSCDEBUGCONSOLE_LINK ctrlSetText "";
			_RSCDEBUGCONSOLE_LINK ctrlSetBackgroundColor [0,0,0,0];
			_RSCDEBUGCONSOLE_LINK ctrlSetTextColor [1,1,1,1];
			_RSCDEBUGCONSOLE_LINK ctrlCommit 0;
			
			
			_RSCDEBUGCONSOLE_EXPRESSION = _parentDisplay displayCtrl 12284;
			_RSCDEBUGCONSOLE_EXPRESSION ctrlSetText (profileNamespace getVariable ["RscDebugConsole_expression", ""]);
			_RSCDEBUGCONSOLE_EXPRESSION ctrlAddEventHandler ["KeyDown", {
				params ["_displayOrControl", "_key", "_shift", "_ctrl", "_alt"];
				[_displayOrControl] call LM_saveExpression;
			}];
			_RSCDEBUGCONSOLE_EXPRESSION ctrlCommit 0;
			
			
			_RSCDEBUGCONSOLE_BUTTONCODEPERFORMANCE = _parentDisplay displayCtrl 13284;
			_RSCDEBUGCONSOLE_BUTTONCODEPERFORMANCE ctrlAddEventHandler ["ButtonClick", {
				_input = [(ctrlText ((ctrlParent (_this select 0)) displayCtrl 12284))] call LM_codeDeComment;
				
				[_input, nil, nil, (ctrlParent (_this select 0))] spawn BIS_fnc_codePerformance;
				[(ctrlParent (_this select 0)) displayCtrl 12284] call LM_saveExpression;
				[(ctrlParent (_this select 0)), 3] call LM_expressionResult;
			}];
			_RSCDEBUGCONSOLE_BUTTONCODEPERFORMANCE ctrlCommit 0;
			
			_RSCDEBUGCONSOLE_BUTTONEXECUTESERVER = _parentDisplay displayCtrl 13286;
			_RSCDEBUGCONSOLE_BUTTONEXECUTESERVER ctrlAddEventHandler ["ButtonClick", {
				_input = [(ctrlText ((ctrlParent (_this select 0)) displayCtrl 12284))] call LM_codeDeComment;
				
				[[2, compile _input],{[(_this select 0), (_this select 1)] call LM_fnc_runInput;}] remoteExec ['bis_fnc_call',2];
				[(ctrlParent (_this select 0)) displayCtrl 12284] call LM_saveExpression;
				[(ctrlParent (_this select 0)), 2] call LM_expressionResult;
			}];
			_RSCDEBUGCONSOLE_BUTTONEXECUTESERVER ctrlCommit 0;
			
			_RSCDEBUGCONSOLE_BUTTONEXECUTEALL = _parentDisplay displayCtrl 13285;
			_RSCDEBUGCONSOLE_BUTTONEXECUTEALL ctrlAddEventHandler ["ButtonClick", {
				_input = [(ctrlText ((ctrlParent (_this select 0)) displayCtrl 12284))] call LM_codeDeComment;
				
				[[1, compile _input],{[(_this select 0), (_this select 1)] call LM_fnc_runInput;}] remoteExec ['bis_fnc_call',2];
				[(ctrlParent (_this select 0)) displayCtrl 12284] call LM_saveExpression;
				[(ctrlParent (_this select 0)), 1] call LM_expressionResult;
			}];
			_RSCDEBUGCONSOLE_BUTTONEXECUTEALL ctrlCommit 0;
			
			_RSCDEBUGCONSOLE_BUTTONEXECUTELOCAL = _parentDisplay displayCtrl 13484;
			_RSCDEBUGCONSOLE_BUTTONEXECUTELOCAL ctrlAddEventHandler ["ButtonClick", {
				_input = [(ctrlText ((ctrlParent (_this select 0)) displayCtrl 12284))] call LM_codeDeComment;
				
				[[0, compile _input],{[(_this select 0), (_this select 1)] call LM_fnc_runInput;}] remoteExec ['bis_fnc_call',2];
				[(ctrlParent (_this select 0)) displayCtrl 12284] call LM_saveExpression;
				[(ctrlParent (_this select 0)), 0] call LM_expressionResult;
			}];
			_RSCDEBUGCONSOLE_BUTTONEXECUTELOCAL ctrlCommit 0;
			
			
			_RSCDEBUGCONSOLE_BUTTONSPECTATORCAMERA = _parentDisplay displayCtrl 13287;
			_RSCDEBUGCONSOLE_BUTTONSPECTATORCAMERA ctrlAddEventHandler ["ButtonClick",
			{
				if (["IsInitialized"] call BIS_fnc_EGSpectator) exitWith 
				{
					["Terminate"] call BIS_fnc_EGSpectator;
					ctrlParent (_this select 0) closeDisplay 2;
				};
				
				["Initialize", [player, nil, true, true]] spawn BIS_fnc_EGSpectator;
			}];
			_RSCDEBUGCONSOLE_BUTTONSPECTATORCAMERA ctrlCommit 0;
			
			_RSCDEBUGCONSOLE_BUTTONSPLENDIDCAMERA = _parentDisplay displayCtrl 13288;
			_RSCDEBUGCONSOLE_BUTTONSPLENDIDCAMERA ctrlAddEventHandler ["ButtonClick", {[] spawn (uiNamespace getVariable "BIS_fnc_camera")}];
			_RSCDEBUGCONSOLE_BUTTONSPLENDIDCAMERA ctrlCommit 0;
			
			_RSCDEBUGCONSOLE_BUTTONCANCEL = _parentDisplay ctrlCreate ["RscButtonMenu", -1, _RSCDEBUGCONSOLE];
			_RSCDEBUGCONSOLE_BUTTONCANCEL ctrlSetPosition [0,0.864,0.222,0.04];
			_RSCDEBUGCONSOLE_BUTTONCANCEL ctrlSetText "CANCEL";
			_RSCDEBUGCONSOLE_BUTTONCANCEL ctrlSetBackgroundColor [0,0,0,0.8];
			_RSCDEBUGCONSOLE_BUTTONCANCEL ctrlSetTextColor [1,1,1,1];
			_RSCDEBUGCONSOLE_BUTTONCANCEL ctrlAddEventHandler ["ButtonClick", {ctrlParent (_this select 0) closeDisplay 2}];
			_RSCDEBUGCONSOLE_BUTTONCANCEL ctrlCommit 0;
			
			_RSCDEBUGCONSOLE_BUTTONFUNCTIONS = _parentDisplay displayCtrl 13289;
			_RSCDEBUGCONSOLE_BUTTONFUNCTIONS ctrlAddEventHandler ["ButtonClick", {[ctrlParent (_this select 0)] spawn (uiNamespace getVariable "BIS_fnc_help")}];
			_RSCDEBUGCONSOLE_BUTTONFUNCTIONS ctrlCommit 0;
			
			_RSCDEBUGCONSOLE_BUTTONCONFIG = _parentDisplay displayCtrl 13290;
			_RSCDEBUGCONSOLE_BUTTONCONFIG ctrlAddEventHandler ["ButtonClick", {[ctrlParent (_this select 0)] spawn (uiNamespace getVariable "BIS_fnc_configViewer")}];
			_RSCDEBUGCONSOLE_BUTTONCONFIG ctrlCommit 0;
			
			_RSCDEBUGCONSOLE_BUTTONANIMATIONS = _parentDisplay displayCtrl 13291;
			_RSCDEBUGCONSOLE_BUTTONANIMATIONS ctrlAddEventHandler ["ButtonClick", {[] spawn (uiNamespace getVariable "BIS_fnc_animViewer")}];
			_RSCDEBUGCONSOLE_BUTTONANIMATIONS ctrlCommit 0;
			
			_RSCDEBUGCONSOLE_BUTTONGUI = _parentDisplay displayCtrl 13292;
			_RSCDEBUGCONSOLE_BUTTONGUI ctrlAddEventHandler ["ButtonClick", {[] spawn BIS_fnc_guiEditor; ctrlParent (_this select 0) closeDisplay 2}];
			_RSCDEBUGCONSOLE_BUTTONGUI ctrlCommit 0;
			
			
			{
				private _value = profileNamespace getVariable ["RscDebugConsole_watch" + str (_forEachIndex + 1), [true, "", false]];
				if !(_value isEqualTypeParams [true, ""]) then {_value = [true, _value, false]}; 
				_x ctrlSetText (_value select 1);
				if (_value select 2) then {ctrlSetFocus _x};
				_x setVariable ["RscDebugConsole_watchStatus", _value];
				_x ctrlAddEventHandler ["KeyDown", {
					params ["_displayOrControl", "_key", "_shift", "_ctrl", "_alt"];
					private _value = _displayOrControl getVariable ["RscDebugConsole_watchStatus", [true, ""]];
					if (_value select 1 isEqualTo "") then {_value set [0, true]};
					_value set [1, ctrlText _displayOrControl];
					_value set [2, _displayOrControl getVariable ["RscDebugConsole_watchPaused", false]];
					_ctrlIndex = 0;
					switch (ctrlIDC _displayOrControl) do {
						case 12285: {_ctrlIndex = 0;};
						case 12287: {_ctrlIndex = 1;};
						case 12289: {_ctrlIndex = 2;};
						case 12291: {_ctrlIndex = 3;};
					};
					profileNamespace setVariable ["RscDebugConsole_watch" + str (_ctrlIndex + 1), _value];
				}];
				_x ctrlCommit 0;
			}
			forEach [_parentDisplay displayCtrl 12285, _parentDisplay displayCtrl 12287, _parentDisplay displayCtrl 12289, _parentDisplay displayCtrl 12291];

			_parentDisplay setVariable ["RscDebugConsole_fnc_watchField", 
			{
				params ["_input", "_output"]; 

				_this = ctrlText _input; 
				if (_this isEqualTo "") exitWith 
				{ 
					_input ctrlSetBackgroundColor [0,0,0,0]; 
					_output ctrlSetText "";
				};	
				
				if (_input getVariable ["RscDebugConsole_watchPaused", false]) exitWith 
				{
					_input ctrlSetBackgroundColor [0.5,0.1,0,0.8]; 
					_output ctrlSetText "";
				}; 
				
				_status = _input getVariable "RscDebugConsole_watchStatus";
				if (!(_status select 0) && {_status select 1 isEqualTo _this}) exitWith {_input ctrlSetBackgroundColor [0.5,0.1,0,0.8]};
				
				_duration = diag_tickTime; 
				_duration = compile _this call 
				{		
					_output ctrlSetText str ([nil] apply {private ["_input", "_output", "_status", "_duration"]; [] call _this} param [0, text ""]); 
					diag_tickTime - _duration
				};

				if (_duration < 0.003) exitWith 
				{ 
					_input ctrlSetBackgroundColor [0,0,0,0]; 
					_status set [0, true]; 
				}; 
				
				_input ctrlSetBackgroundColor [0.8,0.4,0,0.5]; 
				_status set [0, false]; 
				
				if (_duration > 0.1) exitWith {_status set [1, _this]}; 
				
				_status set [1, ""];
			}];

			_parentDisplay displayAddEventHandler ["MouseMoving", {[_this select 0 displayCtrl 12285, _this select 0 displayCtrl 12286] call (_this select 0 getVariable "RscDebugConsole_fnc_watchField")}];
			_parentDisplay displayAddEventHandler ["MouseHolding", {[_this select 0 displayCtrl 12285, _this select 0 displayCtrl 12286] call (_this select 0 getVariable "RscDebugConsole_fnc_watchField")}];
			_parentDisplay displayAddEventHandler ["MouseMoving", {[_this select 0 displayCtrl 12287, _this select 0 displayCtrl 12288] call (_this select 0 getVariable "RscDebugConsole_fnc_watchField")}];
			_parentDisplay displayAddEventHandler ["MouseHolding", {[_this select 0 displayCtrl 12287, _this select 0 displayCtrl 12288] call (_this select 0 getVariable "RscDebugConsole_fnc_watchField")}];
			_parentDisplay displayAddEventHandler ["MouseMoving", {[_this select 0 displayCtrl 12289, _this select 0 displayCtrl 12290] call (_this select 0 getVariable "RscDebugConsole_fnc_watchField")}];
			_parentDisplay displayAddEventHandler ["MouseHolding", {[_this select 0 displayCtrl 12289, _this select 0 displayCtrl 12290] call (_this select 0 getVariable "RscDebugConsole_fnc_watchField")}];
			_parentDisplay displayAddEventHandler ["MouseMoving", {[_this select 0 displayCtrl 12291, _this select 0 displayCtrl 12293] call (_this select 0 getVariable "RscDebugConsole_fnc_watchField")}];
			_parentDisplay displayAddEventHandler ["MouseHolding", {[_this select 0 displayCtrl 12291, _this select 0 displayCtrl 12293] call (_this select 0 getVariable "RscDebugConsole_fnc_watchField")}];
			
			_parentDisplay displayAddEventHandler ["MouseButtonDown", {ctrlSetFocus (_this select 0 displayCtrl 12284)}];
			
			_parentDisplay displayAddEventHandler ["KeyDown", 
			{
				if (_this select 1 in [0x1C, 0x9C]) then
				{
					_parentDisplay = _this select 0;
					if ({_x getVariable ["RscDebugConsole_watchPaused", false]} count [ 			_parentDisplay displayCtrl 12285, 			_parentDisplay displayCtrl 12287, 			_parentDisplay displayCtrl 12289, 			_parentDisplay displayCtrl 12291 		] > 0) then
					{
						ctrlSetFocus (_parentDisplay displayCtrl 12284);
						true
					};
				};
			}];
			
			_parentDisplay displayAddEventHandler ["KeyDown",
			{
				params ["_parentDisplay", "_key"];
				
				if (_key in [0xC9, 0xD1]) then 
				{
					_expressionHistory = profileNamespace getVariable "RscDebugConsole_expressionHistory";
					_expressionResultHistory = parsingNamespace getVariable "BIS_RscDebugConsoleExpressionResultHistory";
					
					_last = count _expressionHistory - 1;
					
					_index = 0 max ((_parentDisplay getVariable "RscDebugConsole_expressionHistory_index") + ([1, -1] select (_key == 0xD1))) min _last;
					_parentDisplay setVariable ["RscDebugConsole_expressionHistory_index", _index];
					
					_expressionCtrl = _parentDisplay displayCtrl 12284;
					_expressionCtrl ctrlSetText (_expressionHistory select _index);
					
					if (ctrlEnabled _expressionCtrl) then
					{
						
						_lastResult = ctrlText (parsingNamespace getVariable ["BIS_RscDebugConsoleExpressionResultCtrl", controlNull]);
						_expressionResultHistory set [0, _lastResult];
						if (_lastResult isEqualTo "") then { _expressionResultHistory set [1, [0,0,0,0]] };
					};
					
					if (_index < _last) then
					{	
						_expressionCtrl ctrlEnable false;
						(parsingNamespace getVariable ["BIS_RscDebugConsoleExpressionResultCtrl", controlNull]) ctrlEnable false;
						(parsingNamespace getVariable ["BIS_RscDebugConsoleExpressionResultCtrl", controlNull]) ctrlSetText "";
						
						_parentDisplay displayCtrl 13191 ctrlSetBackgroundColor [0,0,0,0]; 
						_parentDisplay getVariable "RscDebugConsole_state" params ["_stateServer", "_stateGlobal", "_stateLocal"];
						
						_stateServer select 0 ctrlSetText "";
						_stateGlobal select 0 ctrlSetText "";
						
						if (isMultiplayer) then 
						{
							_stateServer select 0 ctrlenable false;
							_stateGlobal select 0 ctrlenable false;
						};
						
						_stateLocal select 0 ctrlSetText format ["%1 %2", toUpper localize "str_usract_menu_select", (count _expressionHistory) - 1 - _index];
						ctrlSetFocus (_stateLocal select 0);
					} 
					else 
					{
						_expressionCtrl ctrlEnable true;
						(parsingNamespace getVariable ["BIS_RscDebugConsoleExpressionResultCtrl", controlNull]) ctrlEnable true;
						(parsingNamespace getVariable ["BIS_RscDebugConsoleExpressionResultCtrl", controlNull]) ctrlSetText (_expressionResultHistory select 0);
						_parentDisplay displayCtrl 13191 ctrlSetBackgroundColor (_expressionResultHistory select 1);
						
						{ 
							_x select 0 ctrlSetText (_x select 1);
							if (isMultiplayer) then { _x select 0 ctrlEnable true };
						} 
						forEach (_parentDisplay getVariable "RscDebugConsole_state");
						
						ctrlSetFocus _expressionCtrl;
					};
					
					true
				};
			}];
			
			
			_RSCDEBUGCONSOLE ctrlCommit 0;
			saveProfileNamespace; 
			showChat true;
		};
		
		LM_fnc_playerAnimationModule = {
			_animCode =  (str {
				[(_this select 1), (_this select 3)] spawn {
					if (((_this select 0) == 8) and (_this select 1)) then {
						disableSerialization;
						_indexAnimations = [
						[[2,"hubbriefing_loop","Briefing"],[2,"hubbriefing_lookaround2","Briefing Point Left"],[2,"hubbriefing_stretch","Briefing Point Right"],[2,"hubbriefing_talkaround","Briefing Point Table"],[2,"amovpknlmstpslowwrfldnon","Kneel"],[2,"ainvpknlmstpsnonwnondnon_medicend","Kneel Treat"],[2,"acts_injuredlookingrifle03","Prone Injured 1"],[2,"acts_injuredlookingrifle02","Prone Injured 2"],[2,"hubwoundedprone_idle2","Prone Injured 3"],[2,"acts_injuredlookingrifle01","Prone Injured 4"],[2,"hubfixingvehicleprone_idle1","Repair Vehicle Prone"],[2,"hubsittingchaira_idle1","Sit A 1"],[2,"hubsittingchaira_idle2","Sit A 2"],[2,"hubsittingchaira_idle3","Sit A 3"],[2,"hubsittingchairb_idle1","Sit B 1"],[2,"hubsittingchairb_idle2","Sit B 2"],[2,"hubsittingchairb_idle3","Sit B 3"],[2,"hubsittingchairc_idle1","Sit C 1"],[2,"hubsittingchairc_idle2","Sit C 2"],[2,"hubsittingchairc_idle3","Sit C 3"],[2,"hubsittingattableu_idle1","Sit at Table"],[2,"hubsittinghighb_move1","Sit High 1"],[2,"hubsittinghigha_idle1","Sit High 2"],[2,"amovpsitmstpslowwrfldnon","Sit Low 1"],[2,"hubsittingchairua_idle2","Sit Idle 1"],[2,"hubsittingchairub_idle3","Sit Idle 2"],[2,"hubsittingchairuc_move1","Sit Idle 3"],[2,"hubsittingchairua_idle1","Sit Idle 4"],[2,"hubsittingchairua_idle3","Sit Idle 5"],[2,"hubsittingchairub_move1","Sit Idle 6"],[2,"hubsittingchairua_move1","Sit Idle 7"],[2,"amovpercmstpslowwrfldnon","Stand"],[2,"hubstandingua_idle1","Stand A 1"],[2,"hubstandingua_idle2","Stand A 2"],[2,"hubstandingua_idle3","Stand A 3"],[2,"hubstandingub_idle1","Stand B 1"],[2,"hubstandingub_idle2","Stand B 2"],[2,"hubstandingub_idle3","Stand B 3"],[2,"hubstanding_idle1","Stand Idle 1"],[2,"hubstanding_idle2","Stand Idle 2"],[2,"hubstanding_idle3","Stand Idle 3"],[2,"hubstandinguc_move1","Stand Move 1"],[2,"hubstandinguc_move2","Stand Move 2"]],
						
						[[2,"Acts_BoatAttacked01","Bail from Boat"],[2,"Acts_AidlPercMstpSnonWnonDnon_warmup_2_loop","Bent over"],[2,"AcinPercMstpSnonWnonDnon","Body on Shoulder"],[3,"acts_RU_briefing_point","Briefing Point 1"],[3,"acts_RU_briefing_point_tl","Briefing Point 2"],[3,"acts_RU_briefing_move","Briefing Move"],[2,"Acts_Dance_01","Dance 1"],[2,"Acts_Dance_02","Dance 2"],[2,"Acts_ExecutionVictim_Loop","Detained"],[2,"AcinPknlMstpSnonWnonDnon","Drag Body"],[2,"AcinPercMrunSnonWnonDf_death","Dramatic Death"],[2,"Acts_JetsOfficerSpilling","Drinking"],[2,"acts_examining_device_player","Examine Gun"],[2,"Acts_carFixingWheel","Fix Wheel"],[2,"Acts_AidlPercMstpSnonWnonDnon_warmup_3_loop","Hands on Back"],[2,"acts_gallery_visitor_01","Hands on Chin"],[2,"HubBriefing_loop","Hands on Hip 1"],[2,"acts_kore_idleNoWeapon_In","Hands on Hip 2"],[2,"acts_gallery_visitor_02","Hands on Vest 1"],[2,"acts_staticPose_photo","Hands on Vest 2"],[2,"Acts_BoatAttacked05","Holding Side of Boat"],[2,"acts_briefing_SA_loop","Idle Armed 1"],[2,"acts_getAttention_loop","Idle Armed 2"],[2,"acts_millerIdle","Idle Armed 3"],[2,"acts_civilidle_1","Idle Unarmed"],[2,"Acts_Helping_Wake_Up_1","Inspect Ground"],[2,"acts_rifle_operations_barrel","Inspect Barrel"],[2,"acts_rifle_operations_checking_chamber","Inspect Chamber"],[2,"acts_rifle_operations_zeroing","Inspect Sight"],[2,"AovrPercMrunSrasWrflDf","Jump Over"],[1,"KNEEL","Kneel"],[1,"LEAN","Lean"],[2,"acts_civilListening_2","Listen to Person"],[2,"Acts_listeningToRadio_Loop","Listen to Radio 1"],[2,"acts_kore_talkingoverradio_loop","Listen to Radio 2"],[2,"acts_kore_talkingOverRadio_In","Listen to Radio 3"],[3,"acts_peering_down","Looking Down"],[3,"acts_peering_front","Looking Forward"],[3,"acts_peering_up","Looking Up"],[2,"Acts_JetsCrewaidLCrouch_loop","One Knee"],[2,"Acts_Grieving","Paying Respects 1"],[2,"acts_executioner_standingloop","Paying Respects 2"],[2,"Acts_B_briefings","Pointing at Map"],[3,"acts_pointing_down","Pointing Down"],[3,"acts_pointing_up","Pointing Up"],[2,"Acts_AidlPercMstpSlowWrflDnon_pissing","Scratching Nutsack"],[2,"Acts_ShieldFromSun_loop","Shield Eyes"],[2,"Acts_ViperMeeting_A_End","Shoot Person"],[2,"Acts_NavigatingChopper_Loop","Signal Move Forward"],[3,"Acts_starterPistol_Fire","Signal Start"],[2,"Acts_JetsMarshallingEnginesOn_loop","Signal Take Off"],[2,"Acts_ShowingTheRightWay_loop","Signal This Way"],[2,"Acts_JetsCrewaidFCrouchThumbup_loop","Signal Thumbs Up"],[2,"AidlPsitMstpSnonWnonDnon_ground00","Sit"],[1,"SIT_LOW","Sit Low"],[2,"acts_StandingSpeakingUnarmed","Speaking Unarmed"],[1,"STAND","Stand 1"],[1,"STAND_IA","Stand 2"],[2,"Acts_starGazer","Star Gazing"],[2,"AmovPercMstpSsurWnonDnon","Surrender"],[2,"acts_commenting_on_fight_loop","Talking in Detail"],[2,"Acts_Taking_Cover_From_Jets","Taking Cover"],[2,"Acts_SupportTeam_Right_ToKneelLoop","Watching Kneeled Right"],[2,"Acts_SupportTeam_Left_ToKneelLoop","Watching Kneeled Left"],[2,"Acts_SupportTeam_Front_ToKneelLoop","Watching Kneeled Front"],[2,"Acts_SupportTeam_Back_ToKneelLoop","Watching Kneeled Back"],[2,"acts_rifle_operations_right","Watching Standing Right"],[2,"acts_rifle_operations_left","Watching Standing Left"],[2,"acts_rifle_operations_front","Watching Standing Front"],[2,"acts_rifle_operations_back","Watching Standing Back"],[2,"Acts_A_OUT_briefing","Weapon Down during Briefing"]]
						];
						player setVariable ["_indexAnimations",_indexAnimations];


						_display = findDisplay 46 createDisplay "RscDisplayEmpty";
						_ctrlGroup = _display ctrlCreate ["RscControlsGroup", -1];
						_ctrlBackgroundStatic = _display ctrlCreate ["RscTextMulti", -1, _ctrlGroup];
						_ctrlTitleStatic = _display ctrlCreate ["RscText", -1, _ctrlGroup];
						
						_ctrlTitleStatic ctrlSetText "Player Animations:";
						_ctrlTitleStatic ctrlSetPosition [0, 0, 0.225, 0.04];
						_ctrlTitleStatic ctrlSetBackgroundColor LM_trimColor_RGBA;
						_ctrlTitleStatic ctrlCommit 0;
						
						_ctrlBackgroundStatic ctrlSetPosition [0, 0.045, 0.225, 0.5];
						_ctrlBackgroundStatic ctrlSetBackgroundColor [0,0,0,0.4];
						_ctrlBackgroundStatic ctrlEnable false;
						_ctrlBackgroundStatic ctrlCommit 0;
						
						mainMenu = {
							params ["_control"];
							_control ctrlRemoveAllEventHandlers "LBDblClick";
							lbClear _control;
							
							_control lbAdd "Freerotate";
							_control lbSetTooltip [0, "Animations which lock your head, but can rotate body\nTIP: Double-click to enter"];
							_control lbAdd "Freelook";
							_control lbSetTooltip [1, "Animations which rotate your head, but lock your body\nTIP: Double-click to enter"];
							
							_control ctrlAddEventHandler ["LBDblClick", {
								params ["_control", "_selectedIndex"];
								[_control, _selectedIndex] call animMenu;
							}];
							_control lbSetCurSel 0;
						};
						
						animMenu = {
							params ["_control", "_selectedIndex"];
							_control ctrlRemoveAllEventHandlers "LBDblClick";
							lbClear _control;
							
							_control lbAdd "[Main Menu]";
							_control lbSetColor [0, LM_trimColor_RGBA];
							if (_selectedIndex == 0) then {
								player setVariable ["_animationFunction",0];
							} else {
								player setVariable ["_animationFunction",1];
							};
							_index = 0;
							{
								_index = _index + 1;
								_control lbAdd (_x select 2);
								_control lbSetTooltip [_index, (_x select 2)];
							} forEach ((player getVariable "_indexAnimations") select (player getVariable "_animationFunction"));
							
							_control ctrlAddEventHandler ["LBDblClick", {
								params ["_control", "_selectedIndex"];
								if (_selectedIndex == 0) then {
									[_control] call mainMenu;
								} else {
									_animationInformation = ((player getVariable "_indexAnimations") select (player getVariable "_animationFunction")) select (_selectedIndex - 1);
									[[player, _animationInformation, (player getVariable "_indexAnimations")],{
										_animationInformation = (_this select 1);
										(_this select 0) call BIS_fnc_ambientAnim__terminate;
										if ((_animationInformation select 0) == 0) then {
											[(_this select 0), (_animationInformation select 1), "ASIS"] call BIS_fnc_ambientAnim;
										} else {
											if ((_animationInformation select 0) == 1) then {
												[(_this select 0), (_animationInformation select 1), "ASIS"] call BIS_fnc_ambientAnimCombat;
											} else {
												if ((_animationInformation select 0) == 2) then {
													(_this select 0) switchMove (_animationInformation select 1);
												} else {
													(_this select 0) playMoveNow (_animationInformation select 1);
												};
											};
										};
									}] remoteExec ['bis_fnc_call',0,false]; 
									playSound "3DEN_notificationDefault";
								};
							}];
						};
						
						_ctrlListboxStatic = _display ctrlCreate ["RscListbox", -1, _ctrlGroup];
						_ctrlListboxStatic ctrlSetPosition [0.01, 0.06, 0.2025, 0.47];
						_ctrlListboxStatic ctrlAddEventHandler ["LBDblClick", {
							params ["_control", "_selectedIndex"];
							[_control, _selectedIndex] call animMenu;
						}];
						[_ctrlListboxStatic] call mainMenu;
						_ctrlListboxStatic ctrlCommit 0;
						
						findDisplay 0 displayCtrl 999 setVariable ['_ctrlListboxStatic', _ctrlListboxStatic];
						ctrlSetFocus _ctrlListboxStatic;
						
						_ctrlButtonReset = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
						_ctrlButtonReset ctrlSetPosition [0, 0.55, 0.225, 0.04];
						_ctrlButtonReset ctrlSetText "Reset Animation";
						_ctrlButtonReset ctrlSetBackgroundColor [0,0,0,0.4];
						_ctrlButtonReset ctrlSetActiveColor [0,0,0,0.6];
						_ctrlButtonReset ctrlAddEventHandler ["ButtonClick", {
							playSound "3DEN_notificationDefault";
							[[player],{
								(_this select 0) call BIS_fnc_ambientAnim__terminate;
							}] remoteExec ['bis_fnc_call',0,false]; 
						}];
						_ctrlButtonReset ctrlCommit 0;
						
						
						_ctrlGroup ctrlSetPosition [safeZoneXAbs+0.05, safeZoneY+0.05, 0.225, 2];
						_ctrlGroup ctrlCommit 0;
						playSound "Hint";
						showChat true;
					};
				};
			}) splitString "";
			_animCode deleteAt (count _animCode - 1);
			_animCode deleteAt 0;
			missionNamespace setVariable ["LM_fnc_playerAnimationVariable",_animCode,true];
			[[],{
				waitUntil {!isNull (findDisplay 46) && alive player};
				(findDisplay 46) displayRemoveEventHandler ['KeyDown',(player getVariable ['LM_DEH_playerAnimation',-1])];
				_dehID = (findDisplay 46) displayAddEventHandler ["KeyDown", ((missionNamespace getVariable "LM_fnc_playerAnimationVariable") joinString "")];
				player setVariable ['LM_DEH_playerAnimation',_dehID];
				titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>Press '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">CTRL+7</t>' to open the <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Player Animations Menu</t>!</t>", "PLAIN DOWN", -1, false, true];
				["IntelAdded", ["• Player Animations Added! 
 
				<br /><font size='15' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Player Animations
				<br />
				<br /><font size='12' color='#FFFFFF'>This feature allows you to choose from a variety of available dynamic animations to enter into. This is great for when you are participating in a briefing and want to look cool or for just goofing around!
				<br />
				<br /><font size='14' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">How to Enable:
				<br />
				<br /><font size='12' color='#FFFFFF'>• Press '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">CTRL+7<font size='12' color='#FFFFFF'>' to open the Player Animations Menu and '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">double click<font size='12' color='#FFFFFF'>' any option in the list to select a category. From there you can choose from the available animations or return to the main menu.
				<br />
				<br /><font size='14' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">How to Disable:
				<br />
				<br /><font size='12' color='#FFFFFF'>• Once an animation is activated, open the menu and press the '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">RESET ANIMATION<font size='12' color='#FFFFFF'>' button to leave the animation!
				"]] call BIS_fnc_showNotification;
				
				if ((player getVariable ["LM_keybindings_height_playerAnimations", 2000]) == 2000) then {
					player setVariable ["LM_keybindings_height", ((player getVariable ["LM_keybindings_height", 2000])+2000)];
					player setVariable ["LM_keybindings_height_playerAnimations", (player getVariable "LM_keybindings_height")];
					findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
						_this select 0 drawIcon [
							"\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa",
							[1,1,1,1],
							[worldSize+(500/(("Altis" call BIS_fnc_mapSize) / (worldSize))),worldSize-((player getVariable ["LM_keybindings_height_playerAnimations",2000])/(("Altis" call BIS_fnc_mapSize) / (worldSize))),0],
							0,
							0,
							0,
							"• Press 'CTRL+7' to open the Player Animations Menu",
							1,
							(1.75 / (6.4 * worldSize / 8192 * ctrlMapScale ((findDisplay 12) displayCtrl 51)))/(("Altis" call BIS_fnc_mapSize) / (worldSize)),
							"PuristaBold",
							"right"
						]
					}];
				};
			}] remoteExec ['bis_fnc_call',0,"LM_JIP_playerAnimations"]; 
			systemchat "[ LOG ] Press 'CTRL+7' to open the Player Animations Menu";
		};
		
		LM_fnc_friendlyMarkersModule = {
			["Friendly Markers",[
				[
					"LIST",
					"NOTE: For the time being changed settings will not reflect unless players rejoin!",
					[
						[],
						[
							["","",""]
						],
						0,
						0
					]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Require GPS:","Control whether to require GPS to see friendly markers"],
				 [false]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Show Faction Only:","Control whether to show icons of units and groups for the scenario faction only"],
				 [false]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Show AI Names:","Control whether to display the names of AI units"],
				 [false]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Show AI Units:","Control whether to display the icons of AI units"],
				 [true]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Show AI Groups:","Control whether to display the icons of AI groups"],
				 [true]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Show Wounded Icons:","Control whether to color the icons of wounded friendly units as orange"],
				 [true]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["3D HUD Group Icons:","Control whether to display the icons of groups in the HUD of players"],
				 [true]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Interactive Group Icons:","Control whether to display a hint with squad information of groups on look or hover"],
				 [true]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Enable Group Icons:","Control whether to display the icons of groups"],
				 [true]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Enable Unit Icons:","Control whether to display the individual icons of units based on roles"],
				 [true]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Show Civilian Unit Icons:","Control whether to display the individual icons of civilian units based on roles"],
				 [true]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Show Civilian Group Icons:","Control whether to display the icons of civilian groups"],
				 [true]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Admin See All:","Control whether the admin will see icons for all sids groups and icons no matter relations"],
				 [false]
				]
			],{
				params ["_values","_entity","_display"];
				_values params ["_noteGUI","_requireGPS","_showFactionOnly","_showAINames","_aiUnits","_aiGroups","_showWounded","_show3DHUD","_interactiveGroups","_groupIcons","_unitIcons","_civilianUnits","_civilianGroups","_adminShow"];
				missionNamespace setVariable ["LM_var_requireGPS",_requireGPS,true];
				missionNamespace setVariable ["LM_var_showFactionOnly",_showFactionOnly,true];
				missionNamespace setVariable ["LM_var_showAINames",_showAINames,true];
				missionNamespace setVariable ["LM_var_aiUnits",_aiUnits,true];
				missionNamespace setVariable ["LM_var_aiGroups",_aiGroups,true];
				missionNamespace setVariable ["LM_var_showWounded",_showWounded,true];
				missionNamespace setVariable ["LM_var_show3DHUD",_show3DHUD,true];
				missionNamespace setVariable ["LM_var_interactiveGroups",_interactiveGroups,true];
				missionNamespace setVariable ["LM_var_groupIcons",_groupIcons,true];
				missionNamespace setVariable ["LM_var_unitIcons",_unitIcons,true];
				missionNamespace setVariable ["LM_var_civilianUnits",_civilianUnits,true];
				missionNamespace setVariable ["LM_var_civilianGroups",_civilianGroups,true];
				missionNamespace setVariable ["LM_var_adminShow",_adminShow,true];
				
				_markersCode =  (str {
					[_thisEventHandler] spawn {
						if (isDedicated || !hasInterface) exitWith {};
						(findDisplay 46) displayRemoveEventhandler ['KeyDown',(_this select 0)];
						private [
							'_side','_sides','_QS_ST_X','_QS_ST_map_enableUnitIcons','_QS_ST_gps_enableUnitIcons',	'_QS_ST_enableGroupIcons','_QS_ST_faction','_QS_ST_friendlySides_EAST',
							'_QS_ST_friendlySides_WEST','_QS_ST_friendlySides_RESISTANCE','_QS_ST_friendlySides_CIVILIAN','_QS_ST_friendlySides_Dynamic','_QS_ST_iconColor_EAST','_QS_ST_iconColor_WEST',
							'_QS_ST_iconColor_RESISTANCE','_QS_ST_iconColor_CIVILIAN','_QS_ST_iconColor_UNKNOWN','_QS_ST_showMedicalWounded','_QS_ST_MedicalSystem','_QS_ST_MedicalIconColor','_QS_ST_iconShadowMap',
							'_QS_ST_iconShadowGPS','_QS_ST_iconTextSize_Map','_QS_ST_iconTextSize_GPS','_QS_ST_iconTextOffset','_QS_ST_iconSize_Man','_QS_ST_iconSize_LandVehicle',	
							'_QS_ST_iconSize_Ship','_QS_ST_iconSize_Air','_QS_ST_iconSize_StaticWeapon','_QS_ST_GPSDist','_QS_ST_GPSshowNames','_QS_ST_GPSshowGroupOnly',	'_QS_ST_showAIGroups',			
							'_QS_ST_showGroupMapIcons','_QS_ST_showGroupHudIcons','_QS_ST_groupInteractiveIcons','_QS_ST_groupInteractiveIcons_showClass','_QS_ST_dynamicGroupID',			
							'_QS_ST_showGroupMapText','_QS_ST_groupIconScale','_QS_ST_groupIconOffset','_QS_ST_groupIconText','_QS_ST_autonomousVehicles','_QS_fnc_iconColor','_QS_fnc_iconType',				
							'_QS_fnc_iconSize','_QS_fnc_iconPosDir','_QS_fnc_iconText','_QS_fnc_iconUnits','_QS_fnc_onMapSingleClick','_QS_fnc_mapVehicleShowCrew','_QS_fnc_iconDrawMap',			
							'_QS_fnc_iconDrawGPS','_QS_fnc_groupIconText','_QS_fnc_groupIconType','_QS_fnc_configGroupIcon','_QS_fnc_onGroupIconClick','_QS_fnc_onGroupIconOverLeave',	
							'_QS_ST_iconMapClickShowDetail','_QS_ST_showFriendlySides','_QS_fnc_onGroupIconOverEnter','_QS_ST_showCivilianGroups','_QS_ST_iconTextFont','_QS_ST_showAll','_QS_ST_showFactionOnly',		
							'_QS_ST_showAI','_QS_ST_showMOS','_QS_ST_showGroupOnly','_QS_ST_iconUpdatePulseDelay','_QS_ST_iconMapText','_QS_ST_showMOS_range',
							'_QS_ST_iconTextFonts','_QS_fnc_isIncapacitated','_QS_ST_htmlColorMedical','_QS_ST_R','_QS_ST_showAINames','_QS_ST_AINames',
							'_QS_ST_groupTextFactionOnly','_QS_ST_showCivilianIcons','_QS_ST_showOnlyVehicles','_QS_ST_showOwnGroup','_QS_ST_iconColor_empty',
							'_QS_ST_iconSize_empty','_QS_ST_showEmptyVehicles','_QS_ST_colorInjured','_QS_ST_htmlColorInjured','_QS_fnc_iconColorGroup','_QS_ST_otherDisplays','_QS_ST_MAPrequireGPSItem',
							'_QS_ST_GPSrequireGPSItem','_QS_ST_GRPrequireGPSItem','_QS_ST_admin'
						];


						_requireGPS = missionNamespace getVariable ["LM_var_requireGPS",false];
						_showFactionOnly = missionNamespace getVariable ["LM_var_showFactionOnly",false];
						_showAINames = missionNamespace getVariable ["LM_var_showAINames",false];
						_aiUnits = missionNamespace getVariable ["LM_var_aiUnits",true];
						_aiGroups = missionNamespace getVariable ["LM_var_aiGroups",true];
						_showWounded = missionNamespace getVariable ["LM_var_showWounded",true];
						_show3DHUD = missionNamespace getVariable ["LM_var_show3DHUD",true];
						_interactiveGroups = missionNamespace getVariable ["LM_var_interactiveGroups",true];
						_groupIcons = missionNamespace getVariable ["LM_var_groupIcons",true];
						_unitIcons = missionNamespace getVariable ["LM_var_unitIcons",true];
						_civilianUnits = missionNamespace getVariable ["LM_var_civilianUnits",true];
						_civilianGroups = missionNamespace getVariable ["LM_var_civilianGroups",true];
						_adminShow = missionNamespace getVariable ["LM_var_adminShow",false];

						_QS_ST_map_enableUnitIcons = _unitIcons;							
						_QS_ST_gps_enableUnitIcons = _unitIcons;							
						_QS_ST_enableGroupIcons = _groupIcons;								


						_QS_ST_admin = _adminShow;										
						_QS_ST_showAll = 0;											
							

						_QS_ST_friendlySides_Dynamic = TRUE;						
						_QS_ST_friendlySides_EAST = [								
							3						
						];
						_QS_ST_friendlySides_WEST = [								
							2						
						];
						_QS_ST_friendlySides_RESISTANCE = [							
							1,						
							3						
						];
						_QS_ST_friendlySides_CIVILIAN = [							
							0,						
							2						
						];


						_QS_ST_iconColor_EAST = [0.5,0,0,0.65];							
						_QS_ST_iconColor_WEST = [0,0.3,0.6,0.65];						
						_QS_ST_iconColor_RESISTANCE = [0,0.5,0,0.65];					
						_QS_ST_iconColor_CIVILIAN = [0.4,0,0.5,0.65];					
						_QS_ST_iconColor_UNKNOWN = [0.7,0.6,0,0.5];						


						_QS_ST_showMedicalWounded = _showWounded;								
						_QS_ST_MedicalSystem = [										
							'BIS'														
						];
						_QS_ST_MedicalIconColor = [1,0.41,0,1];							
						_QS_ST_colorInjured = [0.75,0.55,0,0.75];						


						_QS_ST_showFactionOnly = _showFactionOnly;									
						_QS_ST_showAI = _aiUnits;											
						_QS_ST_AINames = _showAINames;											
						_QS_ST_showCivilianIcons = _civilianUnits;								
						_QS_ST_iconMapText = TRUE;										
						_QS_ST_showMOS = TRUE;											
						_QS_ST_showMOS_range = 500;									
						_QS_ST_showGroupOnly = FALSE;									
						_QS_ST_showOnlyVehicles = FALSE;								
						_QS_ST_iconMapClickShowDetail = _interactiveGroups;							
						_QS_ST_iconUpdatePulseDelay = 0;								
						_QS_ST_iconShadowMap = 1;										
						_QS_ST_iconTextSize_Map = 0.05;									
						_QS_ST_iconTextOffset = 'right';								
						_QS_ST_iconSize_Man = 22;										
						_QS_ST_iconSize_LandVehicle = 26;								
						_QS_ST_iconSize_Ship = 24;										
						_QS_ST_iconSize_Air = 24;										
						_QS_ST_iconSize_StaticWeapon = 22;								
						_QS_ST_iconTextFonts = [										
							'PuristaBold'
						];
						_QS_ST_otherDisplays = TRUE;									
						_QS_ST_MAPrequireGPSItem = _requireGPS;								


						_QS_ST_GPSDist = 300;											
						_QS_ST_GPSshowNames = TRUE;									
						_QS_ST_GPSshowGroupOnly = FALSE;								
						_QS_ST_iconTextSize_GPS = 0.05;									
						_QS_ST_iconShadowGPS = 1;										
						_QS_ST_GPSrequireGPSItem = _requireGPS;								


						_QS_ST_showGroupMapIcons = _groupIcons;								
						_QS_ST_showGroupHudIcons = _show3DHUD;								
						_QS_ST_showAIGroups = _aiGroups;										
						_QS_ST_showAINames = _showAINames;										
						_QS_ST_groupInteractiveIcons = _interactiveGroups;							
						_QS_ST_groupInteractiveIcons_showClass = _interactiveGroups;					
						_QS_ST_dynamicGroupID = TRUE;									
						_QS_ST_showGroupMapText = TRUE;									
						_QS_ST_groupIconScale = 0.75;										
						_QS_ST_groupIconOffset = [0.65,0.65];							
						_QS_ST_groupTextFactionOnly = FALSE;								
						_QS_ST_showCivilianGroups = _civilianGroups;								
						_QS_ST_showOwnGroup = FALSE;									
						_QS_ST_GRPrequireGPSItem = _requireGPS;								


						_QS_ST_showEmptyVehicles = TRUE;								
						_QS_ST_iconColor_empty = [0.7,0.6,0,0.5];						
						_QS_ST_iconSize_empty = 20;										


						QS_ST_STR_text1 = 'Click to show group details';				
						QS_ST_STR_text2 = "This group's side is not friendly to your group's side!";			


						_QS_fnc_isIncapacitated = {
							params ['_u','_med'];
							if ((lifeState _u) isEqualTo 'INCAPACITATED') exitWith {TRUE};
							private _r = FALSE;
							if (_med isEqualTo 'BTC') then {
								if (!isNil {_u getVariable 'BTC_need_revive'}) then {
									if ((_u getVariable 'BTC_need_revive') isEqualTo 1) then {
										_r = TRUE;
									};
								};
							} else {
								if (_med isEqualTo 'FAR') then {
									if (!isNil {_u getVariable 'FAR_isUnconscious'}) then {
										if ((_u getVariable 'FAR_isUnconscious') isEqualTo 1) then {
											_r = TRUE;
										};
									};
								} else {
									if (_med isEqualTo 'AIS') then {
										if (!isNil {_u getVariable 'unit_is_unconscious'}) then {
											if ((_u getVariable 'unit_is_unconscious')) then {
												_r = TRUE;
											};
										};
									} else {
										if (_med isEqualTo 'AWS') then {
											if (!isNil {_u getVariable 'tcb_ais_agony'}) then {
												if ((_u getVariable 'tcb_ais_agony')) then {
													_r = TRUE;
												};
											};
										} else {
											if (_med isEqualTo 'ACE') then {
												if (!isNil {_u getVariable 'ACE_isUnconscious'}) then {
													if ((_u getVariable 'ACE_isUnconscious')) then {
														_r = TRUE;
													};
												};
											};
										};
									};
								};
							};
							_r;
						};
						_QS_fnc_iconColor = {
							params [['_v',objNull],['_ds',1],'_QS_ST_X',['_ms',1]];
							_u = effectiveCommander _v;
							_s = side (group _u);
							private _exit = FALSE;
							private _c = _QS_ST_X select 13;
							private _a = 0;
							if (!(_v isKindOf 'Man')) then {
								if (_v getVariable ['QS_ST_drawEmptyVehicle',FALSE]) then {
									if ((count (crew _v)) isEqualTo 0) then {
										_exit = TRUE;
										_c = _QS_ST_X select 78;
										_c set [3,0.65];
										if (_ms > 0.80) then {
											if (_ds isEqualTo 1) then {
												_c set [3,0];
											};
										};
									};
								};
							};
							if (_exit) exitWith {_c;};
							private _useTeamColor = FALSE;
							if ((group _u) isEqualTo (group player)) then {
								_useTeamColor = TRUE;
								_a = 0.85;
							} else {
								_a = 0.65;
							};
							if (_QS_ST_X select 14) then {
								if ([_u,((_QS_ST_X select 15) select 0)] call (_QS_ST_X select 69)) then {
									_exit = TRUE;
									_c = _QS_ST_X select 16;
									_c set [3,_a];
									if (_ms > 0.80) then {
										if (_ds isEqualTo 1) then {
											_c set [3,0];
										};
									};
								};
							} else {
								if ([_u,((_QS_ST_X select 15) select 0)] call (_QS_ST_X select 69)) then {
									_exit = TRUE;
									_c = _QS_ST_X select 16;
									_c set [3,0];
								};
							};
							if (_exit) exitWith {_c;};
							if (_useTeamColor) then {
								if (isNull (objectParent _u)) then {
									private _teamID = 0;
									if (!isNil {assignedTeam _u}) then {
										_teamID = ['MAIN','RED','GREEN','BLUE','YELLOW'] find (assignedTeam _u);
										if (_teamID isEqualTo -1) then {
											_teamID = 0;
										};
									};
									if (_s isEqualTo EAST) then {_c = _QS_ST_X select 9;};
									if (_s isEqualTo WEST) then {_c = _QS_ST_X select 10;};
									if (_s isEqualTo RESISTANCE) then {_c = _QS_ST_X select 11;};
									if (_s isEqualTo CIVILIAN) then {_c = _QS_ST_X select 12;};
									_c = [_c,[1,0,0,1],[0,1,0.5,1],[0,0.5,1,1],[1,1,0,1]] select _teamID;
									_c set [3,_a];
									if (_ms > 0.80) then {
										if (_ds isEqualTo 1) then {
											_c set [3,0];
										};
									};
									_exit = TRUE;
								};
							};
							if (_exit) exitWith {_c;};
							if (_s isEqualTo EAST) exitWith {_c = _QS_ST_X select 9; _c set [3,_a];if (_ds isEqualTo 1) then {if (_ms > 0.80) then {_c set [3,0];};};_c;};
							if (_s isEqualTo WEST) exitWith {_c = _QS_ST_X select 10;_c set [3,_a];if (_ds isEqualTo 1) then {if (_ms > 0.80) then {_c set [3,0];};};_c;};
							if (_s isEqualTo RESISTANCE) exitWith {_c = _QS_ST_X select 11;_c set [3,_a];if (_ds isEqualTo 1) then {if (_ms > 0.80) then {_c set [3,0];};};_c;};
							if (_s isEqualTo CIVILIAN) exitWith {_c = _QS_ST_X select 12;_c set [3,_a];if (_ds isEqualTo 1) then {if (_ms > 0.80) then {_c set [3,0];};};_c;};
							_c = _QS_ST_X select 13;if (_ds isEqualTo 1) then { if (_ms > 0.80) then {_c set [3,0];};};_c;
						};
						_QS_fnc_iconType = {
							params ['_u'];
							private _vt = typeOf (vehicle _u);
							private _i = missionNamespace getVariable [format ['QS_ST_iconType#%1',_vt],''];
							if (_i isEqualTo '') then {
								if ((vehicle _u) isKindOf 'CAManBase') then {
									if (_u getUnitTrait 'medic') then {
										_vt = 'B_medic_F';
									} else {
										if (_u getUnitTrait 'engineer') then {
											_vt = 'B_engineer_F';
										} else {
											if (_u getUnitTrait 'explosiveSpecialist') then {
												_vt = 'B_soldier_exp_F';
											};
										};
									};
								};
								_i = getText (configFile >> 'CfgVehicles' >> _vt >> 'icon');
								missionNamespace setVariable [format ['QS_ST_iconType#%1',_vt],_i];
							};
							_i;
						};
						_QS_fnc_iconSize = {
							params ['_v','','_QS_ST_X'];
							private _i = missionNamespace getVariable [(format ['QS_ST_iconSize#%1',(typeOf _v)]),0];
							if (_i isEqualTo 0) then {
								if (_v isKindOf 'Man') then {_i = _QS_ST_X select 22;_i;};
								if (_v isKindOf 'LandVehicle') then {_i = _QS_ST_X select 23;_i;};
								if (_v isKindOf 'Air') then {_i = _QS_ST_X select 25;_i;};
								if (_v isKindOf 'StaticWeapon') then {_i = _QS_ST_X select 26; _i;};
								if (_v isKindOf 'Ship') then {_i = _QS_ST_X select 24;_i;};
								missionNamespace setVariable [(format ['QS_ST_iconSize#%1',(typeOf _v)]),_i,FALSE];
							};
							_i;
						};
						_QS_fnc_iconPosDir = {
							params ['_v','_ds','_dl'];
							private _posDir = [[0,0,0],0];
							if (_ds isEqualTo 1) then {
								if (_dl > 0) then {
									if (diag_tickTime > (missionNamespace getVariable 'QS_ST_iconUpdatePulseTimer')) then {
										_posDir = [getPosASLVisual _v,getDirVisual _v];
										_v setVariable ['QS_ST_lastPulsePos',_posDir,FALSE];
									} else {
										if (!isNil {_v getVariable 'QS_ST_lastPulsePos'}) then {
											_posDir = _v getVariable 'QS_ST_lastPulsePos';
										} else {
											_posDir = [getPosASLVisual _v,getDirVisual _v];
											_v setVariable ['QS_ST_lastPulsePos',_posDir,FALSE];
										};		
									};
								} else {
									_posDir = [getPosASLVisual _v,getDirVisual _v];
								};
							} else {
								_posDir = [getPosASLVisual _v,getDirVisual _v];
							};
							_posDir;
						};
						_QS_fnc_iconText = {
							params ['_v','_ds','_QS_ST_X',['_ms',1]];
							if ((_ds isEqualTo 2) || {(!(_QS_ST_X select 67))}) exitWith {
								''
							};
							_showMOS = _QS_ST_X select 64;
							_showAINames = _QS_ST_X select 71;
							private _t = '';
							private _n = 0;
							private _vt = missionNamespace getVariable [format ['QS_ST_iconVehicleDN#%1',(typeOf _v)],''];
							if (_vt isEqualTo '') then {
								_vt = getText (configFile >> 'CfgVehicles' >> (typeOf _v) >> 'displayName');
								missionNamespace setVariable [format ['QS_ST_iconVehicleDN#%1',(typeOf _v)],_vt];
							};
							if (!(_QS_ST_X select 64)) then {
								_vt = '';
							};
							private _vn = name ((crew _v) select 0);
							if (!isPlayer ((crew _v) select 0)) then {
								if (!(_showAINames)) then {
									_vn = '[AI]';
								};
							};
							_isAdmin = (((call (missionNamespace getVariable 'BIS_fnc_admin')) isEqualTo 2) && (_QS_ST_X select 86));
							if (((_v distance2D player) < (_QS_ST_X select 68)) || {(_isAdmin)}) then {
								if ((_ms < 0.75) || {(_isAdmin)}) then {
									if ((_ms > 0.25) || {(_isAdmin)}) then {
										if (_showMOS) then {
											_t = format ['%1 [%2]',_vn,_vt];
										} else {
											_t = format ['%1',_vn];
										};
									} else {
										if (_ms < 0.006) then {
											if (_showMOS) then {
												_t = format ['%1 [%2]',_vn,_vt];
											} else {
												_t = format ['%1',_vn];
											};
										} else {
											_t = '';
										};
									};
								} else {
									_t = '';
								};
							} else {
								if (_ms < 0.75) then {
									if (_ms > 0.25) then {
										_t = format ['%1',_vn];
									} else {
										if (_ms < 0.006) then {
											_t = format ['%1',_vn];
										} else {
											_t = '';
										};
									};
								} else {
									_t = '';
								};
							};
							if ((_v isKindOf 'LandVehicle') || {(_v isKindOf 'Air')} || {(_v isKindOf 'Ship')}) then {
								_n = 0;
								_n = (count (crew _v)) - 1;
								if (_n > 0) then {
									if (!isNil {_v getVariable 'QS_ST_mapClickShowCrew'}) then {
										if (_v getVariable 'QS_ST_mapClickShowCrew') then {
											_t = '';
											private _crewIndex = 0;
											private _na = '';
											_crewCount = (count (crew _v)) - 1;
											{
												_na = name _x;
												if (!(_showAINames)) then {
													if (!isPlayer _x) then {
														_na = '[AI]';
													};
												};
												if (!(['error',_na,FALSE] call (missionNamespace getVariable 'BIS_fnc_inString'))) then {
													if (!(_crewIndex isEqualTo _crewCount)) then {
														_t = _t + _na + ', ';
													} else {
														_t = _t + _na;
													};
												};
												_crewIndex = _crewIndex + 1;
											} count (crew _v);
										} else {
											if (!isNull driver _v) then {
												if (_ms < 0.75) then {
													if (_ms > 0.25) then {
														if (_showMOS) then {
															_t = format ['%1 [%2] +%3',_vn,_vt,_n];
														} else {
															_t = format ['%1 +%2',_vn,_n];
														};
													} else {
														if (_ms < 0.006) then {
															if (_showMOS) then {
																_t = format ['%1 [%2] +%3',_vn,_vt,_n];
															} else {
																_t = format ['%1 +%2',_vn,_n];
															};
														} else {
															_t = format ['+%1',_n];
														};
													};
												} else {
													_t = format ['+%1',_n];
												};
											} else {
												if (_ms < 0.75) then {
													if (_ms > 0.25) then {
														if (_showMOS) then {
															_t = format ['[%1] %2 +%3',_vt,_vn,_n];
														} else {
															_t = format ['%1 +%2',_vn,_n];
														};
													} else {
														if (_ms < 0.006) then {
															if (_showMOS) then {
																_t = format ['[%1] %2 +%3',_vt,_vn,_n];
															} else {
																_t = format ['%1 +%2',_vn,_n];
															};
														} else {
															_t = format ['+%1',_n];
														};
													};
												} else {
													_t = format ['+%1',_n];
												};
											};
										};
									} else {
										if (!isNull driver _v) then {
											if (_ms < 0.75) then {
												if (_ms > 0.25) then {
													if (_showMOS) then {
														_t = format ['%1 [%2] +%3',_vn,_vt,_n];
													} else {
														_t = format ['%1 +%2',_vn,_n];
													};
												} else {
													if (_ms < 0.006) then {
														if (_showMOS) then {
															_t = format ['%1 [%2] +%3',_vn,_vt,_n];
														} else {
															_t = format ['%1 +%2',_vn,_n];
														};
													} else {
														_t = format ['+%1',_n];
													};
												};
											} else {
												_t = format ['+%1',_n];
											};
										} else {
											if (_ms < 0.75) then {
												if (_ms > 0.25) then {
													if (_showMOS) then {
														_t = format ['[%1] %2 +%3',_vt,_vn,_n];
													} else {
														_t = format ['%1 +%2',_vn,_n];
													};
												} else {
													if (_ms < 0.006) then {
														if (_showMOS) then {
															_t = format ['[%1] %2 +%3',_vt,_vn,_n];
														} else {
															_t = format ['%1 +%2',_vn,_n];
														};
													} else {
														_t = format ['+%1',_n];
													};
												};
											} else {
												_t = format ['+%1',_n];
											};
										};
									};
								} else {
									if (!isNull driver _v) then {
										if (_ms < 0.75) then {
											if (_ms > 0.25) then {
												if (_showMOS) then {
													_t = format ['%1 [%2]',_vn,_vt];
												} else {
													_t = format ['%1',_vn];
												};
											} else {
												if (_ms < 0.006) then {
													if (_showMOS) then {
														_t = format ['%1 [%2]',_vn,_vt];
													} else {
														_t = format ['%1',_vn];
													};
												} else {
													_t = '';
												};
											};
										} else {
											_t = '';
										};
									} else {
										if (_ms < 0.75) then {
											if (_ms > 0.25) then {
												if (_showMOS) then {
													_t = format ['[%1] %2',_vt,_vn];
												} else {
													_t = format ['%1',_vn];
												};
											} else {
												if (_ms < 0.006) then {
													if (_showMOS) then {
														_t = format ['[%1] %2',_vt,_vn];
													} else {
														_t = format ['%1',_vn];
													};
												} else {
													_t = '';
												};
											};
										} else {
											_t = '';
										};
									};
								};
								if (unitIsUAV _v) then {
									if (isUavConnected _v) then {
										_y = (UAVControl _v) select 0;
										if (_ms < 0.75) then {
											if (_ms > 0.25) then {
												if (_showMOS) then {
													_t = format ['%1 [%2]',name _y,_vt]; _t;
												} else {
													_t = format ['%1',name _y]; _t;
												};
											} else {
												if (_ms < 0.006) then {
													if (_showMOS) then {
														_t = format ['%1 [%2]',name _y,_vt]; _t;
													} else {
														_t = format ['%1',name _y]; _t;
													};
												} else {
													_t = '';
												};
											};
										} else {
											_t = '';
										};
									} else {
										if (_ms < 0.75) then {
											if (_ms > 0.25) then {
												if (_showMOS) then {
													_t = format ['[AUTO] [%1]',_vt]; _t;
												} else {
													_t = '[AUTO]'; _t;
												};
											} else {
												if (_ms < 0.006) then {
													if (_showMOS) then {
														_t = format ['[AUTO] [%1]',_vt]; _t;
													} else {
														_t = '[AUTO]'; _t;
													};
												} else {
													_t = '';
												};
											};
										} else {
											_t = '';
										};
									};
								};
							};
							_t;
						};
						_QS_fnc_iconUnits = {
							params ['_di','_QS_ST_X'];
							private _exit = FALSE;
							private _si = [EAST,WEST,RESISTANCE,CIVILIAN];
							private _as = [];
							private _au = [];
							_isAdmin = (((call (missionNamespace getVariable 'BIS_fnc_admin')) isEqualTo 2) && (_QS_ST_X select 86));
							if (!(playerSide isEqualTo CIVILIAN)) then {
								if (!(_QS_ST_X select 74)) then {
									_si = [EAST,WEST,RESISTANCE];
								};
							};
							if ((_QS_ST_X select 61) > 0) exitWith {
								if ((_QS_ST_X select 61) isEqualTo 1) then {
									_au = allUnits + vehicles;
								};
								if ((_QS_ST_X select 61) isEqualTo 2) then {
									_au = entities [[],[],TRUE,TRUE];
								};
								_au;
							};
							if (((_di isEqualTo 1) && ((_QS_ST_X select 65))) && {(!(_QS_ST_X select 75))}) then {
								_exit = TRUE;
								_au = units (group player);
								if ((_QS_ST_X select 80)) then {
									{
										if (!(_x in _au)) then {
											if (_x getVariable ['QS_ST_drawEmptyVehicle',FALSE]) then {
												if ((crew _x) isEqualTo []) then {
													0 = _au pushBack _x;
												};
											};
										};
									} count vehicles;
								};
								_au;
							};
							if ((_di isEqualTo 2) && ((_QS_ST_X select 29))) then {
								_exit = TRUE;
								_au = units (group player);
								_au;
							};
							if (_exit) exitWith {_au;};
							if ((_QS_ST_X select 62)) then {
								_as pushBack (_si select (_QS_ST_X select 3));
							} else {
								if (isMultiplayer) then {
									if (_isAdmin) then {
										{
											0 = _as pushBack _x;
										} count _si;
									} else {
										if ((_QS_ST_X select 8)) then {
											_as pushBack (_si select (_QS_ST_X select 3));
											{
												if (((_si select (_QS_ST_X select 3)) getFriend _x) > 0.6) then {
													0 = _as pushBack _x;
												};
											} count _si;
										} else {
											_as pushBack (_si select (_QS_ST_X select 3));
											{
												0 = _as pushBack (_si select _x);
											} count (_QS_ST_X select 57);
										};
									};
								} else {
									if ((_QS_ST_X select 8)) then {
										_as pushBack (_si select (_QS_ST_X select 3));
										{
											if (((_si select (_QS_ST_X select 3)) getFriend _x) > 0.6) then {
												0 = _as pushBack _x;
											};
										} count _si;
									} else {
										_as pushBack (_si select (_QS_ST_X select 3));
										{
											0 = _as pushBack (_si select _x);
										} count (_QS_ST_X select 57);
									};
								};		
							};
							if (!(_QS_ST_X select 63)) then {
								if (isMultiplayer) then {
									if (_isAdmin) then {
										{
											if (_x isEqualTo ((crew (vehicle _x)) select 0)) then {
												0 = _au pushBack _x;
											};
										} count allUnits;
									} else {
										{
											if (((side _x) in _as) || {(captive _x)}) then {
												if (isPlayer _x) then {
													if (_di isEqualTo 2) then {
														if ((_x distance2D player) < (_QS_ST_X select 27)) then {
															if (_x isEqualTo ((crew (vehicle _x)) select 0)) then {
																0 = _au pushBack _x;
															};
														};
													} else {
														if (_x isEqualTo ((crew (vehicle _x)) select 0)) then {
															0 = _au pushBack _x;
														};
													};
												};
											};
										} count (allPlayers + allUnitsUav);
									};
								} else {
									{
										if (((side _x) in _as) || {(captive _x)}) then {
											if (isPlayer _x) then {
												if (_di isEqualTo 2) then {
													if ((_x distance2D player) < (_QS_ST_X select 27)) then {
														if (_x isEqualTo ((crew (vehicle _x)) select 0)) then {
															0 = _au pushBack _x;
														};
													};
												} else {
													if (_x isEqualTo ((crew (vehicle _x)) select 0)) then {
														0 = _au pushBack _x;
													};
												};
											};
										};
									} count (allPlayers + allUnitsUav);
								};
							} else {
								{
									if (((side _x) in _as) || {(captive _x)}) then {
										if (_di isEqualTo 2) then {
											if ((_x distance2D player) < (_QS_ST_X select 27)) then {
												if (_x isEqualTo ((crew (vehicle _x)) select 0)) then {
													0 = _au pushBack _x;
												};
											};
										} else {
											if (_x isEqualTo ((crew (vehicle _x)) select 0)) then {
												0 = _au pushBack _x;
											};
										};
									};
								} count allUnits;
							};
							if ((_di isEqualTo 1) && (_QS_ST_X select 75)) exitWith {
								_auv = [];
								{
									if (!((vehicle _x) isKindOf 'Man')) then {
										0 = _auv pushBack _x;
									};
								} count _au;
								if ((_QS_ST_X select 80)) then {
									{
										if (!(_x in _auv)) then {
											if (_x getVariable ['QS_ST_drawEmptyVehicle',FALSE]) then {
												if ((crew _x) isEqualTo []) then {
													0 = _auv pushBack _x;
												};
											};
										};
									} count vehicles;
								};
								if ((_QS_ST_X select 65)) then {
									{
										0 = _auv pushBack _x;
									} count (units (group player));
								};
								_auv;
							};
							if ((_di isEqualTo 1) && (_QS_ST_X select 80)) exitWith {
								{
									if (!(_x in _au)) then {
										if (_x getVariable ['QS_ST_drawEmptyVehicle',FALSE]) then {
											if ((crew _x) isEqualTo []) then {
												0 = _au pushBack _x;
											};
										};
									};
								} count vehicles;
								_au;
							};
							_au;
						};
						_QS_fnc_onMapSingleClick = {
							params ['_units','_position','_alt','_shift'];
							if ((!(_alt)) && (!(_shift))) then {
								if (player getVariable 'QS_ST_mapSingleClick') then {
									player setVariable ['QS_ST_mapSingleClick',FALSE,FALSE];
									if (alive (player getVariable ['QS_ST_map_vehicleShowCrew',objNull])) then {
										(player getVariable ['QS_ST_map_vehicleShowCrew',objNull]) setVariable ['QS_ST_mapClickShowCrew',FALSE,FALSE];
									};
								};
								comment "player setVariable ['QS_ST_map_vehicleShowCrew',objNull,FALSE];";
								player setVariable ['QS_ST_mapSingleClick',TRUE,FALSE];
								private _vehicle = objNull;
								_vehicles = (nearestObjects [_position,['Air','LandVehicle','Ship'],250,TRUE]) select {(alive _x)};
								if ((count _vehicles) > 0) then {
									if ((count _vehicles) > 1) then {
										private _dist = 999999;
										{
											if ((_x distance2D _position) < _dist) then {
												_dist = _x distance2D _position;
												_vehicle = _x;
											};
										} forEach _vehicles;
									} else {
										_vehicle = _vehicles select 0;
									};
								};
								_QS_ST_X = [] call (missionNamespace getVariable 'QS_ST_X');
								if (alive _vehicle) then {
									if ((count (crew _vehicle)) > 1) then {
										if ((side (effectiveCommander _vehicle)) isEqualTo playerSide) then {
											if (!(_vehicle isEqualTo (player getVariable ['QS_ST_map_vehicleShowCrew',objNull]))) then {
												player setVariable ['QS_ST_map_vehicleShowCrew',_vehicle,FALSE];
												_vehicle setVariable ['QS_ST_mapClickShowCrew',TRUE,FALSE];
											} else {
												(player getVariable ['QS_ST_map_vehicleShowCrew',objNull]) setVariable ['QS_ST_mapClickShowCrew',FALSE,FALSE];
												player setVariable ['QS_ST_map_vehicleShowCrew',objNull,FALSE];
												player setVariable ['QS_ST_mapSingleClick',FALSE,FALSE];
											};
										} else {
											(player getVariable ['QS_ST_map_vehicleShowCrew',objNull]) setVariable ['QS_ST_mapClickShowCrew',FALSE,FALSE];
											player setVariable ['QS_ST_map_vehicleShowCrew',objNull,FALSE];
											player setVariable ['QS_ST_mapSingleClick',FALSE,FALSE];
										};
									} else {
										(player getVariable ['QS_ST_map_vehicleShowCrew',objNull]) setVariable ['QS_ST_mapClickShowCrew',FALSE,FALSE];
										player setVariable ['QS_ST_map_vehicleShowCrew',objNull,FALSE];
										player setVariable ['QS_ST_mapSingleClick',FALSE,FALSE];
									};
								} else {
									(player getVariable ['QS_ST_map_vehicleShowCrew',objNull]) setVariable ['QS_ST_mapClickShowCrew',FALSE,FALSE];
									player setVariable ['QS_ST_map_vehicleShowCrew',objNull,FALSE];
									player setVariable ['QS_ST_mapSingleClick',FALSE,FALSE];
								};
							};
							if (_shift) then {
								if (player isEqualTo (leader (group player))) then {
									private _nearUnit = objNull;
									_nearUnits = (nearestObjects [_position,['CAManBase'],250,TRUE]) select {((alive _x) && ((group _x) isEqualTo (group player)) && (isNull (objectParent _x)))};
									if ((count _nearUnits) > 0) then {
										if ((count _nearUnits) > 1) then {
											private _dist = 999999;
											{
												if ((_x distance2D _position) < _dist) then {
													_dist = _x distance2D _position;
													_nearUnit = _x;
												};
											} forEach _nearUnits;
										} else {
											_nearUnit = _nearUnits select 0;
										};
									};
									if (alive _nearUnit) then {
										player groupSelectUnit [_nearUnit,(!(_nearUnit in _units))];
									};
								};
							};
						};
						_QS_fnc_mapVehicleShowCrew = {};
						_QS_fnc_iconDrawMap = {
							_m = _this select 0;
							_QS_ST_X = [] call (missionNamespace getVariable 'QS_ST_X');
							if ((_QS_ST_X select 83) && (!('ItemGPS' in (assignedItems player)))) exitWith {};
							if (diag_tickTime > (missionNamespace getVariable 'QS_ST_updateDraw_map')) then {
								missionNamespace setVariable ['QS_ST_updateDraw_map',(diag_tickTime + 3),FALSE];
								missionNamespace setVariable ['QS_ST_drawArray_map',([1,_QS_ST_X] call (_QS_ST_X select 46)),FALSE];
							};
							_sh = _QS_ST_X select 17;
							_ts = _QS_ST_X select 19;
							_tf = _QS_ST_X select 60;
							_to = _QS_ST_X select 21;
							_de = _QS_ST_X select 66;
							_player = player;
							_ms = ctrlMapScale _m;
							private _ve = objNull;
							private _po = [[0,0,0],0];
							private _is = 0;
							if (!((missionNamespace getVariable 'QS_ST_drawArray_map') isEqualTo [])) then {
								{
									if (!isNull _x) then {
										_ve = vehicle _x;
										if (alive _ve) then {
											_po = [_ve,1,_de] call (_QS_ST_X select 44);
											_is = [_ve,1,_QS_ST_X] call (_QS_ST_X select 43);
											if (_ve isEqualTo (vehicle _player)) then {
												_m drawIcon ['a3\ui_f\data\igui\cfg\islandmap\iconplayer_ca.paa',[1,0,0,0.75],(_po select 0),24,24,(_po select 1),'',0,0.03,_tf,_to];
											};
											_m drawIcon [
												([_ve,1,_QS_ST_X] call (_QS_ST_X select 42)),
												([_ve,1,_QS_ST_X,_ms] call (_QS_ST_X select 41)),
												(_po select 0),
												_is,
												_is,
												(_po select 1),
												([_ve,1,_QS_ST_X,_ms] call (_QS_ST_X select 45)),
												_sh,
												_ts,
												_tf,
												_to
											];
										};
									};
								} count (missionNamespace getVariable ['QS_ST_drawArray_map',[]]);
							};
							if (_player isEqualTo (leader (group _player))) then {
								if (!((groupSelectedUnits _player) isEqualTo [])) then {
									{
										_m drawLine [(getPosASLVisual _player),(getPosASLVisual (vehicle _x)),[0,1,1,0.5]];
									} count (groupSelectedUnits _player);
								};
							} else {
								if (isNull (objectParent _player)) then {
									if (isNull (objectParent (leader (group _player)))) then {
										if (((leader (group _player)) distance2D _player) < (_QS_ST_X select 27)) then {
											_m drawLine [(getPosASLVisual _player),(getPosASLVisual (leader (group _player))),[0,1,1,0.5]];
										};
									};
								};
							};
							if (_de > 0) then {
								if (diag_tickTime > (missionNamespace getVariable 'QS_ST_iconUpdatePulseTimer')) then {
									missionNamespace setVariable ['QS_ST_iconUpdatePulseTimer',(diag_tickTime + _de)];
								};
							};
						};
						_QS_fnc_iconDrawGPS = {
							if (
								(!('MinimapDisplay' in ((infoPanel 'left') + (infoPanel 'right')))) ||
								{(visibleMap)} ||
								{((_QS_ST_X select 84) && (!('ItemGPS' in (assignedItems player))))}
							) exitWith {};
							_m = _this select 0;
							_QS_ST_X = [] call (missionNamespace getVariable 'QS_ST_X');
							if (diag_tickTime > (missionNamespace getVariable 'QS_ST_updateDraw_gps')) then {
								missionNamespace setVariable ['QS_ST_updateDraw_gps',(diag_tickTime + 3),FALSE];
								missionNamespace setVariable ['QS_ST_drawArray_gps',([2,_QS_ST_X] call (_QS_ST_X select 46)),FALSE];
							};
							if (!((missionNamespace getVariable 'QS_ST_drawArray_gps') isEqualTo [])) then {
								_sh = _QS_ST_X select 18;
								_ts = _QS_ST_X select 20;
								_tf = _QS_ST_X select 60;
								_to = _QS_ST_X select 21;
								_de = _QS_ST_X select 66;
								private _ve = objNull;
								private _po = [[0,0,0],0];
								private _is = 0;
								{
									if (!isNull _x) then {
										_ve = vehicle _x;
										if (alive _ve) then {
											_po = [_ve,2,_de] call (_QS_ST_X select 44);
											_is = [_ve,2,_QS_ST_X] call (_QS_ST_X select 43);
											_m drawIcon [
												([_ve,2,_QS_ST_X] call (_QS_ST_X select 42)),
												([_ve,2,_QS_ST_X] call (_QS_ST_X select 41)),
												(_po select 0),
												_is,
												_is,
												(_po select 1),
												([_ve,2,_QS_ST_X] call (_QS_ST_X select 45)),
												_sh,
												_ts,
												_tf,
												_to
											];
										};
									};
								} count (missionNamespace getVariable ['QS_ST_drawArray_gps',[]]);
							};
							if (player isEqualTo (leader (group player))) then {
								if (!((groupSelectedUnits player) isEqualTo [])) then {
									{
										_m drawLine [(getPosASLVisual player),(getPosASLVisual (vehicle _x)),[0,1,1,0.5]];
									} count (groupSelectedUnits player);
								};
							} else {
								if (isNull (objectParent player)) then {
									if (isNull (objectParent (leader (group player)))) then {
										if (((leader (group player)) distance2D player) < (_QS_ST_X select 27)) then {
											_m drawLine [(getPosASLVisual player),(getPosASLVisual (leader (group player))),[0,1,1,0.5]];
										};
									};
								};
							};
						};
						_QS_fnc_groupIconText = {
							params ['_grp','_QS_ST_X','_di'];
							private _text = '';
							if (_di isEqualTo 1) then {
								if (_QS_ST_X select 36) then {
									_text = groupId _grp;
								};
							};
							_text;
						};
						_QS_fnc_groupIconType = {
							params ['_grp','_grpSize','_grpVehicle','_grpSide'];
							_grpVehicle_type = typeOf _grpVehicle;
							_vehicleClass = _grpVehicle getVariable ['QS_ST_groupVehicleClass',''];
							if (_vehicleClass isEqualTo '') then {
								_vehicleClass = getText (configFile >> 'CfgVehicles' >> _grpVehicle_type >> 'vehicleClass');
								_grpVehicle setVariable ['QS_ST_groupVehicleClass',_vehicleClass];
							};
							private _iconType = _grpVehicle getVariable ['QS_ST_groupVehicleIconType',''];
							if (!(_iconType isEqualTo '')) exitWith {
								_iconType;
							};
							_iconTypes_EAST = ['o_inf','o_motor_inf','o_mech_inf','o_armor','o_recon','o_air','o_plane','o_uav','o_med','o_art','o_mortar','o_hq','o_support','o_maint','o_service','o_naval','o_unknown'];
							_iconTypes_WEST = ['b_inf','b_motor_inf','b_mech_inf','b_armor','b_recon','b_air','b_plane','b_uav','b_med','b_art','b_mortar','b_hq','b_support','b_maint','b_service','b_naval','b_unknown'];
							_iconTypes_RESISTANCE = ['n_inf','n_motor_inf','n_mech_inf','n_armor','n_recon','n_air','n_plane','n_uav','n_med','n_art','n_mortar','n_hq','n_support','n_maint','n_service','n_naval','n_unknown'];
							_iconTypes_CIVILIAN = ['c_air','c_car','c_plane','c_ship','c_unknown'];
							private _iconTypes = [];
							if (_grpSide isEqualTo EAST) then {
								_iconTypes = _iconTypes_EAST;
							};
							if (_grpSide isEqualTo WEST) then {
								_iconTypes = _iconTypes_WEST;
							};
							if (_grpSide isEqualTo RESISTANCE) then {
								_iconTypes = _iconTypes_RESISTANCE;
							};
							if (_grpSide isEqualTo CIVILIAN) exitWith {
								_iconTypes = _iconTypes_CIVILIAN;
								if (_grpVehicle isKindOf 'Helicopter') then {
									_iconType = _iconTypes select 0;
								};
								if (_grpVehicle isKindOf 'LandVehicle') then {
									_iconType = _iconTypes select 1;
								};
								if (_grpVehicle isKindOf 'Plane') then {
									_iconType = _iconTypes select 2;
								};
								if (_grpVehicle isKindOf 'Ship') then {
									_iconType = _iconTypes select 3;
								};
								if (_grpVehicle isKindOf 'Man') then {
									_iconType = _iconTypes select 4;
								};
								_grpVehicle setVariable ['QS_ST_groupVehicleIconType',_iconType,FALSE];
								_iconType;
							};
							if ((_vehicleClass isEqualTo 'Ship') || {(_vehicleClass isEqualTo 'Submarine')}) exitWith {
								_iconType = _iconTypes select 15; _iconType;
							};
							if (_vehicleClass in ['Men','MenRecon','MenSniper','MenDiver','MenSupport','MenUrban','MenStory']) exitWith {
								_iconType = _iconTypes select 0;
								if (_vehicleClass isEqualTo 'Men') then {
									_iconType = _iconTypes select 0;
								};
								if (_vehicleClass in ['MenRecon','MenSniper','MenDiver']) then {
									_iconType = _iconTypes select 4;
								};
								if (['medic',_grpVehicle_type,FALSE] call (missionNamespace getVariable 'BIS_fnc_inString')) then {
									_iconType = _iconTypes select 8;
								};
								_grpVehicle setVariable ['QS_ST_groupVehicleIconType',_iconType,FALSE];
								_iconType;
							};
							if (_vehicleClass isEqualTo 'Static') exitWith {
								if (['mortar',_grpVehicle_type,FALSE] call (missionNamespace getVariable 'BIS_fnc_inString')) then {
									_iconType = _iconTypes select 10; 
								} else {
									_iconType = _iconTypes select 12; 
								};
								_grpVehicle setVariable ['QS_ST_groupVehicleIconType',_iconType,FALSE];
								_iconType;
							};
							if (_vehicleClass isEqualTo 'Autonomous') exitWith {
								if (['UAV',_grpVehicle_type,FALSE] call (missionNamespace getVariable 'BIS_fnc_inString')) then {
									_iconType = _iconTypes select 7; 
								} else {
									if (['UGV',_grpVehicle_type,FALSE] call (missionNamespace getVariable 'BIS_fnc_inString')) then {
										_iconType = _iconTypes select 12; 
									};
								};
								_grpVehicle setVariable ['QS_ST_groupVehicleIconType',_iconType,FALSE];
								_iconType;
							};
							if (_vehicleClass isEqualTo 'Air') exitWith {
								if (_grpVehicle isKindOf 'Helicopter') then {
									_iconType = _iconTypes select 5; 
								} else {
									_iconType = _iconTypes select 6; 
								};
								_grpVehicle setVariable ['QS_ST_groupVehicleIconType',_iconType,FALSE];
								_iconType;
							};
							if (_vehicleClass isEqualTo 'Armored') exitWith {
								if (['apc',_grpVehicle_type,FALSE] call (missionNamespace getVariable 'BIS_fnc_inString')) then {
									_iconType = _iconTypes select 2; 
								} else {
									if ((['arty',_grpVehicle_type,FALSE] call (missionNamespace getVariable 'BIS_fnc_inString')) || {(['mlrs',_grpVehicle_type,FALSE] call (missionNamespace getVariable 'BIS_fnc_inString'))}) then {
										_iconType = _iconTypes select 9; 
									} else {
										if (['mbt',_grpVehicle_type,FALSE] call (missionNamespace getVariable 'BIS_fnc_inString')) then {
											_iconType = _iconTypes select 3; 
										};
									};
								};
								_grpVehicle setVariable ['QS_ST_groupVehicleIconType',_iconType,FALSE];
								_iconType;
							};
							if (_vehicleClass isEqualTo 'Car') exitWith {
								_iconType = _iconTypes select 1; 
								_grpVehicle setVariable ['QS_ST_groupVehicleIconType',_iconType,FALSE];
								_iconType;
							};
							if (_vehicleClass isEqualTo 'Support') exitWith {
								if (['medical',_grpVehicle_type,FALSE] call (missionNamespace getVariable 'BIS_fnc_inString')) then {
									_iconType = _iconTypes select 8; 
								} else {
									if ((['ammo',_grpVehicle_type,FALSE] call (missionNamespace getVariable 'BIS_fnc_inString')) || {(['box',_grpVehicle_type,FALSE] call (missionNamespace getVariable 'BIS_fnc_inString'))} || {(['fuel',_grpVehicle_type,FALSE] call (missionNamespace getVariable 'BIS_fnc_inString'))} || {(['CRV',_grpVehicle_type,FALSE] call (missionNamespace getVariable 'BIS_fnc_inString'))} || {(['repair',_grpVehicle_type,FALSE] call (missionNamespace getVariable 'BIS_fnc_inString'))}) then {
										_iconType = _iconTypes select 14; 
									};
								};
								_grpVehicle setVariable ['QS_ST_groupVehicleIconType',_iconType,FALSE];
								_iconType;
							};
							_iconType = _iconTypes select 16;
							_grpVehicle setVariable ['QS_ST_groupVehicleIconType',_iconType,FALSE];
							_iconType;
						};
						_QS_fnc_configGroupIcon = {
							params ['_grp','_type','_QS_ST_X'];
							private _scale = 0;
							private _text = '';
							private _visibility = TRUE;
							private _grpIconColor = [0,0,0,0];
							private _iconID = -1;
							private _grpIconType = 'c_unknown';
							_grpLeader = leader _grp;
							_grpLeader_vehicle = vehicle _grpLeader;
							_grpLeader_vType = typeOf _grpLeader_vehicle;
							_grpSize = count (units _grp);
							_grpSide = side _grpLeader;
							if (_type isEqualTo 0) then {
								_grpIconType = [_grp,_grpSize,_grpLeader_vehicle,_grpSide] call (_QS_ST_X select 52);
								if (isNil "_grpIconType") then { _grpIconType = 'c_unknown'; };
								_grp setVariable ['QS_ST_Group',1,FALSE];
								_iconID = _grp addGroupIcon [_grpIconType,(_QS_ST_X select 38)];
								_grp setGroupIcon [_iconID,_grpIconType];
								_grpIconColor = [_grpLeader,_QS_ST_X] call (_QS_ST_X select 77);
								_text = [_grp,_QS_ST_X,1] call (_QS_ST_X select 51);
								_scale = (_QS_ST_X select 37);
								_visibility = TRUE;
								_grp setGroupIconParams [_grpIconColor,_text,_scale,_visibility];
								_grp setVariable ['QS_ST_Group_Icon',[_iconID,_grpIconType,_grpLeader_vType,_grpIconColor,_text,_scale,_visibility],FALSE];
							};
							if (_type isEqualTo 1) then {
								private _update = FALSE;
								private _updateIcon = FALSE;
								private _updateParams = FALSE;
								_iconDetail = _grp getVariable 'QS_ST_Group_Icon';
								_iconDetail params ['_iconID','_grpIconType','_grpLeaderType','','_text','_scale','_visibility'];
								if (!(_grpLeaderType isEqualTo (typeOf _grpLeader_vehicle))) then {
									_update = TRUE;
									_updateIcon = TRUE;
								};
								if (!(_text isEqualTo ([_grp,_QS_ST_X,1] call (_QS_ST_X select 51)))) then {
									_update = TRUE;
									_updateParams = TRUE;
								};
								if (_update) then {
									_grpIconColor = [_grpLeader_vehicle,_QS_ST_X] call (_QS_ST_X select 77);
									if (_updateIcon) then {
										_grpIconType = [_grp,_grpSize,_grpLeader_vehicle,_grpSide] call (_QS_ST_X select 52);	
										_grp setGroupIcon [_iconID,_grpIconType];
									};
									if (_updateParams) then {
										_text = [_grp,_QS_ST_X,1] call (_QS_ST_X select 51);
										_grp setGroupIconParams [_grpIconColor,_text,_scale,_visibility];
									};
									_grp setVariable ['QS_ST_Group_Icon',[_iconID,_grpIconType,_grpLeader_vType,_grpIconColor,_text,_scale,_visibility],FALSE];
								};
							};
							if (_type isEqualTo 2) then {
								_grpIconArray = _grp getVariable 'QS_ST_Group_Icon';
								_grpID = _grpIconArray select 0;
								clearGroupIcons _grp;
								_grp setVariable ['QS_ST_Group_Icon',nil,FALSE];
								_grp setVariable ['QS_ST_Group',nil,FALSE];
							};
							true;
						};
						_QS_fnc_iconColorGroup = {
							params ['_v','_QS_ST_X'];
							_u = effectiveCommander _v;
							_ps = side _u;
							private _c = [0,0,0,0];
							if (_ps isEqualTo EAST) exitWith {_c = _QS_ST_X select 9; _u setVariable ['QS_ST_groupIconColor',[_c,_ps],FALSE];_c;};
							if (_ps isEqualTo WEST) exitWith {_c = _QS_ST_X select 10; _u setVariable ['QS_ST_groupIconColor',[_c,_ps],FALSE];_c;};
							if (_ps isEqualTo RESISTANCE) exitWith {_c = _QS_ST_X select 11; _u setVariable ['QS_ST_groupIconColor',[_c,_ps],FALSE];_c;};
							if (_ps isEqualTo CIVILIAN) exitWith {_c = _QS_ST_X select 12; _u setVariable ['QS_ST_groupIconColor',[_c,_ps],FALSE];_c;};
							_c = _QS_ST_X select 13;
							_u setVariable ['QS_ST_groupIconColor',[_c,_ps],FALSE];
							_c;
						};
						_QS_fnc_onGroupIconClick = {
							scriptName 'QS_ST_onGroupIconClick';
							params ['_is3D','_group','_wpID','_button','_posx','_posy','_shift','_ctrl','_alt'];
							if (!([playerSide, (side _group)] call BIS_fnc_sideIsFriendly)) exitWith {hintSilent QS_ST_STR_text2;0 spawn {uiSleep 3;hintSilent '';};};
							_QS_ST_X = [] call (missionNamespace getVariable 'QS_ST_X');
							private _lifeState = '';
							private _unitMOS = '';
							private _unitName = '';
							private _color = [0,0,0,1];
							private _colorIncapacitated = [1,0.41,0,1];
							private _colorInjured = [0,0,0,1];
							private _colorDead = [0.4,0,0.5,0.65];
							_text = [_group,_QS_ST_X,1] call (_QS_ST_X select 51);
							_groupCount = count (units _group);
							_groupSide = side _group;
							private _unitNameList = '';
							_leader = TRUE;
							
							_squadColor = [0,0,0,1];
							if (_groupSide isEqualTo 'WEST') then {
								_squadColor = [0,0.3,0.6,1];
							};
							if (_groupSide isEqualTo 'EAST') then {
								_squadColor = [0.5,0,0,1];
							};
							if (_groupSide isEqualTo 'GUER') then {
								_squadColor = [0,0.5,0,1];
							};
							if (_groupSide isEqualTo 'CIV') then {
								_squadColor = [0.4,0,0.5,1];
							};
							if (_groupSide isEqualTo 'AMBIENT LIFE') then {
								_squadColor = [0.7,0.6,0,1];
							};
							_squadSize = 'Squad Size: ' + str _groupCount;
							
							if ((_QS_ST_X select 14)) then {
								_colorIncapacitated = _QS_ST_X select 70;
								_colorInjured = _QS_ST_X select 81;
								_colorDead = [0.4,0,0.5,0.65];
							} else {
								_colorIncapacitated = [1,0.41,0,1];
								_colorInjured = [0,0,0,1];
								_colorDead = [0.4,0,0.5,0.65];	
							};
							_showClass = _QS_ST_X select 34;
							_AINames = _QS_ST_X select 72;
							{
								_color = [0,0,0,1];
								_state = 'State: Not Hurt';
								_lifeState = lifeState _x;
								if (_lifeState isEqualTo 'INJURED') then {
									_color = _colorInjured;
									_state = 'State: Injured';
								} else {
									if (_lifeState isEqualTo 'INCAPACITATED') then {
										_color = _colorIncapacitated;
										_state = 'State: Incapacitated';
									} else {
										if (_lifeState isEqualTo 'DEAD') then {
											_color = _colorDead;
											_state = 'State: Dead';
										};
									};
								};
								if ([_x,((_QS_ST_X select 15) select 0)] call (_QS_ST_X select 69)) then {_color = _colorIncapacitated;};
								_unitMOS = getText (configFile >> 'CfgVehicles' >> (typeOf _x) >> 'displayName');
								_unitVeh = 'Vehicle: On Foot';
								if (vehicle _x != _x) then { _unitVeh = 'Vehicle: ' + getText (configFile >> 'CfgVehicles' >> (typeOf (vehicle _x)) >> 'displayName');};
								_unitName = name _x;
								if (!isPlayer _x) then {
									if (!(_AINames)) then {
										_unitName = '[AI]';
									};
								};
								if (_leader) then {
									_leader = FALSE;
									if (_showClass) then {
										_unitNameList = _unitNameList + format ["<t align='left'><t size='1.2'><t color='%2'>%1</t></t></t>",(_unitName + ':'),_color] + format ["<t align='right'><t size='0.75'><t color='%2'>%1</t></t></t>",_unitMOS,_color] + '<br/>';
									} else {
										_unitNameList = _unitNameList + format ["<t align='left'><t size='1.2'><t color='%2'>%1</t></t></t>",(_unitName + ':'),_color] + '<br/>';				
									};
								} else {
									if (_showClass) then {
										_unitNameList = _unitNameList + format ["<t align='left'><t color='%2'>%1</t></t>",(_unitName + ':'),_color] + format ["<t align='right'><t size='0.75'><t color='%2'>%1</t></t></t>",_unitMOS,_color] + '<br/>';
									} else {
										_unitNameList = _unitNameList + format ["<t align='left'><t color='%2'>%1</t></t>",(_unitName + ':'),_color] + '<br/>';				
									};
								};
								_unitNameList = _unitNameList + format ["<t align='left'><t size='0.75'><t color='%2'>%1</t></t></t>",_state,_color] + format ["<t align='right'><t size='0.75'><t color='%2'>%1</t></t></t>",_unitVeh,_color] + '<br/>';	
							} count (units _group);
							hintSilent parseText format [
								"<t align='left'><t size='2'>%1</t></t><t align='right'>%2</t><br/><br/>%3",
								_text,
								_squadSize,
								_unitNameList
							];
						};
						_QS_fnc_onGroupIconOverEnter = {
							params ['_is3D','_group','_wpID','_button','_posx','_posy','_shift','_ctrl','_alt'];
							if (!([playerSide, (side _group)] call BIS_fnc_sideIsFriendly)) exitWith {hintSilent QS_ST_STR_text2;0 spawn {uiSleep 3;hintSilent '';};};
							_QS_ST_X = [] call (missionNamespace getVariable 'QS_ST_X');
							private _lifeState = '';
							private _unitMOS = '';
							private _unitName = '';
							private _color = [0,0,0,1];
							private _colorIncapacitated = [1,0.41,0,1];
							private _colorInjured = [0,0,0,1];
							private _colorDead = [0.4,0,0.5,0.65];
							_text = [_group,_QS_ST_X,1] call (_QS_ST_X select 51);
							_groupCount = count (units _group);
							_groupSide = side _group;
							private _unitNameList = '';
							_leader = TRUE;
							
							_squadColor = [0,0,0,1];
							if (_groupSide isEqualTo 'WEST') then {
								_squadColor = [0,0.3,0.6,1];
							};
							if (_groupSide isEqualTo 'EAST') then {
								_squadColor = [0.5,0,0,1];
							};
							if (_groupSide isEqualTo 'GUER') then {
								_squadColor = [0,0.5,0,1];
							};
							if (_groupSide isEqualTo 'CIV') then {
								_squadColor = [0.4,0,0.5,1];
							};
							if (_groupSide isEqualTo 'AMBIENT LIFE') then {
								_squadColor = [0.7,0.6,0,1];
							};
							_squadSize = 'Squad Size: ' + str _groupCount;
							
							if ((_QS_ST_X select 14)) then {
								_colorIncapacitated = _QS_ST_X select 70;
								_colorInjured = _QS_ST_X select 81;
								_colorDead = [0.4,0,0.5,0.65];
							} else {
								_colorIncapacitated = [1,0.41,0,1];
								_colorInjured = [0,0,0,1];
								_colorDead = [0.4,0,0.5,0.65];	
							};
							_showClass = _QS_ST_X select 34;
							_AINames = _QS_ST_X select 72;
							{
								_color = [0,0,0,1];
								_state = 'State: Not Hurt';
								_lifeState = lifeState _x;
								if (_lifeState isEqualTo 'INJURED') then {
									_color = _colorInjured;
									_state = 'State: Injured';
								} else {
									if (_lifeState isEqualTo 'INCAPACITATED') then {
										_color = _colorIncapacitated;
										_state = 'State: Incapacitated';
									} else {
										if (_lifeState isEqualTo 'DEAD') then {
											_color = _colorDead;
											_state = 'State: Dead';
										};
									};
								};
								if ([_x,((_QS_ST_X select 15) select 0)] call (_QS_ST_X select 69)) then {_color = _colorIncapacitated;};
								_unitMOS = getText (configFile >> 'CfgVehicles' >> (typeOf _x) >> 'displayName');
								_unitVeh = 'Vehicle: On Foot';
								if (vehicle _x != _x) then { _unitVeh = 'Vehicle: ' + getText (configFile >> 'CfgVehicles' >> (typeOf (vehicle _x)) >> 'displayName');};
								_unitName = name _x;
								if (!isPlayer _x) then {
									if (!(_AINames)) then {
										_unitName = '[AI]';
									};
								};
								if (_leader) then {
									_leader = FALSE;
									if (_showClass) then {
										_unitNameList = _unitNameList + format ["<t align='left'><t size='1.2'><t color='%2'>%1</t></t></t>",(_unitName + ':'),_color] + format ["<t align='right'><t size='0.75'><t color='%2'>%1</t></t></t>",_unitMOS,_color] + '<br/>';
									} else {
										_unitNameList = _unitNameList + format ["<t align='left'><t size='1.2'><t color='%2'>%1</t></t></t>",(_unitName + ':'),_color] + '<br/>';				
									};
								} else {
									if (_showClass) then {
										_unitNameList = _unitNameList + format ["<t align='left'><t color='%2'>%1</t></t>",(_unitName + ':'),_color] + format ["<t align='right'><t size='0.75'><t color='%2'>%1</t></t></t>",_unitMOS,_color] + '<br/>';
									} else {
										_unitNameList = _unitNameList + format ["<t align='left'><t color='%2'>%1</t></t>",(_unitName + ':'),_color] + '<br/>';				
									};
								};
								_unitNameList = _unitNameList + format ["<t align='left'><t size='0.75'><t color='%2'>%1</t></t></t>",_state,_color] + format ["<t align='right'><t size='0.75'><t color='%2'>%1</t></t></t>",_unitVeh,_color] + '<br/>';	
							} count (units _group);
							hintSilent parseText format [
								"<t align='left'><t size='2'>%1</t></t><t align='right'>%2</t><br/><br/>%3",
								_text,
								_squadSize,
								_unitNameList
							];
						};
						_QS_fnc_onGroupIconOverLeave = {
							hintSilent '';
						};
						scriptName 'Soldier Tracker by Quiksilver - (Init)';
						_side = playerSide;
						_sides = [EAST,WEST,RESISTANCE,CIVILIAN];
						uiSleep 0.1;
						_QS_ST_faction = _sides find _side;
						if (_side isEqualTo EAST) then {
							_QS_ST_showFriendlySides = _QS_ST_friendlySides_EAST;
						};
						if (_side isEqualTo WEST) then {
							_QS_ST_showFriendlySides = _QS_ST_friendlySides_WEST;
						};
						if (_side isEqualTo RESISTANCE) then {
							_QS_ST_showFriendlySides = _QS_ST_friendlySides_RESISTANCE;
						};
						if (_side isEqualTo CIVILIAN) then {
							_QS_ST_showFriendlySides = _QS_ST_friendlySides_CIVILIAN;
						};
						_QS_ST_autonomousVehicles = [];
						if (!(_QS_ST_iconShadowMap in [0,1,2])) then {
							_QS_ST_iconShadowMap = 1;
						};
						if (!(_QS_ST_iconShadowGPS in [0,1,2])) then {
							_QS_ST_iconShadowGPS = 1;
						};
						if (_QS_ST_iconUpdatePulseDelay > 0) then {
							missionNamespace setVariable ['QS_ST_iconUpdatePulseTimer',diag_tickTime];
						};
						_QS_ST_iconTextFont = _QS_ST_iconTextFonts select 0;
						if (_QS_ST_enableGroupIcons) then {
							if (!(_QS_ST_map_enableUnitIcons)) then {
								_QS_ST_groupIconOffset = [0,0];
							};
						};
						_QS_ST_groupIconText = FALSE;
						_QS_ST_htmlColorMedical = [_QS_ST_MedicalIconColor select 0,_QS_ST_MedicalIconColor select 1,_QS_ST_MedicalIconColor select 2,_QS_ST_MedicalIconColor select 3] call (missionNamespace getVariable 'BIS_fnc_colorRGBtoHTML');
						_QS_ST_htmlColorInjured = [_QS_ST_colorInjured select 0,_QS_ST_colorInjured select 1,_QS_ST_colorInjured select 2,_QS_ST_colorInjured select 3] call (missionNamespace getVariable 'BIS_fnc_colorRGBtoHTML');

						_QS_ST_R = [
							_QS_ST_map_enableUnitIcons,
							_QS_ST_gps_enableUnitIcons,
							_QS_ST_enableGroupIcons,
							_QS_ST_faction,
							_QS_ST_friendlySides_EAST,
							_QS_ST_friendlySides_WEST,
							_QS_ST_friendlySides_RESISTANCE,
							_QS_ST_friendlySides_CIVILIAN,
							_QS_ST_friendlySides_Dynamic,
							_QS_ST_iconColor_EAST,
							
							_QS_ST_iconColor_WEST,
							_QS_ST_iconColor_RESISTANCE,
							_QS_ST_iconColor_CIVILIAN,
							_QS_ST_iconColor_UNKNOWN,
							_QS_ST_showMedicalWounded,
							_QS_ST_MedicalSystem,
							_QS_ST_MedicalIconColor,
							_QS_ST_iconShadowMap,
							_QS_ST_iconShadowGPS,
							_QS_ST_iconTextSize_Map,
							
							_QS_ST_iconTextSize_GPS,
							_QS_ST_iconTextOffset,
							_QS_ST_iconSize_Man,
							_QS_ST_iconSize_LandVehicle,
							_QS_ST_iconSize_Ship,
							_QS_ST_iconSize_Air,
							_QS_ST_iconSize_StaticWeapon,
							_QS_ST_GPSDist,
							_QS_ST_GPSshowNames,
							_QS_ST_GPSshowGroupOnly,
							
							_QS_ST_showAIGroups,
							_QS_ST_showGroupMapIcons,
							_QS_ST_showGroupHudIcons,
							_QS_ST_groupInteractiveIcons,
							_QS_ST_groupInteractiveIcons_showClass,
							_QS_ST_dynamicGroupID,
							_QS_ST_showGroupMapText,
							_QS_ST_groupIconScale,
							_QS_ST_groupIconOffset,
							_QS_ST_groupIconText,
							
							_QS_ST_autonomousVehicles,
							_QS_fnc_iconColor,
							_QS_fnc_iconType,
							_QS_fnc_iconSize,
							_QS_fnc_iconPosDir,
							_QS_fnc_iconText,
							_QS_fnc_iconUnits,
							_QS_fnc_onMapSingleClick,
							_QS_fnc_mapVehicleShowCrew,
							_QS_fnc_iconDrawMap,
							
							_QS_fnc_iconDrawGPS,
							_QS_fnc_groupIconText,
							_QS_fnc_groupIconType,
							_QS_fnc_configGroupIcon,
							_QS_fnc_onGroupIconClick,
							_QS_fnc_onGroupIconOverLeave,
							_QS_ST_iconMapClickShowDetail,
							_QS_ST_showFriendlySides,
							_QS_fnc_onGroupIconOverEnter,
							_QS_ST_showCivilianGroups,
							
							_QS_ST_iconTextFont,
							_QS_ST_showAll,
							_QS_ST_showFactionOnly,
							_QS_ST_showAI,
							_QS_ST_showMOS,
							_QS_ST_showGroupOnly,
							_QS_ST_iconUpdatePulseDelay,
							_QS_ST_iconMapText,
							_QS_ST_showMOS_range,
							_QS_fnc_isIncapacitated,
							
							_QS_ST_htmlColorMedical,
							_QS_ST_AINames,
							_QS_ST_showAINames,
							_QS_ST_groupTextFactionOnly,
							_QS_ST_showCivilianIcons,
							_QS_ST_showOnlyVehicles,
							_QS_ST_showOwnGroup,
							_QS_fnc_iconColorGroup,
							_QS_ST_iconColor_empty,
							_QS_ST_iconSize_empty,
							
							_QS_ST_showEmptyVehicles,
							_QS_ST_htmlColorInjured,
							_QS_ST_otherDisplays,
							_QS_ST_MAPrequireGPSItem,		
							_QS_ST_GPSrequireGPSItem,		
							_QS_ST_GRPrequireGPSItem,		
							_QS_ST_admin					
						];
						{
							missionNamespace setVariable _x;
						} forEach [
							['QS_ST_X',(compileFinal (str _QS_ST_R)),FALSE],
							['QS_ST_updateDraw_map',(diag_tickTime + 2),FALSE],
							['QS_ST_updateDraw_gps',(diag_tickTime + 1),FALSE],
							['QS_ST_drawArray_map',[],FALSE],
							['QS_ST_drawArray_gps',[],FALSE]
						];
						waitUntil {
							uiSleep 0.1; 
							!(isNull (findDisplay 12))
						};
						_QS_ST_X = [] call (missionNamespace getVariable 'QS_ST_X');
						if (_QS_ST_X select 0) then {
							((findDisplay 12) displayCtrl 51) ctrlAddEventHandler ['Draw',(format ['_this call %1',(_QS_ST_X select 49)])];
							if (_QS_ST_X select 82) then {
								[_QS_ST_X] spawn {
									scriptName 'Soldier Tracker by Quiksilver - Artillery Computer and UAV Terminal support';
									private ['_QS_display1Opened','_QS_display2Opened'];
									_QS_ST_X = _this select 0;
									_QS_display1Opened = FALSE;
									_QS_display2Opened = FALSE;
									disableSerialization;
									for '_x' from 0 to 1 step 0 do {
										if (!(_QS_display1Opened)) then {
											if (!isNull ((findDisplay 160) displayCtrl 51)) then {
												_QS_display1Opened = TRUE;
												((findDisplay 160) displayCtrl 51) ctrlAddEventHandler ['Draw',(format ['_this call %1',(_QS_ST_X select 49)])];
											};
										} else {
											if (isNull ((findDisplay 160) displayCtrl 51)) then {
												_QS_display1Opened = FALSE;
											};		
										};
										if (!(_QS_display2Opened)) then {
											if (!isNull((findDisplay -1) displayCtrl 500)) then {
												_QS_display2Opened = TRUE;
												((findDisplay -1) displayCtrl 500) ctrlAddEventHandler ['Draw',(format ['_this call %1',(_QS_ST_X select 49)])];
											};
										} else {
											if (isNull ((findDisplay -1) displayCtrl 500)) then {
												_QS_display2Opened = FALSE;
											};		
										};
										uiSleep 0.25;
									};
								};
							};
							if (_QS_ST_X select 56) then {
								player setVariable ['QS_ST_map_vehicleShowCrew',objNull,FALSE];
								player setVariable ['QS_ST_mapSingleClick',FALSE,FALSE];
								{
									addMissionEventHandler _x;
								} forEach [
									['MapSingleClick',(_QS_ST_X select 47)],
									[
										'Map',
										{
											params ['_mapIsOpened','_mapIsForced'];
											if (!(_mapIsOpened)) then {
												if (alive (player getVariable ['QS_ST_map_vehicleShowCrew',objNull])) then {
													player setVariable ['QS_ST_mapSingleClick',FALSE,FALSE];
													(player getVariable ['QS_ST_map_vehicleShowCrew',objNull]) setVariable ['QS_ST_mapClickShowCrew',FALSE,FALSE];
													player setVariable ['QS_ST_map_vehicleShowCrew',objNull,FALSE];
												};
											};
										}
									]
								];
							};
						};

						if (_QS_ST_X select 1) then {
							[_QS_ST_X] spawn {
								scriptName 'Soldier Tracker (GPS Icons) by Quiksilver - Waiting for GPS display';
								params ['_QS_ST_X'];
								disableSerialization;
								private _gps = controlNull;
								private _exit = FALSE;
								for '_x' from 0 to 1 step 0 do {
									{
										if (['311',(str _x),FALSE] call BIS_fnc_inString) then {
											if (!isNull (_x displayCtrl 101)) exitWith {
												_gps = (_x displayCtrl 101);
												_gps ctrlRemoveAllEventHandlers 'Draw';
												_gps ctrlAddEventHandler ['Draw',(format ['_this call %1',(_QS_ST_X select 50)])];
												_exit = TRUE;
											};
										};
									} forEach (uiNamespace getVariable 'IGUI_displays');
									uiSleep 0.25;
									if (_exit) exitWith {};
								};
							};
						};
						if (_QS_ST_X select 2) then {
							setGroupIconsVisible [(_QS_ST_X select 31),(_QS_ST_X select 32)];
							setGroupIconsSelectable (_QS_ST_X select 33);
							if (_QS_ST_X select 33) then {
								{
									addMissionEventHandler _x;
								} forEach [
									['GroupIconClick',(_QS_ST_X select 54)],
									['GroupIconOverEnter',(_QS_ST_X select 58)],
									['GroupIconOverLeave',(_QS_ST_X select 55)]
								];
							};
							[_QS_ST_X] spawn {
								scriptName 'Soldier Tracker (Group Icons) by Quiksilver';
								params ['_QS_ST_X'];
								_showMapUnitIcons = _QS_ST_X select 0;
								_dynamicDiplomacy = _QS_ST_X select 8;
								_showFriendlySides = _QS_ST_X select 57;
								if (isNil "_showFriendlySides") then { _showFriendlySides = [0,1,2,3]; };
								_playerFaction = _QS_ST_X select 3;
								_showAIGroups = _QS_ST_X select 30;
								_configGroupIcon = _QS_ST_X select 53;
								_showCivilianGroups = _QS_ST_X select 59;
								_groupIconsVisibleMap = _QS_ST_X select 31;
								_showOwnGroup = _QS_ST_X select 76;
								_gpsRequired = _QS_ST_X select 85;
								private _sidesFriendly = [];
								private _grp = grpNull;
								private _sides = [EAST,WEST,RESISTANCE,CIVILIAN];
								private _grpLeader = objNull;
								private _refreshGroups = FALSE;
								if (!(_showCivilianGroups)) then {
									_sides deleteAt 3;
								};
								_groupUpdateDelay_timer = 5;
								private _groupUpdateDelay = diag_tickTime + _groupUpdateDelay_timer;
								private _checkDiplomacy_delay = 10;
								private _checkDiplomacy = diag_tickTime + _checkDiplomacy_delay;
								if (_dynamicDiplomacy) then {
									_sidesFriendly = _sides;
								};
								private _as = [];
								_as pushBack (_sides select _playerFaction);
								{
									0 = _as pushBack (_sides select _x);
								} count _showFriendlySides;
								for '_x' from 0 to 1 step 0 do {
									if (_dynamicDiplomacy) then {
										if (diag_tickTime > _checkDiplomacy) then {
											_as = [];
											{
												if (((_sides select _playerFaction) getFriend _x) > 0.6) then {
													0 = _as pushBack _x;
												};
											} count _sides;
											_checkDiplomacy = diag_tickTime + _checkDiplomacy_delay;
										};
									};
									if (diag_tickTime > _groupUpdateDelay) then {
										{
											_grp = _x;
											if ((_showOwnGroup) || {((!(_showOwnGroup)) && (!(_grp isEqualTo (group player))))} || {(!(_showMapUnitIcons))}) then {
												if (({(alive _x)} count (units _grp)) > 0) then {
													if ((side _grp) in _as) then {
														_grpLeader = leader _grp;
														if (_showAIGroups) then {
															if (isNil {_grp getVariable 'QS_ST_Group'}) then {
																if (!isNull _grp) then {
																	if (!isNull _grpLeader) then {
																		[_grp,0,_QS_ST_X] call _configGroupIcon;
																	};
																};
															} else {
																if (!isNull _grp) then {
																	if (!isNull _grpLeader) then {
																		[_grp,1,_QS_ST_X] call _configGroupIcon;
																	};
																};
															};
														} else {
															if (isPlayer _grpLeader) then {
																if (isNil {_grp getVariable 'QS_ST_Group'}) then {
																	if (!isNull _grp) then {
																		if (!isNull _grpLeader) then {
																			[_grp,0,_QS_ST_X] call _configGroupIcon;
																		};
																	};
																} else {
																	if (!isNull _grp) then {
																		if (!isNull _grpLeader) then {
																			[_grp,1,_QS_ST_X] call _configGroupIcon;
																		};
																	};
																};
															};
														};
													} else {
														if (!isNil {_grp getVariable 'QS_ST_Group_Icon'}) then {
															[_grp,2,_QS_ST_X] call _configGroupIcon;
														};
													};
												} else {
													if (!isNil {_grp getVariable 'QS_ST_Group_Icon'}) then {
														[_grp,2,_QS_ST_X] call _configGroupIcon;
													};
												};
											};
											uiSleep ([0.05,0.01] select _refreshGroups);
										} count allGroups;
										if (_refreshGroups) then {
											_refreshGroups = FALSE;
										};
										_groupUpdateDelay = diag_tickTime + _groupUpdateDelay_timer;
									};
									if (_gpsRequired) then {
										if (!('ItemGPS' in (assignedItems player))) then {
											setGroupIconsVisible [FALSE,FALSE];
											waitUntil {
												uiSleep 0.25;
												('ItemGPS' in (assignedItems player))
											};
										};
									};
									if ((!(visibleMap)) && (isNull ((findDisplay 160) displayCtrl 51)) && (isNull ((findDisplay -1) displayCtrl 500))) then {
										waitUntil {
											uiSleep 0.25;
											((visibleMap) || {(!isNull ((findDisplay 160) displayCtrl 51))} || {(!isNull ((findDisplay -1) displayCtrl 500))})
										};
										_refreshGroups = TRUE;
									};
									if ((visibleMap) || {(!isNull ((findDisplay 160) displayCtrl 51))} || {(!isNull ((findDisplay -1) displayCtrl 500))}) then {
										if ((ctrlMapScale ((findDisplay 12) displayCtrl 51)) isEqualTo 1) then {
											if (groupIconsVisible select 0) then {
												setGroupIconsVisible [FALSE,(groupIconsVisible select 1)];
											};
										} else {
											if (_groupIconsVisibleMap) then {
												if (!(groupIconsVisible select 0)) then {
													setGroupIconsVisible [TRUE,(groupIconsVisible select 1)];
												};
											};
										};
									} else {
										if (_groupIconsVisibleMap) then {
											if (groupIconsVisible select 0) then {
												setGroupIconsVisible [FALSE,(groupIconsVisible select 1)];
											};
										};
									};
									uiSleep 0.1;
								};
							};
						};
					};
				}) splitString "";
				_markersCode deleteAt (count _markersCode - 1);
				_markersCode deleteAt 0;
				missionNamespace setVariable ["LM_fnc_friendlyMarkersVariable",_markersCode,true];
				[[],{
					waitUntil {!isNull (findDisplay 46) && alive player};
					(findDisplay 46) displayRemoveEventHandler ['KeyDown',(player getVariable ['LM_DEH_friendlyMarkers',-1])];
					_dehID = (findDisplay 46) displayAddEventHandler ["KeyDown", ((missionNamespace getVariable "LM_fnc_friendlyMarkersVariable") joinString "")];
					player setVariable ['LM_DEH_friendlyMarkers',_dehID];
					titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/><t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Dynamic Map Markers</t> of All Friendlies Visible Now!</t>", "PLAIN DOWN", -1, false, true];
					["IntelAdded", ["• Friendly Map Markers Added! 
	 
					<br /><font size='15' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Friendly Map Markers
					<br />
					<br /><font size='12' color='#FFFFFF'>This feature allows you to see the position, type, vehicle, and state of all friendly units regardless of faction when you open your map. This uses a combination of markers for their class or vehicle.
					<br />
					<br /><font size='14' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">How to Use:
					<br />
					<br /><font size='12' color='#FFFFFF'>• Press '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">M<font size='12' color='#FFFFFF'>' to open your '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">map<font size='12' color='#FFFFFF'>' in order to see friendly unit markers. Hovering above a squad leader will provide detailed information on each member of the squad.'!
					"]] call BIS_fnc_showNotification;
				}] remoteExec ['bis_fnc_call',0,"LM_JIP_friendlyMarkers"];
				systemchat "[ LOG ] Dynamic Map Markers of All Friendlies Visible Now!";
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},_pos] call MAZ_EZM_fnc_createDialog;
		};

		LM_fnc_ambientFlyByModule = {
			private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
			["Ambient Fly-By",[
				[
					"LIST",
					["Vehicle Type:","Choose an aircraft to conduct flyover"],
					[
						["B_Heli_Light_01_dynamicLoadout_F",
						"B_Heli_Attack_01_dynamicLoadout_F",
						"B_Heli_Transport_03_F",
						"B_Heli_Transport_03_unarmed_F",
						"B_Heli_Light_01_F",
						"B_Heli_Transport_01_F",
						"B_CTRG_Heli_Transport_01_sand_F",
						"B_CTRG_Heli_Transport_01_tropic_F",
						"B_Plane_CAS_01_dynamicLoadout_F",
						"B_Plane_Fighter_01_F",
						"B_Plane_Fighter_01_Stealth_F",
						"B_T_VTOL_01_armed_F",
						"B_T_VTOL_01_infantry_F",
						"B_T_VTOL_01_vehicle_F",
						"B_UAV_06_F",
						"B_UAV_06_medical_F",
						"B_UAV_01_F",
						"B_UAV_02_dynamicLoadout_F",
						"B_UAV_05_F",
						"O_Heli_Transport_04_F",
						"O_Heli_Transport_04_ammo_F",
						"O_Heli_Transport_04_bench_F",
						"O_Heli_Transport_04_box_F",
						"O_Heli_Transport_04_fuel_F",
						"O_Heli_Transport_04_medevac_F",
						"O_Heli_Transport_04_repair_F",
						"O_Heli_Transport_04_covered_F",
						"O_Heli_Attack_02_dynamicLoadout_F",
						"O_Heli_Light_02_dynamicLoadout_F",
						"O_Heli_Light_02_unarmed_F",
						"O_Plane_CAS_02_dynamicLoadout_F",
						"O_Plane_Fighter_02_F",
						"O_Plane_Fighter_02_Stealth_F",
						"O_T_VTOL_02_infantry_dynamicLoadout_F",
						"O_T_VTOL_02_vehicle_dynamicLoadout_F",
						"O_UAV_06_F",
						"O_UAV_06_medical_F",
						"O_UAV_02_dynamicLoadout_F",
						"O_UAV_01_F",
						"I_Heli_Transport_02_F",
						"I_Heli_light_03_dynamicLoadout_F",
						"I_Heli_light_03_unarmed_F",
						"I_C_Heli_Light_01_civil_F",
						"I_Plane_Fighter_03_dynamicLoadout_F",
						"I_Plane_Fighter_04_F",
						"I_UAV_06_F",
						"I_UAV_06_medical_F",
						"I_UAV_01_F",
						"I_UAV_02_dynamicLoadout_F",
						"C_Heli_Light_01_civil_F",
						"C_Plane_Civil_01_F",
						"C_Plane_Civil_01_racing_F",
						"C_IDAP_Heli_Transport_02_F",
						"C_UAV_06_F",
						"C_UAV_06_medical_F",
						"C_IDAP_UAV_06_antimine_F",
						"C_IDAP_UAV_01_F",
						"C_IDAP_UAV_06_F",
						"C_IDAP_UAV_06_medical_F"],
						[
							["AH-9 Pawnee","","A3\Air_F\Heli_Light_01\Data\UI\Heli_Light_01_armed_CA.paa"],["AH-99 Blackfoot","","\A3\Air_F_Beta\Heli_Attack_01\Data\UI\Heli_Attack_01_CA.paa"],["CH-67 Huron","","\A3\Air_F_Heli\Heli_Transport_03\Data\UI\Heli_Transport_03_base_CA.paa"],["CH-67 Huron (Unarmed)","","\A3\Air_F_Heli\Heli_Transport_03\Data\UI\Heli_Transport_03_base_CA.paa"],["MH-9 Hummingbird","","\A3\Air_F\Heli_Light_01\Data\UI\Heli_Light_01_CA.paa"],["UH-80 Ghost Hawk","","\A3\Air_F_Beta\Heli_Transport_01\Data\UI\Heli_Transport_01_base_CA.paa"],["UH-80 Ghost Hawk (Sand)","","\A3\Air_F_Beta\Heli_Transport_01\Data\UI\Heli_Transport_01_base_CA.paa"],["UH-80 Ghost Hawk (Tropic)","","\A3\Air_F_Beta\Heli_Transport_01\Data\UI\Heli_Transport_01_base_CA.paa"],["A-164 Wipeout (CAS)","","\A3\Air_F_EPC\Plane_CAS_01\Data\UI\Plane_CAS_01_CA.paa"],["F/A-181 Black Wasp II","","\A3\Air_F_Jets\Plane_Fighter_01\Data\UI\Fighter01_picture_ca.paa"],["F/A-181 Black Wasp II (Stealth)","","\A3\Air_F_Jets\Plane_Fighter_01\Data\UI\Fighter01_picture_ca.paa"],["V-44 X Blackfish (Armed)","","\A3\Air_F_Exp\VTOL_01\Data\UI\VTOL_01_armed_CA.paa"],["V-44 X Blackfish (Infantry Transport)","","\A3\Air_F_Exp\VTOL_01\Data\UI\VTOL_01_vehicle_CA.paa"],["V-44 X Blackfish (Vehicle Transport)","","\A3\Air_F_Exp\VTOL_01\Data\UI\VTOL_01_vehicle_CA.paa"],["AL-6 Pelican","","\A3\Air_F_Orange\UAV_06\Data\UI\UAV_06_CA.paa"],["AL-6 Pelican (Medical)","","\A3\Air_F_Orange\UAV_06\Data\UI\UAV_06_CA.paa"],["AR-2 Darter","","\A3\Drones_F\Air_F_Gamma\UAV_01\Data\UI\UAV_01_CA.paa"],["MQ-4A Greyhawk","","\A3\Drones_F\Air_F_Gamma\UAV_02\Data\UI\UAV_02_base_F.paa"],["UCAV Sentinel","","\A3\Air_F_Jets\UAV_05\Data\UI\uav_05_picture_ca.paa"],["Mi-290 Taru","","\A3\Air_F_Heli\Heli_Transport_04\Data\UI\Heli_Transport_04_CA.paa"],["Mi-290 Taru (Ammo)","","\A3\Air_F_Heli\Heli_Transport_04\Data\UI\Heli_Transport_04_ammo_CA.paa"],["Mi-290 Taru (Bench)","","\A3\Air_F_Heli\Heli_Transport_04\Data\UI\Heli_Transport_04_bench_CA.paa"],["Mi-290 Taru (Cargo)","","\A3\Air_F_Heli\Heli_Transport_04\Data\UI\Heli_Transport_04_box_CA.paa"],["Mi-290 Taru (Fuel)","","\A3\Air_F_Heli\Heli_Transport_04\Data\UI\Heli_Transport_04_fuel_CA.paa"],["Mi-290 Taru (Medical)","","\A3\Air_F_Heli\Heli_Transport_04\Data\UI\Heli_Transport_04_medevac_CA.paa"],["Mi-290 Taru (Repair)","","\A3\Air_F_Heli\Heli_Transport_04\Data\UI\Heli_Transport_04_repair_CA.paa"],["Mi-290 Taru (Transport)","","\A3\Air_F_Heli\Heli_Transport_04\Data\UI\Heli_Transport_04_covered_CA.paa"],["Mi-48 Kajman","","\A3\Air_F_Beta\Heli_Attack_02\Data\UI\Heli_Attack_02_CA.paa"],["PO-30 Orca","","\A3\Air_F\Heli_Light_02\Data\UI\Heli_Light_02_rockets_CA.paa"],["PO-30 Orca (Unarmed)","","\A3\Air_F\Heli_Light_02\Data\UI\Heli_Light_02_CA.paa"],["To-199 Neophron (CAS)","","\A3\Air_F_EPC\Plane_CAS_02\Data\UI\Plane_cas_02_F.paa"],["To-201 Shikra","","A3\Air_F_Jets\Plane_Fighter_02\Data\UI\Fighter02_picture_ca.paa"],["To-201 Shikra (Stealth)","","A3\Air_F_Jets\Plane_Fighter_02\Data\UI\Fighter02_picture_ca.paa"],["Y-32 Xi'an (Infantry Transport)","","\A3\Air_F_Exp\VTOL_02\Data\UI\VTOL_02_vehicle_CA.paa"],["Y-32 Xi'an (Vehicle Transport)","","\A3\Air_F_Exp\VTOL_02\Data\UI\VTOL_02_vehicle_CA.paa"],["Jinaah AL-6","","\A3\Air_F_Orange\UAV_06\Data\UI\UAV_06_CA.paa"],["Jinaah AL-6 (Medical)","","\A3\Air_F_Orange\UAV_06\Data\UI\UAV_06_CA.paa"],["K40 Ababil-3","","\A3\Drones_F\Air_F_Gamma\UAV_02\Data\UI\UAV_02_base_F.paa"],["Tayran AR-2","","\A3\Drones_F\Air_F_Gamma\UAV_01\Data\UI\UAV_01_CA.paa"],["CH-49 Mohawk","","\A3\Air_F_Beta\Heli_Transport_02\Data\UI\Heli_Transport_02_CA.paa"],["WY-55 Hellcat","","\A3\Air_F_EPB\Heli_Light_03\data\UI\Heli_Light_03_CA.paa"],["WY-55 Hellcat (Unarmed)","","\A3\Air_F_EPB\Heli_Light_03\data\UI\Heli_Light_03_CA.paa"],["M-900 (Syndikat)","","\A3\Air_F\Heli_Light_01\Data\UI\Heli_Light_01_CA.paa"],["A-143 Buzzard (CAS)","","\A3\Air_F_Gamma\Plane_Fighter_03\Data\UI\Plane_Fighter_03_CA.paa"],["A-149 Gryphon","","\A3\Air_F_Jets\Plane_Fighter_04\Data\UI\Fighter04_picture_ca.paa"],["AL-6 Pelican","","\A3\Air_F_Orange\UAV_06\Data\UI\UAV_06_CA.paa"],["AL-6 Pelican (Medical)","","\A3\Air_F_Orange\UAV_06\Data\UI\UAV_06_CA.paa"],["AR-2 Darter","","\A3\Drones_F\Air_F_Gamma\UAV_01\Data\UI\UAV_01_CA.paa"],["K40 Ababil-3","","\A3\Drones_F\Air_F_Gamma\UAV_02\Data\UI\UAV_02_base_F.paa"],["M-900 (Civilian)","","\A3\Air_F\Heli_Light_01\Data\UI\Heli_Light_01_CA.paa"],["Caesar BTT","","\A3\Air_F_Exp\Plane_Civil_01\Data\UI\Plane_Civil_01_CA.paa"],["Caesar BTT (Racing)","","\A3\Air_F_Exp\Plane_Civil_01\Data\UI\Plane_Civil_01_CA.paa"],["EH302","","\A3\Air_F_Beta\Heli_Transport_02\Data\UI\Heli_Transport_02_CA.paa"],["Utility Drone","","\A3\Air_F_Orange\UAV_06\Data\UI\UAV_06_CA.paa"],["Utility Drone (Medical)","","\A3\Air_F_Orange\UAV_06\Data\UI\UAV_06_CA.paa"],["Demining Drone","","\A3\Air_F_Orange\UAV_06\Data\UI\UAV_06_demining_CA.paa"],["Drone","","\A3\Drones_F\Air_F_Gamma\UAV_01\Data\UI\UAV_01_CA.paa"],["Utility Drone","","\A3\Air_F_Orange\UAV_06\Data\UI\UAV_06_CA.paa"],["Utility Drone (Medical)","","\A3\Air_F_Orange\UAV_06\Data\UI\UAV_06_CA.paa"]
						],
						0
					]
				],
				[
					"SIDES",
					["Vehicle Side:","Choose the faction the aircraft will belong to"],
					civilian
				],
				[
					"LIST",
					["Vehicle Speed:","Choose the speed the aircraft will move at"],
					[
						["LIMITED", "NORMAL", "FULL"],
						[
							["LIMITED","",""],
							["NORMAL","",""],
							["FULL","",""]
						],
						0,
						3
					]
				],
				[
					"SLIDER",
					["Vehicle Altitude:","Choose the altitude the aircraft will spawn at"],
					[25,2000,100]
				]
			],{
				params ["_values","_positionScreen","_display"];
				_values params ["_vehicleType","_vehicleSide","_vehicleSpeed","_vehicleAltitude"];
				_display closeDisplay 1;
				private _reinforcementsParams = [_positionScreen,_sideReinforcements,0,1,_atCount,[]];
				private _helipadMarker = createVehicle ["Land_HelipadEmpty_F",_positionScreen,[],0,"CAN_COLLIDE"];

				["Fly-By Final Destination",{
					params ["_objects","_position","_args","_shift","_ctrl","_alt"];
					_args params ["_positionScreen","_vehicleAltitude","_vehicleSpeed","_vehicleType","_vehicleSide","_helipadMarker"];
					[_positionScreen, _position, _vehicleAltitude, _vehicleSpeed, _vehicleType, _vehicleSide] call BIS_fnc_ambientFlyby;
					deleteVehicle _helipadMarker;
					systemChat format ["[ LOG ] %1 flyover from %2 to %3 at %4m commencing!", _vehicleType, _positionScreen, _position, _vehicleAltitude];
				},_helipadMarker,[_positionScreen,_vehicleAltitude,_vehicleSpeed,_vehicleType,_vehicleSide,_helipadMarker]] call MAZ_EZM_fnc_selectSecondaryPosition;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},_pos] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_playRadioModule = {
			_dialogues = [];
			_comms = (configfile >> "CfgRadio") call BIS_fnc_getCfgSubClasses;

			for "_x" from 0 to ((count _comms) - 1) do {
				_dialogues append [(_comms select _x)];
			};
			
			_pathsArray = [];
			_optionsArray = [];
			for "_x" from 0 to ((count _dialogues) - 1) do {
				_pathsArray append [(_dialogues select _x)];
				_optionsArray append [[(_dialogues select _x), "", ""]];
			};
			["Play Radio Message",[
				[
					"LIST",
					["Messages:","Choose a message to play across the command radio."],
					[
						_pathsArray,
						_optionsArray,
						0,
						15
					]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_options"];
				[[_options],{
					params ["_options"];
					player sideRadio _options;
				}] remoteExec ['bis_fnc_call',0,false];
				
				systemchat format ["[ LOG ] Radio Message '%1' started!", _options];
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_playDubbingModule = {
			_dialogues = [];
			_missions = (configfile >> "CfgSentences") call BIS_fnc_getCfgSubClasses;

			for "_x" from 0 to ((count _missions) - 1) do {
				_section = ((configfile >> "CfgSentences" >> (_missions select _x)) call BIS_fnc_getCfgSubClasses);
				for "_y" from 0 to ((count _section) - 1) do {
					_sentences = ((configfile >> "CfgSentences" >> (_missions select _x) >> (_section select _y) >> "Sentences") call BIS_fnc_getCfgSubClasses);
					for "_z" from 0 to ((count _sentences) - 1) do {
						_dialogues append [[_missions select _x, _section select _y, (getText(configfile >> "CfgSentences" >> (_missions select _x) >> (_section select _y) >> "Sentences" >> (_sentences select _z) >> "text")), ((getArray(configfile >> "CfgSentences" >> (_missions select _x) >> (_section select _y) >> "Sentences" >> (_sentences select _z) >> "speech")) select 0)]];
					};
				};
			};
			
			_pathsArray = [];
			_optionsArray = [];
			for "_x" from 0 to ((count _dialogues) - 1) do {
				if (((_dialogues select _x) select 2) != "") then {
					_optionsArray append [[((_dialogues select _x) select 2),((_dialogues select _x) select 0) + "/" + ((_dialogues select _x) select 1) + "/" + ((_dialogues select _x) select 3),""]];
				} else {
					_optionsArray append [[((_dialogues select _x) select 0) + "/" + ((_dialogues select _x) select 1) + "/" + ((_dialogues select _x) select 3),((_dialogues select _x) select 0) + "/" + ((_dialogues select _x) select 1) + "/" + ((_dialogues select _x) select 3),""]];
				};
				
				_track = ((_dialogues select _x) select 4);
				if (!(".ogg" in _track)) then {
					_track = _track + '.wss';
				};
				_pathsArray append [[_track, ((_dialogues select _x) select 3), ((_dialogues select _x) select 2)]];
			};
			["Play Voiceline",[
				[
					"LIST",
					["Voicelines:","Choose a voiceline to play alongside subtitles"],
					[
						_pathsArray,
						_optionsArray,
						0,
						15
					]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_options"];
				_options = [_options select 0, _options select 1, [(_options select 2)] call MAZ_EZM_fnc_checkForBlacklistedWords];
				[[_options],{
					params ["_options"];
					playSound3D  [(_options select 1), player, false, player, 1, 1, 0];
					[(side player), "HQ"] sideChat (_options select 2);
				}] remoteExec ['bis_fnc_call',0,false];
				
				systemchat format ["[ LOG ] Voiceline '%1' started!", (_options select 1)];
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_playSoundModule = {
			private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
			_trackArray =  (configfile >> "CfgSounds") call BIS_fnc_getCfgSubClasses;
			_pathsArray = [];
			_optionsArray = [];
			for "_x" from 0 to ((count _trackArray) - 1) do {
				_optionsArray append [[(_trackArray select _x),"",""]];
				
				_track = ((getArray(configfile >> "CfgSounds" >> _trackArray select _x >> "sound")) select 0);
				if (!(".ogg" in _track)) then {
					_track = _track + '.wss';
				};
				_pathsArray append [[_track, _pos]];
			};
			["Play Sound",[
				[
					"LIST",
					["Sounds:","Choose a sound to play"],
					[
						_pathsArray,
						_optionsArray,
						0,
						15
					]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_options"];
				[[_options],{
					params ["_options"];
					playSound3D  [(_options select 0), player, false, (_options select 1)];
				}] remoteExec ['bis_fnc_call',0,false];
				
				systemchat format ["[ LOG ] Sound '%1' started at position %2!", (_options select 0), (_options select 1)];
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_playTrackModule = {
			_trackArray =  (configfile >> "CfgMusic") call BIS_fnc_getCfgSubClasses;
			_optionsArray = [];
			for "_x" from 0 to ((count _trackArray) - 1) do {
				_track = (getText(configfile >> "CfgMusic" >> _trackArray select _x >> "name"));
				
				if (_track != "") then {
					_optionsArray append [[_track,"",""]];
				} else {
					_optionsArray append [[(_trackArray select _x),"",""]];
				};
			};
			["Play Track",[
				[
					"LIST",
					["Tracks:","Choose a soundtrack to play"],
					[
						_trackArray,
						_optionsArray,
						0,
						15
					]
				],
				[
					"SLIDER",
					["Track Volume:","Volume of track to be played."],
					[0,1,0.5]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_soundtrack","_volume"];
				[[_soundtrack, _volume],{
					params ["_soundtrack","_volume"];
					_trackName = (getText(configfile >> "CfgMusic" >> _soundtrack >> "name"));
					if (_trackName == '') then {
						_trackName = _soundtrack;
					};
					if (!(isNil "LM_script_ambientMusic" || {isNull LM_script_ambientMusic})) then { 
						terminate LM_script_ambientMusic;
						5 fadeMusic 0;
						sleep 5;
						playMusic "";
					};
					titleText [format ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t underline='1' shadow='1' color='#FFFFFF'> 9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>Now Playing Track: '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">%1</t>'</t>", _trackName], "PLAIN DOWN", -1, false, true];
					playMusic _soundtrack;
					5 fadeMusic _volume;
					sleep 5;
				}] remoteExec ['bis_fnc_call',0,"LM_JIP_playTrack"]; 
				
				if(_soundtrack == "Stop Tracks") then {
					systemchat format ["[ LOG ] All tracks stopped!", _soundtrack];
				} else {
					systemchat format ["[ LOG ] Track '%1' started at volume '%2'!", _soundtrack, _volume];
				};
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};

		LM_fnc_ambientMusicModule = {
			["Play Track",[
				[
					"LIST",
					["Categories:","Choose a category for track types."],
					[
						["Action","Ambient","Dance","Lead","Stealth"],
						[
							["Action","",""], ["Ambient","",""], ["Dance","",""], ["Lead","",""], ["Stealth","",""]
						],
						0,
						5
					]
				],
				[
					"SLIDER",
					["Music Volume:","Volume of tracks to be played."],
					[0,1,0.5]
				],
				[
					"TOOLBOX:ENABLED",
					["Enable Loop:","Whether to enable ambient music or to stop currently playing."],
					[true]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_category","_volume","_control"];

				_trackArray =  (configfile >> "CfgMusic") call BIS_fnc_getCfgSubClasses;
				_choosenTracks = [];
				for "_x" from 0 to ((count _trackArray) - 1) do {
					_trackClass = (getText(configfile >> "CfgMusic" >> _trackArray select _x >> "musicClass"));
					_trackTheme = (getText(configfile >> "CfgMusic" >> _trackArray select _x >> "theme"));
					
					if (_category == "Action") then {
						if ((_trackClass == "Action") || ((_trackTheme == "combat") || (_trackTheme == "Action")) || (["Track_M_", (_trackArray select _x)] call BIS_fnc_inString)) then {
							_choosenTracks append [(_trackArray select _x)];
						};
					};
					if (_category == "Ambient") then {
						if (((_trackClass == "Safe") || (_trackClass == "Calm")) || (_trackTheme == "safe") || (["Track_C_", (_trackArray select _x)] call BIS_fnc_inString) || (["Track_P_", (_trackArray select _x)] call BIS_fnc_inString)) then {
							_choosenTracks append [(_trackArray select _x)];
						};
					};
					if (_category == "Dance") then {
						if ((["Track_D_", (_trackArray select _x)] call BIS_fnc_inString) || (["Track_R_", (_trackArray select _x)] call BIS_fnc_inString)) then {
							_choosenTracks append [(_trackArray select _x)];
						};
					};
					if (_category == "Lead") then {
						if ((_trackClass == "Lead") || (["Track_O_", (_trackArray select _x)] call BIS_fnc_inString)) then {
							_choosenTracks append [(_trackArray select _x)];
						};
					};
					if (_category == "Stealth") then {
						if ((_trackClass == "Stealth") || (_trackTheme == "stealth")) then {
							_choosenTracks append [(_trackArray select _x)];
						};
					};
				};
				
				if(_control) then {
					systemchat format ["[ LOG ] Ambient music for category %1 has started!", _category];
					[[_choosenTracks, _volume, _control, _category],{
						params ["_choosenTracks","_volume","_control", "_category"];
						if (!(isNil "LM_script_ambientMusic" || {isNull LM_script_ambientMusic})) then {terminate LM_script_ambientMusic;};
						LM_script_ambientMusic = [_choosenTracks, _volume, _control, _category] spawn {
							params ["_choosenTracks","_volume","_control","_category"];
							scriptName "LM_script_ambientMusic";
							while {true} do{
								_soundtrack = _choosenTracks call BIS_fnc_selectRandom;
								_soundtrackDuration = (getNumber(configfile >> "CfgMusic" >> _soundtrack >> "duration"));
								_trackName = (getText(configfile >> "CfgMusic" >> _soundtrack >> "name"));
								if (_trackName == '') then {
									_trackName = _soundtrack;
								};
								
								5 fadeMusic 0;
								sleep 5;
								playMusic "";
								
								titleText [format ["<t size='1.2' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS:</t><t underline='1' shadow='1' color='#FFFFFF'> 9.2.0</t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>Now Playing '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">%1</t>' Track: '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">%2</t>'</t>", _category, _trackName], "PLAIN DOWN", -1, false, true];
								playMusic _soundtrack;
								5 fadeMusic _volume;
								sleep (_soundtrackDuration - 10);
								
								5 fadeMusic 0;
								sleep 5;
								playMusic "";
							};
						};
					}] remoteExec ['bis_fnc_call',0,"LM_JIP_ambientMusic"];
				} else {
					[[],{
						if (!(isNil "LM_script_ambientMusic" || {isNull LM_script_ambientMusic})) then { 
							terminate LM_script_ambientMusic;
							5 fadeMusic 0;
							sleep 5;
							playMusic "";
						};
					}] remoteExec ['bis_fnc_call',0,"LM_JIP_ambientMusic"];
					systemchat "[ LOG ] All ambient music has been stopped!";
				};
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};

		LM_fnc_playerStaminaModule = {
			["Player Stamina",[
				[
					"TOOLBOX:ENABLED",
					["Stamina Control:","Whether to enable stamina for players or to disable."],
					[true]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_stamina"];
				_display closeDisplay 1;
				
				if(_stamina) then {
					[[], { 
						player enableStamina true; 
						_eh = player getVariable "QQ_respawnStaminaHandler"; 
						if (!isNil "_eh") then { 
							player removeEventHandler ["Respawn", _eh]; 
							player setVariable ["QQ_respawnStaminaHandler", nil, true]; 
						};
						titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/><t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Stamina</t> for all players has been <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">re-enabled</t>!</t>", "PLAIN DOWN", -1, false, true];
					}] remoteExec ["bis_fnc_call", 0, "LM_JIP_playerStamina"];
					systemchat "[ LOG ] Stamina for all players has been re-enabled!";
				} else {
					[[], { 
						waitUntil { sleep 0.5; alive player && !(isNull findDisplay 46) }; 
							player enableStamina false; 

							_eh = player addEventHandler ["Respawn", { 
							player enableStamina false; 
						}]; 
						player setVariable ["QQ_respawnStaminaHandler", _eh, true]; 
						titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/><t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Stamina</t> for all players has been <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">disabled</t>!</t>", "PLAIN DOWN", -1, false, true];
					}] remoteExec ["bis_fnc_call", 0, "LM_JIP_playerStamina"];
					systemchat "[ LOG ] Stamina for all players has been disabled!";
				};
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_arsenalRestrictionsModule = {
			params ["_entity"];
			["Arsenal Restrictions",[
				[
					"SIDES",
					["Affected Side:","Choose side to restrict arsenals for."],
					west
				],
				[
					"LIST",
					["Arsenal Type:","Choose a type of virtual arsenal based on faction to assign the side."],
					[
						[["NONE",-1],["NATO",0,0,"B_UavTerminal"],["CSAT",1,1,"O_UavTerminal"],["AAF",2,2,"I_UavTerminal"],["LDF",3,2,"I_E_UavTerminal"]],
						[
							["No Major Sides","",""],
							["NATO","","A3\UI_F\data\Map\Markers\Flags\NATO_ca.paa"],
							["CSAT","","A3\UI_F\data\Map\Markers\Flags\CSAT_ca.paa"],
							["AAF","","A3\UI_F\data\Map\Markers\Flags\AAF_ca.paa"],
							["LDF","","A3\UI_F_Enoch\data\CfgMarkers\LDF_ca.paa"]
						],
						0,
						5
					]
				],
				[
					"TOOLBOX:ENABLED",
					["Gendarmerie Items:","Whether to add all Gendarmerie items to the virtual arsenal assignment."],
					[false]
				],
				[
					"TOOLBOX:ENABLED",
					["FIA Items:","Whether to add all FIA items to the virtual arsenal assignment."],
					[false]
				],
				[
					"TOOLBOX:ENABLED",
					["Syndikat Items:","Whether to add all SYNDIKAT items to the virtual arsenal assignment."],
					[false]
				],
				[
					"TOOLBOX:ENABLED",
					["Civilian Items:","Whether to add all Civilian items to the virtual arsenal assignment."],
					[false]
				]
			],{
				params ["_values","_entity","_display"];
				_values params ["_affectedSide","_arsenalType","_enableGend","_enableFIA","_enableSynd","_enableIDAP"];
				
				cratesSides = [["B_CargoNet_01_ammo_F","Box_NATO_Ammo_F","Box_T_NATO_Wps_F","Box_NATO_Wps_F","Box_NATO_Equip_F","Box_NATO_AmmoOrd_F","Box_NATO_Grenades_F","Box_NATO_WpsLaunch_F","Box_T_NATO_WpsSpecial_F","Box_NATO_WpsSpecial_F","C_T_supplyCrate_F","C_supplyCrate_F","B_supplyCrate_F","Box_NATO_Support_F","Box_NATO_Uniforms_F"],["O_CargoNet_01_ammo_F","Box_T_East_Ammo_F","Box_East_Ammo_F","Box_T_East_Wps_F","Box_East_Wps_F","Box_CSAT_Equip_F","Box_East_AmmoOrd_F","Box_East_Grenades_F","Box_East_WpsLaunch_F","Box_T_East_WpsSpecial_F","Box_East_WpsSpecial_F","O_supplyCrate_F","Box_East_Support_F","Box_CSAT_Uniforms_F"],["I_CargoNet_01_ammo_F","Box_IND_Ammo_F","Box_IND_Wps_F","Box_AAF_Equip_F","Box_IND_AmmoOrd_F","Box_IND_Grenades_F","Box_IND_WpsLaunch_F","Box_IND_WpsSpecial_F","I_supplyCrate_F","Box_IND_Support_F","Box_AAF_Uniforms_F"],["I_E_CargoNet_01_ammo_F","Box_EAF_Ammo_F","Box_EAF_Wps_F","Box_EAF_Equip_F","Box_EAF_AmmoOrd_F","Box_EAF_Grenades_F","Box_EAF_WpsLaunch_F","Box_EAF_WpsSpecial_F","I_EAF_supplyCrate_F","Box_EAF_Support_F","Box_EAF_Uniforms_F"],["Box_GEN_Equip_F"],["Box_FIA_Ammo_F","Box_FIA_Wps_F","Box_FIA_Support_F","IG_supplyCrate_F"],["Box_Syndicate_Ammo_F","Box_Syndicate_Wps_F","Box_IED_Exp_F","Box_Syndicate_WpsLaunch_F"],["C_IDAP_CargoNet_01_supplies_F","Box_IDAP_Equip_F","Box_IDAP_AmmoOrd_F","C_IDAP_supplyCrate_F","Box_IDAP_Uniforms_F"]];
				
				factionsSides = [["BLU_F","BLU_T_F","BLU_CTRG_F","BLU_W_F"],["OPF_F","OPF_T_F","OPF_R_F"],["IND_F"],["IND_E_F"],["BLU_GEN_F","OPF_GEN_F"],["BLU_G_F","OPF_G_F","IND_G_F"],["IND_C_F","IND_L_F"],["CIV_F","CIV_IDAP_F"]];
				
				if (isNil "arsenalRestrictions") then {
					arsenalRestrictions = [[[],[],[],[]],[[],[],[],[]],[[],[],[],[]],[[],[],[],[]]];
				};
				
				_choosenSide = [0,0];
				switch (_affectedSide) do
				{
					case west: { _choosenSide = [0,0,"B_UavTerminal"] };
					case east: { _choosenSide = [1,1,"O_UavTerminal"] };
					case independent: { _choosenSide = [2,2,""] };
					case civilian: { _choosenSide = [3,7,"C_UavTerminal"] };
				};
				
				arsenalRestrictions set [(_choosenSide select 0), [[],[],[],[]]];
				{
					if ((_forEachIndex == (_arsenalType select 1)) || ((_enableGend) and (_forEachIndex == 4)) || ((_enableFIA) and (_forEachIndex == 5)) || ((_enableSynd) and (_forEachIndex == 6)) || ((_enableIDAP) and (_forEachIndex == 7))) then {
						{
							_crate = _x createVehicleLocal [0,0,0];
							{
								if (!(_x in ((arsenalRestrictions select (_choosenSide select 0)) select 0)) and !(_x == "")) then {
									_clusterRestrictions = arsenalRestrictions select (_choosenSide select 0);
									_childRestrictions = _clusterRestrictions select 0;
									_childRestrictions append [_x];
									_clusterRestrictions set [0, _childRestrictions];
									arsenalRestrictions set [(_choosenSide select 0), _clusterRestrictions];
								};
							} forEach ((getItemCargo _crate) select 0);
							{
								if (!(_x in ((arsenalRestrictions select (_choosenSide select 0)) select 1)) and !(_x == "")) then {
									_clusterRestrictions = arsenalRestrictions select (_choosenSide select 0);
									_childRestrictions = _clusterRestrictions select 1;
									_childRestrictions append [_x];
									if (!((getText (configfile >> "CfgWeapons" >> _x >> "baseWeapon")) in ((arsenalRestrictions select (_choosenSide select 0)) select 1)) and !((getText (configfile >> "CfgWeapons" >> _x >> "baseWeapon")) == "")) then {
										_childRestrictions append [(getText (configfile >> "CfgWeapons" >> _x >> "baseWeapon"))];
									};
									_clusterRestrictions set [1, _childRestrictions];
									arsenalRestrictions set [(_choosenSide select 0), _clusterRestrictions];
								};
							} forEach ((getWeaponCargo _crate) select 0);
							{
								if (!(_x in ((arsenalRestrictions select (_choosenSide select 0)) select 2)) and !(_x == "")) then {
									_clusterRestrictions = arsenalRestrictions select (_choosenSide select 0);
									_childRestrictions = _clusterRestrictions select 2;
									_childRestrictions append [_x];
									_clusterRestrictions set [2, _childRestrictions];
									arsenalRestrictions set [(_choosenSide select 0), _clusterRestrictions];
								};
							} forEach ((getMagazineCargo _crate) select 0);
							{
								if (!(_x in ((arsenalRestrictions select (_choosenSide select 0)) select 3)) and !(_x == "")) then {
									_clusterRestrictions = arsenalRestrictions select (_choosenSide select 0);
									_childRestrictions = _clusterRestrictions select 3;
									_childRestrictions append [_x];
									_clusterRestrictions set [3, _childRestrictions];
									arsenalRestrictions set [(_choosenSide select 0), _clusterRestrictions];
								};
							} forEach ((getBackpackCargo _crate) select 0);
							deleteVehicle _crate;
						} forEach (cratesSides select _forEachIndex);
					};
				} forEach cratesSides;
				
				_vehicleClasses = [];
				{
					_vehicleClasses append [configName _x];
				} forEach ("true" configClasses (configFile >> "CfgVehicles"));
				{
					if ((_forEachIndex == (_arsenalType select 1)) || ((_enableGend) and (_forEachIndex == 4)) || ((_enableFIA) and (_forEachIndex == 5)) || ((_enableSynd) and (_forEachIndex == 6)) || ((_enableIDAP) and (_forEachIndex == 7))) then {
						{
							_unitClasses = format ["(getNumber (_x >> 'isMan') == 1) and (getText (_x >> 'faction') == '%1')",_x] configClasses (configFile >>"CfgVehicles");
							{
								_classLoadout = getUnitLoadout (configName _x);
								_unitItems = [];
								_unitWeapons = [];
								_unitMagazines = [];
								_unitBackpacks = [];
								
								{
									if ((_forEachIndex == 0) || (_forEachIndex == 1) || (_forEachIndex == 2) || (_forEachIndex == 8)) then {
										_weaponArray = _x;
										if (!((_weaponArray select 0) == "")) then {
											_unitWeapons append [(_weaponArray select 0)];
											{
												if ((_forEachIndex == 1) || (_forEachIndex == 2) || (_forEachIndex == 3) || (_forEachIndex == 6)) then {
													_unitItems append [_x];
												} else {
													if ((_forEachIndex == 4) || (_forEachIndex == 5)) then {
														if (count _x > 0) then {
															_unitMagazines append [_x select 0];
														};
													};
												};
											} forEach _weaponArray;
										};
									};
									if ((_forEachIndex == 3) || (_forEachIndex == 4) || (_forEachIndex == 5)) then {
										if (count _x > 0) then {
											_clothing = (_x select 0);
											if (_clothing in _vehicleClasses) then {
												_unitBackpacks append [_clothing];
											} else {
												_unitItems append [_clothing];
											};
											_clothingItemsArray = (_x select 1);
											{
												if (typeName (_x select 0) == "STRING") then {
													_class = (_x select 0);
													if (((_class call BIS_fnc_itemType) select 0) == "Item") then {
														_unitItems append [_class];
													} else {
														if (((_class call BIS_fnc_itemType) select 0) == "Weapon") then {
															_unitWeapons append [_class];
														} else {
															if (((_class call BIS_fnc_itemType) select 0) == "Magazine") then {
																_unitMagazines append [_class];
															} else {
																if (((_class call BIS_fnc_itemType) select 0) == "Equipment") then {
																	if (_class in _vehicleClasses) then {
																		_unitBackpacks append [_class];
																	} else {
																		_unitItems append [_class];
																	};
																};
															};
														};
													};
												} else {
													if (typeName (_x select 0) == "ARRAY") then {
														_clothingItemsSubWeaponArray = (_x select 0);
														_unitWeapons append [_clothingItemsSubWeaponArray select 0];
														{
															if ((_forEachIndex == 1) || (_forEachIndex == 2) || (_forEachIndex == 3) || (_forEachIndex == 6)) then {
																_unitItems append [_x];
															} else {
																if ((_forEachIndex == 4) || (_forEachIndex == 5)) then {
																	if (count _x > 0) then {
																		_unitMagazines append [_x select 0];
																	};
																};
															};
														} forEach _clothingItemsSubWeaponArray;
													};
												};
											} forEach _clothingItemsArray;
										};
									};
									if (_forEachIndex == 6) then {
										systemChat str(_x);
										_unitItems append [_x];
									};
									if (_forEachIndex == 9) then {
										_assignedItemsArray = _x;
										{
											_unitItems append [_x];
										} forEach _assignedItemsArray;
									};
								} forEach _classLoadout;
								
								{
									if (!(_x in ((arsenalRestrictions select (_choosenSide select 0)) select 0)) and !(_x == "")) then {
										_clusterRestrictions = arsenalRestrictions select (_choosenSide select 0);
										_childRestrictions = _clusterRestrictions select 0;
										_childRestrictions append [_x];
										_clusterRestrictions set [0, _childRestrictions];
										arsenalRestrictions set [(_choosenSide select 0), _clusterRestrictions];
									};
								} forEach _unitItems;
								{
									if (!(_x in ((arsenalRestrictions select (_choosenSide select 0)) select 1)) and !(_x == "")) then {
										_clusterRestrictions = arsenalRestrictions select (_choosenSide select 0);
										_childRestrictions = _clusterRestrictions select 1;
										_childRestrictions append [_x];
										_clusterRestrictions set [1, _childRestrictions];
										arsenalRestrictions set [(_choosenSide select 0), _clusterRestrictions];
									};
								} forEach _unitWeapons;
								{
									if (!(_x in ((arsenalRestrictions select (_choosenSide select 0)) select 2)) and !(_x == "")) then {
										_clusterRestrictions = arsenalRestrictions select (_choosenSide select 0);
										_childRestrictions = _clusterRestrictions select 2;
										_childRestrictions append [_x];
										_clusterRestrictions set [2, _childRestrictions];
										arsenalRestrictions set [(_choosenSide select 0), _clusterRestrictions];
									};
								} forEach _unitMagazines;
								{
									if (!(_x in ((arsenalRestrictions select (_choosenSide select 0)) select 3)) and !(_x == "")) then {
										_clusterRestrictions = arsenalRestrictions select (_choosenSide select 0);
										_childRestrictions = _clusterRestrictions select 3;
										_childRestrictions append [_x];
										_clusterRestrictions set [3, _childRestrictions];
										arsenalRestrictions set [(_choosenSide select 0), _clusterRestrictions];
									};
								} forEach _unitBackpacks;
							} forEach _unitClasses;
						} forEach _x;
					};
				} forEach factionsSides;
				
				if (!([(arsenalRestrictions select (_choosenSide select 0))] in [[[[],[],[],[]]]])) then {
					{
						if (!((configName _x) in ((arsenalRestrictions select (_choosenSide select 0)) select 0)) and !((configName _x) == "")) then {
							_clusterRestrictions = arsenalRestrictions select (_choosenSide select 0);
							_childRestrictions = _clusterRestrictions select 0;
							_childRestrictions append [(configName _x)];
							_clusterRestrictions set [0, _childRestrictions];
							arsenalRestrictions set [(_choosenSide select 0), _clusterRestrictions];
						};
					} forEach ("true" configClasses (configFile >> "CfgGlasses"));
					{
						if ((((configName _x) call BIS_fnc_itemType) select 0) == "Weapon") then {
							if (!((str((arsenalRestrictions select (_choosenSide select 0)) select 1) find (configName _x)) == -1)) then {
								if (!((configName _x) in ((arsenalRestrictions select (_choosenSide select 0)) select 1)) and !((configName _x) == "")) then {
									_clusterRestrictions = arsenalRestrictions select (_choosenSide select 0);
									_childRestrictions = _clusterRestrictions select 1;
									_childRestrictions append [(configName _x)];
									if (!((getText (configfile >> "CfgWeapons" >> (configName _x) >> "baseWeapon")) in ((arsenalRestrictions select (_choosenSide select 0)) select 1)) and !((getText (configfile >> "CfgWeapons" >> (configName _x) >> "baseWeapon")) == "")) then {
										_childRestrictions append [(getText (configfile >> "CfgWeapons" >> (configName _x) >> "baseWeapon"))];
									};
									_clusterRestrictions set [1, _childRestrictions];
									arsenalRestrictions set [(_choosenSide select 0), _clusterRestrictions];
								};
							};
						} else {
							if (((((configName _x) call BIS_fnc_itemType) select 0) == "Equipment")) then {
								if (!((str((arsenalRestrictions select (_choosenSide select 0)) select 0) find (configName _x)) == -1)) then {
									if (!((configName _x) in ((arsenalRestrictions select (_choosenSide select 0)) select 0)) and !((configName _x) == "")) then {
										_clusterRestrictions = arsenalRestrictions select (_choosenSide select 0);
										_childRestrictions = _clusterRestrictions select 0;
										_childRestrictions append [(configName _x)];
										_clusterRestrictions set [0, _childRestrictions];
										arsenalRestrictions set [(_choosenSide select 0), _clusterRestrictions];
									};
								};
							} else {
								if (((((configName _x) call BIS_fnc_itemType) select 1) == "AccessoryMuzzle") || ((((configName _x) call BIS_fnc_itemType) select 1) == "AccessoryPointer") || ((((configName _x) call BIS_fnc_itemType) select 1) == "AccessorySights") || ((((configName _x) call BIS_fnc_itemType) select 1) == "AccessoryBipod")) then {
									if (!((configName _x) in ((arsenalRestrictions select (_choosenSide select 0)) select 0)) and !((configName _x) == "")) then {
										_clusterRestrictions = arsenalRestrictions select (_choosenSide select 0);
										_childRestrictions = _clusterRestrictions select 0;
										_childRestrictions append [(configName _x)];
										_clusterRestrictions set [0, _childRestrictions];
										arsenalRestrictions set [(_choosenSide select 0), _clusterRestrictions];
									};
								};
							};
						};
					} forEach ("true" configClasses (configFile >> "CfgWeapons"));
					{
						if (!((str((arsenalRestrictions select (_choosenSide select 0)) select 2) find (configName _x)) == -1)) then {
							if (!((configName _x) in ((arsenalRestrictions select (_choosenSide select 0)) select 2)) and !((configName _x) == "")) then {
								_clusterRestrictions = arsenalRestrictions select (_choosenSide select 0);
								_childRestrictions = _clusterRestrictions select 2;
								_childRestrictions append [(configName _x)];
								_clusterRestrictions set [2, _childRestrictions];
								arsenalRestrictions set [(_choosenSide select 0), _clusterRestrictions];
							};
						};
					} forEach ("true" configClasses (configFile >> "CfgMagazines"));
					{
						if (!((str((arsenalRestrictions select (_choosenSide select 0)) select 3) find (configName _x)) == -1)) then {
							if (!((configName _x) in ((arsenalRestrictions select (_choosenSide select 0)) select 3)) and !((configName _x) == "")) then {
								_clusterRestrictions = arsenalRestrictions select (_choosenSide select 0);
								_childRestrictions = _clusterRestrictions select 3;
								_childRestrictions append [(configName _x)];
								_clusterRestrictions set [3, _childRestrictions];
								arsenalRestrictions set [(_choosenSide select 0), _clusterRestrictions];
							};
						};
					} forEach ("true" configClasses (configFile >> "CfgVehicles"));
					
					_clusterRestrictions = arsenalRestrictions select (_choosenSide select 0);
					
					_childRestrictions = _clusterRestrictions select 0;
					if (_affectedSide == independent) then {
						_childRestrictions append ["I_UavTerminal","I_E_UavTerminal","NVGoggles_INDEP"];
					};
					if ((_arsenalType select 0) == "NATO") then {
						_childRestrictions append ["H_HelmetB_TI_arid_F","H_Beret_02","V_PlateCarrierIAGL_oli","NVGoggles_OPFOR","NVGoggles_INDEP"];
					};
					if ((_arsenalType select 0) == "CSAT") then {
						_childRestrictions append ["NVGoggles_OPFOR","NVGoggles_INDEP"];
					};
					_childRestrictions append ["NVGoggles","ItemGPS","ItemRadio","ItemCompass","ItemWatch","ItemMap","Medikit","MineDetector","FirstAidKit","Toolkit",(_choosenSide select 2)];
					_clusterRestrictions set [0, _childRestrictions];
					
					_childRestrictions = _clusterRestrictions select 1;
					if ((_arsenalType select 0) == "NATO") then {
						_childRestrictions append ["LMG_Zafir_F","LMG_Mk200_F","srifle_DMR_02_sniper_F","srifle_DMR_03_tan_F"];
					} else {
						if ((_arsenalType select 0) == "CSAT") then {
							_childRestrictions append ["srifle_DMR_05_blk_F","arifle_AK12_GL_lush_F"];
						};
					};
					_childRestrictions append ["Binocular","Rangefinder"];
					_clusterRestrictions set [1, _childRestrictions];
					
					_childRestrictions = _clusterRestrictions select 3;
					if (!((_arsenalType select 0) == "NONE")) then {
						_childRestrictions append ["B_RadioBag_01_black_F","B_CombinationUnitRespirator_01_F","B_SCBA_01_F"];
					};
					if ((_arsenalType select 0) == "NATO") then {
						_childRestrictions append ["B_RadioBag_01_tropic_F","B_RadioBag_01_mtp_F"];
					} else {
						if ((_arsenalType select 0) == "CSAT") then {
							_childRestrictions append ["B_RadioBag_01_ghex_F","B_RadioBag_01_oucamo_F"];
						} else {
							if ((_arsenalType select 0) == "AAF") then {
								_childRestrictions append ["B_RadioBag_01_digi_F"];
							};
						};
					};
					_childRestrictions append ["B_Parachute"];
					_clusterRestrictions set [3, _childRestrictions];
					
					arsenalRestrictions set [(_choosenSide select 0), _clusterRestrictions];
					
					if (!((_arsenalType select 0) == "NONE")) then {
						_sidesList = ["NATO","CSAT","AAF","LDF"];
						_sidesList deleteAt (_arsenalType select 1);
						_clusterRestrictions = arsenalRestrictions select (_choosenSide select 0);

						_childRestrictions = [];
						{
							_passed = true;
							_cfgName = _x;
							{
								if ([format ["[%1]", _x], (getText (configfile >> "CfgWeapons" >> _cfgName >> "displayName"))] call BIS_fnc_inString) then {
									_passed = false;
									break;
								};
							} forEach _sidesList;
							if (!(_passed)) then {
								_childRestrictions append [_x];
							};
						} forEach (_clusterRestrictions select 0);
						_clusterRestrictions set [0, ((_clusterRestrictions select 0) - _childRestrictions)];
						
						_childRestrictions = [];
						{
							_passed = true;
							_cfgName = _x;
							{
								if ([format ["[%1]", _x], (getText (configfile >> "CfgVehicles" >> _cfgName >> "displayName"))] call BIS_fnc_inString) then {
									_passed = false;
									break;
								};
							} forEach _sidesList;
							if (!(_passed)) then {
								_childRestrictions append [_x];
							};
						} forEach (_clusterRestrictions select 3);
						_clusterRestrictions set [3, ((_clusterRestrictions select 3) - _childRestrictions)];
						
						arsenalRestrictions set [(_choosenSide select 0), _clusterRestrictions];
					};
				};
				
				_handlerCode =  (str {
					[] spawn {
						if (isNil "eventHandlersCheck") then {
							[missionNamespace, "arsenalOpened"] call BIS_fnc_removeAllScriptedEventHandlers;
							[missionNamespace, "arsenalOpened", { 
								disableSerialization; 
								params ["_display"]; 
								player setVariable ["_display",_display];
								
								_ctrlButtonClear = _display ctrlCreate ["RscButtonMenu", -1, (_display displayCtrl 44046)];
								_ctrlButtonClear ctrlSetPosition [((ctrlPosition (_display displayCtrl 44151)) select 0),((ctrlPosition (_display displayCtrl 44151)) select 1),((ctrlPosition (_display displayCtrl 44151)) select 2),((ctrlPosition (_display displayCtrl 44151)) select 3)];
								_ctrlButtonClear ctrlSetText "Clear";
								_ctrlButtonClear ctrlAddEventHandler ["ButtonClick", { player setUnitLoadout [[],[],[],[],[],[],"","",[],["","","","","",""]]; }];
								_ctrlButtonClear ctrlCommit 0;
								
								(_display displayCtrl 44448) ctrlSetPosition [((ctrlPosition (_display displayCtrl 44448)) select 0), ((ctrlPosition  (_display displayCtrl 44448)) select 1), ((((ctrlPosition (_display displayCtrl 44448)) select 2)-((ctrlPosition (_display displayCtrl 44151)) select 2)) - 0.005), ((ctrlPosition (_display displayCtrl 44448)) select 3)];
								(_display displayCtrl 44448) ctrlCommit 0;
								
								(_display displayCtrl 44151) ctrlSetPosition [(((ctrlPosition (_display displayCtrl 44448)) select 2) + 0.0025),((ctrlPosition _ctrlButtonClear) select 1),(((ctrlPosition _ctrlButtonClear) select 2) + 0.0025),((ctrlPosition _ctrlButtonClear) select 3)];
								(_display displayCtrl 44151) ctrlCommit 0;
								
								_display displayAddEventHandler ["keydown", "_this select 3"];
								
								(_display displayCtrl 44150) ctrlSetTooltip "Randomize the loadout";
								(_display displayCtrl 44146) ctrlSetTooltip "Save the current loadout";
								(_display displayCtrl 44149) ctrlSetTooltip "Import an exported loadout or unit classname";
								(_display displayCtrl 44148) ctrlSetTooltip "Export the current loadout to be used in scripts or shared with others";
								
								(_display displayCtrl 35119) ctrlAddEventHandler ["LBDblClick", { [] spawn { sleep 0.5; [] call loadoutCheck; }; }];
								(_display displayCtrl 36019) ctrlAddEventHandler ["ButtonClick", { [] spawn { sleep 0.5; [] call loadoutCheck; }; }];
								
								_ctrlButtonLoad = _display displayCtrl 44147;
								_ctrlButtonLoad ctrlSetTooltip "Select a Custom Loadout";
								
								_arsenalType = missionNamespace getVariable ["LM_var_arsenalType","NONE"];
								_enableGend = missionNamespace getVariable ["LM_var_enableGend",false];
								_enableFIA = missionNamespace getVariable ["LM_var_enableFIA",false];
								_enableSynd = missionNamespace getVariable ["LM_var_enableSynd",false];
								_enableIDAP = missionNamespace getVariable ["LM_var_enableIDAP",false];
								
								_ctrlRestrictNotice = _display ctrlCreate ["RscStructuredText", -1, (_display displayCtrl 44151)]; 
								_ctrlRestrictNotice ctrlSetPosition [0.15,1.205,0.7,0.12];
								_ctrlRestrictNotice ctrlSetBackgroundColor [0,0,0,0.6];
								if ((_arsenalType == "NONE") and (_enableGend == false) and (_enableFIA == false) and (_enableSynd == false) and (_enableIDAP == false)) then {
									 _ctrlRestrictNotice ctrlSetStructuredText parseText (format["<t size='0.9' align='center' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color='%1'>AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>Your Side's <t color='%1'>Arsenal</t> is not currently restricted to any items!<br/><t underline='1'>You may use <t color='%1'>any items</t> that are <t color='%1'>visible</t> in this Arsenal!</t></t>", [(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML]);
								} else {
									if ((_arsenalType == "NONE") and ((_enableGend == true) || (_enableFIA == true) || (_enableSynd == true) || (_enableIDAP == true))) then {
										_ctrlRestrictNotice ctrlSetStructuredText parseText (format ["<t size='0.9' align='center' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color='%1'>AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>Your Side's <t color='%1'>Arsenal</t> has been restricted to a '<t color='%1'>Minor Faction's</t>' items!<br/><t underline='1'>Said <t color='%1'>permitted items</t> are only those <t color='%1'>visible</t> in this Arsenal!</t></t>", [(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML]);
									} else {
										_ctrlRestrictNotice ctrlSetStructuredText parseText (format ["<t size='0.9' align='center' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color='%2'>AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>Your Side's <t color='%2'>Arsenal</t> has been restricted to only '<t color='%2'>%1</t>' items!<br/><t underline='1'>Said <t color='%2'>permitted items</t> are only those <t color='%2'>visible</t> in this Arsenal!</t></t>", _arsenalType, [(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML]);
									};
								};
								_ctrlRestrictNotice ctrlCommit 0;
							}] call BIS_fnc_addScriptedEventHandler;
							
							eventHandlersCheck = true;
						};
					};
				}) splitString "";
				_handlerCode deleteAt (count _handlerCode - 1);
				_handlerCode deleteAt 0;
				missionNamespace setVariable ["LM_fnc_arsenalRestrictionsVariable",_handlerCode,true];
				
				missionNamespace setVariable ["LM_var_arsenalType",(_arsenalType select 0),true];
				missionNamespace setVariable ["LM_var_enableGend",_enableGend,true];
				missionNamespace setVariable ["LM_var_enableFIA",_enableFIA,true];
				missionNamespace setVariable ["LM_var_enableSynd",_enableSynd,true];
				missionNamespace setVariable ["LM_var_enableIDAP",_enableIDAP,true];
				
				[[arsenalRestrictions, _affectedSide, (_arsenalType select 0),_enableGend,_enableFIA,_enableSynd,_enableIDAP], {
					params ["_restrictions", "_affectedSide", "_arsenalType","_enableGend","_enableFIA","_enableSynd","_enableIDAP"];
					arsenalRestrictions = _restrictions;
					loadoutCheck = {
						_playerLoadout = getUnitLoadout player;
						_playerSide = side player;
						_restrictionsIndex = 0;
						switch (_playerSide) do
						{
							case west: { _restrictionsIndex = 0 };
							case east: { _restrictionsIndex = 1 };
							case independent: { _restrictionsIndex = 2 };
							case civilian: { _restrictionsIndex = 3 };
						};
						if (!([(arsenalRestrictions select _restrictionsIndex)] in [[[[],[],[],[]]]])) then {
							{
								if ((_forEachIndex == 0) || (_forEachIndex == 1) || (_forEachIndex == 2) || (_forEachIndex == 8)) then {
									_weaponArray = _x;
									if (!((_weaponArray select 0) == "")) then {
										if (((_weaponArray select 0) in ((arsenalRestrictions select _restrictionsIndex) select 1))) then {
											{
												if ((_forEachIndex == 1) || (_forEachIndex == 2) || (_forEachIndex == 3) || (_forEachIndex == 6)) then {
													if (!(_x in ((arsenalRestrictions select _restrictionsIndex) select 0))) then {
														_weaponArray set [_forEachIndex, ""];
													};
												} else {
													if ((_forEachIndex == 4) || (_forEachIndex == 5)) then {
														if (!((_x select 0) in ((arsenalRestrictions select _restrictionsIndex) select 2))) then {
															_weaponArray set [_forEachIndex, []];
														};
													};
												};
											} forEach _weaponArray;
										} else {
											_weaponArray = ["", "", "", "", [], [], ""];
										};
									} else {
										_weaponArray = ["", "", "", "", [], [], ""];
									};
									_playerLoadout set [_forEachIndex, _weaponArray];
								};
								if ((_forEachIndex == 3) || (_forEachIndex == 4) || (_forEachIndex == 5)) then {
									_clothingArray = _x;
									if (((_clothingArray select 0) in ((arsenalRestrictions select _restrictionsIndex) select 0)) || ((_clothingArray select 0) in ((arsenalRestrictions select _restrictionsIndex) select 3))) then {
										_clothingItemsArray = (_x select 1);
										{
											if (typeName (_x select 0) == "STRING") then {
												if (!(((_x select 0) in ((arsenalRestrictions select _restrictionsIndex) select 0)) || ((_x select 0) in ((arsenalRestrictions select _restrictionsIndex) select 2)) || ((_x select 0) in ((arsenalRestrictions select _restrictionsIndex) select 3)))) then {
													_clothingItemsArray deleteAt _forEachIndex;
												};
											} else {
												if (typeName (_x select 0) == "ARRAY") then {
													_clothingItemsSubWeaponArray = _x;
													if ((_clothingItemsSubWeaponArray select 0) in ((arsenalRestrictions select _restrictionsIndex) select 1)) then {
														{
															if ((_forEachIndex == 1) || (_forEachIndex == 2) || (_forEachIndex == 3) || (_forEachIndex == 6)) then {
																if (!(_x in ((arsenalRestrictions select _restrictionsIndex) select 0))) then {
																	_clothingItemsSubWeaponArray set [_forEachIndex, ""];
																};
															} else {
																if ((_forEachIndex == 4) || (_forEachIndex == 5)) then {
																	if (!((_x select 0) in ((arsenalRestrictions select _restrictionsIndex) select 2))) then {
																		_clothingItemsSubWeaponArray set [_forEachIndex, []];
																	};
																};
															};
														} forEach _clothingItemsSubWeaponArray;
													} else {
														_clothingItemsSubWeaponArray = ["", "", "", "", [], [], ""];
													};
													_clothingItemsArray set [_forEachIndex, _clothingItemsSubWeaponArray];
												};
											};
										} forEach (_x select 1);
										_clothingArray set [1, _clothingItemsArray];
									} else {
										_clothingArray = ["", []];
									};
									_playerLoadout set [_forEachIndex, _clothingArray];
								};
								if ((_forEachIndex == 6)) then {
									if (!(_x in ((arsenalRestrictions select _restrictionsIndex) select 0))) then {
										_playerLoadout set [_forEachIndex, ""];
									};
								};
								if (_forEachIndex == 9) then {
									_assignedItemsArray = (_playerLoadout select _forEachIndex);
									{
										if (!(_x in ((arsenalRestrictions select _restrictionsIndex) select 0))) then {
											_assignedItemsArray set [_forEachIndex, ""];
										};
									} forEach _assignedItemsArray;
									_playerLoadout set [_forEachIndex, _assignedItemsArray];
								};
							} forEach _playerLoadout;
							
							if (!([(getUnitLoadout player)] in [[_playerLoadout]])) then {
								playSound "3DEN_notificationWarning";
								systemChat "[ LOG ] Restricted arsenal items were found in your loadout and have been removed!";
								player setUnitLoadout _playerLoadout;
							};
						};
					};
				
					arsenalCleaner = {
						params ['_entity'];
						_playerSide = side player;
						_restrictionsIndex = 0;
						switch (_playerSide) do
						{
							case west: { _restrictionsIndex = 0 };
							case east: { _restrictionsIndex = 1 };
							case independent: { _restrictionsIndex = 2 };
							case civilian: { _restrictionsIndex = 3 };
						};
						if (!([(arsenalRestrictions select _restrictionsIndex)] in [[[[],[],[],[]]]])) then {
							clearItemCargoGlobal _entity;
							clearWeaponCargoGlobal _entity;
							clearMagazineCargoGlobal _entity;
							clearBackpackCargoGlobal _entity;
							{
								if (!([_x] in [[[]]])) then {
									_itemType = _forEachIndex;
									[_entity, _x, true, true, 1, _itemType] call BIS_fnc_addVirtualItemCargo;
								};
							} forEach (arsenalRestrictions select _restrictionsIndex);
						};
					};
					
					waitUntil {!isNull (findDisplay 46) && alive player};
					(findDisplay 46) displayAddEventHandler ["KeyDown", ((missionNamespace getVariable "LM_fnc_arsenalRestrictionsVariable") joinString "")];
					
					if (side player == _affectedSide) then {
						if ((_arsenalType == "NONE") and (_enableGend == false) and (_enableFIA == false) and (_enableSynd == false) and (_enableIDAP == false)) then {
							 titleText [format["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color='%1'>AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>Your Side's <t color='%1'>Arsenal</t> is no longer restricted to any items!</t>", [(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML], "PLAIN DOWN", -1, false, true];
						} else {
							if ((_arsenalType == "NONE") and ((_enableGend == true) || (_enableFIA == true) || (_enableSynd == true) || (_enableIDAP == true))) then {
								titleText [format ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color='%1'>AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>Your Side's <t color='%1'>Arsenal</t> has been restricted to a '<t color='%1'>Minor Faction's</t>' items!</t>", [(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML], "PLAIN DOWN", -1, false, true];
							} else {
								titleText [format ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color='%2'>AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>Your Side's <t color='%2'>Arsenal</t> has been restricted to only '<t color='%2'>%1</t>' items!</t>", _arsenalType, [(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML], "PLAIN DOWN", -1, false, true];
							};
						};
					};
				}] remoteExec ["bis_fnc_call",0,true];
				
				if(isNull _entity) then {
					["Friendly tip, place this module on a object or unit to make an arsenal with only the selected whitelisted items!",""] call MAZ_EZM_fnc_systemMessage;
				} else {
					[_entity] call JAM_EZM_fnc_createAIOArsenalModule;
				};
				[format ["Updated arsenal restrictions for '%1' side to type '%2' with options Gendermarie '%3', FIA '%4', Syndikat '%5', and Civilian '%6'!",_affectedSide,(_arsenalType select 0),_enableGend,_enableFIA,_enableSynd,_enableIDAP],""] call MAZ_EZM_fnc_systemMessage;

				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},_entity] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_arsenalRespawnModule = {
			{ 
				player addMPEventHandler ["MPRespawn", { 
					_arsenalEH = player addAction ["<t color='#ffffff'>Open Arsenal</t>", {
						params ['_object', '_caller', '_id'];
						
						[] call LM_fnc_arsenalOpen;
						
						[player, _id] remoteExec ['removeAction', 0, true];
					}]; 
					[_arsenalEH] spawn {
						sleep 120;
						[player, (_this select 0)] remoteExec ['removeAction', 0, true];
					};
				}];
				titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/><t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Arsenal</t> action on respawn enabled for all players!</t>", "PLAIN DOWN", -1, false, true];
				["IntelAdded", ["• Arsenal on Respawn Added! 
 
				<br /><font size='15' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Arsenal on Respawn
				<br />
				<br /><font size='12' color='#FFFFFF'>This feature allows you to open the Arsenal one time whenever you respawn so you can access key gear in the field.
				<br />
				<br /><font size='14' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">How to Use:
				<br />
				<br /><font size='12' color='#FFFFFF'>• After you respawn use your '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">scroll wheel<font size='12' color='#FFFFFF'>' and then select the action '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Open Arsenal<font size='12' color='#FFFFFF'>' by pressing '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">space<font size='12' color='#FFFFFF'>'!
				"]] call BIS_fnc_showNotification;
			} remoteExec ["bis_fnc_call",0,"LM_JIP_arsenalRespawn"];
			systemchat "[ LOG ] Arsenal action on respawn enabled for all players!";
		};
		
		LM_fnc_respawnLoadoutModule = {
			{ 
				player removeMPEventHandler ['MPKilled', (player getVariable ['LM_MPEH_respawnLoadout_Killed',-1])];
				player removeMPEventHandler ['MPRespawn', (player getVariable ['LM_MPEH_respawnLoadout_Respawn',-1])];
				_mpehID_Killed = player addMPEventHandler ["MPKilled", {
					player setVariable ["Saved_Loadout",getUnitLoadout player];
				}];
				_mpehID_Respawn = player addMPEventHandler ["MPRespawn", {
					_loadoutEH = player addAction ["<t color='#ffffff'>Load Last Loadout</t>", {
						params ['_object', '_caller', '_id'];
						private _loadout = player getVariable ["Saved_Loadout",[]];
						player setUnitLoadout [_loadout, true];

						[player, _id] remoteExec ['removeAction', 0, true];
					}]; 
					[_loadoutEH] spawn {
						sleep 120;
						[player, (_this select 0)] remoteExec ['removeAction', 0, true];
					};
				}];
				player setVariable ['LM_MPEH_respawnLoadout_Killed',_mpehID_Killed];
				player setVariable ['LM_MPEH_respawnLoadout_Respawn',_mpehID_Respawn];
				titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/><t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Last Loadout</t> action on respawn enabled for all players!</t>", "PLAIN DOWN", -1, false, true];
				["IntelAdded", ["• Last Loadout action on respawn added for all players! 
 
				<br /><font size='15' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Last Loadout on Respawn
				<br />
				<br /><font size='12' color='#FFFFFF'>This feature allows you to load your loadout from the last time you died one time so when you respawn so you can access your prior gear in the field.
				<br />
				<br /><font size='14' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">How to Use:
				<br />
				<br /><font size='12' color='#FFFFFF'>• After you respawn use your '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">scroll wheel<font size='12' color='#FFFFFF'>' and then select the action '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Load Last Loadout<font size='12' color='#FFFFFF'>' by pressing '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">space<font size='12' color='#FFFFFF'>'!
				"]] call BIS_fnc_showNotification;
			} remoteExec ["bis_fnc_call",0,"LM_JIP_respawnLoadout"];
			systemchat "[ LOG ] Last Loadout action on respawn enabled for all players!";
		};
		
		LM_fnc_createChannelModule = {
			["Create Radio Channel",[
				[
					"EDIT",
					["Channel Name:","Enter a channel name, one that is not already in use."],
					[""]
				],
				[
					"LIST",
					["Channel Color:","Choose a color for the new channel."],
					[
						[[0,0,0,1],[0,0,1,1],[0,0.3,0.6,1],[0.5,0.25,0,1],[0,0.8,0,1],[0,0.5,0,1],[0.5,0.5,0.5,1],[0.5,0.6,0.4,1],[0.85,0.4,0,1],[1,0.3,0.4,1],[0.4,0,0.5,1],[0.9,0,0,1],[0.5,0,0,1],[1,1,1,1],[0.85,0.85,0,1],[0.7,0.6,0,1]],
						[
							["Black","",""],
							["Blue","",""],
							["Blue (BLUFOR)","",""],
							["Brown","",""],
							["Green","",""],
							["Green (Independent)","",""],
							["Grey","",""],
							["Khaki","",""],
							["Orange","",""],
							["Pink","",""],
							["Pink (Civilian)","",""],
							["Red","",""],
							["Red (OPFOR)","",""],
							["White","",""],
							["Yellow","",""],
							["Yellow (Unknown)","",""]
						],
						0,
						16
					]
				],
				[
					"SIDES",
					["Channel Side:","Choose side to restrict channel to."],
					west
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_name","_color","_side"];
				_display closeDisplay 1;
				
				
				[[_name, _color, _side], {
					params ["_name", "_color", "_side"];
					private _channelID = radioChannelCreate [_color, _name, "%UNIT_NAME", []];
					if (_channelID == 0) exitWith {diag_log format ["[ LOG ] Custom channel '%1' creation failed, try a different parameters!", _name]};
					if((side player) == _side) then {
						_channelID radioChannelAdd [player];
					};
					[_side, "HQ"] sideChat format ["Be aware new channel '%1' now available for our side's use!", _name];
					["IntelAdded", ["• New Channel Added! 
	 
					<br /><font size='15' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">New Channel
					<br />
					<br /><font size='12' color='#FFFFFF'>This feature allows you to talk over voice and text in a new channel just for your side!
					<br />
					<br /><font size='14' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">How to Use:
					<br />
					<br /><font size='12' color='#FFFFFF'>• If the channel was created for your side press '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">,<font size='12' color='#FFFFFF'>' or '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">.<font size='12' color='#FFFFFF'>' in order to change your channel until you see it!
					"]] call BIS_fnc_showNotification;
				}] remoteExec ["bis_fnc_call",0,true];
				systemchat format ["[ LOG ] Channel '%1' created for side '%2'!", _name, _side];
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};		
		
		LM_fnc_playVideoModule = {
			params ["_entity"];
			["Play Video",[
				[
					"LIST",
					["Video Selection:","Choose a video to play on the object's screens."],
					[
						[["",_entity], ["a3\data_f_argo\video\preview_argo.ogv",_entity], ["a3\data_f_curator\video\preview_curator.ogv",_entity], ["a3\data_f_exp\video\preview_expansion.ogv",_entity], ["a3\data_f_heli\video\preview_heli.ogv",_entity], ["a3\data_f_jets\video\preview_jets.ogv",_entity], ["a3\data_f_kart\video\preview_kart.ogv",_entity], ["a3\data_f_mark\video\preview_mark.ogv",_entity], ["a3\data_f_orange\video\preview_orange.ogv",_entity], ["a3\data_f_tank\video\preview_tank.ogv",_entity], ["a3\map_altis_scenes_f\video\previewvideo.ogv",_entity], ["a3\map_malden_scenes_f\video\previewvideo.ogv",_entity], ["a3\map_stratis_scenes_f\video\previewvideo.ogv",_entity], ["a3\map_tanoa_scenes_f\video\previewvideo.ogv",_entity], ["a3\map_vr_scenes_f\video\previewvideo.ogv",_entity], ["a3\missions_f\video\helicopters.ogv",_entity], ["a3\missions_f\video\infantry.ogv",_entity], ["a3\missions_f\video\scuba.ogv",_entity], ["a3\missions_f\video\supports.ogv",_entity], ["a3\missions_f\video\vehicles.ogv",_entity], ["a3\missions_f_beta\video\combined_arms.ogv",_entity], ["a3\missions_f_beta\video\commanding.ogv",_entity], ["a3\missions_f_beta\video\defend.ogv",_entity], ["a3\missions_f_beta\video\night.ogv",_entity], ["a3\missions_f_beta\video\supports.ogv",_entity], ["a3\missions_f_bootcamp\video\boot_m05_sometime_later.ogv",_entity], ["a3\missions_f_bootcamp\video\vr_boot.ogv",_entity], ["a3\missions_f_bootcamp\video\vr_generictransition_1.ogv",_entity], ["a3\missions_f_bootcamp\video\vr_generictransition_2.ogv",_entity], ["a3\missions_f_bootcamp\video\vr_generictransition_3.ogv",_entity], ["a3\missions_f_curator\data\video\showcase_curator.ogv",_entity], ["a3\missions_f_epa\video\a_hub_quotation.ogv",_entity], ["a3\missions_f_epa\video\a_in2_quotation.ogv",_entity], ["a3\missions_f_epa\video\a_in2_two_hours_later.ogv",_entity], ["a3\missions_f_epa\video\a_in_intro.ogv",_entity], ["a3\missions_f_epa\video\a_in_quotation.ogv",_entity], ["a3\missions_f_epa\video\a_m01_quotation.ogv",_entity], ["a3\missions_f_epa\video\a_m02_quotation.ogv",_entity], ["a3\missions_f_epa\video\a_m03_quotation.ogv",_entity], ["a3\missions_f_epa\video\a_m04_quotation.ogv",_entity], ["a3\missions_f_epa\video\a_m05_quotation.ogv",_entity], ["a3\missions_f_epa\video\a_out_quotation.ogv",_entity], ["a3\missions_f_epa\video\a_out_some_time_later.ogv",_entity], ["a3\missions_f_epa\video\a_out_to_be_continued.ogv",_entity], ["a3\missions_f_epa\video\b_hub01_10_days_later.ogv",_entity], ["a3\missions_f_epa\video\b_hub01_few_hours_later.ogv",_entity], ["a3\missions_f_epa\video\b_hub01_quotation.ogv",_entity], ["a3\missions_f_epa\video\b_in2_12_hours_later.ogv",_entity], ["a3\missions_f_epa\video\b_in_quotation.ogv",_entity], ["a3\missions_f_epa\video\b_m01_quotation.ogv",_entity], ["a3\missions_f_epa\video\b_m02_1_quotation.ogv",_entity], ["a3\missions_f_epa\video\b_m03_quotation.ogv",_entity], ["a3\missions_f_epa\video\b_m05_quotation.ogv",_entity], ["a3\missions_f_epa\video\b_m06_quotation.ogv",_entity], ["a3\missions_f_epa\video\b_out2_quotation.ogv",_entity], ["a3\missions_f_epa\video\b_out2_sometime_later.ogv",_entity], ["a3\missions_f_epa\video\c_ea_quotation.ogv",_entity], ["a3\missions_f_epa\video\c_eb_quotation.ogv",_entity], ["a3\missions_f_epa\video\c_in1_quotation.ogv",_entity], ["a3\missions_f_epa\video\c_in2_quotation.ogv",_entity], ["a3\missions_f_epa\video\c_m01_quotation.ogv",_entity], ["a3\missions_f_epa\video\c_m02_quotation.ogv",_entity], ["a3\missions_f_epa\video\c_out1_quotation.ogv",_entity], ["a3\missions_f_epa\video\c_out2_sometime_later.ogv",_entity], ["a3\missions_f_epa\video\fixed_wings.ogv",_entity], ["a3\missions_f_exp\video\endgame.ogv",_entity], ["a3\missions_f_exp\video\exp_m01_v01.ogv",_entity], ["a3\missions_f_exp\video\exp_m01_vbohemia.ogv",_entity], ["a3\missions_f_exp\video\exp_m01_vlogo.ogv",_entity], ["a3\missions_f_exp\video\exp_m02_vin.ogv",_entity], ["a3\missions_f_exp\video\exp_m02_vtimeline.ogv",_entity], ["a3\missions_f_exp\video\exp_m02_vtitlecard.ogv",_entity], ["a3\missions_f_exp\video\exp_m03_vin.ogv",_entity], ["a3\missions_f_exp\video\exp_m03_vtimeline.ogv",_entity], ["a3\missions_f_exp\video\exp_m03_vtitlecard.ogv",_entity], ["a3\missions_f_exp\video\exp_m04_v01.ogv",_entity], ["a3\missions_f_exp\video\exp_m04_v02.ogv",_entity], ["a3\missions_f_exp\video\exp_m04_v03.ogv",_entity], ["a3\missions_f_exp\video\exp_m04_vin.ogv",_entity], ["a3\missions_f_exp\video\exp_m04_vtimeline.ogv",_entity], ["a3\missions_f_exp\video\exp_m04_vtitlecard.ogv",_entity], ["a3\missions_f_exp\video\exp_m05_vin.ogv",_entity], ["a3\missions_f_exp\video\exp_m05_vtimeline.ogv",_entity], ["a3\missions_f_exp\video\exp_m05_vtitlecard.ogv",_entity], ["a3\missions_f_exp\video\exp_m06_v01.ogv",_entity], ["a3\missions_f_exp\video\exp_m06_vin.ogv",_entity], ["a3\missions_f_exp\video\exp_m06_vintel.ogv",_entity], ["a3\missions_f_exp\video\exp_m06_vtitlecard.ogv",_entity], ["a3\missions_f_exp\video\exp_m07_vin.ogv",_entity], ["a3\missions_f_exp\video\exp_m07_vout.ogv",_entity], ["a3\missions_f_exp\video\exp_m07_vtitlecard.ogv",_entity], ["a3\missions_f_exp\video\vtol.ogv",_entity], ["a3\missions_f_gamma\video\arma.ogv",_entity], ["a3\missions_f_gamma\video\drones.ogv",_entity], ["a3\missions_f_gamma\video\faction_blufor.ogv",_entity], ["a3\missions_f_gamma\video\faction_independent.ogv",_entity], ["a3\missions_f_gamma\video\faction_opfor.ogv",_entity], ["a3\missions_f_gamma\video\gunships.ogv",_entity], ["a3\missions_f_gamma\video\tanks.ogv",_entity], ["a3\missions_f_heli\video\slingloading.ogv",_entity], ["a3\missions_f_jets\video\showcase_jets_intro_01.ogv",_entity], ["a3\missions_f_mark\video\ffv.ogv",_entity], ["a3\missions_f_mark\video\marksman.ogv",_entity], ["a3\missions_f_orange\video\faction_idap.ogv",_entity], ["a3\missions_f_orange\video\laws_of_war.ogv",_entity], ["a3\missions_f_orange\video\laws_of_war_establishing_shot.ogv",_entity], ["a3\missions_f_tank\video\tanks_destroyers.ogv",_entity], ["a3\props_f_argo\items\electronics\data\oldlaptop_video.ogv",_entity], ["a3\ui_f\video\preview_dlcbundle.ogv",_entity], ["a3\ui_f\video\preview_dlcbundle2.ogv",_entity], ["a3\ui_f\video\spotlight3.ogv",_entity], ["a3\ui_f\video\spotlight_1_apex.ogv",_entity], ["a3\ui_f\video\spotlight_1_bootcamp.ogv",_entity], ["a3\ui_f\video\spotlight_1_eastwind.ogv",_entity], ["a3\ui_f\video\spotlight_1_old_man.ogv",_entity], ["a3\ui_f\video\spotlight_2.ogv",_entity], ["a3\ui_f_oldman\video\spotlight_a.ogv",_entity], ["a3\ui_f_oldman\video\spotlight_fd14.ogv",_entity], ["a3\ui_f_orange\video\spotlight_a.ogv",_entity], ["a3\ui_f_orange\video\spotlight_b.ogv",_entity], ["a3\ui_f_orange\video\spotlight_c.ogv",_entity], ["a3\ui_f_tank\video\spotlight_a.ogv",_entity], ["a3\ui_f_tank\video\spotlight_b.ogv",_entity]],
						[
							["Stop All Videos","",""],["preview_argo","",""],["preview_curator","",""],["preview_expansion","",""],["preview_heli","",""],["preview_jets","",""],["preview_kart","",""],["preview_mark","",""],["preview_orange","",""],["preview_tank","",""],["Altis previewvideo","",""],["Malden previewvideo","",""],["Stratis previewvideo","",""],["Tanoa previewvideo","",""],["VR previewvideo","",""],["helicopters","",""],["infantry","",""],["scuba","",""],["supports","",""],["vehicles","",""],["combined_arms","",""],["commanding","",""],["defend","",""],["night","",""],["supports","",""],["boot_m05_sometime_later","",""],["vr_boot","",""],["vr_generictransition_1","",""],["vr_generictransition_2","",""],["vr_generictransition_3","",""],["showcase_curator","",""],["a_hub_quotation","",""],["a_in2_quotation","",""],["a_in2_two_hours_later","",""],["a_in_intro","",""],["a_in_quotation","",""],["a_m01_quotation","",""],["a_m02_quotation","",""],["a_m03_quotation","",""],["a_m04_quotation","",""],["a_m05_quotation","",""],["a_out_quotation","",""],["a_out_some_time_later","",""],["a_out_to_be_continued","",""],["b_hub01_10_days_later","",""],["b_hub01_few_hours_later","",""],["b_hub01_quotation","",""],["b_in2_12_hours_later","",""],["b_in_quotation","",""],["b_m01_quotation","",""],["b_m02_1_quotation","",""],["b_m03_quotation","",""],["b_m05_quotation","",""],["b_m06_quotation","",""],["b_out2_quotation","",""],["b_out2_sometime_later","",""],["c_ea_quotation","",""],["c_eb_quotation","",""],["c_in1_quotation","",""],["c_in2_quotation","",""],["c_m01_quotation","",""],["c_m02_quotation","",""],["c_out1_quotation","",""],["c_out2_sometime_later","",""],["fixed_wings","",""],["endgame","",""],["exp_m01_v01","",""],["exp_m01_vbohemia","",""],["exp_m01_vlogo","",""],["exp_m02_vin","",""],["exp_m02_vtimeline","",""],["exp_m02_vtitlecard","",""],["exp_m03_vin","",""],["exp_m03_vtimeline","",""],["exp_m03_vtitlecard","",""],["exp_m04_v01","",""],["exp_m04_v02","",""],["exp_m04_v03","",""],["exp_m04_vin","",""],["exp_m04_vtimeline","",""],["exp_m04_vtitlecard","",""],["exp_m05_vin","",""],["exp_m05_vtimeline","",""],["exp_m05_vtitlecard","",""],["exp_m06_v01","",""],["exp_m06_vin","",""],["exp_m06_vintel","",""],["exp_m06_vtitlecard","",""],["exp_m07_vin","",""],["exp_m07_vout","",""],["exp_m07_vtitlecard","",""],["vtol","",""],["arma","",""],["drones","",""],["faction_blufor","",""],["faction_independent","",""],["faction_opfor","",""],["gunships","",""],["tanks","",""],["slingloading","",""],["showcase_jets_intro_01","",""],["ffv","",""],["marksman","",""],["faction_idap","",""],["laws_of_war","",""],["laws_of_war_establishing_shot","",""],["tanks_destroyers","",""],["oldlaptop_video","",""],["preview_dlcbundle","",""],["preview_dlcbundle2","",""],["spotlight3","",""],["spotlight_1_apex","",""],["spotlight_1_bootcamp","",""],["spotlight_1_eastwind","",""],["spotlight_1_old_man","",""],["spotlight_2","",""],["Oldman spotlight_a","",""],["Oldman spotlight_fd14","",""],["Orange spotlight_a","",""],["Orangespotlight_b","",""],["Orangespotlight_c","",""],["Tanks spotlight_a","",""],["Tanks spotlight_b","",""]
						],
						0,
						20
					]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_selection"];
				_display closeDisplay 1;
				
				_video = _selection select 0;
				_entity = _selection select 1;

				[[_video, _entity],{ 
					params ["_video","_entity"];
					_entity setObjectTexture [0, _video]; 
					[_video, [10, 10]] call BIS_fnc_playVideo;
				}] remoteExec ['bis_fnc_call',0,false]; 
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_friendlyFireModule = {
			if (!((((getAssignedCuratorLogic player) == ((allCurators select { str _x == "bis_curator" }) # 0)) || (!((call BIS_fnc_admin) == 0))))) exitWith { 
				systemChat "[ LOG ] This module has been restricted to usage by Game Master only.";
				playSound "3DEN_notificationWarning";
			};
			
			["Friendly Fire",[
				[
					"TOOLBOX:ENABLED",
					["Friendly Fire Control:","Whether to enable or disable units being able to damage other friendlies."],
					[true]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_control"];
				_display closeDisplay 1;
				
				if (_control) then {
					_editableObjects = [];
					{
						{
							_editableObjects append [_x];
						} forEach (curatorEditableObjects _x);
					} forEach allCurators; 
					_editableObjects append [player];
					_editableObjects = _editableObjects arrayIntersect _editableObjects;
					{
						[[_x],{
							params ["_object"];
							_object removeEventHandler ["HandleDamage", (_object getVariable ["LM_EH_friendlyFire", -1])];
						}] remoteExec ["bis_fnc_call", 0, _x];
					} forEach _editableObjects;
					
					
					_entityCode =  (str {
						remoteExec ["","LM_JIP_friendlyFire"];
						removeMissionEventHandler ["EntityCreated", (player getVariable ["LM_MEH_friendlyFire", -1])];
						titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/><t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Friendly Fire</t> has been <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Enabled</t>!</t>", "PLAIN DOWN", -1, false, true];
						(findDisplay 46) displayRemoveEventHandler ["KeyDown", _thisEventHandler];
					}) splitString "";
					_entityCode deleteAt (count _entityCode - 1);
					_entityCode deleteAt 0;
					missionNamespace setVariable ["LM_fnc_friendlyFireVariable",_entityCode,true];
					[[],{
						waitUntil {!isNull (findDisplay 46) && alive player};
						(findDisplay 46) displayAddEventHandler ["KeyDown", ((missionNamespace getVariable "LM_fnc_friendlyFireVariable") joinString "")];
					}] remoteExec ["bis_fnc_call", 0, "LM_JIP_friendlyFire"];
					
					[[],{
					}] remoteExec ["bis_fnc_call", 0]; 
					
					systemchat "[ LOG ] Friendly Fire has been enabled!";
				} else {
					_editableObjects = [];
					{
						{
							if ((((_x call BIS_fnc_objectType) select 0) == "Soldier") || ("Vehicle" in ((_x call BIS_fnc_objectType) select 0))) then {
								_editableObjects append [_x];
							};
						} forEach (curatorEditableObjects _x);
					} forEach allCurators; 
					_editableObjects append [player];
					_editableObjects = _editableObjects arrayIntersect _editableObjects;
					{
						[[_x],{
							params ["_object"];
							_object removeEventHandler ["HandleDamage", (_object getVariable ["LM_EH_friendlyFire", -1])];
							_varEH = _object addEventHandler ["HandleDamage", {
								params ["_unit", "_selection", "_damage", "_source", "_projectile", "_hitIndex", "_instigator", "_hitPoint", "_directHit"];
								if (((([side (group _unit), side (group _instigator)] call BIS_fnc_sideIsFriendly) || ([side (group _unit), side (group _source)] call BIS_fnc_sideIsFriendly)) and !(_unit == _instigator)) || (_instigator == objNull)) then {
									[_instigator,_unit] spawn {
										params ["_instigator","_unit"];
										if (!(_instigator getVariable ["LM_var_activeFF", false])) then {
											[_instigator, ["LM_var_activeFF", true]] remoteExec ["setVariable",0];
											[[side _instigator, "HQ"], format["Friendly Fire will not be tolerated on unit '%1'!",name _unit]] remoteExec ["sideChat",_instigator];
											["3DEN_notificationWarning"] remoteExec ["playSound",_instigator];
											sleep 5;
											[_instigator, ["LM_var_activeFF", false]] remoteExec ["setVariable",0];
										};
									};
									_damage = 0;
									_damage
								};
							}];
							_object setVariable ["LM_EH_friendlyFire", _varEH];
						}] remoteExec ["bis_fnc_call", 0, _x];
					} forEach _editableObjects;
					
					_entityCode =  (str {
						removeMissionEventHandler ["EntityCreated", (player getVariable ["LM_MEH_friendlyFire", -1])];
						_varMEH = addMissionEventHandler ["EntityCreated", {
							params ["_object"];
							[[_object],{
								params ["_object"];
								if (((((_object call BIS_fnc_objectType) select 0) == "Soldier") || ("Vehicle" in ((_object call BIS_fnc_objectType) select 0))) and !(isPlayer _object)) then {
									_object removeEventHandler ["HandleDamage", (_object getVariable ["LM_EH_friendlyFire", -1])];
									_varEH = _object addEventHandler ["HandleDamage", {
										params ["_unit", "_selection", "_damage", "_source", "_projectile", "_hitIndex", "_instigator", "_hitPoint", "_directHit"];
										if (((([side (group _unit), side (group _instigator)] call BIS_fnc_sideIsFriendly) || ([side (group _unit), side (group _source)] call BIS_fnc_sideIsFriendly)) and !(_unit == _instigator)) || (_instigator == objNull)) then {
											[_instigator,_unit] spawn {
												params ["_instigator","_unit"];
												if (!(_instigator getVariable ["LM_var_activeFF", false])) then {
													[_instigator, ["LM_var_activeFF", true]] remoteExec ["setVariable",0];
													[[side _instigator, "HQ"], format["Friendly Fire will not be tolerated on unit '%1'!",name _unit]] remoteExec ["sideChat",_instigator];
													["3DEN_notificationWarning"] remoteExec ["playSound",_instigator];
													sleep 5;
													[_instigator, ["LM_var_activeFF", false]] remoteExec ["setVariable",0];
												};
											};
											_damage = 0;
											_damage
										};
									}];
									_object setVariable ["LM_EH_friendlyFire", _varEH];
								};
							}] remoteExec ["bis_fnc_call", 0, true];
						}];
						player setVariable ["LM_MEH_friendlyFire", _varMEH];
						
						titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/><t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Friendly Fire</t> has been <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Disabled</t>!</t>", "PLAIN DOWN", -1, false, true];
						(findDisplay 46) displayRemoveEventHandler ["KeyDown", _thisEventHandler];
					}) splitString "";
					_entityCode deleteAt (count _entityCode - 1);
					_entityCode deleteAt 0;
					missionNamespace setVariable ["LM_fnc_friendlyFireVariable",_entityCode,true];
					[[],{
						waitUntil {!isNull (findDisplay 46) && alive player};
						(findDisplay 46) displayAddEventHandler ["KeyDown", ((missionNamespace getVariable "LM_fnc_friendlyFireVariable") joinString "")];
					}] remoteExec ["bis_fnc_call", 0, "LM_JIP_friendlyFire"];
					
					systemchat "[ LOG ] Friendly Fire has been disabled!";
				};
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_controlModeratorModule = {
			if (!((((getAssignedCuratorLogic player) == ((allCurators select { str _x == "bis_curator" }) # 0)) || (!((call BIS_fnc_admin) == 0))))) exitWith { 
				systemChat "[ LOG ] This module has been restricted to usage by Game Master only.";
				playSound "3DEN_notificationWarning";
			};
			
			["Moderator Control",[
				[
					"TOOLBOX:ENABLED",
					["Moderator Control:","Whether to enable moderator permisions or to disable."],
					[true]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_control"];
				_display closeDisplay 1;
				
				if(_control) then {
					[missionNamespace,["LM_var_gameMasterUID_modControl",""]] remoteExec ["setVariable",2];
					remoteExec ["", "LM_JIP_moderatorControl"];
					[["PlayerDisconnected", (missionNamespace getVariable ["LM_var_zeusWatcherMEH_modControl",-1])]] remoteExec ["removeMissionEventHandler",2];
					
					[[], {
						titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/><t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Game Moderator</t> slot has been <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Enabled</t>!</t>", "PLAIN DOWN", -1, false, true];
					}] remoteExec ["bis_fnc_call", -2, false];
					
					[[((allCurators select { str _x == "bis_curator" }) # 0), ((allCurators select { str _x == "bis_curator_1" }) # 0)], { 
						params ["_zeusLogic", "_modLogic"]; 
						_zeusAddons = curatorAddons _zeusLogic; 
						_modAddons = curatorAddons _modLogic; 
						_addAddons = _zeusAddons - _modAddons; 
						_modLogic addCuratorAddons _addAddons; 

						_modRights = "CuratorModeratorRights" call BIS_fnc_getParamValue; 
						if (_modRights < 0) then { 
							[_zeusLogic, _modLogic, ["objects", "coefs"], true] spawn BIS_fnc_mirrorCuratorSettings; 
						}; 
					}] remoteExec ["bis_fnc_call", 2]; 
					
					systemchat "[ LOG ] Moderator slot usage has been enabled!";
				} else {
					[missionNamespace,["LM_var_gameMasterUID_modControl",getPlayerUID player]] remoteExec ["setVariable",2];
					[[], {
						waitUntil {!(isNull findDisplay 312) && !(isNull findDisplay 46) && alive player};
						
						titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/><t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Game Moderator</t> slot has been <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Disabled</t>!</t>", "PLAIN DOWN", -1, false, true];
						
						if ((getAssignedCuratorUnit ((allCurators select { str _x == "bis_curator_1" }) # 0)) == player) then {
							player allowDamage false;
							(findDisplay 46) closeDisplay 1;
							(findDisplay 312) closeDisplay 1;
						};
					}] remoteExec ["bis_fnc_call", -2, "LM_JIP_moderatorControl"];
					
					[[],{
						LM_MEH_zeusWatcher_modControl = addMissionEventHandler ["PlayerDisconnected", {
							params ["_id", "_uid", "_name", "_jip", "_owner", "_idstr"];
							if (_uid == (missionNamespace getVariable ["LM_var_gameMasterUID_modControl",""])) then {
								remoteExec ["", "LM_JIP_moderatorControl"];
								[missionNamespace,["LM_var_gameMasterUID_modControl",""]] remoteExec ["setVariable",2];
								
								[[],{
									titleText ["<t size='1.1' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>Please note, the <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Game Moderator</t> has been <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Enabled</t> due to the Game Master leaving, the slot is now usable!</t>", "PLAIN DOWN", -1, false, true];
								}] remoteExec ["bis_fnc_call", 0, false];
								
								[[((allCurators select { str _x == "bis_curator" }) # 0), ((allCurators select { str _x == "bis_curator_1" }) # 0)], { 
									params ["_zeusLogic", "_modLogic"]; 
									_zeusAddons = curatorAddons _zeusLogic; 
									_modAddons = curatorAddons _modLogic; 
									_addAddons = _zeusAddons - _modAddons; 
									_modLogic addCuratorAddons _addAddons; 

									_modRights = "CuratorModeratorRights" call BIS_fnc_getParamValue; 
									if (_modRights < 0) then { 
										[_zeusLogic, _modLogic, ["objects", "coefs"], true] spawn BIS_fnc_mirrorCuratorSettings; 
									}; 
								}] remoteExec ["bis_fnc_call", 2]; 
								
								[["PlayerDisconnected", (missionNamespace getVariable ["LM_var_zeusWatcherMEH_modControl",-1])]] remoteExec ["removeMissionEventHandler",2];
							};
						}];
						
						[missionNamespace,["LM_var_zeusWatcherMEH_modControl",LM_MEH_zeusWatcher_modControl]] remoteExec ["setVariable",2];
					}] remoteExec ["bis_fnc_call", 2];
					
					systemchat "[ LOG ] Moderator slot usage has been disabled!";
				};
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_controlPlayerModule = {
			if (!((((getAssignedCuratorLogic player) == ((allCurators select { str _x == "bis_curator" }) # 0)) || (!((call BIS_fnc_admin) == 0))))) exitWith { 
				systemChat "[ LOG ] This module has been restricted to usage by Game Master only.";
				playSound "3DEN_notificationWarning";
			};
			
			LM_fnc_ctrlLblChanged = {
				params ["_control", "_lbCurSel"];
						
				if (!(str(compile (_control lbData _lbCurSel)) == "{}")) then {
					_lblData = call compile (_control lbData _lbCurSel);
					if ((typeName _lblData) == "ARRAY") then {
						ctrlLabelUID ctrlSetText (_lblData select 0);
						ctrlLabelName ctrlSetText (_lblData select 1);
						ctrlLabelDateKicked ctrlSetText (_lblData select 2);
						ctrlLabelOrigServer ctrlSetText (_lblData select 3);
						ctrlLabelOrigWorld ctrlSetText (_lblData select 4);
						ctrlLabelIndex ctrlSetText str(_lbCurSel);
						if (_lblData select 5) then {ctrlToolboxAutoKick lbSetCurSel 1} else {ctrlToolboxAutoKick lbSetCurSel 0};
						ctrlEditMultiKickNote ctrlSetText (_lblData select 6);
					};
				};
			};
			
			LM_fnc_ctrlLblChangedSpectator = {
				params ["_control", "_lbCurSel"];
				if (!(str(compile (_control lbData _lbCurSel)) == "{}")) then {
					_player = call compile (_control lbData _lbCurSel);
					if ((typeName _player) == "OBJECT") then {
						_restricted = _player getVariable ['isRestricted',false];
						if (_restricted) then {ctrlToolboxSpectator lbSetCurSel 1} else {ctrlToolboxSpectator lbSetCurSel 0};
					};
				};
			};
			
			LM_fnc_ctrlListboxAllPlayersUpdate = {
				params ["_forbiddenUIDs"];
				_headlessClients = entities "HeadlessClient_F";
				 {
					if (!((getPlayerUID _x) in _forbiddenUIDs)) then {
						_ctrl = ctrlListboxAllPlayers lbAdd format["%1", name _x];
						ctrlListboxAllPlayers lbSetTooltip [_ctrl, format["[Player Information]\n\nName: %1\nUID: %2\nRank: %3\nGroup: %4\nSide: %5", name _x, getPlayerUID _x, rank _x, group _x, side _x]];
						
						ctrlListboxAllPlayers lbSetPicture [_ctrl, ([_x, "texture"] call BIS_fnc_rankParams)];
						ctrlListboxAllPlayers lbSetPictureColor [_ctrl, ([side _x, false] call BIS_fnc_sideColor)];
						ctrlListboxAllPlayers lbSetData [_ctrl, (getPlayerUID _x)];
					};
				 } forEach (allPlayers - _headlessClients);
			};
			
			LM_fnc_ctrlListboxListKickedUpdate = {
				{
					_ctrl = ctrlListboxListKicked lbAdd format["%1", _x select 1];
					ctrlListboxListKicked lbSetTooltip [_ctrl, format["[Prior Kicked Player Information]\n\nUnique ID: %1\nCurrent Name: %2\nOrig Date Kicked: %3\nOrig Server Name: %4\nOrig World Name: %5\nAuto-Kick Enabled: %6\n\nKick Note:\n%7", _x select 0, _x select 1, _x select 2, _x select 3, _x select 4, _x select 5, _x select 6]];
					if (_x select 5) then {ctrlListboxListKicked lbSetColor [_ctrl, [0.9,0,0,1]]};

					ctrlListboxListKicked lbSetData [_ctrl, str(_x)];
				} forEach (profileNamespace getVariable ["LM_var_kickedPlayers", []]);
			};
			
			disableSerialization;
			
			createDialog "RscDisplayEmpty";
			_display = findDisplay -1;
			_ctrlGroup = _display ctrlCreate ["RscControlsGroup", -1];
			
			_ctrlTitleList = _display ctrlCreate ["RscText", -1, _ctrlGroup];
				_ctrlTitleList ctrlSetText "Prior Kicked Players:";
				_ctrlTitleList ctrlSetPosition [0, 0, 0.45, 0.04];
				_ctrlTitleList ctrlSetBackgroundColor LM_trimColor_RGBA;
				_ctrlTitleList ctrlCommit 0;
			
				_ctrlBackgroundList = _display ctrlCreate ["RscTextMulti", -1, _ctrlGroup];
					_ctrlBackgroundList ctrlSetPosition [0, 0.045, 0.45, 0.5];
					_ctrlBackgroundList ctrlSetBackgroundColor [0,0,0,0.4];
					_ctrlBackgroundList ctrlEnable false;
					_ctrlBackgroundList ctrlCommit 0;
				
				ctrlListboxListKicked = _display ctrlCreate ["RscListbox", -1, _ctrlGroup];
					ctrlListboxListKicked ctrlSetPosition [0.01, 0.06, 0.43, 0.47];
					ctrlListboxListKicked ctrlAddEventHandler ["LBSelChanged", {
						params ["_control", "_lbCurSel", "_lbSelection"];
						
						[_control, _lbCurSel] call LM_fnc_ctrlLblChanged;
					}];
					ctrlListboxListKicked ctrlCommit 0;
				
				[] call LM_fnc_ctrlListboxListKickedUpdate;
				ctrlListboxListKicked lbSetCurSel 0;
			 
			
			_ctrlTitleInfo = _display ctrlCreate ["RscText", -1, _ctrlGroup];
				_ctrlTitleInfo ctrlSetText "Prior Kicked Player Details:";
				_ctrlTitleInfo ctrlSetPosition [0, 0.555, 0.45, 0.04];
				_ctrlTitleInfo ctrlSetBackgroundColor LM_trimColor_RGBA;
				_ctrlTitleInfo ctrlCommit 0;
				
				_ctrlTitleUID = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleUID ctrlSetText "Unique ID:";
					_ctrlTitleUID ctrlSetTooltip "Steam Unique ID for the player's profile.";
					_ctrlTitleUID ctrlSetPosition [0, 0.6, 0.135, 0.04];
					_ctrlTitleUID ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleUID ctrlCommit 0;
				
					ctrlLabelUID = _display ctrlCreate ["RscEdit", -1, _ctrlGroup];
						ctrlLabelUID ctrlSetText "";
						ctrlLabelUID ctrlSetTooltip "";
						ctrlLabelUID ctrlSetPosition [0.14, 0.6, 0.31, 0.04];
						ctrlLabelUID ctrlSetBackgroundColor [0,0,0,0.5];
						ctrlLabelUID ctrlEnable false;
						ctrlLabelUID ctrlCommit 0;
					
				_ctrlTitleName = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleName ctrlSetText "Username:";
					_ctrlTitleName ctrlSetTooltip "Current in-game name of the player since last encounter.";
					_ctrlTitleName ctrlSetPosition [0, 0.645, 0.135, 0.04];
					_ctrlTitleName ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleName ctrlCommit 0;
				
					ctrlLabelName = _display ctrlCreate ["RscEdit", -1, _ctrlGroup];
						ctrlLabelName ctrlSetText "";
						ctrlLabelName ctrlSetTooltip "";
						ctrlLabelName ctrlSetPosition [0.14, 0.645, 0.31, 0.04];
						ctrlLabelName ctrlSetBackgroundColor [0,0,0,0.5];
						ctrlLabelName ctrlEnable false;
						ctrlLabelName ctrlCommit 0;
					
				_ctrlTitleDateKicked = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleDateKicked ctrlSetText "Date Kicked:";
					_ctrlTitleDateKicked ctrlSetTooltip "UTC Time at which the player was originally kicked at.";
					_ctrlTitleDateKicked ctrlSetPosition [0, 0.69, 0.135, 0.04];
					_ctrlTitleDateKicked ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleDateKicked ctrlCommit 0;
				
					ctrlLabelDateKicked = _display ctrlCreate ["RscEdit", -1, _ctrlGroup];
						ctrlLabelDateKicked ctrlSetText "";
						ctrlLabelDateKicked ctrlSetTooltip "";
						ctrlLabelDateKicked ctrlSetPosition [0.14, 0.69, 0.31, 0.04];
						ctrlLabelDateKicked ctrlSetBackgroundColor [0,0,0,0.5];
						ctrlLabelDateKicked ctrlEnable false;
						ctrlLabelDateKicked ctrlCommit 0;
					
				_ctrlTitleOrigServer = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleOrigServer ctrlSetText "Orig Server:";
					_ctrlTitleOrigServer ctrlSetTooltip "Server name of which the player was originally kicked in.";
					_ctrlTitleOrigServer ctrlSetPosition [0, 0.735, 0.135, 0.04];
					_ctrlTitleOrigServer ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleOrigServer ctrlCommit 0;
				
					ctrlLabelOrigServer = _display ctrlCreate ["RscEdit", -1, _ctrlGroup];
						ctrlLabelOrigServer ctrlSetText "";
						ctrlLabelOrigServer ctrlSetTooltip "";
						ctrlLabelOrigServer ctrlSetPosition [0.14, 0.735, 0.31, 0.04];
						ctrlLabelOrigServer ctrlSetBackgroundColor [0,0,0,0.5];
						ctrlLabelOrigServer ctrlEnable false;
						ctrlLabelOrigServer ctrlCommit 0;
					
				_ctrlTitleOrigWorld = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleOrigWorld ctrlSetText "Orig World:";
					_ctrlTitleOrigWorld ctrlSetTooltip "World name of which the player was originally kicked in.";
					_ctrlTitleOrigWorld ctrlSetPosition [0, 0.78, 0.135, 0.04];
					_ctrlTitleOrigWorld ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleOrigWorld ctrlCommit 0;
				
					ctrlLabelOrigWorld = _display ctrlCreate ["RscEdit", -1, _ctrlGroup];
						ctrlLabelOrigWorld ctrlSetText "";
						ctrlLabelOrigWorld ctrlSetTooltip "";
						ctrlLabelOrigWorld ctrlSetPosition [0.14, 0.78, 0.31, 0.04];
						ctrlLabelOrigWorld ctrlSetBackgroundColor [0,0,0,0.5];
						ctrlLabelOrigWorld ctrlEnable false;
						ctrlLabelOrigWorld ctrlCommit 0;
					
				_ctrlTitleIndex = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleIndex ctrlSetText "List Index:";
					_ctrlTitleIndex ctrlSetTooltip "";
					_ctrlTitleIndex ctrlSetPosition [0, 0.825, 0.135, 0.04];
					_ctrlTitleIndex ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleIndex ctrlCommit 0;
				
					ctrlLabelIndex = _display ctrlCreate ["RscEdit", -1, _ctrlGroup];
						ctrlLabelIndex ctrlSetText "";
						ctrlLabelIndex ctrlSetTooltip "";
						ctrlLabelIndex ctrlSetPosition [0.14, 0.825, 0.31, 0.04];
						ctrlLabelIndex ctrlSetBackgroundColor [0,0,0,0.5];
						ctrlLabelIndex ctrlEnable false;
						ctrlLabelIndex ctrlCommit 0;
					
				_ctrlTitleAutoKick = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleAutoKick ctrlSetText "Auto-Kick:";
					_ctrlTitleAutoKick ctrlSetTooltip "Choose whether to Auto-Kick a prior kicked player on join.";
					_ctrlTitleAutoKick ctrlSetPosition [0, 0.87, 0.135, 0.04];
					_ctrlTitleAutoKick ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleAutoKick ctrlCommit 0;
				
					ctrlToolboxAutoKick = _display ctrlCreate ["RscToolBox", -1, _ctrlGroup];
						ctrlToolboxAutoKick ctrlSetPosition [0.14, 0.87, 0.31, 0.04];
						ctrlToolboxAutoKick ctrlSetBackgroundColor [0,0,0,0.4];
						ctrlToolboxAutoKick ctrlCommit 0;
							
						lbClear ctrlToolboxAutoKick;
						{
							_x params ["_text",["_tooltip", '']];

							private _index = ctrlToolboxAutoKick lbAdd _text;
							ctrlToolboxAutoKick lbSetTooltip [_index, _tooltip];
						} forEach ["Disable", "Enable"];
						ctrlToolboxAutoKick lbSetCurSel 1;
					
				_ctrlTitleKickNote = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleKickNote ctrlSetText "Kick Note:";
					_ctrlTitleKickNote ctrlSetTooltip "Provide a note for the prior .";
					_ctrlTitleKickNote ctrlSetPosition [0, 0.915, 0.45, 0.04];
					_ctrlTitleKickNote ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleKickNote ctrlCommit 0;
				
					ctrlEditMultiKickNote = _display ctrlCreate ["RscEditMulti", -1, _ctrlGroup];
						ctrlEditMultiKickNote ctrlSetText "";
						ctrlEditMultiKickNote ctrlSetTooltip "";
						ctrlEditMultiKickNote ctrlSetPosition [0, 0.96, 0.45, 0.12];
						ctrlEditMultiKickNote ctrlSetBackgroundColor [0,0,0,0.4];
						ctrlEditMultiKickNote ctrlEnable true;
						ctrlEditMultiKickNote ctrlCommit 0;
						
						
			_ctrlTitleAllPlayers = _display ctrlCreate ["RscText", -1, _ctrlGroup];
				_ctrlTitleAllPlayers ctrlSetText "Server Players:";
				_ctrlTitleAllPlayers ctrlSetPosition [0.57, 0, 0.45, 0.04];
				_ctrlTitleAllPlayers ctrlSetBackgroundColor LM_trimColor_RGBA;
				_ctrlTitleAllPlayers ctrlCommit 0;
			
				_ctrlBackgroundAllPlayers = _display ctrlCreate ["RscTextMulti", -1, _ctrlGroup];
					_ctrlBackgroundAllPlayers ctrlSetPosition [0.57, 0.045, 0.45, 0.5];
					_ctrlBackgroundAllPlayers ctrlSetBackgroundColor [0,0,0,0.4];
					_ctrlBackgroundAllPlayers ctrlEnable false;
					_ctrlBackgroundAllPlayers ctrlCommit 0;
				
				ctrlListboxAllPlayers = _display ctrlCreate ["RscListbox", -1, _ctrlGroup];
					ctrlListboxAllPlayers ctrlSetPosition [0.58, 0.06, 0.43, 0.47];
					ctrlListboxAllPlayers ctrlAddEventHandler ["LBSelChanged", {
						params ["_control", "_lbCurSel", "_lbSelection"];
						
						[_control, _lbCurSel] call LM_fnc_ctrlLblChangedSpectator;
					}];
					ctrlListboxAllPlayers ctrlCommit 0;
					
				[[getPlayerUID player]] call LM_fnc_ctrlListboxAllPlayersUpdate;
				ctrlListboxAllPlayers lbSetCurSel 0;
				
			
			_ctrlTitleInfo = _display ctrlCreate ["RscText", -1, _ctrlGroup];
				_ctrlTitleInfo ctrlSetText "Player Controls:";
				_ctrlTitleInfo ctrlSetPosition [0.57, 0.555, 0.45, 0.04];
				_ctrlTitleInfo ctrlSetBackgroundColor LM_trimColor_RGBA;
				_ctrlTitleInfo ctrlCommit 0;
					
				_ctrlTitleSpectator = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleSpectator ctrlSetText "Specator:";
					_ctrlTitleSpectator ctrlSetTooltip "Choose whether to force the choosen server player into spectator mode.";
					_ctrlTitleSpectator ctrlSetPosition [0.57, 0.6, 0.135, 0.04];
					_ctrlTitleSpectator ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleSpectator ctrlCommit 0;
				
					ctrlToolboxSpectator = _display ctrlCreate ["RscToolbox", -1, _ctrlGroup];
						ctrlToolboxSpectator ctrlSetPosition [0.709, 0.6, 0.31, 0.04];
						ctrlToolboxSpectator ctrlSetBackgroundColor [0,0,0,0.4];
						ctrlToolboxSpectator ctrlAddEventHandler ["ToolBoxSelChanged", {
							params ["_control", "_selectedIndex"];
							
							_lbCurSel = lbCurSel ctrlListboxAllPlayers;
							if (_lbCurSel > -1) then {
								_player = (ctrlListboxAllPlayers lbData _lbCurSel) call BIS_fnc_getUnitByUID;
								if (!isNil "_player") then {
									if (lbCurSel ctrlToolboxSpectator == 1) then {
										[[],{
											titleText ["<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + " size='1.5'font='PuristaBold'>FORCED SPECTATOR MODE PUNISHMENT ENABLED, FOLLOW ZEUS ORDERS</t>", "PLAIN DOWN", -1, false, true];
											player setVariable ['isRestricted',true];
											["Initialize", [player]] call BIS_fnc_EGSpectator;
											player allowDamage false; 
											[player,true] remoteExec ["hideObjectGlobal",2];
										}] remoteExec ["spawn", _player];
										systemchat format ["[ LOG ] Player '%1' has been locked into Spectator mode!", (name _player)];
									} else {
										[[],{
											titleText ["<t color='#FFFFFF' size='2'font='PuristaBold'>FORCED SPECTATOR MODE DISABLED</t>", "PLAIN DOWN", -1, false, true];
											player setVariable ['isRestricted',false];
											["Terminate", [player]] call BIS_fnc_EGSpectator;
											player allowDamage true; 
											[player,false] remoteExec ["hideObjectGlobal",2];
										}] remoteExec ["spawn", _player];
										systemchat format ["[ LOG ] Player '%1' has been released from Spectator mode!", (name _player)];
									};
								};
							};
						}];
						ctrlToolboxSpectator ctrlCommit 0;
							
						lbClear ctrlToolboxSpectator;
						{
							_x params ["_text",["_tooltip", '']];

							private _index = ctrlToolboxSpectator lbAdd _text;
							ctrlToolboxSpectator lbSetTooltip [_index, _tooltip];
						} forEach ["Disable", "Enable"];
						ctrlToolboxSpectator lbSetCurSel 0;
						
				
			_ctrlTitleGlobalKick = _display ctrlCreate ["RscText", -1, _ctrlGroup];
				_ctrlTitleGlobalKick ctrlSetText "Global Auto-Kick Control:";
				_ctrlTitleGlobalKick ctrlSetPosition [0.57, 0.645, 0.45, 0.04];
				_ctrlTitleGlobalKick ctrlSetBackgroundColor LM_trimColor_RGBA;
				_ctrlTitleGlobalKick ctrlCommit 0;
					
				_ctrlTitleGlobalKickDesc = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleGlobalKickDesc ctrlSetText "Auto-Kick Toggle:";
					_ctrlTitleGlobalKickDesc ctrlSetTooltip "Choose whether to disable Auto-Kick across the board for all prior logged kicked players\nor to defer to the current Auto-Kick setting set per prior logged kicked player.";
					_ctrlTitleGlobalKickDesc ctrlSetPosition [0.57, 0.69, 0.45, 0.04];
					_ctrlTitleGlobalKickDesc ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleGlobalKickDesc ctrlCommit 0;
					
					if (typeName (profileNamespace getVariable ["LM_var_autoKickPlayers", ""]) == "STRING") then {
						profileNamespace setVariable ["LM_var_autoKickPlayers", true];
						saveProfileNamespace;
					};
					ctrlToolAutoKickToggle = _display ctrlCreate ["RscToolBox", -1, _ctrlGroup];
						ctrlToolAutoKickToggle ctrlSetPosition [0.57, 0.735, 0.45, 0.04];
						ctrlToolAutoKickToggle ctrlSetBackgroundColor [0,0,0,0.4];
						ctrlToolAutoKickToggle ctrlAddEventHandler ["ToolBoxSelChanged", {
							params ["_control", "_selectedIndex"];
							
							if (lbCurSel ctrlToolAutoKickToggle == 0) then {
									profileNamespace setVariable ["LM_var_autoKickPlayers", false];
									systemchat "[ LOG ] Auto-Kick has been disabled meaning, regardless of their current Auto-Kick setting, no prior logged kicked player will ever be auto-kicked.";
							} else {
									profileNamespace setVariable ["LM_var_autoKickPlayers", true];
									systemchat "[ LOG ] Auto-Kick will now defer to each prior logged kicked player's current Auto-Kick setting.";
							};
							saveProfileNamespace;
						}];
						ctrlToolAutoKickToggle ctrlCommit 0;
							
						lbClear ctrlToolAutoKickToggle;
						{
							_x params ["_text",["_tooltip", '']];

							private _index = ctrlToolAutoKickToggle lbAdd _text;
							ctrlToolAutoKickToggle lbSetTooltip [_index, _tooltip];
						} forEach ["No Auto-Kicking Anyone", "Player's Current Setting"];
						if (profileNamespace getVariable ["LM_var_autoKickPlayers", true]) then {ctrlToolAutoKickToggle lbSetCurSel 1} else {ctrlToolAutoKickToggle lbSetCurSel 0};
						
				
			_ctrlButtonKickPlayer = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
				_ctrlButtonKickPlayer ctrlSetPosition [0.9075, 0.78, 0.1125, 0.04];
				_ctrlButtonKickPlayer ctrlSetStructuredText parseText "<t align='center'>KICK</t>";
				_ctrlButtonKickPlayer ctrlSetTooltip "Kicks the currently selected server player and logs them if not already.";
				_ctrlButtonKickPlayer ctrlSetBackgroundColor [0.5,0,0,1];
				_ctrlButtonKickPlayer ctrlSetActiveColor [0,0,0,0.6];
				_ctrlButtonKickPlayer ctrlAddEventHandler ["ButtonClick", {
					_lbCurSel = lbCurSel ctrlListboxAllPlayers;
					if (!(call BIS_fnc_admin == 0)) then {
						if (_lbCurSel > -1) then {
							[_lbCurSel] spawn {
								[
									"Are you sure you want to kick this player from the server?",
									format ["Kick Server Player '%1'", name (call compile (ctrlListboxAllPlayers lbData (lbCurSel ctrlListboxAllPlayers)))],
									[
										"Kick",
										{
											_timeKicked = systemTimeUTC;
											_lbCurSel = lbCurSel ctrlListboxAllPlayers;
											_player = call compile (ctrlListboxAllPlayers lbData _lbCurSel);
											
											_kickedLog = profileNamespace getVariable ["LM_var_kickedPlayers", []];
											_loggedIndex = _kickedLog findIf {(_x select 0) == (getPlayerUID _player)};
											if (_loggedIndex > -1) then {
												_priorInfo = _kickedLog select _loggedIndex;
												_priorInfo set [1, name _player];
												_kickedLog set [_loggedIndex, _priorInfo];
											} else {
												_kickedLog append [[getPlayerUID _player, name _player, format ["%1/%2/%3, %4:%5 (UTC)", _timeKicked select 1, _timeKicked select 2, _timeKicked select 0, _timeKicked select 3, _timeKicked select 4], serverName, worldName, true, ""]];
											};
											
											profileNamespace setVariable ["LM_var_kickedPlayers", _kickedLog];
											saveProfileNamespace;
											
											
											lbClear ctrlListboxAllPlayers;
											[[getPlayerUID player, getPlayerUID _player]] call LM_fnc_ctrlListboxAllPlayersUpdate;
											ctrlListboxAllPlayers lbSetCurSel 0;
											
											lbClear ctrlListboxListKicked;
											[] call LM_fnc_ctrlListboxListKickedUpdate;
											ctrlListboxListKicked lbSetCurSel 0;
											
											
											systemChat '[ LOG ] To commence kick of the selected player simply open the Zeus interface and press any button...';
											playSound '3DEN_notificationDefault';
											[getPlayerUID _player] spawn {
												waitUntil {!isNull (findDisplay 312)};
												_kickDEH = (findDisplay 312) displayAddEventHandler ["KeyDown", format["%2%3%4 '#kick %1'; systemChat '[ LOG ] Selected player has now been kicked from the server and logged!'; playSound '3DEN_notificationWarning'; (findDisplay 312) displayRemoveEventhandler ['KeyDown',(player getVariable 'LM_DEH_autokickHandler%1')];", _this select 0, "ser", "verCom", "mand"]];
												player setVariable [format["LM_DEH_autokickHandler%1", _this select 0], _kickDEH];
											};
										}
									],
									[
										"Cancel",
										{}
									],
									"\A3\ui_f\data\map\markers\handdrawn\warning_CA.paa",
									findDisplay 312
								] call BIS_fnc_3DENShowMessage;
							};
						} else {
							["Please make sure you have selected a server player first!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
						};
					} else {
						systemchat "[ LOG ] You must be a voted or logged in Admin to kick players!";
						playSound '3DEN_notificationWarning';
					};
				}];
				_ctrlButtonKickPlayer ctrlCommit 0;
				
			_ctrlButtonDeleteComp = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
				_ctrlButtonDeleteComp ctrlSetPosition [0, 1.085, 0.1125, 0.04];
				_ctrlButtonDeleteComp ctrlSetStructuredText parseText "<t align='center'>DELETE</t>";
				_ctrlButtonDeleteComp ctrlSetTooltip "Permanetly remove the currently selected prior kicked player from the log.";
				_ctrlButtonDeleteComp ctrlSetBackgroundColor [0.5,0,0,1];
				_ctrlButtonDeleteComp ctrlSetActiveColor [0,0,0,0.6];
				_ctrlButtonDeleteComp ctrlAddEventHandler ["ButtonClick", {
					_lbCurSel = lbCurSel ctrlListboxListKicked;
					if (_lbCurSel > -1) then {
						[_lbCurSel] spawn {
							[
								"Are you sure you want to delete this player from the log?",
								format ["Delete Logged Player '%1'", (call compile (ctrlListboxListKicked lbData (lbCurSel ctrlListboxListKicked))) select 1],
								[
									"Delete",
									{
										_lbCurSel = lbCurSel ctrlListboxListKicked;
										_lbData = call compile (ctrlListboxListKicked lbData _lbCurSel);
										
										_savedComps = profileNamespace getVariable ["LM_var_kickedPlayers", []];
										_savedComps deleteAt _lbCurSel;
										profileNamespace setVariable ["LM_var_kickedPlayers", _savedComps];
										saveProfileNamespace;
										
										ctrlListboxListKicked lbDelete _lbCurSel;
										
										if (_lbCurSel-1 > -1) then {
											ctrlListboxListKicked lbSetCurSel (_lbCurSel-1);
											[ctrlListboxListKicked, (_lbCurSel-1)] call LM_fnc_ctrlLblChanged;
										} else {
											ctrlLabelUID ctrlSetText "";
											ctrlLabelName ctrlSetText "";
											ctrlLabelDateKicked ctrlSetText "";
											ctrlLabelOrigServer ctrlSetText "";
											ctrlLabelOrigWorld ctrlSetText "";
											ctrlLabelIndex ctrlSetText "";
											ctrlToolboxAutoKick lbSetCurSel 1;
											ctrlEditMultiKickNote ctrlSetText "";
										};
										
										[format ["Deleted selected logged player '%1'!", _lbData select 1],"addItemOk"] call MAZ_EZM_fnc_systemMessage;
									}
								],
								[
									"Cancel",
									{}
								],
								"\A3\ui_f\data\map\markers\handdrawn\warning_CA.paa",
								findDisplay 312
							] call BIS_fnc_3DENShowMessage;
						};
					} else {
						["Please make sure you have selected a prior logged player first!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
					};
				}];
				_ctrlButtonDeleteComp ctrlCommit 0;
						
			_ctrlButtonSaveComp = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
				_ctrlButtonSaveComp ctrlSetPosition [0.3375, 1.085, 0.1125, 0.04];
				_ctrlButtonSaveComp ctrlSetStructuredText parseText "<t align='center'>SAVE</t>";
				_ctrlButtonSaveComp ctrlSetTooltip "Save your changes for the currently selected prior kicked player's 'Auto-Kick' and 'Kick Note' fields.";
				_ctrlButtonSaveComp ctrlSetBackgroundColor [0,0,0,0.6];
				_ctrlButtonSaveComp ctrlSetActiveColor [0,0,0,0.6];
				_ctrlButtonSaveComp ctrlAddEventHandler ["ButtonClick", {
					_lbCurSel = lbCurSel ctrlListboxListKicked;
					if (_lbCurSel > -1) then {
						_lbData = call compile (ctrlListboxListKicked lbData _lbCurSel);
						private ["_newAutoKick"];
						if (lbCurSel ctrlToolboxAutoKick == 1) then {_newAutoKick = true; ctrlListboxListKicked lbSetColor [_lbCurSel, [0.9,0,0,1]];} else {_newAutoKick = false; ctrlListboxListKicked lbSetColor [_lbCurSel, [1,1,1,1]];};
						_oldNote = _lbData select 6;
						_newNote = ctrlText ctrlEditMultiKickNote;
						
						_lbData set [5, _newAutoKick];
						_lbData set [6, _newNote];
						ctrlListboxListKicked lbSetData [_lbCurSel, str(_lbData)];
						
						[ctrlListboxListKicked, _lbCurSel] call LM_fnc_ctrlLblChanged;
						[format ["Changed logged player's prior kick note of '%2' to '%1' and set their Auto-Kick to '%3'!", _newNote, _oldNote, _newAutoKick],"addItemOk"] call MAZ_EZM_fnc_systemMessage;
						
						_loggedPlayers = profileNamespace getVariable ["LM_var_kickedPlayers", []];
						_loggedPlayers set [(parseNumber (ctrlText ctrlLabelIndex)), _lbData];
						profileNamespace setVariable ["LM_var_kickedPlayers", _loggedPlayers];
						saveProfileNamespace;
					} else {
						["Please make sure you have selected a prior kicked player first!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
					};
				}];
				_ctrlButtonSaveComp ctrlCommit 0;
				
			_ctrlButtonCancel = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
				_ctrlButtonCancel ctrlSetPosition [0.57, 0.78, 0.1125, 0.04];
				_ctrlButtonCancel ctrlSetStructuredText parseText "<t align='center'>CANCEL</t>";
				_ctrlButtonCancel ctrlSetTooltip "Close the 'Player Control' windows.";
				_ctrlButtonCancel ctrlSetBackgroundColor [0,0,0,0.6];
				_ctrlButtonCancel ctrlSetActiveColor [0,0,0,0.6];
				_ctrlButtonCancel ctrlAddEventHandler ["ButtonClick", {
					ctrlParent (_this select 0) closeDisplay 2
				}];
				_ctrlButtonCancel ctrlCommit 0;
			
			
			if ((lbSize ctrlListboxListKicked) > 0) then {
				ctrlListboxListKicked lbSetCurSel 0;
			};
						
						
			ctrlSetFocus _ctrlListboxStatic;
			_ctrlGroup ctrlSetPosition [0, 0, 2, 2];
			_ctrlGroup ctrlCommit 0;
			showChat true;
		};
		
		LM_fnc_profanityFilterModule = {
			if (!((((getAssignedCuratorLogic player) == ((allCurators select { str _x == "bis_curator" }) # 0)) || (!((call BIS_fnc_admin) == 0))))) exitWith { 
				systemChat "[ LOG ] This module has been restricted to usage by Game Master only.";
				playSound "3DEN_notificationWarning";
			};
			
			["Profanity Filter",[
				[
					"TOOLBOX:ENABLED",
					["Profanity Filter Control:","Whether to enable the censoring of profane chat or to disable."],
					[false]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_control"];
				_display closeDisplay 1;
				
				if (_control) then {
					[[],{
						remoteExec ["","LM_JIP_profanityFilter"];
						removeMissionEventHandler ["HandleChatMessage", (player getVariable ["LM_MEH_profanityFilter", -1])];
						if (isNil "MAZ_EZM_fnc_checkForBlacklistedWords") then {
							MAZ_EZM_fnc_checkForBlacklistedWords = {
								params [["_message","",[""]]];
								private _isFound = false;
								private _return = _message;
								private _badWords = [
									["s","h","i","t"] joinString "",
									["n","i","g","g","e"] joinString "",
									["n","i","g","g","a"] joinString "",
									["n","i","g","g","e","r"] joinString "",
									["n","i","g","g"] joinString "",
									["f","u","c","k"] joinString "",
									["c","u","n","t"] joinString "",
									["f","a","g"] joinString "",
									["g","a","y"] joinString "",
									["z","a","m"] joinString "",
									["b","i","t","c","h"] joinString "",
									["d","i","c","k"] joinString ""
								];

								{
									if(((toLower _return) find _x) != -1) then {
										_isFound = true;
										private _length = count _x;
										private _index = (toLower _return) find _x;
										_return = _return splitString "";
										for "_i" from _index to (_index + _length - 1) do {
											_return set [_i,"*"];
										};
										_return = _return joinString "";
									};
								}forEach _badWords;
								if(_isFound) then {
									_return = [_return] call MAZ_EZM_fnc_checkForBlacklistedWords;
								};
								_return
							};
						};

						_varMEH = addMissionEventHandler ["HandleChatMessage", {
							params ["_channel", "_owner", "_from", "_text", "_person", "_name", "_strID", "_forcedDisplay", "_isPlayerMessage", "_sentenceType", "_chatMessageType"];
							_cleanedText = [_text] call MAZ_EZM_fnc_checkForBlacklistedWords;
							_cleanedText
						}];
						player setVariable ["LM_MEH_profanityFilter", _varMEH];
						titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>Text Chat <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Profanity Filter</t> has been <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Enabled</t>!</t>", "PLAIN DOWN", -1, false, true];
					}] remoteExec ["bis_fnc_call", -2]; 
					
					systemchat "[ LOG ] Profanity filter enabled for all chat messages!";
				} else {
					[[],{
						removeMissionEventHandler ["HandleChatMessage", (player getVariable ["LM_MEH_profanityFilter", -1])];
						titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>Text Chat <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Profanity Filter</t> has been <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Disabled</t>!</t>", "PLAIN DOWN", -1, false, true];
					}] remoteExec ["bis_fnc_call", -2, "LM_JIP_profanityFilter"]; 
					
					systemchat "[ LOG ] Profanity filter disabled for all chat messages!";
				};
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_lockServerModule = {
			if (!((((getAssignedCuratorLogic player) == ((allCurators select { str _x == "bis_curator" }) # 0)) || (!((call BIS_fnc_admin) == 0))))) exitWith { 
				systemChat "[ LOG ] This module has been restricted to usage by Game Master only.";
				playSound "3DEN_notificationWarning";
			};
			
			["Server Lock",[
				[
					"TOOLBOX:ENABLED",
					["Server Lock Control:","Whether to lock or unlock the server in regards to any players joining it."],
					[true]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_control"];
				_display closeDisplay 1;
				
				if (_control) then {
					_playerUIDs = [];
					{
						_playerUIDs append [getPlayerUID _x];
					} forEach allPlayers;
					[missionNamespace,["LM_var_whitelistedUIDs",_playerUIDs]] remoteExec ["setVariable",0,"LM_JIP_serverLockUIDs"];
					[missionNamespace,["LM_var_gameMasterUID_serverLock",getPlayerUID player]] remoteExec ["setVariable",2];
					[[],{
						waitUntil {!(isNull findDisplay 46) && alive player};
						
						titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>Please note, the <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Server</t> has been <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Locked</t>, only players here can join!</t>", "PLAIN DOWN", -1, false, true];
						
						if (!((getPlayerUID player) in (missionNamespace getVariable ["LM_var_whitelistedUIDs", []]))) then {
							player allowDamage false;
							if (((getAssignedCuratorUnit ((allCurators select { str _x == "bis_curator" }) # 0)) == player) || ((getAssignedCuratorUnit ((allCurators select { str _x == "bis_curator_1" }) # 0)) == player)) then {
								waitUntil {!(isNull findDisplay 312) && !(isNull findDisplay 46) && alive player};
								(findDisplay 50) closeDisplay 2;
								(findDisplay 70) closeDisplay 2;
								(findDisplay 46) closeDisplay 1;
								(findDisplay 312) closeDisplay 1;
							} else {
								(findDisplay 50) closeDisplay 2;
								(findDisplay 70) closeDisplay 2;
								(findDisplay 46) closeDisplay 1;
								(findDisplay 312) closeDisplay 1;
							};
						};
					}] remoteExec ["bis_fnc_call", 0, "LM_JIP_serverLock"];
					
					[[],{
						LM_MEH_zeusWatcher_lockServer = addMissionEventHandler ["PlayerDisconnected", {
							params ["_id", "_uid", "_name", "_jip", "_owner", "_idstr"];
							if (_uid == (missionNamespace getVariable ["LM_var_gameMasterUID_serverLock",""])) then {
								remoteExec ["", "LM_var_whitelistedUIDs"];
								remoteExec ["", "LM_JIP_serverLockUIDs"];
								[missionNamespace,["LM_var_gameMasterUID_serverLock",""]] remoteExec ["setVariable",2];
								remoteExec ["", "LM_JIP_serverLock"];
								
								[[],{
									titleText ["<t size='1.1' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>Please note, the <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Server</t> has been <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Un-Locked</t> due to the Game Master leaving, all players now can join!</t>", "PLAIN DOWN", -1, false, true];
								}] remoteExec ["bis_fnc_call", 0, false];
								
								[["PlayerDisconnected", (missionNamespace getVariable ["LM_var_zeusWatcherMEH_lockServer",-1])]] remoteExec ["removeMissionEventHandler",2];
							};
						}];
						
						[missionNamespace,["LM_var_zeusWatcherMEH_lockServer",LM_MEH_zeusWatcher_lockServer]] remoteExec ["setVariable",2];
					}] remoteExec ["bis_fnc_call", 2];
					
					systemchat "[ LOG ] Server has been locked, any players not currently here who join a slot will now be disconnected!";
				} else {
					remoteExec ["", "LM_var_whitelistedUIDs"];
					remoteExec ["", "LM_JIP_serverLockUIDs"];
					[missionNamespace,["LM_var_gameMasterUID_serverLock",""]] remoteExec ["setVariable",2];
					remoteExec ["", "LM_JIP_serverLock"];
					[["PlayerDisconnected", (missionNamespace getVariable ["LM_var_zeusWatcherMEH_lockServer",-1])]] remoteExec ["removeMissionEventHandler",2];
					
					[[],{
						titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>Please note, the <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Server</t> has been <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Un-Locked</t>, all players now can join!</t>", "PLAIN DOWN", -1, false, true];
					}] remoteExec ["bis_fnc_call", 0, false];
					
					systemchat "[ LOG ] Server has been un-locked, all players can now join!";
				};
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};
	
		LM_fnc_objectSizeModule = {
			params ["_entity"];
			if(isNull _entity) exitWith {["You must place this on a object or unit!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			[format["Scale Object - '%1'", getText (configfile >> "CfgVehicles" >> (typeOf _entity) >> "displayname")],[
				[
					"SLIDER",
					["Select Size:","Select the size to change the object to (Object muust be attached to another object)."],
					[0.0001,100,2]
				]
			],{
				params ["_values","_entity"];
				_values params ["_size"];
				_display closeDisplay 1;
				
				if (isNull attachedTo _entity) then {
					_parentObj = (([[_entity, "BOTTOM"], "Land_HelipadEmpty_F", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
					[_entity,_parentObj] call BIS_fnc_attachToRelative;
					[_parentObj] call MAZ_EZM_fnc_addObjectToInterface;
					systemchat format ["[ LOG ] Object has been auto-attached to a invisible helipad due to not being already attached to another object!", _size];
				};
				_entity setObjectScale _size;
				systemchat format ["[ LOG ] Object size scaled to '%1'!", _size];
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},_entity] call MAZ_EZM_fnc_createDialog;
		};

		LM_fnc_spectatorModule = {
			[[],{
				waitUntil {!isNull (findDisplay 46) && alive player};
				(findDisplay 46) displayRemoveEventHandler ['KeyDown',(player getVariable ['LM_DEH_spectator',-1])];
				player removeMPEventHandler ['MPRespawn',(player getVariable ['LM_MPEH_spectator',-1])];
				player setVariable ['isSpectator',false];
				_dehID = (findDisplay 46) displayAddEventHandler ["KeyDown", {
					if (((_this select 1) == 11) and (_this select 3)) then {
						_isSpectator = player getVariable ['isSpectator', false];
						if (not _isSpectator) then {
							titleText ["<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + " size='2'font='PuristaBold'>SPECTATOR MODE ENABLED, RESPAWN TO EXIT</t>", "PLAIN DOWN", -1, false, true];
							["Initialize", [player]] call BIS_fnc_EGSpectator;
							player allowDamage false; 
							[player,true] remoteExec ["hideObjectGlobal",2];
							player setVariable ['isSpectator',true];
						};
					};
				}];
				
				_mpehID = player addMPEventHandler ["MPRespawn", {
					if ((player getVariable ["isSpectator", false]) == true) then {
						if ((player getVariable ["isRestricted", false]) == false) then {
							titleText ["<t color='#FFFFFF' size='2'font='PuristaBold'>SPECTATOR MODE DISABLED</t>", "PLAIN DOWN", -1, false, true];
							["Terminate", [player]] call BIS_fnc_EGSpectator;
							player allowDamage true; 
							[player,false] remoteExec ["hideObjectGlobal",2];
							player setVariable ['isSpectator',false];
						};
					};
				}];
				player setVariable ['LM_DEH_spectator',_dehID];
				player setVariable ['LM_MPEH_spectator',_mpehID];
				titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>Press '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">CTRL+0</t>' use <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Spectator mode</t>!</t>", "PLAIN DOWN", -1, false, true];
				["IntelAdded", ["• Spectator Mode Added! 
 
				<br /><font size='15' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Spectator Mode
				<br />
				<br /><font size='12' color='#FFFFFF'>This feature allows you to enter into Spectator Mode wherever you are whilst remaining invulnerable in order to observe your surroundings to their fullest.
				<br />
				<br /><font size='14' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">How to Enable:
				<br />
				<br /><font size='12' color='#FFFFFF'>• Press '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">CTRL+0<font size='12' color='#FFFFFF'>' to enable Spectator Mode!
				<br />
				<br /><font size='14' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">How to Disable:
				<br />
				<br /><font size='12' color='#FFFFFF'>• Once enabled, press '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">ESC<font size='12' color='#FFFFFF'>' and select '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Respawn<font size='12' color='#FFFFFF'>' in order to exit Spectator Mode!
				"]] call BIS_fnc_showNotification;
				
				if ((player getVariable ["LM_keybindings_height_spectatorMode", 2000]) == 2000) then {
					player setVariable ["LM_keybindings_height", ((player getVariable ["LM_keybindings_height", 2000])+2000)];
					player setVariable ["LM_keybindings_height_spectatorMode", (player getVariable "LM_keybindings_height")];
					findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
						_this select 0 drawIcon [
							"\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa",
							[1,1,1,1],
							[worldSize+(500/(("Altis" call BIS_fnc_mapSize) / (worldSize))),worldSize-((player getVariable ["LM_keybindings_height_spectatorMode",2000])/(("Altis" call BIS_fnc_mapSize) / (worldSize))),0],
							0,
							0,
							0,
							"• Press 'CTRL+0' to enter Spectator Mode, Respawn to Exit",
							1,
							(1.75 / (6.4 * worldSize / 8192 * ctrlMapScale ((findDisplay 12) displayCtrl 51)))/(("Altis" call BIS_fnc_mapSize) / (worldSize)),
							"PuristaBold",
							"right"
						]
					}];
				};
			}] remoteExec ['bis_fnc_call',0,"LM_JIP_spectatorMode"]; 
			systemchat "[ LOG ] Press 'CTRL+0' to use Spectator mode";
		};

		LM_fnc_buildMenuModule = {
			params ["_entity"];
			if(isNull _entity || !((typeOf _entity) isKindOf "Man") || !(isPlayer _entity)) exitWith {["Place on players only!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			_buildCode =  (str {
				[(_this select 1), (_this select 3)] spawn {
					if (((_this select 0) == 48) and (_this select 1)) then {
						disableSerialization;
						_indexObjects = [
						[["Land_Cargo_Tower_V3_F","Military Cargo Tower (Brown)"],["Land_Cargo_Patrol_V3_F","Military Cargo Post (Brown)"],["Land_Cargo_HQ_V3_F","Military Cargo HQ (Brown)"],["Land_Cargo_House_V3_F","Military Cargo House (Brown)"],["Land_GuardTower_01_F","Guard Tower (Big)"],["Land_GuardTower_02_F","Guard Tower (Small)"],["Land_DeerStand_01_F","Deer Stand (v1)"],["Land_DeerStand_02_F","Deer Stand (v2)"],["Land_MedicalTent_01_NATO_generic_open_F","Tent (Field, Open)"],["Land_MedicalTent_01_NATO_generic_outer_F","Tent (Field, Outer)"]],
						
						[["Land_BagBunker_Large_F","Bunker (Large)"],["Land_BagBunker_Small_F","Bunker (Small)"],["Land_BagBunker_Tower_F","Bunker (Tower)"],["Land_HBarrierTower_F","H-barrier Watchtower"],["Land_Bunker_02_light_left_F","Old Bunker (Left)"],["Land_Bunker_02_light_double_F","Old Bunker"],["Land_Bunker_02_light_right_F","Old Bunker (Right)"],["Land_Bunker_01_tall_F","Modular Bunker (Tall)"],["Land_Bunker_01_small_F","Modular Bunker (Small)"],["Land_Bunker_01_HQ_F","Modular Bunker (HQ)"],["Land_Bunker_01_big_F","Modular Bunker (Big)"]],
						
						[["Land_BagFence_Corner_F","Sandbag Wall (Corner)"],["Land_BagFence_Long_F","Sandbag Wall (Long)"],["Land_BagFence_Short_F","Sandbag Wall (Short)"],["Land_BagFence_Round_F","Sandbag Wall (Round)"],["Land_BagFence_End_F","Sandbag Wall (End)"],["Land_SandbagBarricade_01_F","Sandbag Barricade (Tall)"],["Land_SandbagBarricade_01_hole_F","Sandbag Barricade (Tall, Hole)"],["Land_SandbagBarricade_01_half_F","Sandbag Barricade (Short)"],["Land_Barricade_01_4m_F","Junk Barricade (4 m)"],["Land_Barricade_01_10m_F","Junk Barricade (10 m)"],["Land_HBarrier_1_F","H-barrier (Block)"],["Land_HBarrier_3_F","H-barrier (3 Blocks)"],["Land_HBarrier_5_F","H-barrier (5 Blocks)"],["Land_HBarrier_Big_F","H-barrier (Big, 4 Blocks)"],["Land_HBarrierWall_corner_F","H-barrier Wall (Corner)"],["Land_HBarrierWall_corridor_F","H-barrier Corridor"],["Land_HBarrierWall4_F","H-barrier Wall (Short)"],["Land_HBarrierWall6_F","H-barrier Wall (Long)"],["Land_CzechHedgehog_01_new_F","Czech Hedgehog (New)"],["Land_ConcreteHedgehog_01_F","Concrete Hedgehog"],["Land_DragonsTeeth_01_1x1_new_F","Dragon's Tooth (Single, new)"],["Land_Razorwire_F","Razorwire Barrier"],["Land_ConcreteWall_01_l_gate_F","Tall Concrete Wall (Gate)"],["Land_WiredFence_01_gate_F","Medium Wire Fence (Gate)"],["Land_BarGate_F","Bar Gate"],["Land_RoadBarrier_01_F","Bar Gate (v2)"]],
						
						[["I_E_HMG_02_high_F","M2 HMG .50 (Raised)"],["I_E_HMG_02_F","M2 HMG .50"],["I_E_HMG_01_high_F","Mk30 HMG .50 (Raised)"],["I_E_HMG_01_F","Mk30 HMG .50"],["I_E_GMG_01_high_F","Mk32 GMG 20 mm (Raised)"],["I_E_GMG_01_F","Mk32 GMG 20 mm"],["I_E_Static_AT_F","Static Titan Launcher (AT)"],["I_E_Static_AA_F","Static Titan Launcher (AA)"]],
						
						[["Land_RepairDepot_01_tan_F","Repair depot (Tan)"],["B_Slingload_01_Ammo_F","Huron Ammo Container"],["B_Slingload_01_Fuel_F","Huron Fuel Container"],["B_Slingload_01_Repair_F","Huron Repair Container"],["B_Slingload_01_Medevac_F","Huron Medical Container"]],
						
						[["Land_PortableLight_single_F","Portable Lights (Single)"],["Land_PortableLight_double_F","Portable Lights (Double)"],["Land_PortableLight_02_quad_sand_F","Rugged Portable Lamp (Quad, Sand)"],["Land_PortableLight_02_double_sand_F","Rugged Portable Lamp (Double, Sand)"],["Land_PortableLight_02_single_sand_F","Rugged Portable Lamp (Single, Sand)"],["Land_PortableLight_02_single_folded_sand_F","Rugged Portable Lamp (Single, Folded, Sand)"],["Land_LampHalogen_F","Lamp (Halogen)"],["Land_LampStreet_F","Street Lamp"],["Land_LampIndustrial_02_F","Railway Yard Lamp"],["Land_LampShabby_F","Lamp (Shabby)"],["Land_LampHarbour_F","Lamp (Harbor)"]],
						
						[["Flag_NATO_F","Flag (NATO)"],["Flag_CSAT_F","Flag (CSAT)"],["Flag_AAF_F","Flag (AAF)"],["Flag_EAF_F","Flag (LDF)"],["Flag_FIA_F","Flag (FIA)"],["Flag_Syndikat_F","Flag (Syndikat)"],["Flag_US_F","Flag (USA)"],["Flag_CTRG_F","Flag (CTRG)"],["Flag_Viper_F","Flag (Viper)"],["Flag_Gendarmerie_F","Flag (Gendarmerie)"],["Flag_IDAP_F","Flag (IDAP)"],["Flag_POWMIA_F","Flag (POW/MIA)"]]
						];
						player setVariable ["_indexObjects",_indexObjects];

						_display = findDisplay 46 createDisplay "RscDisplayEmpty";
						_ctrlGroup = _display ctrlCreate ["RscControlsGroup", -1];
						
						_ctrlBackgroundStatic = _display ctrlCreate ["RscTextMulti", -1, _ctrlGroup];
							_ctrlBackgroundStatic ctrlSetPosition [0, 0.045, 0.225, 0.5];
							_ctrlBackgroundStatic ctrlSetBackgroundColor [0,0,0,0.4];
							_ctrlBackgroundStatic ctrlEnable false;
							_ctrlBackgroundStatic ctrlCommit 0;
						
						_ctrlTitleStatic = _display ctrlCreate ["RscText", -1, _ctrlGroup];
							_ctrlTitleStatic ctrlSetText "Build Menu:";
							_ctrlTitleStatic ctrlSetPosition [0, 0, 0.225, 0.04];
							_ctrlTitleStatic ctrlSetBackgroundColor LM_trimColor_RGBA;
							_ctrlTitleStatic ctrlCommit 0;
						
						
						_ctrlFramePreview = _display ctrlCreate ["RscTextMulti", -1, _ctrlGroup];
							_ctrlFramePreview ctrlSetPosition [0.23, 0.045, 0.3375, 0.25];
							_ctrlFramePreview ctrlSetBackgroundColor [0,0,0,0.4];
							_ctrlFramePreview ctrlEnable false;
							_ctrlFramePreview ctrlCommit 0;
						
						_ctrlTitlePreview = _display ctrlCreate ["RscText", -1, _ctrlGroup];
							_ctrlTitlePreview ctrlSetText "Object Preview:";
							_ctrlTitlePreview ctrlSetPosition [0.23, 0, 0.3375, 0.04];
							_ctrlTitlePreview ctrlSetBackgroundColor LM_trimColor_RGBA;
							_ctrlTitlePreview ctrlCommit 0;
						
						_ctrlBackgroundPreview = _display ctrlCreate ["RscTextMulti", -1, _ctrlGroup];
							_ctrlBackgroundPreview ctrlSetPosition [0.24, 0.06, 0.3175, 0.22];
							_ctrlBackgroundPreview ctrlSetBackgroundColor [0.482,0.518,0.506,1];
							_ctrlBackgroundPreview ctrlEnable false;
							_ctrlBackgroundPreview ctrlCommit 0;
						
						ctrlPicturePreview = _display ctrlCreate ["RscPicture", -1, _ctrlGroup];
							if (!((isNil "ctrlObj") and (isNil "placedObj"))) then {
								if ((alive ctrlObj) and (alive placedObj)) then {
									ctrlPicturePreview ctrlSetText (getText (configfile >> "CfgVehicles" >> (typeOf placedObj) >> "editorPreview"));
								} else {
									ctrlPicturePreview ctrlSetText "";
								};
							} else {
								ctrlPicturePreview ctrlSetText "";
							};
							ctrlPicturePreview ctrlSetPosition [0.24, 0.06, 0.3175, 0.22];
							ctrlPicturePreview ctrlEnable false;
							ctrlPicturePreview ctrlCommit 0;
						
						
						_ctrlTitleAmount = _display ctrlCreate ["RscText", -1, _ctrlGroup];
							_ctrlTitleAmount ctrlSetText "Transform Power:";
							_ctrlTitleAmount ctrlSetPosition [0.23, 0.3, 0.3375, 0.04];
							_ctrlTitleAmount ctrlSetBackgroundColor LM_trimColor_RGBA;
							_ctrlTitleAmount ctrlCommit 0;
						
						if (isNil "ctrlSliderPower") then {
							ctrlSliderPower = 1;
						};
						ctrlSliderAmount = _display ctrlCreate ["RscXSliderH", -1, _ctrlGroup];
							ctrlSliderAmount ctrlSetTooltip "Use Slider to Control How Much '-' and '+' Buttons Affect Object";
							ctrlSliderAmount ctrlSetPosition [0.23, 0.345, 0.2825, 0.04];
							ctrlSliderAmount ctrlSetBackgroundColor [0,0,0,0.6];
							ctrlSliderAmount ctrlCommit 0;
							ctrlSliderAmount sliderSetRange [1, 359];
							ctrlSliderAmount sliderSetSpeed [1, 1];
							ctrlSliderAmount sliderSetPosition 1;
							ctrlSliderAmount ctrlAddEventHandler ["sliderPosChanged", {
								params ["_ctrlSlider", "_value"];
								_ctrlSlider sliderSetPosition (round _value);
								ctrlButtonAmount ctrlSetText str(sliderPosition _ctrlSlider);
								ctrlSliderPower = (round _value);
							}];
							
						ctrlButtonAmount = _display ctrlCreate ["RscText", -1, _ctrlGroup];
							ctrlButtonAmount ctrlSetPosition [0.5175, 0.345, 0.05, 0.04];
							ctrlButtonAmount ctrlSetText str(sliderPosition ctrlSliderAmount);
							ctrlButtonAmount ctrlSetBackgroundColor [0,0,0,0.4];
							ctrlButtonAmount ctrlSetActiveColor [0,0,0,0.6];
							ctrlButtonAmount ctrlCommit 0;
						
						
						mainMenu = {
							params ["_control"];
							_control ctrlRemoveAllEventHandlers "LBDblClick";
							lbClear _control;
							
							_control lbAdd "Buildings";
							_control lbAdd "Bunkers";
							_control lbAdd "Barricades";
							_control lbAdd "Statics";
							_control lbAdd "Supplies";
							_control lbAdd "Lights";
							_control lbAdd "Flags";
							
							_control ctrlAddEventHandler ["LBDblClick", {
								params ["_control", "_selectedIndex"];
								[_control, _selectedIndex] call objMenu;
							}];
							_control lbSetCurSel 0;
						};
						
						objMenu = {
							params ["_control", "_selectedIndex"];
							_control ctrlRemoveAllEventHandlers "LBDblClick";
							lbClear _control;
							
							_control lbAdd "[Main Menu]";
							_control lbSetColor [0, LM_trimColor_RGBA];
							if (_selectedIndex == 0) then {
								player setVariable ["_objectFunction",0];
							} else {
								if (_selectedIndex == 1) then {
									player setVariable ["_objectFunction",1];
								} else {
									if (_selectedIndex == 2) then {
										player setVariable ["_objectFunction",2];
									} else {
										if (_selectedIndex == 3) then {
											player setVariable ["_objectFunction",3];
										} else {
											if (_selectedIndex == 4) then {
												player setVariable ["_objectFunction",4];
											} else {
												if (_selectedIndex == 5) then {
													player setVariable ["_objectFunction",5];
												} else {
													player setVariable ["_objectFunction",6];
												};
											};
										};
									};
								};
							};
							_index = 0;
							{
								_index = _index + 1;
								_control lbAdd (_x select 1);
								_control lbSetTooltip [_index, (_x select 1)];
							} forEach ((player getVariable "_indexObjects") select (player getVariable "_objectFunction"));
							
							_control ctrlAddEventHandler ["LBSelChanged", {
								params ["_control", "_lbCurSel", "_lbSelection"];
								if (_lbCurSel == 0) then {
									ctrlPicturePreview ctrlSetText "";
								} else {
									_objectInformation = ((player getVariable "_indexObjects") select (player getVariable "_objectFunction")) select (_lbCurSel - 1);
									if (!((_control lbText _lbCurSel) == (_objectInformation select 1))) then {
										ctrlPicturePreview ctrlSetText "";
									} else {
										ctrlPicturePreview ctrlSetText (getText (configfile >> "CfgVehicles" >> (_objectInformation select 0) >> "editorPreview"));
									};
								};
							}];
							
							_control ctrlAddEventHandler ["LBDblClick", {
								params ["_control", "_selectedIndex"];
								if (_selectedIndex == 0) then {
									[_control] call mainMenu;
								} else {
									_objectInformation = ((player getVariable "_indexObjects") select (player getVariable "_objectFunction")) select (_selectedIndex - 1);
									deleteVehicle placedObj;
									deleteVehicle ctrlObj;
									objYaw = 0; objPitch = 0; objRoll = 0;
									ctrlObj = (([getPosASL player, ("Land_HelipadEmpty_F"), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									placedObj = (([[ctrlObj, "TOP"], (_objectInformation select 0), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									placedObj setVehicleLock "LOCKED";
									placedObjDim = boundingBox placedObj;
									[placedObj, ctrlObj] call BIS_fnc_attachToRelative;
									if (abs (placedObjDim select 2) > 10) then {
										ctrlObj attachTo [player, [0, (abs (placedObjDim select 2) + 5), 0]];
									} else {
										ctrlObj attachTo [player, [0, (abs (placedObjDim select 2) + 2.5), 0]];
									};
									playSound "3DEN_notificationDefault";
									[ 
										"<t color='#FFFFFF' align='center' size='0.4' font='PuristaBold' shadow='1'>Increase '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">SHIFT</t>' || Decrease '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">ALT</t>'<br/>X-Axis '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">[</t>' || Y-Axis '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">]</t>' || Z-Axis '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">\</t>' || Height '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">-</t>' || Distance '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">=</t>'</t>", 
										0,
										safeZoneY+0.025, 
										99999, 
										2, 
										0, 
										3093 
									] spawn bis_fnc_dynamicText;
								};
							}];
						};
						
						_ctrlListboxStatic = _display ctrlCreate ["RscListbox", -1, _ctrlGroup];
						_ctrlListboxStatic ctrlSetPosition [0.01, 0.06, 0.2025, 0.47];
						_ctrlListboxStatic ctrlAddEventHandler ["LBDblClick", {
							params ["_control", "_selectedIndex"];
							[_control, _selectedIndex] call objMenu;
						}];
						[_ctrlListboxStatic] call mainMenu;
						_ctrlListboxStatic ctrlCommit 0;
						
						findDisplay 0 displayCtrl 999 setVariable ['_ctrlListboxStatic', _ctrlListboxStatic];
						ctrlSetFocus _ctrlListboxStatic;
						
						
						LM_buildMenu_pitch = {
							if (!(isNil "ctrlObj")) then {
								if (alive ctrlObj) then {
									if ((_this select 0)) then {
										objPitch = objPitch + ctrlSliderPower;
									} else {
										objPitch = objPitch - ctrlSliderPower;
									};
									_y = objYaw; _p = objPitch; _r = objRoll;  
									ctrlObj setVectorDirAndUp [  
										[sin _y * cos _p, cos _y * cos _p, sin _p],  
										[[sin _r, -sin _p, cos _r * cos _p], -_y] call BIS_fnc_rotateVector2D  
									];
								} else {
									systemChat "[ LOG ] Please select an object first!";
									playSound "3DEN_notificationWarning";
								};
							} else {
								systemChat "[ LOG ] Please select an object first!";
								playSound "3DEN_notificationWarning";
							};
						};
						_ctrlTitlePitch = _display ctrlCreate ["RscText", -1, _ctrlGroup];
							_ctrlTitlePitch ctrlSetText "X-Axis:";
							_ctrlTitlePitch ctrlSetTooltip "Pitch";
							_ctrlTitlePitch ctrlSetPosition [0, 0.55, 0.135, 0.04];
							_ctrlTitlePitch ctrlSetBackgroundColor [0,0,0,0.6];
							_ctrlTitlePitch ctrlCommit 0;
							
							_ctrlButtonPitchNeg = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
							_ctrlButtonPitchNeg ctrlSetPosition [0.14, 0.55, 0.04, 0.04];
							_ctrlButtonPitchNeg ctrlSetText "-";
							_ctrlButtonPitchNeg ctrlSetBackgroundColor [0,0,0,0.4];
							_ctrlButtonPitchNeg ctrlSetActiveColor [0,0,0,0.6];
							_ctrlButtonPitchNeg ctrlAddEventHandler ["ButtonClick", {
								[false] call LM_buildMenu_pitch;
							}];
							_ctrlButtonPitchNeg ctrlCommit 0;
							
							_ctrlButtonPitchPos = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
							_ctrlButtonPitchPos ctrlSetPosition [0.185, 0.55, 0.04, 0.04];
							_ctrlButtonPitchPos ctrlSetText "+";
							_ctrlButtonPitchPos ctrlSetBackgroundColor [0,0,0,0.4];
							_ctrlButtonPitchPos ctrlSetActiveColor [0,0,0,0.6];
							_ctrlButtonPitchPos ctrlAddEventHandler ["ButtonClick", {
								[true] call LM_buildMenu_pitch;
							}];
							_ctrlButtonPitchPos ctrlCommit 0;
						
						
						LM_buildMenu_roll = {
							if (!(isNil "ctrlObj")) then {
								if (alive ctrlObj) then {
									if ((_this select 0)) then {
										objRoll = objRoll + ctrlSliderPower;
									} else {
										objRoll = objRoll - ctrlSliderPower;
									};
									_y = objYaw; _p = objPitch; _r = objRoll;  
									ctrlObj setVectorDirAndUp [  
										[sin _y * cos _p, cos _y * cos _p, sin _p],  
										[[sin _r, -sin _p, cos _r * cos _p], -_y] call BIS_fnc_rotateVector2D  
									];
								} else {
									systemChat "[ LOG ] Please select an object first!";
									playSound "3DEN_notificationWarning";
								};
							} else {
								systemChat "[ LOG ] Please select an object first!";
								playSound "3DEN_notificationWarning";
							};
						};
						_ctrlTitleRoll = _display ctrlCreate ["RscText", -1, _ctrlGroup];
							_ctrlTitleRoll ctrlSetText "Y-Axis:";
							_ctrlTitleRoll ctrlSetTooltip "Roll";
							_ctrlTitleRoll ctrlSetPosition [0, 0.595, 0.135, 0.04];
							_ctrlTitleRoll ctrlSetBackgroundColor [0,0,0,0.6];
							_ctrlTitleRoll ctrlCommit 0;
							
							_ctrlButtonRollNeg = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
							_ctrlButtonRollNeg ctrlSetPosition [0.14, 0.595, 0.04, 0.04];
							_ctrlButtonRollNeg ctrlSetText "-";
							_ctrlButtonRollNeg ctrlSetBackgroundColor [0,0,0,0.4];
							_ctrlButtonRollNeg ctrlSetActiveColor [0,0,0,0.6];
							_ctrlButtonRollNeg ctrlAddEventHandler ["ButtonClick", {
								[false] call LM_buildMenu_roll;
							}];
							_ctrlButtonRollNeg ctrlCommit 0;
							
							_ctrlButtonRollPos = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
							_ctrlButtonRollPos ctrlSetPosition [0.185, 0.595, 0.04, 0.04];
							_ctrlButtonRollPos ctrlSetText "+";
							_ctrlButtonRollPos ctrlSetBackgroundColor [0,0,0,0.4];
							_ctrlButtonRollPos ctrlSetActiveColor [0,0,0,0.6];
							_ctrlButtonRollPos ctrlAddEventHandler ["ButtonClick", {
								[true] call LM_buildMenu_roll;
							}];
							_ctrlButtonRollPos ctrlCommit 0;
						
						
						LM_buildMenu_yaw = {
							if (!(isNil "ctrlObj")) then {
								if (alive ctrlObj) then {
									if ((_this select 0)) then {
										objYaw = objYaw + ctrlSliderPower;
									} else {
										objYaw = objYaw - ctrlSliderPower;
									};
									_y = objYaw; _p = objPitch; _r = objRoll;  
									ctrlObj setVectorDirAndUp [  
										[sin _y * cos _p, cos _y * cos _p, sin _p],  
										[[sin _r, -sin _p, cos _r * cos _p], -_y] call BIS_fnc_rotateVector2D  
									];
								} else {
									systemChat "[ LOG ] Please select an object first!";
									playSound "3DEN_notificationWarning";
								};
							} else {
								systemChat "[ LOG ] Please select an object first!";
								playSound "3DEN_notificationWarning";
							};
						};
						_ctrlTitleYaw = _display ctrlCreate ["RscText", -1, _ctrlGroup];
							_ctrlTitleYaw ctrlSetText "Z-Axis:";
							_ctrlTitleYaw ctrlSetTooltip "Yaw";
							_ctrlTitleYaw ctrlSetPosition [0, 0.64, 0.135, 0.04];
							_ctrlTitleYaw ctrlSetBackgroundColor [0,0,0,0.6];
							_ctrlTitleYaw ctrlCommit 0;
							
							_ctrlButtonYawNeg = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
							_ctrlButtonYawNeg ctrlSetPosition [0.14, 0.64, 0.04, 0.04];
							_ctrlButtonYawNeg ctrlSetText "-";
							_ctrlButtonYawNeg ctrlSetBackgroundColor [0,0,0,0.4];
							_ctrlButtonYawNeg ctrlSetActiveColor [0,0,0,0.6];
							_ctrlButtonYawNeg ctrlAddEventHandler ["ButtonClick", {
								[false] call LM_buildMenu_yaw;
							}];
							_ctrlButtonYawNeg ctrlCommit 0;
							
							_ctrlButtonYawPos = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
							_ctrlButtonYawPos ctrlSetPosition [0.185, 0.64, 0.04, 0.04];
							_ctrlButtonYawPos ctrlSetText "+";
							_ctrlButtonYawPos ctrlSetBackgroundColor [0,0,0,0.4];
							_ctrlButtonYawPos ctrlSetActiveColor [0,0,0,0.6];
							_ctrlButtonYawPos ctrlAddEventHandler ["ButtonClick", {
								[true] call LM_buildMenu_yaw;
							}];
							_ctrlButtonYawPos ctrlCommit 0;
						
						
						LM_buildMenu_height = {
							if (!(isNil "ctrlObj")) then {
								if (alive ctrlObj) then {
									detach player;
									if ((_this select 0)) then {
										ctrlObj setPos (ctrlObj modelToWorld [0,0,ctrlSliderPower]);
									} else {
										ctrlObj setPos (ctrlObj modelToWorld [0,0,-(ctrlSliderPower)]);
									};
									[ctrlObj, player] call BIS_fnc_attachToRelative;
									_y = objYaw; _p = objPitch; _r = objRoll;  
									ctrlObj setVectorDirAndUp [  
										[sin _y * cos _p, cos _y * cos _p, sin _p],  
										[[sin _r, -sin _p, cos _r * cos _p], -_y] call BIS_fnc_rotateVector2D  
									];
								} else {
									systemChat "[ LOG ] Please select an object first!";
									playSound "3DEN_notificationWarning";
								};
							} else {
								systemChat "[ LOG ] Please select an object first!";
								playSound "3DEN_notificationWarning";
							};
						};
						_ctrlTitleHeight = _display ctrlCreate ["RscText", -1, _ctrlGroup];
							_ctrlTitleHeight ctrlSetText "Height:";
							_ctrlTitleHeight ctrlSetPosition [0, 0.685, 0.135, 0.04];
							_ctrlTitleHeight ctrlSetBackgroundColor [0,0,0,0.6];
							_ctrlTitleHeight ctrlCommit 0;
							
							_ctrlButtonHeightNeg = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
							_ctrlButtonHeightNeg ctrlSetPosition [0.14, 0.685, 0.04, 0.04];
							_ctrlButtonHeightNeg ctrlSetText "-";
							_ctrlButtonHeightNeg ctrlSetBackgroundColor [0,0,0,0.4];
							_ctrlButtonHeightNeg ctrlSetActiveColor [0,0,0,0.6];
							_ctrlButtonHeightNeg ctrlAddEventHandler ["ButtonClick", {
								[false] call LM_buildMenu_height;
							}];
							_ctrlButtonHeightNeg ctrlCommit 0;
							
							_ctrlButtonHeightPos = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
							_ctrlButtonHeightPos ctrlSetPosition [0.185, 0.685, 0.04, 0.04];
							_ctrlButtonHeightPos ctrlSetText "+";
							_ctrlButtonHeightPos ctrlSetBackgroundColor [0,0,0,0.4];
							_ctrlButtonHeightPos ctrlSetActiveColor [0,0,0,0.6];
							_ctrlButtonHeightPos ctrlAddEventHandler ["ButtonClick", {
								[true] call LM_buildMenu_height;
							}];
							_ctrlButtonHeightPos ctrlCommit 0;
						
						
						LM_buildMenu_distance = {
							if (!(isNil "ctrlObj")) then {
								if (alive ctrlObj) then {
									detach player;
									if ((_this select 0)) then {
										ctrlObj setPos (ctrlObj modelToWorld [0,ctrlSliderPower,0]);
									} else {
										ctrlObj setPos (ctrlObj modelToWorld [0,-(ctrlSliderPower),0]);
									};
									[ctrlObj, player] call BIS_fnc_attachToRelative;
									_y = objYaw; _p = objPitch; _r = objRoll;  
									ctrlObj setVectorDirAndUp [  
										[sin _y * cos _p, cos _y * cos _p, sin _p],  
										[[sin _r, -sin _p, cos _r * cos _p], -_y] call BIS_fnc_rotateVector2D  
									];
								} else {
									systemChat "[ LOG ] Please select an object first!";
									playSound "3DEN_notificationWarning";
								};
							} else {
								systemChat "[ LOG ] Please select an object first!";
								playSound "3DEN_notificationWarning";
							};
						};
						_ctrlTitleDistance = _display ctrlCreate ["RscText", -1, _ctrlGroup];
							_ctrlTitleDistance ctrlSetText "Distance:";
							_ctrlTitleDistance ctrlSetPosition [0, 0.73, 0.135, 0.04];
							_ctrlTitleDistance ctrlSetBackgroundColor [0,0,0,0.6];
							_ctrlTitleDistance ctrlCommit 0;
							
							_ctrlButtonDistanceNeg = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
							_ctrlButtonDistanceNeg ctrlSetPosition [0.14, 0.73, 0.04, 0.04];
							_ctrlButtonDistanceNeg ctrlSetText "-";
							_ctrlButtonDistanceNeg ctrlSetBackgroundColor [0,0,0,0.4];
							_ctrlButtonDistanceNeg ctrlSetActiveColor [0,0,0,0.6];
							_ctrlButtonDistanceNeg ctrlAddEventHandler ["ButtonClick", {
								[false] call LM_buildMenu_distance;
							}];
							_ctrlButtonDistanceNeg ctrlCommit 0;
							
							_ctrlButtonDistancePos = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
							_ctrlButtonDistancePos ctrlSetPosition [0.185, 0.73, 0.04, 0.04];
							_ctrlButtonDistancePos ctrlSetText "+";
							_ctrlButtonDistancePos ctrlSetBackgroundColor [0,0,0,0.4];
							_ctrlButtonDistancePos ctrlSetActiveColor [0,0,0,0.6];
							_ctrlButtonDistancePos ctrlAddEventHandler ["ButtonClick", {
								[true] call LM_buildMenu_distance;
							}];
							_ctrlButtonDistancePos ctrlCommit 0;
							
							
						_ctrlButtonAlign = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
							_ctrlButtonAlign ctrlSetPosition [0, 0.775, 0.225, 0.04];
							_ctrlButtonAlign ctrlSetText "Surface Align";
							_ctrlButtonAlign ctrlSetTooltip "Align Object to Below Surface";
							_ctrlButtonAlign ctrlSetBackgroundColor [0,0,0,0.4];
							_ctrlButtonAlign ctrlSetActiveColor [0,0,0,0.6];
							_ctrlButtonAlign ctrlAddEventHandler ["ButtonClick", {
								if (!(isNil "ctrlObj")) then {
									if (alive ctrlObj) then {
										detach placedObj;
										placedObj setVectorUp surfaceNormal position placedObj;
										[placedObj, ctrlObj] call BIS_fnc_attachToRelative;
									} else {
										systemChat "[ LOG ] Please select an object first!";
										playSound "3DEN_notificationWarning";
									};
								} else {
									systemChat "[ LOG ] Please select an object first!";
									playSound "3DEN_notificationWarning";
								};

							}];
							_ctrlButtonAlign ctrlCommit 0;
							
							
						_ctrlButtonSnap = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
							_ctrlButtonSnap ctrlSetPosition [0, 0.82, 0.225, 0.04];
							_ctrlButtonSnap ctrlSetText "Surface Place";
							_ctrlButtonSnap ctrlSetTooltip "Place Object aligned with and on the Ground";
							_ctrlButtonSnap ctrlSetTextColor LM_trimColor_RGBA;
							_ctrlButtonSnap ctrlSetBackgroundColor [0,0,0,0.4];
							_ctrlButtonSnap ctrlSetActiveColor [0,0,0,0.6];
							_ctrlButtonSnap ctrlAddEventHandler ["ButtonClick", {
								if (!(isNil "ctrlObj")) then {
									if (alive ctrlObj) then {
										if (speed player == 0) then {
											detach placedObj;
											placedObj setVehicleLock "UNLOCKED";
											placedObj setPos [((position placedObj) select 0), ((position placedObj) select 1), 0];
											placedObj setVectorUp surfaceNormal position placedObj;
											deleteVehicle ctrlObj;
											placedObj = ctrlObj;
											objYaw = 0; objPitch = 0; objRoll = 0;
											ctrlPicturePreview ctrlSetText "";
											playSound "3DEN_notificationDefault";
											[ 
												"", 
												0,
												safeZoneY+0.025, 
												99999, 
												2, 
												0, 
												3093 
											] spawn bis_fnc_dynamicText;
											[placedObj, true] remoteExec ["enableDynamicSimulation", 0, true];
										} else {
											systemChat "[ LOG ] To place an object you must not be moving!";
											playSound "3DEN_notificationWarning";
										};
									} else {
										systemChat "[ LOG ] Please select an object first!";
										playSound "3DEN_notificationWarning";
									};
								} else {
									systemChat "[ LOG ] Please select an object first!";
									playSound "3DEN_notificationWarning";
								};

							}];
							_ctrlButtonSnap ctrlCommit 0;
							
							
						_ctrlButtonPlace = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
							_ctrlButtonPlace ctrlSetPosition [0, 0.865, 0.225, 0.04];
							_ctrlButtonPlace ctrlSetText "Position Place";
							_ctrlButtonPlace ctrlSetTooltip "Place Object in its Current Position";
							_ctrlButtonPlace ctrlSetTextColor LM_trimColor_RGBA;
							_ctrlButtonPlace ctrlSetBackgroundColor [0,0,0,0.4];
							_ctrlButtonPlace ctrlSetActiveColor [0,0,0,0.6];
							_ctrlButtonPlace ctrlAddEventHandler ["ButtonClick", {
								if (!(isNil "ctrlObj")) then {
									if (alive ctrlObj) then {
										if (speed player == 0) then {
											detach placedObj;
											placedObj setVehicleLock "UNLOCKED";
											deleteVehicle ctrlObj;
											placedObj = ctrlObj;
											objYaw = 0; objPitch = 0; objRoll = 0;
											ctrlPicturePreview ctrlSetText "";
											playSound "3DEN_notificationDefault";
											[ 
												"", 
												0,
												safeZoneY+0.025, 
												99999, 
												2, 
												0, 
												3093 
											] spawn bis_fnc_dynamicText;
											[placedObj, true] remoteExec ["enableDynamicSimulation", 0, true];
										} else {
											systemChat "[ LOG ] To place an object you must not be moving!";
											playSound "3DEN_notificationWarning";
										};
									} else {
										systemChat "[ LOG ] Please select an object first!";
										playSound "3DEN_notificationWarning";
									};
								} else {
									systemChat "[ LOG ] Please select an object first!";
									playSound "3DEN_notificationWarning";
								};

							}];
							_ctrlButtonPlace ctrlCommit 0;
							
							
						_ctrlButtonDelete = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
							_ctrlButtonDelete ctrlSetPosition [0, 0.91, 0.225, 0.04];
							_ctrlButtonDelete ctrlSetText "Delete Object";
							_ctrlButtonDelete ctrlSetBackgroundColor [0.5,0,0,1];
							_ctrlButtonDelete ctrlSetActiveColor [0,0,0,0.6];
							_ctrlButtonDelete ctrlAddEventHandler ["ButtonClick", {
								if (!(isNil "ctrlObj")) then {
									deleteVehicle placedObj;
									if (alive ctrlObj) then {
										deleteVehicle ctrlObj;
										objYaw = 0; objPitch = 0; objRoll = 0;
										ctrlPicturePreview ctrlSetText "";
										playSound "3DEN_notificationDefault";
										[ 
											"", 
											0,
											safeZoneY+0.025, 
											99999, 
											2, 
											0, 
											3093 
										] spawn bis_fnc_dynamicText;
									} else {
										systemChat "[ LOG ] Please select an object first!";
										playSound "3DEN_notificationWarning";
									};
								} else {
									systemChat "[ LOG ] Please select an object first!";
									playSound "3DEN_notificationWarning";
								};
							}];
							_ctrlButtonDelete ctrlCommit 0;
						
						
						_ctrlGroup ctrlSetPosition [safeZoneXAbs+0.05, safeZoneY+0.05, 0.5675, 2];
						_ctrlGroup ctrlCommit 0;
						playSound "Hint";
						showChat true;
						
						player addMPEventHandler ["MPRespawn", { 
							[ 
								"", 
								0,
								safeZoneY+0.025, 
								99999, 
								2, 
								0, 
								3093 
							] spawn bis_fnc_dynamicText; 
						}];
						
						(findDisplay 46) displayAddEventHandler ["KeyDown", {
							if (((_this select 1) == 12)) then {
								if (_this select 2) then {
									[true] call LM_buildMenu_height;
								} else {
									if (_this select 4) then {
										[false] call LM_buildMenu_height;
									};
								};
							} else {
								if (((_this select 1) == 13)) then {
									if (_this select 2) then {
										[true] call LM_buildMenu_distance;
									} else {
										if (_this select 4) then {
											[false] call LM_buildMenu_distance;
										};
									};
								} else {
									if (((_this select 1) == 26)) then {
										if (_this select 2) then {
											[true] call LM_buildMenu_pitch;
										} else {
											if (_this select 4) then {
												[false] call LM_buildMenu_pitch;
											};
										};
									} else {
										if (((_this select 1) == 27)) then {
											if (_this select 2) then {
												[true] call LM_buildMenu_roll;
											} else {
												if (_this select 4) then {
													[false] call LM_buildMenu_roll;
												};
											};
										} else {
											if (((_this select 1) == 43)) then {
												if (_this select 2) then {
													[true] call LM_buildMenu_yaw;
												} else {
													if (_this select 4) then {
														[false] call LM_buildMenu_yaw;
													};
												};
											};
										};
									};
								};
							};
						}];
					};
				};
			}) splitString "";
			_buildCode deleteAt (count _buildCode - 1);
			_buildCode deleteAt 0;
			missionNamespace setVariable ["LM_fnc_buildMenuVariable",_buildCode,true];
			[_entity,{
				params ["_entity"];
				if (player == _entity) then {
					waitUntil {!isNull (findDisplay 46) && alive player};
					(findDisplay 46) displayRemoveEventHandler ['KeyDown', (player getVariable ['LM_DEH_buildMenu', -1])];
					_dehID = (findDisplay 46) displayAddEventHandler ["KeyDown", ((missionNamespace getVariable "LM_fnc_buildMenuVariable") joinString "")];
					player setVariable ['LM_DEH_buildMenu', _dehID];
				};
				titleText [format ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>'<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">%1</t>' can now access the <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Build Menu</t> by pressing '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">CTRL+B</t>'!</t>", (name _entity)], "PLAIN DOWN", -1, false, true];
			}] remoteExec ['bis_fnc_call',0,false];
			systemchat format ["[ LOG ] Build menu action on respawn for '%1' has been enabled!", (name _entity)];
		};

		LM_fnc_bulletTracingModule = {
			[[],{
				waitUntil {!isNull (findDisplay 46) && alive player};
				(findDisplay 46) displayRemoveEventHandler ['KeyDown',(player getVariable ['LM_DEH_bulletTracing',-1])];
				player setVariable ['isTracing',false];
				_dehID = (findDisplay 46) displayAddEventHandler ["KeyDown", {
					if (((_this select 1) == 10) and (_this select 3)) then {
						BIS_tracedShooter = nil;
						_isTracing = player getVariable 'isTracing';
						if(not _isTracing) then {
							[player] spawn BIS_fnc_traceBullets;
							titleText ["<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + " size='2'font='PuristaBold'>BULLET TRACING ENABLED, PRESS 'CTRL+9' TO STOP</t>", "PLAIN DOWN", -1, false, true];
							player setVariable ['isTracing',true];
						} else {
							[player, 0] spawn BIS_fnc_traceBullets;
							titleText ["<t color='#FFFFFF' size='2'font='PuristaBold'>BULLET TRACING DISABLED</t>", "PLAIN DOWN", -1, false, true];	
							player setVariable ['isTracing',false];
						};
					};
				}];
				player setVariable ['LM_DEH_bulletTracing',_dehID];
				titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>Press '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">CTRL+9</t>' to enable <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">bullet tracing</t>!</t>", "PLAIN DOWN", -1, false, true];
				["IntelAdded", ["• Bullet Tracing Added! 
 
				<br /><font size='15' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Bullet Tracing
				<br />
				<br /><font size='12' color='#FFFFFF'>This feature allows you to see the exact trajectory of your munitions without the use of tracer rounds, perfect for training your aim.
				<br />
				<br /><font size='14' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">How to Enable:
				<br />
				<br /><font size='12' color='#FFFFFF'>• Press '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">CTRL+9<font size='12' color='#FFFFFF'>' to enabled Bullet Tracing!
				<br />
				<br /><font size='14' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">How to Disable:
				<br />
				<br /><font size='12' color='#FFFFFF'>• Once enabled, press '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">CTRL+9<font size='12' color='#FFFFFF'>' again to disable the tracing effect!
				"]] call BIS_fnc_showNotification;
				
				if ((player getVariable ["LM_keybindings_height_bulletTracing", 2000]) == 2000) then {
					player setVariable ["LM_keybindings_height", ((player getVariable ["LM_keybindings_height", 2000])+2000)];
					player setVariable ["LM_keybindings_height_bulletTracing", (player getVariable "LM_keybindings_height")];
					findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
						_this select 0 drawIcon [
							"\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa",
							[1,1,1,1],
							[worldSize+(500/(("Altis" call BIS_fnc_mapSize) / (worldSize))),worldSize-((player getVariable ["LM_keybindings_height_bulletTracing",2000])/(("Altis" call BIS_fnc_mapSize) / (worldSize))),0],
							0,
							0,
							0,
							"• Press 'CTRL+9' to Enable Bullet Tracing",
							1,
							(1.75 / (6.4 * worldSize / 8192 * ctrlMapScale ((findDisplay 12) displayCtrl 51)))/(("Altis" call BIS_fnc_mapSize) / (worldSize)),
							"PuristaBold",
							"right"
						]
					}];
				};
			}] remoteExec ['bis_fnc_call',0,"LM_JIP_bulletTracing"]; 
			systemchat "[ LOG ] Press 'CTRL+9' to enable bullet tracing";
		};
		
		LM_fnc_screamerSpawnModule = { 
		   private _pos = [] call MAZ_EZM_fnc_getScreenPosition; 
		   ["Screamer Spawn",[ 
			[ 
			 "SLIDER", 
			 ["Spawn Amount:","Number of entities to spawn."], 
			 [1,200,1] 
			], 
			[ 
			 "SLIDER:RADIUS", 
			 ["Spawn Radius (m):","Choose area to spawn entities in."], 
			 [1,(getnumber (configfile >> "CfgWorlds" >> worldName >> "mapSize")),100,_pos,[1,1,1,1]] 
			],
			[
				"SIDES",
				["Entity Side:","Choose the side the entity is on, useful for having certain AI fight it."],
				civilian
			]
		   ],{ 
			params ["_values","_spawnCenter","_display"]; 
			_values params ["_amount", "_radius", "_faction"]; 
			_display closeDisplay 1; 
			 
			for "_x" from 0 to ((round _amount) - 1) do { 
			 _spawnPos = [[[_spawnCenter, _radius]], []] call BIS_fnc_randomPos; 
			 [[_spawnPos, _faction],{ 
			  fnc_avoid_screamer ={ 
			   private ["_danger_close","_op_dir","_chased_units","_fct","_reldir","_avoid_poz"]; 
			   _danger_close = _this select 0; 
			   _chased_units = _danger_close nearEntities ["Man",100]; 
			   { 
				if (_x != _danger_close) then  
				{ 
				_reldir = [_x, getPos _danger_close] call BIS_fnc_dirTo; 
				_fct = [30,-30] call BIS_fnc_selectRandom; 
				if (_reldir<180) then {_op_dir=_reldir+180 +_fct} else {_op_dir=_reldir-180+_fct}; 
				_avoid_poz = [getposATL _x,30+random 10, _op_dir] call BIS_fnc_relPos; 
				_x doMove _avoid_poz; 
				_x setSkill ["commanding", 1]; 
				}; 
			   } foreach _chased_units; 
			  }; 
			   
			  fnc_teleport_screamer = { 
			   if (!hasInterface) exitWith {}; 
		 
			   _obj_eff = _this select 0; 
			   _faction = _this select 1; 
		 
			   _obj_eff say3D ["Orange_UtilityDrone_Apporach", 500]; 
		 
			   enableCamShake true; 
			   addCamShake [1, 5, 25]; 
		 
			   _blur_sonic = (([ATLToASL (getPosATL _obj_eff), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
			   _blur_sonic setParticleCircle [0, [0, 0, 0]]; 
			   _blur_sonic setParticleRandom [0, [0.25, 0.25, 0], [0.175, 0.175, 0], 0, 0.25, [0, 0, 0, 0.1], 0, 0]; 
			   _blur_sonic setParticleParams [["\A3\data_f\ParticleEffects\Universal\Refract.p3d", 1, 0, 1], "", "Billboard", 1, 2, [0, 0, 0], [0, 0, 0], 12, 12, 6, 0.002, [7, 5, 1], [[1, 1, 1, 0.5], [1, 1, 1, 1], [1, 1, 1, 1]], [0.08], 1, 0, "", "", _obj_eff]; 
			   _blur_sonic setDropInterval 0.01; 
		 
		 
			   sleep 1; 
			   
				[[_obj_eff],{
					params ["_obj_eff"];
					playSound3D  [(selectRandom ["\a3\Sounds_F\environment\ambient\quakes\earthquake1.wss","\a3\Sounds_F\environment\ambient\quakes\earthquake2.wss","\a3\Sounds_F\environment\ambient\quakes\earthquake3.wss","\a3\Sounds_F\environment\ambient\quakes\earthquake4.wss"]), _obj_eff, false];
				}] remoteExec ['bis_fnc_call',0,false];
		 
			   sleep 8; 
			   deleteVehicle _blur_sonic; 
			   enableCamShake false; 
			  }; 
			   
			  _poz_orig_sc = _this select 0; 
			  _faction = _this select 1; 
			   
			  if (!isServer) exitWith {}; 
		 
			  _entitate = (([_poz_orig_sc, 0, "B_Soldier_VR_F", _faction] call BIS_fnc_spawnVehicle) select 0);
			  [(group _entitate), true] remoteExec ["enableDynamicSimulation", 0, true];
		 
			  _entitate setSpeaker "NoVoice"; 
			  _entitate disableConversation true; 
			  _entitate setcaptive false;  
			  _entitate addRating -10000; 
		 
			  RemoveAllItems _entitate; 
			  removeUniform _entitate; 
			  Removevest _entitate; 
			  removeHeadgear _entitate; 
			  removeAllWeapons _entitate; 
			  _entitate unassignItem "NVGoggles"; 
			  _entitate removeItem "NVGoggles"; 
		 
		 
			  _entitate setBehaviour "CARELESS"; 
			  _entitate enableFatigue false; 
			  _entitate setSkill ["courage", 1]; 
			  _entitate setUnitPos "UP"; 
			  _entitate allowDamage false; 
			  _entitate addEventHandler ["HandleDamage",{_damage = 0; _damage}]; 
		 
			  [_entitate, true] remoteExec ["hideObjectGlobal",0,true]; 
		 
			  _screamer_anomally = (([AGLToASL [0,0,0], (selectRandom ["Land_AncientStatue_01_F","Land_AncientStatue_02_F"]), 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
			  [_screamer_anomally, true] remoteExec ["enableDynamicSimulation", 0, true];
			  _screamer_anomally attachTo [_entitate, [0, 0.5, 0.5],"spine3"]; 
			  _screamer_anomally setVectorDirAndUp [[0,-1,0],[0,0,1]]; 
			  _screamer_anomally setMass 1; 
			   
			  _bob1 = (([AGLToASL [0,0,0], "Sign_Sphere25cm_F", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
			  [_bob1, true] remoteExec ["enableDynamicSimulation", 0, true];
			  _bob2 = (([AGLToASL [0,0,0], "Sign_Sphere25cm_F", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
			  [_bob2, true] remoteExec ["enableDynamicSimulation", 0, true];
			  _bob3 = (([AGLToASL [0,0,0], "Sign_Sphere25cm_F", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
			  [_bob3, true] remoteExec ["enableDynamicSimulation", 0, true];
		 
			  [_bob1, false] remoteExec ["hideObjectGlobal",0,true]; 
			  [_bob2, false] remoteExec ["hideObjectGlobal",0,true]; 
			  [_bob3, false] remoteExec ["hideObjectGlobal",0,true]; 
		 
			  _bob1 attachTo [_screamer_anomally, [0, -6, 0.5]]; 
			  _bob2 attachTo [_screamer_anomally, [0, -19, 0.5]]; 
			  _bob3 attachTo [_screamer_anomally, [0, -42, 0.5]]; 
		 
			  sleep 3; 
		 
			  while {alive _entitate} do 
			  { 
			   if  (count (_entitate nearEntities ["Man",100])>1) then { 
			   _teleport = false; 
		 
			   while {!_teleport and (alive _entitate)} do 
			   { 
				private ["_press_implicit_y","_press_implicit_x"]; 
				if (count (_entitate nearEntities ["Man",150])<2) then {_teleport=true;}; 
				_pot_tgt = _entitate nearEntities ["Man",100]; 
				_poz = getpos (_pot_tgt call BIS_fnc_selectRandom); 
				 
				_wave_obj = (([AGLToASL (position _screamer_anomally), "Land_Battery_F", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
				_wave_obj setMass 10; 
				_entitate doMove _poz; 
				[_screamer_anomally,["Orange_PeriodSwitch_Pre_02",300]] remoteExec ["say3d"]; 
				sleep 5; 
				 
				_entitate lookAt _poz; 
				dostop _entitate; 
				sleep 1; 
				_units_range_1= (position _bob1) nearEntities [["LandVehicle","Man","Air"], 5]; 
				_units_range_2= (position _bob2) nearEntities [["LandVehicle","Man","Air"], 10]; 
				_units_range_3= (position _bob3) nearEntities [["LandVehicle","Man","Air"], 15];   
				sleep 1; 
		 
				_wave_obj attachTo [_screamer_anomally, [0,-1,1.5]]; 
				detach _wave_obj; 
				 
				if (alive _entitate) then { 
				 [[_wave_obj,_screamer_anomally, _faction],{ 
				  if (!hasInterface) exitWith {}; 
		 
				  _obj_eff = _this select 0; 
				  _emit = _this select 1; 
				  _faction = _this select 2; 
		 
				  _emit say3D ["scuba_breath", 500]; 
				  _obj_eff say3D ["Orange_PeriodSwitch_Post_03", 500]; 
		 
				  enableCamShake true; 
				  if ((player distance _emit)<150) then  
				  { 
				   addCamShake [1, 5, 25]; 
				  }; 
				  _blur_sonic = (([ATLToASL (getPosATL _obj_eff), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
				  _blur_sonic setParticleCircle [0, [0, 0, 0]]; 
				  _blur_sonic setParticleRandom [0, [0.25, 0.25, 0], [0.175, 0.175, 0], 0, 0.25, [0, 0, 0, 0.1], 0, 0]; 
				  _blur_sonic setParticleParams [["\A3\data_f\ParticleEffects\Universal\Refract.p3d", 1, 0, 1], "", "Billboard", 1, 0.5, [0, 0, 0], [0, 0, 0], 12, 12, 6, 0.00001, [0.2, 3, 15], [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 0.2]], [0.08], 1, 0, "", "", _obj_eff]; 
				  _blur_sonic setDropInterval 0.01; 
		 
				  _wat_vap = (([ATLToASL (getPosATL _obj_eff), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
				  _wat_vap setParticleCircle [0, [0, 0, 0]]; 
				  _wat_vap setParticleRandom [0, [0.25, 0.25, 0], [0.175, 0.175, 0], 0, 0.25, [0, 0, 0, 0.1], 0, 0]; 
				  _wat_vap setParticleParams [["\A3\data_f\cl_basic", 1, 0, 1], "", "Billboard", 1, 2, [0, 0, 0], [0, 0, 0], 12, 12, 6, 0.002, [1, 2, 3], [[1, 1, 1, 0.005], [1, 1, 1, 0.05], [1, 1, 1, 0]], [0.08], 1, 0, "", "", _obj_eff]; 
				  _wat_vap setDropInterval 0.01; 
		 
				  _bolovani_ground = (([ATLToASL (getPosATL _obj_eff), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
				  _bolovani_ground setParticleCircle [0.3, [0, 0, 0]]; 
				  _bolovani_ground setParticleRandom [0, [0.25, 0.25, 0], [0, 0, 0], 0, 0.25, [0, 0, 0, 0.1], 0, 0]; 
				  _bolovani_ground setParticleParams [["\A3\data_f\ParticleEffects\Universal\Mud.p3d", 1, 0, 1], "", "SpaceObject", 1, 10, [0, 0, 0], [0, 0, 0.1], 0, 20, 7.9, 0.075, [1, 1, 1], [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]], [0.08], 1, 0, "", "", _obj_eff,0,true,0.1,[[0,0,0,0]]]; 
				  _bolovani_ground setDropInterval 0.001; 
		 
				  sleep 0.1; 
		 
				  _dirt_dust = (([ATLToASL (getPosATL _obj_eff), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
				  _dirt_dust setParticleCircle [1, [0, 0, 0]]; 
				  _dirt_dust setParticleRandom [0, [0.25, 0.25, 0], [4, 4, 0], 0, 0.25, [0, 0, 0, 0.1], 0, 0]; 
				  _dirt_dust setParticleParams [["\A3\data_f\ParticleEffects\Universal\Mud.p3d", 1, 0, 1], "", "SpaceObject", 1, 5, [0, 0, 0], [0, 0, 5], 3, 20, 7.9, 0.075, [0.2, 0.2, 0.2], [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]], [0.08], 1, 0, "", "", _obj_eff,0,true,0.3,[[0,0,0,0]]]; 
				  _dirt_dust setDropInterval 0.005; 
		 
				  sleep 1; 
				  if ((player distance _emit)<100) then {
					[[_obj_eff],{
						params ["_obj_eff"];
						playSound3D  [(selectRandom ["\a3\Sounds_F\environment\ambient\quakes\earthquake1.wss","\a3\Sounds_F\environment\ambient\quakes\earthquake2.wss","\a3\Sounds_F\environment\ambient\quakes\earthquake3.wss","\a3\Sounds_F\environment\ambient\quakes\earthquake4.wss"]), _obj_eff, false];
					}] remoteExec ['bis_fnc_call',0,false];
				  }; 
		 
				  sleep 2; 
				  deleteVehicle _blur_sonic;
				  enableCamShake false; 
				  resetCamShake;
				  sleep 2; 
				  deleteVehicle _dirt_dust; 
				  deleteVehicle _bolovani_ground; 
				  deleteVehicle _wat_vap; 
				 }] remoteExec ['bis_fnc_call',0,true]; 
				}; 
				 
				_dir_blast = getdir _entitate; 
		 
				_al_pressure = 90; 
		 
				if (_dir_blast<=90) then { 
				 _press_implicit_x = linearConversion [0, 90,_dir_blast, 0, 1, true]; 
				 _press_implicit_y = 1-_press_implicit_x; 
				}; 
		 
				if ((_dir_blast>90)and(_dir_blast<180)) then { 
				 _dir_blast = _dir_blast-90; 
				 _press_implicit_x = linearConversion [0, 90,_dir_blast, 1, 0, true]; 
				 _press_implicit_y = _press_implicit_x-1; 
				}; 
		 
				if ((_dir_blast>180)and(_dir_blast<270)) then { 
				 _dir_blast = _dir_blast-180; 
				 _press_implicit_x = linearConversion [0, 90,_dir_blast, 0, -1, true]; 
				 _press_implicit_y = (-1*_press_implicit_x)-1; 
				}; 
		 
				if ((_dir_blast>270)and(_dir_blast<360)) then { 
				 _dir_blast = _dir_blast-270; 
				 _press_implicit_x = linearConversion [0, 90,_dir_blast, -1, 0, true]; 
				 _press_implicit_y = 1+_press_implicit_x; 
				}; 
				[_entitate] call fnc_avoid_screamer; 
				scream_on=true; 
				{_x setDammage ((getDammage _x) + 0.2)} foreach _units_range_1; 
				sleep 0.1; 
				{_x setDammage ((getDammage _x) + 0.2)} foreach _units_range_2; 
				sleep 0.1; 
				{_x setDammage ((getDammage _x) + 0.2)} foreach _units_range_3; 
				 
				sleep 1; 
				deleteVehicle _wave_obj; 
				sleep 1; 
		 
				scream_on=false; 
				_units_range = []; 
			   }; 
			  }; 
			  sleep 5; 
			  }; 
		 
			  deleteVehicle _entitate; 
			  [_screamer_anomally, _faction] call fnc_teleport_screamer; 
			  sleep 4; 
			  deleteVehicle _screamer_anomally; 
			 }] remoteExec ['bis_fnc_call',0,true]; 
			}; 
			 
			systemchat format ["[ LOG ] '%1' Screamer entities have been spawned within '%2'm of '%3'!", (round _amount), _radius, (_side select 1)]; 
		   },{ 
			params ["_values","_args","_display"]; 
			_display closeDisplay 2; 
		   },_pos] call MAZ_EZM_fnc_createDialog; 
		  };
		
		LM_fnc_effectAuroraModule = {
			params ["_entity"];
			if(isNull _entity || (isPlayer _entity)) exitWith {["Place on objects only!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			[_entity,{
				params ["_entity"];
				if (!hasInterface) exitwith {};

				_sky_obj = _entity;

				while {!isNull _sky_obj} do 
				{
					waitUntil {sleep 10; sunOrMoon==0};
					_plasma_wave = (([ATLToASL (getPosATL _sky_obj), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
					_plasma_wave setParticleCircle [0,[0,0,0]];  
					_plasma_wave setParticleRandom [5,[2500,20,10],[0,0,0],10,0,[0,0,0,0],1,0];  
					_plasma_wave setParticleParams [["\A3\data_f\kouleSvetlo",1,0,1],"","Billboard",1,180,[0,0,0],[0,0,0],13,9.999,7.9,0.005,[150,150,150,300],[[0,1,0,0],[0,1,0,1],[0,0.3,0.7,0.5],[0.9,0,0.7,1],[0.4,0,0.2,0]],[0.08],1,0,"","",_sky_obj];
					_plasma_wave setDropInterval 0.05;
					waitUntil {sleep 10; sunOrMoon==1};
					deleteVehicle _plasma_wave;
				};
			}] remoteExec ['bis_fnc_call',0,true];
			systemchat format ["[ LOG ] Aurora effect started at object position of '%1'!", (getPos _entity)];
		};
		
		LM_fnc_effectFireflyModule = {
			params ["_entity"];
			if(isNull _entity || (isPlayer _entity)) exitWith {["Place on objects only!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			[_entity,{
				params ["_entity"];
				if (!hasInterface) exitWith {};

				_firefly_nest = _entity;

				while {!isNull _firefly_nest} do 
				{
					waitUntil {sleep 1; sunOrMoon == 0};
					waitUntil {sleep 1; player distance _firefly_nest < 200};
					_firefly_nest = (([AGLToASL (getPos _firefly_nest), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
					_firefly_nest setParticleCircle [10,[0,0,0]];
					_firefly_nest setParticleRandom [10,[5,5,2],[0.2,0.2,0.5],1,0,[0,0,0,0.1],1,1];
					_firefly_nest setParticleParams [["\A3\data_f\proxies\muzzle_flash\mf_machineGun_Cheetah.p3d",1,0,1],"","SpaceObject",1,14,[0,0,5],[0,0,0.5],13,1.3,1,0,[0.01,0.01],[[1,1,1,1],[1,1,1,1]],[1],1,1,"","",_firefly_nest];
					_firefly_nest setDropInterval 0.1;
					waitUntil {sleep 1; player distance _firefly_nest > 200};
					deleteVehicle _firefly_nest;
				};
			}] remoteExec ['bis_fnc_call',0,true];
			systemchat format ["[ LOG ] Firefly effect started at object position of '%1'!", (getPos _entity)];
		};
		
		LM_fnc_effectRuptureModule = {
			params ["_entity"];
			if(isNull _entity || (isPlayer _entity)) exitWith {["Place on objects only!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			[_entity,{
				params ["_entity"];
				if (!hasInterface) exitwith {};

				_sky_obj = _entity;

				while {!isNull _sky_obj} do 
				{
					waitUntil {sleep 10; sunOrMoon==0};
					_sp_rupture = (([ATLToASL (getPosATL _sky_obj), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
					_sp_rupture setParticleCircle [0,[0,0,0]];
					_sp_rupture setParticleRandom [10,[2000,5,5],[0,0,0],0.01,1,[0,0,0,0.1],1,0];
					_sp_rupture setParticleParams [["\A3\data_f\VolumeLight", 1, 0, 1], "", "SpaceObject", 1,180,[0,0,0],[0,0,0],0,9.996,7.84,0,[20,30,20],[[0,0,0,0],[1,1,0.25,1],[0.5,1,0.5,0]],[0.08],1,0,"","",_sky_obj];
					_sp_rupture setDropInterval 0.05;
					waitUntil {sleep 10; sunOrMoon==1};
					deleteVehicle _sp_rupture;
				};
			}] remoteExec ['bis_fnc_call',0,true];
			systemchat format ["[ LOG ] Rupture effect started at object position of '%1'!", (getPos _entity)];
		};
		
		LM_fnc_effectSparksModule = {
			params ["_entity"];
			if(isNull _entity || (isPlayer _entity)) exitWith {["Place on objects only!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			[_entity,{
				params ["_entity"];
				if (!isServer) exitWith {};

				_lamp = _entity;

				while {!isNull _lamp} do 
				{
					_sclipiri = 1+ floor (random 5);
					_nr = 0;
					while {_nr<_sclipiri} do 
					{
						_pauza_intre_sclipiri = 0.1+ (random 2);
						[[_lamp,_pauza_intre_sclipiri],{
							if (!hasInterface) exitWith {};

							_lamp = _this select 0;
							_paz_emit = _this select 1;

							if (player distance _lamp < 200) then {
							_bbr = boundingBoxReal vehicle _lamp;
							_p1 = _bbr select 0;
							_p2 = _bbr select 1;
							_maxHeight = abs ((_p2 select 2) - (_p1 select 2));

							_spark_poz_rel = (_maxHeight/2)-0.45;

							_sparky_sun = ["spark1","spark3","spark11","spark2","spark22","spark5","spark4"] call BIS_fnc_selectRandom;
							_spark_type = ["white","orange"] call BIS_fnc_selectRandom;

							_drop = 0.001+(random 0.05);
							_scantei_spark = (([ATLToASL (getPosATL _lamp), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);

							if (_spark_type=="orange") then 
							{
								_scantei_spark setParticleCircle [0, [0, 0, 0]];
								_scantei_spark setParticleRandom [1, [0.1, 0.1, 0.1], [0, 0, 0], 0, 0.25, [0, 0, 0, 0], 0, 0];
								_scantei_spark setParticleParams [["\A3\data_f\proxies\muzzle_flash\muzzle_flash_silencer.p3d", 1, 0, 1], "", "SpaceObject", 1, 1+(random 2), [0, 0,_spark_poz_rel], [0, 0, 0], 0, 15, 7.9, 0, [0.3,0.3,0.05], [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 0]], [0.08], 1, 0, "", "", _lamp,0,true,0.3,[[0,0,0,0]]];
								_scantei_spark setDropInterval _drop;

								_lamp say3D [_sparky_sun, 350];
								sleep _paz_emit;
								deleteVehicle _scantei_spark;
							} else
								{
									_scantei_spark setParticleCircle [0, [0, 0, 0]];
									_scantei_spark setParticleRandom [1, [0.05, 0.05, 0.1], [5, 5, 3], 0, 0.0025, [0, 0, 0, 0], 0, 0];
									_scantei_spark setParticleParams [["\A3\data_f\proxies\muzzle_flash\muzzle_flash_silencer.p3d", 1, 0, 1], "", "SpaceObject", 1, 1+(random 2), [0, 0,_spark_poz_rel], [0, 0, 0], 0, 20, 7.9, 0, [0.3,0.3,0.05], [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 0]], [0.08], 1, 0, "", "", _lamp,0,true,0.3,[[0,0,0,0]]];
									_scantei_spark setDropInterval 0.001;	
									_lamp say3D [_sparky_sun, 350];
									sleep 0.1 +(random 0.4);
									deleteVehicle _scantei_spark;
								};
							};
						}] remoteExec ['bis_fnc_call',0,true];
						sleep _pauza_intre_sclipiri;
						_nr=_nr+1;
					};
					sleep 30 + random 60;
				};
			}] remoteExec ['bis_fnc_call',0,true];
			systemchat format ["[ LOG ] Sparks effect started at object position of '%1'!", (getPos _entity)];
		};
		
		LM_fnc_weatherMonsoonModule = { 
		   ["Monsoon Creator",[ 
			[ 
			 "SLIDER", 
			 ["Direction (Degrees):","Bearing of the storm's effects."], 
			 [0,360,90] 
			], 
			[ 
			 "SLIDER", 
			 ["Duration (Minutes):","Duration in minutes of the storm's effects."], 
			 [0,120,30] 
			],
			[
			 "TOOLBOX:ENABLED",
			 ["Camera Shake:","Control whether strong gusts will shake the camera and play extra sound."],
			 [true]
			],
			[
			 "TOOLBOX:ENABLED",
			 ["Breath Vapors:","Control whether particles for player breath will appear."],
			 [true]
			],
			[
			 "TOOLBOX:ENABLED",
			 ["Debris:","Control whether branches and small particles are seen flying around."],
			 [true]
			],
			[
			 "TOOLBOX:ENABLED",
			 ["Rain Fog:","Control whether rain fog will be generated."],
			 [true]
			],
			[
			 "TOOLBOX:ENABLED",
			 ["Rain Drops:","Control whether rain drops will be generated."],
			 [true]
			],
			[
			 "TOOLBOX:ENABLED",
			 ["Thunder:","Control whether lightning will be enabled."],
			 [true]
			],
			[ 
			 "SLIDER", 
			 ["Delay Between Thunder (Seconds):","Based on this number a delay will be generated between thunders."], 
			 [0,120,120] 
			],
			[
			 "TOOLBOX:ENABLED",
			 ["Storm Control:","Control whether the storm is enabled or disabled, useful for toggling if already active."],
			 [true]
			]
		   ],{ 
			params ["_values","_args","_display"]; 
			_values params ["_direction", "_duration", "_shake", "_breath", "_debris", "_rainFog", "_rainDrops", "_thunder", "_delay", "_control"]; 
			_display closeDisplay 1; 
			
			if (_control) then {
				[[_direction, (_duration * 60), _shake, _breath, _debris, _rainFog, _rainDrops, _thunder, _delay],{
					params ["_direction_monsoon","_duration_monsoon","_effect_on_objects","_breath_vapors","_debris_branches","_rain_fog","_rain_drop","_thunder_steroids", "_thunder_delay"];
					if (!(isNil "LM_scriptServer_weatherMonsoon" || {isNull LM_scriptServer_weatherMonsoon})) then {terminate LM_scriptServer_weatherMonsoon;};
					LM_scriptServer_weatherMonsoon = [_direction_monsoon,_duration_monsoon,_effect_on_objects,_breath_vapors,_debris_branches,_rain_fog,_rain_drop,_thunder_steroids, _thunder_delay] spawn {
						titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>The '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Monsoon</t>' approaches...</t>", "PLAIN DOWN", -1, false, true];
						
						if (!isServer) exitWith {};
						params ["_direction_monsoon","_duration_monsoon","_effect_on_objects","_breath_vapors","_debris_branches","_rain_fog","_rain_drop","_thunder_steroids", "_thunder_delay"];

						delay_thunder = _thunder_delay;
						missionNamespace setVariable ["delay_thunder", delay_thunder]; 
						al_monsoon_om = true;
						missionNamespace setVariable ["al_monsoon_om", al_monsoon_om]; 
						thunder_far_alias = ["thunder_1", "thunder_2"];
						missionNamespace setVariable ["thunder_far_alias", thunder_far_alias];

						al_foglevel		= fog;
						al_rainlevel		= rain;
						al_thundlevel	= lightnings;
						al_windlevel		= wind;
						missionNamespace setVariable ["al_foglevel", al_foglevel];
						missionNamespace setVariable ["al_rainlevel", al_rainlevel];
						missionNamespace setVariable ["al_thundlevel", al_thundlevel];
						missionNamespace setVariable ["al_windlevel", al_windlevel];

						if (!isServer) exitWith {};

						_allunits = [];
						{
							if (alive _x) then
							{
								_allunits pushBack _x;
							};
						}  foreach (if (isMultiplayer) then {playableUnits} else {switchableUnits});
						hunt_alias = selectRandom _allunits;
						missionNamespace setVariable ["hunt_alias", hunt_alias];

						sleep 0.1;

						[_duration_monsoon] spawn {
							x_duration_monsoon = _this select 0;
							sleep x_duration_monsoon;
							if ((missionNamespace getVariable "al_monsoon_om")) then {
								al_monsoon_om = false;
								missionNamespace setVariable ["al_monsoon_om", al_monsoon_om];

								60 setFog (missionNamespace getVariable "al_foglevel");
								60 setRain (missionNamespace getVariable "al_rainlevel");
								60 setLightnings (missionNamespace getVariable "al_thundlevel");
								setWind [(missionNamespace getVariable "al_windlevel") select 0, (missionNamespace getVariable "al_windlevel") select 1, true];
								forceWeatherChange;
								[[(missionNamespace getVariable "al_monsoon_om")],{
									if (!hasInterface) exitWith {};
									
									missionNamespace setVariable ["_al_monsoon_om", (_this select 0)];
									"FilmGrain" ppEffectEnable false;
									"colorCorrections" ppEffectEnable false;
									"DynamicBlur" ppEffectEnable false;
									titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>The '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Monsoon</t>' departs...</t>", "PLAIN DOWN", -1, false, true];
									enableCamShake false;
									resetCamShake;
									remoteExec ["", "LM_JIP_weatherMonsoon_debris"];
									remoteExec ["", "LM_JIP_weatherMonsoon_rainDrop"];
									remoteExec ["", "LM_JIP_weatherMonsoon_fog"];
									remoteExec ["", "LM_JIP_weatherMonsoon_effectObjects_camShake1"];
									remoteExec ["", "LM_JIP_weatherMonsoon_effectObjects_camShake2"];
									remoteExec ["", "LM_JIP_weatherMonsoon_breathVapors"];
									remoteExec ["", "LM_JIP_weatherMonsoon_init"];
									remoteExec ["", "LM_JIP_weatherMonsoon"];
								}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherMonsoon_init"];
							};
						};

						[] spawn {
							while {(missionNamespace getVariable "al_monsoon_om")} do {
								["WindBig"] remoteExec ["playSound"];
								["WindNormal"] remoteExec ["playSound"];
								["WindSmall"] remoteExec ["playSound"];
								sleep 2;
							};
						};

						60 setOvercast 1;
						60 setrain 1;
						60 setFog 1;
						60 setLightnings 1;
						forceWeatherChange;

						raport = 360/_direction_monsoon;
						raport = round (raport * (10 ^ 2)) / (10 ^ 2);

						if (raport >= 4) then {fctx = 1; fcty = 1}
							else {if (raport >= 2) then {fctx = 1; fcty = -1}
												else { if (raport >=1.33) then {fctx = -1; fcty = -1}
																		else {fctx = -1; fcty = 1};
												};
							};
						if ((raport <= 2) and (raport >= 1.33)) then {fctx = -1; fcty = -1};

						_unx	= ((_direction_monsoon - floor (_direction_monsoon/90)*90))*fctx;

						vx = floor (_unx * 0.6);
						vy = (54 - vx)*fcty;

						inx = 0;
						iny = 0;

						incr = true;
						incrx = false;
						incry = false;

						while {incr} do {
							sleep 0.01;
							if (inx < abs vx) then {inx = inx+0.1;} else {incrx = true};
							if (iny < abs vy) then {iny = iny+0.1} else {incry = true};
							if (incrx and incry) then {incr=false};
							winx = floor ((inx*fctx)/2);
							winy = floor ((iny*fcty)/2);
							setWind [winx,winy,true];
						};

						[[_debris_branches,_rain_fog, (missionNamespace getVariable "al_monsoon_om")],{
							private ["_debris_branches","_rain_fog","_leaves_p","_branches_p","_alias_local_fog","_leaves_p_drop","_leaves_p_drop"];

							if (!hasInterface) exitWith {};
							params ["_debris_branches","_rain_fog", "_al_monsoon_om"];
							
							missionNamespace setVariable ["_al_monsoon_om", _al_monsoon_om];

							while {(missionNamespace getVariable "_al_monsoon_om")} do {
								"FilmGrain" ppEffectEnable true;
								"FilmGrain" ppEffectAdjust [0.1,0.1,0.5,0.1,0.1,true];
								"FilmGrain" ppEffectCommit 0;
							
								if (_debris_branches) then {
								_leaves_p = (([AGLToASL (getpos player), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								if (vehicle player != player) then {_leaves_p attachto [vehicle player];} else {_leaves_p attachto [player];};
								_leaves_p setParticleCircle [100,[0,0,0]];
								_leaves_p setParticleRandom [25,[50,50,10],[4,4,0],2,1,[0,0,0,0.5],1,0];
								_leaves_p setParticleParams [["\A3\data_f\ParticleEffects\Hit_Leaves\Leaves_Green", 1, 1, 1], "", "SpaceObject", 1,30,[0,0,0],[50,50,0],2,10,1,0.1,[0.1+random 1,1],[[0.68,0.68,0.68,1],[0.68,0.68,0.68,1]],[1.5,1],1,0,"","",vehicle player,0,true,1,[[0,0,0,0]]];
								
								_branches_p = (([AGLToASL (getpos player), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								if (vehicle player != player) then {_branches_p attachto [vehicle player];} else {_branches_p attachto [player];};
								_branches_p setParticleRandom [0, [10, 10, 7], [4, 4, 5], 2, 0.1, [0, 0, 0, 0.5], 1, 1];
								_branches_p setParticleCircle [100, [0, 0, 0]]; 
								_branches_p setParticleParams [["\A3\data_f\ParticleEffects\Hit_Leaves\Sticks_Green", 1, 1, 1], "", "SpaceObject", 1,27,[0,0,0],[50,50,10],2,0.000001,0.0,0.1,[0.1+random 5],[[0.68,0.68,0.68,1]],[1.5,1],13,13,"","",vehicle player,0,true,1,[[0,0,0,0]]];
								};
								
								if (_rain_fog) then {
								_alias_local_fog = (([(getposasl vehicle player), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								if (vehicle player != player) then {_alias_local_fog attachto [vehicle player];} else {_alias_local_fog attachto [player];};
								_alias_local_fog setParticleCircle [50, [3, 3, 0]];
								_alias_local_fog setParticleRandom [5,[20,20,0],[1,1,0],1,1,[0,0,0,0.1],1,0];
								_alias_local_fog setParticleParams [["\A3\data_f\cl_basic", 1, 0, 1], "", "Billboard", 1,10,[0,0,0],[-1,-1,0],3,10,7.9,0.1,[10,20,50],[[1,1,1,0],[1,1,1,0.03],[1,1,1,0]],[0.08],1, 0, "", "", vehicle player];
								};
								
								if (_debris_branches) then {
									_leaves_p_drop = 5+random 5;
									_leaves_p setDropInterval _leaves_p_drop;
									_branches_p setDropInterval _leaves_p_drop;
								};
								if (_rain_fog) then {_alias_drop_fog_factor	= 0.01+random 0.05;
								_alias_local_fog setDropInterval _alias_drop_fog_factor};
								
								sleep 5 + random 10;
								if (_debris_branches) then {deletevehicle _leaves_p; deletevehicle _branches_p;};
								if (_rain_fog) then {deletevehicle _alias_local_fog};
							};

							enableCamShake false;
						}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherMonsoon_debris"];
						if(_rain_drop) then {
							[[(missionNamespace getVariable "al_monsoon_om")],{
								params ["_al_monsoon_om"];
								if (!hasInterface) exitWith {};
								missionNamespace setVariable ["_al_monsoon_om", _al_monsoon_om];
								
								if (!(missionNamespace getVariable "_al_monsoon_om")) exitwith {};
								
								poz_rain_mon = (([AGLtoASL [0,0,0], "Sign_Sphere200cm_F", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								poz_rain_mon setObjectTextureGlobal [0,"#(argb,8,8,3)color(1,0.6,0.1,0,ca)"];
								onEachFrame {poz_rain_mon setposATL positionCameraToWorld [0,2,20]};

								waitUntil {rain > 0.3};
								_rain_drops_eff = (([AGLtoASL (position player), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_rain_drops_eff setParticleCircle [10, [0, 0, 0]]; 
								_rain_drops_eff setParticleRandom [0.2,[20,20,0],[0,0,0.5],13,0.5,[0,0,0,0.5],1,0]; 
								_rain_drops_eff setParticleParams [["\A3\Data_F_Mark\ParticleEffects\Universal\waterBallonExplode_01",4,0,16,0],"","Billboard",1,0.4,[0,0,30],[0,0,1],0,18,7,0,[0.05,0.6],[[0.5,0.5,0.5,1],[0.5,0.5,0.5,1]],[1.5],1,0,"","",poz_rain_mon,0,true];  
								_rain_drops_eff setDropInterval 0.002;
								waitUntil {rain < 0.3};
								deleteVehicle _rain_drops_eff;
								waitUntil {!(missionNamespace getVariable "_al_monsoon_om")};
								deleteVehicle poz_rain_mon;
							}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherMonsoon_rainDrop"];
						};
						if(_thunder_steroids) then 
						{
							_rand_pl = [] spawn {
								if (!isServer) exitWith {};

								_allunits = [];
								{
									if (alive _x) then
									{
										_allunits pushBack _x;
									};
								}  foreach (if (isMultiplayer) then {playableUnits} else {switchableUnits});
								hunt_alias = selectRandom _allunits;
								missionNamespace setVariable ["hunt_alias", hunt_alias];
							};
							waitUntil {scriptDone _rand_pl};
							[] spawn 
							{
								_storm_clouds = true;
								while {(missionNamespace getVariable "al_monsoon_om")} do 
								{
									_delayth2 = (missionNamespace getVariable "delay_thunder") + random 10;
									poz_f_1 = (missionNamespace getVariable "hunt_alias") getRelPos [700+random 1300, 360];
									missionNamespace setVariable ["poz_f_1", poz_f_1];
									_tip_tunet = selectRandom ["lumina","sunet","lumina","sunet_lumina","lumina","lumina"];
									_numar_sclipiri = floor (1+random 3);
									_sound_tunet = selectRandom (missionNamespace getVariable "thunder_far_alias");
									[[(missionNamespace getVariable "poz_f_1"),_tip_tunet,_numar_sclipiri,_sound_tunet,_storm_clouds,al_monsoon_om],{
										params ["_alias_bolt_2","_combinatie","_alias_flicker","_sound_far_s_l","_storm_clouds","_al_monsoon_om"];
										if (!hasInterface) exitWith {};
										
										missionNamespace setVariable ["_al_monsoon_om", _al_monsoon_om];
										if (!(missionNamespace getVariable "_al_monsoon_om")) exitwith {};

										_poz_obj_fulger_s_l = (([AGLtoASL [_alias_bolt_2 select 0,_alias_bolt_2 select 1,(getPosATL player select 2)+800], "Land_HelipadEmpty_F", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);

										if ((_combinatie=="sunet_lumina") or (_combinatie=="lumina")) then 
										{
											if (sunOrMoon==0) then 
											{
												if ((_storm_clouds)and(player distance _poz_obj_fulger_s_l< 4000)) then 
												{
												_cloud = (([ATLtoASL (getPosATL _poz_obj_fulger_s_l), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
												_cloud setParticleCircle [0,[0,0,0]];
												_cloud setParticleRandom [0, [1500, 1500, 100], [0, 0, 0], 0, 0, [0, 0, 0, 0], 0, 0];
												_cloud setParticleParams[["\A3\data_f\cl_basic", 1, 0, 1],"","Billboard",1,3,[0,0,800],[0,0,50],3,10,7.9,0.2,[400,450,500],[[0.1,0.1,0.5,0],[1,1,1,0.005],[0,0,0.5,0]],[0,0],0,0,"","",_poz_obj_fulger_s_l];
												_cloud setDropInterval 0.002;
												sleep 1;
												deleteVehicle _cloud;
												};
											
											_lum_fulg_s_l = (([ATLtoASL (getPosATL _poz_obj_fulger_s_l), "#lightpoint", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
											_lum_fulg_s_l attachto [_poz_obj_fulger_s_l,[0,0,200]];
											_lum_fulg_s_l setLightDayLight true;
											_lum_fulg_s_l setLightUseFlare false;
											_lum_fulg_s_l setLightFlareSize 0;
											_lum_fulg_s_l setLightFlareMaxDistance 2000;	
											_lum_fulg_s_l setLightAmbient[0.3,0.3,0.6];
											_lum_fulg_s_l setLightColor[0.2,0.2,0.2];

											_lum_fulg_s_l setLightAttenuation [0,0,0,0,0,900];  
											_lum_fulg_s_l setLightIntensity	 200;
											_lum_fulg_s_l setLightBrightness 100+random 50;

											while {_alias_flicker>0} do 
											{
												sleep 0.1+random 0.1;
												_lum_fulg_s_l setLightBrightness 30+ random 30;
												sleep 0.2;
												_lum_fulg_s_l setLightBrightness 100+random 100;
												_alias_flicker=_alias_flicker-1;
											};
											sleep 0.2;
											_lum_fulg_s_l setLightBrightness 30;
											sleep 0.2;
											_intens_vf = 150+random 50;
											_lum_fulg_s_l setLightBrightness _intens_vf;
											sleep 0.3;

											while {_intens_vf>0} do {
												_intens_vf = _intens_vf-50;
												_lum_fulg_s_l setLightIntensity 0;
												_lum_fulg_s_l setLightBrightness _intens_vf;
												sleep 0.1;
											};	
											_lum_fulg_s_l setLightBrightness 0;
											_lum_fulg_s_l setLightIntensity  0;
											deleteVehicle _lum_fulg_s_l;
											}
										};

										_sound_delay = (player distance _poz_obj_fulger_s_l)/350;
										sleep _sound_delay;

										if ((_combinatie=="sunet") or (_combinatie=="sunet_lumina"))then {playsound _sound_far_s_l};
										sleep 31;
										deleteVehicle _poz_obj_fulger_s_l;
									}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherMonsoon_fog"];
									sleep _delayth2;
								};
							};
						};
						if (_effect_on_objects) then 
						{
							while {(missionNamespace getVariable "al_monsoon_om")} do 
							{
								[[_duration_monsoon],{
									addCamShake [0.2,(_this select 0),17];
								}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherMonsoon_effectObjects_camShake1"];
								_rand_pl = [] spawn {
									if (!isServer) exitWith {};

									_allunits = [];
									{
										if (alive _x) then
										{
											_allunits pushBack _x;
										};
									}  foreach (if (isMultiplayer) then {playableUnits} else {switchableUnits});
									hunt_alias = selectRandom _allunits;
									missionNamespace setVariable ["hunt_alias", hunt_alias];
								};
								waitUntil {scriptDone _rand_pl};
								sleep 60+random 120;
								al_nearobjects = nearestObjects [(missionNamespace getVariable "hunt_alias"),[],50];
								ar_obj_eligibl = [];
								{	
									if((_x isKindOf "LandVehicle") or (_x isKindOf "Man") or (_x isKindOf "Air")) then {ar_obj_eligibl pushBack _x}
								} foreach al_nearobjects;
								sleep 1;
								if (count ar_obj_eligibl > 0) then 
								{
									_blowobj = selectRandom ar_obj_eligibl;
									sleep 1;
									[] spawn {
										[(selectRandom ["WindBig","WindNormal","WindSmall","wind1","wind2","wind3","wind4","wind5"])] remoteExec ["playSound"];
										[(selectRandom ["WindBig","WindNormal","WindSmall","wind1","wind2","wind3","wind4","wind5"])] remoteExec ["playSound"];
										[(selectRandom ["WindBig","WindNormal","WindSmall","wind1","wind2","wind3","wind4","wind5"])] remoteExec ["playSound"];
										[[],{
											if(!hasInterface) exitWith {};

											enableCamShake true;
											addCamShake [1,27,17];
										}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherMonsoon_effectObjects_camShake2"];
									};
								};
							};
						};
						if (_breath_vapors) then {
							[[],{
								private ["_footmobile","_alias_breath"];
								if (!hasInterface) exitWith {};
								_alias_breath = (([AGLtoASL [0,0,0], "Land_HelipadEmpty_F", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_alias_breath attachto [player,[0,0.2,0],"head"];
								while {!isnull player} do 
								{
									if ((alive player)&&(eyePos player select 2 > 0)) then 
									{
										_footmobile= player nearEntities ["Man",20];
										_alias_breath attachto [selectrandom _footmobile,[0,0.1,0],"head"];
										_flow = (getposasl _alias_breath vectorFromTo (_alias_breath getRelPos [10,90])) vectorMultiply 0.5;
										drop [["\A3\data_f\ParticleEffects\Universal\Universal",16,12,8,1],"","Billboard",0.15,0.3,[0,0,0],[_flow#0,_flow#1,-0.2],3,1.2,1,0,[0.1,.2,.3],[[1,1,1,0.05],[1,1,1,0.2],[1,1,1,0.05]],[0.1],0,0.04,"","",_alias_breath,90];
										sleep 0.10;
										drop [["\A3\data_f\ParticleEffects\Universal\Universal",16,12,8,1],"","Billboard",1,1,[0,0,0],[0,0,0.1],1,1.275,1,1,[.3,.5,.7],[[1,1,1,0.1],[1,1,1,0.03],[1,1,1,0]],[0.8],1,0.5,"","",[0,0,0],90];
										sleep 0.05;
										drop [["\A3\data_f\ParticleEffects\Universal\Universal",16,12,8,1],"","Billboard",0.15,0.3,[0,0,0],[_flow#0/2,_flow#1/2,-0.2],3,1.2,1,0,[0.1,.2,.3],[[1,1,1,0.05],[1,1,1,0.1],[1,1,1,0]],[0.1],0,0.04,"","",_alias_breath,90];
										sleep 3+random 5;
									} else {sleep 5};
								};
							}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherMonsoon_breathVapors"];
						};
					};
				 }] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherMonsoon"];
				systemchat format ["[ LOG ] Monsoon weather event now starting lasting '%1' minutes!", _duration];
			 } else {
				systemchat "[ LOG ] Monsoon weather event will end in 60 seconds!";
				 [[],{
					if (!isServer) exitWith {};
					
					al_monsoon_om = false;
					missionNamespace setVariable ["al_monsoon_om", al_monsoon_om];

					60 setFog (missionNamespace getVariable "al_foglevel");
					60 setRain (missionNamespace getVariable "al_rainlevel");
					60 setLightnings (missionNamespace getVariable "al_thundlevel");
					setWind [(missionNamespace getVariable "al_windlevel") select 0, (missionNamespace getVariable "al_windlevel") select 1, true];
					forceWeatherChange;
					[[(missionNamespace getVariable "al_monsoon_om")],{
						if (!hasInterface) exitWith {};
						
						missionNamespace setVariable ["_al_monsoon_om", (_this select 0)];
						"FilmGrain" ppEffectEnable false;
						"colorCorrections" ppEffectEnable false;
						"DynamicBlur" ppEffectEnable false;
						titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>The '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Monsoon</t>' departs...</t>", "PLAIN DOWN", -1, false, true];
						enableCamShake false;
						resetCamShake;
						remoteExec ["", "LM_JIP_weatherMonsoon_debris"];
						remoteExec ["", "LM_JIP_weatherMonsoon_rainDrop"];
						remoteExec ["", "LM_JIP_weatherMonsoon_fog"];
						remoteExec ["", "LM_JIP_weatherMonsoon_effectObjects_camShake1"];
						remoteExec ["", "LM_JIP_weatherMonsoon_effectObjects_camShake2"];
						remoteExec ["", "LM_JIP_weatherMonsoon_breathVapors"];
						remoteExec ["", "LM_JIP_weatherMonsoon_init"];
						remoteExec ["", "LM_JIP_weatherMonsoon"];
					}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherMonsoon_init"];
				 }] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherMonsoon"];
				 [[],{
					sleep 60;
					if (!(isNil "LM_scriptServer_weatherMonsoon" || {isNull LM_scriptServer_weatherMonsoon})) then {terminate LM_scriptServer_weatherMonsoon;};
					remoteExec ["", "LM_JIP_weatherMonsoon_cleanUp"];
				 }] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherMonsoon_cleanUp"];
				systemchat "[ LOG ] Monsoon weather event now ended!";
			 };
		   },{ 
			params ["_values","_args","_display"]; 
			_display closeDisplay 2; 
		   },[]] call MAZ_EZM_fnc_createDialog; 
		  };
		  
		LM_fnc_weatherSnowstormModule = { 
		   ["Snowstorm Creator",[ 
			[
				"LIST",
				["Snowfall Particles:","Control whether particles for snowflakes will appear."],
				[
					[0.01,0.005,0.00125,0.0003125,0.0000390625,0],
					[
						["Sprinkle","",""],
						["Normal","",""],
						["Heavy","",""],
						["Intense","",""],
						["Blinding","",""],
						["Off","",""]
					],
					0,
					6
				]
			],
			[ 
			 "SLIDER", 
			 ["Duration (Minutes):","Duration in minutes of the storm's effects."], 
			 [0,120,30]
			],
			[ 
			 "SLIDER", 
			 ["Ambient Sounds (Seconds):","Random number will be generated based on your input to set the frequency for ambient sounds."], 
			 [0,120,120]
			],
			[
			 "TOOLBOX:ENABLED",
			 ["Breath Vapors:","Control whether particles for player breath will appear."],
			 [true]
			],
			[ 
			 "SLIDER", 
			 ["Snow Burst Interval (Seconds):","If higher than 0 burst of snow will be generated at intervals based on your value."], 
			 [0,120,120] 
			],
			[
			 "TOOLBOX:ENABLED",
			 ["Camera Shake:","Control whether strong gusts will shake the camera and play extra sound."],
			 [true]
			],
			[
			 "TOOLBOX:ENABLED",
			 ["Vanilla Fog:","Control whether the storm can change vanilla fog values."],
			 [true]
			],
			[
			 "TOOLBOX:ENABLED",
			 ["Fog Particles:","Control whether particles for fog will appear."],
			 [true]
			],
			[
			 "TOOLBOX:ENABLED",
			 ["Intensify Wind:","Control whether the storm can change vanilla wind values."],
			 [false]
			],
			[
			 "TOOLBOX:ENABLED",
			 ["Sneezing Units:","Control whether units will sneeze/caugh and will shiver when snow burst occurs."],
			 [true]
			],
			[
			 "TOOLBOX:ENABLED",
			 ["Storm Control:","Control whether the storm is enabled or disabled, useful for toggling if already active."],
			 [true]
			]
		   ],{ 
			params ["_values","_args","_display"]; 
			_values params ["_snowfall", "_duration", "_ambient", "_breath", "_bursts", "_shake", "_vfog", "_pfog", "_wind", "_sneeze", "_control"]; 
			_display closeDisplay 1; 
			
			if (_control) then {
				 [[_snowfall, (_duration * 60), _ambient, _breath, _bursts, _shake, _vfog, _pfog, _wind, _sneeze],{
					params ["_snowfall","_duration_storm","_ambient_sounds_al","_breath_vapors","_snow_burst","_effect_on_objects","_vanilla_fog","_local_fog","_intensifywind","_unitsneeze"];
					if (!(isNil "LM_scriptServer_weatherSnowstorm" || {isNull LM_scriptServer_weatherSnowstorm})) then {terminate LM_scriptServer_weatherSnowstorm;};
					LM_scriptServer_weatherSnowstorm = [_snowfall,_duration_storm,_ambient_sounds_al,_breath_vapors,_snow_burst,_effect_on_objects,_vanilla_fog,_local_fog,_intensifywind,_unitsneeze] spawn {
						titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>The '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Snowstorm</t>' approaches...</t>", "PLAIN DOWN", -1, false, true];
						
						if (!isServer) exitWith {};
						params ["_snowfall","_duration_storm","_ambient_sounds_al","_breath_vapors","_snow_burst","_effect_on_objects","_vanilla_fog","_local_fog","_intensifywind","_unitsneeze"];
						
						[] spawn {
							if (!isServer) exitWith {};
							if ((typeName (missionNamespace getVariable ["hunt_alias",""])) == "OBJECT") exitwith {};

							while {true} do 
							{
								_allunits = [];
								{if (alive _x) then {_allunits pushBack _x};}  foreach (if (isMultiplayer) then {playableUnits} else {switchableUnits});
								hunt_alias = selectRandom _allunits;
								missionNamespace setVariable ["hunt_alias", hunt_alias];
								sleep 60;
							};
						};
						sleep 2;
						if (_vanilla_fog) then {
							al_foglevel = fog;
							missionNamespace setVariable ["al_foglevel", al_foglevel];
							0 setFog (random [0, 0.5, 1]);
							0 setOvercast 0.75;
							0 setLightnings 0;
							0 setRain 0;
							forceWeatherChange;
							999999 setLightnings 0;
							999999 setRain 0;
						};
						[_duration_storm] spawn {
							params ["_duration_storm"];
							al_snowstorm_om=true;
							missionNamespace setVariable ["al_snowstorm_om", al_snowstorm_om];
							[[],{
								"colorCorrections" ppEffectEnable true;
								"colorCorrections" ppEffectAdjust [1.0, 1.0, 0.0,[1.0, 1.0, 1.0, 0.0],[1.0, 1.0, 0.9, 0.35],[0.3,0.3,0.3,-0.1]];
								"colorCorrections" ppEffectCommit 0;
							}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherSnowstorm_ppeffect"];
							sleep _duration_storm;
							if ((missionNamespace getVariable "al_snowstorm_om")) then {
								al_snowstorm_om=false;
								missionNamespace setVariable ["al_snowstorm_om", al_snowstorm_om];
								if (!isNil "al_foglevel") then {
									0 setFog (missionNamespace getVariable "al_foglevel");
								};
								forceWeatherChange;
								[[(missionNamespace getVariable "al_snowstorm_om")],{
									if (!hasInterface) exitWith {};
									
									pos_p = "deep_sea";
									missionNamespace setVariable ["pos_p", pos_p];
									
									missionNamespace setVariable ["_al_snowstorm_om", (_this select 0)];
									"FilmGrain" ppEffectEnable false;
									"colorCorrections" ppEffectEnable false;
									"DynamicBlur" ppEffectEnable false;
									titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>The '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Snowstorm</t>' departs...</t>", "PLAIN DOWN", -1, false, true];
									enableCamShake false;
									resetCamShake;
									remoteExec ["", "LM_JIP_weatherSnowstorm_ppeffect"];
									remoteExec ["", "LM_JIP_weatherSnowstorm_posFetch"];
									remoteExec ["", "LM_JIP_weatherSnowstorm_fog"];
									remoteExec ["", "LM_JIP_weatherSnowstorm_ambientSounds"];
									remoteExec ["", "LM_JIP_weatherSnowstorm_breakVapors"];
									remoteExec ["", "LM_JIP_weatherSnowstorm_sneeze"];
									remoteExec ["", "LM_JIP_weatherSnowstorm_snowFlakes"];
									remoteExec ["", "LM_JIP_weatherSnowstorm_snowBurst"];
									remoteExec ["", "LM_JIP_weatherSnowstorm_intensifyWind"];
									remoteExec ["", "LM_JIP_weatherSnowstorm_init"];
									remoteExec ["", "LM_JIP_weatherSnowstorm"];
								}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherSnowstorm_init"];
							};
						};
						sleep 5;
						
						[[(missionNamespace getVariable "al_snowstorm_om")],{
							params ["_al_snowstorm_om"];
							if (!hasInterface) exitWith {};
							
							missionNamespace setVariable ["_al_snowstorm_om", _al_snowstorm_om];
							if (!isNil {player getVariable "ck_ON"}) exitwith {};
							player setVariable ["ck_ON",true];
							player setVariable ["JIP",false];

							alias_snow = (([AGLtoASL [0,0,0], "Land_HelipadEmpty_F", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);

							KK_fnc_inHouse = 
							{
								_house = lineIntersectsSurfaces [getPosWorld _this,getPosWorld _this vectorAdd [0,0,50],_this,objNull,true,1,"GEOM","NONE"];
								if ((alive player)) then {
									if ((didJIP) && !(player getVariable "JIP")) exitWith {
										player setVariable ["JIP",true];
										pos_p = "deep_sea";
										missionNamespace setVariable ["pos_p", pos_p];
									};
									if (((_house select 0) select 3) isKindOf "house") exitWith	{
										pos_p = "in_da_house";
										missionNamespace setVariable ["pos_p", pos_p];
										cladire = ((_house select 0) select 3); 
										missionNamespace setVariable ["cladire", cladire];
										casa= typeOf ((_house select 0) select 3); 
										missionNamespace setVariable ["casa", casa];
										raza_snow = sizeof casa;
										missionNamespace setVariable ["raza_snow", raza_snow];
									};
									if ((getPosASL player select 2 < 0)&&(getPosASL player select 2 > -3)) exitWith	{
										pos_p = "under_water"; 
										missionNamespace setVariable ["pos_p", pos_p];
										alias_snow setPosASL [getPosASL player #0,getPosASL player #1,1];
										missionNamespace setVariable ["alias_snow", alias_snow];
									};
									if (getPosASL player select 2 < -3) exitWith {
										pos_p = "deep_sea";
										missionNamespace setVariable ["pos_p", pos_p];
									};
									if ((player != vehicle player)&&(getPosASL player select 2 > 0)) exitWith {
										pos_p = "player_car";
										missionNamespace setVariable ["pos_p", pos_p];
									};
									pos_p = "open";
									missionNamespace setVariable ["pos_p", pos_p];
								} else {
									pos_p = "deep_sea";
									missionNamespace setVariable ["pos_p", pos_p];
								};
							};
							while {!isNull player} do {while {(missionNamespace getVariable "_al_snowstorm_om")} do {player call KK_fnc_inHouse; sleep 0.5}; waitUntil {sleep 10; (missionNamespace getVariable "_al_snowstorm_om")}};
						}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherSnowstorm_posFetch"];
						
						if (_local_fog) then {
							[[(missionNamespace getVariable "al_snowstorm_om")],{
								params ["_al_snowstorm_om"];
								if (!hasInterface) exitWith {};
								
								missionNamespace setVariable ["_al_snowstorm_om", _al_snowstorm_om];
								waitUntil {isNil (missionNamespace getVariable "pos_p")};
								0 setOvercast 0.75;
								0 setLightnings 0;
								0 setRain 0;
								forceWeatherChange;
								999999 setLightnings 0;
								999999 setRain 0;
								while {(!isNull player) and ((missionNamespace getVariable "_al_snowstorm_om"))} do 
								{
									if ((missionNamespace getVariable "pos_p")=="open") then 
									{
										_alias_local_fog = (([AGLtoASL (getpos player), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_alias_local_fog setParticleCircle [10,[3,3,0]];
										_alias_local_fog setParticleRandom [2,[0.25,0.25,0],[1,1,0],1,1,[0,0,0,0.1],0,0];
										_alias_local_fog setParticleParams [["\A3\data_f\cl_basic",1,0,1],"","Billboard",1,8,[0,0,0],[-1,-1,0],3,10.15,7.9,0.03,[5,10,10],[[0.5,0.5,0.5,0],[0.5,0.5,0.5,0.1],[1,1,1,0]],[1],1, 0,"","",player];
										_alias_local_fog setDropInterval 0.1;
										waitUntil {(missionNamespace getVariable "pos_p")!="open"};
										deleteVehicle _alias_local_fog;
									};
									if ((missionNamespace getVariable "pos_p")=="player_car") then 
									{
										_alias_local_fog = (([AGLtoASL (getpos player), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_alias_local_fog setParticleCircle [30,[3,3,0]];
										_alias_local_fog setParticleRandom [0,[0.25,0.25,0],[1,1,0],1,1,[0,0,0,0.1],0,0];
										_alias_local_fog setParticleParams [["\A3\data_f\cl_basic",1,0,1],"","Billboard",1,4,[0,0,0],[-1,-1,0],3,10.15,7.9,0.03,[5,10,20],[[0.5,0.5,0.5,0],[0.5,0.5,0.5,0.1],[1,1,1,0]],[1],1, 0,"","",player];
										_alias_local_fog setDropInterval 0.1;		
										waitUntil {(missionNamespace getVariable "pos_p")!="player_car"};
										deleteVehicle _alias_local_fog;
									};
									if ((missionNamespace getVariable "pos_p")=="in_da_house") then  
									{
										_alias_local_fog = (([AGLtoASL (getpos player), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_alias_local_fog setParticleCircle [(missionNamespace getVariable "raza_snow"),[3,3,0]];
										_alias_local_fog setParticleRandom [0,[0.25,0.25,0],[1,1,0],1,1,[0,0,0,0.1],0,0];
										_alias_local_fog setParticleParams [["\A3\data_f\cl_basic",1,0,1],"","Billboard",1,4,[0,0,0],[-1,-1,0],3,10.15,7.9,0.03,[5,10,20],[[0.5,0.5,0.5,0],[0.5,0.5,0.5,0.1],[1,1,1,0]],[1],1, 0,"","",player];
										_alias_local_fog setDropInterval 0.1;		
										waitUntil {(missionNamespace getVariable "pos_p")!="in_da_house"};
										deleteVehicle _alias_local_fog;
									};	
									if ((missionNamespace getVariable "pos_p")=="under_water") then {waitUntil {sleep 5; (missionNamespace getVariable "pos_p")!="under_water"}};
									if ((missionNamespace getVariable "pos_p")=="deep_sea") then {waitUntil {sleep 5; (missionNamespace getVariable "pos_p")!="deep_sea"}};
								};
							}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherSnowstorm_fog"];
						};
						
						if (_ambient_sounds_al>0) then {
							[[_ambient_sounds_al, (missionNamespace getVariable "al_snowstorm_om"), (missionNamespace getVariable "hunt_alias")],{
								params ["_ambient_sounds_al", "_al_snowstorm_om", "_hunt_alias"];
								
								missionNamespace setVariable ["_al_snowstorm_om", _al_snowstorm_om];

								lup_01 = "A3\Sounds_F\environment\animals\dog1.wss";
								lup_02 = "A3\Sounds_F\environment\animals\hen1.wss";
								lup_03 = "A3\Sounds_F\environment\animals\scared_animal7.wss";

								while {(missionNamespace getVariable "_al_snowstorm_om")} do 
								{
									sleep 120+random _ambient_sounds_al;
									if ((missionNamespace getVariable "pos_p") in ["open","in_da_house","player_car"]) then 
									{
										_natura = selectRandom [lup_01,lup_02,lup_03];
										_relpos = _hunt_alias getRelPos [100+random 200,360];
										playSound3D [_natura,"",false,[_relpos#0,_relpos#1,50+random 100],0.2,0.7,2000];
									};
								};
							}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherSnowstorm_ambientSounds"];
						};
						
						if (_breath_vapors) then {
							[[],{
								private ["_footmobile","_alias_breath"];
								if (!hasInterface) exitWith {};
								_alias_breath = (([AGLtoASL [0,0,0], "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_alias_breath attachto [player,[0,0.2,0],"head"];
								while {!isnull player} do 
								{
									if ((alive player)&&(eyePos player select 2 > 0)) then 
									{
										_footmobile= player nearEntities ["Man",20];
										_alias_breath attachto [selectrandom _footmobile,[0,0.1,0],"head"];
										_flow = (getposasl _alias_breath vectorFromTo (_alias_breath getRelPos [10,90])) vectorMultiply 0.5;
										drop [["\A3\data_f\ParticleEffects\Universal\Universal",16,12,8,1],"","Billboard",0.15,0.3,[0,0,0],[_flow#0,_flow#1,-0.2],3,1.2,1,0,[0.1,.2,.3],[[1,1,1,0.05],[1,1,1,0.2],[1,1,1,0.05]],[0.1],0,0.04,"","",_alias_breath,90];
										sleep 0.10;
										drop [["\A3\data_f\ParticleEffects\Universal\Universal",16,12,8,1],"","Billboard",1,1,[0,0,0],[0,0,0.1],1,1.275,1,1,[.3,.5,.7],[[1,1,1,0.1],[1,1,1,0.03],[1,1,1,0]],[0.8],1,0.5,"","",[0,0,0],90];
										sleep 0.05;
										drop [["\A3\data_f\ParticleEffects\Universal\Universal",16,12,8,1],"","Billboard",0.15,0.3,[0,0,0],[_flow#0/2,_flow#1/2,-0.2],3,1.2,1,0,[0.1,.2,.3],[[1,1,1,0.05],[1,1,1,0.1],[1,1,1,0]],[0.1],0,0.04,"","",_alias_breath,90];
										sleep 3+random 5;
									} else {sleep 5};
								};
							}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherSnowstorm_breakVapors"];
						};
						
						if (_unitsneeze) then {
							[[_effect_on_objects],{
								if (!hasInterface) exitWith {};
								private ["_sik_unit"];
								params ["_effect_on_objects"];
								sneeze = true;
								while {sneeze} do {
									if ((missionNamespace getVariable "pos_p") in ["open","in_da_house","player_car"]) then 
									{
										enableCamShake true;
										if (eyePos player select 2 > 0) then {_tuse = selectRandom ["WoundedGuyA_01", "WoundedGuyA_02", "WoundedGuyA_03", "WoundedGuyA_04", "WoundedGuyA_05", "WoundedGuyA_06", "WoundedGuyA_07", "WoundedGuyA_08", "WoundedGuyB_01", "WoundedGuyB_02", "WoundedGuyB_03", "WoundedGuyB_04", "WoundedGuyB_05", "WoundedGuyB_06", "WoundedGuyB_07", "WoundedGuyB_08", "WoundedGuyC_01", "WoundedGuyC_02", "WoundedGuyC_03", "WoundedGuyC_04", "WoundedGuyC_05"];_sik_unit=selectrandom allUnits; [_sik_unit,[_tuse,100]] remoteExec ["say3d",0]};
										if (_effect_on_objects) then {
											if (player == _sik_unit) then {addCamShake [5,1,7]};
										};
									};
									sleep 120+random 300;
								};	
							}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherSnowstorm_sneeze"];
						};
						
						if (!(_snowfall == 0)) then {
							[[_snowfall, (missionNamespace getVariable "al_snowstorm_om")],{
								if (!hasInterface) exitWith {};
								params ["_snowfall", "_al_snowstorm_om"];
								
								missionNamespace setVariable ["_al_snowstorm_om", _al_snowstorm_om];

								waitUntil {isNil (missionNamespace getVariable "pos_p")};
								while {(missionNamespace getVariable "_al_snowstorm_om")} do 
								{
									if ((missionNamespace getVariable "pos_p")=="open") then 
									{
										_fulg_nea = (([ATLtoASL (getposATL player), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_fulg_nea setParticleCircle [0,[0,0,0]];
										_fulg_nea setParticleRandom [0,[20,20,9],[0,0,0],0,0.1,[0,0,0,0.1],0,0];
										_fulg_nea setParticleParams [["\A3\data_f\ParticleEffects\Universal\Universal.p3d",16,12,8,1],"","Billboard",1,7,[0,0,10],[0,0,0],3,1.7,1,1,[0.1],[[1,1,1,1]],[1],0.3,1,"","",player];
										_fulg_nea setDropInterval _snowfall;
										waitUntil {(missionNamespace getVariable "pos_p")!="open"};
										deleteVehicle _fulg_nea;
									};
									if ((missionNamespace getVariable "pos_p")=="player_car") then 
									{
										_fulg_nea = (([ATLtoASL (getposATL player), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_fulg_nea setParticleCircle [0,[0,0,0]];
										_fulg_nea setParticleRandom [0,[20,20,9],[0,0,0],0,0.1,[0,0,0,0.1],0,0];
										_fulg_nea setParticleParams [["\A3\data_f\ParticleEffects\Universal\Universal.p3d",16,12,8,1],"","Billboard",1,7,[0,0,10],[0,0,0],3,1.7,1,1,[0.1],[[1,1,1,1]],[1],0.3,1,"","",player];
										_fulg_nea setDropInterval _snowfall;
										waitUntil {(missionNamespace getVariable "pos_p")!="player_car"};
										deleteVehicle _fulg_nea;	
									};
									if ((missionNamespace getVariable "pos_p")=="under_water") then  
									{
										_fulg_nea = (([(getposASL (missionNamespace getVariable "alias_snow")), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_fulg_nea setParticleCircle [0,[0,0,0]];
										_fulg_nea setParticleRandom [0,[25,25,0],[0,0,0],0,0.1,[0,0,0,0.1],1,1];
										_fulg_nea setParticleParams [["\A3\data_f\ParticleEffects\Universal\Universal.p3d",16,12,8,1],"","Billboard",1,4,[0,0,15],[0,0,0],3,2,1,0.7,[0.1],[[1,1,1,1]],[1],1,1,"","",(missionNamespace getVariable "alias_snow")];
										_fulg_nea setDropInterval _snowfall;
										waitUntil {(missionNamespace getVariable "pos_p")!="under_water"};
										deleteVehicle _fulg_nea;
									};
									if ((missionNamespace getVariable "pos_p")=="deep_sea") then {waitUntil {(missionNamespace getVariable "pos_p")!="deep_sea"}};
									if ((missionNamespace getVariable "pos_p")=="in_da_house") then
									{
										_fulg_nea_1 = (([ATLtoASL (getposATL (missionNamespace getVariable "cladire")), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_fulg_nea_1 setParticleCircle [(missionNamespace getVariable "raza_snow"),[0,0,0]];
										_fulg_nea_1 setParticleRandom [0,[5,5,0],[0,0,0],0,0,[0,0,0,0],0,0.5];
										_fulg_nea_1 setParticleParams [["\A3\data_f\ParticleEffects\Universal\Universal.p3d",16,12,8,1],"","Billboard",1,0.2,[0,0,1],[0,0,0],3,2,1,0,[0.1],[[1,1,1,1]],[1],0,1,"","",(missionNamespace getVariable "cladire"),0,true];
										_fulg_nea_1 setDropInterval (_snowfall*2);		
										waitUntil {(missionNamespace getVariable "pos_p")!="in_da_house"};
										deleteVehicle _fulg_nea_1;
									};	
								};
							}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherSnowstorm_snowFlakes"];
						};
						
						if (_snow_burst>0) then {
							[_effect_on_objects] spawn {
								params ["_effect_on_objects"];
								while {(missionNamespace getVariable "al_snowstorm_om")} do 
								{
									snow_gust=selectrandom [["WindBig",12],["wind1",8.5],["wind2",17],["wind3",13],["wind4",16],["wind5",13.5]];
									missionNamespace setVariable ["snow_gust", snow_gust];
									vit_x = (selectrandom [1,-1])*round(2+random 5); 
									vit_y = (selectrandom [1,-1])*round(2+random 5);
									missionNamespace setVariable ["vit_x", vit_x];
									missionNamespace setVariable ["vit_y", vit_y];
									sleep 60+random 120;
								};
							};
							interval_burst = _snow_burst;
							missionNamespace setVariable ["interval_burst", interval_burst];
							sleep 10; 
							
							[[_unitsneeze, (missionNamespace getVariable "al_snowstorm_om"), (missionNamespace getVariable "hunt_alias"), (missionNamespace getVariable "snow_gust"), (missionNamespace getVariable "vit_x"), (missionNamespace getVariable "vit_y") ,(missionNamespace getVariable "interval_burst"),_effect_on_objects],{
								if (!hasInterface) exitWith {};
								params ["_unit_cold", "_al_snowstorm_om", "_hunt_alias", "_snow_gust", "_vit_x", "_vit_y", "_interval_burst","_effect_on_objects"];
								
								missionNamespace setVariable ["_al_snowstorm_om", _al_snowstorm_om];
								if (_unit_cold) then {
									player_act_cold = true;
									missionNamespace setVariable ["player_act_cold", player_act_cold];
								} else {
									player_act_cold = false;
									missionNamespace setVariable ["player_act_cold", player_act_cold];
								};
								while {(missionNamespace getVariable "_al_snowstorm_om")} do 
								{
									if (((missionNamespace getVariable "pos_p")=="open")&&(player == _hunt_alias)) then 
									{
										rafala = true;
										missionNamespace setVariable ["rafala", rafala];
										_pozitie_x = (selectrandom [1,-1])*round(random 50); _pozitie_y = (selectrandom [1,-1])*round(random 50);
										
										[_pozitie_x,_pozitie_y,_vit_x,_vit_y,_snow_gust,_hunt_alias,_effect_on_objects] spawn {
											if ((!hasInterface)or((missionNamespace getVariable "pos_p")!="open")) exitWith {};
											params ["_pozitie_x","_pozitie_y","_vit_x","_vit_y","_snow_gust","_hunt_alias","_effect_on_objects"];

											drop [["\A3\data_f\cl_basic",1,0,1],"","Billboard",0.5,(_snow_gust#1)/2,[_pozitie_x,_pozitie_y,0],[_vit_x,_vit_y,0],13,1.3,1,0.1,[1,10,15],[[1,1,1,0],[1,1,1,.1],[1,1,1,0]],[1],1,0,"","",_hunt_alias,0,true,0.1];
											sleep 0.4;
											_snow_fog = (([ATLtoASL (getposATL player), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
											_snow_fog setParticleCircle [5+random 10,[0,0,0]];
											_snow_fog setParticleRandom [1,[1,1,0.1],[0,0,0],0,0.01,[0,0,0,0.01],1,1];
											_snow_fog setParticleParams [["\A3\data_f\cl_basic",1,0,1],"","Billboard",1,5,[0,0,0],[_vit_x,_vit_y,0],15,10,8,0.07,[1,5,10],[[1,1,1,0.01],[1,1,1,0.02],[1,1,1,0]],[1],1,0,"","",player];
											_snow_fog setDropInterval 0.01;
											[_snow_fog] spawn {params["_snow_fog"];sleep 0.4;deleteVehicle _snow_fog};

											_snow_cloud = (([ATLtoASL (getposATL player), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
											_snow_cloud setParticleCircle [3,[0,0,0]];
											_snow_cloud setParticleRandom [0.1,[1,1,0.1],[0,0,0],0,0.01,[0,0,0,0.01],1,0];
											_snow_cloud setParticleParams [["\A3\data_f\ParticleEffects\Universal\Universal",16,13,6,0],"","Billboard",1,2,[0,0,0],[_vit_x,_vit_y,0],7+random 33,1.2,1,0.02+random 0.09,[1,1,5,8],[[1,1,1,0],[1,1,1,0],[1,1,1,0.1],[1,1,1,0]],[1000],1,0,"","",player];
											_snow_cloud setDropInterval 0.1;
											[_snow_cloud] spawn {params["_snow_cloud"];sleep 1;deleteVehicle _snow_cloud};
											sleep 0.2;
											playSound "WindBig";
											playSound "WindNormal";
											playSound "WindSmall";

											_fulgi = (([ATLtoASL (getposATL player), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
											_fulgi setParticleCircle [0,[0,0,0]];
											_fulgi setParticleRandom [0,[10,10,5],[0,0,0],0,0.1,[0,0,0,0.1],0,0];
											_fulgi setParticleParams [["\A3\data_f\ParticleEffects\Universal\Universal.p3d",16,12,8,1],"","Billboard",1,5,[0,0,7],[_vit_x,_vit_y,0],0,1.7,1,0,[0.1],[[1,1,1,1]],[1],0,0,"","",player];
											_fulgi setDropInterval 0.01;

											_snow_flakes = (([ATLtoASL (getposATL player), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
											_snow_flakes setParticleCircle [0,[0,0,0]];
											_snow_flakes setParticleRandom [0,[5,5,9],[0,0,0],0,0.1,[0,0,0,0.1],0,0];
											_snow_flakes setParticleParams [["\A3\data_f\ParticleEffects\Universal\Universal.p3d",16,12,8,1],"","Billboard",1,3,[0,0,10],[_vit_x*2,_vit_y*2,0],3,1.7,1,0,[0.2],[[1,1,1,1]],[1],0.3,1,"","",player];
											_snow_flakes setDropInterval 0.01;

											if ((missionNamespace getVariable "player_act_cold")) then {
												enableCamShake true;
												
												0 = [] spawn
												{
													"FilmGrain" ppEffectEnable true;
													for "_i" from 0 to 0.1 step 0.01 do
													{
														"FilmGrain" ppEffectAdjust [_i,1,5,0.5,0.3,true];
														sleep 0.3;
														"FilmGrain" ppEffectCommit 0;
													};
													sleep 5;
													_i=0.1;
													while {_i>0} do 
													{
														_i = _i-0.01;
														"FilmGrain" ppEffectAdjust [_i,1,5,0.5,0.3,true];
														sleep 0.5;		
														"FilmGrain" ppEffectCommit 0;
													};
													"FilmGrain" ppEffectEnable false;
												};
												if (goggles player=="") then 
												{
													0 = ["RadialBlur",100,[0.11,1,0.33,0.16]] spawn
													{
														params ["_name", "_priority", "_effect", "_handle"];
														sleep 2;
														call BIS_fnc_fatigueEffect;
														"RadialBlur" ppEffectEnable true;
														"RadialBlur" ppEffectAdjust _effect;
														"RadialBlur" ppEffectCommit 4;
														waitUntil {ppEffectCommitted "RadialBlur"};
														call BIS_fnc_fatigueEffect;
														_i = 0.11;
														sleep 2;
														while {_i>0} do 
														{
															_i = _i-0.01;
															"RadialBlur" ppEffectAdjust [_i,1,0.33,0.16];
															sleep 0.5;		
															"RadialBlur" ppEffectCommit 0;
														};
														"RadialBlur" ppEffectEnable false;
													};
												};
												
												sleep 1;
												_tremurici = selectRandom ["WoundedGuyA_02","WoundedGuyB_02","NoSound","WoundedGuyC_02","WoundedGuyB_03","WoundedGuyB_04"]; 
												playSound _tremurici;
												if (_effect_on_objects) then {
													addCamShake [0.5,(_snow_gust#1)*2,25];
												};
											};
											sleep (_snow_gust#1)/2;
											deleteVehicle _snow_flakes;	
											deleteVehicle _fulgi;
										};
										
										sleep (_snow_gust#1);
										rafala = false;
										missionNamespace setVariable ["rafala", rafala];
									};
									sleep 20+random _interval_burst;
								};
							}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherSnowstorm_snowBurst"];
						};
						
						if (_intensifywind) then {
							[[(missionNamespace getVariable "al_snowstorm_om")],{
								params ["_al_snowstorm_om"];
								if (!hasInterface) exitWith {};
								
								missionNamespace setVariable ["_al_snowstorm_om", _al_snowstorm_om];
								while {(missionNamespace getVariable "_al_snowstorm_om")} do {
									["WindBig"] remoteExec ["playSound"];
									["WindNormal"] remoteExec ["playSound"];
									["WindSmall"] remoteExec ["playSound"];
									sleep 2;
								};
							}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherSnowstorm_intensifyWind"];
							
							al_windlevel	= wind;	
							for "_i" from 1 to 5 step 0.1 do {
								setWind [(al_windlevel#0)*_i,(al_windlevel#1)*_i,true]; 
								sleep 4;
							};
							waitUntil {sleep 60; !(missionNamespace getVariable "al_snowstorm_om")};
							al_windlevel	= wind;	
							for "_i" from 1 to 5 step 0.1 do {
								setWind [(al_windlevel#0)/_i,(al_windlevel#1)/_i,true]; 
								sleep 4
							};
						};
					};
				}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherSnowstorm"];
				systemchat format ["[ LOG ] Snowstorm weather event now starting lasting '%1' minutes!", _duration];
				} else {
					systemchat "[ LOG ] Snowstorm weather event will end in 60 seconds!";
					[[],{
						if (!isServer) exitWith {};
						
						al_snowstorm_om=false;
						missionNamespace setVariable ["al_snowstorm_om", al_snowstorm_om];
						if (!isNil "al_foglevel") then {
							0 setFog (missionNamespace getVariable "al_foglevel");
						};
						forceWeatherChange;
						[[(missionNamespace getVariable "al_snowstorm_om")],{
							if (!hasInterface) exitWith {};
							
							pos_p = "deep_sea";
							missionNamespace setVariable ["pos_p", pos_p];
							
							missionNamespace setVariable ["_al_snowstorm_om", (_this select 0)];
							"FilmGrain" ppEffectEnable false;
							"colorCorrections" ppEffectEnable false;
							"DynamicBlur" ppEffectEnable false;
							titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>The '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Snowstorm</t>' departs...</t>", "PLAIN DOWN", -1, false, true];
							enableCamShake false;
							resetCamShake;
							remoteExec ["", "LM_JIP_weatherSnowstorm_ppeffect"];
							remoteExec ["", "LM_JIP_weatherSnowstorm_posFetch"];
							remoteExec ["", "LM_JIP_weatherSnowstorm_fog"];
							remoteExec ["", "LM_JIP_weatherSnowstorm_ambientSounds"];
							remoteExec ["", "LM_JIP_weatherSnowstorm_breakVapors"];
							remoteExec ["", "LM_JIP_weatherSnowstorm_sneeze"];
							remoteExec ["", "LM_JIP_weatherSnowstorm_snowFlakes"];
							remoteExec ["", "LM_JIP_weatherSnowstorm_snowBurst"];
							remoteExec ["", "LM_JIP_weatherSnowstorm_intensifyWind"];
							remoteExec ["", "LM_JIP_weatherSnowstorm_init"];
							remoteExec ["", "LM_JIP_weatherSnowstorm"];
					}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherSnowstorm_init"];
					[[],{
						sleep 60;
						if (!(isNil "LM_scriptServer_weatherSnowstorm" || {isNull LM_scriptServer_weatherSnowstorm})) then {terminate LM_scriptServer_weatherSnowstorm;};
						remoteExec ["", "LM_JIP_weatherSnowstorm_cleanUp"];
					}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherSnowstorm_cleanUp"];
				}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherSnowstorm"];
				systemchat "[ LOG ] Snowstorm weather event now ended!";
			 };
		   },{ 
			params ["_values","_args","_display"]; 
			_display closeDisplay 2; 
		   },[]] call MAZ_EZM_fnc_createDialog; 
		};
		
		LM_fnc_weatherSandstormModule = {
		   ["Sandstorm Creator",[
			[ 
			 "SLIDER", 
			 ["Direction (Degrees):","Bearing of the storm's effects."], 
			 [0,360,90] 
			], 
			[ 
			 "SLIDER", 
			 ["Duration (Minutes):","Duration in minutes of the storm's effects."], 
			 [0,120,30] 
			],
			[
			 "TOOLBOX:ENABLED",
			 ["Camera Shake:","Control whether the storm will consistently shake the camera and play extra sounds on gusts."],
			 [true]
			],
			[
			 "TOOLBOX:ENABLED",
			 ["Wall of Dust:","Control whether branches and small particles are seen flying around."],
			 [true]
			],
			[
			 "TOOLBOX:ENABLED",
			 ["Lethal Wall:","Control whether rain fog will be generated."],
			 [true]
			],
			[ 
			 "SLIDER", 
			 ["Visbility:","Based on this number more or less fog particles will be generated."], 
			 [0,1,0.5] 
			],
			[
			 "TOOLBOX:ENABLED",
			 ["Dust Particles:","Control whether dust particles will be generated."],
			 [true]
			],
			[
			 "TOOLBOX:ENABLED",
			 ["Storm Control:","Control whether the storm is enabled or disabled, useful for toggling if already active."],
			 [true]
			]
		   ],{ 
			params ["_values","_args","_display"]; 
			_values params ["_direction", "_duration", "_shake", "_wall", "_lethality", "_visibility", "_dustControl","_control"]; 
			_display closeDisplay 1; 
			
			if (_control) then {
				[[_direction, (_duration * 60), _shake, _wall, _lethality, _visibility,_dustControl],{
					if (!(isNil "LM_scriptServer_weatherSandstorm" || {isNull LM_scriptServer_weatherSandstorm})) then {terminate LM_scriptServer_weatherSandstorm;};
					LM_scriptServer_weatherSandstorm = [(_this select 0),(_this select 1),(_this select 2),(_this select 3),(_this select 4),(_this select 5),(_this select 6)] spawn {
						titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>The '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Sandstorm</t>' approaches...</t>", "PLAIN DOWN", -1, false, true];
						
						private ["_vizibility","_stormsource","_x_dev","_y_dev"];

						if (!isServer) exitWith {};

						_direction_duststorm	= _this select 0;
						_duration_duststorm		= _this select 1;
						_effect_on_objects		= _this select 2;
						_dust_wall				= _this select 3;
						_lethal_wall			= _this select 4;
						_vizibility				= _this select 5;
						_dustControl			= _this select 6;

						al_duststorm_on = true;
						missionNamespace setVariable ["al_duststorm_on", al_duststorm_on];

						al_foglevel		= fog;
						al_rainlevel	= rain;
						al_thundlevel	= lightnings;
						al_windlevel	= wind;
						al_overforecast	= overcastForecast;
						missionNamespace setVariable ["al_foglevel", al_foglevel];
						missionNamespace setVariable ["al_rainlevel", al_rainlevel];
						missionNamespace setVariable ["al_thundlevel", al_thundlevel];
						missionNamespace setVariable ["al_windlevel", al_windlevel];
						missionNamespace setVariable ["al_overforecast", al_overforecast];
						sleep 0.1;

						[_duration_duststorm] spawn {
							x_duration_storm = _this select 0;
							sleep x_duration_storm;
							if ((missionNamespace getVariable "al_duststorm_on")) then {
								al_duststorm_on = false;
								missionNamespace setVariable ["al_duststorm_on", al_duststorm_on];

								60 setFog al_foglevel;
								60 setRain al_rainlevel;
								60 setLightnings al_thundlevel;
								180 setOvercast al_overforecast;
								setWind [al_windlevel select 0, al_windlevel select 1, true];
								forceWeatherChange;
								[[(missionNamespace getVariable "al_duststorm_on")],{
									if (!hasInterface) exitWith {};
									
									deleteVehicle (missionNamespace getVariable "_fum_negru");
									
									missionNamespace setVariable ["_al_duststorm_on", (_this select 0)];
									"FilmGrain" ppEffectEnable false;
									"colorCorrections" ppEffectEnable false;
									"DynamicBlur" ppEffectEnable false;
									titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>The '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Sandstorm</t>' departs...</t>", "PLAIN DOWN", -1, false, true];
									enableCamShake false;
									resetCamShake;
									remoteExec ["", "LM_JIP_weatherSandstorm_particles"];
									remoteExec ["", "LM_JIP_weatherSandstorm_dustWall"];
									remoteExec ["", "LM_JIP_weatherSandstorm_effectObjects_camShake1"];
									remoteExec ["", "LM_JIP_weatherSandstorm_init"];
									remoteExec ["", "LM_JIP_weatherSandstorm"];
								}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherSandstorm_init"];
							};
						};

						[] spawn {
							while {(missionNamespace getVariable "al_duststorm_on")} do {
								["WindBig"] remoteExec ["playSound"];
								["WindNormal"] remoteExec ["playSound"];
								["WindSmall"] remoteExec ["playSound"];
								sleep 2;
							};
						};

						[_vizibility] spawn {
							private ["_vizibility"];
							_vizibility = _this select 0;
							_ifog=0;
							while {_ifog < _vizibility} do {
								_ifog=_ifog+0.001; 0 setFog _ifog; sleep 0.01;
							};
						};

						[[(missionNamespace getVariable "al_duststorm_on"),_effect_on_objects,_dustControl],{
							params ["_al_duststorm_on",'_effect_on_objects','_dustControl'];
							if (!hasInterface) exitWith {};
							
							missionNamespace setVariable ["_al_duststorm_on", _al_duststorm_on];

							[_effect_on_objects] spawn {
								if ((_this select 0)) then {
									while {(missionNamespace getVariable "_al_duststorm_on")} do {
										enableCamShake true;
										addCamShake [random [0.25, 0.625, 1],random [5, 10, 15],random [17, 58.5, 100]];
										sleep 60+random 120;
									};
								};
							};

							[] spawn {
								grain_sand = 0;
								while {grain_sand<2} do {
									"FilmGrain" ppEffectEnable true;
									"FilmGrain" ppEffectAdjust [0.1,0.1,grain_sand,0.1,0.1,true];
									"FilmGrain" ppEffectCommit 0;
									grain_sand = grain_sand + 0.1;
									sleep 0.5;
								};
							};

							[] spawn {
								sleep 5;
								col_fct =1;
								while {col_fct>0.86} do {
									"colorCorrections" ppEffectAdjust[col_fct, 1, 0.01, [-0.14, 0.17, 0.33, col_fct-1],[col_fct, -0.4, col_fct, col_fct],[-0.57, col_fct, -1.2, col_fct]];
									"colorCorrections" ppEffectCommit 0;
									"colorCorrections" ppEffectEnable true;
									col_fct = col_fct-0.001;
									sleep 0.1;
								};
							};

							sleep 15;

							while {(missionNamespace getVariable "_al_duststorm_on")} do {
								_leaves_p = (([AGLtoASL (getpos player), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								if (vehicle player != player) then {_leaves_p attachto [vehicle player];} else {_leaves_p attachto [player];};
								_leaves_p setParticleCircle [100,[0,0,0]];
								_leaves_p setParticleRandom [25,[50,50,10],[4,4,0],2,1,[0,0,0,0.5],1,0];
								_leaves_p setParticleParams [["\A3\data_f\ParticleEffects\Hit_Leaves\Leaves_Green", 1, 1, 1], "", "SpaceObject", 1,30,[0,0,0],[50,50,0],2,10,1,0.1,[0.1+random 1,1],[[0.68,0.68,0.68,1],[0.68,0.68,0.68,1]],[1.5,1],1,0,"","",vehicle player,0,true,1,[[0,0,0,0]]];
								
								_branches_p = (([AGLtoASL (getpos player), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								if (vehicle player != player) then {_branches_p attachto [vehicle player];} else {_branches_p attachto [player];};
								_branches_p setParticleRandom [0, [10, 10, 7], [4, 4, 5], 2, 0.1, [0, 0, 0, 0.5], 1, 1];
								_branches_p setParticleCircle [100, [0, 0, 0]]; 
								_branches_p setParticleParams [["\A3\data_f\ParticleEffects\Hit_Leaves\Sticks_Green", 1, 1, 1], "", "SpaceObject", 1,27,[0,0,0],[50,50,10],2,0.000001,0.0,0.1,[0.1+random 5],[[0.68,0.68,0.68,1]],[1.5,1],13,13,"","",vehicle player,0,true,1,[[0,0,0,0]]];
								
								_alias_local_fog = (([AGLtoASL (getpos player), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								if (_dustControl) then {
									if (vehicle player != player) then {_alias_local_fog attachto [vehicle player];} else {_alias_local_fog attachto [player];};
									_alias_local_fog setParticleCircle [10, [3, 3, 0]];
									_alias_local_fog setParticleRandom [10, [0.25, 0.25, 0], [1, 1, 0], 1, 1, [0, 0, 0, 0.1], 0, 0];
									_alias_local_fog setParticleParams [["\A3\data_f\cl_basic", 1, 0, 1], "", "Billboard", 1, 12, [0, 0, 0], [-1, -1, 0], 3, 10.15, 7.9, 0.01, [10, 10, 20], [[0.65, 0.5, 0.5, 0], [0.65, 0.6, 0.5, 0.3], [1, 0.95, 0.8, 0]], [0.08], 1, 0, "", "", vehicle player,0,true];
								};
								
								
								_leaves_p_drop = 0.2+random 0.5;
								_leaves_p setDropInterval _leaves_p_drop;
								_branches_p setDropInterval _leaves_p_drop;
								
								_alias_drop_fog_factor	= 0.01+random 0.1;
								
								_alias_local_fog setDropInterval _alias_drop_fog_factor;

								sleep 5 + random 10;
								deletevehicle _leaves_p;
								deletevehicle _branches_p;
								deletevehicle _alias_local_fog;
							};

							"DynamicBlur" ppeffectenable true;
							"DynamicBlur" ppeffectadjust [3];
							"DynamicBlur" ppeffectcommit 3;
							sleep 3;

							col_fct =0.86;
								while {col_fct<1} do {
									"colorCorrections" ppEffectAdjust[col_fct, 1, 0.01, [1-col_fct, 0.17, 0.33, col_fct-1],[col_fct, -0.4, col_fct, col_fct],[0.299, 0.587, 0.114, 1-col_fct]];
									"colorCorrections" ppEffectCommit 0;
									"colorCorrections" ppEffectEnable true;
									col_fct = col_fct+0.001;
									sleep 0.0001;
							};

							"DynamicBlur" ppeffectadjust [0];
							"DynamicBlur" ppeffectcommit 3;
							sleep 3;
							"DynamicBlur" ppEffectEnable false;
								
							grain_sand = 0;
								while {grain_sand>0} do {
									"FilmGrain" ppEffectEnable true;
									"FilmGrain" ppEffectAdjust [0.1,0.1,grain_sand,0.1,0.1,true];
									"FilmGrain" ppEffectCommit 0;
									grain_sand = grain_sand - 0.1;
									sleep 0.5;
								};
								
							"FilmGrain" ppEffectEnable false;
							"colorCorrections" ppEffectEnable false;
							"DynamicBlur" ppEffectEnable false;
							if (_effect_on_objects) then {
								enableCamShake false;
							};
						}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherSandstorm_particles"];

						if (_dust_wall) then 
						{
							_rand_pl = [] spawn {
								_allunits = [];
								{
									if (alive _x) then{_allunits pushBack _x}
								}  foreach (if (isMultiplayer) then {playableUnits} else {switchableUnits});
								hunt_alias = _allunits call BIS_fnc_selectRandom;
								missionNamespace setVariable ["hunt_alias", hunt_alias];
							};
							waitUntil {scriptDone _rand_pl};
							_pozobcj = (missionNamespace getVariable "hunt_alias") getRelPos [800,(_direction_duststorm-180)];
							_stormsource = (([AGLtoASL _pozobcj, "Land_HelipadEmpty_F", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							if ((_direction_duststorm>315)or(_direction_duststorm<45)) then {_x_dev=600; _y_dev = 60};
							if ((_direction_duststorm<225)or(_direction_duststorm>135)) then {_x_dev=600; _y_dev = 60};
							if ((_direction_duststorm<=135)&&(_direction_duststorm>=45)) then {_x_dev=60; _y_dev = 600};
							if ((_direction_duststorm>=225)&&(_direction_duststorm<=315)) then {_x_dev=60; _y_dev = 600};
							[[_stormsource,_duration_duststorm,_x_dev,_y_dev],{
								private ["_sursa_storm","_fum_negru","_x_dev","_y_dev"];

								if (!hasInterface) exitWith {};
								

								_sursa_storm			= _this select 0;
								_duration_duststorm_w	= _this select 1;
								_x_dev					= _this select 2;
								_y_dev					= _this select 3;

								_fum_negru = (([ATLtoASL (getPosATL _sursa_storm), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_fum_negru setParticleCircle [60,[0.2,-0.5,20]];
								_fum_negru setParticleRandom [5,[_x_dev,_y_dev,20],[0,0,0],7,0.5,[0,0,0,0.1],0,0];
								_fum_negru setParticleParams [["\A3\data_f\cl_basic.p3d", 1, 0, 1], "", "Billboard", 1, 9, [0,0,0], [0,0,10], 45, 20, 13, 0.1, [35,25,50,70],[[0,0,0,0.5],[0.3,0.2,0.1,0.7],[0.9,0.75,0.6,0.8],[0,0,0,0]],[0.08], 0.1, 0.1, "", "", _sursa_storm];
								_fum_negru setDropInterval 0.002;
								
								missionNamespace setVariable ["_fum_negru", _fum_negru];

								sleep _duration_duststorm_w;

								deleteVehicle _fum_negru;
							}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherSandstorm_dustWall"];
							
							if (_lethal_wall) then {
								[_stormsource,_x_dev,_y_dev] spawn {
									_wall_dest	= _this select 0;
									_x_dev		= _this select 1;
									_y_dev		= _this select 2;

									_dir_blow_wall = wind;

									while {(missionNamespace getVariable "al_duststorm_on")} do 
									{
										_list_potential_objt = [];
										_list_potential_objt = nearestObjects [position _wall_dest,["LandVehicle","Man","Air","TREE","SMALL TREE","BUSH"], 600];
										{
											if ((position _x) inArea [position _wall_dest, _x_dev/2,_y_dev/2,0,true]) then 
											{
												_x setdamage ((getDammage _x) + 0.1); sleep (0.1+(random 0.5));
											};
											sleep 0.1;		
										} forEach _list_potential_objt;
										sleep 8;
									};
								};
							};
							[_stormsource,_direction_duststorm] spawn {private ["_stormsource","_direction_duststorm"]; _stormsource = _this select 0; _direction_duststorm = _this select 1; while {(missionNamespace getVariable "al_duststorm_on")} do {_stormsource setPos (_stormsource getRelPos [10,_direction_duststorm]);sleep 5}};
						};

						raport = 360/_direction_duststorm;
						raport = round (raport * (10 ^ 2)) / (10 ^ 2);
						if (raport >= 4) then {fctx = 1; fcty = 1;}	else {if (raport >= 2) then {fctx = 1; fcty = -1;}else { if (raport >=1.33) then {fctx = -1; fcty = -1;}else {fctx = -1; fcty = 1;};};};
						if ((raport <= 2) and (raport >= 1.33)) then {fctx = -1; fcty = -1;};
						_unx	= ((_direction_duststorm - floor (_direction_duststorm/90)*90))*fctx;
						vx = floor (_unx * 0.6);
						vy = (54 - vx)*fcty;
						inx = 0;
						iny = 0;
						incr = true;
						incrx = false;
						incry = false;
						while {incr} do 
						{
							sleep 0.01;
							if (inx < abs vx) then {inx = inx+0.1;} else {incrx = true};
							if (iny < abs vy) then {iny = iny+0.1} else {incry = true};
							if (incrx and incry) then {incr=false};
							winx = floor (inx*fctx/2);
							winy = floor (iny*fcty/2);
							setWind [winx,winy,true];
						};

						if (_effect_on_objects) then {

							while {(missionNamespace getVariable "al_duststorm_on")} do {
								[[_duration_duststorm],{
									addCamShake [0.2,(_this select 0),17];
								}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherSandstorm_effectObjects_camShake1"];
								sleep 1;
								_rand_pl = [] spawn {
									_allunits = [];
									{
										if (alive _x) then{_allunits pushBack _x}
									}  foreach (if (isMultiplayer) then {playableUnits} else {switchableUnits});
									hunt_alias = _allunits call BIS_fnc_selectRandom;
									missionNamespace setVariable ["hunt_alias", hunt_alias];
								};
								waitUntil {scriptDone _rand_pl};

								sleep 60+random 120;
								
								al_nearobjects = nearestObjects [(missionNamespace getVariable "hunt_alias"),[],50];
								ar_obj_eligibl = [];
								
								{if((_x isKindOf "LandVehicle") or (_x isKindOf "Man") or (_x isKindOf "Air") or (_x isKindOf "Wreck")) then 
									{ar_obj_eligibl pushBack _x;};
								} foreach al_nearobjects;
								
								sleep 1;
								
								_blowobj= ar_obj_eligibl call BIS_fnc_selectRandom;

								sleep 1;
								[] spawn {
									_rafale = ["WindBig","WindNormal","WindSmall","wind1","wind2","wind3","wind4","wind5"] call BIS_fnc_selectRandom;
									[_rafale] remoteExec ["playSound"];
								};
								
								if (!isNull _blowobj) then {
									_xblow	= 0.1+random 5;
									_yblow	= 0.1+random 5;
							
									_xx=0;
									_yy=0;
									
									while {(_xx< _xblow) or (_yy< _yblow)} do {
										_xx = _xx + 0.01;
										_yy = _yy + 0.01;
										sleep 0.001;
									};
								
								};
							};
						};

						while {(missionNamespace getVariable "al_duststorm_on")} do {
							_rafale = ["WindBig","WindNormal","WindSmall","wind1","wind2","wind3","wind4","wind5"] call BIS_fnc_selectRandom;
							[_rafale] remoteExec ["playSound"];
							sleep 60+random 120;
						};
						deleteVehicle _stormsource;
					};
				 }] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherSandstorm"];
				systemchat format ["[ LOG ] Sandstorm weather event now starting lasting '%1' minutes!", _duration];
			} else {
				systemchat "[ LOG ] Sandstorm weather event will end in 60 seconds!";
				[[],{
					if (!isServer) exitWith {};
					
					al_duststorm_on = false;
					missionNamespace setVariable ["al_duststorm_on", al_duststorm_on];

					60 setFog al_foglevel;
					60 setRain al_rainlevel;
					60 setLightnings al_thundlevel;
					180 setOvercast al_overforecast;
					setWind [al_windlevel select 0, al_windlevel select 1, true];
					forceWeatherChange;
					[[(missionNamespace getVariable "al_duststorm_on")],{
						if (!hasInterface) exitWith {};
						
						deleteVehicle (missionNamespace getVariable "_fum_negru");
						
						missionNamespace setVariable ["_al_duststorm_on", (_this select 0)];
						"FilmGrain" ppEffectEnable false;
						"colorCorrections" ppEffectEnable false;
						"DynamicBlur" ppEffectEnable false;
						titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>The '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Sandstorm</t>' departs...</t>", "PLAIN DOWN", -1, false, true];
						enableCamShake false;
						resetCamShake;
						remoteExec ["", "LM_JIP_weatherSandstorm_particles"];
						remoteExec ["", "LM_JIP_weatherSandstorm_dustWall"];
						remoteExec ["", "LM_JIP_weatherSandstorm_effectObjects_camShake1"];
						remoteExec ["", "LM_JIP_weatherSandstorm_init"];
						remoteExec ["", "LM_JIP_weatherSandstorm"];
					}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherSandstorm_init"];
				}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherSandstorm"];
				[[],{
					sleep 60;
					if (!(isNil "LM_scriptServer_weatherSandstorm" || {isNull LM_scriptServer_weatherSandstorm})) then {terminate LM_scriptServer_weatherSandstorm;};
					remoteExec ["", "LM_JIP_weatherSandstorm_cleanUp"];
				}] remoteExec ['bis_fnc_call',0,"LM_JIP_weatherSandstorm_cleanUp"];
				systemchat "[ LOG ] Sandstorm weather event now ended!";
			};
		   },{ 
			params ["_values","_args","_display"]; 
			_display closeDisplay 2; 
		   },[]] call MAZ_EZM_fnc_createDialog; 
		};
		  
		LM_fnc_weatherFogModule = { 
		   params ["_entity"];
		   ["Fog Creator",[
			[
				"LIST",
				["Fog Type:","Control the type of fog to appear around the object the module was placed on."],
				[
					["low", "high", "medium"],
					[
						["Ground level (If object not a high altitude)","",""],
						["Higher level (If object on top of the hills or mountains)","",""],
						["Around Players","",""]
					],
					0,
					3
				]
			],
			[
				"LIST",
				"NOTE: You must place this on an object for option Ground or Higher!",
				[
					[_entity],
					[
						["","",""]
					],
					0,
					0
				]
			]
		   ],{ 
			params ["_values","_args","_display"]; 
			_values params ["_fog", "_entity"]; 
			_display closeDisplay 1;
			
			if((isNull _entity) && !(_fog == "medium")) exitWith {["Place the module on an object or player for options Ground or Higher!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			
			 [[_entity, _fog],{
				private ["_obj_fog"];

				if (!isServer) exitwith {};

				_fog_type	= _this select 1;

				if ((_fog_type!="low")and(_fog_type!="high")and(_fog_type!="medium")) exitwith {hint "Wrong value for the fog type!"};

				if (_fog_type=="low") then {
					_obj_fog = _this select 0;
					[[_obj_fog],{
						private ["_low_fog_obj","_re_iterate"];

						if (!hasInterface) exitWith {};

						_low_fog_obj = _this select 0;

						while {alive _low_fog_obj} do 
						{
							waitUntil {sleep 1; player distance _low_fog_obj < 2000};
							_re_iterate = 0;
							while {(player distance _low_fog_obj < 2000)and(alive _low_fog_obj)and(alive player)} do 
							{
								_fog_low = (([(getPosASL _low_fog_obj), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_fog_low setParticleCircle [0,[0,0,0]];
								_fog_low setParticleRandom [0,[20+(random 30),20+(random 30),-1],[0,0,0],3,0,[0,0,0,0.3],0,0];
								_fog_low setParticleParams[["\A3\data_f\cl_basic",1,0,1],"","Billboard",1,60,[0,0,-2],[0,0,0],13,10,7.843,0.005,[5,5,5],[[1,1,1,0],[1,1,1,0.3],[1,1,1,0]],[0,0],0,0,"","",_low_fog_obj];
								_fog_low setDropInterval 0.001;
								sleep 0.1;
								deleteVehicle _fog_low;
								_re_iterate = _re_iterate + 1;
								if (_re_iterate==50) then {sleep 30; _re_iterate = 0};
							};
						};
					}] remoteExec ['bis_fnc_call',0,true];
				};
				
				if (_fog_type=="high") then {
					_obj_fog = _this select 0;
					[[_obj_fog],{
						private ["_high_fog","_re_iterate"];

						if (!hasInterface) exitWith {};

						_high_fog = _this select 0;

						while {alive _high_fog} do 
						{
							waitUntil {sleep 1; player distance _high_fog < 4000};
							_re_iterate = 0;
							while {(player distance _high_fog < 4000)and(alive _high_fog)} do 
							{
								_fog_high = (([(getPosASL _high_fog), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_fog_high setParticleCircle [0,[0,0,0]];
								_fog_high setParticleRandom [0,[60+(random 100),60+(random 100),1+(random 4)],[0,0,0],0,0,[0,0,0,0],0,0];
								_fog_high setParticleParams[["\A3\data_f\cl_basic", 1, 0, 1],"","Billboard",1,60,[0,0,-35],[0,0,0],13,10,7.843,0,[20,20,25],[[1,1,1,0],[1,1,1,0.1],[1,1,1,0]],[0,0],0,0,"","",_high_fog];
								_fog_high setDropInterval 0.001;
								sleep 0.1;
								deleteVehicle _fog_high;
								_re_iterate = _re_iterate + 1;
								if (_re_iterate==50) then {sleep 29; _re_iterate = 0};		
							};
						};
					}] remoteExec ['bis_fnc_call',0,true];
				};
				
				if (_fog_type=="medium") then {
					[[],{
						if (!hasInterface) exitWith {};

						if (!isNil {player getVariable "is_ON"}) exitwith {};
						player setVariable ["is_ON",true,true];

						while {!isNull player} do 
						{
							_alias_local_fog = (([AGLtoASL (getpos player), "#particlesource", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_alias_local_fog setParticleCircle [10,[3,3,0]];
							_alias_local_fog setParticleRandom [6,[0.25,0.25,0],[1,1,0],1,1,[0,0,0,0.1],0,0];
							_alias_local_fog setParticleParams [["\A3\data_f\cl_basic",1,0,1],"","Billboard",1,8,[0,0,0],[-1,-1,0],3,10.15,7.9,0.01,[10,10,20],[[0.5,0.5,0.5,0],[0.5,0.5,0.5,0.1],[1,1,1,0]],[1],1, 0,"","",player];
							_alias_local_fog setDropInterval 0.01;
							waitUntil {sleep 2; !alive player};
							deleteVehicle _alias_local_fog;
						};
					}] remoteExec ['bis_fnc_call',0,true];
				};
			 }] remoteExec ['bis_fnc_call',0,true];
			 if (_fog == "low") then {
				systemchat "[ LOG ] Ground level fog now starting around selected object!";
			 };
			 if (_fog == "medium") then {
				systemchat "[ LOG ] Fog particles now starting around all players!";
			 };
			 if (_fog == "high") then {
				systemchat "[ LOG ] Higher level fog now starting around selected object!";
			 };
		   },{ 
			params ["_values","_args","_display"]; 
			_display closeDisplay 2; 
		   },[]] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_operationAreaModule = {
			if(!visibleMap) exitWith {["Cannot place a marker without the map open!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			private _position = [] call MAZ_EZM_fnc_getScreenPosition;

			["Cover Map",[
				[
					"VECTOR",
					"Position:",
					[[(_position select 0),(_position select 1)],["X","Y"],2]
				],
				[
					"VECTOR",
					"Size:",
					[[1000,1000],["X","Y"],2]
				],
				[
					"SLIDER",
					["Rotation:","Rotation of the rectangle in degrees."],
					[0,359,0]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Cover Control:","Control whether the map is covered or not."],
				 [true]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_markerPos","_markerSize","_markerRotation","_control"];
				
				[[_markerPos, _markerSize, _markerRotation, _control],{
					params ["_markerPos","_markerSize","_markerRotation","_control"];
					_object = (([AGLtoASL [(_markerPos select 0),(_markerPos select 1),0], "Land_HelipadEmpty_F", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
					_object setVariable ["objectArea",[(_markerSize select 0), (_markerSize select 1), _markerRotation, false, 0]];
					if (_control) then {
						[_object, [], true] call BIS_fnc_moduleCoverMap;
					} else {
						[_object, [], false] call BIS_fnc_moduleCoverMap;
					};
					deleteVehicle _object;
				}] remoteExec ['bis_fnc_call',0,false];
				if (_control) then {
					systemchat format ["[ LOG ] Map now covered except for '%1'm by '%2'm around '%3'!", (_markerSize select 0), (_markerSize select 1), _markerPos];
				} else {
					systemchat "[ LOG ] Map now fully un-covered!";
				};
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_supportMenuModule = {
			params ["_entity"];
			if(isNull _entity || !((typeOf _entity) isKindOf "Man") || !(isPlayer _entity)) exitWith {["Place on players only!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};

			["Support Control",[
				[
					"LIST",
					"NOTE: Players are limited to just 10 Supports being available to request at a time!",
					[
						[],
						[
							["","",""]
						],
						0,
						0
					]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Mortar:","Control access to Mortar support (5 Rounds, 50m)"],
				 [(_entity getVariable ["_supportMortar",false])]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Howitzer:","Control access to Howitzer support (8 Rounds, 100m)"],
				 [(_entity getVariable ["_supportHowitzer",false])]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Rocket Cluster:","Control access to Rocket Cluster support (1 Cluster, 200m)"],
				 [(_entity getVariable ["_supportRocket",false])]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Cruise Missile:","Control access to Cruise Missile support (1 Missile, Precise)"],
				 [(_entity getVariable ["_supportCruise",false])]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Guns Strike (CAS):","Control access to Guns Strike (CAS) support"],
				 [(_entity getVariable ["_supportGun",false])]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Missiles Strike (CAS):","Control access to Missiles Strike (CAS) support"],
				 [(_entity getVariable ["_supportMissile",false])]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Gun & Missiles Strike (CAS):","Control access to Guns & Missiles Strike (CAS) support"],
				 [(_entity getVariable ["_supportBoth",false])]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Bomb Strike (CAS):","Control access to Bomb Strike (CAS) support"],
				 [(_entity getVariable ["_supportBomb",false])]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Gunship Support:","Control access to Gunship support"],
				 [(_entity getVariable ["_supportGunship",false])]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["UAV Surveillance Support:","Control access to UAV Surveillance support"],
				 [(_entity getVariable ["_supportUAV",false])]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Attack Chopper Support:","Control access to Attack Chopper support"],
				 [(_entity getVariable ["_supportAttack",false])]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Fighter Jet Support:","Control access to Fighter Jet support"],
				 [(_entity getVariable ["_supportJet",false])]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Arsenal Airdrop:","Control access to Arsenal Airdrop support"],
				 [(_entity getVariable ["_supportArsenal",false])]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Truck Airdrop:","Control access to Truck Airdrop support"],
				 [(_entity getVariable ["_supportTruck",false])]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Transport Airdrop:","Control access to Transport Airdrop support"],
				 [(_entity getVariable ["_supportTransport",false])]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["APC Airdrop:","Control access to APC Airdrop support"],
				 [(_entity getVariable ["_supportAPC",false])]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Tank Airdrop:","Control access to Tank Airdrop support"],
				 [(_entity getVariable ["_supportTank",false])]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Speedboat Airdrop:","Control access to Speedboat Airdrop support"],
				 [(_entity getVariable ["_supportSpeedboat",false])]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["SDV Airdrop:","Control access to SDV Airdrop support"],
				 [(_entity getVariable ["_supportSDV",false])]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Helo Transport:","Control access to Helo Transport support"],
				 [(_entity getVariable ["_supportHelo",false])]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Helo Reinforcements:","Control access to Helo Reinforcements support"],
				 [(_entity getVariable ["_supportReinforce",false])]
				],
				[
				 "TOOLBOX:ENABLED",
				 ["Paratrooper Reinforcements:","Control access to Paratrooper Reinforcements support"],
				 [(_entity getVariable ["_supportParatrooper",false])]
				]
			],{
				params ["_values","_entity","_display"];
				_values params ["_log","_supportMortar","_supportHowitzer","_supportRocket","_supportCruise","_supportGun","_supportMissile","_supportBoth","_supportBomb","_supportGunship","_supportUAV","_supportAttack","_supportJet","_supportArsenal","_supportTruck","_supportTransport","_supportAPC","_supportTank","_supportSpeedboat","_supportSDV","_supportHelo","_supportReinforce","_supportParatrooper"];
				
				if (_supportMortar) then {
					if ((_entity getVariable ["_supportMortar_ItemID",-1]) == -1) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							_entity setVariable ["_supportMortar_ItemID", ([_entity,"Call",["Mortar Strike (5 Rounds, 50m)"],["
								Support_fnc_getScreenPosition = {
									params [['_screenPos',getMousePosition,[[]],2]];

									if(visibleMap) then {
										private _ctrlMap = findDisplay 12 displayCtrl 51;
										private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
										_position = (_pos2D + [0]);
										_position
									} else {
										private _position = screenToWorld [0.5,0.5];
										_position
									};
								};
								_pos = [] call Support_fnc_getScreenPosition;
								_side = side player;
								
								private ['_markerColor'];
								if (_side == west) then {
									_markerColor = 'colorBLUFOR';
								} else {
									if (_side == east) then {
										_markerColor = 'colorOPFOR';
									} else {
										if (_side == independent) then {
											_markerColor = 'colorIndependent';
										} else {
											_markerColor = 'colorCivilian';
										};
									};
								};
								_markerID = format ['markerMortar_%1_%2', (mapGridPosition (_pos)), time];
								_markerIDArea = format ['areaMortar_%1_%2', (mapGridPosition (_pos)), time];
								format ['|%1|%2|%3|ICON|[1,1]|0|Solid|%4|1|%5', _markerID, _pos, 'hd_dot', _markerColor, '5x Mortar Strike'] call BIS_fnc_stringToMarker;
								format ['|%1|%2|%3|ELLIPSE|[50,50]|0|FDiagonal|%4|1|%5', _markerIDArea, _pos, 'hd_dot', _markerColor, ''] call BIS_fnc_stringToMarker;
								
								[[_pos,_side],{
									params ['_pos','_side'];
									if (side player == _side) then {
										if (_side == west) then {
											player sideRadio (selectRandom ['mp_groundsupport_45_artillery_BHQ_0','mp_groundsupport_45_artillery_BHQ_1','mp_groundsupport_45_artillery_BHQ_2']);
										} else {
											if (_side == east) then {
												player sideRadio (selectRandom ['mp_groundsupport_45_artillery_OHQ_0','mp_groundsupport_45_artillery_OHQ_1','mp_groundsupport_45_artillery_OHQ_2']);
											} else {
												player sideRadio (selectRandom ['mp_groundsupport_45_artillery_IHQ_0','mp_groundsupport_45_artillery_IHQ_1','mp_groundsupport_45_artillery_IHQ_2']);
											};
										};
										[_side, 'HQ'] sideChat (format ['Be advised, 5x Mortar strike inbound ETA 30 seconds to Grid ''%1'' across 50m!', (mapGridPosition (_pos))]);
									};
								}] remoteExec ['bis_fnc_call',0,false];
								
								[_pos, _side, _markerID, _markerIDArea] spawn {
									params ['_pos', '_side', '_markerID', '_markerIDArea'];
									sleep 30;
									for '_x' from 1 to 5 do {
										_spawn = _pos getpos [(random [0, 25, 50]), (random [0, 180, 359])];
										
										_missile = (([AGLtoASL [(_spawn select 0),(_spawn select 1),1000], 'Rocket_04_HE_F', 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										[_missile, [0,-90,0]] call BIS_fnc_setObjectRotation;
										sleep 3;
									};
								
									sleep 6;
									[[_pos,_side],{
										params ['_pos','_side'];
										if (side player == _side) then {
											[_side, 'HQ'] sideChat (format ['Be advised, 5x Mortar strike delivered succesfully to Grid ''%1'' across 50m!', (mapGridPosition (_pos))]);
										};
									}] remoteExec ['bis_fnc_call',0,false];
									deleteMarker _markerID;
									deleteMarker _markerIDArea;
								};
							"]] call BIS_fnc_addCommMenuItem)];
							_entity setVariable ["_supportMortar",true];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now has access to Mortar support (5 Rounds, 50m)!", (name _entity)];
					};
				} else {
					if (!((_entity getVariable ["_supportMortar_ItemID",-1]) == -1)) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							[_entity, (_entity getVariable ["_supportMortar_ItemID",-1])] call BIS_fnc_removeCommMenuItem;
							_entity setVariable ["_supportMortar_ItemID",-1];
							_entity setVariable ["_supportMortar",false];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now no longer has access to Mortar support (5 Rounds, 50m)!", (name _entity)];
					};
				};
				
				if (_supportHowitzer) then {
					if ((_entity getVariable ["_supportHowitzer_ItemID",-1]) == -1) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							_entity setVariable ["_supportHowitzer_ItemID", ([_entity,"Call",["Howitzer Strike (8 Rounds, 100m)"],["
								Support_fnc_getScreenPosition = {
									params [['_screenPos',getMousePosition,[[]],2]];

									if(visibleMap) then {
										private _ctrlMap = findDisplay 12 displayCtrl 51;
										private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
										_position = (_pos2D + [0]);
										_position
									} else {
										private _position = screenToWorld [0.5,0.5];
										_position
									};
								};
								_pos = [] call Support_fnc_getScreenPosition;
								_side = side player;
								
								private ['_markerColor'];
								if (_side == west) then {
									_markerColor = 'colorBLUFOR';
								} else {
									if (_side == east) then {
										_markerColor = 'colorOPFOR';
									} else {
										if (_side == independent) then {
											_markerColor = 'colorIndependent';
										} else {
											_markerColor = 'colorCivilian';
										};
									};
								};
								_markerID = format ['markerHowitzer_%1_%2', (mapGridPosition (_pos)), time];
								_markerIDArea = format ['areaHowitzer_%1_%2', (mapGridPosition (_pos)), time];
								format ['|%1|%2|%3|ICON|[1,1]|0|Solid|%4|1|%5', _markerID, _pos, 'hd_dot', _markerColor, '8x Howitzer Strike'] call BIS_fnc_stringToMarker;
								format ['|%1|%2|%3|ELLIPSE|[100,100]|0|FDiagonal|%4|1|%5', _markerIDArea, _pos, 'hd_dot', _markerColor, ''] call BIS_fnc_stringToMarker;
								
								[[_pos,_side],{
									params ['_pos','_side'];
									if (side player == _side) then {
										if (_side == west) then {
											player sideRadio (selectRandom ['mp_groundsupport_45_artillery_BHQ_0','mp_groundsupport_45_artillery_BHQ_1','mp_groundsupport_45_artillery_BHQ_2']);
										} else {
											if (_side == east) then {
												player sideRadio (selectRandom ['mp_groundsupport_45_artillery_OHQ_0','mp_groundsupport_45_artillery_OHQ_1','mp_groundsupport_45_artillery_OHQ_2']);
											} else {
												player sideRadio (selectRandom ['mp_groundsupport_45_artillery_IHQ_0','mp_groundsupport_45_artillery_IHQ_1','mp_groundsupport_45_artillery_IHQ_2']);
											};
										};
										[_side, 'HQ'] sideChat (format ['Be advised, 8x Howitzer strike inbound ETA 30 seconds to Grid ''%1'' across 100m!', (mapGridPosition (_pos))]);
									};
								}] remoteExec ['bis_fnc_call',0,false];
								
								[_pos, _side, _markerID, _markerIDArea] spawn {
									params ['_pos', '_side', '_markerID', '_markerIDArea'];
									sleep 30;
									for '_x' from 1 to 8 do {
										_spawn = _pos getpos [(random [0, 50, 100]), (random [0, 180, 359])];
										
										_missile = (([AGLtoASL [(_spawn select 0),(_spawn select 1),1000], 'Missile_AGM_02_F', 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										[_missile, [0,-90,0]] call BIS_fnc_setObjectRotation;
										sleep 3;
									};
								
									sleep 6;
									[[_pos,_side],{
										params ['_pos','_side'];
										if (side player == _side) then {
											[_side, 'HQ'] sideChat (format ['Be advised, 8x Howitzer strike delivered succesfully to Grid ''%1'' across 100m!', (mapGridPosition (_pos))]);
										};
									}] remoteExec ['bis_fnc_call',0,false];
									deleteMarker _markerID;
									deleteMarker _markerIDArea;
								};
							"]] call BIS_fnc_addCommMenuItem)];
							_entity setVariable ["_supportHowitzer",true];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now has access to Howitzer support (8 Rounds, 100m)!", (name _entity)];
					};
				} else {
					if (!((_entity getVariable ["_supportHowitzer_ItemID",-1]) == -1)) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							[_entity, (_entity getVariable ["_supportHowitzer_ItemID",-1])] call BIS_fnc_removeCommMenuItem;
							_entity setVariable ["_supportHowitzer_ItemID",-1];
							_entity setVariable ["_supportHowitzer",false];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now no longer has access to Howitzer support (8 Rounds, 100m)!", (name _entity)];
					};
				};
				
				if (_supportRocket) then {
					if ((_entity getVariable ["_supportRocket_ItemID",-1]) == -1) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							_entity setVariable ["_supportRocket_ItemID", ([_entity,"Call",["Rocket Cluster Strike (1 Cluster, 200m)"],["
								Support_fnc_getScreenPosition = {
									params [['_screenPos',getMousePosition,[[]],2]];

									if(visibleMap) then {
										private _ctrlMap = findDisplay 12 displayCtrl 51;
										private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
										_position = (_pos2D + [0]);
										_position
									} else {
										private _position = screenToWorld [0.5,0.5];
										_position
									};
								};
								_pos = [] call Support_fnc_getScreenPosition;
								_side = side player;
								
								private ['_markerColor'];
								if (_side == west) then {
									_markerColor = 'colorBLUFOR';
								} else {
									if (_side == east) then {
										_markerColor = 'colorOPFOR';
									} else {
										if (_side == independent) then {
											_markerColor = 'colorIndependent';
										} else {
											_markerColor = 'colorCivilian';
										};
									};
								};
								_markerID = format ['markerRocket_%1_%2', (mapGridPosition (_pos)), time];
								_markerIDArea = format ['areaRocket_%1_%2', (mapGridPosition (_pos)), time];
								format ['|%1|%2|%3|ICON|[1,1]|0|Solid|%4|1|%5', _markerID, _pos, 'hd_dot', _markerColor, '1x Rocket Cluster Strike'] call BIS_fnc_stringToMarker;
								format ['|%1|%2|%3|ELLIPSE|[200,200]|0|FDiagonal|%4|1|%5', _markerIDArea, _pos, 'hd_dot', _markerColor, ''] call BIS_fnc_stringToMarker;
								
								[[_pos,_side],{
									params ['_pos','_side'];
									if (side player == _side) then {
										if (_side == west) then {
											player sideRadio (selectRandom ['mp_groundsupport_70_tacticalstrikeinbound_BHQ_0','mp_groundsupport_70_tacticalstrikeinbound_BHQ_1','mp_groundsupport_70_tacticalstrikeinbound_BHQ_2','mp_groundsupport_70_tacticalstrikeinbound_BHQ_3','mp_groundsupport_70_tacticalstrikeinbound_BHQ_4']);
										} else {
											if (_side == east) then {
												player sideRadio (selectRandom ['mp_groundsupport_70_tacticalstrikeinbound_OHQ_0','mp_groundsupport_70_tacticalstrikeinbound_OHQ_1','mp_groundsupport_70_tacticalstrikeinbound_OHQ_2','mp_groundsupport_70_tacticalstrikeinbound_OHQ_3','mp_groundsupport_70_tacticalstrikeinbound_OHQ_4']);
											} else {
												player sideRadio (selectRandom ['mp_groundsupport_70_tacticalstrikeinbound_IHQ_0','mp_groundsupport_70_tacticalstrikeinbound_IHQ_1','mp_groundsupport_70_tacticalstrikeinbound_IHQ_2','mp_groundsupport_70_tacticalstrikeinbound_IHQ_3','mp_groundsupport_70_tacticalstrikeinbound_IHQ_4']);
											};
										};
										[_side, 'HQ'] sideChat (format ['Be advised, 1x Rocket Cluster strike inbound ETA 30 seconds to Grid ''%1'' across 200m!', (mapGridPosition (_pos))]);
									};
								}] remoteExec ['bis_fnc_call',0,false];
								
								[_pos, _side, _markerID, _markerIDArea] spawn {
									params ['_pos', '_side', '_markerID', '_markerIDArea'];
									sleep 30;
									_missile = (([AGLtoASL [(_pos select 0),(_pos select 1),1000], 'ammo_Missile_Cruise_01_Cluster', 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									[_missile, [0,-90,0]] call BIS_fnc_setObjectRotation;
									
									sleep 12;
									[[_pos,_side],{
										params ['_pos','_side'];
										if (side player == _side) then {
											[_side, 'HQ'] sideChat (format ['Be advised, 1x Rocket Cluster strike delivered succesfully to Grid ''%1'' across 200m!', (mapGridPosition (_pos))]);
										};
									}] remoteExec ['bis_fnc_call',0,false];
									deleteMarker _markerID;
									deleteMarker _markerIDArea;
								};
							"]] call BIS_fnc_addCommMenuItem)];
							_entity setVariable ["_supportRocket",true];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now has access to Rocket Cluster support (1 Cluster, 200m)!", (name _entity)];
					};
				} else {
					if (!((_entity getVariable ["_supportRocket_ItemID",-1]) == -1)) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							[_entity, (_entity getVariable ["_supportRocket_ItemID",-1])] call BIS_fnc_removeCommMenuItem;
							_entity setVariable ["_supportRocket_ItemID",-1];
							_entity setVariable ["_supportRocket",false];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now no longer has access to Rocket Cluster support (1 Cluster, 200m)!", (name _entity)];
					};
				};
				
				if (_supportCruise) then {
					if ((_entity getVariable ["_supportCruise_ItemID",-1]) == -1) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							_entity setVariable ["_supportCruise_ItemID", ([_entity,"Call",["Cruise Missile Strike (1 Missile, Precise)"],["
								Support_fnc_getScreenPosition = {
									params [['_screenPos',getMousePosition,[[]],2]];

									if(visibleMap) then {
										private _ctrlMap = findDisplay 12 displayCtrl 51;
										private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
										_position = (_pos2D + [0]);
										_position
									} else {
										private _position = screenToWorld [0.5,0.5];
										_position
									};
								};
								_pos = [] call Support_fnc_getScreenPosition;
								_side = side player;
								
								private ['_markerColor'];
								if (_side == west) then {
									_markerColor = 'colorBLUFOR';
								} else {
									if (_side == east) then {
										_markerColor = 'colorOPFOR';
									} else {
										if (_side == independent) then {
											_markerColor = 'colorIndependent';
										} else {
											_markerColor = 'colorCivilian';
										};
									};
								};
								_markerID = format ['markerCruise_%1_%2', (mapGridPosition (_pos)), time];
								_markerIDArea = format ['areaCruise_%1_%2', (mapGridPosition (_pos)), time];
								format ['|%1|%2|%3|ICON|[1,1]|0|Solid|%4|1|%5', _markerID, _pos, 'hd_dot', _markerColor, '1x Cruise Missile Strike'] call BIS_fnc_stringToMarker;
								format ['|%1|%2|%3|ELLIPSE|[100,100]|0|FDiagonal|%4|1|%5', _markerIDArea, _pos, 'hd_dot', _markerColor, ''] call BIS_fnc_stringToMarker;
								
								[[_pos,_side],{
									params ['_pos','_side'];
									if (side player == _side) then {
										if (_side == west) then {
											player sideRadio (selectRandom ['mp_groundsupport_70_tacticalstrikeinbound_BHQ_0','mp_groundsupport_70_tacticalstrikeinbound_BHQ_1','mp_groundsupport_70_tacticalstrikeinbound_BHQ_2','mp_groundsupport_70_tacticalstrikeinbound_BHQ_3','mp_groundsupport_70_tacticalstrikeinbound_BHQ_4']);
										} else {
											if (_side == east) then {
												player sideRadio (selectRandom ['mp_groundsupport_70_tacticalstrikeinbound_OHQ_0','mp_groundsupport_70_tacticalstrikeinbound_OHQ_1','mp_groundsupport_70_tacticalstrikeinbound_OHQ_2','mp_groundsupport_70_tacticalstrikeinbound_OHQ_3','mp_groundsupport_70_tacticalstrikeinbound_OHQ_4']);
											} else {
												player sideRadio (selectRandom ['mp_groundsupport_70_tacticalstrikeinbound_IHQ_0','mp_groundsupport_70_tacticalstrikeinbound_IHQ_1','mp_groundsupport_70_tacticalstrikeinbound_IHQ_2','mp_groundsupport_70_tacticalstrikeinbound_IHQ_3','mp_groundsupport_70_tacticalstrikeinbound_IHQ_4']);
											};
										};
										[_side, 'HQ'] sideChat (format ['Be advised, 1x Cruise Missile strike inbound ETA 30 seconds to precise Grid ''%1''!', (mapGridPosition (_pos))]);
									};
								}] remoteExec ['bis_fnc_call',0,false];
								
								[_pos, _side, _markerID, _markerIDArea] spawn {
									params ['_pos', '_side', '_markerID', '_markerIDArea'];
									sleep 30;
									_missile = (([AGLtoASL [(_pos select 0),(_pos select 1),1000], 'ammo_Missile_Cruise_01', 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
									[_missile, [0,-90,0]] call BIS_fnc_setObjectRotation;
								
									sleep 12;
									[[_pos,_side],{
										params ['_pos','_side'];
										if (side player == _side) then {
											[_side, 'HQ'] sideChat (format ['Be advised, 1x Cruise Missile strike delivered succesfully to precise Grid ''%1''!', (mapGridPosition (_pos))]);
										};
									}] remoteExec ['bis_fnc_call',0,false];
									deleteMarker _markerID;
									deleteMarker _markerIDArea;
								};
							"]] call BIS_fnc_addCommMenuItem)];
							_entity setVariable ["_supportCruise",true];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now has access to Cruise Missile support (1 Missile, Precise)!", (name _entity)];
					};
				} else {
					if (!((_entity getVariable ["_supportCruise_ItemID",-1]) == -1)) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							[_entity, (_entity getVariable ["_supportCruise_ItemID",-1])] call BIS_fnc_removeCommMenuItem;
							_entity setVariable ["_supportCruise_ItemID",-1];
							_entity setVariable ["_supportCruise",false];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now no longer has access to Cruise Missile support (1 Missile, Precise)!", (name _entity)];
					};
				};
				
				if (_supportGun) then {
					if ((_entity getVariable ["_supportGun_ItemID",-1]) == -1) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							_entity setVariable ["_supportGun_ItemID", ([_entity,"Call",["Guns Strike (CAS)"],["
								Support_fnc_getScreenPosition = {
									params [['_screenPos',getMousePosition,[[]],2]];

									if(visibleMap) then {
										private _ctrlMap = findDisplay 12 displayCtrl 51;
										private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
										_position = (_pos2D + [0]);
										_position
									} else {
										private _position = screenToWorld [0.5,0.5];
										_position
									};
								};
								_pos = [] call Support_fnc_getScreenPosition;
								_side = side player;
								
								private ['_markerColor'];
								if (_side == west) then {
									_markerColor = 'colorBLUFOR';
								} else {
									if (_side == east) then {
										_markerColor = 'colorOPFOR';
									} else {
										if (_side == independent) then {
											_markerColor = 'colorIndependent';
										} else {
											_markerColor = 'colorCivilian';
										};
									};
								};
								_markerID = format ['markerGunCAS_%1_%2', (mapGridPosition (_pos)), time];
								_markerIDArea = format ['areaGunCAS_%1_%2', (mapGridPosition (_pos)), time];
								format ['|%1|%2|%3|ICON|[1,1]|0|Solid|%4|1|%5', _markerID, _pos, 'hd_dot', _markerColor, '1x Guns Strike (CAS)'] call BIS_fnc_stringToMarker;
								format ['|%1|%2|%3|RECTANGLE|[50,100]|0|FDiagonal|%4|1|%5', _markerIDArea, _pos, 'hd_dot', _markerColor, ''] call BIS_fnc_stringToMarker;
								
								[[_pos,_side],{
									params ['_pos','_side'];
									if (side player == _side) then {
										if (_side == west) then {
											player sideRadio (selectRandom ['mp_groundsupport_50_cas_BHQ_0','mp_groundsupport_50_cas_BHQ_1','mp_groundsupport_50_cas_BHQ_2']);
										} else {
											if (_side == east) then {
												player sideRadio (selectRandom ['mp_groundsupport_50_cas_OHQ_0','mp_groundsupport_50_cas_OHQ_1','mp_groundsupport_50_cas_OHQ_2']);
											} else {
												player sideRadio (selectRandom ['mp_groundsupport_50_cas_IHQ_0','mp_groundsupport_50_cas_IHQ_1','mp_groundsupport_50_cas_IHQ_2']);
											};
										};
										[_side, 'HQ'] sideChat (format ['Be advised, 1x Guns Strike (CAS) inbound to Grid ''%1''!', (mapGridPosition (_pos))]);
									};
								}] remoteExec ['bis_fnc_call',0,false];
								[_pos,_side,_dir, _markerID, _markerIDArea] spawn {
									params ['_pos','_side','_dir', '_markerID', '_markerIDArea'];
									private ['_vehType'];
									if ((side player) == west) then {
										_vehType = 'B_Plane_CAS_01_F';
									} else {
										if ((side player) == east) then {
											_vehType = 'O_Plane_CAS_02_F';
										} else {
											_vehType = 'I_Plane_Fighter_03_CAS_F';
										};
									}; 
									 
									[[_pos,_vehType],{ 
										params ['_pos','_vehType']; 
										_logic = (([AGLtoASL _pos, 'Land_HelipadEmpty_F', 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_logic setVariable ['vehicle',_vehType]; 
										_logic setVariable ['type',0]; 
										[_logic,nil,true] call BIS_fnc_moduleCAS; 
										deleteVehicle _logic; 
									}] remoteExec ['bis_fnc_call',2,false];
									sleep 30;
									deleteMarker _markerID;
									deleteMarker _markerIDArea;
								};
							"]] call BIS_fnc_addCommMenuItem)];
							_entity setVariable ["_supportGun",true];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now has access to the Guns Strike (CAS) support!", (name _entity)];
					};
				} else {
					if (!((_entity getVariable ["_supportGun_ItemID",-1]) == -1)) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							[_entity, (_entity getVariable ["_supportGun_ItemID",-1])] call BIS_fnc_removeCommMenuItem;
							_entity setVariable ["_supportGun_ItemID",-1];
							_entity setVariable ["_supportGun",false];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now no longer has access to the Guns Strike (CAS) support!", (name _entity)];
					};
				};
				
				if (_supportMissile) then {
					if ((_entity getVariable ["_supportMissile_ItemID",-1]) == -1) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							_entity setVariable ["_supportMissile_ItemID", ([_entity,"Call",["Missiles Strike (CAS)"],["
								Support_fnc_getScreenPosition = {
									params [['_screenPos',getMousePosition,[[]],2]];

									if(visibleMap) then {
										private _ctrlMap = findDisplay 12 displayCtrl 51;
										private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
										_position = (_pos2D + [0]);
										_position
									} else {
										private _position = screenToWorld [0.5,0.5];
										_position
									};
								};
								_pos = [] call Support_fnc_getScreenPosition;
								_side = side player;
								
								private ['_markerColor'];
								if (_side == west) then {
									_markerColor = 'colorBLUFOR';
								} else {
									if (_side == east) then {
										_markerColor = 'colorOPFOR';
									} else {
										if (_side == independent) then {
											_markerColor = 'colorIndependent';
										} else {
											_markerColor = 'colorCivilian';
										};
									};
								};
								_markerID = format ['markerMissileCAS_%1_%2', (mapGridPosition (_pos)), time];
								_markerIDArea = format ['areaMissileCAS_%1_%2', (mapGridPosition (_pos)), time];
								format ['|%1|%2|%3|ICON|[1,1]|0|Solid|%4|1|%5', _markerID, _pos, 'hd_dot', _markerColor, '1x Missiles Strike (CAS)'] call BIS_fnc_stringToMarker;
								format ['|%1|%2|%3|RECTANGLE|[50,100]|0|FDiagonal|%4|1|%5', _markerIDArea, _pos, 'hd_dot', _markerColor, ''] call BIS_fnc_stringToMarker;
								
								[[_pos,_side],{
									params ['_pos','_side'];
									if (side player == _side) then {
										if (_side == west) then {
											player sideRadio (selectRandom ['mp_groundsupport_50_cas_BHQ_0','mp_groundsupport_50_cas_BHQ_1','mp_groundsupport_50_cas_BHQ_2']);
										} else {
											if (_side == east) then {
												player sideRadio (selectRandom ['mp_groundsupport_50_cas_OHQ_0','mp_groundsupport_50_cas_OHQ_1','mp_groundsupport_50_cas_OHQ_2']);
											} else {
												player sideRadio (selectRandom ['mp_groundsupport_50_cas_IHQ_0','mp_groundsupport_50_cas_IHQ_1','mp_groundsupport_50_cas_IHQ_2']);
											};
										};
										[_side, 'HQ'] sideChat (format ['Be advised, 1x Missiles Strike (CAS) inbound to Grid ''%1''!', (mapGridPosition (_pos))]);
									};
								}] remoteExec ['bis_fnc_call',0,false];
								[_pos,_side,_dir, _markerID, _markerIDArea] spawn {
									params ['_pos','_side','_dir', '_markerID', '_markerIDArea'];
									private ['_vehType'];
									if ((side player) == west) then {
										_vehType = 'B_Plane_CAS_01_F';
									} else {
										if ((side player) == east) then {
											_vehType = 'O_Plane_CAS_02_F';
										} else {
											_vehType = 'I_Plane_Fighter_03_CAS_F';
										};
									}; 
									 
									[[_pos,_vehType],{ 
										params ['_pos','_vehType']; 
										_logic = (([AGLtoASL _pos, 'Land_HelipadEmpty_F', 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_logic setVariable ['vehicle',_vehType]; 
										_logic setVariable ['type',1]; 
										[_logic,nil,true] call BIS_fnc_moduleCAS; 
										deleteVehicle _logic; 
									}] remoteExec ['bis_fnc_call',2,false];
									sleep 30;
									deleteMarker _markerID;
									deleteMarker _markerIDArea;
								};
							"]] call BIS_fnc_addCommMenuItem)];
							_entity setVariable ["_supportMissile",true];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now has access to the Missiles Strike (CAS) support!", (name _entity)];
					};
				} else {
					if (!((_entity getVariable ["_supportMissile_ItemID",-1]) == -1)) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							[_entity, (_entity getVariable ["_supportMissile_ItemID",-1])] call BIS_fnc_removeCommMenuItem;
							_entity setVariable ["_supportMissile_ItemID",-1];
							_entity setVariable ["_supportMissile",false];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now no longer has access to the Missiles Strike (CAS) support!", (name _entity)];
					};
				};
				
				if (_supportBoth) then {
					if ((_entity getVariable ["_supportBoth_ItemID",-1]) == -1) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							_entity setVariable ["_supportBoth_ItemID", ([_entity,"Call",["Guns and Missiles Strike (CAS)"],["
								Support_fnc_getScreenPosition = {
									params [['_screenPos',getMousePosition,[[]],2]];

									if(visibleMap) then {
										private _ctrlMap = findDisplay 12 displayCtrl 51;
										private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
										_position = (_pos2D + [0]);
										_position
									} else {
										private _position = screenToWorld [0.5,0.5];
										_position
									};
								};
								_pos = [] call Support_fnc_getScreenPosition;
								_side = side player;
								
								private ['_markerColor'];
								if (_side == west) then {
									_markerColor = 'colorBLUFOR';
								} else {
									if (_side == east) then {
										_markerColor = 'colorOPFOR';
									} else {
										if (_side == independent) then {
											_markerColor = 'colorIndependent';
										} else {
											_markerColor = 'colorCivilian';
										};
									};
								};
								_markerID = format ['markerBothCAS_%1_%2', (mapGridPosition (_pos)), time];
								_markerIDArea = format ['areaBothCAS_%1_%2', (mapGridPosition (_pos)), time];
								format ['|%1|%2|%3|ICON|[1,1]|0|Solid|%4|1|%5', _markerID, _pos, 'hd_dot', _markerColor, '1x Guns & Missiles Strike (CAS)'] call BIS_fnc_stringToMarker;
								format ['|%1|%2|%3|RECTANGLE|[50,100]|0|FDiagonal|%4|1|%5', _markerIDArea, _pos, 'hd_dot', _markerColor, ''] call BIS_fnc_stringToMarker;
								
								[[_pos,_side],{
									params ['_pos','_side'];
									if (side player == _side) then {
										if (_side == west) then {
											player sideRadio (selectRandom ['mp_groundsupport_50_cas_BHQ_0','mp_groundsupport_50_cas_BHQ_1','mp_groundsupport_50_cas_BHQ_2']);
										} else {
											if (_side == east) then {
												player sideRadio (selectRandom ['mp_groundsupport_50_cas_OHQ_0','mp_groundsupport_50_cas_OHQ_1','mp_groundsupport_50_cas_OHQ_2']);
											} else {
												player sideRadio (selectRandom ['mp_groundsupport_50_cas_IHQ_0','mp_groundsupport_50_cas_IHQ_1','mp_groundsupport_50_cas_IHQ_2']);
											};
										};
										[_side, 'HQ'] sideChat (format ['Be advised, 1x Guns & Missiles Strike (CAS) inbound to Grid ''%1''!', (mapGridPosition (_pos))]);
									};
								}] remoteExec ['bis_fnc_call',0,false];
								[_pos,_side,_dir, _markerID, _markerIDArea] spawn {
									params ['_pos','_side','_dir', '_markerID', '_markerIDArea'];
									private ['_vehType'];
									if ((side player) == west) then {
										_vehType = 'B_Plane_CAS_01_F';
									} else {
										if ((side player) == east) then {
											_vehType = 'O_Plane_CAS_02_F';
										} else {
											_vehType = 'I_Plane_Fighter_03_CAS_F';
										};
									}; 
									 
									[[_pos,_vehType],{ 
										params ['_pos','_vehType']; 
										_logic = (([AGLtoASL _pos, 'Land_HelipadEmpty_F', 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_logic setVariable ['vehicle',_vehType]; 
										_logic setVariable ['type',2]; 
										[_logic,nil,true] call BIS_fnc_moduleCAS; 
										deleteVehicle _logic; 
									}] remoteExec ['bis_fnc_call',2,false];
									sleep 30;
									deleteMarker _markerID;
									deleteMarker _markerIDArea;
								};
							"]] call BIS_fnc_addCommMenuItem)];
							_entity setVariable ["_supportBoth",true];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now has access to the Guns & Missiles Strike (CAS) support!", (name _entity)];
					};
				} else {
					if (!((_entity getVariable ["_supportBoth_ItemID",-1]) == -1)) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							[_entity, (_entity getVariable ["_supportBoth_ItemID",-1])] call BIS_fnc_removeCommMenuItem;
							_entity setVariable ["_supportBoth_ItemID",-1];
							_entity setVariable ["_supportBoth",false];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now no longer has access to the Guns & Missiles Strike (CAS) support!", (name _entity)];
					};
				};
				
				if (_supportBomb) then {
					if ((_entity getVariable ["_supportBomb_ItemID",-1]) == -1) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							_entity setVariable ["_supportBomb_ItemID", ([_entity,"Call",["Bomb Strike (CAS)"],["
								Support_fnc_getScreenPosition = {
									params [['_screenPos',getMousePosition,[[]],2]];

									if(visibleMap) then {
										private _ctrlMap = findDisplay 12 displayCtrl 51;
										private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
										_position = (_pos2D + [0]);
										_position
									} else {
										private _position = screenToWorld [0.5,0.5];
										_position
									};
								};
								_pos = [] call Support_fnc_getScreenPosition;
								_side = side player;
								
								private ['_markerColor'];
								if (_side == west) then {
									_markerColor = 'colorBLUFOR';
								} else {
									if (_side == east) then {
										_markerColor = 'colorOPFOR';
									} else {
										if (_side == independent) then {
											_markerColor = 'colorIndependent';
										} else {
											_markerColor = 'colorCivilian';
										};
									};
								};
								_markerID = format ['markerBombCAS_%1_%2', (mapGridPosition (_pos)), time];
								_markerIDArea = format ['areaBombCAS_%1_%2', (mapGridPosition (_pos)), time];
								format ['|%1|%2|%3|ICON|[1,1]|0|Solid|%4|1|%5', _markerID, _pos, 'hd_dot', _markerColor, '1x Bomb Strike (CAS)'] call BIS_fnc_stringToMarker;
								format ['|%1|%2|%3|RECTANGLE|[50,100]|0|FDiagonal|%4|1|%5', _markerIDArea, _pos, 'hd_dot', _markerColor, ''] call BIS_fnc_stringToMarker;
								
								[[_pos,_side],{
									params ['_pos','_side'];
									if (side player == _side) then {
										if (_side == west) then {
											player sideRadio (selectRandom ['mp_groundsupport_50_cas_BHQ_0','mp_groundsupport_50_cas_BHQ_1','mp_groundsupport_50_cas_BHQ_2']);
										} else {
											if (_side == east) then {
												player sideRadio (selectRandom ['mp_groundsupport_50_cas_OHQ_0','mp_groundsupport_50_cas_OHQ_1','mp_groundsupport_50_cas_OHQ_2']);
											} else {
												player sideRadio (selectRandom ['mp_groundsupport_50_cas_IHQ_0','mp_groundsupport_50_cas_IHQ_1','mp_groundsupport_50_cas_IHQ_2']);
											};
										};
										[_side, 'HQ'] sideChat (format ['Be advised, 1x Bomb Strike (CAS) inbound to Grid ''%1''!', (mapGridPosition (_pos))]);
									};
								}] remoteExec ['bis_fnc_call',0,false];
								[_pos,_side,_dir, _markerID, _markerIDArea] spawn {
									params ['_pos','_side','_dir', '_markerID', '_markerIDArea'];
									private ['_vehType'];
									if ((side player) == west) then {
										_vehType = 'B_Plane_CAS_01_F';
									} else {
										if ((side player) == east) then {
											_vehType = 'O_Plane_CAS_02_F';
										} else {
											_vehType = 'I_Plane_Fighter_03_CAS_F';
										};
									}; 
									 
									[[_pos,_vehType],{ 
										params ['_pos','_vehType']; 
										_logic = (([AGLtoASL _pos, 'Land_HelipadEmpty_F', 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_logic setVariable ['vehicle',_vehType]; 
										_logic setVariable ['type',3]; 
										[_logic,nil,true] call BIS_fnc_moduleCAS; 
										deleteVehicle _logic; 
									}] remoteExec ['bis_fnc_call',2,false];
									sleep 30;
									deleteMarker _markerID;
									deleteMarker _markerIDArea;
								};
							"]] call BIS_fnc_addCommMenuItem)];
							_entity setVariable ["_supportBomb",true];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now has access to the Bomb Strike (CAS) support!", (name _entity)];
					};
				} else {
					if (!((_entity getVariable ["_supportBomb_ItemID",-1]) == -1)) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							[_entity, (_entity getVariable ["_supportBomb_ItemID",-1])] call BIS_fnc_removeCommMenuItem;
							_entity setVariable ["_supportBomb_ItemID",-1];
							_entity setVariable ["_supportBomb",false];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now no longer has access to the Bomb Strike (CAS) support!", (name _entity)];
					};
				};
				
				if (_supportTruck) then {
					if ((_entity getVariable ["_supportTruck_ItemID",-1]) == -1) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							_entity setVariable ["_supportTruck_ItemID", ([_entity,"Call",["Truck Airdrop (1 HMG)"],["
								Support_fnc_getScreenPosition = {
									params [['_screenPos',getMousePosition,[[]],2]];

									if(visibleMap) then {
										private _ctrlMap = findDisplay 12 displayCtrl 51;
										private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
										_position = (_pos2D + [0]);
										_position
									} else {
										private _position = screenToWorld [0.5,0.5];
										_position
									};
								};
								_pos = [] call Support_fnc_getScreenPosition;
								_side = side player;
								[[_pos,_side],{
									params ['_pos','_side'];
									if ((side player) == _side) then {
										if (_side == west) then {
											player sideRadio (selectRandom ['mp_groundsupport_01_slingloadrequested_BHQ_0','mp_groundsupport_01_slingloadrequested_BHQ_1','mp_groundsupport_01_slingloadrequested_BHQ_2']);
										} else {
											if (_side == east) then {
												player sideRadio (selectRandom ['mp_groundsupport_01_slingloadrequested_OHQ_0','mp_groundsupport_01_slingloadrequested_OHQ_1','mp_groundsupport_01_slingloadrequested_OHQ_2']);
											} else {
												player sideRadio (selectRandom ['mp_groundsupport_01_slingloadrequested_IHQ_0','mp_groundsupport_01_slingloadrequested_IHQ_1','mp_groundsupport_01_slingloadrequested_IHQ_2']);
											};
										};
										[_side, 'HQ'] sideChat (format ['Be advised, 1x HMG Truck Airdrop inbound to Grid ''%1''!', (mapGridPosition (_pos))]);
									};
								}] remoteExec ['bis_fnc_call',0,false];
								[_pos,_side] spawn {
									params ['_pos','_side'];
									private ['_vehType','_dropLoad','_doorAnim'];
									if (_side == west) then {
										_vehType = 'B_T_VTOL_01_vehicle_F';
										_doorAnim = 'Door_1_source';
										if ((worldName == 'Tanoa') || (worldName == 'Enoch')) then {
											_dropLoad = 'B_T_LSV_01_armed_F';
										} else {
											_dropLoad = 'B_LSV_01_armed_F';
										};
									} else {
										if (_side == east) then {
											_vehType = 'B_T_VTOL_01_armed_blue_F';
											_doorAnim = 'Door_1_source';
											if ((worldName == 'Tanoa') || (worldName == 'Enoch')) then {
												_dropLoad = 'O_T_LSV_02_armed_F';
											} else {
												_dropLoad = 'O_LSV_02_armed_F';
											};
										} else {
											_vehType = 'B_T_VTOL_01_armed_blue_F';
											_doorAnim = 'Door_1_source';
											if ((worldName == 'Altis') || (worldName == 'Malden') || (worldName == 'Stratis')) then {
												_dropLoad = 'I_MRAP_03_hmg_F';
											} else {
												_dropLoad = 'I_G_Offroad_01_armed_F';
											};
										};
									};

									_carrier = (([[_pos select 0,(_pos select 1)-2500,150],0,_vehType,_side] call BIS_fnc_spawnVehicle) select 0);
									_carrier flyInHeightASL [150, 150, 150];
									_grp = group (driver _carrier);
									_grp setCombatMode 'BLUE';
									_grp allowFleeing 0;
									{
										_x setskill ['courage',1];
										_x disableAI 'FSM'; 
										_x disableAI 'TARGET'; 
										_x disableAI 'AUTOTARGET'; 
										_x disableAI 'AUTOCOMBAT';
									} forEach units _grp;
									
									_wayPointMove = _grp addWaypoint [[(_pos select 0),(_pos select 1),150],0]; 
									_wayPointMove setWaypointType 'MOVE';
									_grp setCurrentWaypoint _wayPointMove;

									waitUntil {((_carrier distance2D _pos) < 300) and (alive _carrier)};

									_carrier animateDoor [_doorAnim,1];

									waitUntil {((_carrier distance2D _pos) < 50) and (alive _carrier)};

									_dir = (getDir _carrier);
									_dropPos = position _carrier getPos [10,_dir+180];

									_para = (([AGLtoASL [0,0,300], 'B_Parachute_02_F', 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
									_para setMass 100;
									_para allowDamage false;
									_para setPosATL [(_dropPos select 0),(_dropPos select 1),(getPosATL _carrier select 2)];

									_veh = (([AGLtoASL [0,0,80], _dropLoad, 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
									_veh allowDamage false;
									_veh attachTo [_para,[0,0,0]];

									_carrier animateDoor [_doorAnim,0];
									
									deleteWaypoint _wayPointMove;
									_wayPointMove2 = _grp addWaypoint [[(_pos select 0),(_pos select 1)+6000,150],0]; 
									_wayPointMove2 setWaypointType 'MOVE';
									_wayPointMove2 setWaypointStatements ['true', '{deleteVehicle _x} forEach crew (vehicle this) + [vehicle this];'];
									_grp setCurrentWaypoint _wayPointMove2;

									waitUntil {((((position _veh) select 2) < 0.6) || (isNil '_para'))};
									detach _veh;
									_veh enableSimulationGlobal true;
									_veh enableSimulation true;
									_veh allowDamage true;  
									sleep 0.3;
									_veh setPos [(position _veh) select 0, (position _veh) select 1, 0.6];
									deleteVehicle _para;

									_smoke = (([AGLtoASL (position _veh), 'SmokeShellRed', 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
									_smoke attachTo [_veh,[0,0,0]];
									_light = (([AGLtoASL (position _veh), 'Chemlight_green', 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
									_light attachTo [_veh,[0,0,0]];
									detach _smoke;
									detach _light;
									
									[[(getPos _veh),_side],{
										params ['_pos','_side'];
										if ((side player) == _side) then {
											if (_side == west) then {
												player sideRadio (selectRandom ['mp_groundsupport_10_slingloadsucceeded_BHQ_0','mp_groundsupport_10_slingloadsucceeded_BHQ_1','mp_groundsupport_10_slingloadsucceeded_BHQ_2']);
											} else {
												if (_side == east) then {
													player sideRadio (selectRandom ['mp_groundsupport_10_slingloadsucceeded_OHQ_0','mp_groundsupport_10_slingloadsucceeded_OHQ_1','mp_groundsupport_10_slingloadsucceeded_OHQ_2']);
												} else {
													player sideRadio (selectRandom ['mp_groundsupport_10_slingloadsucceeded_IHQ_0','mp_groundsupport_10_slingloadsucceeded_IHQ_1','mp_groundsupport_10_slingloadsucceeded_IHQ_2']);
												};
											};
											[_side, 'HQ'] sideChat (format ['Be advised, 1x HMG Truck Airdrop successfully landed at Grid ''%1''!', (mapGridPosition (_pos))]);
										};
									}] remoteExec ['bis_fnc_call',0,false];
									
									private ['_markerColor'];
									if (_side == west) then {
										_markerColor = 'colorBLUFOR';
									} else {
										if (_side == east) then {
											_markerColor = 'colorOPFOR';
										} else {
											if (_side == independent) then {
												_markerColor = 'colorIndependent';
											} else {
												_markerColor = 'colorCivilian';
											};
										};
									};
									_pos = (getPos _veh);
									_markerID = format ['markerTruck_%1_%2', (mapGridPosition _pos), time];
									format ['|%1|%2|%3|ICON|[1,1]|0|Solid|%4|1|%5', _markerID, _pos, 'hd_dot', _markerColor, '1x HMG Truck Airdrop'] call BIS_fnc_stringToMarker;
									waitUntil {((getPos _veh) distance2D _pos) > 15};
									deleteMarker _markerID;
								};
							"]] call BIS_fnc_addCommMenuItem)];
							_entity setVariable ["_supportTruck",true];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now has access to the Truck Airdrop support (1 HMG)!", (name _entity)];
					};
				} else {
					if (!((_entity getVariable ["_supportTruck_ItemID",-1]) == -1)) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							[_entity, (_entity getVariable ["_supportTruck_ItemID",-1])] call BIS_fnc_removeCommMenuItem;
							_entity setVariable ["_supportTruck_ItemID",-1];
							_entity setVariable ["_supportTruck",false];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now no longer has access to the Truck Airdrop support (1 HMG)!", (name _entity)];
					};
				};
				
				if (_supportTransport) then {
					if ((_entity getVariable ["_supportTransport_ItemID",-1]) == -1) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							_entity setVariable ["_supportTransport_ItemID", ([_entity,"Call",["Transport Truck Airdrop"],["
								Support_fnc_getScreenPosition = {
									params [['_screenPos',getMousePosition,[[]],2]];

									if(visibleMap) then {
										private _ctrlMap = findDisplay 12 displayCtrl 51;
										private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
										_position = (_pos2D + [0]);
										_position
									} else {
										private _position = screenToWorld [0.5,0.5];
										_position
									};
								};
								_pos = [] call Support_fnc_getScreenPosition;
								_side = side player;
								[[_pos,_side],{
									params ['_pos','_side'];
									if (side player == _side) then {
										if (_side == west) then {
											player sideRadio (selectRandom ['mp_groundsupport_01_slingloadrequested_BHQ_0','mp_groundsupport_01_slingloadrequested_BHQ_1','mp_groundsupport_01_slingloadrequested_BHQ_2']);
										} else {
											if (_side == east) then {
												player sideRadio (selectRandom ['mp_groundsupport_01_slingloadrequested_OHQ_0','mp_groundsupport_01_slingloadrequested_OHQ_1','mp_groundsupport_01_slingloadrequested_OHQ_2']);
											} else {
												player sideRadio (selectRandom ['mp_groundsupport_01_slingloadrequested_IHQ_0','mp_groundsupport_01_slingloadrequested_IHQ_1','mp_groundsupport_01_slingloadrequested_IHQ_2']);
											};
										};
										[_side, 'HQ'] sideChat (format ['Be advised, 1x Transport Truck Airdrop inbound to Grid ''%1''!', (mapGridPosition (_pos))]);
									};
								}] remoteExec ['bis_fnc_call',0,false];
								[_pos,_side] spawn {
									params ['_pos','_side'];
									private ['_vehType','_dropLoad','_doorAnim'];
									if (_side == west) then {
										_vehType = 'B_T_VTOL_01_vehicle_F';
										_doorAnim = 'Door_1_source';
										if ((worldName == 'Tanoa') || (worldName == 'Enoch')) then {
											_dropLoad = 'B_T_Truck_01_covered_F';
										} else {
											_dropLoad = 'B_Truck_01_covered_F';
										};
									} else {
										if (_side == east) then {
											_vehType = 'B_T_VTOL_01_armed_blue_F';
											_doorAnim = 'Door_1_source';
											if ((worldName == 'Tanoa') || (worldName == 'Enoch')) then {
												_dropLoad = 'O_T_Truck_03_covered_ghex_F';
											} else {
												_dropLoad = 'O_Truck_03_covered_F';
											};
										} else {
											_vehType = 'B_T_VTOL_01_armed_blue_F';
											_doorAnim = 'Door_1_source';
											if ((worldName == 'Altis') || (worldName == 'Malden') || (worldName == 'Stratis')) then {
												_dropLoad = 'I_Truck_02_covered_F';
											} else {
												_dropLoad = 'I_G_Offroad_01_F';
											};
										};
									};

									_carrier = (([[_pos select 0,(_pos select 1)-2500,150],0,_vehType,_side] call BIS_fnc_spawnVehicle) select 0);
									_carrier flyInHeightASL [150, 150, 150];
									_grp = group (driver _carrier);
									_grp setCombatMode 'BLUE';
									_grp allowFleeing 0;
									{
										_x setskill ['courage',1];
										_x disableAI 'FSM'; 
										_x disableAI 'TARGET'; 
										_x disableAI 'AUTOTARGET'; 
										_x disableAI 'AUTOCOMBAT';
									} forEach units _grp;
									
									_wayPointMove = _grp addWaypoint [[(_pos select 0),(_pos select 1),150],0]; 
									_wayPointMove setWaypointType 'MOVE';
									_grp setCurrentWaypoint _wayPointMove;

									waitUntil {((_carrier distance2D _pos) < 300) and (alive _carrier)};

									_carrier animateDoor [_doorAnim,1];

									waitUntil {((_carrier distance2D _pos) < 50) and (alive _carrier)};

									_dir = (getDir _carrier);
									_dropPos = position _carrier getPos [10,_dir+180];

									_para = (([AGLtoASL [0,0,300], 'B_Parachute_02_F', 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
									_para setMass 100;
									_para allowDamage false;
									_para setPosATL [(_dropPos select 0),(_dropPos select 1),(getPosATL _carrier select 2)];

									_veh = (([AGLtoASL [0,0,80], _dropLoad, 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
									_veh allowDamage false;
									_veh attachTo [_para,[0,0,0]];

									_carrier animateDoor [_doorAnim,0];
									
									deleteWaypoint _wayPointMove;
									_wayPointMove2 = _grp addWaypoint [[(_pos select 0),(_pos select 1)+6000,150],0]; 
									_wayPointMove2 setWaypointType 'MOVE';
									_wayPointMove2 setWaypointStatements ['true', '{deleteVehicle _x} forEach crew (vehicle this) + [vehicle this];'];
									_grp setCurrentWaypoint _wayPointMove2;

									waitUntil {((((position _veh) select 2) < 0.6) || (isNil '_para'))};
									detach _veh;
									_veh enableSimulationGlobal true;
									_veh enableSimulation true;
									_veh allowDamage true;  
									sleep 0.3;
									_veh setPos [(position _veh) select 0, (position _veh) select 1, 0.6];
									deleteVehicle _para;

									_smoke = (([AGLtoASL (position _veh), 'SmokeShellRed', 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
									_smoke attachTo [_veh,[0,0,0]];
									_light = (([AGLtoASL (position _veh), 'Chemlight_green', 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
									_light attachTo [_veh,[0,0,0]];
									detach _smoke;
									detach _light;
									
									[[(getPos _veh),_side],{
										params ['_pos','_side'];
										if ((side player) == _side) then {
											if (_side == west) then {
												player sideRadio (selectRandom ['mp_groundsupport_10_slingloadsucceeded_BHQ_0','mp_groundsupport_10_slingloadsucceeded_BHQ_1','mp_groundsupport_10_slingloadsucceeded_BHQ_2']);
											} else {
												if (_side == east) then {
													player sideRadio (selectRandom ['mp_groundsupport_10_slingloadsucceeded_OHQ_0','mp_groundsupport_10_slingloadsucceeded_OHQ_1','mp_groundsupport_10_slingloadsucceeded_OHQ_2']);
												} else {
													player sideRadio (selectRandom ['mp_groundsupport_10_slingloadsucceeded_IHQ_0','mp_groundsupport_10_slingloadsucceeded_IHQ_1','mp_groundsupport_10_slingloadsucceeded_IHQ_2']);
												};
											};
											[_side, 'HQ'] sideChat (format ['Be advised, 1x Transport Truck Airdrop successfully landed at Grid ''%1''!', (mapGridPosition (_pos))]);
										};
									}] remoteExec ['bis_fnc_call',0,false];
									
									private ['_markerColor'];
									if (_side == west) then {
										_markerColor = 'colorBLUFOR';
									} else {
										if (_side == east) then {
											_markerColor = 'colorOPFOR';
										} else {
											if (_side == independent) then {
												_markerColor = 'colorIndependent';
											} else {
												_markerColor = 'colorCivilian';
											};
										};
									};
									_pos = (getPos _veh);
									_markerID = format ['markerTransport_%1_%2', (mapGridPosition _pos), time];
									format ['|%1|%2|%3|ICON|[1,1]|0|Solid|%4|1|%5', _markerID, _pos, 'hd_dot', _markerColor, '1x Transport Truck Airdrop'] call BIS_fnc_stringToMarker;
									waitUntil {((getPos _veh) distance2D _pos) > 15};
									deleteMarker _markerID;
								};
							"]] call BIS_fnc_addCommMenuItem)];
							_entity setVariable ["_supportTransport",true];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now has access to the Transport Truck Airdrop support!", (name _entity)];
					};
				} else {
					if (!((_entity getVariable ["_supportTransport_ItemID",-1]) == -1)) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							[_entity, (_entity getVariable ["_supportTransport_ItemID",-1])] call BIS_fnc_removeCommMenuItem;
							_entity setVariable ["_supportTransport_ItemID",-1];
							_entity setVariable ["_supportTransport",false];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now no longer has access to the Transport Truck Airdrop support!", (name _entity)];
					};
				};
				
				if (_supportAPC) then {
					if ((_entity getVariable ["_supportAPC_ItemID",-1]) == -1) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							_entity setVariable ["_supportAPC_ItemID", ([_entity,"Call",["APC Airdrop"],["
								Support_fnc_getScreenPosition = {
									params [['_screenPos',getMousePosition,[[]],2]];

									if(visibleMap) then {
										private _ctrlMap = findDisplay 12 displayCtrl 51;
										private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
										_position = (_pos2D + [0]);
										_position
									} else {
										private _position = screenToWorld [0.5,0.5];
										_position
									};
								};
								_pos = [] call Support_fnc_getScreenPosition;
								_side = side player;
								[[_pos,_side],{
									params ['_pos','_side'];
									if (side player == _side) then {
										if (_side == west) then {
											player sideRadio (selectRandom ['mp_groundsupport_01_slingloadrequested_BHQ_0','mp_groundsupport_01_slingloadrequested_BHQ_1','mp_groundsupport_01_slingloadrequested_BHQ_2']);
										} else {
											if (_side == east) then {
												player sideRadio (selectRandom ['mp_groundsupport_01_slingloadrequested_OHQ_0','mp_groundsupport_01_slingloadrequested_OHQ_1','mp_groundsupport_01_slingloadrequested_OHQ_2']);
											} else {
												player sideRadio (selectRandom ['mp_groundsupport_01_slingloadrequested_IHQ_0','mp_groundsupport_01_slingloadrequested_IHQ_1','mp_groundsupport_01_slingloadrequested_IHQ_2']);
											};
										};
										[_side, 'HQ'] sideChat (format ['Be advised, 1x APC Airdrop inbound to Grid ''%1''!', (mapGridPosition (_pos))]);
									};
								}] remoteExec ['bis_fnc_call',0,false];
								[_pos,_side] spawn {
									params ['_pos','_side'];
									private ['_vehType','_dropLoad','_doorAnim'];
									if (_side == west) then {
										_vehType = 'B_T_VTOL_01_vehicle_F';
										_doorAnim = 'Door_1_source';
										if ((worldName == 'Tanoa') || (worldName == 'Enoch')) then {
											_dropLoad = 'B_T_APC_Wheeled_01_cannon_F';
										} else {
											_dropLoad = 'B_APC_Wheeled_01_cannon_F';
										};
									} else {
										if (_side == east) then {
											_vehType = 'B_T_VTOL_01_armed_blue_F';
											_doorAnim = 'Door_1_source';
											if ((worldName == 'Tanoa') || (worldName == 'Enoch')) then {
												_dropLoad = 'O_T_APC_Tracked_02_cannon_ghex_F';
											} else {
												_dropLoad = 'O_APC_Tracked_02_cannon_F';
											};
										} else {
											_vehType = 'B_T_VTOL_01_armed_blue_F';
											_doorAnim = 'Door_1_source';
											if ((worldName == 'Altis') || (worldName == 'Malden') || (worldName == 'Stratis')) then {
												_dropLoad = 'I_APC_Wheeled_03_cannon_F';
											} else {
												_dropLoad = 'I_E_APC_tracked_03_cannon_F';
											};
										};
									};

									_carrier = (([[_pos select 0,(_pos select 1)-2500,150],0,_vehType,_side] call BIS_fnc_spawnVehicle) select 0);
									_carrier flyInHeightASL [150, 150, 150];
									_grp = group (driver _carrier);
									_grp setCombatMode 'BLUE';
									_grp allowFleeing 0;
									{
										_x setskill ['courage',1];
										_x disableAI 'FSM'; 
										_x disableAI 'TARGET'; 
										_x disableAI 'AUTOTARGET'; 
										_x disableAI 'AUTOCOMBAT';
									} forEach units _grp;
									
									_wayPointMove = _grp addWaypoint [[(_pos select 0),(_pos select 1),150],0]; 
									_wayPointMove setWaypointType 'MOVE';
									_grp setCurrentWaypoint _wayPointMove;

									waitUntil {((_carrier distance2D _pos) < 300) and (alive _carrier)};

									_carrier animateDoor [_doorAnim,1];

									waitUntil {((_carrier distance2D _pos) < 50) and (alive _carrier)};

									_dir = (getDir _carrier);
									_dropPos = position _carrier getPos [10,_dir+180];

									_para = (([AGLtoASL [0,0,300], 'B_Parachute_02_F', 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
									_para setMass 100;
									_para allowDamage false;
									_para setPosATL [(_dropPos select 0),(_dropPos select 1),(getPosATL _carrier select 2)];

									_veh = (([AGLtoASL [0,0,80], _dropLoad, 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
									_veh allowDamage false;
									_veh attachTo [_para,[0,0,0]];

									_carrier animateDoor [_doorAnim,0];
									
									deleteWaypoint _wayPointMove;
									_wayPointMove2 = _grp addWaypoint [[(_pos select 0),(_pos select 1)+6000,150],0]; 
									_wayPointMove2 setWaypointType 'MOVE';
									_wayPointMove2 setWaypointStatements ['true', '{deleteVehicle _x} forEach crew (vehicle this) + [vehicle this];'];
									_grp setCurrentWaypoint _wayPointMove2;

									waitUntil {((((position _veh) select 2) < 0.6) || (isNil '_para'))};
									detach _veh;
									_veh enableSimulationGlobal true;
									_veh enableSimulation true;
									_veh allowDamage true;  
									sleep 0.3;
									_veh setPos [(position _veh) select 0, (position _veh) select 1, 0.6];
									deleteVehicle _para;

									_smoke = (([AGLtoASL (position _veh), 'SmokeShellRed', 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
									_smoke attachTo [_veh,[0,0,0]];
									_light = (([AGLtoASL (position _veh), 'Chemlight_green', 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
									_light attachTo [_veh,[0,0,0]];
									detach _smoke;
									detach _light;
									
									[[(getPos _veh),_side],{
										params ['_pos','_side'];
										if ((side player) == _side) then {
											if (_side == west) then {
												player sideRadio (selectRandom ['mp_groundsupport_10_slingloadsucceeded_BHQ_0','mp_groundsupport_10_slingloadsucceeded_BHQ_1','mp_groundsupport_10_slingloadsucceeded_BHQ_2']);
											} else {
												if (_side == east) then {
													player sideRadio (selectRandom ['mp_groundsupport_10_slingloadsucceeded_OHQ_0','mp_groundsupport_10_slingloadsucceeded_OHQ_1','mp_groundsupport_10_slingloadsucceeded_OHQ_2']);
												} else {
													player sideRadio (selectRandom ['mp_groundsupport_10_slingloadsucceeded_IHQ_0','mp_groundsupport_10_slingloadsucceeded_IHQ_1','mp_groundsupport_10_slingloadsucceeded_IHQ_2']);
												};
											};
											[_side, 'HQ'] sideChat (format ['Be advised, 1x APC Airdrop successfully landed at Grid ''%1''!', (mapGridPosition (_pos))]);
										};
									}] remoteExec ['bis_fnc_call',0,false];
									
									private ['_markerColor'];
									if (_side == west) then {
										_markerColor = 'colorBLUFOR';
									} else {
										if (_side == east) then {
											_markerColor = 'colorOPFOR';
										} else {
											if (_side == independent) then {
												_markerColor = 'colorIndependent';
											} else {
												_markerColor = 'colorCivilian';
											};
										};
									};
									_pos = (getPos _veh);
									_markerID = format ['markerAPC_%1_%2', (mapGridPosition _pos), time];
									format ['|%1|%2|%3|ICON|[1,1]|0|Solid|%4|1|%5', _markerID, _pos, 'hd_dot', _markerColor, '1x APC Airdrop'] call BIS_fnc_stringToMarker;
									waitUntil {((getPos _veh) distance2D _pos) > 15};
									deleteMarker _markerID;
								};
							"]] call BIS_fnc_addCommMenuItem)];
							_entity setVariable ["_supportAPC",true];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now has access to the APC Airdrop support!", (name _entity)];
					};
				} else {
					if (!((_entity getVariable ["_supportAPC_ItemID",-1]) == -1)) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							[_entity, (_entity getVariable ["_supportAPC_ItemID",-1])] call BIS_fnc_removeCommMenuItem;
							_entity setVariable ["_supportAPC_ItemID",-1];
							_entity setVariable ["_supportAPC",false];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now no longer has access to the APC Airdrop support!", (name _entity)];
					};
				};
				
				if (_supportTank) then {
					if ((_entity getVariable ["_supportTank_ItemID",-1]) == -1) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							_entity setVariable ["_supportTank_ItemID", ([_entity,"Call",["Tank Airdrop"],["
								Support_fnc_getScreenPosition = {
									params [['_screenPos',getMousePosition,[[]],2]];

									if(visibleMap) then {
										private _ctrlMap = findDisplay 12 displayCtrl 51;
										private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
										_position = (_pos2D + [0]);
										_position
									} else {
										private _position = screenToWorld [0.5,0.5];
										_position
									};
								};
								_pos = [] call Support_fnc_getScreenPosition;
								_side = side player;
								[[_pos,_side],{
									params ['_pos','_side'];
									if ((side player) == _side) then {
										if (_side == west) then {
											player sideRadio (selectRandom ['mp_groundsupport_01_slingloadrequested_BHQ_0','mp_groundsupport_01_slingloadrequested_BHQ_1','mp_groundsupport_01_slingloadrequested_BHQ_2']);
										} else {
											if (_side == east) then {
												player sideRadio (selectRandom ['mp_groundsupport_01_slingloadrequested_OHQ_0','mp_groundsupport_01_slingloadrequested_OHQ_1','mp_groundsupport_01_slingloadrequested_OHQ_2']);
											} else {
												player sideRadio (selectRandom ['mp_groundsupport_01_slingloadrequested_IHQ_0','mp_groundsupport_01_slingloadrequested_IHQ_1','mp_groundsupport_01_slingloadrequested_IHQ_2']);
											};
										};
										[_side, 'HQ'] sideChat (format ['Be advised, 1x Tank Airdrop inbound to Grid ''%1''!', (mapGridPosition (_pos))]);
									};
								}] remoteExec ['bis_fnc_call',0,false];
								[_pos,_side] spawn {
									params ['_pos','_side'];
									private ['_vehType','_dropLoad','_doorAnim'];
									if (_side == west) then {
										_vehType = 'B_T_VTOL_01_vehicle_F';
										_doorAnim = 'Door_1_source';
										if ((worldName == 'Tanoa') || (worldName == 'Enoch')) then {
											_dropLoad = 'B_T_MBT_01_TUSK_F';
										} else {
											_dropLoad = 'B_MBT_01_TUSK_F';
										};
									} else {
										if (_side == east) then {
											_vehType = 'B_T_VTOL_01_armed_blue_F';
											_doorAnim = 'Door_1_source';
											if ((worldName == 'Tanoa') || (worldName == 'Enoch')) then {
												_dropLoad = 'O_T_MBT_02_cannon_ghex_F';
											} else {
												_dropLoad = 'O_MBT_02_cannon_F';
											};
										} else {
											_vehType = 'B_T_VTOL_01_armed_blue_F';
											_doorAnim = 'Door_1_source';
											_dropLoad = 'I_MBT_03_cannon_F';
										};
									};

									_carrier = (([[_pos select 0,(_pos select 1)-2500,150],0,_vehType,_side] call BIS_fnc_spawnVehicle) select 0);
									_carrier flyInHeightASL [150, 150, 150];
									_grp = group (driver _carrier);
									_grp setCombatMode 'BLUE';
									_grp allowFleeing 0;
									{
										_x setskill ['courage',1];
										_x disableAI 'FSM'; 
										_x disableAI 'TARGET'; 
										_x disableAI 'AUTOTARGET'; 
										_x disableAI 'AUTOCOMBAT';
									} forEach units _grp;
									
									_wayPointMove = _grp addWaypoint [[(_pos select 0),(_pos select 1),150],0]; 
									_wayPointMove setWaypointType 'MOVE';
									_grp setCurrentWaypoint _wayPointMove;

									waitUntil {((_carrier distance2D _pos) < 300) and (alive _carrier)};

									_carrier animateDoor [_doorAnim,1];

									waitUntil {((_carrier distance2D _pos) < 50) and (alive _carrier)};

									_dir = (getDir _carrier);
									_dropPos = position _carrier getPos [10,_dir+180];

									_para = (([AGLtoASL [0,0,300], 'B_Parachute_02_F', 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
									_para setMass 100;
									_para allowDamage false;
									_para setPosATL [(_dropPos select 0),(_dropPos select 1),(getPosATL _carrier select 2)];

									_veh = (([AGLtoASL [0,0,80], _dropLoad, 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
									_veh allowDamage false;
									_veh attachTo [_para,[0,0,0]];

									_carrier animateDoor [_doorAnim,0];
									
									deleteWaypoint _wayPointMove;
									_wayPointMove2 = _grp addWaypoint [[(_pos select 0),(_pos select 1)+6000,150],0]; 
									_wayPointMove2 setWaypointType 'MOVE';
									_wayPointMove2 setWaypointStatements ['true', '{deleteVehicle _x} forEach crew (vehicle this) + [vehicle this];'];
									_grp setCurrentWaypoint _wayPointMove2;

									waitUntil {((((position _veh) select 2) < 0.6) || (isNil '_para'))};
									detach _veh;
									_veh enableSimulationGlobal true;
									_veh enableSimulation true;
									_veh allowDamage true;  
									sleep 0.3;
									_veh setPos [(position _veh) select 0, (position _veh) select 1, 0.6];
									deleteVehicle _para;

									_smoke = (([AGLtoASL (position _veh), 'SmokeShellRed', 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
									_smoke attachTo [_veh,[0,0,0]];
									_light = (([AGLtoASL (position _veh), 'Chemlight_green', 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
									_light attachTo [_veh,[0,0,0]];
									detach _smoke;
									detach _light;
									
									[[(getPos _veh),_side],{
										params ['_pos','_side'];
										if ((side player) == _side) then {
											if (_side == west) then {
												player sideRadio (selectRandom ['mp_groundsupport_10_slingloadsucceeded_BHQ_0','mp_groundsupport_10_slingloadsucceeded_BHQ_1','mp_groundsupport_10_slingloadsucceeded_BHQ_2']);
											} else {
												if (_side == east) then {
													player sideRadio (selectRandom ['mp_groundsupport_10_slingloadsucceeded_OHQ_0','mp_groundsupport_10_slingloadsucceeded_OHQ_1','mp_groundsupport_10_slingloadsucceeded_OHQ_2']);
												} else {
													player sideRadio (selectRandom ['mp_groundsupport_10_slingloadsucceeded_IHQ_0','mp_groundsupport_10_slingloadsucceeded_IHQ_1','mp_groundsupport_10_slingloadsucceeded_IHQ_2']);
												};
											};
											[_side, 'HQ'] sideChat (format ['Be advised, 1x Tank Airdrop successfully landed at Grid ''%1''!', (mapGridPosition (_pos))]);
										};
									}] remoteExec ['bis_fnc_call',0,false];
									
									private ['_markerColor'];
									if (_side == west) then {
										_markerColor = 'colorBLUFOR';
									} else {
										if (_side == east) then {
											_markerColor = 'colorOPFOR';
										} else {
											if (_side == independent) then {
												_markerColor = 'colorIndependent';
											} else {
												_markerColor = 'colorCivilian';
											};
										};
									};
									_pos = (getPos _veh);
									_markerID = format ['markerTank_%1_%2', (mapGridPosition _pos), time];
									format ['|%1|%2|%3|ICON|[1,1]|0|Solid|%4|1|%5', _markerID, _pos, 'hd_dot', _markerColor, '1x Tank Airdrop'] call BIS_fnc_stringToMarker;
									waitUntil {((getPos _veh) distance2D _pos) > 15};
									deleteMarker _markerID;
								};
							"]] call BIS_fnc_addCommMenuItem)];
							_entity setVariable ["_supportTank",true];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now has access to the Tank Airdrop support!", (name _entity)];
					};
				} else {
					if (!((_entity getVariable ["_supportTank_ItemID",-1]) == -1)) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							[_entity, (_entity getVariable ["_supportTank_ItemID",-1])] call BIS_fnc_removeCommMenuItem;
							_entity setVariable ["_supportTank_ItemID",-1];
							_entity setVariable ["_supportTank",false];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now no longer has access to the Tank Airdrop support!", (name _entity)];
					};
				};
				
				if (_supportSpeedboat) then {
					if ((_entity getVariable ["_supportSpeedboat_ItemID",-1]) == -1) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							_entity setVariable ["_supportSpeedboat_ItemID", ([_entity,"Call",["Speedboat Airdrop"],["
								Support_fnc_getScreenPosition = {
									params [['_screenPos',getMousePosition,[[]],2]];

									if(visibleMap) then {
										private _ctrlMap = findDisplay 12 displayCtrl 51;
										private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
										_position = (_pos2D + [0]);
										_position
									} else {
										private _position = screenToWorld [0.5,0.5];
										_position
									};
								};
								_pos = [] call Support_fnc_getScreenPosition;
								if (surfaceIsWater _pos) then {
									_side = side player;
									[[_pos,_side],{
										params ['_pos','_side'];
										if ((side player) == _side) then {
											if (_side == west) then {
												player sideRadio (selectRandom ['mp_groundsupport_01_slingloadrequested_BHQ_0','mp_groundsupport_01_slingloadrequested_BHQ_1','mp_groundsupport_01_slingloadrequested_BHQ_2']);
											} else {
												if (_side == east) then {
													player sideRadio (selectRandom ['mp_groundsupport_01_slingloadrequested_OHQ_0','mp_groundsupport_01_slingloadrequested_OHQ_1','mp_groundsupport_01_slingloadrequested_OHQ_2']);
												} else {
													player sideRadio (selectRandom ['mp_groundsupport_01_slingloadrequested_IHQ_0','mp_groundsupport_01_slingloadrequested_IHQ_1','mp_groundsupport_01_slingloadrequested_IHQ_2']);
												};
											};
											[_side, 'HQ'] sideChat (format ['Be advised, 1x Speedboat Airdrop inbound to Grid ''%1''!', (mapGridPosition (_pos))]);
										};
									}] remoteExec ['bis_fnc_call',0,false];
									[_pos,_side] spawn {
										params ['_pos','_side'];
										private ['_vehType','_dropLoad','_doorAnim'];
										if (_side == west) then {
											_vehType = 'B_T_VTOL_01_vehicle_F';
											_doorAnim = 'Door_1_source';
											if ((worldName == 'Tanoa') || (worldName == 'Enoch')) then {
												_dropLoad = 'B_T_Boat_Armed_01_minigun_F';
											} else {
												_dropLoad = 'B_Boat_Armed_01_minigun_F';
											};
										} else {
											if (_side == east) then {
												_vehType = 'B_T_VTOL_01_armed_blue_F';
												_doorAnim = 'Door_1_source';
												if ((worldName == 'Tanoa') || (worldName == 'Enoch')) then {
													_dropLoad = 'O_T_Boat_Armed_01_hmg_F';
												} else {
													_dropLoad = 'O_Boat_Armed_01_hmg_F';
												};
											} else {
												_vehType = 'B_T_VTOL_01_armed_blue_F';
												_doorAnim = 'Door_1_source';
												_dropLoad = 'I_Boat_Armed_01_minigun_F';
											};
										};

										_carrier = (([[_pos select 0,(_pos select 1)-2500,150],0,_vehType,_side] call BIS_fnc_spawnVehicle) select 0);
										_carrier flyInHeightASL [150, 150, 150];
										_grp = group (driver _carrier);
										_grp setCombatMode 'BLUE';
										_grp allowFleeing 0;
										{
											_x setskill ['courage',1];
											_x disableAI 'FSM'; 
											_x disableAI 'TARGET'; 
											_x disableAI 'AUTOTARGET'; 
											_x disableAI 'AUTOCOMBAT';
										} forEach units _grp;
										
										_wayPointMove = _grp addWaypoint [[(_pos select 0),(_pos select 1),150],0]; 
										_wayPointMove setWaypointType 'MOVE';
										_grp setCurrentWaypoint _wayPointMove;

										waitUntil {((_carrier distance2D _pos) < 300) and (alive _carrier)};

										_carrier animateDoor [_doorAnim,1];

										waitUntil {((_carrier distance2D _pos) < 50) and (alive _carrier)};

										_dir = (getDir _carrier);
										_dropPos = position _carrier getPos [10,_dir+180];

										_para = (([AGLtoASL [0,0,300], 'B_Parachute_02_F', 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
										_para setMass 100;
										_para allowDamage false;
										_para setPosATL [(_dropPos select 0),(_dropPos select 1),(getPosATL _carrier select 2)];

										_veh = (([AGLtoASL [0,0,80], _dropLoad, 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
										_veh allowDamage false;
										_veh attachTo [_para,[0,0,0]];

										_carrier animateDoor [_doorAnim,0];
										
										deleteWaypoint _wayPointMove;
										_wayPointMove2 = _grp addWaypoint [[(_pos select 0),(_pos select 1)+6000,150],0]; 
										_wayPointMove2 setWaypointType 'MOVE';
										_wayPointMove2 setWaypointStatements ['true', '{deleteVehicle _x} forEach crew (vehicle this) + [vehicle this];'];
										_grp setCurrentWaypoint _wayPointMove2;

										waitUntil {((((position _veh) select 2) < 0.6) || (isNil '_para'))};
										detach _veh;
										_veh enableSimulationGlobal true;
										_veh enableSimulation true;
										_veh allowDamage true;  
										sleep 0.3;
										_veh setPos [(position _veh) select 0, (position _veh) select 1, 0.6];
										deleteVehicle _para;

										_smoke = (([AGLtoASL (position _veh), 'SmokeShellRed', 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
										_smoke attachTo [_veh,[0,0,0]];
										_light = (([AGLtoASL (position _veh), 'Chemlight_green', 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
										_light attachTo [_veh,[0,0,0]];
										detach _smoke;
										detach _light;
										
										[[(getPos _veh),_side],{
											params ['_pos','_side'];
											if ((side player) == _side) then {
												if (_side == west) then {
													player sideRadio (selectRandom ['mp_groundsupport_10_slingloadsucceeded_BHQ_0','mp_groundsupport_10_slingloadsucceeded_BHQ_1','mp_groundsupport_10_slingloadsucceeded_BHQ_2']);
												} else {
													if (_side == east) then {
														player sideRadio (selectRandom ['mp_groundsupport_10_slingloadsucceeded_OHQ_0','mp_groundsupport_10_slingloadsucceeded_OHQ_1','mp_groundsupport_10_slingloadsucceeded_OHQ_2']);
													} else {
														player sideRadio (selectRandom ['mp_groundsupport_10_slingloadsucceeded_IHQ_0','mp_groundsupport_10_slingloadsucceeded_IHQ_1','mp_groundsupport_10_slingloadsucceeded_IHQ_2']);
													};
												};
												[_side, 'HQ'] sideChat (format ['Be advised, 1x Speedboat Airdrop successfully landed at Grid ''%1''!', (mapGridPosition (_pos))]);
											};
										}] remoteExec ['bis_fnc_call',0,false];
									
										private ['_markerColor'];
										if (_side == west) then {
											_markerColor = 'colorBLUFOR';
										} else {
											if (_side == east) then {
												_markerColor = 'colorOPFOR';
											} else {
												if (_side == independent) then {
													_markerColor = 'colorIndependent';
												} else {
													_markerColor = 'colorCivilian';
												};
											};
										};
										_pos = (getPos _veh);
										_markerID = format ['markerSpeedboat_%1_%2', (mapGridPosition _pos), time];
										format ['|%1|%2|%3|ICON|[1,1]|0|Solid|%4|1|%5', _markerID, _pos, 'hd_dot', _markerColor, '1x Speedboat Airdrop'] call BIS_fnc_stringToMarker;
										waitUntil {((getPos _veh) distance2D _pos) > 15};
										deleteMarker _markerID;
									};
								} else {
									systemChat '[ LOG ] Airdrop location must be in water not on land!';
									playSound 'addItemFailed';
								};
							"]] call BIS_fnc_addCommMenuItem)];
							_entity setVariable ["_supportSpeedboat",true];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now has access to the Speedboat Airdrop support!", (name _entity)];
					};
				} else {
					if (!((_entity getVariable ["_supportSpeedboat_ItemID",-1]) == -1)) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							[_entity, (_entity getVariable ["_supportSpeedboat_ItemID",-1])] call BIS_fnc_removeCommMenuItem;
							_entity setVariable ["_supportSpeedboat_ItemID",-1];
							_entity setVariable ["_supportSpeedboat",false];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now no longer has access to the Speedboat Airdrop support!", (name _entity)];
					};
				};
				
				if (_supportSDV) then {
					if ((_entity getVariable ["_supportSDV_ItemID",-1]) == -1) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							_entity setVariable ["_supportSDV_ItemID", ([_entity,"Call",["SDV Airdrop"],["
								Support_fnc_getScreenPosition = {
									params [['_screenPos',getMousePosition,[[]],2]];

									if(visibleMap) then {
										private _ctrlMap = findDisplay 12 displayCtrl 51;
										private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
										_position = (_pos2D + [0]);
										_position
									} else {
										private _position = screenToWorld [0.5,0.5];
										_position
									};
								};
								_pos = [] call Support_fnc_getScreenPosition;
								if (surfaceIsWater _pos) then {
									_side = side player;
									[[_pos,_side],{
										params ['_pos','_side'];
										if ((side player) == _side) then {
											if (_side == west) then {
												player sideRadio (selectRandom ['mp_groundsupport_01_slingloadrequested_BHQ_0','mp_groundsupport_01_slingloadrequested_BHQ_1','mp_groundsupport_01_slingloadrequested_BHQ_2']);
											} else {
												if (_side == east) then {
													player sideRadio (selectRandom ['mp_groundsupport_01_slingloadrequested_OHQ_0','mp_groundsupport_01_slingloadrequested_OHQ_1','mp_groundsupport_01_slingloadrequested_OHQ_2']);
												} else {
													player sideRadio (selectRandom ['mp_groundsupport_01_slingloadrequested_IHQ_0','mp_groundsupport_01_slingloadrequested_IHQ_1','mp_groundsupport_01_slingloadrequested_IHQ_2']);
												};
											};
											[_side, 'HQ'] sideChat (format ['Be advised, 1x SDV Airdrop inbound to Grid ''%1''!', (mapGridPosition (_pos))]);
										};
									}] remoteExec ['bis_fnc_call',0,false];
									[_pos,_side] spawn {
										params ['_pos','_side'];
										private ['_vehType','_dropLoad','_doorAnim'];
										if (_side == west) then {
											_vehType = 'B_T_VTOL_01_vehicle_F';
											_doorAnim = 'Door_1_source';
											_dropLoad = 'B_SDV_01_F';
										} else {
											if (_side == east) then {
												_vehType = 'B_T_VTOL_01_armed_blue_F';
												_doorAnim = 'Door_1_source';
												_dropLoad = 'O_SDV_01_F';
											} else {
												_vehType = 'B_T_VTOL_01_armed_blue_F';
												_doorAnim = 'Door_1_source';
												_dropLoad = 'I_SDV_01_F';
											};
										};

										_carrier = (([[_pos select 0,(_pos select 1)-2500,150],0,_vehType,_side] call BIS_fnc_spawnVehicle) select 0);
										_carrier flyInHeightASL [150, 150, 150];
										_grp = group (driver _carrier);
										_grp setCombatMode 'BLUE';
										_grp allowFleeing 0;
										{
											_x setskill ['courage',1];
											_x disableAI 'FSM'; 
											_x disableAI 'TARGET'; 
											_x disableAI 'AUTOTARGET'; 
											_x disableAI 'AUTOCOMBAT';
										} forEach units _grp;
										
										_wayPointMove = _grp addWaypoint [[(_pos select 0),(_pos select 1),150],0]; 
										_wayPointMove setWaypointType 'MOVE';
										_grp setCurrentWaypoint _wayPointMove;

										waitUntil {((_carrier distance2D _pos) < 300) and (alive _carrier)};

										_carrier animateDoor [_doorAnim,1];

										waitUntil {((_carrier distance2D _pos) < 50) and (alive _carrier)};

										_dir = (getDir _carrier);
										_dropPos = position _carrier getPos [10,_dir+180];

										_para = (([AGLtoASL [0,0,300], 'B_Parachute_02_F', 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
										_para setMass 100;
										_para allowDamage false;
										_para setPosATL [(_dropPos select 0),(_dropPos select 1),(getPosATL _carrier select 2)];

										_veh = (([AGLtoASL [0,0,80], _dropLoad, 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
										_veh allowDamage false;
										_veh attachTo [_para,[0,0,0]];

										_carrier animateDoor [_doorAnim,0];
										
										deleteWaypoint _wayPointMove;
										_wayPointMove2 = _grp addWaypoint [[(_pos select 0),(_pos select 1)+6000,150],0]; 
										_wayPointMove2 setWaypointType 'MOVE';
										_wayPointMove2 setWaypointStatements ['true', '{deleteVehicle _x} forEach crew (vehicle this) + [vehicle this];'];
										_grp setCurrentWaypoint _wayPointMove2;

										waitUntil {((((position _veh) select 2) < 0.6) || (isNil '_para'))};
										detach _veh;
										_veh enableSimulationGlobal true;
										_veh enableSimulation true;
										_veh allowDamage true;  
										sleep 0.3;
										_veh setPos [(position _veh) select 0, (position _veh) select 1, 0.6];
										deleteVehicle _para;

										_smoke = (([AGLtoASL (position _veh), 'SmokeShellRed', 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
										_smoke attachTo [_veh,[0,0,0]];
										_light = (([AGLtoASL (position _veh), 'Chemlight_green', 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
										_light attachTo [_veh,[0,0,0]];
										detach _smoke;
										detach _light;
										
										[[(getPos _veh),_side],{
											params ['_pos','_side'];
											if ((side player) == _side) then {
												if (_side == west) then {
													player sideRadio (selectRandom ['mp_groundsupport_10_slingloadsucceeded_BHQ_0','mp_groundsupport_10_slingloadsucceeded_BHQ_1','mp_groundsupport_10_slingloadsucceeded_BHQ_2']);
												} else {
													if (_side == east) then {
														player sideRadio (selectRandom ['mp_groundsupport_10_slingloadsucceeded_OHQ_0','mp_groundsupport_10_slingloadsucceeded_OHQ_1','mp_groundsupport_10_slingloadsucceeded_OHQ_2']);
													} else {
														player sideRadio (selectRandom ['mp_groundsupport_10_slingloadsucceeded_IHQ_0','mp_groundsupport_10_slingloadsucceeded_IHQ_1','mp_groundsupport_10_slingloadsucceeded_IHQ_2']);
													};
												};
												[_side, 'HQ'] sideChat (format ['Be advised, 1x SDV Airdrop successfully landed at Grid ''%1''!', (mapGridPosition (_pos))]);
											};
										}] remoteExec ['bis_fnc_call',0,false];
									
										private ['_markerColor'];
										if (_side == west) then {
											_markerColor = 'colorBLUFOR';
										} else {
											if (_side == east) then {
												_markerColor = 'colorOPFOR';
											} else {
												if (_side == independent) then {
													_markerColor = 'colorIndependent';
												} else {
													_markerColor = 'colorCivilian';
												};
											};
										};
										_pos = (getPos _veh);
										_markerID = format ['markerSDV_%1_%2', (mapGridPosition _pos), time];
										format ['|%1|%2|%3|ICON|[1,1]|0|Solid|%4|1|%5', _markerID, _pos, 'hd_dot', _markerColor, '1x SDV Airdrop'] call BIS_fnc_stringToMarker;
										waitUntil {((getPos _veh) distance2D _pos) > 15};
										deleteMarker _markerID;
									};
								} else {
									systemChat '[ LOG ] Airdrop location must be in water not on land!';
									playSound 'addItemFailed';
								};
							"]] call BIS_fnc_addCommMenuItem)];
							_entity setVariable ["_supportSDV",true];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now has access to the SDV Airdrop support!", (name _entity)];
					};
				} else {
					if (!((_entity getVariable ["_supportSDV_ItemID",-1]) == -1)) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							[_entity, (_entity getVariable ["_supportSDV_ItemID",-1])] call BIS_fnc_removeCommMenuItem;
							_entity setVariable ["_supportSDV_ItemID",-1];
							_entity setVariable ["_supportSDV",false];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now no longer has access to the SDV Airdrop support!", (name _entity)];
					};
				};
				
				if (_supportArsenal) then {
					if ((_entity getVariable ["_supportArsenal_ItemID",-1]) == -1) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							_entity setVariable ["_supportArsenal_ItemID", ([_entity,"Call",["Arsenal Airdrop"],["
								Support_fnc_getScreenPosition = {
									params [['_screenPos',getMousePosition,[[]],2]];

									if(visibleMap) then {
										private _ctrlMap = findDisplay 12 displayCtrl 51;
										private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
										_position = (_pos2D + [0]);
										_position
									} else {
										private _position = screenToWorld [0.5,0.5];
										_position
									};
								};
								_pos = [] call Support_fnc_getScreenPosition;
								_side = side player;
								[[_pos,_side],{
									params ['_pos','_side'];
									if ((side player) == _side) then {
										if (_side == west) then {
											player sideRadio (selectRandom ['mp_groundsupport_01_slingloadrequested_BHQ_0','mp_groundsupport_01_slingloadrequested_BHQ_1','mp_groundsupport_01_slingloadrequested_BHQ_2']);
										} else {
											if (_side == east) then {
												player sideRadio (selectRandom ['mp_groundsupport_01_slingloadrequested_OHQ_0','mp_groundsupport_01_slingloadrequested_OHQ_1','mp_groundsupport_01_slingloadrequested_OHQ_2']);
											} else {
												player sideRadio (selectRandom ['mp_groundsupport_01_slingloadrequested_IHQ_0','mp_groundsupport_01_slingloadrequested_IHQ_1','mp_groundsupport_01_slingloadrequested_IHQ_2']);
											};
										};
										[_side, 'HQ'] sideChat (format ['Be advised, 1x Arsenal Airdrop inbound to Grid ''%1''!', (mapGridPosition (_pos))]);
									};
								}] remoteExec ['bis_fnc_call',0,false];
								[_pos,_side] spawn {
									params ['_pos','_side'];
									private ['_vehType','_dropLoad','_doorAnim'];
									if (_side == west) then {
										_vehType = 'B_T_VTOL_01_vehicle_F';
										_doorAnim = 'Door_1_source';
										_dropLoad = 'B_CargoNet_01_ammo_F';
									} else {
										if (_side == east) then {
											_vehType = 'B_T_VTOL_01_armed_blue_F';
											_doorAnim = 'Door_1_source';
											_dropLoad = 'O_CargoNet_01_ammo_F';
										} else {
											_vehType = 'B_T_VTOL_01_armed_blue_F';
											_doorAnim = 'Door_1_source';
											if ((worldName == 'Altis') || (worldName == 'Malden') || (worldName == 'Stratis')) then {
												_dropLoad = 'I_CargoNet_01_ammo_F';
											} else {
												_dropLoad = 'I_E_CargoNet_01_ammo_F';
											};
										};
									};

									_carrier = (([[_pos select 0,(_pos select 1)-2500,150],0,_vehType,_side] call BIS_fnc_spawnVehicle) select 0);
									_carrier flyInHeightASL [150, 150, 150];
									_grp = group (driver _carrier);
									_grp setCombatMode 'BLUE';
									_grp allowFleeing 0;
									{
										_x setskill ['courage',1];
										_x disableAI 'FSM'; 
										_x disableAI 'TARGET'; 
										_x disableAI 'AUTOTARGET'; 
										_x disableAI 'AUTOCOMBAT';
									} forEach units _grp;
									
									_wayPointMove = _grp addWaypoint [[(_pos select 0),(_pos select 1),150],0]; 
									_wayPointMove setWaypointType 'MOVE';
									_grp setCurrentWaypoint _wayPointMove;
									
									waitUntil {((_carrier distance2D _pos) < 300) and (alive _carrier)};

									_carrier animateDoor [_doorAnim,1];

									waitUntil {((_carrier distance2D _pos) < 50) and (alive _carrier)};

									_dir = (getDir _carrier);
									_dropPos = position _carrier getPos [10,_dir+180];

									_para = (([AGLtoASL [0,0,300], 'B_Parachute_02_F', 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
									_para setMass 100;
									_para allowDamage false;
									_para setPosATL [(_dropPos select 0),(_dropPos select 1),(getPosATL _carrier select 2)];

									_veh = (([AGLtoASL [0,0,80], _dropLoad, 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
									_veh allowDamage false;
									_veh attachTo [_para,[0,0,0]];

									_carrier animateDoor [_doorAnim,0];
									
									deleteWaypoint _wayPointMove;
									_wayPointMove2 = _grp addWaypoint [[(_pos select 0),(_pos select 1)+6000,150],0]; 
									_wayPointMove2 setWaypointType 'MOVE';
									_wayPointMove2 setWaypointStatements ['true', '{deleteVehicle _x} forEach crew (vehicle this) + [vehicle this];'];
									_grp setCurrentWaypoint _wayPointMove2;

									waitUntil {((((position _veh) select 2) < 0.6) || (isNil '_para'))};
									detach _veh;
									_veh enableSimulationGlobal true;
									_veh enableSimulation true;
									_veh allowDamage true;  
									sleep 0.3;
									_veh setPos [(position _veh) select 0, (position _veh) select 1, 0.6];
									deleteVehicle _para;

									_smoke = (([AGLtoASL (position _veh), 'SmokeShellRed', 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
									_smoke attachTo [_veh,[0,0,0]];
									_light = (([AGLtoASL (position _veh), 'Chemlight_green', 1, [0,0,0],_dir,{0},true] call BIS_fnc_spawnObjects) select 0);
									_light attachTo [_veh,[0,0,0]];
									detach _smoke;
									detach _light;
									if (!(isnil 'aioArsenalActions')) then {
										[[_veh], {
											[(_this select 0)] call aioArsenalActions;
										}] remoteExec ['bis_fnc_call',0,true];
									} else {
										[[_veh], {
											(_this select 0) addAction ['Open Arsenal', {
												params ['_object', '_caller', '_id'];
												
												[] call LM_fnc_arsenalOpen;
											}];
										}] remoteExec ['bis_fnc_call',0,true];
									};
									
									[[(getPos _veh),_side],{
										params ['_pos','_side'];
										if ((side player) == _side) then {
											if (_side == west) then {
												player sideRadio (selectRandom ['mp_groundsupport_10_slingloadsucceeded_BHQ_0','mp_groundsupport_10_slingloadsucceeded_BHQ_1','mp_groundsupport_10_slingloadsucceeded_BHQ_2']);
											} else {
												if (_side == east) then {
													player sideRadio (selectRandom ['mp_groundsupport_10_slingloadsucceeded_OHQ_0','mp_groundsupport_10_slingloadsucceeded_OHQ_1','mp_groundsupport_10_slingloadsucceeded_OHQ_2']);
												} else {
													player sideRadio (selectRandom ['mp_groundsupport_10_slingloadsucceeded_IHQ_0','mp_groundsupport_10_slingloadsucceeded_IHQ_1','mp_groundsupport_10_slingloadsucceeded_IHQ_2']);
												};
											};
											[_side, 'HQ'] sideChat (format ['Be advised, 1x Arsenal Airdrop successfully landed at Grid ''%1''!', (mapGridPosition (_pos))]);
										};
									}] remoteExec ['bis_fnc_call',0,false];
									
									private ['_markerColor'];
									if (_side == west) then {
										_markerColor = 'colorBLUFOR';
									} else {
										if (_side == east) then {
											_markerColor = 'colorOPFOR';
										} else {
											if (_side == independent) then {
												_markerColor = 'colorIndependent';
											} else {
												_markerColor = 'colorCivilian';
											};
										};
									};
									_pos = (getPos _veh);
									_markerID = format ['markerArsenal_%1_%2', (mapGridPosition _pos), time];
									format ['|%1|%2|%3|ICON|[1,1]|0|Solid|%4|1|%5', _markerID, _pos, 'hd_dot', _markerColor, '1x Arsenal Airdrop'] call BIS_fnc_stringToMarker;
									sleep 120;
									deleteMarker _markerID;
								};
							"]] call BIS_fnc_addCommMenuItem)];
							_entity setVariable ["_supportArsenal",true];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now has access to the Arsenal Airdrop support!", (name _entity)];
					};
				} else {
					if (!((_entity getVariable ["_supportArsenal_ItemID",-1]) == -1)) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							[_entity, (_entity getVariable ["_supportArsenal_ItemID",-1])] call BIS_fnc_removeCommMenuItem;
							_entity setVariable ["_supportArsenal_ItemID",-1];
							_entity setVariable ["_supportArsenal",false];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now no longer has access to the Arsenal Airdrop support!", (name _entity)];
					};
				};
				
				if (_supportGunship) then {
					if ((_entity getVariable ["_supportGunship_ItemID",-1]) == -1) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							_entity setVariable ["_supportGunship_ItemID", ([_entity,"Call",["Gunship Support"],["
								Support_fnc_getScreenPosition = {
									params [['_screenPos',getMousePosition,[[]],2]];

									if(visibleMap) then {
										private _ctrlMap = findDisplay 12 displayCtrl 51;
										private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
										_position = (_pos2D + [0]);
										_position
									} else {
										private _position = screenToWorld [0.5,0.5];
										_position
									};
								};
								_pos = [] call Support_fnc_getScreenPosition;
								_side = side player;
								[[_pos,_side],{
									params ['_pos','_side'];
									if ((side player) == _side) then {
										if (_side == west) then {
											player sideRadio (selectRandom ['mp_groundsupport_01_casrequested_BHQ_0','mp_groundsupport_01_casrequested_BHQ_1','mp_groundsupport_01_casrequested_BHQ_2']);
										} else {
											if (_side == east) then {
												player sideRadio (selectRandom ['mp_groundsupport_01_casrequested_OHQ_0','mp_groundsupport_01_casrequested_OHQ_1','mp_groundsupport_01_casrequested_OHQ_2']);
											} else {
												player sideRadio (selectRandom ['mp_groundsupport_01_casrequested_IHQ_0','mp_groundsupport_01_casrequested_IHQ_1','mp_groundsupport_01_casrequested_IHQ_2']);
											};
										};
										[_side, 'HQ'] sideChat (format ['Be advised, 1x Gunship support inbound to Grid ''%1'' to provide support around 500m for 3 minutes!', (mapGridPosition (_pos))]);
									};
								}] remoteExec ['bis_fnc_call',0,false];
								
								private ['_markerColor'];
								if (_side == west) then {
									_markerColor = 'colorBLUFOR';
								} else {
									if (_side == east) then {
										_markerColor = 'colorOPFOR';
									} else {
										if (_side == independent) then {
											_markerColor = 'colorIndependent';
										} else {
											_markerColor = 'colorCivilian';
										};
									};
								};
								_markerID = format ['markerGunship_%1_%2', (mapGridPosition (_pos)), time];
								_markerIDArea = format ['areaGunship_%1_%2', (mapGridPosition (_pos)), time];
								format ['|%1|%2|%3|ICON|[1,1]|0|Solid|%4|1|%5', _markerID, _pos, 'hd_dot', _markerColor, '1x Gunship Support'] call BIS_fnc_stringToMarker;
								format ['|%1|%2|%3|ELLIPSE|[150,150]|0|FDiagonal|%4|1|%5', _markerIDArea, _pos, 'hd_dot', _markerColor, ''] call BIS_fnc_stringToMarker;
								
								[_pos,_side,_markerID,_markerIDArea] spawn {
									params ['_pos','_side','_markerID','_markerIDArea'];
									private ['_vehType'];
									if (_side == west) then {
										_vehType = 'B_T_VTOL_01_armed_F';
									} else {
										_vehType = 'B_T_VTOL_01_armed_blue_F';
									};

									_carrier = (([[_pos select 0,(_pos select 1)-2500,500],180,_vehType,_side] call BIS_fnc_spawnVehicle) select 0);
									[_carrier, false] remoteExec ['enableDynamicSimulation', 0, true];
									[(vehicle _carrier), false] remoteExec ['enableDynamicSimulation', 0, true];
									[(group _carrier), false] remoteExec ['enableDynamicSimulation', 0, true];
									_carrier flyInHeightASL [500, 500, 500];
									_carrier flyInHeight 500;
									_grp = group (driver _carrier);
									_carrier lockDriver true;
									_carrier enableCopilot false;
									deleteVehicle (((fullCrew _carrier) select 1) select 0);
									[_side, (driver _carrier)] call BIS_fnc_addRespawnPosition;

									_wayPointMove = _grp addWaypoint [[(_pos select 0),(_pos select 1),500],0]; 
									_wayPointMove setWaypointType 'MOVE';
									_wayPointMove setWaypointSpeed 'FULL';
									_wayPointMove setWaypointBehaviour 'CARELESS';
									_grp setCurrentWaypoint _wayPointMove;
									
									waitUntil {(_carrier distance2D _pos) < 500};
									deleteWaypoint _wayPointMove;
									_wayPointMove2 = _grp addWaypoint [[(_pos select 0),(_pos select 1),500],0]; 
									_wayPointMove2 setWaypointType 'LOITER';
									_wayPointMove2 setWaypointLoiterType 'CIRCLE_L';
									_wayPointMove2 setWaypointLoiterRadius 150;
									_grp setCurrentWaypoint _wayPointMove2;
									
									for '_i' from (count waypoints _grp - 1) do {
										deleteWaypoint [_this, _i];
									};
									
									sleep 300;
									
									deleteMarker _markerID;
									deleteMarker _markerIDArea;
									if (alive _carrier) then {
										[[_pos,_side],{
											params ['_pos','_side'];
											if ((side player) == _side) then {
												if (_side == west) then {
													player sideRadio (selectRandom ['mp_groundsupport_05_casaborted_BHQ_0','mp_groundsupport_05_casaborted_BHQ_0','mp_groundsupport_05_casaborted_BHQ_0']);
												} else {
													if (_side == east) then {
														player sideRadio (selectRandom ['mp_groundsupport_05_casaborted_OHQ_0','mp_groundsupport_05_casaborted_OHQ_0','mp_groundsupport_05_casaborted_OHQ_0']);
													} else {
														player sideRadio (selectRandom ['mp_groundsupport_05_casaborted_IHQ_0','mp_groundsupport_05_casaborted_IHQ_0','mp_groundsupport_05_casaborted_IHQ_0']);
													};
												};
												[_side, 'HQ'] sideChat (format ['Be advised, 1x Gunship support for Grid ''%1'' now withdrawing!', (mapGridPosition (_pos))]);
											};
										}] remoteExec ['bis_fnc_call',0,false];
										
										for '_i' from count waypoints _grp - 1 to 0 step -1 do {
											deleteWaypoint [_grp, _i];
										};
										
										deleteWaypoint _wayPointMove2;
										_grp setCombatMode 'BLUE';
										_grp allowFleeing 0;
										{
											_x setskill ['courage',1];
											_x disableAI 'FSM'; 
											_x disableAI 'TARGET'; 
											_x disableAI 'AUTOTARGET'; 
											_x disableAI 'AUTOCOMBAT';
										} forEach units _grp;
										_wayPointMove3 = _grp addWaypoint [[(_pos select 0),(_pos select 1)-6000,500],0]; 
										_wayPointMove3 setWaypointType 'MOVE';
										_wayPointMove3 setWaypointSpeed 'FULL';
										_wayPointMove3 setWaypointBehaviour 'CARELESS';
										_wayPointMove3 setWaypointStatements ['true', '{deleteVehicle _x} forEach crew (vehicle this) + [vehicle this];'];
										_grp setCurrentWaypoint _wayPointMove3;
									};
								};
							"]] call BIS_fnc_addCommMenuItem)];
							_entity setVariable ["_supportGunship",true];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now has access to Gunship support!", (name _entity)];
					};
				} else {
					if (!((_entity getVariable ["_supportGunship_ItemID",-1]) == -1)) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							[_entity, (_entity getVariable ["_supportGunship_ItemID",-1])] call BIS_fnc_removeCommMenuItem;
							_entity setVariable ["_supportGunship_ItemID",-1];
							_entity setVariable ["_supportGunship",false];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now no longer has access to Gunship support!", (name _entity)];
					};
				};
				
				if (_supportUAV) then {
					if ((_entity getVariable ["_supportUAV_ItemID",-1]) == -1) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							_entity setVariable ["_supportUAV_ItemID", ([_entity,"Call",["UAV Surv. Support"],["
								Support_fnc_getScreenPosition = {
									params [['_screenPos',getMousePosition,[[]],2]];

									if(visibleMap) then {
										private _ctrlMap = findDisplay 12 displayCtrl 51;
										private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
										_position = (_pos2D + [0]);
										_position
									} else {
										private _position = screenToWorld [0.5,0.5];
										_position
									};
								};
								_pos = [] call Support_fnc_getScreenPosition;
								_side = side player;
								[[_pos,_side],{
									params ['_pos','_side'];
									if ((side player) == _side) then {
										if (_side == west) then {
											player sideRadio (selectRandom ['mp_groundsupport_60_uav_BHQ_0','mp_groundsupport_60_uav_BHQ_1','mp_groundsupport_60_uav_BHQ_2']);
										} else {
											if (_side == east) then {
												player sideRadio (selectRandom ['mp_groundsupport_60_uav_OHQ_0','mp_groundsupport_60_uav_OHQ_1','mp_groundsupport_60_uav_OHQ_2']);
											} else {
												player sideRadio (selectRandom ['mp_groundsupport_60_uav_IHQ_0','mp_groundsupport_60_uav_IHQ_1','mp_groundsupport_60_uav_IHQ_2']);
											};
										};
										[_side, 'HQ'] sideChat (format ['Be advised, 1x UAV Surveillance support inbound to Grid ''%1'' to provide support around 500m for 3 minutes!', (mapGridPosition (_pos))]);
									};
								}] remoteExec ['bis_fnc_call',0,false];
								
								private ['_markerColor'];
								if (_side == west) then {
									_markerColor = 'colorBLUFOR';
								} else {
									if (_side == east) then {
										_markerColor = 'colorOPFOR';
									} else {
										if (_side == independent) then {
											_markerColor = 'colorIndependent';
										} else {
											_markerColor = 'colorCivilian';
										};
									};
								};
								_markerID = format ['markerUAV_%1_%2', (mapGridPosition (_pos)), time];
								_markerIDArea = format ['areaUAV_%1_%2', (mapGridPosition (_pos)), time];
								format ['|%1|%2|%3|ICON|[1,1]|0|Solid|%4|1|%5', _markerID, _pos, 'hd_dot', _markerColor, '1x UAV Surveillance Support'] call BIS_fnc_stringToMarker;
								format ['|%1|%2|%3|ELLIPSE|[150,150]|0|FDiagonal|%4|1|%5', _markerIDArea, _pos, 'hd_dot', _markerColor, ''] call BIS_fnc_stringToMarker;
								
								[_pos,_side,_markerID,_markerIDArea] spawn {
									params ['_pos','_side','_markerID','_markerIDArea'];
									private ['_vehType'];
									if (_side == west) then {
										_vehType = 'B_UAV_02_F';
									} else {
										if (_side == east) then {
											_vehType = 'O_UAV_02_F';
										} else {
											_vehType = 'I_UAV_02_F';
										};
									};

									_carrier = (([[_pos select 0,(_pos select 1)-2500,500],180,_vehType,_side] call BIS_fnc_spawnVehicle) select 0);
									[_carrier, false] remoteExec ['enableDynamicSimulation', 0, true];
									[(vehicle _carrier), false] remoteExec ['enableDynamicSimulation', 0, true];
									[(group _carrier), false] remoteExec ['enableDynamicSimulation', 0, true];
									_carrier flyInHeightASL [500, 500, 500];
									_carrier flyInHeight 500;
									_grp = group (driver _carrier);
									_carrier setVehicleAmmo 0;
									_carrier addMagazine 'Laserbatteries';
									_carrier lockDriver true;

									_wayPointMove = _grp addWaypoint [[(_pos select 0),(_pos select 1),500],0]; 
									_wayPointMove setWaypointType 'MOVE';
									_wayPointMove setWaypointSpeed 'FULL';
									_wayPointMove setWaypointBehaviour 'CARELESS';
									_grp setCurrentWaypoint _wayPointMove;
									
									waitUntil {(_carrier distance2D _pos) < 500};
									deleteWaypoint _wayPointMove;
									_wayPointMove2 = _grp addWaypoint [[(_pos select 0),(_pos select 1),500],0]; 
									_wayPointMove2 setWaypointType 'LOITER';
									_wayPointMove2 setWaypointLoiterType 'CIRCLE_L';
									_wayPointMove2 setWaypointLoiterRadius 150;
									_grp setCurrentWaypoint _wayPointMove2;
									
									for '_i' from (count waypoints _grp - 1) do {
										deleteWaypoint [_this, _i];
									};
									
									sleep 300;
									
									deleteMarker _markerID;
									deleteMarker _markerIDArea;
									if (alive _carrier) then {
										[[_pos,_side],{
											params ['_pos','_side'];
											if ((side player) == _side) then {
												if (_side == west) then {
													player sideRadio (selectRandom ['mp_groundsupport_05_casaborted_BHQ_0','mp_groundsupport_05_casaborted_BHQ_0','mp_groundsupport_05_casaborted_BHQ_0']);
												} else {
													if (_side == east) then {
														player sideRadio (selectRandom ['mp_groundsupport_05_casaborted_OHQ_0','mp_groundsupport_05_casaborted_OHQ_0','mp_groundsupport_05_casaborted_OHQ_0']);
													} else {
														player sideRadio (selectRandom ['mp_groundsupport_05_casaborted_IHQ_0','mp_groundsupport_05_casaborted_IHQ_0','mp_groundsupport_05_casaborted_IHQ_0']);
													};
												};
												[_side, 'HQ'] sideChat (format ['Be advised, 1x UAV Surveillance support for Grid ''%1'' now withdrawing!', (mapGridPosition (_pos))]);
											};
										}] remoteExec ['bis_fnc_call',0,false];
										
										for '_i' from count waypoints _grp - 1 to 0 step -1 do {
											deleteWaypoint [_grp, _i];
										};
										
										deleteWaypoint _wayPointMove2;
										_grp setCombatMode 'BLUE';
										_grp allowFleeing 0;
										{
											_x setskill ['courage',1];
											_x disableAI 'FSM'; 
											_x disableAI 'TARGET'; 
											_x disableAI 'AUTOTARGET'; 
											_x disableAI 'AUTOCOMBAT';
										} forEach units _grp;
										_wayPointMove3 = _grp addWaypoint [[(_pos select 0),(_pos select 1)-6000,500],0]; 
										_wayPointMove3 setWaypointType 'MOVE';
										_wayPointMove3 setWaypointSpeed 'FULL';
										_wayPointMove3 setWaypointBehaviour 'CARELESS';
										_wayPointMove3 setWaypointStatements ['true', '{deleteVehicle _x} forEach crew (vehicle this) + [vehicle this];'];
										_grp setCurrentWaypoint _wayPointMove3;
									};
								};
							"]] call BIS_fnc_addCommMenuItem)];
							_entity setVariable ["_supportUAV",true];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now has access to UAV Surveillance support!", (name _entity)];
					};
				} else {
					if (!((_entity getVariable ["_supportUAV_ItemID",-1]) == -1)) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							[_entity, (_entity getVariable ["_supportUAV_ItemID",-1])] call BIS_fnc_removeCommMenuItem;
							_entity setVariable ["_supportUAV_ItemID",-1];
							_entity setVariable ["_supportUAV",false];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now no longer has access to UAV Surveillance support!", (name _entity)];
					};
				};
				
				if (_supportAttack) then {
					if ((_entity getVariable ["_supportAttack_ItemID",-1]) == -1) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							_entity setVariable ["_supportAttack_ItemID", ([_entity,"Call",["Attack Chopper Support"],["
								Support_fnc_getScreenPosition = {
									params [['_screenPos',getMousePosition,[[]],2]];

									if(visibleMap) then {
										private _ctrlMap = findDisplay 12 displayCtrl 51;
										private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
										_position = (_pos2D + [0]);
										_position
									} else {
										private _position = screenToWorld [0.5,0.5];
										_position
									};
								};
								_pos = [] call Support_fnc_getScreenPosition;
								_side = side player;
								[[_pos,_side],{
									params ['_pos','_side'];
									if ((side player) == _side) then {
										if (_side == west) then {
											player sideRadio (selectRandom ['mp_groundsupport_01_casrequested_BHQ_0','mp_groundsupport_01_casrequested_BHQ_1','mp_groundsupport_01_casrequested_BHQ_2']);
										} else {
											if (_side == east) then {
												player sideRadio (selectRandom ['mp_groundsupport_01_casrequested_OHQ_0','mp_groundsupport_01_casrequested_OHQ_1','mp_groundsupport_01_casrequested_OHQ_2']);
											} else {
												player sideRadio (selectRandom ['mp_groundsupport_01_casrequested_IHQ_0','mp_groundsupport_01_casrequested_IHQ_1','mp_groundsupport_01_casrequested_IHQ_2']);
											};
										};
										[_side, 'HQ'] sideChat (format ['Be advised, 1x Attack Chopper support inbound to Grid ''%1'' to provide support around 300m for 3 minutes!', (mapGridPosition (_pos))]);
									};
								}] remoteExec ['bis_fnc_call',0,false];
								
								private ['_markerColor'];
								if (_side == west) then {
									_markerColor = 'colorBLUFOR';
								} else {
									if (_side == east) then {
										_markerColor = 'colorOPFOR';
									} else {
										if (_side == independent) then {
											_markerColor = 'colorIndependent';
										} else {
											_markerColor = 'colorCivilian';
										};
									};
								};
								_markerID = format ['markerAttack_%1_%2', (mapGridPosition (_pos)), time];
								_markerIDArea = format ['areaAttack_%1_%2', (mapGridPosition (_pos)), time];
								format ['|%1|%2|%3|ICON|[1,1]|0|Solid|%4|1|%5', _markerID, _pos, 'hd_dot', _markerColor, '1x Attack Chopper Support'] call BIS_fnc_stringToMarker;
								format ['|%1|%2|%3|ELLIPSE|[300,300]|0|FDiagonal|%4|1|%5', _markerIDArea, _pos, 'hd_dot', _markerColor, ''] call BIS_fnc_stringToMarker;
								
								[_pos,_side,_markerID,_markerIDArea] spawn {
									params ['_pos','_side','_markerID','_markerIDArea'];
									private ['_vehType'];
									if (_side == west) then {
										_vehType = 'B_Heli_Attack_01_F';
									} else {
										if (_side == east) then {
											if ((worldName == 'Tanoa') || (worldName == 'Enoch')) then {
												_vehType = 'O_Heli_Attack_02_black_F';
											} else {
												_vehType = 'O_Heli_Attack_02_F';
											};
										} else {
											if ((worldName == 'Altis') || (worldName == 'Malden') || (worldName == 'Stratis')) then {
												_vehType = 'I_Heli_light_03_F';
											} else {
												_vehType = 'I_E_Heli_light_03_dynamicLoadout_F';
											};
										};
									};

									_carrier = (([[_pos select 0,(_pos select 1)-2500,150],0,_vehType,_side] call BIS_fnc_spawnVehicle) select 0);
									[_carrier, false] remoteExec ['enableDynamicSimulation', 0, true];
									[(vehicle _carrier), false] remoteExec ['enableDynamicSimulation', 0, true];
									[(group _carrier), false] remoteExec ['enableDynamicSimulation', 0, true];
									_grp = group (driver _carrier);

									_wayPointMove = _grp addWaypoint [[(_pos select 0),(_pos select 1),150],0]; 
									_wayPointMove setWaypointType 'MOVE';
									_wayPointMove setWaypointSpeed 'FULL';
									_wayPointMove setWaypointBehaviour 'CARELESS';
									_grp setCurrentWaypoint _wayPointMove;
									
									waitUntil {(_carrier distance2D _pos) < 300};
									deleteWaypoint _wayPointMove;
									[_grp, _pos, 300] call BIS_fnc_taskPatrol;
									
									for '_i' from (count waypoints _grp - 1) do {
										deleteWaypoint [_this, _i];
									};
									
									sleep 300;
									
									deleteMarker _markerID;
									deleteMarker _markerIDArea;
									if (alive _carrier) then {
										[[_pos,_side],{
											params ['_pos','_side'];
											if ((side player) == _side) then {
												if (_side == west) then {
													player sideRadio (selectRandom ['mp_groundsupport_05_casaborted_BHQ_0','mp_groundsupport_05_casaborted_BHQ_0','mp_groundsupport_05_casaborted_BHQ_0']);
												} else {
													if (_side == east) then {
														player sideRadio (selectRandom ['mp_groundsupport_05_casaborted_OHQ_0','mp_groundsupport_05_casaborted_OHQ_0','mp_groundsupport_05_casaborted_OHQ_0']);
													} else {
														player sideRadio (selectRandom ['mp_groundsupport_05_casaborted_IHQ_0','mp_groundsupport_05_casaborted_IHQ_0','mp_groundsupport_05_casaborted_IHQ_0']);
													};
												};
												[_side, 'HQ'] sideChat (format ['Be advised, 1x Attack Chopper support for Grid ''%1'' now withdrawing!', (mapGridPosition (_pos))]);
											};
										}] remoteExec ['bis_fnc_call',0,false];
										
										for '_i' from count waypoints _grp - 1 to 0 step -1 do {
											deleteWaypoint [_grp, _i];
										};
										
										deleteWaypoint _wayPointMove;
										_grp setCombatMode 'BLUE';
										_grp allowFleeing 0;
										{
											_x setskill ['courage',1];
											_x disableAI 'FSM'; 
											_x disableAI 'TARGET'; 
											_x disableAI 'AUTOTARGET'; 
											_x disableAI 'AUTOCOMBAT';
										} forEach units _grp;
										_wayPointMove2 = _grp addWaypoint [[(_pos select 0),(_pos select 1)+6000,150],0]; 
										_wayPointMove2 setWaypointType 'MOVE';
										_wayPointMove2 setWaypointSpeed 'FULL';
										_wayPointMove2 setWaypointBehaviour 'CARELESS';
										_wayPointMove2 setWaypointStatements ['true', '{deleteVehicle _x} forEach crew (vehicle this) + [vehicle this];'];
										_grp setCurrentWaypoint _wayPointMove2;
									};
								};
							"]] call BIS_fnc_addCommMenuItem)];
							_entity setVariable ["_supportAttack",true];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now has access to Attack Chopper support!", (name _entity)];
					};
				} else {
					if (!((_entity getVariable ["_supportAttack_ItemID",-1]) == -1)) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							[_entity, (_entity getVariable ["_supportAttack_ItemID",-1])] call BIS_fnc_removeCommMenuItem;
							_entity setVariable ["_supportAttack_ItemID",-1];
							_entity setVariable ["_supportAttack",false];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now no longer has access to Attack Chopper support!", (name _entity)];
					};
				};
				
				if (_supportJet) then {
					if ((_entity getVariable ["_supportJet_ItemID",-1]) == -1) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							_entity setVariable ["_supportJet_ItemID", ([_entity,"Call",["Fighter Jet Support"],["
								Support_fnc_getScreenPosition = {
									params [['_screenPos',getMousePosition,[[]],2]];

									if(visibleMap) then {
										private _ctrlMap = findDisplay 12 displayCtrl 51;
										private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
										_position = (_pos2D + [0]);
										_position
									} else {
										private _position = screenToWorld [0.5,0.5];
										_position
									};
								};
								_pos = [] call Support_fnc_getScreenPosition;
								_side = side player;
								[[_pos,_side],{
									params ['_pos','_side'];
									if ((side player) == _side) then {
										if (_side == west) then {
											player sideRadio (selectRandom ['mp_groundsupport_01_casrequested_BHQ_0','mp_groundsupport_01_casrequested_BHQ_1','mp_groundsupport_01_casrequested_BHQ_2']);
										} else {
											if (_side == east) then {
												player sideRadio (selectRandom ['mp_groundsupport_01_casrequested_OHQ_0','mp_groundsupport_01_casrequested_OHQ_1','mp_groundsupport_01_casrequested_OHQ_2']);
											} else {
												player sideRadio (selectRandom ['mp_groundsupport_01_casrequested_IHQ_0','mp_groundsupport_01_casrequested_IHQ_1','mp_groundsupport_01_casrequested_IHQ_2']);
											};
										};
										[_side, 'HQ'] sideChat (format ['Be advised, 1x Fighter Jet support inbound to Grid ''%1'' to provide support around 300m for 3 minutes!', (mapGridPosition (_pos))]);
									};
								}] remoteExec ['bis_fnc_call',0,false];
								
								private ['_markerColor'];
								if (_side == west) then {
									_markerColor = 'colorBLUFOR';
								} else {
									if (_side == east) then {
										_markerColor = 'colorOPFOR';
									} else {
										if (_side == independent) then {
											_markerColor = 'colorIndependent';
										} else {
											_markerColor = 'colorCivilian';
										};
									};
								};
								_markerID = format ['markerFighter_%1_%2', (mapGridPosition (_pos)), time];
								_markerIDArea = format ['areaFighter_%1_%2', (mapGridPosition (_pos)), time];
								format ['|%1|%2|%3|ICON|[1,1]|0|Solid|%4|1|%5', _markerID, _pos, 'hd_dot', _markerColor, '1x Fighter Jet Support'] call BIS_fnc_stringToMarker;
								format ['|%1|%2|%3|ELLIPSE|[300,300]|0|FDiagonal|%4|1|%5', _markerIDArea, _pos, 'hd_dot', _markerColor, ''] call BIS_fnc_stringToMarker;
								
								[_pos,_side,_markerID,_markerIDArea] spawn {
									params ['_pos','_side','_markerID','_markerIDArea'];
									private ['_vehType'];
									if (_side == west) then {
										_vehType = 'B_Plane_Fighter_01_F';
									} else {
										if (_side == east) then {
											_vehType = 'O_Plane_Fighter_02_F';
										} else {
											_vehType = 'I_Plane_Fighter_04_F';
										};
									};

									_carrier = (([[_pos select 0,(_pos select 1)-2500,150],0,_vehType,_side] call BIS_fnc_spawnVehicle) select 0);
									[_carrier, false] remoteExec ['enableDynamicSimulation', 0, true];
									[(vehicle _carrier), false] remoteExec ['enableDynamicSimulation', 0, true];
									[(group _carrier), false] remoteExec ['enableDynamicSimulation', 0, true];
									_grp = group (driver _carrier);

									_wayPointMove = _grp addWaypoint [[(_pos select 0),(_pos select 1),150],0]; 
									_wayPointMove setWaypointType 'MOVE';
									_wayPointMove setWaypointSpeed 'FULL';
									_wayPointMove setWaypointBehaviour 'CARELESS';
									_grp setCurrentWaypoint _wayPointMove;
									
									waitUntil {(_carrier distance2D _pos) < 300};
									deleteWaypoint _wayPointMove;
									[_grp, _pos, 300] call BIS_fnc_taskPatrol;
									
									for '_i' from (count waypoints _grp - 1) do {
										deleteWaypoint [_this, _i];
									};
									
									sleep 300;
									
									deleteMarker _markerID;
									deleteMarker _markerIDArea;
									if (alive _carrier) then {
										[[_pos,_side],{
											params ['_pos','_side'];
											if ((side player) == _side) then {
												if (_side == west) then {
													player sideRadio (selectRandom ['mp_groundsupport_05_casaborted_BHQ_0','mp_groundsupport_05_casaborted_BHQ_0','mp_groundsupport_05_casaborted_BHQ_0']);
												} else {
													if (_side == east) then {
														player sideRadio (selectRandom ['mp_groundsupport_05_casaborted_OHQ_0','mp_groundsupport_05_casaborted_OHQ_0','mp_groundsupport_05_casaborted_OHQ_0']);
													} else {
														player sideRadio (selectRandom ['mp_groundsupport_05_casaborted_IHQ_0','mp_groundsupport_05_casaborted_IHQ_0','mp_groundsupport_05_casaborted_IHQ_0']);
													};
												};
												[_side, 'HQ'] sideChat (format ['Be advised, 1x Fighter Jet support for Grid ''%1'' now withdrawing!', (mapGridPosition (_pos))]);
											};
										}] remoteExec ['bis_fnc_call',0,false];
										
										for '_i' from count waypoints _grp - 1 to 0 step -1 do {
											deleteWaypoint [_grp, _i];
										};
										
										deleteWaypoint _wayPointMove;
										_grp setCombatMode 'BLUE';
										_grp allowFleeing 0;
										{
											_x setskill ['courage',1];
											_x disableAI 'FSM'; 
											_x disableAI 'TARGET'; 
											_x disableAI 'AUTOTARGET'; 
											_x disableAI 'AUTOCOMBAT';
										} forEach units _grp;
										_wayPointMove2 = _grp addWaypoint [[(_pos select 0),(_pos select 1)+6000,150],0]; 
										_wayPointMove2 setWaypointType 'MOVE';
										_wayPointMove2 setWaypointSpeed 'FULL';
										_wayPointMove2 setWaypointBehaviour 'CARELESS';
										_wayPointMove2 setWaypointStatements ['true', '{deleteVehicle _x} forEach crew (vehicle this) + [vehicle this];'];
										_grp setCurrentWaypoint _wayPointMove2;
									};
								};
							"]] call BIS_fnc_addCommMenuItem)];
							_entity setVariable ["_supportJet",true];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now has access to Fighter Jet support!", (name _entity)];
					};
				} else {
					if (!((_entity getVariable ["_supportJet_ItemID",-1]) == -1)) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							[_entity, (_entity getVariable ["_supportJet_ItemID",-1])] call BIS_fnc_removeCommMenuItem;
							_entity setVariable ["_supportJet_ItemID",-1];
							_entity setVariable ["_supportJet",false];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now no longer has access to Fighter Jet support!", (name _entity)];
					};
				};
				
				if (_supportReinforce) then {
					if ((_entity getVariable ["_supportReinforce_ItemID",-1]) == -1) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							_entity setVariable ["_supportReinforce_ItemID", ([_entity,"Call",["Helo Reinforcements Support"],["
								Support_fnc_getScreenPosition = {
									params [['_screenPos',getMousePosition,[[]],2]];

									if(visibleMap) then {
										private _ctrlMap = findDisplay 12 displayCtrl 51;
										private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
										_position = (_pos2D + [0]);
										_position
									} else {
										private _position = screenToWorld [0.5,0.5];
										_position
									};
								};
								_pos = [] call Support_fnc_getScreenPosition;
								_side = side player;
								if ((!(surfaceIsWater _pos))) then {
									[[_pos,_side],{
										params ['_pos','_side'];
										if ((side player) == _side) then {
											if (_side == west) then {
												player sideRadio (selectRandom ['mp_groundsupport_05_boardingstarted_BHQ_0','mp_groundsupport_05_boardingstarted_BHQ_1','mp_groundsupport_05_boardingstarted_BHQ_2']);
											} else {
												if (_side == east) then {
													player sideRadio (selectRandom ['mp_groundsupport_05_boardingstarted_OHQ_0','mp_groundsupport_05_boardingstarted_OHQ_1','mp_groundsupport_05_boardingstarted_OHQ_2']);
												} else {
													player sideRadio (selectRandom ['mp_groundsupport_05_boardingstarted_IHQ_0','mp_groundsupport_05_boardingstarted_IHQ_1','mp_groundsupport_05_boardingstarted_IHQ_2']);
												};
											};
											[_side, 'HQ'] sideChat (format ['Be advised, 1x Helo Reinforcements Squad of 5 inbound to Grid ''%1'' to provide support around 300m!', (mapGridPosition (_pos))]);
										};
									}] remoteExec ['bis_fnc_call',0,false];
								
									private ['_markerColor'];
									if (_side == west) then {
										_markerColor = 'colorBLUFOR';
									} else {
										if (_side == east) then {
											_markerColor = 'colorOPFOR';
										} else {
											if (_side == independent) then {
												_markerColor = 'colorIndependent';
											} else {
												_markerColor = 'colorCivilian';
											};
										};
									};
									_markerID = format ['markerReinforce_%1_%2', (mapGridPosition (_pos)), time];
									_markerIDArea = format ['areaReinforce_%1_%2', (mapGridPosition (_pos)), time];
									format ['|%1|%2|%3|ICON|[1,1]|0|Solid|%4|1|%5', _markerID, _pos, 'hd_dot', _markerColor, '1x Helo Reinforcements Squad of 5'] call BIS_fnc_stringToMarker;
									format ['|%1|%2|%3|ELLIPSE|[300,300]|0|FDiagonal|%4|1|%5', _markerIDArea, _pos, 'hd_dot', _markerColor, ''] call BIS_fnc_stringToMarker;
								
									[_pos,_side,_markerID,_markerIDArea] spawn {
										params ['_pos','_side','_markerID','_markerIDArea'];
										private ['_vehType','_waypointSpeeds'];
										if (_side == west) then {
											_vehType = 'B_Heli_Transport_01_F';
										} else {
											if (_side == east) then {
												if ((worldName == 'Tanoa') || (worldName == 'Enoch')) then {
													_vehType = 'O_Heli_Transport_04_bench_black_F';
												} else {
													_vehType = 'O_Heli_Transport_04_bench_F';
												};
											} else {
												if ((worldName == 'Altis') || (worldName == 'Malden') || (worldName == 'Stratis')) then {
													_vehType = 'I_Heli_light_03_unarmed_F';
												} else {
													_vehType = 'I_E_Heli_light_03_unarmed_F';
												};
											};
										};

										_carrier = (([[_pos select 0,(_pos select 1)-2500,150],0,_vehType,_side] call BIS_fnc_spawnVehicle) select 0);
										[_carrier, false] remoteExec ['enableDynamicSimulation', 0, true];
										[(vehicle _carrier), false] remoteExec ['enableDynamicSimulation', 0, true];
										[(group _carrier), false] remoteExec ['enableDynamicSimulation', 0, true];
										_carrier lockDriver true;
										_carrier lockTurret [[-1], true];
										_carrier lockTurret [[0], true];
										_carrier lockTurret [[1], true];
										_carrier lockTurret [[2], true];
										_grp = group (driver _carrier);
										
										_reinforcements = [[0,0,0], _side, 5] call BIS_fnc_spawnGroup;
										{
											_x moveInCargo _carrier;
											[_x, false] remoteExec ['enableDynamicSimulation', 0, true];
											[(vehicle _x), false] remoteExec ['enableDynamicSimulation', 0, true];
											[(group _x), false] remoteExec ['enableDynamicSimulation', 0, true];
										} forEach units _reinforcements;
										
										_wayPointMove = _grp addWaypoint [[(_pos select 0),(_pos select 1),0],0]; 
										_wayPointMove setWaypointType 'TR UNLOAD';
										_wayPointMove setWaypointStatements ['true', '(vehicle this) LAND ''GET OUT'';'];
										_grp setCurrentWaypoint _wayPointMove;
										
										_cargo = _carrier emptyPositions 'Cargo';
										_countCrew = {alive _x} count (crew _carrier);
										
										waitUntil{(isTouchingGround _carrier) and (alive _carrier)};
										
										_reinforcements leaveVehicle _carrier;
										
										_landTime = time;
										waitUntil{(({alive _x} count (crew _carrier)) == _countCrew) or (time > _landTime + 60)};
											
										sleep 5;
										
										deleteWaypoint _wayPointMove;
										_wayPointMove2 = _grp addWaypoint [[(_pos select 0),(_pos select 1)+6000,150],0]; 
										_wayPointMove2 setWaypointType 'MOVE';
										_wayPointMove2 setWaypointStatements ['true', '{deleteVehicle _x} forEach crew (vehicle this) + [vehicle this];'];
										_grp setCurrentWaypoint _wayPointMove2;
										
										[_reinforcements, _pos, 300] call BIS_fnc_taskPatrol;
										sleep 5;
										for '_i' from count waypoints _reinforcements - 1 to 0 step -1 do {
												[_reinforcements, _i] setWaypointSpeed selectRandom ['UNCHANGED','LIMITED','NORMAL','FULL'];
												[_reinforcements, _i] setWaypointBehaviour 'SAFE';
										};
										
										[[_pos,_side],{
												params ['_pos','_side'];
												if ((side player) == _side) then {
													if (_side == west) then {
														player sideRadio (selectRandom ['mp_groundsupport_15_disembarked_BHQ_0','mp_groundsupport_15_disembarked_BHQ_1','mp_groundsupport_15_disembarked_BHQ_2']);
													} else {
														if (_side == east) then {
															player sideRadio (selectRandom ['mp_groundsupport_15_disembarked_OHQ_0','mp_groundsupport_15_disembarked_OHQ_1','mp_groundsupport_15_disembarked_OHQ_2']);
														} else {
															player sideRadio (selectRandom ['mp_groundsupport_15_disembarked_IHQ_0','mp_groundsupport_15_disembarked_IHQ_1','mp_groundsupport_15_disembarked_IHQ_2']);
														};
													};
													[_side, 'HQ'] sideChat (format ['Be advised, 1x Helo Reinforcements Squad of 5 for Grid ''%1'' now boots on the ground!', (mapGridPosition (_pos))]);
												};
										}] remoteExec ['bis_fnc_call',0,false];
										deleteMarker _markerID;
										deleteMarker _markerIDArea;
									};
								} else {
									systemChat '[ LOG ] You can only call Helo reinforcements to a Grid on land!';
									playSound 'addItemFailed';
								};
							"]] call BIS_fnc_addCommMenuItem)];
							_entity setVariable ["_supportReinforce",true];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now has access to Helo Reinforcements support!", (name _entity)];
					};
				} else {
					if (!((_entity getVariable ["_supportReinforce_ItemID",-1]) == -1)) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							[_entity, (_entity getVariable ["_supportReinforce_ItemID",-1])] call BIS_fnc_removeCommMenuItem;
							_entity setVariable ["_supportReinforce_ItemID",-1];
							_entity setVariable ["_supportReinforce",false];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now no longer has access to Helo Reinforcements support!", (name _entity)];
					};
				};
				
				if (_supportHelo) then {
					if ((_entity getVariable ["_supportHelo_ItemID",-1]) == -1) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							_entity setVariable ["_supportHelo_ItemID", ([_entity,"Call",["Helo Transport Support"],["
								systemChat '[ LOG ] To use this feature, select 0, then 8, and press enter on the desired location to be transported to. You will be picked up at your current location!';
								Support_fnc_getScreenPosition = {
									params [['_screenPos',getMousePosition,[[]],2]];

									if(visibleMap) then {
										private _ctrlMap = findDisplay 12 displayCtrl 51;
										private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
										_position = (_pos2D + [0]);
										_position
									} else {
										private _position = screenToWorld [0.5,0.5];
										_position
									};
								};
								LM_fnc_remoteExecComms = {
									[[(_this select 0),(_this select 1),(_this select 2),(_this select 3),(_this select 4)],{
										params ['_side','_radioTrack','_sideMessage','_pos1','_pos2'];
										private ['_HQ'];
										if (_side == west) then {
											_HQ = 'B';
										} else {
											if (_side == east) then {
												_HQ = 'O';
											} else {
												_HQ = 'I';
											};
										};
										[_side, 'HQ'] commandRadio (selectRandom [(format['%1%2HQ_0',_radioTrack,_HQ]),(format['%1%2HQ_1',_radioTrack,_HQ]),(format['%1%2HQ_2',_radioTrack,_HQ])]);
										[_side, 'HQ'] sideChat (format [_sideMessage, _pos1, _pos2]);
									}] remoteExec ['bis_fnc_call',0,false];
								};
								_pos = [] call Support_fnc_getScreenPosition;
								_side = side player;
								_pickup = [((position player) select 0),((position player) select 1),0];
								if ((!((mapGridPosition _pickup) == (mapGridPosition _pos))) and (!(surfaceIsWater _pos))) then {
									
									[_side, 'mp_groundsupport_01_transportrequested_', 'Be advised, 1x Helo Transport inbound to Grid ''%1'' in order to transport you to destination Grid ''%2''!', (mapGridPosition _pickup), (mapGridPosition _pos)] call LM_fnc_remoteExecComms;
									
									[_pos,_side,_pickup] spawn {
										params ['_pos','_side','_pickup'];
										private ['_vehType','_waypointSpeeds','_markerColor'];
										if (_side == west) then {
											_vehType = 'B_Heli_Transport_03_F';
											_markerColor = 'colorBLUFOR';
										} else {
											if (_side == east) then {
												_markerColor = 'colorOPFOR';
												if ((worldName == 'Tanoa') || (worldName == 'Enoch')) then {
													_vehType = 'O_Heli_Transport_04_covered_black_F';
												} else {
													_vehType = 'O_Heli_Transport_04_covered_F';
												};
											} else {
												_markerColor = 'colorIndependent';
												if ((worldName == 'Altis') || (worldName == 'Malden') || (worldName == 'Stratis')) then {
													_vehType = 'I_Heli_Transport_02_F';
												} else {
													_vehType = 'I_E_Heli_light_03_unarmed_F';
												};
											};
										};
										
										_heliPlayer = (([_pickup, 'Land_HelipadEmpty_F', 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_heliPos = (([_pos, 'Land_HelipadEmpty_F', 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
										_carrier = (([[_pickup select 0,(_pickup select 1)-2500,150],0,_vehType,_side] call BIS_fnc_spawnVehicle) select 0);
										[_carrier, false] remoteExec ['enableDynamicSimulation', 0, true];
										[(vehicle _carrier), false] remoteExec ['enableDynamicSimulation', 0, true];
										[(group _carrier), false] remoteExec ['enableDynamicSimulation', 0, true];
										_carrier lockDriver true;
										_carrier lockTurret [[-1], true];
										_carrier lockTurret [[0], true];
										_carrier lockTurret [[1], true];
										_carrier lockTurret [[2], true];
										_grp = group (driver _carrier);
										
										_wayPointMove = _grp addWaypoint [[(_pickup select 0),(_pickup select 1),0],0];
										_wayPointMove setWaypointType 'TR UNLOAD';
										_wayPointMove setWaypointStatements ['true', '(vehicle this) LAND ''GET IN'';'];
										_grp setCurrentWaypoint _wayPointMove;
										
										_cargo = _carrier emptyPositions 'Cargo';
										_countCrew = {alive _x} count (crew _carrier);
										
										waitUntil{(isTouchingGround _carrier) and (alive _carrier)};
										_carrier setFuel 0;
										
										[_side, 'mp_groundsupport_05_boardingstarted_', 'Be advised, 1x Helo Transport has touched down at Grid ''%1'', now awaiting boarding for maximum 1 minute to destination Grid ''%2''!', (mapGridPosition (position _carrier)), (mapGridPosition (_pos))] call LM_fnc_remoteExecComms;
										
										_crew = true;
										_landTime = time;
										while {_cargo == (_carrier emptyPositions 'Cargo')} do {
											if (time > _landTime + 60) exitWith  {
												
												[_side, 'mp_groundsupport_40_transportaborted_', 'Be advised, due to waiting 3 minutes with nobody boarding, 1x Helo Transport at Grid ''%1'' for transport to Grid ''%2'' now departing AO!', (mapGridPosition (position _carrier)), (mapGridPosition (_pos))] call LM_fnc_remoteExecComms;
												
												deleteWaypoint _wayPointMove;
												_wayPointMove2 = _grp addWaypoint [[(_pickup select 0),(_pickup select 1)+6000,150],0]; 
												_wayPointMove2 setWaypointType 'MOVE';
												_wayPointMove2 setWaypointStatements ['true', '{deleteVehicle _x} forEach crew (vehicle this) + [vehicle this];'];
												_grp setCurrentWaypoint _wayPointMove2;
												_carrier setFuel 1;
												_carrier flyInHeightASL [150, 150, 150];
												
												_crew = false;
											};
										};
										
										if (_crew) then {
											_full = true;
											while {!((_carrier emptyPositions 'Cargo') == 0)} do {
												if (time > _landTime + 60) exitWith  {
													[_side, 'mp_groundsupport_10_boardingended_', 'Be advised, 1x Helo Transport at Grid ''%1'' for transport to Grid ''%2'' now departing, 1 minute is up with not all seats filled!', (mapGridPosition (position _carrier)), (mapGridPosition (_pos))] call LM_fnc_remoteExecComms;
													
													_full = false;
												};
											};
										
											if (_full) then {
												[_side, 'mp_groundsupport_10_boardingended_', 'Be advised, 1x Helo Transport at Grid ''%1'' for transport to Grid ''%2'' now departing early due to all seats filled!', (mapGridPosition (position _carrier)), (mapGridPosition (_pos))] call LM_fnc_remoteExecComms;
											};
											
											_carrier setFuel 1;
											_wayPointMove2 = _grp addWaypoint [[(_pos select 0),(_pos select 1),0],0]; 
											_wayPointMove2 setWaypointType 'TR UNLOAD';
											_wayPointMove2 setWaypointStatements ['true', '(vehicle this) LAND ''GET OUT'';'];
											_grp setCurrentWaypoint _wayPointMove2;
											
											waitUntil{!(isTouchingGround _carrier) and (alive _carrier)};
											sleep 5;
											waitUntil{(isTouchingGround _carrier) and (alive _carrier)};
											_landTime = time;
											waitUntil{(({alive _x} count (crew _carrier)) == _countCrew) or (time > _landTime + 90)};
											
											sleep 5;
											
											[_side, 'mp_groundsupport_15_disembarked_', 'Be advised, 1x Helo Transport at Grid ''%1'' for transport to Grid ''%2'' now departing AO due to transport success!', (mapGridPosition (position _carrier)), (mapGridPosition (_pos))] call LM_fnc_remoteExecComms;
											
											deleteWaypoint _wayPointMove2;
											_wayPointMove3 = _grp addWaypoint [[(_pos select 0),(_pos select 1)+6000,150],0]; 
											_wayPointMove3 setWaypointType 'MOVE';
											_wayPointMove3 setWaypointStatements ['true', '{deleteVehicle _x} forEach crew (vehicle this) + [vehicle this];'];
											_grp setCurrentWaypoint _wayPointMove3;
										};
									};
								} else {
									systemChat '[ LOG ] You cannot call transport to take you to a Grid when either you or water are at said Grid!';
									playSound 'addItemFailed';
								};
							"]] call BIS_fnc_addCommMenuItem)];
							_entity setVariable ["_supportHelo",true];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now has access to the Helo Transport support!", (name _entity)];
					};
				} else {
					if (!((_entity getVariable ["_supportHelo_ItemID",-1]) == -1)) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							[_entity, (_entity getVariable ["_supportHelo_ItemID",-1])] call BIS_fnc_removeCommMenuItem;
							_entity setVariable ["_supportHelo_ItemID",-1];
							_entity setVariable ["_supportHelo",false];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now no longer has access to the Helo Transport support!", (name _entity)];
					};
				};
				
				if (_supportParatrooper) then {
					if ((_entity getVariable ["_supportParatrooper_ItemID",-1]) == -1) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							_entity setVariable ["_supportParatrooper_ItemID", ([_entity,"Call",["Paratrooper Reinforcements Support"],["
								Support_fnc_getScreenPosition = {
									params [['_screenPos',getMousePosition,[[]],2]];

									if(visibleMap) then {
										private _ctrlMap = findDisplay 12 displayCtrl 51;
										private _pos2D = _ctrlMap ctrlMapScreenToWorld _screenPos;
										_position = (_pos2D + [0]);
										_position
									} else {
										private _position = screenToWorld [0.5,0.5];
										_position
									};
								};
								_pos = [] call Support_fnc_getScreenPosition;
								_side = side player;
								[[_pos,_side],{
									params ['_pos','_side'];
									if ((side player) == _side) then {
										if (_side == west) then {
											player sideRadio (selectRandom ['mp_groundsupport_05_boardingstarted_BHQ_0','mp_groundsupport_05_boardingstarted_BHQ_1','mp_groundsupport_05_boardingstarted_BHQ_2']);
										} else {
											if (_side == east) then {
												player sideRadio (selectRandom ['mp_groundsupport_05_boardingstarted_OHQ_0','mp_groundsupport_05_boardingstarted_OHQ_1','mp_groundsupport_05_boardingstarted_OHQ_2']);
											} else {
												player sideRadio (selectRandom ['mp_groundsupport_05_boardingstarted_IHQ_0','mp_groundsupport_05_boardingstarted_IHQ_1','mp_groundsupport_05_boardingstarted_IHQ_2']);
											};
										};
										[_side, 'HQ'] sideChat (format ['Be advised, 1x Paratrooper Reinforcements Squad of 5 inbound to Grid ''%1'' to provide support around 300m!', (mapGridPosition (_pos))]);
									};
								}] remoteExec ['bis_fnc_call',0,false];
							
								private ['_markerColor'];
								if (_side == west) then {
									_markerColor = 'colorBLUFOR';
								} else {
									if (_side == east) then {
										_markerColor = 'colorOPFOR';
									} else {
										if (_side == independent) then {
											_markerColor = 'colorIndependent';
										} else {
											_markerColor = 'colorCivilian';
										};
									};
								};
								_markerID = format ['markerParatrooper_%1_%2', (mapGridPosition (_pos)), time];
								_markerIDArea = format ['areaParatrooper_%1_%2', (mapGridPosition (_pos)), time];
								format ['|%1|%2|%3|ICON|[1,1]|0|Solid|%4|1|%5', _markerID, _pos, 'hd_dot', _markerColor, '1x Paratrooper Reinforcements Squad of 5'] call BIS_fnc_stringToMarker;
								format ['|%1|%2|%3|ELLIPSE|[300,300]|0|FDiagonal|%4|1|%5', _markerIDArea, _pos, 'hd_dot', _markerColor, ''] call BIS_fnc_stringToMarker;
							
								[_pos,_side,_markerID,_markerIDArea] spawn {
									params ['_pos','_side','_markerID','_markerIDArea'];
									private ['_vehType','_doorAnim'];
									if (_side == west) then {
										_vehType = 'B_T_VTOL_01_infantry_F';
										_doorAnim = 'Door_1_source';
									} else {
										if (_side == east) then {
											_vehType = 'O_T_VTOL_02_infantry_F';
											_doorAnim = 'Door_1_source';
										} else {
											_vehType = 'I_Heli_Transport_02_F';
											_doorAnim = 'CargoRamp_Open';
										};
									};
									
									_carrier = (([[_pos select 0,(_pos select 1)-2500,150],0,_vehType,_side] call BIS_fnc_spawnVehicle) select 0);
									[_carrier, false] remoteExec ['enableDynamicSimulation', 0, true];
									[(vehicle _carrier), false] remoteExec ['enableDynamicSimulation', 0, true];
									[(group _carrier), false] remoteExec ['enableDynamicSimulation', 0, true];
									_carrier flyInHeightASL [150, 150, 150];
									_grp = group (driver _carrier);
									_grp setCombatMode 'BLUE';
									_grp allowFleeing 0;
									{
										_x setskill ['courage',1];
										_x disableAI 'FSM'; 
										_x disableAI 'TARGET'; 
										_x disableAI 'AUTOTARGET'; 
										_x disableAI 'AUTOCOMBAT';
									} forEach units _grp;
									
									_wayPointMove = _grp addWaypoint [[(_pos select 0),(_pos select 1),150],0]; 
									_wayPointMove setWaypointType 'MOVE';
									_grp setCurrentWaypoint _wayPointMove;

									waitUntil {((_carrier distance2D _pos) < 300) and (alive _carrier)};

									_reinforcements = [[0,0,0], _side, 5] call BIS_fnc_spawnGroup;
									_carrier animateDoor [_doorAnim,1];

									waitUntil {((_carrier distance2D _pos) < 50) and (alive _carrier)};
									
									[_reinforcements,_carrier,_side,_pos,_markerID,_markerIDArea,_doorAnim] spawn {
										params ['_reinforcements','_carrier','_side','_pos','_markerID','_markerIDArea','_doorAnim'];
										{
											[_x, false] remoteExec ['enableDynamicSimulation', 0, true];
											[(vehicle _x), false] remoteExec ['enableDynamicSimulation', 0, true];
											[(group _x), false] remoteExec ['enableDynamicSimulation', 0, true];
											_dir = (getDir _carrier);
											_carrierPos = position _carrier getPos [10,_dir+180];
											_dropPos = [(_carrierPos select 0),(_carrierPos select 1),(getPosATL _carrier select 2)];
											_x setVariable ['_loadout', (getUnitLoadout _x)];
											_x addBackPack 'B_parachute';
											_x setPosATL _dropPos;
											sleep 0.5;
										} forEach (units _reinforcements);
										_carrier animateDoor [_doorAnim,0];
										waitUntil {({isTouchingGround _x} forEach (units _reinforcements))};
										{
											if (alive _x) then {
												_x setUnitLoadout (_x getVariable '_loadout');
											};
										} forEach (units _reinforcements);
									
										if(_side == _side) then {
											_waypointSpeeds = ['LIMITED'];
										} else {
											_waypointSpeeds = ['UNCHANGED','LIMITED','NORMAL','FULL'];
										};
										
										[_reinforcements, _pos, 300] call BIS_fnc_taskPatrol;
										sleep 5;
										for '_i' from count waypoints _reinforcements - 1 to 0 step -1 do {
												[_reinforcements, _i] setWaypointSpeed selectRandom _waypointSpeeds;
												[_reinforcements, _i] setWaypointBehaviour 'SAFE';
										};
										
										[[(getPos (leader _reinforcements)),_side],{
											params ['_pos','_side'];
											if ((side player) == _side) then {
												if (_side == west) then {
													player sideRadio (selectRandom ['mp_groundsupport_15_disembarked_BHQ_0','mp_groundsupport_15_disembarked_BHQ_1','mp_groundsupport_15_disembarked_BHQ_2']);
												} else {
													if (_side == east) then {
														player sideRadio (selectRandom ['mp_groundsupport_15_disembarked_OHQ_0','mp_groundsupport_15_disembarked_OHQ_1','mp_groundsupport_15_disembarked_OHQ_2']);
													} else {
														player sideRadio (selectRandom ['mp_groundsupport_15_disembarked_IHQ_0','mp_groundsupport_15_disembarked_IHQ_1','mp_groundsupport_15_disembarked_IHQ_2']);
													};
												};
												[_side, 'HQ'] sideChat (format ['Be advised, 1x Paratrooper Reinforcements Squad of 5 for Grid ''%1'' now boots on the ground!', (mapGridPosition (_pos))]);
											};
										}] remoteExec ['bis_fnc_call',0,false];
										deleteMarker _markerID;
										deleteMarker _markerIDArea;
									};

									deleteWaypoint _wayPointMove;
									_wayPointMove2 = _grp addWaypoint [[(_pos select 0),(_pos select 1)+6000,150],0]; 
									_wayPointMove2 setWaypointType 'MOVE';
									_wayPointMove2 setWaypointStatements ['true', '{deleteVehicle _x} forEach crew (vehicle this) + [vehicle this];'];
									_grp setCurrentWaypoint _wayPointMove2;
								};
							"]] call BIS_fnc_addCommMenuItem)];
							_entity setVariable ["_supportParatrooper",true];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now has access to Paratrooper Reinforcements support!", (name _entity)];
					};
				} else {
					if (!((_entity getVariable ["_supportParatrooper_ItemID",-1]) == -1)) then {
						[[_entity],{
							params ['_entity'];
							sleep 2;
							[_entity, (_entity getVariable ["_supportParatrooper_ItemID",-1])] call BIS_fnc_removeCommMenuItem;
							_entity setVariable ["_supportParatrooper_ItemID",-1];
							_entity setVariable ["_supportParatrooper",false];
						}] remoteExec ['bis_fnc_call',0,false];
						systemchat format ["[ LOG ] '%1' now no longer has access to Paratrooper Reinforcements support!", (name _entity)];
					};
				};
				
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},_entity] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_activeSQFModule = {
			private ['_sqfCount','_sqfDetails'];
			_sqfCount = diag_activeScripts;
			_sqfDetails = diag_activeSQFScripts;
			
			_sqfCountString = '';
			_sqfCountString = format['%1Total Active: %6 || spawn: %2 || execVM: %3 || exec: %4 || execFSM: %5',_sqfCountString,(_sqfCount select 0),(_sqfCount select 1),(_sqfCount select 2),(_sqfCount select 3),((_sqfCount select 0) + (_sqfCount select 1) + (_sqfCount select 2) + (_sqfCount select 3))];
			
			_sqfDetailsString = '';
			for '_x' from 0 to (count _sqfDetails) - 1 do {
				_sqfDetailsString = parseText format['%1Script #%2: || Title: %3 || Filepath: %4 || isRunning: %5 || currentLine: %6 ||',_sqfDetailsString,_x,((_sqfDetails select _x) select 0),((_sqfDetails select _x) select 1),((_sqfDetails select _x) select 2),((_sqfDetails select _x) select 3)];
			};
			
			["Debug Menu",[
				[
					"EDIT:MULTI",
					"Active SQF Count:",
					[_sqfCountString]
				],
				[
					"EDIT:MULTI",
					"Active SQF Details:",
					[_sqfDetailsString]
				]
			],{
				params ["_values","_args","_display"];
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};

		LM_fnc_scriptCreditsModule = {
			["Script Credits",[
				[
					"LIST",
					"Special thanks to these authors who have worked tirelessly to provide their scripts",
					[
						[],
						[
							["","",""]
						],
						0,
						0
					]
				],
				[
					"LIST",
					"for public use to the ARMA community. AEGIS would not be possible without them:",
					[
						[],
						[
							["","",""]
						],
						0,
						0
					]
				],
				[
					"LIST",
					["Scripts:","Please see below the list of modules added by AEGIS and their respective authors."],
					[
						["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],
						[
							["Enhanced Zeus Modules","A great thanks to Creator Expung3d, for allowing the AEGIS fork to exist publicly,\nand for his invaluable assistance answering with my endless questions, as well as his crucial feedback.","\a3\Ui_F_Curator\Data\Logos\arma3_curator_eye_256_ca.paa"],
							["Auto Garrison Town","Creation Credit: Expung3d, Expanded By: Lockheed Martin","a3\modules_f_curator\data\portraitobjectiveneutralize_ca.paa"],
							["Create Destroyer","Creation Credit: Lockheed Martin","\a3\ui_f_curator\Data\Displays\RscDisplayCurator\modeModules_ca.paa"],
							["Composition Copier","Creation Credit: Lockheed Martin","a3\3den\data\cfgwaypoints\scripted_ca.paa"],
							["Composition Paster","Creation Credit: Lockheed Martin","a3\3den\data\cfgwaypoints\scripted_ca.paa"],
							["Debug Console","Creation Credit: Bohemia Interactive, Integrated By: Lockheed Martin","a3\3den\data\displays\display3den\entitymenu\findconfig_ca.paa"],
							["Dynamic Tasks Framework","Creation Credit: LISTINGS09","\A3\ui_f\data\map\markers\nato\o_installation.paa"],
							["Monsoon Storm","Creation Credit: ALIAScartoons","a3\modules_f_curator\data\portraitweather_ca.paa"],
							["Object Fog","Creation Credit: ALIAScartoons","a3\modules_f_curator\data\portraitweather_ca.paa"],
							["Sand Storm","Creation Credit: ALIAScartoons","a3\modules_f_curator\data\portraitweather_ca.paa"],
							["Snow Storm","Creation Credit: ALIAScartoons","a3\modules_f_curator\data\portraitweather_ca.paa"],
							["Cover Map Area","Creation Credit: Lockheed Martin","a3\ui_f\data\map\markerbrushes\fdiagonal_ca.paa"],
							["Add Radio Channel","Creation Credit: Lockheed Martin","a3\modules_f_curator\data\portraitradio_ca.paa"],
							["Arsenal Restrictions","Creation Credit: Lockheed Martin","\A3\ui_f\data\Logos\a_64_ca.paa"],
							["Arsenal on Respawn","Creation Credit: Lockheed Martin","\A3\ui_f\data\Logos\a_64_ca.paa"],
							["Cinematic Intro","Creation Credit: Lockheed Martin","a3\ui_f\data\gui\cfg\keyframeanimation\iconcamera_ca.paa"],
							["Fade-In Intro","Creation Credit: Lockheed Martin","\a3\ui_f\data\igui\cfg\simpletasks\types\Talk_ca.paa"],
							["Friendly Markers","Creation Credit: fn_Quiksilver","a3\3den\data\displays\display3den\panelright\submode_marker_icon_ca.paa"],
							["Kill Feed","Creation Credit: Lockheed Martin","\a3\Ui_F_Curator\Data\CfgMarkers\kia_ca.paa"],
							["Last Loadout on Respawn","Creation Credit: Lockheed Martin","a3\ui_f\data\igui\cfg\actions\gear_ca.paa"],
							["Phase Transition","Creation Credit: Lockheed Martin","\a3\ui_f\data\igui\cfg\simpletasks\types\Talk_ca.paa"],
							["Dynamic Sim System Control","Creation Credit: Lockheed Martin","a3\3den\data\cfgwaypoints\scripted_ca.paa"],
							["Scale Object","Creation Credit: Lockheed Martin","a3\3den\data\cfgwaypoints\scripted_ca.paa"],
							["Toggle Dynamic Sim","Creation Credit: Lockheed Martin","a3\modules_f\data\hideterrainobjects\icon_ca.paa"],
							["Toggle Dynamic Sim (Radius)","Creation Credit: Lockheed Martin","a3\modules_f\data\hideterrainobjects\icon_ca.paa"],
							["Toggle Dynamic Sim (Global)","Creation Credit: Lockheed Martin","a3\modules_f\data\hideterrainobjects\icon_ca.paa"],
							["Build Menu","Creation Credit: Lockheed Martin","a3\modules_f\data\editterrainobject\texturechecked_wall_ca.paa"],
							["Bullet Tracing","Creation Credit: Lockheed Martin","a3\ui_f_curator\data\cfgcurator\laser_ca.paa"],
							["Drag Bodies","Creation Credit: RickOShay","\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\heal_ca.paa"],
							["Ear Plugs","Creation Credit: GEORGE FLOROS GR","\A3\ui_f\data\IGUI\RscIngameUI\RscDisplayChannel\MuteVON_crossed_ca.paa"],
							["Head Lamp","Creation Credit: Lockheed Martin","a3\3den\data\displays\display3den\toolbar\flashlight_off_ca.paa"],
							["Helmet Camera","Creation Credit: Lockheed Martin","a3\ui_f\data\gui\cfg\keyframeanimation\iconcamera_ca.paa"],
							["Holster Weapon","Creation Credit: GEORGE FLOROS GR","\a3\ui_f\data\igui\cfg\simpletasks\types\rifle_ca.paa"],
							["Player Animations","Creation Credit: Lockheed Martin","a3\ui_f_curator\data\rsccommon\rscattributepunishmentanimation\pushupslegs.paa"],
							["Player Names","Creation Credit: Original author currently unknown, we do not take credit for this script","\A3\ui_f\data\gui\rsc\rscdisplayarsenal\radio_ca.paa"],
							["Spectator Mode","Creation Credit: Lockheed Martin","a3\ui_f\data\gui\cfg\keyframeanimation\iconcamera_ca.paa"],
							["Stamina (Enable / Disable)","Creation Credit: Qq","\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\run_ca.paa"],
							["Support Menu","MIL_CAS Credit: beno_83au, GUI Credit: Lockheed Martin","\A3\ui_f\data\GUI\Cfg\CommunicationMenu\mortar_ca.paa"],
							["Player/Vehicle Respawn","Creation Credit: Lockheed Martin","\A3\ui_f\data\map\markers\nato\respawn_inf_ca.paa"],
							["Friendly Fire","Creation Credit: Lockheed Martin","\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\kill_ca.paa"],
							["Moderator Control","Creation Credit: Qq, Adapted By: Lockheed Martin","\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\help_ca.paa"],
							["Player Control","Creation Credit: Lockheed Martin","\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\meet_ca.paa"],
							["Profanity Filter","Creation Credit: Expung3d","a3\3den\data\cfg3den\comment\texture_ca.paa"],
							["Server Lock","Creation Credit: Lockheed Martin","\a3\ui_f\data\igui\cfg\actions\open_door_ca.paa"],
							["Screamer Spawn","Creation Credit: ALIAScartoons","\a3\Ui_F_Curator\Data\CfgMarkers\kia_ca.paa"],
							["Ambient Music","Creation Credit: Lockheed Martin","\A3\ui_f\data\IGUI\RscIngameUI\RscDisplayChannel\MuteVON_ca.paa"],
							["Play Sound","Creation Credit: Lockheed Martin","\A3\ui_f\data\IGUI\RscIngameUI\RscDisplayChannel\MuteVON_ca.paa"],
							["Play Track","Creation Credit: Lockheed Martin","\A3\ui_f\data\IGUI\RscIngameUI\RscDisplayChannel\MuteVON_ca.paa"],
							["Play Radio Message","Creation Credit: Lockheed Martin","\A3\ui_f\data\IGUI\RscIngameUI\RscDisplayChannel\MuteVON_ca.paa"],
							["Play Voiceline","Creation Credit: Lockheed Martin","\A3\ui_f\data\IGUI\RscIngameUI\RscDisplayChannel\MuteVON_ca.paa"],
							["Aircraft Flyby","Creation Credit: Lockheed Martin","\a3\ui_f\data\igui\cfg\simpletasks\types\Plane_ca.paa"],
							["Aurora Effect","Creation Credit: ALIAScartoons","a3\3den\data\displays\display3den\toolbar\flashlight_off_ca.paa"],
							["Firefly Effect","Creation Credit: ALIAScartoons","a3\3den\data\displays\display3den\toolbar\flashlight_off_ca.paa"],
							["Play Video","Creation Credit: Lockheed Martin","\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\whiteboard_ca.paa"],
							["Rupture Effect","Creation Credit: ALIAScartoons","a3\3den\data\displays\display3den\toolbar\flashlight_off_ca.paa"],
							["Sparks Effect","Creation Credit: ALIAScartoons","a3\3den\data\displays\display3den\toolbar\flashlight_off_ca.paa"]
						],
						-1
					]
				],
				[
					"LIST",
					"If you feel credit is missing, please let Lockheed Martin know so it may be added ASAP",
					[
						[],
						[
							["","",""]
						],
						0,
						0
					]
				],
				[
					"LIST",
					"An extra special thanks to the testers below for their support and endless patience:",
					[
						[],
						[
							["","",""]
						],
						0,
						0
					]
				],
				[
					"LIST",
					["Testers:","Please see below the list of the invaluable people who dedicated their time and pateince to help make AEGIS what it is now. My never ending thanks to all those who helped along the way."],
					[
						["","","","","","","","","","","","","","","","",""],
						[
							["Expung3d","https://steamcommunity.com/id/expung3d/","\a3\Ui_F_Curator\Data\Logos\arma3_curator_eye_256_ca.paa"],
							["Zaco Kick","https://steamcommunity.com/profiles/76561198358820610/","\a3\Ui_F_Curator\Data\Logos\arma3_curator_eye_256_ca.paa"],
							["Lenovo","https://steamcommunity.com/profiles/76561198811777680/","\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa"],
							["Delta 1-1","https://steamcommunity.com/profiles/76561199446924218/",""],
							["PITN","https://steamcommunity.com/profiles/76561197974136995/",""],
							["Draconic_Naga","https://steamcommunity.com/id/games_for_snakes/",""],
							["MyPCisTrash3","https://steamcommunity.com/id/MyPCisTrash3/",""],
							["SovietBvando","https://steamcommunity.com/profiles/76561198804893569/",""],
							["kenstin91","https://steamcommunity.com/profiles/76561198258625070/",""],
							["Wenhelxing","https://steamcommunity.com/id/Wenhelxing/",""],
							["AudiNL10","https://steamcommunity.com/profiles/76561198808270483/",""],
							["ChaseM101","https://steamcommunity.com/id/KingDaniel101/",""],
							["KrimatorHL2Beta","https://steamcommunity.com/profiles/76561198343016902/",""],
							["Typhoon","https://steamcommunity.com/profiles/76561198880548355/",""],
							["Voraus5304","https://steamcommunity.com/profiles/76561198323540514/",""],
							["Stinger913","https://steamcommunity.com/id/Stinger913/",""],
							["harbinger942","https://steamcommunity.com/profiles/76561197991773073/",""]
						],
						-1
					]
				]
			],{
				params ["_values","_args","_display"];
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_headLampModule = {
			params ["_entity"];
			if (!(isNull _entity) and ((typeOf _entity) isKindOf "Man")) then {
				_weaponHolder = (([AGLtoASL [0,0,0], "Weapon_Empty", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
				_weaponHolder addWeaponCargo ["acc_flashlight", 1];

				_light = (([AGLtoASL [0,0,0], "Reflector_Cone_01_narrow_white_F", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
				_light attachTo [_weaponHolder,[0.0825,0.025,0.01]];
				[_light, [90,0,0]] call BIS_fnc_setObjectRotation;

				 _weaponHolder attachTo [_entity, [0.03, -0.06, 0.15], "head", true];
				[_weaponHolder, [270,-90,0]] call BIS_fnc_setObjectRotation;
			} else {
				[[],{
					waitUntil {!isNull (findDisplay 46) && alive player};
					player removeMPEventHandler ['MPRespawn',(player getVariable ['LM_MPEH_headLamp',-1])];
					(findDisplay 46) displayRemoveEventHandler ['KeyDown',(player getVariable ['LM_DEH_headLamp',-1])];
					player setVariable ['isHeadLamp',false];
					missionNamespace setVariable ['isHeadLamp',true];
					_mpehID = player addMPEventHandler ["MPRespawn", { 
						player setVariable ['isHeadLamp',false]; 
					}];
					_dehID = (findDisplay 46) displayAddEventHandler ["KeyDown", {
						if (((_this select 1) == 38) and (_this select 3)) then {
							_isHeadLampOn = player getVariable 'isHeadLamp';
							if(not _isHeadLampOn) then {
								titleText ["<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + " size='2'font='PuristaBold'>HEAD LAMP ON, PRESS 'CTRL+L' TO TAKE OFF</t>", "PLAIN DOWN", -1, false, true];	
								
								_weaponHolder = (([AGLtoASL [0,0,0], "Weapon_Empty", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_weaponHolder addWeaponCargo ["acc_flashlight", 1];

								_light = (([AGLtoASL [0,0,0], "Reflector_Cone_01_narrow_white_F", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
								_light attachTo [_weaponHolder,[0.0825,0.025,0.01]];
								[_light, [90,0,0]] call BIS_fnc_setObjectRotation;

								 _weaponHolder attachTo [player, [0.03, -0.06, 0.15], "head", true];
								[_weaponHolder, [270,-90,0]] call BIS_fnc_setObjectRotation;

								player setVariable ['_headLamp_weaponHolder',_weaponHolder];
								player setVariable ['_headLamp_light',_light];
								
								player setVariable ['isHeadLamp',true];
							} else {	
								titleText ["<t color='#FFFFFF' size='2'font='PuristaBold'>HEAD LAMP TAKEN OFF</t>", "PLAIN DOWN", -1, false, true];
								
								_weaponHolder = (player getVariable '_headLamp_weaponHolder');
								_light = (player getVariable '_headLamp_light');
								detach _light;
								
								deleteVehicle _weaponHolder;
								deleteVehicle _light;
								
								player setVariable ['isHeadLamp',false];
							};
						};
					}];
					player setVariable ['LM_MPEH_headLamp',_mpehID];
					player setVariable ['LM_DEH_headLamp',_dehID];
					titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>Press '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">CTRL+L</t>' to equip a <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">head lamp</t>!</t>", "PLAIN DOWN", -1, false, true];
					["IntelAdded", ["• Head Lamp Added! 
	 
					<br /><font size='15' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Head Lamp
					<br />
					<br /><font size='12' color='#FFFFFF'>This feature allows you to equip a flashlight to your head which will follow it, providing greater visibility.
					<br />
					<br /><font size='14' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">How to Enable:
					<br />
					<br /><font size='12' color='#FFFFFF'>• Press '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">CTRL+L<font size='12' color='#FFFFFF'>' to equip a Head Lamp!
					<br />
					<br /><font size='14' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">How to Disable:
					<br />
					<br /><font size='12' color='#FFFFFF'>• Once equipped, press '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">CTRL+L<font size='12' color='#FFFFFF'>' again to take off the Head Lamp!
					"]] call BIS_fnc_showNotification;
					
					if ((player getVariable ["LM_keybindings_height_headLamp", 2000]) == 2000) then {
						player setVariable ["LM_keybindings_height", ((player getVariable ["LM_keybindings_height", 2000])+2000)];
						player setVariable ["LM_keybindings_height_headLamp", (player getVariable "LM_keybindings_height")];
						findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
							_this select 0 drawIcon [
								"\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa",
								[1,1,1,1],
								[worldSize+(500/(("Altis" call BIS_fnc_mapSize) / (worldSize))),worldSize-((player getVariable ["LM_keybindings_height_headLamp",2000])/(("Altis" call BIS_fnc_mapSize) / (worldSize))),0],
								0,
								0,
								0,
								"• Press 'CTRL+L' to enable Head Lamp",
								1,
								(1.75 / (6.4 * worldSize / 8192 * ctrlMapScale ((findDisplay 12) displayCtrl 51)))/(("Altis" call BIS_fnc_mapSize) / (worldSize)),
								"PuristaBold",
								"right"
							]
						}];
					};
				}] remoteExec ['bis_fnc_call',0,"LM_JIP_headLamp"]; 
				systemchat "[ LOG ] Press 'CTRL+L' to equip headlamp";
			};
		};
		
		LM_fnc_helmetCameraModule = {
			[[],{
				waitUntil {!isNull (findDisplay 46) && alive player};
				player removeMPEventHandler ['MPRespawn',(player getVariable ['LM_MPEH_helmetCamera',-1])];
				(findDisplay 46) displayRemoveEventHandler ['KeyDown',(player getVariable ['LM_DEH_helmetCamera',-1])];
				(findDisplay 46) displayRemoveEventHandler ['KeyDown',(player getVariable ['LM_DEH_helmetCamera_reload',-1])];
				(findDisplay 46) displayRemoveEventHandler ['MouseButtonDown',(player getVariable ['LM_DEH_helmetCamera_fire',-1])];
				player setVariable ['isHelmetCamera',false];
				missionNamespace setVariable ['isHelmetCamera',true];
				_mpehID = player addMPEventHandler ["MPRespawn", { 
					player setVariable ['isHelmetCamera',false]; 
				}];
				_dehID = (findDisplay 46) displayAddEventHandler ["KeyDown", {
					if (((_this select 1) == 24) and (_this select 3)) then {
						_isHeadLampOn = player getVariable 'isHelmetCamera';
						player switchCamera "INTERNAL";
						if(not _isHeadLampOn) then {
							titleText ["<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + " size='2'font='PuristaBold'>HELMET CAMERA ENABLED, PRESS 'CTRL+O' TO DISABLE</t>", "PLAIN DOWN", -1, false, true];	
							
							_cameraHolder = (([AGLtoASL [0,0,0], "Weapon_Empty", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);

							_camera = (([AGLtoASL [0,0,0], "camera", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
							_camera attachTo [_cameraHolder,[0.0825,0.025,0.01]];
							[_camera, [90,0,0]] call BIS_fnc_setObjectRotation;

							 _cameraHolder attachTo [player, [0.18, -0.27, 0.145], "head", true];
							[_cameraHolder, [270,0,0]] call BIS_fnc_setObjectRotation;
							
							switchCamera _camera;
							
							_dehID_gunReload = findDisplay 46 displayAddEventHandler ["KeyDown", {
								if (_this select 1 in actionKeys "ReloadMagazine") then {
									reload player;
								};
								false
							}];
							_dehID_gunFire = findDisplay 46 displayAddEventHandler ["MouseButtonDown", {
								if (_this select 1 == 0) then {
									player forceWeaponFire [currentMuzzle player, currentWeaponMode player];
								};
								false
							}];

							player setVariable ['LM_DEH_helmetCamera_reload',_dehID_gunReload];
							player setVariable ['LM_DEH_helmetCamera_fire',_dehID_gunFire];
							player setVariable ['_helmetCamera_cameraHolder',_cameraHolder];
							player setVariable ['_helmetCamera_camera',_camera];
							
							player setVariable ['isHelmetCamera',true];
						} else {	
							titleText ["<t color='#FFFFFF' size='2'font='PuristaBold'>HELMET CAMERA DISABLED</t>", "PLAIN DOWN", -1, false, true];
							
							_cameraHolder = (player getVariable '_helmetCamera_cameraHolder');
							_camera = (player getVariable '_helmetCamera_camera');
							
							deleteVehicle _cameraHolder;
							deleteVehicle _camera;
							
							player setVariable ['isHelmetCamera',false];
						};
					};
				}];
				player setVariable ['LM_MPEH_helmetCamera',_mpehID];
				player setVariable ['LM_DEH_helmetCamera',_dehID];
				titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>Press '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">CTRL+O</t>' to swap to your <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Helmet Camera</t>!</t>", "PLAIN DOWN", -1, false, true];
				["IntelAdded", ["• Helmet Camera Added! 
 
				<br /><font size='15' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Helmet Camera
				<br />
				<br /><font size='12' color='#FFFFFF'>This feature allows you to swap your perspective to a helmet mounted camera, offering a tactical view.
				<br />
				<br /><font size='14' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">How to Enable:
				<br />
				<br /><font size='12' color='#FFFFFF'>• Press '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">CTRL+O<font size='12' color='#FFFFFF'>' to change perspective to your Helmet Camera!
				<br />
				<br /><font size='14' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">How to Disable:
				<br />
				<br /><font size='12' color='#FFFFFF'>• Once swapped to, press '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">CTRL+O<font size='12' color='#FFFFFF'>' again to switch back to your normal perspective!
				"]] call BIS_fnc_showNotification;
				
				if ((player getVariable ["LM_keybindings_height_headLamp", 2000]) == 2000) then {
					player setVariable ["LM_keybindings_height", ((player getVariable ["LM_keybindings_height", 2000])+2000)];
					player setVariable ["LM_keybindings_height_headLamp", (player getVariable "LM_keybindings_height")];
					findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
						_this select 0 drawIcon [
							"\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa",
							[1,1,1,1],
							[worldSize+(500/(("Altis" call BIS_fnc_mapSize) / (worldSize))),worldSize-((player getVariable ["LM_keybindings_height_headLamp",2000])/(("Altis" call BIS_fnc_mapSize) / (worldSize))),0],
							0,
							0,
							0,
							"• Press 'CTRL+O' to swap to Helmet Camera",
							1,
							(1.75 / (6.4 * worldSize / 8192 * ctrlMapScale ((findDisplay 12) displayCtrl 51)))/(("Altis" call BIS_fnc_mapSize) / (worldSize)),
							"PuristaBold",
							"right"
						]
					}];
				};
			}] remoteExec ['bis_fnc_call',0,"LM_JIP_helmetCamera"]; 
			systemchat "[ LOG ] Press 'CTRL+O' to swap to Helmet Camera";
		};
		
		LM_fnc_compositionCopierModule = {
			private _pos = [] call MAZ_EZM_fnc_getScreenPosition;

			["Composition Copier",[
				[
					"EDIT:MULTI",
					["Raw Composition Data:","Paste the raw output of an existing composition here in order to save it to yourself.\nOtherwise leave blank in order to copy objects in the radius you specify below."],
					[""]
				],
				[
				 "SLIDER:RADIUS", 
				 ["Copy Radius (m):","Choose area to copy objects from."], 
				 [1,2500,50,_pos,[1,1,1,1]] 
				],
				[
					"TOOLBOX",
					["Men Control:","Choose whether to include or exclude men from being copied."],
					[true, ["Exclude","Include"]]
				],
				[
					"TOOLBOX",
					["Terrain Objects:","Choose whether to include or exclude terrain objects from being copied."],
					[true, ["Include","Exclude"]]
				],
				[
					"EDIT",
					["Composition Name:","Provide a name for your composition to display when using the module 'Composition Paster'."],
					['']
				],
				[
					"EDIT:MULTI",
					["Composition Description:","Provide a description for your composition to display when using the module 'Composition Paster'."],
					['']
				],
				[
					"LIST",
					"NOTE: Objects currently attached to other objects will be skipped!",
					[
						[],
						[
							["","",""]
						],
						0,
						0
					]
				]
			],{
				params ["_values","_pos","_display"];
				_values params ["_rawCompArray","_radius","_includeMen","_excludeTerrain","_compName","_compDesc"];
				
				_profileComps = profileNamespace getVariable ["LM_var_savedComps", []];
				_compiledArray = call compile _rawCompArray;
				if (!(str(compile _rawCompArray) == "{}")) then {
					if ((typeName _compiledArray) == "ARRAY") then {
						if (count _compiledArray == 6) then {
							if (((typeName (_compiledArray select 0)) == "STRING") and ((typeName (_compiledArray select 1)) == "STRING") and ((typeName (_compiledArray select 2)) == "STRING") and ((typeName (_compiledArray select 3)) == "STRING") and ((typeName (_compiledArray select 4)) == "STRING") and ((typeName (_compiledArray select 5)) == "ARRAY")) then {
								_profileComps append [_compiledArray];
								profileNamespace setVariable ["LM_var_savedComps", _profileComps];
								saveProfileNamespace;
								_display closeDisplay 1;
							} else {
								["Improperly formatted array provided for field 'Raw Composition Data' hence no objects can be pasted, check formatting!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
							};
						} else {
							["Improperly formatted array provided for field 'Raw Composition Data' hence no objects can be pasted, check formatting!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
						};
					};
				} else {
					if (_compName == "") then {
						["Please provide a composition name!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
					} else {
						_savedObjects = [[(_pos select 0), (_pos select 1)], _radius, true, _includeMen, _excludeTerrain] call LM_fnc_objectsGrabber;
						if (count (_savedObjects select 0) <= 2) then {
							[format ["No editable objects were located within '%1' (m) of position '%2' and thus nothing has been copied!", _radius, [(_pos select 0), (_pos select 1)]],"addItemFailed"] call MAZ_EZM_fnc_systemMessage;
						} else {
							_timeCreated = systemTimeUTC;
							_profileComps append [[name player, worldName, format["%1/%2/%3, %4:%5 (UTC)", _timeCreated select 1, _timeCreated select 2, _timeCreated select 0, _timeCreated select 3, _timeCreated select 4], _compName, _compDesc, _savedObjects]];
							profileNamespace setVariable ["LM_var_savedComps", _profileComps];
							saveProfileNamespace;
							systemchat format ["[ LOG ] Composition '%4' with '%1' objects within '%2' (m) of position '%3' have been saved, now please open the Paster Module!", (count _savedObjects)-1, _radius, [(_pos select 0), (_pos select 1)], _compName];
							_display closeDisplay 1;
						};
					};
				};
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},_pos] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_compositionPasterModule = {
			LM_var_compPasterPos = [] call MAZ_EZM_fnc_getScreenPosition;
			
			LM_fnc_compositionPaste = {
				params ["_pos", "_copiedObjects","_positionControl","_surfaceControl","_objRotation","_includeMen","_excludeCrew","_damageControl","_simulationControl","_editableControl","_side"];
				
				_objectsArray = call compile str(_copiedObjects);
				
				private ['_menControl','_stringControl'];
				if (_includeMen) then {
					_menControl = 'Include';
				} else {
					_menControl = 'Exclude';
				};
				if (_positionControl) then {
					_stringControl = 'Original';
				} else {
					_stringControl = 'Relative';
				};
				
				_placedDecor = [[(_pos) select 0,(_pos) select 1], _objRotation, _objectsArray, 0, _positionControl, _surfaceControl, _includeMen, _excludeCrew, _damageControl, _simulationControl, _editableControl, _side] call LM_fnc_objectsMapper;
				
				[format ["[ LOG ] Pasted '%1' objects in their '%4' positions for side '%2' with men '%3'!", (count _placedDecor), str(_side), _menControl, _stringControl],"addItemOk"] call MAZ_EZM_fnc_systemMessage;
			};
			
			LM_fnc_ctrlLblChanged = {
				params ["_control", "_lbCurSel"];
						
				if (!(str(compile (_control lbData _lbCurSel)) == "{}")) then {
					_lblData = call compile (_control lbData _lbCurSel);
					if ((typeName _lblData) == "ARRAY") then {
						ctrlLabelMap ctrlSetText (_lblData select 1);
						ctrlLabelTime ctrlSetText (_lblData select 2);
						ctrlLabelAuthor ctrlSetText (_lblData select 0);
						ctrlLabelIndex ctrlSetText str(_lbCurSel);
						ctrlEditName ctrlSetText (_lblData select 3);
						ctrlEditMultiDescription ctrlSetText (_lblData select 4);
						ctrlEditMultiCompShare ctrlSetText str(_lblData);
					};
				};
			};
			
			LM_fnc_ctrlListboxListUpdate = {
				lbClear  ctrlListboxListComps;
				 {
					_ctrl = ctrlListboxListComps lbAdd format["%1", _x select 3];
					ctrlListboxListComps lbSetTooltip [_ctrl, format["[Comp Creation Information]\n\nMap: %1\nTime: %2 UTC\nAuthor: %3\nObjects: %6\n\nName: %4\nDescription:\n%5", _x select 1, _x select 2, _x select 0, _x select 3, _x select 4, count (_x select 5)]];
					
					switch (_x select 1) do {
						case "Altis" : {
							ctrlListboxListComps lbSetPicture [_ctrl, "\A3\ui_f\data\map\markers\flags\Altis_ca.paa"];
						};
						case "Stratis" : {
							ctrlListboxListComps lbSetPicture [_ctrl, "\A3\ui_f\data\map\markers\flags\AAF_ca.paa"];
						};
						case "Malden" : {
							ctrlListboxListComps lbSetPicture [_ctrl, "\A3\ui_f\data\map\markers\flags\AltisColonial_ca.paa"];
						};
						case "Tanoa" : {
							ctrlListboxListComps lbSetPicture [_ctrl, "\A3\Ui_f\data\Map\Markers\Flags\tanoa_ca.paa"];
						};
						case "Enoch" : {
							ctrlListboxListComps lbSetPicture [_ctrl, "\a3\UI_F_Enoch\Data\CfgMarkers\Livonia_CA.paa"];
						};
						default {
							ctrlListboxListComps lbSetPicture [_ctrl, "\A3\ui_f\data\map\markers\handdrawn\unknown_CA.paa"];
						};
					};
					ctrlListboxListComps lbSetData [_ctrl, str(_x)];
				 } forEach (profileNamespace getVariable ["LM_var_savedComps", []]);
			};
			
			disableSerialization;
			
			createDialog "RscDisplayEmpty";
			_display = findDisplay -1;
			_ctrlGroup = _display ctrlCreate ["RscControlsGroup", -1];
			
			_ctrlTitleList = _display ctrlCreate ["RscText", -1, _ctrlGroup];
				_ctrlTitleList ctrlSetText "Saved Compositions:";
				_ctrlTitleList ctrlSetPosition [0, 0, 0.45, 0.04];
				_ctrlTitleList ctrlSetBackgroundColor LM_trimColor_RGBA;
				_ctrlTitleList ctrlCommit 0;
			
				_ctrlBackgroundList = _display ctrlCreate ["RscTextMulti", -1, _ctrlGroup];
					_ctrlBackgroundList ctrlSetPosition [0, 0.045, 0.45, 0.5];
					_ctrlBackgroundList ctrlSetBackgroundColor [0,0,0,0.4];
					_ctrlBackgroundList ctrlEnable false;
					_ctrlBackgroundList ctrlCommit 0;
				
				ctrlListboxListComps = _display ctrlCreate ["RscListbox", -1, _ctrlGroup];
					ctrlListboxListComps ctrlSetPosition [0.01, 0.06, 0.43, 0.47];
					ctrlListboxListComps ctrlAddEventHandler ["LBSelChanged", {
						params ["_control", "_lbCurSel", "_lbSelection"];
						
						[_control, _lbCurSel] call LM_fnc_ctrlLblChanged;
					}];
					ctrlListboxListComps ctrlCommit 0;
				
				[] call LM_fnc_ctrlListboxListUpdate;
				ctrlListboxListComps lbSetCurSel 0;
			 
			
			_ctrlTitleInfo = _display ctrlCreate ["RscText", -1, _ctrlGroup];
				_ctrlTitleInfo ctrlSetText "Composition Information:";
				_ctrlTitleInfo ctrlSetPosition [0, 0.555, 0.45, 0.04];
				_ctrlTitleInfo ctrlSetBackgroundColor LM_trimColor_RGBA;
				_ctrlTitleInfo ctrlCommit 0;
				
				_ctrlTitleMap = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleMap ctrlSetText "Map:";
					_ctrlTitleMap ctrlSetTooltip "World the composition was created on.";
					_ctrlTitleMap ctrlSetPosition [0, 0.6, 0.135, 0.04];
					_ctrlTitleMap ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleMap ctrlCommit 0;
				
					ctrlLabelMap = _display ctrlCreate ["RscEdit", -1, _ctrlGroup];
						ctrlLabelMap ctrlSetText "";
						ctrlLabelMap ctrlSetTooltip "";
						ctrlLabelMap ctrlSetPosition [0.14, 0.6, 0.31, 0.04];
						ctrlLabelMap ctrlSetBackgroundColor [0,0,0,0.5];
						ctrlLabelMap ctrlEnable false;
						ctrlLabelMap ctrlCommit 0;
					
				_ctrlTitleTime = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleTime ctrlSetText "Time:";
					_ctrlTitleTime ctrlSetTooltip "UTC System Time at which the composition was created at.";
					_ctrlTitleTime ctrlSetPosition [0, 0.645, 0.135, 0.04];
					_ctrlTitleTime ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleTime ctrlCommit 0;
				
					ctrlLabelTime = _display ctrlCreate ["RscEdit", -1, _ctrlGroup];
						ctrlLabelTime ctrlSetText "";
						ctrlLabelTime ctrlSetTooltip "";
						ctrlLabelTime ctrlSetPosition [0.14, 0.645, 0.31, 0.04];
						ctrlLabelTime ctrlSetBackgroundColor [0,0,0,0.5];
						ctrlLabelTime ctrlEnable false;
						ctrlLabelTime ctrlCommit 0;
					
				_ctrlTitleAuthor = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleAuthor ctrlSetText "Author:";
					_ctrlTitleAuthor ctrlSetTooltip "The name of the player whom orignally saved the composition.";
					_ctrlTitleAuthor ctrlSetPosition [0, 0.69, 0.135, 0.04];
					_ctrlTitleAuthor ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleAuthor ctrlCommit 0;
				
					ctrlLabelAuthor = _display ctrlCreate ["RscEdit", -1, _ctrlGroup];
						ctrlLabelAuthor ctrlSetText "";
						ctrlLabelAuthor ctrlSetTooltip "";
						ctrlLabelAuthor ctrlSetPosition [0.14, 0.69, 0.31, 0.04];
						ctrlLabelAuthor ctrlSetBackgroundColor [0,0,0,0.5];
						ctrlLabelAuthor ctrlEnable false;
						ctrlLabelAuthor ctrlCommit 0;
					
				_ctrlTitleIndex = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleIndex ctrlSetText "List Index:";
					_ctrlTitleIndex ctrlSetTooltip "";
					_ctrlTitleIndex ctrlSetPosition [0, 0.735, 0.135, 0.04];
					_ctrlTitleIndex ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleIndex ctrlCommit 0;
				
					ctrlLabelIndex = _display ctrlCreate ["RscEdit", -1, _ctrlGroup];
						ctrlLabelIndex ctrlSetText "";
						ctrlLabelIndex ctrlSetTooltip "";
						ctrlLabelIndex ctrlSetPosition [0.14, 0.735, 0.31, 0.04];
						ctrlLabelIndex ctrlSetBackgroundColor [0,0,0,0.5];
						ctrlLabelIndex ctrlEnable false;
						ctrlLabelIndex ctrlCommit 0;
					
				_ctrlTitleName = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleName ctrlSetText "Title:";
					_ctrlTitleName ctrlSetTooltip "Provide a name to your composition to view it in the list.";
					_ctrlTitleName ctrlSetPosition [0, 0.78, 0.135, 0.04];
					_ctrlTitleName ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleName ctrlCommit 0;
				
					ctrlEditName = _display ctrlCreate ["RscEdit", -1, _ctrlGroup];
						ctrlEditName ctrlSetText "";
						ctrlEditName ctrlSetTooltip "";
						ctrlEditName ctrlSetPosition [0.14, 0.78, 0.31, 0.04];
						ctrlEditName ctrlSetBackgroundColor [0,0,0,0.4];
						ctrlEditName ctrlEnable true;
						ctrlEditName ctrlCommit 0;
					
				_ctrlTitleDescription = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleDescription ctrlSetText "Description:";
					_ctrlTitleDescription ctrlSetTooltip "Provide a description to your composition to view when selected.";
					_ctrlTitleDescription ctrlSetPosition [0, 0.825, 0.45, 0.04];
					_ctrlTitleDescription ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleDescription ctrlCommit 0;
				
					ctrlEditMultiDescription = _display ctrlCreate ["RscEditMulti", -1, _ctrlGroup];
						ctrlEditMultiDescription ctrlSetText "";
						ctrlEditMultiDescription ctrlSetTooltip "";
						ctrlEditMultiDescription ctrlSetPosition [0, 0.87, 0.45, 0.12];
						ctrlEditMultiDescription ctrlSetBackgroundColor [0,0,0,0.4];
						ctrlEditMultiDescription ctrlEnable true;
						ctrlEditMultiDescription ctrlCommit 0;
						
						
			_ctrlTitlePaster = _display ctrlCreate ["RscText", -1, _ctrlGroup];
				_ctrlTitlePaster ctrlSetText "Composition Paster:";
				_ctrlTitlePaster ctrlSetPosition [0.57, 0, 0.45, 0.04];
				_ctrlTitlePaster ctrlSetBackgroundColor LM_trimColor_RGBA;
				_ctrlTitlePaster ctrlCommit 0;
				
				_ctrlTitlePosition = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitlePosition ctrlSetText "Position:";
					_ctrlTitlePosition ctrlSetTooltip "Choose whether to paste the objects in their original location or relative from your current position.";
					_ctrlTitlePosition ctrlSetPosition [0.57, 0.045, 0.135, 0.04];
					_ctrlTitlePosition ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitlePosition ctrlCommit 0;
				
					ctrlToolboxPosition = _display ctrlCreate ["RscToolBox", -1, _ctrlGroup];
						ctrlToolboxPosition ctrlSetPosition [0.709, 0.045, 0.31, 0.04];
						ctrlToolboxPosition ctrlSetBackgroundColor [0,0,0,0.4];
						ctrlToolboxPosition ctrlCommit 0;
							
						lbClear ctrlToolboxPosition;
						{
							_x params ["_text",["_tooltip", '']];

							private _index = ctrlToolboxPosition lbAdd _text;
							ctrlToolboxPosition lbSetTooltip [_index, _tooltip];
						} forEach ["Relative", "Original"];
						ctrlToolboxPosition lbSetCurSel 0;
				
				_ctrlTitleSurface = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleSurface ctrlSetText "Alignment:";
					_ctrlTitleSurface ctrlSetTooltip "Choose whether to paste the objects with no modification to their pitch and bank or to align with their below surface.";
					_ctrlTitleSurface ctrlSetPosition [0.57, 0.09, 0.135, 0.04];
					_ctrlTitleSurface ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleSurface ctrlCommit 0;
				
					ctrlToolboxSurface = _display ctrlCreate ["RscToolBox", -1, _ctrlGroup];
						ctrlToolboxSurface ctrlSetPosition [0.709, 0.09, 0.31, 0.04];
						ctrlToolboxSurface ctrlSetBackgroundColor [0,0,0,0.4];
						ctrlToolboxSurface ctrlCommit 0;
							
						lbClear ctrlToolboxSurface;
						{
							_x params ["_text",["_tooltip", '']];

							private _index = ctrlToolboxSurface lbAdd _text;
							ctrlToolboxSurface lbSetTooltip [_index, _tooltip];
						} forEach ["Align to Surface", "Original"];
						ctrlToolboxSurface lbSetCurSel 1;
				
				_ctrlTitleRotation = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleRotation ctrlSetText "Azimuth:";
					_ctrlTitleRotation ctrlSetTooltip "Choose an amount to rotate the placed object. Leave at -1 to have no effect.";
					_ctrlTitleRotation ctrlSetPosition [0.57, 0.135, 0.135, 0.04];
					_ctrlTitleRotation ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleRotation ctrlCommit 0;
					
					if (isNil "ctrlSliderRotationPower") then {
						ctrlSliderRotationPower = 0;
					};
					ctrlSliderRotationAmount = _display ctrlCreate ["RscXSliderH", -1, _ctrlGroup];
						ctrlSliderRotationAmount ctrlSetTooltip "";
						ctrlSliderRotationAmount ctrlSetPosition [0.709, 0.135, 0.256, 0.04];
						ctrlSliderRotationAmount ctrlSetBackgroundColor [0,0,0,0.6];
						ctrlSliderRotationAmount ctrlCommit 0;
						ctrlSliderRotationAmount sliderSetRange [-1, 359];
						ctrlSliderRotationAmount sliderSetSpeed [1, 1];
						ctrlSliderRotationAmount sliderSetPosition 0;
						ctrlSliderRotationAmount ctrlAddEventHandler ["sliderPosChanged", {
							params ["_ctrlSlider", "_value"];
							_ctrlSlider sliderSetPosition (round _value);
							ctrlButtonRotationAmount ctrlSetText str(sliderPosition _ctrlSlider);
							ctrlSliderRotationPower = (round _value);
						}];
						
					ctrlButtonRotationAmount = _display ctrlCreate ["RscText", -1, _ctrlGroup];
						ctrlButtonRotationAmount ctrlSetPosition [0.969, 0.135, 0.05, 0.04];
						ctrlButtonRotationAmount ctrlSetText str(sliderPosition ctrlSliderRotationPower);
						ctrlButtonRotationAmount ctrlSetBackgroundColor [0,0,0,0.4];
						ctrlButtonRotationAmount ctrlSetActiveColor [0,0,0,0.6];
						ctrlButtonRotationAmount ctrlCommit 0;
				
				_ctrlTitleMen = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleMen ctrlSetText "Men:";
					_ctrlTitleMen ctrlSetTooltip "Choose whether to include or exclude men from being pasted.";
					_ctrlTitleMen ctrlSetPosition [0.57, 0.18, 0.135, 0.04];
					_ctrlTitleMen ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleMen ctrlCommit 0;
				
					ctrlToolboxMen = _display ctrlCreate ["RscToolBox", -1, _ctrlGroup];
						ctrlToolboxMen ctrlSetPosition [0.709, 0.18, 0.31, 0.04];
						ctrlToolboxMen ctrlSetBackgroundColor [0,0,0,0.4];
						ctrlToolboxMen ctrlCommit 0;
							
						lbClear ctrlToolboxMen;
						{
							_x params ["_text",["_tooltip", '']];

							private _index = ctrlToolboxMen lbAdd _text;
							ctrlToolboxMen lbSetTooltip [_index, _tooltip];
						} forEach ["Exclude", "Include"];
						ctrlToolboxMen lbSetCurSel 1;
				
				_ctrlTitleCrew = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleCrew ctrlSetText "Crew:";
					_ctrlTitleCrew ctrlSetTooltip "Choose to populate vehicles that are being pasted with crew or to leave them empty.";
					_ctrlTitleCrew ctrlSetPosition [0.57, 0.225, 0.135, 0.04];
					_ctrlTitleCrew ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleCrew ctrlCommit 0;
				
					ctrlToolboxCrew = _display ctrlCreate ["RscToolBox", -1, _ctrlGroup];
						ctrlToolboxCrew ctrlSetPosition [0.709, 0.225, 0.31, 0.04];
						ctrlToolboxCrew ctrlSetBackgroundColor [0,0,0,0.4];
						ctrlToolboxCrew ctrlCommit 0;
							
						lbClear ctrlToolboxCrew;
						{
							_x params ["_text",["_tooltip", '']];

							private _index = ctrlToolboxCrew lbAdd _text;
							ctrlToolboxCrew lbSetTooltip [_index, _tooltip];
						} forEach ["Populate", "Empty"];
						ctrlToolboxCrew lbSetCurSel 1;
				
				_ctrlTitleDamage = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleDamage ctrlSetText "Damage:";
					_ctrlTitleDamage ctrlSetTooltip "Choose whether to make all spawned items ignore damage or to remain in their original state.";
					_ctrlTitleDamage ctrlSetPosition [0.57, 0.27, 0.135, 0.04];
					_ctrlTitleDamage ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleDamage ctrlCommit 0;
				
					ctrlToolboxDamage = _display ctrlCreate ["RscToolBox", -1, _ctrlGroup];
						ctrlToolboxDamage ctrlSetPosition [0.709, 0.27, 0.31, 0.04];
						ctrlToolboxDamage ctrlSetBackgroundColor [0,0,0,0.4];
						ctrlToolboxDamage ctrlCommit 0;
							
						lbClear ctrlToolboxDamage;
						{
							_x params ["_text",["_tooltip", '']];

							private _index = ctrlToolboxDamage lbAdd _text;
							ctrlToolboxDamage lbSetTooltip [_index, _tooltip];
						} forEach ["Ignore", "Original"];
						ctrlToolboxDamage lbSetCurSel 1;
				
				_ctrlTitleSimulation = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleSimulation ctrlSetText "Simulation:";
					_ctrlTitleSimulation ctrlSetTooltip "Choose whether to make all spawned items ignore simulation or to remain in their original state.";
					_ctrlTitleSimulation ctrlSetPosition [0.57, 0.315, 0.135, 0.04];
					_ctrlTitleSimulation ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleSimulation ctrlCommit 0;
				
					ctrlToolboxSimulation = _display ctrlCreate ["RscToolBox", -1, _ctrlGroup];
						ctrlToolboxSimulation ctrlSetPosition [0.709, 0.315, 0.31, 0.04];
						ctrlToolboxSimulation ctrlSetBackgroundColor [0,0,0,0.4];
						ctrlToolboxSimulation ctrlCommit 0;
							
						lbClear ctrlToolboxSimulation;
						{
							_x params ["_text",["_tooltip", '']];

							private _index = ctrlToolboxSimulation lbAdd _text;
							ctrlToolboxSimulation lbSetTooltip [_index, _tooltip];
						} forEach ["Ignore", "Original"];
						ctrlToolboxSimulation lbSetCurSel 1;
				
				_ctrlTitleEditable = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleEditable ctrlSetText "Editable:";
					_ctrlTitleEditable ctrlSetTooltip "Choose whether to add all spawned items to the Zeus interface so they can be edited or to not.";
					_ctrlTitleEditable ctrlSetPosition [0.57, 0.36, 0.135, 0.04];
					_ctrlTitleEditable ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleEditable ctrlCommit 0;
				
					ctrlToolboxEditable = _display ctrlCreate ["RscToolBox", -1, _ctrlGroup];
						ctrlToolboxEditable ctrlSetPosition [0.709, 0.36, 0.31, 0.04];
						ctrlToolboxEditable ctrlSetBackgroundColor [0,0,0,0.4];
						ctrlToolboxEditable ctrlCommit 0;
							
						lbClear ctrlToolboxEditable;
						{
							_x params ["_text",["_tooltip", '']];

							private _index = ctrlToolboxEditable lbAdd _text;
							ctrlToolboxEditable lbSetTooltip [_index, _tooltip];
						} forEach ["Ignore", "Add"];
						ctrlToolboxEditable lbSetCurSel 1;
					
				_ctrlTitleSide = _display ctrlCreate ["RscText", -1, _ctrlGroup];
					_ctrlTitleSide ctrlSetText "Object Side:";
					_ctrlTitleSide ctrlSetTooltip "Choose the side of the spawned in objects.";
					_ctrlTitleSide ctrlSetPosition [0.57, 0.405, 0.45, 0.04];
					_ctrlTitleSide ctrlSetBackgroundColor [0,0,0,0.6];
					_ctrlTitleSide ctrlCommit 0;
			
					_ctrlBackgroundSide = _display ctrlCreate ["RscTextMulti", -1, _ctrlGroup];
						_ctrlBackgroundSide ctrlSetPosition [0.57, 0.45, 0.45, 0.23];
						_ctrlBackgroundSide ctrlSetBackgroundColor [0,0,0,0.4];
						_ctrlBackgroundSide ctrlEnable false;
						_ctrlBackgroundSide ctrlCommit 0;
					
					ctrlListboxSide = _display ctrlCreate ["RscListbox", -1, _ctrlGroup];
						ctrlListboxSide ctrlSetPosition [0.58, 0.465, 0.43, 0.2];
						ctrlListboxSide ctrlCommit 0;
						
					_sideTypes = [["No Change","","",'sideEmpty'],["WEST","","A3\UI_F\data\Map\Markers\Flags\NATO_ca.paa",'west'],["EAST","","A3\UI_F\data\Map\Markers\Flags\CSAT_ca.paa",'east'],["INDEPENDENT","","A3\UI_F\data\Map\Markers\Flags\AAF_ca.paa",'independent'],["CIVILIAN","","\A3\ui_f\data\map\markers\flags\UN_ca.paa",'civilian']];
					
					{
						_ctrl = ctrlListboxSide lbAdd (_x select 0);
						ctrlListboxSide lbSetTooltip [_ctrl, (_x select 1)];
						ctrlListboxSide lbSetPicture [_ctrl, (_x select 2)];
						ctrlListboxSide lbSetData [_ctrl, (_x select 3)];
					 } forEach _sideTypes;
					ctrlListboxSide lbSetCurSel 0;
					 
					 
			_ctrlTitleCompShare = _display ctrlCreate ["RscText", -1, _ctrlGroup];
				_ctrlTitleCompShare ctrlSetText "Shareable Composition Data:";
				_ctrlTitleCompShare ctrlSetPosition [0.57, 0.685, 0.45, 0.04];
				_ctrlTitleCompShare ctrlSetBackgroundColor LM_trimColor_RGBA;
				_ctrlTitleCompShare ctrlCommit 0;
				
				ctrlEditMultiCompShare = _display ctrlCreate ["RscEditMulti", -1, _ctrlGroup];
					ctrlEditMultiCompShare ctrlSetText "";
					ctrlEditMultiCompShare ctrlSetTooltip "You can share the selected composition with others by copying this text and having them\npaste it into the 'Composition Copier' module's field 'Raw Composition Data'";
					ctrlEditMultiCompShare ctrlSetPosition [0.57, 0.73, 0.45, 0.26];
					ctrlEditMultiCompShare ctrlSetBackgroundColor [0,0,0,0.4];
					ctrlEditMultiCompShare ctrlSetTextColor [1,1,1,1];
					ctrlEditMultiCompShare ctrlEnable true;
					ctrlEditMultiCompShare lbSetCurSel 0;
					ctrlEditMultiCompShare ctrlCommit 0;
						
				
			_ctrlButtonDeleteComp = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
				_ctrlButtonDeleteComp ctrlSetPosition [0, 0.995, 0.1125, 0.04];
				_ctrlButtonDeleteComp ctrlSetStructuredText parseText "<t align='center'>DELETE</t>";
				_ctrlButtonDeleteComp ctrlSetTooltip "Permanetly delete the currently selected saved composition.";
				_ctrlButtonDeleteComp ctrlSetBackgroundColor [0.5,0,0,1];
				_ctrlButtonDeleteComp ctrlSetActiveColor [0,0,0,0.6];
				_ctrlButtonDeleteComp ctrlAddEventHandler ["ButtonClick", {
					_lbCurSel = lbCurSel ctrlListboxListComps;
					if (_lbCurSel > -1) then {
						[_lbCurSel] spawn {
							LM_var_selectedComp = lbCurSel ctrlListboxListComps;
							[
								"Are you sure you want to delete this composition?",
								format ["Delete Composition '%1'", (ctrlListboxListComps lbText LM_var_selectedComp)],
								[
									"Delete",
									{
										_title = (ctrlListboxListComps lbText LM_var_selectedComp);
										
										_savedComps = profileNamespace getVariable ["LM_var_savedComps", []];
										_savedComps deleteAt LM_var_selectedComp;
										profileNamespace setVariable ["LM_var_savedComps", _savedComps];
										saveProfileNamespace;
										
										ctrlListboxListComps lbDelete LM_var_selectedComp;
										
										if (LM_var_selectedComp-1 > -1) then {
											ctrlListboxListComps lbSetCurSel (LM_var_selectedComp-1);
											[ctrlListboxListComps, (LM_var_selectedComp-1)] call LM_fnc_ctrlLblChanged;
										} else {
											ctrlLabelMap ctrlSetText "";
											ctrlLabelTime ctrlSetText "";
											ctrlLabelAuthor ctrlSetText "";
											ctrlLabelIndex ctrlSetText "";
											ctrlEditName ctrlSetText "";
											ctrlEditMultiDescription ctrlSetText "";
											ctrlEditMultiCompShare ctrlSetText "";
										};
										
										[format ["Deleted selected composition '%1'!", _title],"addItemOk"] call MAZ_EZM_fnc_systemMessage;
									}
								],
								[
									"Cancel",
									{}
								],
								"\A3\ui_f\data\map\markers\handdrawn\warning_CA.paa",
								findDisplay 312
							] call BIS_fnc_3DENShowMessage;
						};
					} else {
						["Please make sure you have selected a saved composition first!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
					};
				}];
				_ctrlButtonDeleteComp ctrlCommit 0;
						
			_ctrlButtonSaveComp = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
				_ctrlButtonSaveComp ctrlSetPosition [0.3375, 0.995, 0.1125, 0.04];
				_ctrlButtonSaveComp ctrlSetStructuredText parseText "<t align='center'>SAVE</t>";
				_ctrlButtonSaveComp ctrlSetTooltip "Save your changes for the currently selected saved composition's name and description.";
				_ctrlButtonSaveComp ctrlSetBackgroundColor [0,0,0,0.6];
				_ctrlButtonSaveComp ctrlSetActiveColor [0,0,0,0.6];
				_ctrlButtonSaveComp ctrlAddEventHandler ["ButtonClick", {
					_lbCurSel = lbCurSel ctrlListboxListComps;
					if (_lbCurSel > -1) then {
						_lbData = call compile (ctrlListboxListComps lbData _lbCurSel);
						_oldName = _lbData select 3;
						_newName = ctrlText ctrlEditName;
						_newDesc = ctrlText ctrlEditMultiDescription;
						
						_lbData set [3, _newName];
						_lbData set [4, _newDesc];
						ctrlListboxListComps lbSetData [_lbCurSel, str(_lbData)];
						
						[ctrlListboxListComps, _lbCurSel] call LM_fnc_ctrlLblChanged;
						[format ["Changed composition '%1' name to '%2' and description to '%3'!", _oldName, _newName, _newDesc],"addItemOk"] call MAZ_EZM_fnc_systemMessage;
						
						_savedComps = profileNamespace getVariable ["LM_var_savedComps", []];
						_savedComps set [(parseNumber (ctrlText ctrlLabelIndex)), _lbData];
						profileNamespace setVariable ["LM_var_savedComps", _savedComps];
						saveProfileNamespace;
						[] call LM_fnc_ctrlListboxListUpdate;
					} else {
						["Please make sure you have selected a saved composition first!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
					};
				}];
				_ctrlButtonSaveComp ctrlCommit 0;
					
			_ctrlButtonCancel = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
				_ctrlButtonCancel ctrlSetPosition [0.57, 0.995, 0.1125, 0.04];
				_ctrlButtonCancel ctrlSetStructuredText parseText "<t align='center'>CANCEL</t>";
				_ctrlButtonCancel ctrlSetTooltip "Close the 'Composition Paster' windows.";
				_ctrlButtonCancel ctrlSetBackgroundColor [0,0,0,0.6];
				_ctrlButtonCancel ctrlSetActiveColor [0,0,0,0.6];
				_ctrlButtonCancel ctrlAddEventHandler ["ButtonClick", {
					ctrlParent (_this select 0) closeDisplay 2
				}];
				_ctrlButtonCancel ctrlCommit 0;
			
			_ctrlButtonPasteComp = _display ctrlCreate ["RscButtonMenu", -1, _ctrlGroup];
				_ctrlButtonPasteComp ctrlSetPosition [0.9075, 0.995, 0.1125, 0.04];
				_ctrlButtonPasteComp ctrlSetStructuredText parseText "<t align='center'>PASTE</t>";
				_ctrlButtonPasteComp ctrlSetTextColor LM_trimColor_RGBA;
				_ctrlButtonPasteComp ctrlSetTooltip "Paste the currently selected saved composition.";
				_ctrlButtonPasteComp ctrlSetBackgroundColor [0,0,0,0.6];
				_ctrlButtonPasteComp ctrlSetActiveColor [0,0,0,0.6];
				_ctrlButtonPasteComp ctrlAddEventHandler ["ButtonClick", {
					_lbCurSel = lbCurSel ctrlListboxListComps;
					if (_lbCurSel > -1) then {
						_compData = call compile (ctrlListboxListComps lbData _lbCurSel);
						_sideData = call compile (ctrlListboxSide lbData (lbCurSel ctrlListboxSide));
						[LM_var_compPasterPos, _compData select 5, (if ((lbCurSel ctrlToolboxPosition) == 1) then {true} else {false}), (if ((lbCurSel ctrlToolboxSurface) == 1) then {true} else {false}), round (sliderPosition ctrlSliderRotationAmount), (if ((lbCurSel ctrlToolboxMen) == 1) then {true} else {false}), (if ((lbCurSel ctrlToolboxCrew) == 1) then {true} else {false}), (if ((lbCurSel ctrlToolboxDamage) == 1) then {true} else {false}), (if ((lbCurSel ctrlToolboxSimulation) == 1) then {true} else {false}), (if ((lbCurSel ctrlToolboxEditable) == 1) then {true} else {false}), _sideData] call LM_fnc_compositionPaste;
						ctrlParent (_this select 0) closeDisplay 2
					} else {
						["Please make sure you have selected a saved composition first!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
					};
				}];
				_ctrlButtonPasteComp ctrlCommit 0;
						
						
			_ctrlTitleDivider = _display ctrlCreate ["RscText", -1, _ctrlGroup];
				_ctrlTitleDivider ctrlSetPosition [0.485, 0.483, 0.05, 0.04];
				_ctrlTitleDivider ctrlSetText "--->";
				_ctrlTitleDivider ctrlSetTooltip "Select a composition on the left and make desired edits.\n\nThen use the options on the right to paste the choosen composition.\n\nYou can also share the composition with others by copying the 'Shareable Composition Data'\nand having them paste it into the 'Composition Copier' module's field 'Raw Composition Data'";
				_ctrlTitleDivider ctrlSetBackgroundColor [0,0,0,0.4];
				_ctrlTitleDivider ctrlSetActiveColor [0,0,0,0.6];
				_ctrlTitleDivider ctrlCommit 0;
			
			
			if ((lbSize ctrlListboxListComps) > 0) then {
				ctrlListboxListComps lbSetCurSel 0;
			};
						
						
			ctrlSetFocus _ctrlListboxStatic;
			_ctrlGroup ctrlSetPosition [0, 0, 2, 2];
			_ctrlGroup ctrlCommit 0;
			showChat true;
		};
		
		LM_fnc_dragBodyModule = {
			[[],{
				waitUntil {!isNull (findDisplay 46) && alive player};
				
				if (isnil "MPRespawnEHadd") then {MPRespawnEHadd = false};

				_hurtunit = objNull;
				waituntil {!IsNull (findDisplay 46)};
				(findDisplay 46) displayRemoveEventHandler ['KeyDown',(player getVariable ['LM_DEH_dragBody',-1])];
				_dehID = (findDisplay 46) displayAddEventHandler ["KeyDown", {
					params ["_display","_key"];
					_hurtunit = attachedObjects player select 0;
					if (!isNull _hurtunit && _hurtunit in allPlayers) then {
						if (_key == 57) then {
							systemChat "Do not try and revive while dragging!";
						};
					};
				}];
				player setVariable ['LM_DEH_dragBody',_dehID];

				ROS_drag_fnc = {
					params ["_hurtunit"];
					player setVariable ["dragging",true,true];
					_rankp = toupper name player;
					_ranku = toupper name _hurtunit;
					[_hurtunit, player] remoteExecCall ["disablecollisionwith", 0, _hurtunit];
					_attachPos = _hurtunit modelToWorld [0,1.6,0];
					_pos = (_hurtunit modelToWorld _attachpos);
					[player, "grabDrag"] remoteExec ["playAction", 0];
					_hurtunit attachTo [player,[0, 1.04, 0.04]];
					_hurtunit setVariable ["dragged",true,true];
					_unit3DForm = _hurtunit call BIS_fnc_getPitchBank;
					[_hurtunit, [180,(_unit3DForm select 0),(_unit3DForm select 1)]] remoteExec ["BIS_fnc_setObjectRotation", 0];
					[_hurtunit, "AinjPpneMrunSnonWnonDb_grab"] remoteExec ["switchMove", 0];
					player forceWalk true;
					ROS_dropAct = _hurtunit addaction ["<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Release Body</t>",{
						params ["_target", "_caller", "_actionId", "_arguments"];
						_target removeAction _actionId;
						[_target] spawn ROS_Release_fnc;
					},[],6,true,false,"","player == (attachedTo _target) && alive _target"];

					[_hurtunit] spawn {
						params ["_hurtunit"];
						while {player getVariable "dragging" && _hurtunit getVariable "dragged"} do {
							if (!alive player or lifestate player == "INCAPACITATED") then {
								detach _hurtunit;
								player forceWalk false;
								[_hurtunit, "unconsciousrevivedefault"] remoteExec ["switchMove", 0];
								[_hurtunit, player] remoteExecCall ["enablecollisionwith", 0, _hurtunit];
								_hurtunit removeAction ROS_dropAct;
								_hurtunit setVariable ["dragged",false,true];
								player setVariable ["dragging",false,true];
							};
							if (!alive _hurtunit && alive player) then {
								[player,""] remoteExec ["switchMove", player];
								[_hurtunit, "unconsciousrevivedefault"] remoteExec ["switchMove", 0];
								_hurtunit removeAction ROS_dropAct;
								[player, ""] remoteExec ["switchMove", 0];
								player forceWalk false;
								_hurtunit setVariable ["dragged",false,true];
								player setVariable ["dragging",false,true];
							};
							sleep 1;
						};
					};
				};

				ROS_Release_fnc = {
					params ["_hurtunit"];
					player forceWalk false;
					[_hurtunit, "AinjPpneMstpSnonWrflDb_release"] remoteExec ["switchmove", 0];
					detach _hurtunit;
					[player, "released"] remoteExec ["playActionNow",0,true];
					sleep 0.6;
					[_hurtunit, "unconsciousrevivedefault"] remoteExec ["switchMove", 0];
					[_hurtunit, player] remoteExecCall ["enablecollisionwith", 0, _hurtunit];
					_hurtunit setVectorUp surfaceNormal position _hurtunit;
					_hurtunit removeAction ROS_dropAct;
					_hurtunit setVariable ["dragged",false,true];
					player setVariable ["dragging",false,true];
				};

				if (isnil "ROS_dragActAdded") then {
					ROS_dragAct = player addaction ["<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Drag Body</t>",{
						params ["_target", "_caller", "_actionId", "_arguments"];
						[cursorobject] spawn ROS_drag_fnc;
					},[],20,true,false,"","player distance cursorObject <2.2 && lifestate cursorObject == 'INCAPACITATED' && animationState cursorObject == 'unconsciousrevivedefault' && abs ([getPos player, getDir player] call BIS_fnc_terrainGradAngle)<10"];
						ROS_dragActAdded = true;
				};

				if (!MPRespawnEHadd) then {
					player addMPEventHandler ["MPRespawn", {
						ROS_dragAct = player addaction ["<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Drag Body</t>",{
							params ["_target", "_caller", "_actionId", "_arguments"];
							[cursorobject] spawn ROS_drag_fnc;
						},[],20,true,false,"","player distance cursorObject <2.2 && lifestate cursorObject == 'INCAPACITATED' && animationState cursorObject == 'unconsciousrevivedefault' && abs ([getPos player, getDir player] call BIS_fnc_terrainGradAngle)<10"];
					}];
					MPRespawnEHadd = true;
				};

				
				titleText ["<t size='1.5' font='PuristaBold'><img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/> <t underline='1' shadow='1' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">AEGIS: <t color='#FFFFFF'>9.2.0</t></t> <img image='\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'/><br/>Use scroll wheel and select action '<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Drag Body</t>' to move <t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">incapacitated</t> players!</t>", "PLAIN DOWN", -1, false, true];
				["IntelAdded", ["• Dragging of Incapacitated Players Added! 
 
				<br /><font size='15' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">Dragging Incapacitated Players
				<br />
				<br /><font size='12' color='#FFFFFF'>This feature allows for you to drag a incapacitated player body to cover when they are hit needing a revive.
				<br />
				<br /><font size='14' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">How to Use:
				<br />
				<br /><font size='12' color='#FFFFFF'>• Use the action that appears when near their body '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">DRAG BODY<font size='12' color='#FFFFFF'>' in order to have then attach to you!
				<br />
				<br /><font size='14' color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">How to Stop:
				<br />
				<br /><font size='12' color='#FFFFFF'>• Once attached, use your scroll wheel again and choose action '<font color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ">RELEASE BODY<font size='12' color='#FFFFFF'>' in order to drop them!
				"]] call BIS_fnc_showNotification;
				
				if ((player getVariable ["LM_keybindings_height_dragBody", 2000]) == 2000) then {
					player setVariable ["LM_keybindings_height", ((player getVariable ["LM_keybindings_height", 2000])+2000)];
					player setVariable ["LM_keybindings_height_dragBody", (player getVariable "LM_keybindings_height")];
					findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
						_this select 0 drawIcon [
							"\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa",
							[1,1,1,1],
							[worldSize+(500/(("Altis" call BIS_fnc_mapSize) / (worldSize))),worldSize-((player getVariable ["LM_keybindings_height_dragBody",2000])/(("Altis" call BIS_fnc_mapSize) / (worldSize))),0],
							0,
							0,
							0,
							"• Dragging 'Incapacitated' player bodies is now enabled when you are close to them!",
							1,
							(1.75 / (6.4 * worldSize / 8192 * ctrlMapScale ((findDisplay 12) displayCtrl 51)))/(("Altis" call BIS_fnc_mapSize) / (worldSize)),
							"PuristaBold",
							"right"
						]
					}];
				};
			}] remoteExec ['bis_fnc_call',0,"LM_JIP_dragBody"]; 
			systemchat "[ LOG ] Dragging of Incapacitated players now enabled";
		};
		
		LM_fnc_dynamicSimControlModule = {
			["Dynamic Simulation System Control",[
				[
					"TOOLBOX",
					["Dynamic Simulation System Control:","Whether to enable or disable Dynamic Simulation globally."],
					[dynamicSimulationSystemEnabled,["Disable","Enable"]]
				],
				[
					"LIST",
					"NOTE: Recommend set the below values near or the same as the current view distance!",
					[
						[],
						[
							["","",""]
						],
						0,
						0
					]
				],
				[
					"SLIDER",
					["'Group':","Choose the distance units who can trigger Dynamic Simulation must be from 'Infantry units and groups' for the system to activate."],
					[0,(getnumber (configfile >> "CfgWorlds" >> worldName >> "mapSize")),dynamicSimulationDistance 'Group']
				],
				[
					"SLIDER",
					["'Vehicle':","Choose the distance units who can trigger Dynamic Simulation must be from 'Vehicles with crew' for the system to activate."],
					[0,(getnumber (configfile >> "CfgWorlds" >> worldName >> "mapSize")),dynamicSimulationDistance 'Vehicle']
				],
				[
					"SLIDER",
					["'EmptyVehicle':","Choose the distance units who can trigger Dynamic Simulation must be from 'All vehicles without crew' for the system to activate."],
					[0,(getnumber (configfile >> "CfgWorlds" >> worldName >> "mapSize")),dynamicSimulationDistance 'EmptyVehicle']
				],
				[
					"SLIDER",
					["'Prop':","Choose the distance units who can trigger Dynamic Simulation must be from 'Static objects' for the system to activate."],
					[0,(getnumber (configfile >> "CfgWorlds" >> worldName >> "mapSize")),dynamicSimulationDistance 'Prop']
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_simulationControl","_helpTip","_distanceGroup","_distanceVehicle","_distanceEmpty","_distanceProp"];
				
				[_simulationControl] remoteExec ["enableDynamicSimulationSystem", 0, true];
				["Group", round (_distanceGroup)] remoteExec ["setDynamicSimulationDistance", 0, true];
				["Vehicle", round (_distanceVehicle)] remoteExec ["setDynamicSimulationDistance", 0, true];
				["EmptyVehicle", round (_distanceEmpty)] remoteExec ["setDynamicSimulationDistance", 0, true];
				["Prop", round (_distanceProp)] remoteExec ["setDynamicSimulationDistance", 0, true];
				
				[format["The Dynamic Simulation System has been %1. The distance for 'Group' has been set to %2, for 'Vehicle' has been set to %3, for 'EmptyVehicle' has been set to %4, for 'Prop' has been set to %5.", (if (_simulationControl) then { "enabled" } else { "disabled" }), round (_distanceGroup), round (_distanceVehicle), round (_distanceEmpty), round (_distanceProp)]] call MAZ_EZM_fnc_systemMessage;
				
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_dynamicSimObjectModule = {
			params ["_entity"];
			if (_entity isEqualTo objNull) exitWith {["No object or group selected.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			if ((((_entity call BIS_fnc_objectType) select 0) == "Logic")) exitWith {["Please do not select any modules or logic.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			
			if ((if (!(_entity isEqualType (group player))) then {!(simulationEnabled _entity) and !(dynamicSimulationEnabled _entity)})) exitWith {["Enable normal simulation on the object or group first in order to enable Dynamic Simulation for it.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			if ((if (!(_entity isEqualType (group player))) then {count (crew _entity) > 0})) exitWith {["Please only use this on a empty object or the object's group!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};

			if (dynamicSimulationEnabled _entity) then {
				[_entity, false] remoteExec ["enableDynamicSimulation", 0, true];
				["Dynamic Simulation disabled."] call MAZ_EZM_fnc_systemMessage;
			} else {
				[_entity, true] remoteExec ["enableDynamicSimulation", 0, true];
				["Dynamic Simulation enabled."] call MAZ_EZM_fnc_systemMessage;
			};
			playSound "addItemOk";
		};
		
		LM_fnc_dynamicSimRadiusModule = {
			private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
			["Toggle Object Dynamic Simulation (Radius)",[
				[
					"TOOLBOX",
					["Dynamic Simulation Control:","Whether to enable or disable Dynamic Simulation for groups and objects within the radius."],
					[true,["Disable","Enable"]]
				],
				[
					"SLIDER:RADIUS",
					["Radius:","Choose a radius to select objecst within."],
					[0,(getnumber (configfile >> "CfgWorlds" >> worldName >> "mapSize")),250,_pos,[1,1,1,1]]
				]
			],{
				params ["_values","_pos","_display"];
				_values params ["_simulationControl","_radius"];
				_nearObjs = [_pos,_radius] call JAM_fnc_getEditableObjs_radius;
				
				_count = 0;
				{
					if (!((if (!(_x isEqualType (group player))) then {!(simulationEnabled _x) and !(dynamicSimulationEnabled _x)}) || (if (!(_x isEqualType (group player))) then {count (crew _x) > 0})) and !(((_x call BIS_fnc_objectType) select 0) == "Logic")) then {
						[_x, _simulationControl] remoteExec ["enableDynamicSimulation", 0, true];
						_count = _count + 1;
					};
				} forEach _nearObjs;
				
				[format["Dynamic Simulation %1 for %2 groups and objects.", (if (_simulationControl) then { "enabled" } else { "disabled" }), _count]] call MAZ_EZM_fnc_systemMessage;
				
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},_pos] call MAZ_EZM_fnc_createDialog;
		};
		
		LM_fnc_dynamicSimGlobalModule = {
			private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
			["Toggle Object Dynamic Simulation (Global)",[
				[
					"TOOLBOX",
					["Global Dynamic Simulation:","Whether to enable or disable Dynamic Simulation for all groups and objects on the map at once."],
					[true,["Disable","Enable"]]
				]
			],{
				params ["_values","_pos","_display"];
				_values params ["_simulationControl","_radius"];
				_curatorObjs = [];
				{
					{
						if (!(_x in _curatorObjs) and !(((_x call BIS_fnc_objectType) select 0) == "Logic")) then {
							_curatorObjs append [_x];
						};
					} forEach curatorEditableObjects _x;
				} forEach allCurators;
				_curatorObjs = _curatorObjs arrayIntersect _curatorObjs;
				
				{
					if (!((if (!(_x isEqualType (group player))) then {!(simulationEnabled _x) and !(dynamicSimulationEnabled _x)}) || (if (!(_x isEqualType (group player))) then {count (crew _x) > 0}))) then {
						[_x, _simulationControl] remoteExec ["enableDynamicSimulation", 0, true];
						[(vehicle _x), _simulationControl] remoteExec ["enableDynamicSimulation", 0, true];
						[(group _x), _simulationControl] remoteExec ["enableDynamicSimulation", 0, true];
					};
				} forEach _curatorObjs;
				
				_simCode = "";
				if (_simulationControl) then {
					_simCode =  (str {
						removeMissionEventHandler ["EntityCreated", (player getVariable ["LM_MEH_globalSim", -1])];
						_varMEH = addMissionEventHandler ["EntityCreated", {
							params ["_object"];
							if (!(((_object call BIS_fnc_objectType) select 0) == "Logic")) then {
								[_object, true] remoteExec ["enableDynamicSimulation", 0, true];
								[(vehicle _object), true] remoteExec ["enableDynamicSimulation", 0, true];
								[(group _object), true] remoteExec ["enableDynamicSimulation", 0, true];
							};
						}];
						player setVariable ["LM_MEH_globalSim", _varMEH];
						(findDisplay 312) displayRemoveEventHandler ["KeyDown", _thisEventHandler];
					}) splitString "";
				} else {
					_simCode =  (str {
						removeMissionEventHandler ["EntityCreated", (player getVariable ["LM_MEH_globalSim", -1])];
						(findDisplay 312) displayRemoveEventHandler ["KeyDown", _thisEventHandler];
					}) splitString "";
				};
				_simCode deleteAt (count _simCode - 1);
				_simCode deleteAt 0;
				missionNamespace setVariable ["LM_fnc_globalSimVariable",_simCode,true];
				[[],{
					waitUntil {!isNull (findDisplay 312) && alive player};
					(findDisplay 312) displayAddEventHandler ["KeyDown", ((missionNamespace getVariable "LM_fnc_globalSimVariable") joinString "")];
				}] remoteExec ["bis_fnc_call", 0, "LM_JIP_globalSim"];
				
				[format["Global Dynamic Simulation for all objects on map %1.", (if (_simulationControl) then { "enabled" } else { "disabled" })]] call MAZ_EZM_fnc_systemMessage;
				
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},_pos] call MAZ_EZM_fnc_createDialog;
		};
		
	comment "AI Modifiers";

		MAZ_EZM_fnc_setAmbientAnimationModule = {
			params ["_entity"];
			if(isNull _entity || !((typeOf _entity) isKindOf "Man")) exitWith {["Unit is not suitable.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			["Apply Ambient Animation",[
				[
					"LIST",
					"Select animation:",
					[
						[
							"",
							"Acts_B_briefings",
							"acts_RU_briefing_point",
							"acts_RU_briefing_point_tl",
							"acts_RU_briefing_move",
							"Acts_AidlPercMstpSlowWrflDnon_pissing",
							"acts_commenting_on_fight_loop",
							"Acts_A_OUT_briefing",
							"Acts_BoatAttacked05",
							"Acts_JetsOfficerSpilling",
							"acts_examining_device_player",
							"acts_gallery_visitor_01",
							"HubBriefing_loop",
							"acts_kore_idleNoWeapon_In",
							"acts_gallery_visitor_02",
							"acts_staticPose_photo",
							"acts_briefing_SA_loop",
							"acts_getAttention_loop",
							"acts_millerIdle",
							"acts_civilidle_1",
							"Acts_Helping_Wake_Up_1",
							"acts_rifle_operations_barrel",
							"acts_rifle_operations_checking_chamber",
							"acts_rifle_operations_zeroing",
							"Acts_ShieldFromSun_loop",
							"acts_civilListening_2",
							"Acts_listeningToRadio_Loop",
							"acts_kore_talkingoverradio_loop",
							"acts_kore_talkingOverRadio_In",
							"Acts_AidlPercMstpSnonWnonDnon_warmup_2_loop",
							"Acts_AidlPercMstpSnonWnonDnon_warmup_3_loop",
							"Acts_Grieving",
							"acts_executioner_standingloop",
							"acts_StandingSpeakingUnarmed",
							"AmovPercMstpSsurWnonDnon",
							"acts_rifle_operations_right",
							"acts_rifle_operations_left",
							"acts_rifle_operations_front",
							"acts_rifle_operations_back",
							"Acts_ExecutionVictim_Loop",
							"Acts_JetsCrewaidLCrouch_loop",
							"Acts_carFixingWheel",
							"AidlPsitMstpSnonWnonDnon_ground00",
							"hubsittinghighb_move1",
							"hubsittinghigha_idle1",
							"hubsittingchairua_idle2",
							"hubsittingchairub_idle3",
							"hubsittingchaira_idle1",
							"hubsittingchairb_idle1",
							"hubsittingchairc_idle1",
							"Acts_SupportTeam_Right_ToKneelLoop",
							"Acts_SupportTeam_Left_ToKneelLoop",
							"Acts_SupportTeam_Front_ToKneelLoop",
							"Acts_SupportTeam_Back_ToKneelLoop",
							"Acts_JetsCrewaidFCrouchThumbup_loop",
							"Acts_NavigatingChopper_Loop",
							"Acts_ShowingTheRightWay_loop",
							"Acts_JetsMarshallingEnginesOn_loop",
							"Acts_BoatAttacked01",
							"AcinPercMstpSnonWnonDnon",
							"Acts_Dance_01",
							"Acts_Dance_02",
							"AcinPknlMstpSnonWnonDnon",
							"AcinPercMrunSnonWnonDf_death",
							"AovrPercMrunSrasWrflDf",
							"Acts_ViperMeeting_A_End",
							"Acts_starGazer"
						],
						[
							"Remove Animation",
							"Briefing: Moving",
							"Briefing: Point 1",
							"Briefing: Point 2",
							"Briefing: Pointing at Map",
							"Briefing: Scratching Nutsack",
							"Briefing: Talking in Detail",
							"Briefing: Weapon Down during Briefing",
							"Sitting: Holding Side of Boat",
							"Standing: Drinking",
							"Standing: Examine Gun",
							"Standing: Hands on Chin",
							"Standing: Hands on Hip 1",
							"Standing: Hands on Hip 2",
							"Standing: Hands on Vest 1",
							"Standing: Hands on Vest 2",
							"Standing: Idle 1",
							"Standing: Idle 2",
							"Standing: Idle 3",
							"Standing: Idle Unarmed",
							"Standing: Inspect Ground",
							"Standing: Inspect Barrel",
							"Standing: Inspect Chamber",
							"Standing: Inspect Sight",
							"Standing: Shield Eyes",
							"Standing: Listen to Person",
							"Standing: Listen to Radio 1",
							"Standing: Listen to Radio 2",
							"Standing: Listen to Radio 3",
							"Standing: Bent over",
							"Standing: Hands on Back",
							"Standing: Paying Respects 1",
							"Standing: Paying Respects 2",
							"Standing: Speaking Unarmed",
							"Standing: Surrender",
							"Standing: Watching Right",
							"Standing: Watching Left",
							"Standing: Watching Front",
							"Standing: Watching Back",
							"Crouch: Detained",
							"Crouch: One Knee",
							"Crouch: Fix Wheel",
							"Crouch: Sit Ground",
							"Crouch: Sit High 1",
							"Crouch: Sit High 2",
							"Crouch: Sit Idle 1",
							"Crouch: Sit Idle 2",
							"Crouch: Sit A 1",
							"Crouch: Sit B 1",
							"Crouch: Sit C 1",
							"Crouch: Watching Right",
							"Crouch: Watching Left",
							"Crouch: Watching Front",
							"Crouch: Watching Back",
							"Crew: Thumbs Up",
							"Crew: Move Forward",
							"Crew: This Way",
							"Crew: Take Off",
							"Special: Bail from Boat",
							"Special: Body on Shoulder",
							"Special: Dance 1",
							"Special: Dance 2",
							"Special: Drag Body",
							"Special: Dramatic Death",
							"Special: Jump Over",
							"Special: Shoot Person",
							"Special: Star Gazing"
						],
						0
					]
				],
				[
					"TOOLBOX",
					["Combat Animation:","When the AI takes fire it will quit the animation with this enabled."],
					[true,["Disable","Enable"]]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_anim","_isCombat"];
				if(_args getVariable ["MAZ_EZM_animDone",-420] != -420) then {
					_args removeEventHandler ["AnimDone",_args getVariable "MAZ_EZM_animDone"];
				};
				if(_args getVariable ["MAZ_EZM_combatAnim",-420] != -420) then {
					_args removeEventHandler ["Suppressed",_args getVariable "MAZ_EZM_combatAnim"];
				};
				if(_args getVariable ["MAZ_EZM_removeAnimEH",-420] != -420) then {
					_args removeEventHandler ["Killed",_args getVariable "MAZ_EZM_removeAnimEH"];
				};
				if(_anim == "") then {
					[_args,"AmovPercMstpSnonWnonDnon"] remoteExec ["switchMove"];
					_args setBehaviour "AWARE";
					[_args,"Move"]remoteExec ["enableAI",0];
					[_args,"Anim"]remoteExec ["enableAI",0];
					["Animation reset."] call MAZ_EZM_fnc_systemMessage;
				} else {
					(group _args) setBehaviour "CARELESS";
					[_args,"Move"]remoteExec ["disableAI",0];
					[_args,"Anim"]remoteExec ["disableAI",0];
					[_args,_anim] remoteExec ['switchMove',0];
					_args setVariable ["MAZ_EZM_animDone",
						_args addEventhandler ["AnimDone",{
							params ["_unit","_anim"];
							[_args,_anim] remoteExec ['switchMove'];
						}],true
					];
					if((_isCombat)) then {
						_args setVariable ["MAZ_EZM_combatAnim",
							_args addEventHandler ["Suppressed", {
								params ["_unit", "_distance", "_shooter", "_instigator", "_ammoObject", "_ammoClassName", "_ammoConfig"];
								[_unit,"AmovPercMstpSnonWnonDnon"] remoteExec ["switchMove"];
								_unit setBehaviour "COMBAT";
								[_unit,"Move"]remoteExec ["enableAI",0];
								[_unit,"Anim"]remoteExec ["enableAI",0];
							}],true
						];
					};
					_args setVariable ["MAZ_EZM_removeAnimEH",
						_args addEventhandler ["Killed",{
							params ["_unit", "_killer", "_instigator", "_useEffects"];
							if(_unit getVariable ["MAZ_EZM_animDone",-420] != -420) then {
								_unit removeEventHandler ["AnimDone",_unit getVariable "MAZ_EZM_animDone"];
							};
							if(_unit getVariable ["MAZ_EZM_combatAnim",-420] != -420) then {
								_unit removeEventHandler ["Suppressed",_unit getVariable "MAZ_EZM_combatAnim"];
							};
						}],true
					];
					["Animation set."] call MAZ_EZM_fnc_systemMessage;
				};
				playSound 'addItemOk';
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},_entity] call MAZ_EZM_fnc_createDialog;
		};

		MAZ_EZM_fnc_toggleCarelessModule = {
			params ["_entity"];
			if(isNull _entity || !((typeOf _entity) isKindOf "Man")) exitWith {["Unit is not suitable.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			if((behaviour _entity) == "CARELESS") then {
				[group _entity,"AWARE"] remoteExec ['setBehaviour'];
				[format ["%1's group is now aware.",name _entity],"addItemOk"] call MAZ_EZM_fnc_systemMessage;
			} else {
				[group _entity,"CARELESS"] remoteExec ['setBehaviour'];
				[format ["%1's group is now careless.",name _entity],"addItemOk"] call MAZ_EZM_fnc_systemMessage;
			};
		};

		MAZ_EZM_fnc_easyModeModule = {
			params ["_entity"];
			if(isNil "MAZ_EZM_EZMode") then {
				MAZ_EZM_EZMode = false;
			};
			if(MAZ_EZM_EZMode) then {
				MAZ_EZM_EZMode = false;
				["EZ Mode turned off.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
			} else {
				MAZ_EZM_EZMode = true;
				["EZ Mode turned on.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
				[] spawn {
					while {MAZ_EZM_EZMode} do {
						[[],{
							{
								_x setSkill 0;
								_x setSkill ['aimingAccuracy', 0];
								_x setSkill ['aimingShake', 0];
								_x setSkill ['aimingSpeed', 0];
								_x setSkill ['endurance', 0];
								_x setSkill ['spotDistance', 0];
								_x setSkill ['spotTime', 0];
								_x setSkill ['courage', 0];
								_x setSkill ['reloadSpeed', 0];
								_x setSkill ['commanding', 0];
								_x setSkill ['general', 0];
								_x setUnitPos 'UP';

								private _unit = _x;
								private _group = group _unit;
								_vehicle = vehicle _unit;
								_group enableIRLasers true;
								_unit enableIRLasers true;
								_group enableGunLights "ForceOn";
								_unit enableGunLights "ForceOn";
								_vehicle setPilotLight true;
								_vehicle setCollisionLight true;
								
								_unit action ["IRLaserOn", _unit];
								_unit action ["GunLightOn", _unit];
								_unit action ["CollisionLightOn", _vehicle];
								_unit action ["lightOn", _vehicle];
								_unit action ["SearchlightOn", _vehicle];
							} forEach (allUnits - allPlayers);
						}] remoteExec ['spawn'];
						sleep 3;
					};
				};
			};
		};
		
		MAZ_EZM_fnc_getNearestBuilding = {	
			params [	
				["_position",[0,0,0],[[],objNull]],	
				["_radius",50,[0]],	
				["_2d",false,[false]]	
			];	
			if(_position isEqualTo [0,0,0]) exitWith {["Provide a position argument to getNearestBuilding!","addItemFailed"] call MAZ_EZM_fnc_systemMessage};	
			if(_position isEqualType objNull) then {_position = getPos _position;};	
			private _nearestBuildings = (nearestObjects [_position, ["building"], _radius, _2d]) select {	
				count ([_x] call BIS_fnc_buildingPositions) > 0	
			};	
			(_nearestBuildings select 0)	
		};

		MAZ_EZM_fnc_garrisonInstantModule = {	
			params ["_entity"];	
			if(isNull _entity || !((typeOf _entity) isKindOf "CAManBase")) exitWith {["Unit is not suitable.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};	
			[_entity] spawn {	
				params ["_entity"];	
				private _group = group _entity;	
				if (_group isEqualType objNull) then {_group = group _group};	
				private _leader = leader _group;	
				private _previousBehaviour = behaviour _leader;	
				private _arrayShuffle = {	
					private _array = _this select 0;	
					private _count = count _array;	
					private _arrayN = [];	
					private _arrayT = [];	
					private _c = 0;	
					private _r = 0;	
					while {_c < _count} do	
					{	
						while {_r in _arrayT} do	
						{_r = floor (random _count);	
						};	
						_arrayT pushBack _r;	
						_arrayN set [_c, _array select _r];	
						_c = _c + 1;	
					};	
					_arrayN	
				};	
				private _fnc_getHousePositions = {	
					params ["_index","_houses"];	
					private _nearestBuilding = _houses select _index;	
					private _positionsInBuilding = [_nearestBuilding] call BIS_fnc_buildingPositions;	
					_positionsInBuilding = [_positionsInBuilding] call _arrayShuffle;	
					_positionsInBuilding	
				};	
				private _fnc_orderToPositions = {	
					params ["_units","_positions","_houseIndex"];	
					private _newUnits = _units;	
					{	
						private _unit = objNull;	
						if((count _units) -1 >= _forEachIndex) then {	
							private _unit = _units select _forEachIndex;	
							_unit setPos _x;	
							_newUnits = _newUnits - [_unit];	
							[_unit,0] remoteExec ['forceSpeed',owner _unit];	
							_unit addEventHandler ["Suppressed", {	
								params ["_unit", "_distance", "_shooter", "_instigator", "_ammoObject", "_ammoClassName", "_ammoConfig"];	
								[_unit,-1] remoteExec ['forceSpeed',owner _unit];	
							}];	
						};	
					}forEach _positions;	
					if((count _buildingPoses) < (count _units)) then {	
						_houseIndex = _houseIndex + 1;	
						_buildingPoses = [_houseIndex,_nearestBuildings] call _fnc_getHousePositions;	
						[_newUnits,_buildingPoses,_houseIndex] call _fnc_orderToPositions;	
					};	
				};	
				{	
					deleteWaypoint [_group,_forEachIndex];	
				}forEach (waypoints _group);	
				private _nearestBuildings = nearestObjects [getPos _entity, ["building"], 50, true];	
				_nearestBuildings = _nearestBuildings select {count ([_x] call BIS_fnc_buildingPositions) > 0};	
				if (_nearestBuildings isEqualTo []) exitWith { false };	
				_group setbehaviour "AWARE";	
				private _houseIndex = 0;	
				private _buildingPoses = [_houseIndex,_nearestBuildings] call _fnc_getHousePositions;	
				private _units = (units _group) select {!isNull _x && alive _x};	
				[_units,_buildingPoses,_houseIndex] call _fnc_orderToPositions;	
				true	
			};	
		};	
		
		MAZ_EZM_fnc_garrisonSearchModule = {	
			params ["_entity"];	
			if(isNull _entity || !((typeOf _entity) isKindOf "Man")) exitWith {["Unit is not suitable.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};	
			[_entity] spawn {	
				params ["_entity"];	
				private _group = group _entity;	
				if (_group isEqualType objNull) then {_group = group _group};	
				private _leader = leader _group;	
				private _previousBehaviour = behaviour _leader;	
				private _arrayShuffle = {	
					private _array = _this select 0;	
					private _count = count _array;	
					private _arrayN = [];	
					private _arrayT = [];	
					private _c = 0;	
					private _r = 0;	
					while {_c < _count} do	
					{	
						while {_r in _arrayT} do	
						{_r = floor (random _count);	
						};	
						_arrayT pushBack _r;	
						_arrayN set [_c, _array select _r];	
						_c = _c + 1;	
					};	
					_arrayN	
				};	
				private _fnc_getHousePositions = {	
					params ["_index","_houses"];	
					private _nearestBuilding = _houses select _index;	
					private _positionsInBuilding = [_nearestBuilding] call BIS_fnc_buildingPositions;	
					_positionsInBuilding = [_positionsInBuilding] call _arrayShuffle;	
					_positionsInBuilding	
				};	
				private _fnc_disableMoveAfterReachPos = {	
					params ["_unit","_pos"];	
					waitUntil {moveToCompleted _unit};	
					_unit setPos _pos;	
					_unit setBehaviour "SAFE";	
					[_unit,0] remoteExec ['forceSpeed',owner _unit];	
					_unit addEventHandler ["Suppressed", {	
						params ["_unit", "_distance", "_shooter", "_instigator", "_ammoObject", "_ammoClassName", "_ammoConfig"];	
						[_unit,-1] remoteExec ['forceSpeed',owner _unit];	
					}];	
				};	
				private _fnc_orderToPositions = {	
					params ["_units","_positions","_houseIndex"];	
					private _newUnits = _units;	
					{	
						private _unit = objNull;	
						if((count _units) -1 >= _forEachIndex) then {	
							private _unit = _units select _forEachIndex;	
							_unit doMove _x;	
							_newUnits = _newUnits - [_unit];	
							_unit forceSpeed -1;	
							[_unit,_x] spawn _fnc_disableMoveAfterReachPos;	
						};	
					}forEach _positions;	
					if((count _buildingPoses) < (count _units)) then {	
						_houseIndex = _houseIndex + 1;	
						_buildingPoses = [_houseIndex,_nearestBuildings] call _fnc_getHousePositions;	
						[_newUnits,_buildingPoses,_houseIndex] call _fnc_orderToPositions;	
					};	
				};	
				{	
					deleteWaypoint [_group,_forEachIndex];	
				}forEach (waypoints _group);	
				private _nearestBuildings = nearestObjects [getPos _entity, ["building"], 50, true];	
				_nearestBuildings = _nearestBuildings select {count ([_x] call BIS_fnc_buildingPositions) > 0};	
				if (_nearestBuildings isEqualTo []) exitWith { false };	
				_group setbehaviour "AWARE";	
					
				private _houseIndex = 0;	
					
				private _buildingPoses = [_houseIndex,_nearestBuildings] call _fnc_getHousePositions;	
				private _units = (units _group) select {!isNull _x && alive _x};	
				[_units,_buildingPoses,_houseIndex] call _fnc_orderToPositions;	
				true	
			};	
		};

		MAZ_EZM_fnc_getSafePos = {
			params ["_pos", ["_range", ""], ["_objDist", getNumber(configFile >> "CfgWorlds" >> worldName >> "safePositionRadius")], ["_waterMode", 1], ["_maxGradient", 1]];

			private _minDist = -1;
			private _maxDist = -1;
			switch (typeName _range) do {
				case "ARRAY" : {
					_minDist = _range select 0;
					_maxDist = _range select 1;
				};
				case "SCALAR" : {
					_minDist = 0;
					_maxDist = _range;
				};
				default {
					_minDist = 0;
					_maxDist = getNumber(configFile >> "CfgWorlds" >> worldName >> "safePositionRadius");
				};
			};

			if(_objDist < 0) then {
				_objDist = getNumber(configFile >> "CfgWorlds" >> worldName >> "safePositionRadius");
			};

			private _newPos = [];
			private _posX = _pos select 0;
			private _posY = _pos select 1;
			private _attempts = 0;

			while {_attempts < 1000} do {
				private _newX = _posX + (_maxDist - (random (_maxDist * 2)));
				private _newY = _posY + (_maxDist - (random (_maxDist * 2)));
				private _testPos = [_newX, _newY];

				if ( (_pos distance _testPos) >= _minDist) then {
					if !((_testPos isFlatEmpty [_objDist, 0, _maxGradient, _objDist max 5, _waterMode, !(_waterMode == 0), objNull]) isEqualTo []) exitWith {
						_newPos = _testPos;
					};
				};
				_attempts = _attempts + 1;
			};

			if (_newPos isEqualTo []) then {
				_newPos = _pos;
			};
			_newPos
		};

		MAZ_EZM_fnc_unGarrisonModule = {
			params ["_entity"];
			if(isNull _entity || !((typeOf _entity) isKindOf "Man")) exitWith {["Unit is not suitable.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			[_entity] spawn {
				_object =  _this select 0;
				_groupUnderCursor = group _object;
				if (local (leader _groupUnderCursor)) then{
					private _outsidePos = [getPos (leader _groupUnderCursor), [3,15], 2, 0] call MAZ_EZM_fnc_getSafePos;
					{
						_x setUnitPos "AUTO";
						_x forceSpeed -1;
						_x doWatch objNull;
						_x doMove _outsidePos;
					} forEach(units _groupUnderCursor);
				};
				["AI are leaving the building.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
			};
		};

		MAZ_EZM_fnc_toggleLightsModule = {
			params ["_entity"];
			[[],{
				{
					private _unit = _x;
					private _group = group _unit;
					private _vehicle = vehicle _unit;
					_group enableIRLasers true;
					_unit enableIRLasers true;
					_group enableGunLights "ForceOn";
					_unit enableGunLights "ForceOn";
					_vehicle setPilotLight true;
					_vehicle setCollisionLight true;
					
					_unit action ["IRLaserOn", _unit];
					_unit action ["GunLightOn", _unit];
					_unit action ["CollisionLightOn", _vehicle];
					_unit action ["lightOn", _vehicle];
					_unit action ["SearchlightOn", _vehicle];
				} forEach (allUnits - allPlayers);
			}] remoteExec ['spawn'];
			["Units have their lasers/lights turned on.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		MAZ_EZM_fnc_toggleOffLightsModule = {
			params ["_entity"];
			[[],{
				{
					private _unit = _x;
					private _group = group _unit;
					private _vehicle = vehicle _unit;
					_group enableIRLasers false;
					_unit enableIRLasers false;
					_group enableGunLights "ForceOff";
					_unit enableGunLights "ForceOff";
					_vehicle setPilotLight false;
					_vehicle setCollisionLight false;
					
					_unit action ["IRLaserOff", _unit];
					_unit action ["GunLightOff", _unit];
					_unit action ["CollisionLightOff", _vehicle];
					_unit action ["lightOff", _vehicle];
					_unit action ["SearchlightOff", _vehicle];
				} forEach (allUnits - allPlayers);
			}] remoteExec ['spawn'];
			["Units have their lasers/lights turned off.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		MAZ_EZM_fnc_makeHostageModule = {
			params ["_entity"];
			if(isNull _entity || !((typeOf _entity) isKindOf "Man")) exitWith {["Unit is not suitable.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};

			[_entity,true] remoteExec ["setCaptive",0];
			[_entity,"Move"]remoteExec ["disableAI",0];
			[_entity,"Acts_AidlPsitMstpSsurWnonDnon_loop"] remoteExec["switchMove",0];
			private _holdActionIndex = [
				_entity,											
				"Free Hostage",										
				"\a3\ui_f\data\IGUI\Cfg\holdactions\holdAction_secure_ca.paa",	
				"\a3\ui_f\data\IGUI\Cfg\holdactions\holdAction_secure_ca.paa",	
				"_this distance _target < 3 && _target != _this && alive _target",					
				"_caller distance _target < 3",						
				{},
				{},
				{ 
					_unit = (_this select 0);
					[_unit,false] remoteExec ["setCaptive",0];
					[_unit,"Move"]remoteExec ["enableAI",0];
					[_unit,"AmovPercMstpSnonWnonDnon"] remoteExec["playMove",0];
					[_unit] remoteExec ["removeAllActions",0];
				},
				{},
				[],
				6,
				0,
				true,												
				false												
			] remoteExec ["BIS_fnc_holdActionAdd",0, _entity];

			if(_entity getVariable ["MAZ_EZM_hostageEH",-1] == -1) then {
				_entity setVariable ['MAZ_EZM_hostageEH',_entity addEventHandler ["Killed",{
					params ["_unit", "_killer", "_instigator", "_useEffects"];
					[_unit] remoteExec ["removeAllActions",0];
					["TaskFailed",["",format ["Hostage (%1) was killed by %2",name _unit,name _killer]]] remoteExec ['BIS_fnc_showNotification',0];
					[_unit,[
						"Take Dogtag",
						{
							params ["_target", "_caller", "_actionId", "_arguments"];
							["TaskSucceeded",["",format ["Hostage (%1) dogtag was taken by %2",name _target,name _caller]]] remoteExec ['BIS_fnc_showNotification',0];
							[_target] remoteExec ["removeAllActions",0];
						},
						nil,
						1.5,
						true,
						true,
						"",
						"_target distance _this < 5"
					]] remoteExec ['addAction',0];
				}]];
			};

			["Unit is now a hostage, they can be freed by scrolling on them.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		MAZ_EZM_fnc_makeHVTModule = {
			params ["_entity"];
			if(isNull _entity || !((typeOf _entity) isKindOf "Man")) exitWith {["Unit is not suitable.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};

			[[_entity],{
				params ["_nearestMan"];
				_nearestMan addEventHandler ["Killed",{
					params ["_unit", "_killer", "_instigator", "_useEffects"];
					["TaskSucceeded",["",format ["%1 was killed by %2",name _unit,name _killer]]] remoteExec ['BIS_fnc_showNotification',0];
				}];
			}] remoteExec ['spawn',0,_entity];
			["HVT created, all players will be notified of their death.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		MAZ_EZM_fnc_changeDifficultyModule = {
			params ["_entity"];
			["Set Difficulty",[
				[
					"LIST",
					"Difficulty",
					[
						[
							"easy",
							"medium",
							"hard"
						],
						[
							"Easy",
							"Medium",
							"Hard"
						],
						0
					]
				]
			],{
				params ["_values","_args","_display"];
				private _value = _values select 0;
				switch (_value) do {
					case "easy": {
						[[], {
							{
								_x setSkill 0;
							} forEach allUnits;
						}] remoteExec ["spawn"];
						["Difficulty set to EASY."] call MAZ_EZM_fnc_systemMessage;
					};
					case "medium": {
						[[], {
							{
								_x setSkill 0.5;
							} forEach allUnits;
						}] remoteExec ["spawn"];
						["Difficulty set to MEDIUM."] call MAZ_EZM_fnc_systemMessage;
					};
					case "hard": {
						[[], {
							{
								_x setSkill 1;
							} forEach allUnits;
						}] remoteExec ["spawn"];
						["Difficulty set to HARD."] call MAZ_EZM_fnc_systemMessage;
					};
				};
				playSound 'addItemOk';
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};

		MAZ_EZM_fnc_changeStanceModule = {
			params ["_entity"];

			["Set Stance",[
				[
					"LIST",
					"Stance Mode",
					[
						[
							"AUTO",
							"UP",
							"MIDDLE",
							"DOWN"
						],
						[
							"Automatic Stance",
							"Forced Standing",
							"Forced Crouching",
							"Forced Prone"
						],
						0
					]
				]
			],{
				params ["_values","_args","_display"];
				private _value = _values select 0;
				MAZ_EZM_stanceForAI = _value;
				[[_value],{
					params ["_mode"];
					{
						_x setUnitPos _mode;
					}forEach allunits;
				}] remoteExec ['spawn'];
				[format ["All units stance mode set to %1.",_value],"addItemOk"] call MAZ_EZM_fnc_systemMessage;
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};

		MAZ_EZM_fnc_toggleSurrenderModule = {
			params ["_entity"];
			if(isNull _entity || !((typeOf _entity) isKindOf "Man")) exitWith {["Unit is not suitable.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};

			private _isSurrendered = _entity getVariable ['EZM_isSurrendered',false];
			if(_isSurrendered) then {
				[_entity,"AmovPercMstpSnonWnonDnon"] remoteExec ["switchMove"];
				[_entity,false] remoteExec ["setCaptive",0];
				_entity setVariable ['EZM_isSurrendered',false,true];
				
				["Unit is no longer surrendered.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
			} else {
				[_entity,["Surrender",_entity]] remoteExec ["action"];
				[_entity,true] remoteExec ["setCaptive",0];
				_entity setVariable ['EZM_isSurrendered',true,true];
				[_entity] spawn {
					_dude = (_this select 0);
					_weapon = currentWeapon _dude; 
					if(_weapon isEqualTo "") exitWith{};
					[_dude, _weapon] remoteExec ['removeWeapon'];
					sleep 0.1;
					_weaponHolder = "WeaponHolderSimulated" createVehicle [0,0,0];
					_weaponHolder addWeaponCargoGlobal [_weapon,1];
					_weaponHolder setPos (_dude modelToWorld [0,.2,1.2]);
					_weaponHolder disableCollisionWith _dude;
					_dir = random(360);
					_speed = 1.5;
					_weaponHolder setVelocity [_speed * sin(_dir), _speed * cos(_dir),4]; 
				};

				["Unit is now surrendered.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
			};
		};

		MAZ_EZM_fnc_suppressiveFireModule = {
			params ["_entity"];
			if(!(_entity isKindOf "CAManBase") && !(_entity isKindOf "StaticMGWeapon")) exitWith {["Object is not a man!.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			if(_entity isKindOf "StaticMGWeapon") then {
				if(gunner _entity == objNull) exitWith {["No gunner!.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
				_entity = gunner _entity;
			};
			if(_entity getVariable ["MAZ_EZM_isSuppressing",false]) exitWith {["Unit is already suppressing!.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			["Suppressive Fire",[
				[
					"SLIDER",
					"Duration of Suppress",
					[5,20,10]
				]
			],{
				params ["_values","_entity","_display"];
				_values params ["_duration"];
				_display closeDisplay 1;

				["Position to Suppress",{
					params ["_objects","_position","_args","_shift","_ctrl","_alt"];
					_args params ["_entity","_duration"];

					private _target = (createGroup [east,true]) createUnit ["O_Soldier_unarmed_F",_position,[],0,"CAN_COLLIDE"];
					_target disableAI "MOVE";
					_target hideObject true;
					comment "ZACO: You need to hide him from everyone!";
					[_target, true] remoteExec ['hideObjectGlobal', 2];
					_target setUnitPOs "UP";
					_target addRating -100000000000;

					[_entity,_duration,_target] spawn {
						params ["_entity","_duration","_target"];
						_entity setVariable ["MAZ_EZM_isSuppressing",true,true];
						_entity doSuppressiveFire _target;
						_entity suppressFor _duration;
						sleep _duration;
						_entity doWatch objNull;
						deleteVehicle _target;
						_entity setVariable ["MAZ_EZM_isSuppressing",false,true];
					};
				},_entity,[_entity,_duration],"a3\ui_f\data\igui\cfg\cursors\attack_ca.paa",45] call MAZ_EZM_fnc_selectSecondaryPosition;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},_entity] call MAZ_EZM_fnc_createDialog;
		};

		MAZ_EZM_fnc_removeNVGsAddFlashlightsModule = {
			["Remove/Add AI Equipment",[
				[
					"TOOLBOX",
					"Night Vision:",
					[false,[["REMOVE","Removes NVGs from the selected side's AI."],["EQUIP","Adds NVGs to the selected side's AI."]]]
				],
				[
					"TOOLBOX",
					"Flashlights:",
					[true,[["REMOVE","Removes flashlights from the selected side's AI."],["EQUIP","Adds flashlights to the selected side's AI."]]]
				],
				[
					"TOOLBOX",
					["Smokes:","Helps performance when lots of AI may be throwing smoke."],
					[false,[["REMOVE","Removes smoke grenades from the selected side's AI."],["EQUIP","This doesn't do anything, I'm lazy..."]]]
				],
				[
					"SIDES",
					"Sides Effected:",
					[east,independent]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_nvgs","_flashlights","_smokes","_sides"];
				private _sidesNew = [_sides] call MAZ_EZM_fnc_getSidesFromString;
				{
					if((!isPlayer _x) && (side _x in _sidesNew)) then {
						private _unit = _x;
						private _NVGArray = [
							"NVGoggles",
							"NVGoggles_OPFOR",
							"NVGoggles_INDEP",
							"NVGoggles_tna_F",
							"O_NVGoggles_ghex_F",
							"O_NVGoggles_grn_F",
							"O_NVGoggles_hex_F",
							"O_NVGoggles_urb_F",
							"NVGogglesB_blk_F",
							"NVGogglesB_grn_F",
							"NVGogglesB_gry_F",
							"Integrated_NVG_TI_1_F"
						];
						if(_nvgs) then {
							private _default = getUnitLoadout (configFile >> "CfgVehicles" >> typeOf _unit);
							_unit linkItem (_default # 9 # 5);
						} else {
							{
								if(_x in _NVGArray) then {
									_unit unlinkItem _x;
								};
							}forEach assignedItems _unit;
						};

						if(_flashlights) then {
							_unit addWeaponItem [primaryWeapon _unit,"acc_flashlight",true];
						} else {
							_unit addWeaponItem [primaryWeapon _unit,"acc_pointer_ir",true];
						};

						private _smokesArray = ["SmokeShellBlue","SmokeShellGreen","SmokeShellOrange","SmokeShellPurple","SmokeShellRed","SmokeShell","SmokeShellYellow"];
						if(!_smokes) then {
							{
								if(_x in _smokesArray) then {
									_unit removeMagazine _x;
								};
							}forEach magazines _unit;
						};
					};
				}forEach allUnits;
				["AI Equipment updated.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};

	comment "AI Supports";

		MAZ_airDropSupportModule = {
			params ["_pos","_mode","_direction","_vehType","_sideOf","_sfx"];
			private ["_typeMode","_dropType","_dropLoad","_dir","_vehPos","_doorAnim"];
			private _typeMode = _mode select 0; _dropType = nil; if(count _mode == 2) then {_dropType = _mode select 1;};
			_typeMode = toLower _typeMode; if(count _mode == 2) then {_dropType = toLower _dropType;}; _vehType = toLower _vehType;
			private _grp = createGroup [_sideOf,true];
			switch (_typeMode) do {
				case "arsenal": {_dropLoad = 'B_CargoNet_01_ammo_F';};
				case "vehicle": {_dropLoad = _dropType;};
			};

			switch (_vehType) do {
				case "blackfish": {_vehType = 'B_T_VTOL_01_vehicle_F'; _doorAnim = 'Door_1_source';};
				case "huron": {_vehType = 'B_Heli_Transport_03_F'; _doorAnim = 'Door_rear_source';};
				case "xian": {_vehType = 'O_T_VTOL_02_vehicle_F'; _doorAnim = 'Door_1_source';};
				case "mohawk": {_vehType = 'I_Heli_Transport_02_F'; _doorAnim = 'CargoRamp_Open';};
			};

			switch (_direction) do {
				case "NW": {_dir = 135; _vehPos = _pos getPos [3500,315];};
				case "N": {_dir = 180; _vehPos = _pos getPos [3500,0];};
				case "NE": {_dir = 225; _vehPos = _pos getPos [3500,45];};
				case "E": {_dir = 270; _vehPos = _pos getPos [3500,90];};
				case "SE": {_dir = 315; _vehPos = _pos getPos [3500,135];};
				case "S": {_dir = 0; _vehPos = _pos getPos [3500,180];};
				case "SW": {_dir = 45; _vehPos = _pos getPos [3500,225];};
				case "W": {_dir = 90; _vehPos = _pos getPos [3500,270];};
			};

			private _result = [[_vehPos select 0,_vehPos select 1,(_pos select 2) + 300],_dir,_vehType,_grp] call BIS_fnc_spawnVehicle;
			private _spawnedVeh = _result select 0;

			waitUntil {!isNull driver _spawnedVeh};
			_spawnedVeh flyInHeight 250;
			_spawnedVeh addEventHandler ["Killed",{
				params ["_unit", "_killer", "_instigator", "_useEffects"];
				private _sideOf = side (driver _unit);
				private _textLine = selectRandom [
					"Mayday mayday! We're going down!",
					"We're going down! Auto-rotating!",
					"I always knew this is how I'd go...",
					"I guess a captain goes down with his ship...",
					"We're hit! Going down!",
					"We're not making it to the LZ!"
				];

				private _sideName = [_sideOf] call BIS_fnc_sideName;
				[
					format ["%1 Airdrop Pilot",_sideName],
					_textLine
				] remoteExec ['BIS_fnc_showSubtitle',_sideOf];
				{
					deleteVehicle _x;
				}forEach (crew _unit);
			}];
			_grp setBehaviour "CARELESS";

			_spawnedVeh animateDoor [_doorAnim,1,true];
			private _textLine = selectRandom [
				"We're inbound with your supplies.",
				"Supplies are inbound, wait one.",
				"We're on our way with your supplies.",
				"Your package is being shipped."
			];
			private _sideName = [_sideOf] call BIS_fnc_sideName;
			[
				format ["%1 Airdrop Pilot",_sideName],
				_textLine
			] remoteExec ['BIS_fnc_showSubtitle',_sideOf];
			if(_sfx) then {
				private _radioChatter = selectRandom ["RadioAmbient2","RadioAmbient6","RadioAmbient8"];
				[[_radioChatter],{
					params ['_radioChatter'];
					switch (_radioChatter) do {
						case "RadioAmbient2": {playSound _radioChatter;};
						case "RadioAmbient6": {playSound _radioChatter; sleep 6; playSound "RadioAmbient2";};
						case "RadioAmbient8": {playSound _radioChatter;};
					};
				}] remoteExec ['spawn',0];
			};

			private _wayPointMove = _grp addWaypoint [[(_pos select 0),(_pos select 1),300],0];
			_wayPointMove setWaypointType "MOVE";
			private _nextWaypointPos = _pos getPos [6000,_dir];
			private _wayPointLeave = _grp addWaypoint [[(_nextWaypointPos select 0),(_nextWaypointPos select 1),300],0];
			_wayPointLeave setWaypointType "MOVE";

			waitUntil {(_spawnedVeh distance2D _pos) < 150};
			if(!alive _spawnedVeh) exitWith {
				sleep 120;
				deleteVehicle _spawnedVeh;
			};
			sleep 1.5;
			_textLine = selectRandom [
				"Supplies have been dropped.",
				"Supplies are coming down.",
				"Your supplies are on their way down.",
				"Watch out above! Your supplies are coming down."
			];
			[
				format ["%1 Airdrop Pilot",_sideName],
				_textLine
			] remoteExec ['BIS_fnc_showSubtitle',_sideOf];
			if(_sfx) then {
				_radioChatter = selectRandom ["RadioAmbient2","RadioAmbient6","RadioAmbient8"];
				[[_radioChatter],{
					params ['_radioChatter'];
					switch (_radioChatter) do {
						case "RadioAmbient2": {playSound _radioChatter;};
						case "RadioAmbient6": {playSound _radioChatter; sleep 6; playSound "RadioAmbient2";};
						case "RadioAmbient8": {playSound _radioChatter;};
					};
				}] remoteExec ['spawn',0];
			};

			private _dropPos = position _spawnedVeh getPos [10,getDir _spawnedVeh+180];
			private _para = createVehicle ["B_Parachute_02_F", [0,0,300], [], 0, ""];
			_para setPosATL [(_dropPos select 0),(_dropPos select 1),(getPosATL _spawnedVeh select 2)];
			private _veh = createVehicle [_dropLoad, [0,0,80], [], 0, ""];
			_veh attachTo [_para,[0,0,0]]; 

			waitUntil {((((position _veh) select 2) < 0.6) || (isNil "_para"))};
			detach _veh;
			_veh SetVelocity [0,0,-5];           
			sleep 0.3;
			_veh setPos [(position _veh) select 0, (position _veh) select 1, 0.6];
			private _smoke = "SmokeShellRed" createVehicle position _veh;
			_smoke attachTo [_veh,[0,0,0]];
			private _light = "Chemlight_green" createVehicle position _veh;
			_light attachTo [_veh,[0,0,0]];
			detach _smoke;
			detach _light;
			if(_mode select 0 == 'arsenal') then {
				["AmmoboxInit",[_veh,true]] spawn BIS_fnc_arsenal;
			};
			if(_vehType == 'B_Heli_Transport_03_F') then {
				sleep 20;
				{
					deleteVehicle _x;
				} forEach crew _spawnedVeh;
				deleteVehicle _spawnedVeh;
			} else {

				{
					deleteVehicle _x;
				} forEach crew _spawnedVeh;
				deleteVehicle _spawnedVeh;
			};
		};

		MAZ_EZM_fnc_callAirdropModule = {
			["Call an Airdrop",[
				[
					"TOOLBOX",
					"Airdrop Type",
					[false,["Arsenal","Vehicle"]]
				],
				[
					"LIST",
					["Payload","Loaded vehicle in the airdrop, only applicable to VEHICLE airdrops."],
					[
						[],
						[
							"Hunter",
							"Hunter HMG",
							"Hunter GMG",
							"Ifrit",
							"Ifrit HMG",
							"Ifrit GMG",
							"Strider",
							"Strider HMG",
							"Strider GMG",
							"Prowler",
							"Prowler HMG",
							"Prowler AT",
							"Qilin",
							"Qilin Minigun",
							"Qilin AT",
							"AWC 302 Nyx (Recon)",
							"AWC 302 Nyx (Autocannon)",
							"AWC 302 Nyx (AT)",
							"AWC 302 Nyx (AA)",
							"AMV-7 Marshall",
							"Rhino",
							"Rhino MGS UP",
							"MSE-3 Marid",
							"AFV-4 Gorgon",
							"FV-720 Mora"
						],
						0
					]
				],
				[
					"LIST",
					["Direction","Direction the airdrop aircraft comes from."],
					[
						['NW','N','NE','E','SE','S','SW','W'],
						['NW','N','NE','E','SE','S','SW','W'],
						0
					]
				],
				[
					"LIST",
					["Airdrop Aircraft Type","The aircraft type that the airdrop will be carried in."],
					[
						['blackfish','huron','xian','mohawk'],
						["V-44X Blackfish","CH-67 Huron","Y-32 Xi'an","CH-49 Mohawk"],
						0,
						4
					]
				],
				[
					"SIDES",
					"Side of Airdrop",
					west
				],
				[
					"TOOLBOX:YESNO",
					["Radio SFX","Whether to play radio sound effects when the airdrop is called."],
					[false]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_type","_payloadType","_dir","_aircraft","_side","_radioSFX"];
				private _sideNew = [[_side]] call MAZ_EZM_fnc_getSidesFromString;
				_sideNew = _sideNew # 0;

				private _typeArray = [];
				if(_type) then {
					_typeArray pushBack 'Vehicle';
					switch (_payloadType) do {
						case 0: {_typeArray pushBack 'B_MRAP_01_F';};
						case 1: {_typeArray pushBack 'B_MRAP_01_hmg_F';};
						case 2: {_typeArray pushBack 'B_MRAP_01_gmg_F';};
						case 3: {_typeArray pushBack 'O_MRAP_02_F';};
						case 4: {_typeArray pushBack 'O_MRAP_02_hmg_F';};
						case 5: {_typeArray pushBack 'O_MRAP_02_gmg_F';};
						case 6: {_typeArray pushBack 'I_MRAP_03_F';};
						case 7: {_typeArray pushBack 'I_MRAP_03_hmg_F';};
						case 8: {_typeArray pushBack 'I_MRAP_03_gmg_F';};
						case 9: {_typeArray pushBack 'B_LSV_01_unarmed_F';};
						case 10: {_typeArray pushBack 'B_LSV_01_armed_F';};
						case 11: {_typeArray pushBack 'B_LSV_01_AT_F';};
						case 12: {_typeArray pushBack 'O_LSV_02_unarmed_F';};
						case 13: {_typeArray pushBack 'O_LSV_02_armed_F';};
						case 14: {_typeArray pushBack 'O_LSV_02_AT_F';};
						case 15: {_typeArray pushBack 'I_LT_01_scout_F';};
						case 16: {_typeArray pushBack 'I_LT_01_cannon_F';};
						case 17: {_typeArray pushBack 'I_LT_01_AT_F';};
						case 18: {_typeArray pushBack 'I_LT_01_AA_F';};
						case 19: {_typeArray pushBack 'B_APC_Wheeled_01_cannon_F';};
						case 20: {_typeArray pushBack 'B_AFV_Wheeled_01_cannon_F';};
						case 21: {_typeArray pushBack 'B_AFV_Wheeled_01_up_cannon_F';};
						case 22: {_typeArray pushBack 'O_APC_Wheeled_02_rcws_v2_F';};
						case 23: {_typeArray pushBack 'I_APC_Wheeled_03_cannon_F';};
						case 24: {_typeArray pushBack 'I_APC_tracked_03_cannon_F';};
					};
				} else {
					_typeArray pushBack 'Arsenal';
				};

				[_args,_typeArray,_dir,_aircraft,_sideNew,_radioSFX] spawn MAZ_airDropSupportModule; 
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[] call MAZ_EZM_fnc_getScreenPosition] call MAZ_EZM_fnc_createDialog;
		};

		MAZ_EZM_fnc_heliEvacExec = {
			params ["_pos","_direction","_sideOf","_type","_destination",["_passengerNeeded",3]];
			private ["_vehType","_crewCount","_dir","_vehPos","_heliPad1","_heliPad2","_wayPointPickup","_wayPointMove","_wayPointReturn","_pilot","_textLine","_byePos"];
			private _grp = createGroup [_sideOf,true];
			private _direction = toLower _direction;
			private _type = toLower _type;
			switch (_type) do {
				case "hummingbird": {_vehType = "B_Heli_Light_01_F"; _crewCount = _passengerNeeded + 2;};
				case "ghosthawk": {_vehType = "B_Heli_Transport_01_F"; _crewCount = _passengerNeeded + 4;};
				case "ghosthawk ctrg": {if(worldName == 'Tanoa') then {_vehType = "B_CTRG_Heli_Transport_01_tropic_F";} else {_vehType = "B_CTRG_Heli_Transport_01_sand_F";}; _crewCount = _passengerNeeded + 4;};
				case "huron": {_vehType = "B_Heli_Transport_03_F"; _crewCount = _passengerNeeded + 4;};
				case "orca": {_vehType = "O_Heli_Light_02_unarmed_F"; _crewCount = _passengerNeeded + 2;};
				case "taru": {_vehType = "O_Heli_Transport_04_F"; _crewCount = _passengerNeeded + 3;};
				case "hellcat": {_vehType = "I_Heli_light_03_unarmed_F"; _crewCount = _passengerNeeded + 2;};
				case "mohawk": {_vehType = "I_Heli_Transport_02_F"; _crewCount = _passengerNeeded + 2;};
			};
			switch (_direction) do {
				case "north": {_dir = 180; _vehPos = _pos getPos [2000,0];};
				case "south": {_dir = 0; _vehPos = _pos getPos [2000,180];};
				case "east": {_dir = 270; _vehPos = _pos getPos [2000,90];};
				case "west": {_dir = 90; _vehPos = _pos getPos [2000,270];};
			};
			
			private _result = [[_vehPos select 0,_vehPos select 1,100],_dir,_vehType,_grp] call BIS_fnc_spawnVehicle;
			private _spawnedVeh = _result select 0;

			waitUntil {!isNull driver _spawnedVeh};
			_grp setBehaviour "CARELESS";
			{
				_x allowDamage false;
			}forEach (crew _spawnedVeh);

			_spawnedVeh addEventHandler ["Killed",{
				params ["_unit", "_killer", "_instigator", "_useEffects"];
				private _sideOf = side (driver _unit);
				private _textLine = selectRandom [
					"Mayday mayday! We're going down!",
					"We're going down! Auto-rotating!",
					"I always knew this is how I'd go...",
					"I guess a captain goes down with his ship...",
					"We're hit! Going down!",
					"We're not making it to the LZ!"
				];

				private _sideName = [_sideOf] call BIS_fnc_sideName;
				[
					format ["%1 Evac Pilot",_sideName],
					_textLine
				] remoteExec ['BIS_fnc_showSubtitle',_sideOf];
				{
					deleteVehicle _x;
				}forEach (crew _unit);
			}];

			private _heliPad1 = "Land_HelipadEmpty_F" createVehicle _pos;
			_waypointPickup = _grp addWaypoint [position _heliPad1,0];
			_waypointPickup setWaypointType "SCRIPTED";
			_waypointPickup setWaypointScript "A3\functions_f\waypoints\fn_wpLand.sqf";

			private _textLine = selectRandom [
				"Evac is on the way, hang tight.",
				"Location received, evac is inbound.",
				"Coordinates received, your ride is on the way.",
				"Your Uber driver is on their way.",
				"We're on our way, stay put."
			];

			private _sideName = [_sideOf] call BIS_fnc_sideName;
			[
				format ["%1 Evac Pilot",_sideName],
				_textLine
			] remoteExec ['BIS_fnc_showSubtitle',_sideOf];

			waitUntil {isTouchingGround _spawnedVeh};

			if(_vehType == "B_Heli_Transport_01_F" || _vehType == "B_CTRG_Heli_Transport_01_tropic_F" || _vehType == "B_CTRG_Heli_Transport_01_sand_F") then {
				_spawnedVeh animateDoor ["Door_L",1,false]; _spawnedVeh animateDoor ["Door_R",1,false];
				_spawnedVeh lockTurret [[1],true];
				_spawnedVeh lockTurret [[2],true];
			};
			if(_vehType == "B_Heli_Transport_03_F") then {
				_spawnedVeh animateDoor ['Door_rear_source',1,false];
				_spawnedVeh lockTurret [[1],true];
				_spawnedVeh lockTurret [[2],true];
			};
			if(_vehType == "O_Heli_Light_02_unarmed_F") then {
				_spawnedVeh animate ["dvere1_posunZ",1]; _spawnedVeh animate ["dvere2_posunZ",1];
			};

			if(!alive _spawnedVeh) exitWith {
				sleep 120;
				deleteVehicle _spawnedVeh;
				deleteVehicle _heliPad1;
			};
			_textLine = selectRandom [
				"Your Uber has arrived.",
				"Let's get you guys outta here.",
				"We're here, load up.",
				"We haven't got all day, get in the heli.",
				"Touchdown. Everyone, load up.",
				"Pile in, there's plenty of space for all of you."
			];
			[
				format ["%1 Evac Pilot",_sideName],
				_textLine
			] remoteExec ['BIS_fnc_showSubtitle',_sideOf];

			waitUntil {count crew _spawnedVeh >= _crewCount};
			
			_textLine = selectRandom [
				"Prepping for takeoff, if you wanna get out of here get loaded up.",
				"We're leaving in 20 seconds, hurry up.",
				"Get a move on, we're leaving in 20 seconds.",
				"We're not waiting much longer, leaving in 20 seconds.",
				"In 20 seconds we're RTB, hurry up.",
				"We want our RnR, if you're not here in 20 seconds you'll be stuck out here!"
			];
			[
				format ["%1 Evac Pilot",_sideName],
				_textLine
			] remoteExec ['BIS_fnc_showSubtitle',_sideOf];
			sleep 20;
			deleteVehicle _heliPad1;
			if(_vehType == "B_Heli_Transport_01_F") then {
				_spawnedVeh animateDoor ["Door_L",0,false]; _spawnedVeh animateDoor ["Door_R",0,false];
			};
			if(_vehType == "B_Heli_Transport_03_F") then {
				_spawnedVeh animateDoor ['Door_rear_source',0,false];
			};
			if(_vehType == "O_Heli_Light_02_unarmed_F") then {
				_spawnedVeh animate ["dvere1_posunZ",0]; _spawnedVeh animate ["dvere2_posunZ",0];
			};
			_textLine = selectRandom [
				"Alright, lets get outta here.",
				"Dusting off now. Hold on to something.",
				"And we're off. Fasten your seatbelts.",
				"We're outta here. Hope you guys aren't prone to being motion sick.",
				"Taking off now. Don't fall off now.",
				"We're heading out. And, please, don't touch the rotors blades, we've had... accidents."
			];
			[
				format ["%1 Evac Pilot",_sideName],
				_textLine
			] remoteExec ['BIS_fnc_showSubtitle',_sideOf];
			private _heliPad2 = "Land_HelipadEmpty_F" createVehicle _destination;
			_wayPointMove = _grp addWaypoint [[(getPosATL _heliPad2 select 0),(getPosATL _heliPad2 select 1),(getPosATL _heliPad2 select 2)+40],0];
			_wayPointMove setWaypointType "MOVE";
			sleep 5;
			private _waypointReturn = _grp addWaypoint [position _heliPad2,0];
			_waypointReturn setWaypointType "SCRIPTED";
			_waypointReturn setWaypointScript "A3\functions_f\waypoints\fn_wpLand.sqf";
			waitUntil {isTouchingGround _spawnedVeh && _spawnedVeh distance _heliPad2 < 200};
			if(_vehType == "B_Heli_Transport_01_F") then {
				_spawnedVeh animateDoor ["Door_L",1,false]; _spawnedVeh animateDoor ["Door_R",1,false];
			};
			if(_vehType == "B_Heli_Transport_03_F") then {
				_spawnedVeh animateDoor ['Door_rear_source',1,false];
			};
			if(_vehType == "O_Heli_Light_02_unarmed_F") then {
				_spawnedVeh animate ["dvere1_posunZ",1]; _spawnedVeh animate ["dvere2_posunZ",1];
			};
			_textLine = selectRandom [
				"Hope you enjoyed the ride.",
				"Oh, now that landing was butter!",
				"Thanks for riding with us, if you'd like you can leave us a tip.",
				"And to think this is my first day flying!",
				"Thanks for giving us something to do.",
				"Now get out of my bird."
			];
			[
				format ["%1 Evac Pilot",_sideName],
				_textLine
			] remoteExec ['BIS_fnc_showSubtitle',_sideOf];
			switch (_type) do {
				case "hummingbird": {waitUntil {count crew _spawnedVeh == 2};};
				case "ghosthawk": {waitUntil {count crew _spawnedVeh == 4};};
				case "huron": {waitUntil {count crew _spawnedVeh == 4};};
				case "orca": {waitUntil {count crew _spawnedVeh == 2};};
				case "taru": {waitUntil {count crew _spawnedVeh == 3};};
				case "hellcat": {waitUntil {count crew _spawnedVeh == 2};};
				case "mohawk": {waitUntil {count crew _spawnedVeh == 2};};
			};
			deleteVehicle _heliPad2;
			if(_vehType == "B_Heli_Transport_01_F") then {
				_spawnedVeh animateDoor ["Door_L",0,false]; _spawnedVeh animateDoor ["Door_R",0,false];
			};
			if(_vehType == "B_Heli_Transport_03_F") then {
				_spawnedVeh animateDoor ['Door_rear_source',0,false];
			};
			if(_vehType == "O_Heli_Light_02_unarmed_F") then {
				_spawnedVeh animate ["dvere1_posunZ",0]; _spawnedVeh animate ["dvere2_posunZ",0];
			};
			private _byePos = _spawnedVeh getPos [1500,(getDir _spawnedVeh)];
			private _wayPointLeave = _grp addWaypoint [[(_byePos select 0),(_byePos select 1),60],0];
			_wayPointLeave setWaypointType "MOVE";
			sleep 50;
			{
				deleteVehicle _x;
			} forEach crew _spawnedVeh;
			deleteVehicle _spawnedVeh;
		};

		MAZ_EZM_fnc_callEvacModule = {
			["Call Helicopter Evac",[
				[
					"COMBO",
					"Direction of Evac",
					[
						[],
						["N","S","E","W"],
						0
					]
				],
				[
					"SIDES",
					"Side of Evac",
					west
				],
				[
					"LIST",
					"Helicopter Type",
					[
						["Hummingbird","Orca","Ghosthawk","Ghosthawk CTRG","Hellcat","Huron","Mohawk","Taru"],
						["MH-9 Hummingbird","PO-30 Orca","UH-80 Ghosthawk","UH-80 Ghosthawk (CTRG)","WY-55 Hellcat (Unarmed)","CH-67 Huron","CH-49 Mohawk","Mi-290 Taru"],
						0
					]
				],
				[
					"SLIDER",
					["Number of Passengers","The number of passengers required before the AI will take off and move to the destination."],
					[1,8,3]
				]
			],{
				params ["_values","_pos","_display"];
				_values params ["_directionIndex","_side","_helicopterType","_numToLeave"];
				_display closeDisplay 1;
				private _dir = switch (_directionIndex) do {
					case 0: {'North'};
					case 1: {'South'};
					case 2: {'East'};
					case 3: {'West'};
				};
				private _sideNew = [[_side]] call MAZ_EZM_fnc_getSidesFromString;
				_sideNew = _sideNew # 0;
				private _heliParams = [_pos,_dir,_sideNew,_helicopterType,[],_numToLeave];

				private _helipadMarker = createVehicle ["Land_HelipadEmpty_F",_pos,[],0,"CAN_COLLIDE"];

				["Helicopter Destination",{
					params ["_objects","_position","_args","_shift","_ctrl","_alt"];
					deleteVehicle _units;

					_args set [4,_position];
					_args spawn MAZ_EZM_fnc_heliEvacExec;
				},_helipadMarker,_heliParams] call MAZ_EZM_fnc_selectSecondaryPosition;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[] call MAZ_EZM_fnc_getScreenPosition] call MAZ_EZM_fnc_createDialog;
		};

		MAZ_EZM_fnc_spawnReinforcements = {
			private _fnc_processParams = {
				params ["_pos","_side","_dir","_numOfUnits","_atCount","_endPos"];
				private _sideType = switch (_side) do {
					case 0: {"NATO"};
					case 1: {"CTRG"};
					case 2: {"CSAT"};
					case 3: {"VIPER"};
					case 4: {"SPETZ"};
					case 5: {"AAF"};
					case 6: {"LDF"};
					case 7: {"FIA"};
					case 8: {"SYNDIK"};
				};
				private _heliType = switch (_side) do {
					case 0: {"B_Heli_Transport_01_F"};
					case 1: {"B_Heli_Transport_01_camo_F"};
					case 2: {"O_Heli_Transport_04_covered_F"};
					case 3: {"O_Heli_Transport_04_bench_F"};
					case 4: {"O_Heli_Light_02_unarmed_F"};
					case 5: {"I_Heli_light_03_dynamicLoadout_F"};
					case 6: {"I_E_Heli_light_03_unarmed_F"};
					case 7: {"I_Heli_light_03_unarmed_F"};
					case 8: {"I_C_Heli_Light_01_civil_F"};
				};
				_side = switch (_side) do {
					case 0: {west};
					case 1: {west};
					case 2: {east};
					case 3: {east};
					case 4: {east};
					case 5: {independent};
					case 6: {independent};
					case 7: {independent};
					case 8: {independent};
				};
				_dir = switch (_dir) do {
					case 0: {0};
					case 1: {180};
					case 2: {90};
					case 3: {270};
				};
				private _startPos = _pos getPos [2500,_dir];
				_numOfUnits = _numOfUnits - _atCount - 1;

				[_startPos,_heliType,_pos,_side,_sideType,_dir,_numOfUnits,_atCount,_endPos]
			};
			(_this call _fnc_processParams) params ["_startPos","_heliType","_pos","_side","_sideType","_dir","_numOfUnits","_atCount","_endPos"];
			_startPos set [2,150];
			private _grp = createGroup [_side,true];
			private _result = [_startPos,_dir+180,_heliType,_grp] call BIS_fnc_spawnVehicle;
			private _spawnedVeh = _result # 0;

			waitUntil{!isNull driver _spawnedVeh};
			_grp setBehaviour "CARELESS";
			[_spawnedVeh,2] remoteExec ['lock'];

			private _heliParams = switch (_heliType) do {
				case "B_Heli_Transport_01_camo_F";
				case "B_Heli_Transport_01_F": {
					[4,["Door_L","Door_R"]]
				};
				case "I_C_Heli_Light_01_civil_F";
				case "O_Heli_Transport_04_covered_F";
				case "O_Heli_Transport_04_bench_F";
				case "O_Heli_Light_02_unarmed_F": {
					[2,["dvere1_posunZ","dvere2_posunZ"]]
				};
				case "I_Heli_light_03_dynamicLoadout_F";
				case "I_E_Heli_light_03_unarmed_F";
				case "I_Heli_light_03_unarmed_F": {
					[2,["Door_L","Door_R"]]
				};
			};
			_heliParams params ["_crewCount","_doorAnims"];

			private _fnc_getUnits = {
				params ["_side","_sideType","_numOfUnits","_atCount"];
				private _aridMaps = ["Altis","Malden","Stratis","VR"];
				private _tropicMaps = ["Enoch","Tanoa"];
				private _world = worldName;
				private _return = switch (_sideType) do {
					case "NATO": {
						private _unitGroup = createGroup [_side,true];
						private _SLType = "B_Soldier_SL_F";
						private _unitRandomType = [
							"B_Soldier_A_F",
							"B_Soldier_AR_F",
							"B_Medic_F",
							"B_Soldier_GL_F",
							"B_Soldier_M_F",
							"B_Soldier_F"
						];
						private _atTypes = [
							"B_Soldier_LAT_F",
							"B_Soldier_LAT2_F"
						];

						private _unitList = [];
						for "_i" from 0 to (_numOfUnits - 1) do {
							_unitList pushBack (selectRandom _unitRandomType);
						};
						for "_i" from 0 to (_atCount - 1) do {
							_unitList pushBack (selectRandom _atTypes);
						};
						if(_world in _tropicMaps) then {
							{
								private _newType = _x insert [1,"_W"];
								_unitList set [_forEachIndex,_newType];
							}forEach _unitList;
							_SLType = _SLType insert [1,"_W"];
						};

						private _groupLeader = _unitGroup createUnit [_SLType,[0,0,0],[],0,"FORM"];
						_unitGroup selectLeader _groupLeader;
						{
							_unitGroup createUnit [_x,[0,0,0],[],0,"FORM"];
						}forEach _unitList;

						[_unitGroup,(units _unitGroup)]

					};
					case "CTRG": {
						private _unitGroup = createGroup [_side,true];
						private _SLType = ["B_Soldier_SL_F",[["arifle_SPAR_02_blk_F","","acc_pointer_IR","optic_Hamr",["150Rnd_556x45_Drum_Mag_F",150],[],"bipod_01_F_blk"],[],["hgun_P07_F","","","",["16Rnd_9x21_Mag",16],[],""],["U_B_CTRG_3",[["FirstAidKit",1],["Chemlight_green",1,1],["150Rnd_556x45_Drum_Mag_F",1,150]]],["V_PlateCarrierH_CTRG",[["16Rnd_9x21_Mag",2,16],["HandGrenade",2,1],["B_IR_Grenade",2,1],["SmokeShell",1,1],["SmokeShellGreen",1,1],["SmokeShellBlue",1,1],["SmokeShellOrange",1,1],["Chemlight_green",1,1],["30Rnd_556x45_Stanag",6,30]]],[],"H_HelmetSpecB_blk","G_Tactical_Black",["Binocular","","","",[],[],""],["ItemMap","ItemGPS","ItemRadio","ItemCompass","ItemWatch","NVGoggles"]]];
						private _unitRandomType = [
							["B_Soldier_A_F",[["arifle_SPAR_01_blk_F","","acc_pointer_IR","optic_Aco",["30Rnd_556x45_Stanag",30],[],""],[],["hgun_P07_F","","","",["16Rnd_9x21_Mag",16],[],""],["U_B_CTRG_1",[["FirstAidKit",1],["Chemlight_green",1,1],["30Rnd_556x45_Stanag",3,30]]],["V_PlateCarrierL_CTRG",[["16Rnd_9x21_Mag",2,16],["HandGrenade",2,1],["SmokeShell",1,1],["SmokeShellGreen",1,1],["Chemlight_green",1,1],["30Rnd_556x45_Stanag",5,30]]],["B_Carryall_khk",[["FirstAidKit",4],["NLAW_F",1,1],["HandGrenade",2,1],["MiniGrenade",2,1],["1Rnd_HE_Grenade_shell",3,1],["3Rnd_HE_Grenade_shell",1,3],["10Rnd_338_Mag",2,10],["20Rnd_762x51_Mag",2,20]]],"H_HelmetB_snakeskin","G_Tactical_Black",[],["ItemMap","","ItemRadio","ItemCompass","ItemWatch","NVGoggles"]]],
							["B_Soldier_AR_F",[["LMG_03_F","","acc_pointer_IR","optic_Holosight_blk_F",["200Rnd_556x45_Box_F",200],[],""],[],["hgun_P07_F","","","",["16Rnd_9x21_Mag",16],[],""],["U_B_CTRG_2",[["FirstAidKit",1],["HandGrenade",1,1],["SmokeShell",1,1],["SmokeShellGreen",1,1],["Chemlight_green",1,1]]],["V_PlateCarrierH_CTRG",[["16Rnd_9x21_Mag",2,16],["Chemlight_green",1,1],["200Rnd_556x45_Box_F",2,200]]],[],"H_HelmetB_camo","G_Tactical_Clear",[],["ItemMap","","ItemRadio","ItemCompass","ItemWatch","NVGoggles"]]],
							["B_Medic_F",[["arifle_SPAR_01_blk_F","","acc_pointer_IR","optic_Holosight_blk_F",["30Rnd_556x45_Stanag",30],[],""],[],["hgun_P07_F","","","",["16Rnd_9x21_Mag",16],[],""],["U_B_CTRG_1",[["FirstAidKit",1],["Chemlight_green",1,1],["30Rnd_556x45_Stanag",3,30]]],["V_PlateCarrierH_CTRG",[["16Rnd_9x21_Mag",2,16],["SmokeShell",1,1],["SmokeShellGreen",1,1],["SmokeShellBlue",1,1],["SmokeShellOrange",1,1],["Chemlight_green",1,1],["30Rnd_556x45_Stanag",5,30]]],["B_AssaultPack_rgr_Medic",[["Medikit",1],["FirstAidKit",10]]],"H_HelmetB_light_snakeskin","G_Respirator_blue_F",[],["ItemMap","","ItemRadio","ItemCompass","ItemWatch","NVGoggles"]]],
							["B_Soldier_GL_F",[["arifle_SPAR_01_GL_blk_F","","","optic_Holosight_blk_F",["30Rnd_556x45_Stanag",30],["1Rnd_HE_Grenade_shell",1],""],[],["hgun_P07_F","","","",["16Rnd_9x21_Mag",16],[],""],["U_B_CTRG_1",[["FirstAidKit",2],["Chemlight_green",1,1]]],["V_PlateCarrierH_CTRG",[["16Rnd_9x21_Mag",2,16],["30Rnd_556x45_Stanag",5,30],["1Rnd_HE_Grenade_shell",4,1],["1Rnd_Smoke_Grenade_shell",2,1],["HandGrenade",2,1],["SmokeShell",2,1]]],[],"H_HelmetSpecB_blk","G_Tactical_Clear",[],["ItemMap","","ItemRadio","ItemCompass","ItemWatch","NVGoggles"]]],
							["B_Soldier_M_F",[["arifle_SPAR_03_blk_F","","acc_pointer_IR","optic_DMS",["20Rnd_762x51_Mag",20],[],"bipod_01_F_blk"],[],["hgun_P07_F","","","",["16Rnd_9x21_Mag",16],[],""],["U_B_CTRG_1",[["FirstAidKit",1],["Chemlight_green",1,1]]],["V_PlateCarrierL_CTRG",[["16Rnd_9x21_Mag",2,16],["HandGrenade",2,1],["SmokeShell",1,1],["SmokeShellGreen",1,1],["Chemlight_green",1,1],["20Rnd_762x51_Mag",3,20]]],[],"H_HelmetB_camo","G_Bandanna_khk",[],["ItemMap","","ItemRadio","ItemCompass","ItemWatch","NVGoggles"]]],
							["B_Soldier_F",[["arifle_SPAR_01_blk_F","","acc_pointer_IR","optic_Aco",["30Rnd_556x45_Stanag",30],[],""],[],["hgun_P07_F","","","",["16Rnd_9x21_Mag",16],[],""],["U_B_CTRG_1",[["FirstAidKit",1],["Chemlight_green",1,1]]],["V_PlateCarrierL_CTRG",[["16Rnd_9x21_Mag",2,16],["SmokeShell",1,1],["SmokeShellGreen",1,1],["Chemlight_green",1,1],["HandGrenade",2,1],["30Rnd_556x45_Stanag",5,30]]],[],"H_HelmetB_snakeskin","G_Tactical_Clear",[],["ItemMap","","ItemRadio","ItemCompass","ItemWatch","NVGoggles"]]]
						];
						private _atTypes = [
							["B_Soldier_LAT_F",[["arifle_SPAR_01_blk_F","","acc_pointer_IR","optic_Holosight_blk_F",["30Rnd_556x45_Stanag",30],[],""],["launch_NLAW_F","","","",["NLAW_F",1],[],""],["hgun_P07_F","","","",["16Rnd_9x21_Mag",16],[],""],["U_B_CTRG_1",[["FirstAidKit",1],["Chemlight_green",1,1],["30Rnd_556x45_Stanag",3,30]]],["V_PlateCarrierH_CTRG",[["16Rnd_9x21_Mag",2,16],["SmokeShell",1,1],["SmokeShellGreen",1,1],["Chemlight_green",1,1],["30Rnd_556x45_Stanag",3,30]]],["B_AssaultPack_rgr_LAT",[["NLAW_F",2,1]]],"H_HelmetB_black","G_Tactical_Clear",[],["ItemMap","","ItemRadio","ItemCompass","ItemWatch","NVGoggles"]]],
							["B_Soldier_LAT2_F",[["arifle_SPAR_01_blk_F","","acc_pointer_IR","optic_Holosight_blk_F",["30Rnd_556x45_Stanag",30],[],""],["launch_MRAWS_green_F","","","",["MRAWS_HEAT_F",1],[],""],["hgun_P07_F","","","",["16Rnd_9x21_Mag",16],[],""],["U_B_CTRG_1",[["FirstAidKit",1],["Chemlight_green",1,1],["30Rnd_556x45_Stanag",3,30]]],["V_PlateCarrierH_CTRG",[["16Rnd_9x21_Mag",2,16],["SmokeShell",1,1],["SmokeShellGreen",1,1],["Chemlight_green",1,1],["30Rnd_556x45_Stanag",3,30]]],["B_AssaultPack_rgr_LAT2",[["MRAWS_HEAT_F",2,1]]],"H_HelmetB_black","G_Tactical_Clear",[],["ItemMap","","ItemRadio","ItemCompass","ItemWatch","NVGoggles"]]]
						];

						private _unitList = [];
						for "_i" from 0 to (_numOfUnits - 1) do {
							_unitList pushBack (selectRandom _unitRandomType);
						};
						for "_i" from 0 to (_atCount - 1) do {
							_unitList pushBack (selectRandom _atTypes);
						};

						private _groupLeader = _unitGroup createUnit [_SLType # 0,[0,0,0],[],0,"FORM"];
						_groupLeader setUnitLoadout (_SLType # 1);
						_unitGroup selectLeader _groupLeader;
						{
							_x params ["_unitType","_loadout"];
							private _unit = _unitGroup createUnit [_unitType,[0,0,0],[],0,"FORM"];
							_unit setUnitLoadout _loadout;
						}forEach _unitList;

						[_unitGroup,(units _unitGroup)]
					};
					case "CSAT": {
						private _unitGroup = createGroup [_side,true];
						private _SLType = "O_Soldier_SL_F";
						private _unitRandomType = [
							"O_Soldier_A_F",
							"O_Soldier_AR_F",
							"O_Medic_F",
							"O_Soldier_GL_F",
							"O_Soldier_M_F",
							"O_Soldier_F"
						];
						private _atTypes = [
							"O_Soldier_LAT_F"
						];

						private _unitList = [];
						for "_i" from 0 to (_numOfUnits - 1) do {
							_unitList pushBack (selectRandom _unitRandomType);
						};
						for "_i" from 0 to (_atCount - 1) do {
							_unitList pushBack (selectRandom _atTypes);
						};
						if(_world in _tropicMaps) then {
							{
								private _newType = _x insert [1,"_T"];
								_unitList set [_forEachIndex,_newType];
							}forEach _unitList;
							_SLType = _SLType insert [1,"_T"];
						};

						private _groupLeader = _unitGroup createUnit [_SLType,[0,0,0],[],0,"FORM"];
						_unitGroup selectLeader _groupLeader;
						{
							_unitGroup createUnit [_x,[0,0,0],[],0,"FORM"];
						}forEach _unitList;

						[_unitGroup,(units _unitGroup)]
					};
					case "VIPER": {
						private _unitGroup = createGroup [_side,true];
						private _SLType = "O_V_Soldier_TL_hex_F";
						private _unitRandomType = [
							"O_V_Soldier_hex_F",
							"O_V_Soldier_M_hex_F",
							"O_V_Soldier_Medic_hex_F"
						];
						private _atTypes = [
							"O_V_Soldier_LAT_hex_F"
						];

						private _unitList = [];
						for "_i" from 0 to (_numOfUnits - 1) do {
							_unitList pushBack (selectRandom _unitRandomType);
						};
						for "_i" from 0 to (_atCount - 1) do {
							_unitList pushBack (selectRandom _atTypes);
						};
						if(_world in _tropicMaps) then {
							{
								private _newType = _x insert [(_x find "hex_F"),"g"];
								_unitList set [_forEachIndex,_newType];
							}forEach _unitList;
						};

						private _groupLeader = _unitGroup createUnit [_SLType,[0,0,0],[],0,"FORM"];
						_unitGroup selectLeader _groupLeader;
						{
							_unitGroup createUnit [_x,[0,0,0],[],0,"FORM"];
						}forEach _unitList;

						[_unitGroup,(units _unitGroup)]
					};
					case "SPETZ": {
						private _unitGroup = createGroup [_side,true];
						private _SLType = "O_R_Soldier_TL_F";
						private _unitRandomType = [
							"O_R_JTAC_F",
							"O_R_Soldier_AR_F",
							"O_R_Medic_F",
							"O_R_Soldier_GL_F",
							"O_R_Soldier_M_F"
						];
						private _atTypes = [
							"O_R_Soldier_LAT_F"
						];

						private _unitList = [];
						for "_i" from 0 to (_numOfUnits - 1) do {
							_unitList pushBack (selectRandom _unitRandomType);
						};
						for "_i" from 0 to (_atCount - 1) do {
							_unitList pushBack (selectRandom _atTypes);
						};

						private _groupLeader = _unitGroup createUnit [_SLType,[0,0,0],[],0,"FORM"];
						_unitGroup selectLeader _groupLeader;
						{
							_unitGroup createUnit [_x,[0,0,0],[],0,"FORM"];
						}forEach _unitList;

						[_unitGroup,(units _unitGroup)]
					};
					case "AAF": {
						private _unitGroup = createGroup [_side,true];
						private _SLType = "I_Soldier_SL_F";
						private _unitRandomType = [
							"I_Soldier_A_F",
							"I_Soldier_AR_F",
							"I_Medic_F",
							"I_Soldier_GL_F",
							"I_Soldier_M_F",
							"I_Soldier_F"
						];
						private _atTypes = [
							"I_Soldier_LAT_F",
							"I_Soldier_LAT2_F"
						];

						private _unitList = [];
						for "_i" from 0 to (_numOfUnits - 1) do {
							_unitList pushBack (selectRandom _unitRandomType);
						};
						for "_i" from 0 to (_atCount - 1) do {
							_unitList pushBack (selectRandom _atTypes);
						};

						private _groupLeader = _unitGroup createUnit [_SLType,[0,0,0],[],0,"FORM"];
						_unitGroup selectLeader _groupLeader;
						{
							_unitGroup createUnit [_x,[0,0,0],[],0,"FORM"];
						}forEach _unitList;

						[_unitGroup,(units _unitGroup)]
					};
					case "LDF": {
						private _unitGroup = createGroup [_side,true];
						private _SLType = "I_E_Soldier_TL_F";
						private _unitRandomType = [
							"I_E_Soldier_A_F",
							"I_E_Soldier_AR_F",
							"I_E_Medic_F",
							"I_E_Soldier_GL_F",
							"I_E_Soldier_M_F",
							"I_E_Soldier_F"
						];
						private _atTypes = [
							"I_E_Soldier_LAT_F",
							"I_E_Soldier_LAT2_F"
						];

						private _unitList = [];
						for "_i" from 0 to (_numOfUnits - 1) do {
							_unitList pushBack (selectRandom _unitRandomType);
						};
						for "_i" from 0 to (_atCount - 1) do {
							_unitList pushBack (selectRandom _atTypes);
						};

						private _groupLeader = _unitGroup createUnit [_SLType,[0,0,0],[],0,"FORM"];
						_unitGroup selectLeader _groupLeader;
						{
							_unitGroup createUnit [_x,[0,0,0],[],0,"FORM"];
						}forEach _unitList;

						[_unitGroup,(units _unitGroup)]
					};
					case "FIA": {
						private _unitGroup = createGroup [_side,true];
						private _SLType = "I_G_Soldier_SL_F";
						private _unitRandomType = [
							"I_G_Soldier_A_F",
							"I_G_Soldier_AR_F",
							"I_G_Medic_F",
							"I_G_Soldier_GL_F",
							"I_G_Soldier_M_F",
							"I_G_Soldier_F"
						];
						private _atTypes = [
							"I_G_Soldier_LAT_F",
							"I_G_Soldier_LAT2_F"
						];

						private _unitList = [];
						for "_i" from 0 to (_numOfUnits - 1) do {
							_unitList pushBack (selectRandom _unitRandomType);
						};
						for "_i" from 0 to (_atCount - 1) do {
							_unitList pushBack (selectRandom _atTypes);
						};

						private _groupLeader = _unitGroup createUnit [_SLType,[0,0,0],[],0,"FORM"];
						_unitGroup selectLeader _groupLeader;
						{
							_unitGroup createUnit [_x,[0,0,0],[],0,"FORM"];
						}forEach _unitList;

						[_unitGroup,(units _unitGroup)]
					};
					case "SYNDIK": {
						private _unitGroup = createGroup [_side,true];
						private _SLType = "I_C_Soldier_Para_2_F";
						private _unitRandomType = [
							"I_C_Soldier_Para_7_F",
							"I_C_Soldier_Para_3_F",
							"I_C_Soldier_Para_4_F",
							"I_C_Soldier_Para_6_F",
							"I_C_Soldier_Para_8_F",
							"I_C_Soldier_Para_1_F"
						];
						private _atTypes = [
							"I_C_Soldier_Para_5_F"
						];

						private _unitList = [];
						for "_i" from 0 to (_numOfUnits - 1) do {
							_unitList pushBack (selectRandom _unitRandomType);
						};
						for "_i" from 0 to (_atCount - 1) do {
							_unitList pushBack (selectRandom _atTypes);
						};

						private _groupLeader = _unitGroup createUnit [_SLType,[0,0,0],[],0,"FORM"];
						_unitGroup selectLeader _groupLeader;
						{
							_unitGroup createUnit [_x,[0,0,0],[],0,"FORM"];
						}forEach _unitList;

						[_unitGroup,(units _unitGroup)]
					};
				};
				_return
			};
			([_side,_sideType,_numOfUnits,_atCount] call _fnc_getUnits) params ["_group","_units"];
			{
				_x moveInCargo _spawnedVeh;
				_x setUnitPos "UP";
			}forEach _units;

			private _heliPad1 = "Land_HelipadEmpty_F" createVehicle _pos;
			private _waypointPickup = _grp addWaypoint [position _heliPad1,0];
			_waypointPickup setWaypointType "TR UNLOAD";

			private _wayPointGetOut = _group addWaypoint [_pos,0];
			_wayPointGetOut setWaypointType "GETOUT";

			waitUntil {isTouchingGround _spawnedVeh};

			if(_heliType == "O_Heli_Light_02_unarmed_F") then {
				{
					_spawnedVeh animate [_x,1];
				}forEach _doorAnims;
			} else {
				{
					_spawnedVeh animateDoor [_x,1,false];
				}forEach _doorAnims;
			};

			sleep 1.5;
			commandGetOut _units;

			waitUntil {count (crew _spawnedVeh) <= _crewCount};

			if(_heliType == "O_Heli_Light_02_unarmed_F") then {
				{
					_spawnedVeh animate [_x,0];
				}forEach _doorAnims;
			} else {
				{
					_spawnedVeh animateDoor [_x,0,false];
				}forEach _doorAnims;
			};

			private _moveWaypoint = _group addWaypoint [_endPos,0];
			_moveWaypoint setWaypointType "SAD";
			_moveWaypoint setWaypointCombatMode "YELLOW";
			_moveWaypoint setWaypointBehaviour "AWARE";
			_moveWaypoint setWaypointSpeed "FULL";

			sleep 1.5;

			private _wayPointHeliLeave = _grp addWayPoint [_startPos,0];
			_wayPointHeliLeave setWayPointType "MOVE";
			sleep 50;
			{
				deleteVehicle _x;
			} forEach crew _spawnedVeh;
			deleteVehicle _spawnedVeh;
			deleteVehicle _heliPad1;
		};
		
		MAZ_EZM_fnc_getAllFactionGroups = {	
			params [["_side",[0,1,2],[west,[]]]];	
			private _sides = [];	
			if(_side isEqualType west) then {	
				_sides pushBack (_side call BIS_fnc_sideID);	
			};	
			if(_side isEqualType []) then {	
				_sides = _side;	
			};	
			private _factions = [];	
			{	
				private _cfg = _x;	
				private _side = getNumber (_x >> "side");	
				if(!(_side in _sides)) then {continue};	
				{	
					private _name = getText (_x >> "name");	
					private _groups = [];	
					{	
						private _groupName = getText (_x >> "name");	
						_groups pushBack [_groupName,_x];	
					}forEach ("true" configClasses (_x >> "Infantry"));	
					private _flag = getText (configfile >> "CfgFactionClasses" >> configName _x >> "flag");	
					private _icon = getText (configfile >> "CfgFactionClasses" >> configName _x >> "icon");	
					_factions pushBack [_name,_flag,_icon,_groups];	
				}forEach ("true" configClasses _x)	
			}forEach ("true" configClasses (configFile >> "CfgGroups"));	
			_factions	
		};	
		
		MAZ_EZM_fnc_getGroupDataFromIndex = {	
			params ["_factionData","_index"];	
			private _out = "";	
			private _i = 0;	
			{	
				_x params ["_name","_flag","_icon","_groups"];	
				if(!(_out isEqualType "")) exitWith {};	
				private _groupName = "";	
				{	
					_x params ["_grpName","_cfg"];	
					if(_i == _index) exitWith {	
						_out = _cfg;	
					};	
					_i = _i + 1;	
				}forEach _groups;	
			}forEach _factionData;	
			_out	
		};

		MAZ_EZM_fnc_callReinforcements = {
			["Spawn Reinforcements",[
				[
					"LIST",
					["Side of Reinforcements:","Choose force to helo drop in."],
					[
						[],
						[
							["NATO","","A3\UI_F\data\Map\Markers\Flags\NATO_ca.paa"],
							["CTRG","","A3\UI_F\data\Map\Markers\Flags\CTRG_ca.paa"],
							["CSAT","","A3\UI_F\data\Map\Markers\Flags\CSAT_ca.paa"],
							["Viper","","A3\UI_F\data\Map\Markers\Flags\Viper_ca.paa"],
							["Spetznaz","","A3\UI_F_Enoch\data\CfgMarkers\Spetsnaz_ca.paa"],
							["AAF","","A3\UI_F\data\Map\Markers\Flags\AAF_ca.paa"],
							["LDF","","A3\UI_F_Enoch\data\CfgMarkers\LDF_ca.paa"],
							["FIA","","A3\UI_F\data\Map\Markers\Flags\FIA_ca.paa"],
							["Syndicat","","A3\UI_F\data\Map\Markers\Flags\syndicat_ca.paa"]
						],
						0,
						9
					]
				],
				[
					"COMBO",
					"Direction of Reinforcements",
					[
						[],
						[
							"N",
							"S",
							"E",
							"W"
						],
						0
					]
				],
				[
					"SLIDER",
					["Number of Units","The number of units that will be spawned as reinforcements."],
					[1,8,5]
				],
				[
					"SLIDER",
					["Number of AT Units","The number of units that will be spawned as reinforcements."],
					[0,2,1]
				]
			],{
				params ["_values","_pos","_display"];
				_values params ["_sideReinforcements","_dir","_numOfUnits","_atCount"];
				_display closeDisplay 1;
				
				private _reinforcementsParams = [_pos,_sideReinforcements,_dir,_numOfUnits,_atCount,[]];
				private _helipadMarker = createVehicle ["Land_HelipadEmpty_F",_pos,[],0,"CAN_COLLIDE"];

				["Reinforcements Destination on Foot",{
					params ["_objects","_position","_args","_shift","_ctrl","_alt"];
					deleteVehicle _units;
					_args set [5,_position];
					_args spawn MAZ_EZM_fnc_spawnReinforcements;
				},_helipadMarker,_reinforcementsParams] call MAZ_EZM_fnc_selectSecondaryPosition;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[] call MAZ_EZM_fnc_getScreenPosition] call MAZ_EZM_fnc_createDialog;
		};

	comment "Arsenal";

		MAZ_EZM_fnc_createArsenalModule = {
			params ["_entity"];
			private _arsenalObject = nil;
			if(!isNull _entity) then {
				_arsenalObject = _entity;
			} else {
				private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
				_arsenalObject = createVehicle ["B_supplyCrate_F",_pos,[],0,"CAN_COLLIDE"];
			};
			[_arsenalObject] call MAZ_EZM_fnc_addObjectToInterface;
			
			clearItemCargoGlobal _arsenalObject;
			clearWeaponCargoGlobal _arsenalObject;
			clearMagazineCargoGlobal _arsenalObject;
			clearBackpackCargoGlobal _arsenalObject;

			private _secondObject = "Land_HelipadEmpty_F" createVehicle position _arsenalObject;
			_secondObject setPos (getPos _arsenalObject);
			[_secondObject,_arsenalObject] call BIS_fnc_attachToRelative;
			_arsenalObject setVariable ['attachedObjArsenal',_secondObject,true];

			private _thirdObject = "Land_HelipadEmpty_F" createVehicle position _arsenalObject;
			_thirdObject setPos (getPos _arsenalObject);
			[_thirdObject,_arsenalObject] call BIS_fnc_attachToRelative;
			_arsenalObject setVariable ['attachedObjArsenal2',_thirdObject,true];
			[
				_arsenalObject,
				[
					"<t color='#FFFFFF' size='0.9'><img image='a3\ui_f\data\logos\a_64_ca.paa'></img><t color='#1a7e00' size='1'> Open Full Arsenal</t>",
					{
						params ["_target", "_caller", "_actionId", "_arguments"];
						[] call LM_fnc_arsenalOpen;
						showChat true;
						playSound 'addItemOk';
					},
					nil,
					6,
					true,
					true,
					"",
					"_target distance _this < 6"
				]
			] remoteExec ['addAction',0,_arsenalObject];
			[
				_arsenalObject,
				[
					"<t color='#FFFFFF' size='1'><img image='a3\ui_f\data\igui\cfg\actions\obsolete\ui_action_gear_ca.paa'></img><t color='#1a7e00' size='1'> Save Respawn Loadout</t>",
					{
						params ["_target", "_caller", "_actionId", "_arguments"];
						if(!isNil "MAZ_customArsenalRespawnEH") then {
							player removeEventHandler ["Respawn",MAZ_customArsenalRespawnEH];
						};
						MAZ_customArsenalRespawnEH = player addEventHandler ["Respawn",{
							[] spawn {
								private _unitLoadout = player getVariable 'MAZ_customLoadoutFromModule';
								if(!isNil "_unitLoadout") then {
									if(count (_unitLoadout select 1) != 0) then {
										_unitLoadout set [1,[]];
										titleText [ "<t color='#004c99' size='1.5'>Arsenal</t><t color='#FFFFFF' size='1.5'>: You lost your launcher during the respawn. You can get a new one at an arsenal.</t>","PLAIN DOWN",2,true,true];
									};
									player setUnitLoadout _unitLoadout;
									systemChat "[ Enhanced Zeus Modules ] : Respawn loadout applied.";
									playSound 'addItemOk';
								};
							};
						}];
						[player,"PutDown"] remoteExec ["playAction",0];
						player setVariable ['MAZ_customLoadoutFromModule',getUnitLoadout player];
						playSound 'addItemOk';
						systemChat "[ Enhanced Zeus Modules ] : Respawn loadout saved.";
					},
					nil,
					6,
					true,
					true,
					"",
					"_target distance _this < 6"
				]
			] remoteExec ['addAction',0,_secondObject];
			[
				_arsenalObject,
				[
					"<t color='#FFFFFF' size='1'><img image='a3\ui_f\data\igui\cfg\actions\obsolete\ui_action_gear_ca.paa'></img><t color='#1a7e00' size='1'> Get Saved Loadout</t>",
					{
						params ["_target", "_caller", "_actionId", "_arguments"];
						[player,"PutDown"] remoteExec ["playAction",0];
						private _loadout = player getVariable ['MAZ_customLoadoutFromModule',getUnitLoadout player];
						player setUnitLoadout _loadout;
						playSound 'addItemOk';
						systemChat "[ Enhanced Zeus Modules ] : Saved loadout re-equipped.";
					},
					nil,
					6,
					true,
					true,
					"",
					"_target distance _this < 6 && (count (player getVariable ['MAZ_customLoadoutFromModule',[]]) != 0)"
				]
			] remoteExec ['addAction',0,_thirdObject];
			_arsenalObject addEventHandler ["Deleted", {
				params ["_entity"];
				private _secondObject = _entity getVariable 'attachedObjArsenal';
				private _thirdObject = _entity getVariable 'attachedObjArsenal2';
				deleteVehicle _secondObject;
				deleteVehicle _thirdObject;
			}];

			["Full Arsenal Created.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		JAM_EZM_fnc_createAIOArsenalModule = {
			comment "
			playsound 'addItemFailed';
			systemChat 'Use the version compatible with Official zeus servers!';
			systemChat 'Composition: AIO Arsenal (Supply Box)';
			systemChat 'https://steamcommunity.com/sharedfiles/filedetails/?id=2764558652';
			showChat true;
			";
			params [['_entity', objnull]];
			M9SD_AIO_shouldCreateBox = false;
			if (isNull _entity) then {
				M9SD_AIO_shouldCreateBox = true;
			};
			_pos = screenToWorld getMousePosition;
			M9SD_AIO_SupplyBox = objnull;
			if (M9SD_AIO_shouldCreateBox) then 
			{
				M9SD_AIO_SupplyBox = createVehicle ["B_supplyCrate_F", _pos, [], 0, "CAN_COLLIDE"];
				M9SD_AIO_SupplyBox setVehicleVarName "M9SD_AIO_SupplyBox";
				M9SD_AIO_SupplyBox allowdamage false;;
				M9SD_AIO_HelipadLight = createVehicle["PortableHelipadLight_01_green_F", _pos, [], 0, "CAN_COLLIDE"];
				M9SD_AIO_HelipadLight = [M9SD_AIO_HelipadLight] call BIS_fnc_replaceWithSimpleObject;
				M9SD_AIO_HelipadLight setVehicleVarName "M9SD_AIO_HelipadLight";
				M9SD_AIO_HelipadLight attachTo[M9SD_AIO_SupplyBox, [0, 0, 0.5]];;
				
				M9SD_AIO_glowLight1 = createVehicle ['#lightpoint', _pos,[],0,'CAN_COLLIDE'];
				M9SD_AIO_glowLight1 attachto [M9SD_AIO_SupplyBox,[0,0,0.5]];
				
				_fnc =  { 
					if (!hasInterface) exitWith {}; 
					params ['_light','_vic']; 
					if (!isNull _light) then 
					{ 
						_light setLightBrightness 0.14; 
						_color = [0.1,1,0.1];
						_light setLightAmbient _color; 
						_light setLightColor _color; 
					}; 
				};
				M9SD_AIO_REfnc_initArsenalLight = ['b2', _fnc]; 
				publicVariable 'M9SD_AIO_REfnc_initArsenalLight'; 
				
				[ 
					[ 
						M9SD_AIO_glowLight1,  
						Tesla_testVehicle 
					], 
					{ 
						_this spawn (M9SD_AIO_REfnc_initArsenalLight select 1); 
					} 
				] remoteExec ['spawn', 0, M9SD_AIO_glowLight1];
				
				
				[[M9SD_AIO_SupplyBox, M9SD_AIO_HelipadLight, M9SD_AIO_glowLight1], {
					params['_M9SD_AIO_SupplyBox', '_M9SD_AIO_HelipadLight', '_M9SD_AIO_glowLight1'];
					waitUntil {
						sleep 1;
						(!alive _M9SD_AIO_SupplyBox)
					};
					deleteVehicle _M9SD_AIO_SupplyBox;
					deleteVehicle _M9SD_AIO_HelipadLight;
					deleteVehicle _M9SD_AIO_glowLight1;
				}] remoteExec['spawn', 2];
				clearWeaponCargoGlobal M9SD_AIO_SupplyBox;
				clearBackpackCargoGlobal M9SD_AIO_SupplyBox;
				clearMagazineCargoGlobal M9SD_AIO_SupplyBox;
				clearItemCargoGlobal M9SD_AIO_SupplyBox;
			} else {
				M9SD_AIO_SupplyBox = _entity;
			};
			if (isNull M9SD_AIO_SupplyBox) exitWith {};

			publicVariable 'M9SD_AIO_SupplyBox';
			M9SD_fnc_addSmallArsenalActions = {
				params[['_supplyCrate', objNull]];
				if (isNull _supplyCrate) exitWith {};
				if (_supplyCrate getVariable['M9SD_hasArsenalActions', false]) exitWith {};
				_supplyCrate setVariable['M9SD_hasArsenalActions', true, true];
				if (isNil 'M9SD_AIOArsenal_JIPCount') then {
					M9SD_AIOArsenal_JIPCount = 0;
				};
				M9SD_AIOArsenal_JIPCount = M9SD_AIOArsenal_JIPCount + 1;
				publicVariable 'M9SD_AIOArsenal_JIPCount';
				private _uniqueJIP = format['M9SD_JIP_AIOArsenalActions_%1', M9SD_AIOArsenal_JIPCount];
				[
					[_supplyCrate, _uniqueJIP], {
						params[['_supplyCrate', objNull], ['_uniqueJIP', '']];
						if (isNil "aioArsenalActions") then {
							aioArsenalActions = {
								if (!hasInterface) exitWith {};
								params[['_supplyCrate', objNull], ['_uniqueJIP', '']];
								if (isNull _supplyCrate) exitWith {
									remoteExec['', _uniqueJIP]
								};
								_supplyCrate addAction[
									"<t color='#FFFFFF' size='1.2'><img image='a3\ui_f\data\logos\a_64_ca.paa'></img><t color='#00ff00' size='1.2' font='puristaBold'> Full Arsenal</t>", {
										playSound['beep_target', true];
										playSound['beep_target', false];
										[] call LM_fnc_arsenalOpen;
										0 = [] spawn {
											for '_i'
											from 1 to 12 do {
												(format['arsenalNotification%1', _i]) cutFadeOut 0;
											};
											'arsenalNotification1'
											cutText["<br/><t color='#00ff00' size='2.1' shadow='2' font='puristaMedium'>AIO Arsenal</t>", "PLAIN DOWN", -1, true, true];
											uiSleep 1;
											if !(isNull findDisplay - 1) then {
												'arsenalNotification2'
												cutFadeOut 0;
												'arsenalNotification2'
												cutText["<br/><br/><br/><t color='#00a6ff' size='1.2' shadow='2' font='puristaSemiBold'>by <t color='#00c9ff'>M9-SD</t>", "PLAIN DOWN", -1, true, true];
											};
											uiSleep 7;
											'arsenalNotification1'
											cutFadeOut 2.1;
											'arsenalNotification2'
											cutFadeOut 2.1;
										};
										private _arsenalAnims = [{
											player playActionNow "Salute";
										}, {
											[player, 'acts_civilidle_1'] remoteExec['switchMove'];
										}, {
											[player, 'acts_civilListening_2'] remoteExec['switchMove'];
										}, {
											[player, 'acts_commenting_on_fight_loop'] remoteExec['switchMove'];
										}, {
											[player, 'acts_gallery_visitor_01'] remoteExec['switchMove'];
										}, {
											[player, 'acts_gallery_visitor_02'] remoteExec['switchMove'];
										}, {
											[player, 'acts_hilltop_calibration_loop'] remoteExec['switchMove'];
										}, {
											[player, 'acts_kore_talkingoverradio_loop'] remoteExec['switchMove'];
										}, {
											[player, 'acts_staticPose_photo'] remoteExec['switchMove'];
										}, {
											player playActionNow 'gear';
										}, {
											[player, 'Acts_Taking_Cover_From_Jets'] remoteExec['switchMove'];
										}, {
											[player, 'Acts_standingSpeakingUnarmed'] remoteExec['switchMove'];
										}, {
											player playMoveNow 'acts_Mentor_Freeing_Player';
										}, {
											[player, 'acts_kore_talkingOverRadio_In'] remoteExec['switchMove'];
										}, {
											[player, 'acts_kore_idleNoWeapon_In'] remoteExec['switchMove'];
										}, {
											[player, 'Acts_JetsOfficerSpilling'] remoteExec['switchMove'];
										}, {
											player playMoveNow 'Acts_Hilltop_Calibration_Pointing_Left';
										}, {
											player playMoveNow 'Acts_Hilltop_Calibration_Pointing_Right';
										}, {
											[player, 'Acts_Grieving'] remoteExec['switchMove'];
										}];
										private _arsenalAnimsAdd =
										switch (currentWeapon player) do {
											case '':{
													[]
												};
											case (primaryWeapon player):{
													[{
														[player, 'acts_briefing_SA_loop'] remoteExec['switchMove'];
													}, {
														[player, 'acts_getAttention_loop'] remoteExec['switchMove'];
													}, {
														[player, 'acts_millerIdle'] remoteExec['switchMove'];
													}, {
														player playMoveNow 'Acts_SupportTeam_Right_ToKneelLoop';
													}, {
														player playMoveNow 'Acts_SupportTeam_Left_ToKneelLoop';
													}, {
														player playMoveNow 'Acts_SupportTeam_Front_ToKneelLoop';
													}, {
														player playMoveNow 'Acts_SupportTeam_Back_ToKneelLoop';
													}, {
														[player, 'Acts_starGazer'] remoteExec['switchMove'];
													}, {
														player playMoveNow 'acts_RU_briefing_Turn';
													}, {
														player playMoveNow 'acts_RU_briefing_point';
													}, {
														player playMoveNow 'acts_RU_briefing_point_tl';
													}, {
														player playMoveNow 'acts_RU_briefing_move';
													}, {
														[player, 'acts_rifle_operations_zeroing'] remoteExec['switchMove'];
													}, {
														player playMoveNow 'acts_rifle_operations_right';
													}, {
														player playMoveNow 'acts_rifle_operations_left';
													}, {
														player playMoveNow 'acts_rifle_operations_front';
													}, {
														player playMoveNow 'acts_rifle_operations_checking_chamber';
													}, {
														player playMoveNow 'acts_rifle_operations_barrel';
													}, {
														player playMoveNow 'acts_rifle_operations_back';
													}, {
														player playMoveNow 'acts_pointing_up';
													}, {
														player playMoveNow 'acts_pointing_down';
													}, {
														player playMoveNow 'acts_peering_up';
													}, {
														player playMoveNow 'acts_peering_down';
													}, {
														player playMoveNow 'acts_peering_front';
													}, {
														[player, 'Acts_Helping_Wake_Up_1'] remoteExec['switchMove'];
													}]
												};
											case (handgunWeapon player):{
													[{
														[player, 'acts_examining_device_player'] remoteExec['switchMove'];
													}, {
														[player, 'acts_executioner_standingloop'] remoteExec['switchMove'];
													}, {
														player playMoveNow 'Acts_ViperMeeting_A_End';
													}, {
														player playMoveNow 'Acts_UGV_Jamming_Loop';
													}, {
														player playMoveNow 'Acts_starterPistol_Fire';
													}]
												};
											default {
												[]
											};
										};
										_arsenalAnims = _arsenalAnims + _arsenalAnimsAdd;
										private _playAnim = selectRandom _arsenalAnims;
										call _playAnim;
										if !(isNil "M9SD_EH_ResetPlayerAnimsOnArsenalClosed") then {
											(findDisplay 46) displayRemoveEventHandler['keyDown', M9SD_EH_ResetPlayerAnimsOnArsenalClosed];
										};
										M9SD_EH_ResetPlayerAnimsOnArsenalClosed = (findDisplay 46) displayAddEventHandler['keyDown', {
											params["_displayOrControl", "_key", "_shift", "_ctrl", "_alt"];
											private _w = 17;
											private _a = 30;
											private _s = 31;
											private _d = 32;
											private _keys = [_w, _a, _s, _d];
											if (_key in _keys) then {
												comment
													" 
												playSound['addItemOK', true];
												playSound['addItemOK', false];
												"; 
												if !(isNil "M9SD_EH_ResetPlayerAnimsOnArsenalClosed") then {
													(findDisplay 46) displayRemoveEventHandler['keyDown', M9SD_EH_ResetPlayerAnimsOnArsenalClosed];
												};
												player enableSimulation true;
												player playActionNow '';
												player playMoveNow '';
												player switchMove '';
												if (isMultiplayer) then {
													[player, ''] remoteExec['switchMove']
												};
												'arsenalNotification1'
												cutFadeOut 0;
												'arsenalNotification2'
												cutFadeOut 0;
												comment
													" 
												playSound['hintCollapse', true];
												playSound['hintCollapse', false];
												"; 
											};
										}];
										playSound['hintExpand', true];
										playSound['hintExpand', false];
									}, nil, 7777, true, true, "", "(_this == vehicle _this)", 7
								];
								
								_supplyCrate addAction
								[
									"<t color='#FFFFFF' size='1.2'><img image='\A3\ui_f\data\map\diary\icons\taskCustom_ca.paa'></img><t color='#00ff00' size='1.2' font='puristaBold'> Copy Loadout</t>", 
									{
										playSound ['beep_target', true]; 
										playSound ['beep_target', false]; 
										player playmovenow 'AinvPknlMstpSnonWnonDnon_1'; 
										private _nearMen = nearestObjects [player, ['Man'], 21]; 
										if ((count _nearMen) <= 1) exitWith  
										{ 
										 playSound ['AddItemFailed', true]; 
										 playSound ['AddItemFailed', false]; 
										 0 = [] spawn  
										 { 
										  for '_i' from 1 to 12 do  
										  { 
										   (format ['arsenalNotification%1', _i]) cutFadeOut 0; 
										  }; 
										  'arsenalNotification8' cutFadeOut 0;  
										  'arsenalNotification8' cutText ["<t color='#ffd700' font='puristaMedium' shadow='2' size='1.4'>ERROR:<br/>No unit is close enough.</t>", "PLAIN DOWN", -1, true, true]; 
										  uiSleep 3.5; 
										  'arsenalNotification8' cutFadeOut 0.35; 
										 }; 
										}; 
										private _nearestMan = _nearMen # 1; 
										private _loadout = getUnitLoadout _nearestMan; 
										player setUnitLoadout _loadout; 
										private _unitName = name _nearestMan; 
										private _notifText = format ["<t color='#ffd700' font='puristaMedium' shadow='2' size='1.4'>Nearest unit’s loadout copied:<br/><br/><t color='#FFFFFF' font='puristaSemiBold'>“%1”</t>", _unitName]; 
										0 = _notifText spawn  
										{ 
										 for '_i' from 1 to 12 do  
										 { 
										  (format ['arsenalNotification%1', _i]) cutFadeOut 0; 
										 }; 
										 'arsenalNotification8' cutFadeOut 0;  
										 'arsenalNotification8' cutText [_this, "PLAIN DOWN", -1, true, true]; 
										 uiSleep 3.5; 
										 'arsenalNotification8' cutFadeOut 0.35; 
										}; 
										playSound ['hintExpand', true]; 
										playSound ['hintExpand', false]; 
									}, nil, 7777, true, true, "", "(_this == vehicle _this)", 7
								];
								_supplyCrate addAction[
									"<t color='#FFFFFF' size='1.2'><img image='a3\ui_f\data\igui\cfg\actions\obsolete\ui_action_gear_ca.paa'></img><t color='#00ff00' size='1.2' font='puristaBold'> Empty Loadout</t>", {
										playSound['beep_target', true];
										playSound['beep_target', false];
										player playmovenow 'AinvPknlMstpSnonWnonDnon_1';
										removeAllWeapons player;
										removeAllItems player;
										removeAllAssignedItems player;
										removeUniform player;
										removeVest player;
										removeBackpack player;
										removeHeadgear player;
										removeGoggles player;
										0 = [] spawn {
											for '_i'
											from 1 to 12 do {
												(format['arsenalNotification%1', _i]) cutFadeOut 0;
											};
											'arsenalNotification4'
											cutFadeOut 0;
											'arsenalNotification4'
											cutText["<t color='#00ff00' font='puristaMedium' shadow='2' size='1.2'>Loadout removed.</t>", "PLAIN DOWN", -1, true, true];
											uiSleep 3.5;
											'arsenalNotification4'
											cutFadeOut 0.35;
										};
										playSound['hintExpand', true];
										playSound['hintExpand', false];
									}, nil, 7777, true, true, "", "(_this == vehicle _this)", 7
								];
								_supplyCrate addAction[
									"<t color='#FFFFFF' size='1.2'><img image='a3\3den\data\displays\Display3DEN\ToolBar\save_ca.paa'></img><t color='#00ff00' size='1.2' font='puristaBold'> Save Respawn Loadout</t>", {
										playSound['beep_target', true];
										playSound['beep_target', false];
										player playActionNow 'putdown';
										[player, [missionnamespace, "M9SD_arsenalRespawnLoadout"]] call BIS_fnc_saveInventory;
										if (!isNil "M9SD_EH_arsenalRespawnLoadout") then {
											player removeEventHandler["Respawn", M9SD_EH_arsenalRespawnLoadout];
										};
										M9SD_EH_arsenalRespawnLoadout = player addEventHandler[
											"Respawn", {
												0 = [] spawn {
													waitUntil {
														(alive player)
													};
													sleep 0.07;
													[player, [missionnamespace, "M9SD_arsenalRespawnLoadout"]] call BIS_fnc_loadInventory;
												};
											}
										];
										0 = [] spawn {
											for '_i'
											from 1 to 12 do {
												(format['arsenalNotification%1', _i]) cutFadeOut 0;
											};
											'arsenalNotification6'
											cutFadeOut 0;
											'arsenalNotification6'
											cutText["<t color='#00ff00' font='puristaMedium' shadow='2' size='1.2'>Respawn loadout set.</t>", "PLAIN DOWN", -1, true, true];
											uiSleep 3.5;
											'arsenalNotification6'
											cutFadeOut 0.35;
										};
										playSound['hintExpand', true];
										playSound['hintExpand', false];
									}, nil, 7777, true, true, "", "(_this == vehicle _this)", 7
								];
								_supplyCrate addAction[
									"<t color='#FFFFFF' size='1.2'><img image='a3\3den\data\displays\Display3DEN\ToolBar\open_ca.paa'></img><t color='#00ff00' size='1.2' font='puristaBold'> Load Respawn Loadout</t>", {
										playSound['beep_target', true];
										playSound['beep_target', false];
										player playActionNow 'putdown';
										if (isNil 'M9SD_EH_arsenalRespawnLoadout') then {
											playSound['AddItemFailed', true];
											playSound['AddItemFailed', false];
											0 = [] spawn {
												for '_i'
												from 1 to 12 do {
													(format['arsenalNotification%1', _i]) cutFadeOut 0;
												};
												'arsenalNotification12'
												cutFadeOut 0;
												'arsenalNotification12'
												cutText["<t color='#00ff00' font='puristaMedium' shadow='2' size='1.2'>ERROR:<br/>No respawn loadout saved.</t>", "PLAIN DOWN", -1, true, true];
												uiSleep 3.5;
												'arsenalNotification12'
												cutFadeOut 0.35;
											};
										} else {
											[player, [missionnamespace, "M9SD_arsenalRespawnLoadout"]] call BIS_fnc_loadInventory;
											0 = [] spawn {
												for '_i'
												from 1 to 12 do {
													(format['arsenalNotification%1', _i]) cutFadeOut 0;
												};
												'arsenalNotification12'
												cutFadeOut 0;
												'arsenalNotification12'
												cutText["<t color='#00ff00' font='puristaMedium' shadow='2' size='1.2'>Respawn loadout applied.</t>", "PLAIN DOWN", -1, true, true];
												uiSleep 3.5;
												'arsenalNotification12'
												cutFadeOut 0.35;
											};
											playSound['hintExpand', true];
											playSound['hintExpand', false];
										};
									}, nil, 7777, true, true, "", "(_this == vehicle _this)", 7
								];
								_supplyCrate addAction[
									"<t color='#FFFFFF' size='1.2'><img image='\a3\3den\data\Cfg3DEN\History\deleteItems_ca.paa'></img><t color='#00ff00' size='1.2' font='puristaBold'> Delete Respawn Loadout</t>", {
										playSound['beep_target', true];
										playSound['beep_target', false];
										player playActionNow 'putdown';
										if (!isNil "M9SD_EH_arsenalRespawnLoadout") then {
											player removeEventHandler["Respawn", M9SD_EH_arsenalRespawnLoadout];
										};
										0 = [] spawn {
											for '_i'
											from 1 to 12 do {
												(format['arsenalNotification%1', _i]) cutFadeOut 0;
											};
											'arsenalNotification5'
											cutFadeOut 0;
											'arsenalNotification5'
											cutText["<t color='#00ff00' font='puristaMedium' shadow='2' size='1.2'>Respawn loadout disabled.</t>", "PLAIN DOWN", -1, true, true];
											uiSleep 3.5;
											'arsenalNotification5'
											cutFadeOut 0.35;
										};
										playSound['hintExpand', true];
										playSound['hintExpand', false];
									}, nil, 7777, true, true, "", "(_this == vehicle _this)", 7
								];
								
								
								_supplyCrate addAction[
									"<t color='#FFFFFF' size='1.2'><img image='\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\heal_ca.paa'></img><t color='#00ff00' size='1.2' font='puristaBold'> Heal</t>", {
										playSound['beep_target', true];
										playSound['beep_target', false];
										player playActionNow 'Medic';
										[player] call BIS_fnc_reviveEhRespawn;
										player setDamage 0;
										player setUnconscious false;
										player setCaptive false;
										0 = [] spawn {
											for '_i'
											from 1 to 12 do {
												(format['arsenalNotification%1', _i]) cutFadeOut 0;
											};
											'arsenalNotification3'
											cutFadeOut 0;
											'arsenalNotification3'
											cutText["<t color='#00ff00' font='puristaMedium' shadow='2' size='1.2'>Healing...</t>", "PLAIN DOWN", -1, true, true];
											uiSleep 6.33;
											playSound['hintCollapse', true];
											playSound['hintCollapse', false];
											'arsenalNotification3'
											cutFadeOut 0;
											'arsenalNotification3'
											cutText["<t color='#00ff00' font='puristaMedium' shadow='2' size='1.2'>Healed.</t>", "PLAIN DOWN", -1, true, true];
											uiSleep 3.33;
											'arsenalNotification3'
											cutFadeOut 0.35;
										};
										playSound['hintExpand', true];
										playSound['hintExpand', false];
									}, nil, 7777, true, true, "", "((_this == vehicle _this) && (damage _this > 0))", 7
								];
							};
						};
						
						[_supplyCrate, _uniqueJIP] call aioArsenalActions;
					}
				] remoteExec['call', 0, _uniqueJIP];
			};
			missionNamespace setVariable ["M9SD_AIO_SupplyBox_Global",M9SD_AIO_SupplyBox,true];
			[M9SD_AIO_SupplyBox] call M9SD_fnc_addSmallArsenalActions;
			M9SD_fnc_smallArsenalMarkers = {
				params[['_supplyCrate', objNull]];
				if (isNull _supplyCrate) exitWith {};
				if (_supplyCrate getVariable['M9SD_hasMarkers', false]) exitWith {};
				_supplyCrate setVariable['M9SD_hasMarkers', true, true];
				if (isNil 'M9SD_smallArsenals') then {
					M9SD_smallArsenals = [];
				};
				M9SD_smallArsenals pushBackUnique _supplyCrate;
				publicVariable 'M9SD_smallArsenals';
				[M9SD_smallArsenals, {
					if (!hasInterface) exitWith {};
					waitUntil {
						!isNil {
							player
						} && {!isNull player
						}
					};
					waitUntil {
						!isNull(findDisplay 46)
					};
					if (isNil 'M9SD_smallArsenals') then {
						M9SD_smallArsenals = _this;
					};
					M9SD_smallArsenalIcons_texture = '\a3\3den\data\displays\display3den\entitymenu\arsenal_ca.paa';
					M9SD_smallArsenalIcons_width = 0.7;
					M9SD_smallArsenalIcons_height = 0.7;
					M9SD_smallArsenalIcons_angle = 0;
					M9SD_smallArsenalIcons_text = 'Virtual Arsenal';
					M9SD_smallArsenalIcons_shadow = 2;
					M9SD_smallArsenalIcons_textSize = 0.04;
					M9SD_smallArsenalIcons_font = 'PuristaSemiBold';
					M9SD_smallArsenalIcons_textAlign = 'center';
					M9SD_smallArsenalIcons_drawSideArrows = false;
					M9SD_smallArsenalIcons_offsetX = 0;
					M9SD_smallArsenalIcons_offsetY = -0.07;
					M9SD_smallArsenalIcons_offset = 2.1;
					if (not(isNil 'M9SD_EH_drawSmallArsenal3D')) then {
						removeMissionEventHandler['Draw3D', M9SD_EH_drawSmallArsenal3D];
					};
					M9SD_EH_drawSmallArsenal3D = addMissionEventHandler['Draw3D', {
						if (count M9SD_smallArsenals == 0) exitWith {}; {
							if (!isNull _x) then {
								if (_x in [cursorTarget, cursorObject]) then {
									if ((_x distance(vehicle player)) <= 28) then {
										private _position = getPos _x;
										_position set[2, (_position# 2) + M9SD_smallArsenalIcons_offset];
										drawIcon3D
											[
												M9SD_smallArsenalIcons_texture, [1, 1, 1, 1],
												_position,
												M9SD_smallArsenalIcons_width,
												M9SD_smallArsenalIcons_height,
												M9SD_smallArsenalIcons_angle,
												'',
												M9SD_smallArsenalIcons_shadow,
												M9SD_smallArsenalIcons_textSize,
												M9SD_smallArsenalIcons_font,
												M9SD_smallArsenalIcons_textAlign,
												M9SD_smallArsenalIcons_drawSideArrows,
												M9SD_smallArsenalIcons_offsetX,
												M9SD_smallArsenalIcons_offsetY
											];
										drawIcon3D
											[
												'', [0, 1, 0, 1],
												_position,
												M9SD_smallArsenalIcons_width,
												M9SD_smallArsenalIcons_height,
												M9SD_smallArsenalIcons_angle,
												M9SD_smallArsenalIcons_text,
												M9SD_smallArsenalIcons_shadow,
												M9SD_smallArsenalIcons_textSize,
												M9SD_smallArsenalIcons_font,
												M9SD_smallArsenalIcons_textAlign,
												M9SD_smallArsenalIcons_drawSideArrows,
												M9SD_smallArsenalIcons_offsetX,
												M9SD_smallArsenalIcons_offsetY
											];
									};
								};
							};
						}
						forEach M9SD_smallArsenals;
					}];
					waitUntil {
						!isNull(findDisplay 12 displayCtrl 51)
					};
					
					
					
					
					
					if (!isNil "M9SD_EH_drawSmallArsenal2D") then {
						(findDisplay 12 displayCtrl 51) ctrlRemoveEventHandler["Draw", M9SD_EH_drawSmallArsenal2D];
					};
					
					
					M9SD_AIO_color1 = [0, 1, 0, 1];
					M9SD_AIO_color2 = [1, 1, 1, 1];
					M9SD_AIO_iconPath = 'a3\ui_f\data\logos\a_64_ca.paa';
					
					M9SD_EH_drawSmallArsenal2D = (findDisplay 12 displayCtrl 51) ctrlAddEventHandler["Draw", 
					{
						_map = _this select 0;
						if (count M9SD_smallArsenals == 0) exitWith {}; 
						{
							if (!isNull _x) then 
							{
								_pos = _x modelToWorldVisual [0, 0, 0];
								_iconText =
								if (((_map ctrlMapWorldToScreen (_x modelToWorldVisual[0, 0, 0])) distance2D getMousePosition) > 0.02) then {
									""
								} else {
									'Virtual Arsenal'
								};
								_map drawIcon
								[
									M9SD_AIO_iconPath,
									M9SD_AIO_color1,
									_pos,
									20,
									20,
									0,
									_iconText,
									1,
									0.05,
									"PuristaBold",
									"left"
								];
								_map drawIcon
								[
									M9SD_AIO_iconPath,
									M9SD_AIO_color2,
									_pos,
									20,
									20,
									0,
									'',
									1,
									0.05,
									"PuristaSemiBold",
									"left"
								];
							};
						} forEach M9SD_smallArsenals;
					}];
				}] remoteExec['spawn', 0, 'M9SD_JIP_smallArsenalIcons'];
				comment " 
				M9SD_smallArsenals = [];
				publicVariable 'M9SD_smallArsenals';
				remoteExec['', 'M9SD_JIP_smallArsenalIcons'];
				"; 
			};
			[M9SD_AIO_SupplyBox] call M9SD_fnc_smallArsenalMarkers;
			[M9SD_AIO_SupplyBox, false] remoteExec['allowDamage']; 
			{
				[_x, false] remoteExec['allowDamage'];
			}forEach attachedObjects M9SD_AIO_SupplyBox;
			{
				[_x, [
					[M9SD_AIO_SupplyBox], true
				]] remoteExec['addCuratorEditableObjects', owner _x];
				[_x, [attachedObjects M9SD_AIO_SupplyBox, true]] remoteExec['addCuratorEditableObjects', owner _x];
			}forEach allCurators;
			["AIO Arsenal Created.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};


	comment "Automatic Missions";

		MAZ_EZM_fnc_newHelicrashMission = {
			MAZ_EZM_fnc_crashSetPosition = {
				params ["_crater"];
				private _crashLocations = switch (worldName) do {
					case "Altis": {[[4426,14856.8,0],[4798.99,12639.2,0],[4877.75,20329.2,0],[5231.58,14871.2,0],[5578.27,17465.8,0],[6163.38,19324.6,0],[6449.08,13172.7,0],[6543.98,11516.5,0],[6718.32,19145.1,0],[7752.5,15274.9,0],[8158.96,20422.5,0],[8397.1,12966.5,0],[8819.66,11798.1,0],[8791.14,14868,0],[8870,18726,0],[9221.45,22106.7,0],[9279.24,16893.5,0],[9595.95,18836.4,0],[10056.8,8474.84,0],[10412.4,15523.6,0],[10447,12258,0],[10673.2,8163.02,0],[10643.5,16961,0],[10664,14861.2,0],[10905,13319,0],[11107.4,20417.6,0],[11265.5,6763.46,0],[11418.7,8021.57,0],[11555.3,9178.9,0],[11652.9,16580.6,0],[11822.7,21807.9,0],[11970.8,17921.5,0],[12292.4,8427.08,0],[12290.6,14908.5,0],[12272.3,16782.4,0],[12707.5,20893,0],[12818,19687,0],[13025.3,21797.8,0],[13788.3,18012.9,0],[14277.1,22192.4,0],[14352.3,21860.1,0],[14630.3,21582.1,0],[15139,18725,0],[16196.8,20505.8,0],[16511,9939,0],[16633,16039,0],[16757.5,18699.3,0],[16823,17206,0],[17268,17010,0],[17489,12283,0],[17680,15862.8,0],[18060.6,17167.3,0],[18200,10589,0],[18449.8,7986.42,0],[18442.5,14388.5,0],[18836.6,11992,0],[18850.1,17212,0],[19274,14905,0],[19455.6,7522.52,0],[19433,15434,0],[19616.9,8790.04,0],[19673.1,18544.6,0],[19896.6,6270.58,0],[20087,11211,0],[20075.9,19464.4,0],[20148.9,17218,0],[20283.4,13243.4,0],[20763,14738,0],[20747.2,18601.4,0],[20799.7,19459.5,0],[20959.8,10528.6,0],[20940.1,16583.9,0],[21099,13434,0],[21290.6,19486.8,0],[21491.1,8666.78,0],[21628.6,21366.1,0],[21746.5,16236.1,0],[21844.3,7684.46,0],[21975.9,18559.1,0],[21993,15601.4,0],[22062.4,21577.7,0],[22049.4,20284.7,0],[22190.1,15193,0],[22280.9,20129.4,0],[22604.7,22341.4,0],[22693.9,22075.5,0],[23106.8,21565.2,0],[23538.1,20580.1,0],[23755.2,22248.2,0],[23718.1,23545.8,0],[23900.7,23003.5,0],[24009.6,21359.9,0],[24143.3,23747.1,0],[24365,22093,0],[24527.1,23024.5,0],[24692.7,20078,0],[24708,21195.1,0],[24721.8,23393,0],[24952,20877,0],[25226,19954,0],[25563.3,19567.9,0],[25551.8,22500.9,0],[25574.9,20376.8,0],[25687,21512,0],[25765,22222,0],[26024.9,19984.3,0],[26259.4,20418.7,0],[26685.8,21184.4,0],[27493.4,21481.1,0],[27631.7,23592.4,0],[27672.3,23252.4,0],[27887.2,22497.3,0]]};
					case "Stratis": {[[1928.22,3534.36,0],[1977.5,2723.25,0],[2068.9,5612.03,0],[2112.91,3835.67,0],[2684.1,1259.8,0],[2678.56,4478.38,0],[2729.22,2977.94,0],[2792.35,1755.79,0],[2726.1,5830.9,0],[2986.6,1872.88,0],[2947.12,6035.31,0],[3356.14,2910.95,0],[3449.37,5377.28,0],[3559.39,4898.91,0],[3782.19,5584.72,0],[4081.06,4566.71,0],[4282.01,3705.89,0],[4231.02,6768.26,0],[4388.32,4428.61,0],[4617.95,5293.65,0],[5025.48,5905.11,0],[5207.32,5032.42,0],[5333.03,5230.53,0],[5585.59,4669.99,0],[6464.77,5312.47,0],[6559.19,5070.86,0]]};
					case "Tanoa": {[[1994.01,3318.69,0],[1977.91,6149.22,0],[2406.13,13314,0],[2635.34,11693.8,0],[2731.29,5743.97,0],[2963.1,9292.33,0],[3372.5,6528.03,0],[3857.02,13448.1,0],[4714.84,3566.41,0],[4802.19,5109.05,0],[5260.83,8748.35,0],[5282.02,11607.9,0],[5605.38,11187.2,0],[5791.82,4161.52,0],[6055.39,10381.1,0],[6247.1,9359.79,0],[6535.95,12748.7,0],[6761.22,7269.57,0],[6948.91,13296,0],[7036.33,4106.12,0],[7567.5,8102.3,0],[7562.46,12551.3,0],[8366.63,9835.1,0],[8726.58,4350.14,0],[8913.88,13772,0],[9096.26,10198.7,0],[9312.51,7382.55,0],[9419.4,4160.3,0],[9858.19,13305.3,0],[9896.49,12066.1,0],[10543.3,6618.74,0],[10684.3,8703.72,0],[10962.4,9778.89,0],[11013.3,3984.29,0],[11271.9,5088.14,0],[11439.7,12379.6,0],[11757,10253.7,0],[11901.4,3219.96,0],[11915.4,12982.1,0],[12167.1,2558.17,0],[12507.7,8126.96,0],[12495.4,8120.56,0],[12621.3,12159.2,0],[12885.6,4726.58,0],[13547.7,12353.7,0]]};
					case "Malden": {[[1173.52,553.341,0],[2574.27,3384.17,0],[2583.97,4498.49,0],[3166.79,6499.55,0],[3384.68,5855.92,0],[3499.89,8463.32,0],[3660.96,5224.26,0],[3726.6,3343.97,0],[3967.86,7360.91,0],[4135.1,6178.93,0],[4183.96,6838.41,0],[4356.08,2664.51,0],[4574.04,3726.52,0],[4478.59,9502.34,0],[4739.8,9874.42,0],[5078.69,7370.66,0],[5215.15,4752.49,0],[5228.77,6113.76,0],[5353.05,4125.18,0],[5374.87,4474.32,0],[5363.94,8711.72,0],[5543.19,11192.8,0],[5657.82,7003.13,0],[5907.66,3348.21,0],[5972.87,9644.25,0],[6004.93,6552.75,0],[6192.93,8605.72,0],[6206.64,10717,0],[6595.55,3999.55,0],[6853.07,5497.6,0],[6971.02,4776.37,0],[6925.04,11188.2,0],[6952.59,9921.21,0],[7005.67,8298.7,0],[7173.55,5916.48,0],[7332.62,6976.11,0],[7553.26,10731,0],[7803.76,4451.71,0],[7788.3,7683.12,0],[8138.48,3109.62,0],[8146.16,10031.8,0],[8280.43,2937.81,0],[8327.22,5660.38,0],[8526.92,3246.26,0]]};
					case "Enoch": {[[3094.28,6975.88,0],[3042.18,5372.35,0],[3208.97,2258.87,0],[3439.1,8982.46,0],[3434.31,11016.1,0],[3642.56,8689.51,0],[4137.82,7578.32,0],[4179.18,10347.8,0],[4541.4,4743.86,0],[5256.73,2160.37,0],[5130.52,10421.7,0],[5598.42,8704.12,0],[5911.77,7912.09,0],[6130.03,8106.55,0],[6426.88,10990.5,0],[6881.97,1203.95,0],[7293.8,2718.96,0],[7628.54,5652.17,0],[7887.01,9806.89,0],[7930.4,10720.5,0],[8132.23,11082.9,0],[8272.61,8822.85,0],[8424.41,10082,0],[8940.26,6589.97,0],[9107.57,1685.31,0],[9033.24,4388.54,0],[9284.32,11058,0],[9731.2,7845.74,0],[9889.61,8624.03,0],[10400.6,6797.57,0],[11122.2,2492.39,0],[11305.6,9583.08,0]]};
					case "VR": {[[7520.18,7513.92,0]]};
				};
				private _position = selectRandom _crashLocations;
				_crater setPosATL _position;
				_crater setVectorUp surfaceNormal position _crater;
				private _randomDir = round (random 360);
				_crater setDir _randomDir;
				_position;
			};

			MAZ_EZM_fnc_createSoldierMission = {
				params ["_location","_groupSize"];
				private _position = [[[_location,50]],[]] call BIS_fnc_randomPos;
				private _unitLoadouts = [
					[["arifle_Katiba_F","","acc_pointer_IR","optic_ACO_grn",["30Rnd_65x39_caseless_green",30],[],""],[],[],["U_O_CombatUniform_ocamo",[["FirstAidKit",5]]],["V_HarnessO_brn",[["HandGrenade",2,1],["SmokeShell",2,1],["SmokeShellGreen",1,1],["30Rnd_65x39_caseless_green",11,30]]],[],"H_HelmetLeaderO_ocamo","",[],["ItemMap","ItemGPS","ItemRadio","ItemCompass","ItemWatch","O_NVGoggles_hex_F"]],
					[["arifle_AK12U_F","","acc_pointer_IR","optic_ACO_grn",["30Rnd_762x39_AK12_Mag_F",30],[],""],[],[],["U_O_CombatUniform_ocamo",[["FirstAidKit",5]]],["V_HarnessO_brn",[["HandGrenade",2,1],["SmokeShell",2,1],["SmokeShellGreen",1,1],["30Rnd_762x39_AK12_Mag_F",5,30]]],[],"H_HelmetLeaderO_ocamo","",[],["ItemMap","ItemGPS","ItemRadio","ItemCompass","ItemWatch","O_NVGoggles_hex_F"]],
					[["arifle_CTAR_hex_F","","acc_pointer_IR","optic_Arco",["30Rnd_580x42_Mag_F",30],[],""],[],[],["U_O_CombatUniform_ocamo",[["FirstAidKit",5]]],["V_HarnessO_brn",[["HandGrenade",2,1],["SmokeShell",2,1],["SmokeShellGreen",1,1],["30Rnd_580x42_Mag_F",5,30]]],[],"H_HelmetLeaderO_ocamo","",[],["ItemMap","ItemGPS","ItemRadio","ItemCompass","ItemWatch","O_NVGoggles_hex_F"]],
					[["srifle_DMR_01_F","","","optic_DMS",["10Rnd_762x54_Mag",10],[],""],[],[],["U_O_CombatUniform_ocamo",[["FirstAidKit",5]]],["V_HarnessO_brn",[["HandGrenade",2,1],["SmokeShell",2,1],["SmokeShellGreen",1,1],["10Rnd_762x54_Mag",5,10]]],[],"H_HelmetLeaderO_ocamo","",[],["ItemMap","ItemGPS","ItemRadio","ItemCompass","ItemWatch","O_NVGoggles_hex_F"]],
					[["LMG_Zafir_F","","","optic_Holosight",["150Rnd_762x54_Box",150],[],""],[],[],["U_O_CombatUniform_ocamo",[["FirstAidKit",5]]],["V_HarnessO_brn",[["HandGrenade",2,1],["SmokeShell",2,1],["SmokeShellGreen",1,1],["150Rnd_762x54_Box",1,150]]],[],"H_HelmetLeaderO_ocamo","",[],["ItemMap","ItemGPS","ItemRadio","ItemCompass","ItemWatch","O_NVGoggles_hex_F"]]
				];

				private _soldiersCreated = [];
				private _soldierGroup = createGroup [east,true];
				for "_i" from 0 to (_groupSize-1) do {
					private _soldier = _soldierGroup createUnit ["O_Soldier_F",[23405.7,17895.8,0],[],0,"CAN_COLLIDE"];
					_soldier setPosATL _position;
					_soldier setVectorDirAndUp [[0,1,0],[0,0,1]];
					_soldier setUnitLoadout (selectRandom _unitLoadouts);
					_soldier setUnitPos "UP";

					[_soldierGroup,0] setWaypointPosition [position leader _soldierGroup,0];
					_soldierGroup setGroupID ["Alpha 1-1"];;

					_soldiersCreated pushBack _soldier;
				};
				_soldierGroup selectLeader (_soldiersCreated select 0);
				_soldierGroup allowFleeing 0;

				comment "Add waypoints";
				_position = [[[_location,35]],[]] call BIS_fnc_randomPos;
				private _moveWaypoint = _soldierGroup addWaypoint [_position,0];
				_moveWaypoint setWaypointType "MOVE";
				_moveWaypoint setWaypointBehaviour "SAFE";
				_moveWaypoint setWaypointSpeed "LIMITED";

				_position = [[[_location,35]],[]] call BIS_fnc_randomPos;
				_moveWaypoint = _soldierGroup addWaypoint [_position,0];
				_moveWaypoint setWaypointType "MOVE";
				_moveWaypoint setWaypointBehaviour "SAFE";
				_moveWaypoint setWaypointSpeed "LIMITED";

				_position = [[[_location,35]],[]] call BIS_fnc_randomPos;
				_moveWaypoint = _soldierGroup addWaypoint [_position,0];
				_moveWaypoint setWaypointType "MOVE";
				_moveWaypoint setWaypointBehaviour "SAFE";
				_moveWaypoint setWaypointSpeed "LIMITED";

				_position = [[[_location,35]],[]] call BIS_fnc_randomPos;
				_moveWaypoint = _soldierGroup addWaypoint [_position,0];
				_moveWaypoint setWaypointType "MOVE";
				_moveWaypoint setWaypointBehaviour "SAFE";
				_moveWaypoint setWaypointSpeed "LIMITED";

				_position = [[[_location,35]],[]] call BIS_fnc_randomPos;
				_moveWaypoint = _soldierGroup addWaypoint [_position,0];
				_moveWaypoint setWaypointType "MOVE";
				_moveWaypoint setWaypointBehaviour "SAFE";
				_moveWaypoint setWaypointSpeed "LIMITED";

				_position = [[[_location,35]],[]] call BIS_fnc_randomPos;
				private _cycleWaypoint = _soldierGroup addWaypoint [_position,0];
				_cycleWaypoint setWaypointType "CYCLE";
				_cycleWaypoint setWaypointBehaviour "SAFE";
				_cycleWaypoint setWaypointSpeed "LIMITED";


				_soldiersCreated;
			};

			MAZ_EZM_fnc_createSmokeForCrash = {
				params ["_position"];
				private _smokeNfire = createVehicle ["test_EmptyObjectForSmoke",_position,[],0,"CAN_COLLIDE"];
				_smokeNfire
			};

			MAZ_EZM_fnc_createReward = {
				params ["_location","_type"];
				private _position = [[[_location,15]],[]] call BIS_fnc_randomPos;
				
				private _crate = nil;
				switch (_type) do {
					case "guns": {
						_crate = createVehicle ["Box_NATO_Ammo_F",[16876.3,12244,0],[],0,"CAN_COLLIDE"];
						_crate setPos _position;
						_crate setVectorDirAndUp [[0,1,0],[-0.0346379,0,0.9994]];
						[_crate,"[[[[""arifle_Katiba_F"",""arifle_ARX_blk_F"",""arifle_CTAR_hex_F"",""arifle_RPK12_F"",""arifle_MSBS65_black_F"",""LMG_Zafir_F"",""srifle_DMR_01_F"",""srifle_DMR_04_F"",""srifle_DMR_05_blk_F"",""launch_O_Vorona_brown_F""],[5,2,5,1,2,2,3,2,2,1]],[[""30Rnd_65x39_caseless_green"",""30Rnd_762x39_AK12_Mag_F"",""75rnd_762x39_AK12_Mag_F"",""10Rnd_50BW_Mag_F"",""30Rnd_580x42_Mag_F"",""30Rnd_65x39_caseless_msbs_mag"",""150Rnd_762x54_Box"",""10Rnd_762x54_Mag"",""10Rnd_127x54_Mag"",""10Rnd_93x64_DMR_05_Mag"",""Vorona_HEAT""],[20,4,2,3,12,8,4,12,5,8,1]],[[""muzzle_snds_B"",""optic_Arco"",""optic_Aco"",""optic_ACO_grn"",""optic_Holosight"",""acc_flashlight"",""acc_pointer_IR"",""optic_DMS"",""optic_AMS"",""optic_KHS_hex"",""muzzle_snds_58_hex_F"",""muzzle_snds_65_TI_blk_F"",""optic_Holosight_blk_F"",""optic_ico_01_black_f"",""optic_Arco_AK_blk_F"",""optic_DMS_weathered_Kir_F"",""Laserdesignator_02"",""FirstAidKit""],[2,4,4,4,4,5,5,4,4,3,3,3,4,3,2,3,10,20]],[[],[]]],false]"] call bis_fnc_initAmmoBox;;
					};
					case "equip": {
						_crate = createVehicle ["Box_NATO_Equip_F",[16877,12245,0],[],0,"CAN_COLLIDE"];
						_crate setPos _position;
						_crate setVectorDirAndUp [[0.774188,0.632387,0.0268383],[-0.0346456,0,0.9994]];
						[_crate,"[[[[],[]],[[],[]],[[""H_Cap_tan_specops_US"",""H_MilCap_mcamo"",""H_Booniehat_mcamo"",""H_Booniehat_tan"",""H_HelmetB_light"",""H_HelmetB_light_black"",""H_HelmetB_light_desert"",""H_HelmetB_light_grass"",""H_HelmetB_light_sand"",""H_HelmetB_light_snakeskin"",""H_HelmetB_black"",""H_HelmetB_camo"",""H_HelmetB_desert"",""H_HelmetB_grass"",""H_HelmetB_sand"",""H_HelmetB_snakeskin"",""H_HelmetSpecB"",""H_HelmetSpecB_blk"",""H_HelmetSpecB_paint2"",""H_HelmetSpecB_paint1"",""H_HelmetSpecB_sand"",""H_HelmetSpecB_snakeskin"",""H_HelmetCrew_B"",""H_PilotHelmetFighter_B"",""H_PilotHelmetHeli_B"",""H_CrewHelmetHeli_B"",""H_HelmetB_TI_tna_F"",""H_HelmetB_tna_F"",""H_HelmetB_Enh_tna_F"",""H_HelmetB_Light_tna_F"",""H_Booniehat_tna_F"",""V_Rangemaster_belt"",""V_BandollierB_blk"",""V_BandollierB_rgr"",""V_Chestrig_blk"",""V_Chestrig_rgr"",""V_TacVest_blk"",""V_PlateCarrier1_blk"",""V_PlateCarrier1_rgr"",""V_PlateCarrier2_rgr"",""V_PlateCarrier2_blk"",""V_PlateCarrierGL_blk"",""V_PlateCarrierGL_rgr"",""V_PlateCarrierGL_mtp"",""V_PlateCarrierSpec_blk"",""V_PlateCarrierSpec_rgr"",""V_PlateCarrierSpec_mtp"",""V_RebreatherB"",""V_TacChestrig_grn_F"",""V_PlateCarrier1_tna_F"",""V_PlateCarrier2_tna_F"",""V_PlateCarrierSpec_tna_F"",""V_PlateCarrierGL_tna_F"",""V_BandollierB_ghex_F"",""V_PlateCarrier1_rgr_noflag_F"",""V_PlateCarrier2_rgr_noflag_F""],[2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2]],[[],[]]],false]"] call bis_fnc_initAmmoBox;;
					};
				};
				_crate;
			};

			MAZ_EZM_fnc_crashSounds = {
				params ["_helicopter","_newPos"];
				[_helicopter,_newPos] spawn {
					params ["_helicopter","_newPos"];
					playSound3D ["A3\sounds_f\vehicles\crashes\helis\heli_crash_ground_ext_4.wss",_helicopter,false,_newPos, 5, 1, 5500];
					sleep 0.5;
					playSound3D ["A3\sounds_f\vehicles\air\noises\heli_damage_rotor_ext_2.wss",_helicopter,false,_newPos, 5, 1, 1000];
					while {!(isNull _helicopter)} do {
						playSound3D ["A3\sounds_f\vehicles\air\noises\heli_alarm_bluefor.wss",_helicopter,false,getPosASL _helicopter, 5, 1, 30];
						sleep 2.05;
					};
				};
			};

			private _craterCrash = createVehicle ["CraterLong",[23413.8,17893.8,0],[],0,"CAN_COLLIDE"];
			_craterCrash setPosWorld [23413.8,17893.8,3.25423];
			_craterCrash setVectorDirAndUp [[0,1,0],[0,0,1]];

			private _crashGhosthawk = createVehicle ["B_Heli_Transport_01_F",[23415.3,17894.2,-1.035],[],0,"CAN_COLLIDE"];
			_crashGhosthawk setPosWorld [23414.6,17894.2,4.17478];
			_crashGhosthawk setVectorDirAndUp [[0,0.95921,-0.282693],[0.46759,0.249885,0.84789]];
			_crashGhosthawk setDamage [0.62284,false];
			_crashGhosthawk lock 2;
			_crashGhosthawk enableSimulation false;
			[_crashGhosthawk,_craterCrash] call BIS_fnc_attachToRelative;
			private _newPos = [_craterCrash] call MAZ_EZM_fnc_crashSetPosition;
			[_crashGhosthawk,_newPos] call MAZ_EZM_fnc_crashSounds;

			private _positionOfCrash = getPos _craterCrash;
			private _smokeObject = [_positionOfCrash] call MAZ_EZM_fnc_createSmokeForCrash;
			private _crashObjects = [_craterCrash,_crashGhosthawk,_smokeObject];
			["TaskAssignedIcon",["A3\UI_F\Data\Map\Markers\Military\warning_CA.paa","Helicopter Crash"]] remoteExec ['BIS_fnc_showNotification',0];
			private _heliCrashMarker = createMarker ["heliCrashMarker_0",_positionOfCrash];
			_heliCrashMarker setMarkerText "Helicopter Crash";
			_heliCrashMarker setMarkerType "mil_objective";
			_heliCrashMarker setMarkerColor "ColorEAST";

			private _randomAmountOfEnemies = round (random [10,15,20]);
			private _groupSize = round (random [1,2,3]);
			_randomAmountOfEnemies = round (_randomAmountOfEnemies/_groupSize);
			private _soldiersArray = [];
			for "_i" from 0 to _randomAmountOfEnemies do {
				private _soldiersCreated = [_positionOfCrash,_groupSize] call MAZ_EZM_fnc_createSoldierMission;
				{
					_soldiersArray pushBack _x;
				}forEach _soldiersCreated;
			};


			[_soldiersArray,_heliCrashMarker,_crashObjects] spawn {
				params ["_soldiersArray","_heliCrashMarker","_crashObjects"];
				private _timer = 900;
				while {_timer > 0 && (({alive _x} count _soldiersArray) != 0)} do {
					_timer = _timer - 1;
					sleep 1;
				};
				if(({alive _x} count _soldiersArray) == 0) then {
					["TaskSucceeded",["","Helicopter Crash Secured"]] remoteExec ['BIS_fnc_showNotification',0];
					private _randomAmount = selectRandom [1,2];
					private _rewardBoxes = [];
					for "_i" from 0 to (_randomAmount-1) do {
						private _rewardType = selectRandom ["guns","equip"];
						private _rewardBox = [getPos (_crashObjects select 0),_rewardType] call MAZ_EZM_fnc_createReward;
						_rewardBoxes pushBack _rewardBox;
					};
					deleteMarker _heliCrashMarker;
					sleep 90;
					waitUntil {{isPlayer _x} count ((_crashObjects select 0) nearEntities ["Man",1600]) == 0};
					{
						deleteVehicle _x;
					} forEach _crashObjects + _soldiersArray + _rewardBoxes;
				};
				if(_timer <= 0 && (({alive _x} count _soldiersArray) != 0)) then {
					["TaskFailed",["","Helicopter Crash Not Secured"]] remoteExec ['BIS_fnc_showNotification',0];
					deleteMarker _heliCrashMarker;
					{
						deleteVehicle _x;
					} forEach _crashObjects + _soldiersArray;
				};
				sleep 600;
				if(MAZ_EZM_autoHelicrash) then {
					[] call MAZ_EZM_fnc_newHelicrashMission;
				};
			};
		};

		MAZ_EZM_fnc_newConvoyMission = {

			private _fnc_getUnitTypes = {
				params [
					"_side"
				];
				private _return = [];
				switch (_side) do {
					case west: {
						switch (worldName) do {
							case "Stratis";
							case "Malden";
							case "Altis": {
								_return = [
									"B_Soldier_A_F",
									"B_Soldier_AR_F",
									"B_Medic_F",
									"B_Soldier_GL_F",
									"B_Soldier_M_F",
									"B_Soldier_F",
									"B_Soldier_LAT_F",
									"B_Soldier_LAT2_F"
								];
							};
							case "Tanoa": {
								_return = [
									"B_T_Soldier_A_F",
									"B_T_Soldier_AR_F",
									"B_T_Medic_F",
									"B_T_Soldier_GL_F",
									"B_T_Soldier_M_F",
									"B_T_Soldier_F",
									"B_T_Soldier_LAT_F",
									"B_T_Soldier_LAT2_F"
								];
							};
							case "Enoch": {
								_return = [
									"B_W_Soldier_A_F",
									"B_W_Soldier_AR_F",
									"B_W_Medic_F",
									"B_W_Soldier_GL_F",
									"B_W_Soldier_M_F",
									"B_W_Soldier_F",
									"B_W_Soldier_LAT_F",
									"B_W_Soldier_LAT2_F"
								];
							};
						};
					};
					case east: {
						switch (worldName) do {
							case "Stratis";
							case "Malden";
							case "Altis": {
								_return = [
									"O_Soldier_A_F",
									"O_Soldier_AR_F",
									"O_Medic_F",
									"O_Soldier_GL_F",
									"O_Soldier_M_F",
									"O_Soldier_F",
									"O_Soldier_LAT_F"
								];
							};
							case "Tanoa": {
								_return = [
									"O_T_Soldier_A_F",
									"O_T_Soldier_AR_F",
									"O_T_Medic_F",
									"O_T_Soldier_GL_F",
									"O_T_Soldier_M_F",
									"O_T_Soldier_F",
									"O_T_Soldier_LAT_F"
								];
							};
							case "Enoch": {
								_return = [
									"O_R_JTAC_F",
									"O_R_Soldier_AR_F",
									"O_R_Medic_F",
									"O_R_Soldier_GL_F",
									"O_R_Soldier_M_F",
									"O_R_Soldier_LAT_F"
								]
							};
						};
					};
					case independent: {
						switch (worldName) do {
							case "Stratis";
							case "Malden";
							case "Altis": {
								_return = [
									"I_Soldier_A_F",
									"I_Soldier_AR_F",
									"I_Medic_F",
									"I_Soldier_GL_F",
									"I_Soldier_M_F",
									"I_Soldier_F",
									"I_Soldier_LAT_F",
									"I_Soldier_LAT2_F"
								];
							};
							case "Tanoa": {
								_return = [
									"I_C_Soldier_Para_7_F",
									"I_C_Soldier_Para_3_F",
									"I_C_Soldier_Para_4_F",
									"I_C_Soldier_Para_6_F",
									"I_C_Soldier_Para_8_F",
									"I_C_Soldier_Para_1_F",
									"I_C_Soldier_Para_5_F"
								];
							};
							case "Enoch": {
								_return = [
									"I_E_Soldier_A_F",
									"I_E_Soldier_AR_F",
									"I_E_Medic_F",
									"I_E_Soldier_GL_F",
									"I_E_Soldier_M_F",
									"I_E_Soldier_F",
									"I_E_Soldier_LAT_F",
									"I_E_Soldier_LAT2_F"
								];
							};
						};
					};
				};
				_return
			};

			MAZ_EZM_fnc_getConvoyInfo = {
				params ["_convoyType"];
				private _returnInfo = [];
				switch (_convoyType) do {
					case 0: {
						comment "Vehicle Types";
						_returnInfo pushBack [
							"O_APC_Wheeled_02_rcws_v2_F",
							"O_Truck_03_ammo_F",
							"O_APC_Wheeled_02_rcws_v2_F"
						];

						comment "Starting location";
						_returnInfo pushBack [10801.153,10591.354];

						comment "Starting locations";
						_returnInfo pushBack [
							[10800.998,10625.687],
							[10801.449,10578.907],
							[10799.197,10537.174]
						];

						comment "Starting direction";
						_returnInfo pushBack [0,0,0];

						comment "Waypoints";
						_returnInfo pushBack [
							[11003.723,15674.568],
							[15139.83,17539.145],
							[15797.84,16290.967],
							[15374.077,16232.825],
							[15477.943,15886.842]
						];

						comment "Ending location";
						_returnInfo pushBack [15483.02,15867.24];

						comment "Marker Locations";
						_returnInfo pushBack [
							[11256.663,13165.631],
							[11330.834,14107.15],
							[11334.651,15318.223],
							[12872.64,15937.588],
							[14940.22,17353.176],
							[15929.533,16978.57]
						];

						comment "Convoy Side";
						_returnInfo pushBack east;
					};
					case 1: {
						comment "Vehicle Types";
						_returnInfo pushBack [
							"I_APC_Wheeled_03_cannon_F",
							"I_Truck_02_ammo_F",
							selectRandom ["I_MRAP_03_hmg_F","I_MRAP_03_gmg_F"]
						];

						comment "Starting location";
						_returnInfo pushBack [21580.479,7823.819];

						comment "Starting locations";
						_returnInfo pushBack [
							[21572.172,7857.319],
							[21584.908,7820.114],
							[21598.602,7780.707]
						];
						
						comment "Starting direction";
						_returnInfo pushBack [344.183,341.303,339.796];

						comment "Waypoints";
						_returnInfo pushBack [
							[19363.201,13328.431],
							[19378.586,15294.969],
							[25343.486,21053.148],
							[24317.18,21512.117],
							[22506.36,20784.482],
							[22019.516,21063.064]
						];

						comment "Ending location";
						_returnInfo pushBack [22024.95,21072.063];

						comment "Marker Locations";
						_returnInfo pushBack [
							[19912.098,11622.105],
							[19340.213,14848.896],
							[20502.85,16353.783],
							[22899.82,19291.697],
							[25281.32,21018.078],
							[24252.854,21534.236],
							[22653.04,20858.324]
						];

						comment "Convoy Side";
						_returnInfo pushBack independent;
					};
					case 2: {
						comment "Vehicle Types";
						_returnInfo pushBack [
							"O_APC_Tracked_02_cannon_F",
							"O_Truck_03_device_F",
							"O_APC_Wheeled_02_rcws_v2_F"
						];

						comment "Starting location";
						_returnInfo pushBack [17506.146,13205.87];

						comment "Starting locations";
						_returnInfo pushBack [
							[17488.219,13224.532],
							[17519.352,13192.043],
							[17548.129,13161.36]
						];
						
						comment "Starting direction";
						_returnInfo pushBack [316.789,316.911,313.466];

						comment "Waypoints";
						_returnInfo pushBack [
							[17284.742,13438.548],
							[15813.545,17391.84],
							[10317.244,19004.494],
							[7437.338,17151.658],
							[6188.207,16181.874],
							[6171.746,16300.393]
						];

						comment "Ending location";
						_returnInfo pushBack [6175.534,16252.588];

						comment "Marker Locations";
						_returnInfo pushBack [
							[16886.854,15487.035],
							[15497.099,17511.123],
							[12414.757,18786.67],
							[8403.481,18231.346]
						];

						comment "Convoy Side";
						_returnInfo pushBack east;
					};
					case 3: {
						comment "Vehicle Types";
						_returnInfo pushBack [
							"I_APC_Wheeled_03_cannon_F",
							"I_Truck_02_ammo_F",
							"I_APC_Wheeled_03_cannon_F",
							selectRandom ["I_MRAP_03_hmg_F","I_MRAP_03_gmg_F"]
						];

						comment "Starting location";
						_returnInfo pushBack [3260.870,12509.276];

						comment "Starting locations";
						_returnInfo pushBack [
							[3254.868,12504.7],
							[3237.267,12498.41],
							[3220.510,12492.701],
							[3203.243,12486.627]
						];
						
						comment "Starting direction";
						_returnInfo pushBack [72.490,72.509,72.572,72.178];

						comment "Waypoints";
						_returnInfo pushBack [
							[9289.280,15856.197],
							[17870.432,18199.361]
						];

						comment "Ending location";
						_returnInfo pushBack [17870.432,18199.361];

						comment "Marker Locations";
						_returnInfo pushBack [
							[6299.041,15151.183],
							[9218.906,15837.3],
							[14542.193,16940.186],
							[17211.178,17898.922]
						];

						comment "Convoy Side";
						_returnInfo pushBack independent;
					};
				};
				_returnInfo;
			};

			MAZ_EZM_fnc_createVehicleUnitConvoy = {
				params ["_group","_unitType"];
				private _soldier = _group createUnit [_unitType,[23405.7,17895.8,0],[],0,"CAN_COLLIDE"];
				_soldier setVectorDirAndUp [[0,1,0],[0,0,1]];
				_soldier setUnitPos "UP";
				_soldier;
			};

			MAZ_EZM_fnc_createConvoyVehicle = {
				params ["_type","_vehPos","_vehDir","_group"];
				private _veh = createVehicle [_type,_vehPos,[],0,"None"];
				_veh setDir _vehDir;
				private _unitType = selectRandom ([side _group] call _fnc_getUnitTypes);
				private _vehDriver = [_group,_unitType] call MAZ_EZM_fnc_createVehicleUnitConvoy;
				_vehDriver moveInDriver _veh;
				_vehDriver limitSpeed 57;
				_vehDriver setSkill ["courage",1];
				_vehDriver setSkill ["commanding",1];
				if(_type isKindOf "Truck_F") then {
					_unitType = selectRandom ([side _group] call _fnc_getUnitTypes);
					private _vehCargo = [_group,_unitType] call MAZ_EZM_fnc_createVehicleUnitConvoy;
					_vehCargo moveInCargo _veh;
				} else {
					_unitType = selectRandom ([side _group] call _fnc_getUnitTypes);
					private _vehGunner = [_group,_unitType] call MAZ_EZM_fnc_createVehicleUnitConvoy;
					_vehGunner moveInGunner _veh;
					if (_veh emptyPositions "commander" > 0) then {
						_unitType = selectRandom ([side _group] call _fnc_getUnitTypes);
						private _vehCommander = [_group,_unitType] call MAZ_EZM_fnc_createVehicleUnitConvoy;
						_vehCommander moveInCommander _veh;
					};
				};
				_veh;
			};

			private _convoyType = selectRandom [3];
			private _convoyInfo = [_convoyType] call MAZ_EZM_fnc_getConvoyInfo;
			
			private _vehTypes = _convoyInfo select 0;
			private _startPos = _convoyInfo select 1;
			private _startLocations = _convoyInfo select 2;
			private _startDirs = _convoyInfo select 3;
			private _wayPoints = _convoyInfo select 4;
			private _endPos = _convoyInfo select 5;
			private _markerLocations = _convoyInfo select 6;
			private _convoySide = _convoyInfo select 7;

			private _convoyGroup = createGroup _convoySide;
			private _vehicles = [];
			for "_i" from 0 to (count _vehTypes-1) do {
				private _vehType = _vehTypes select _i;
				private _vehPos = _startLocations select _i;
				private _vehDir = _startDirs select _i;
				private _return = [_vehType,_vehPos,_vehDir,_convoyGroup] call MAZ_EZM_fnc_createConvoyVehicle;
				_vehicles pushBack _return;
			};

			private _leader = effectiveCommander (_vehicles select 0);
			_convoyGroup selectLeader _leader;
			_leader setSkill ["courage",1];
			_leader setSkill ["commanding",1];

			_convoyGroup setCombatMode "YELLOW";
			_convoyGroup setBehaviour "SAFE";
			_convoyGroup setFormation "COLUMN";
			_convoyGroup setSpeedMode "LIMITED";

			enableEnvironment [false,true];
			[[false,true]] remoteExec ['enableEnvironment',2];

			{
				private _waypoint = _convoyGroup addWaypoint [_x, 0];
				_waypoint setWaypointType "MOVE";
				_waypoint setWaypointCompletionRadius 35;
				_waypoint setWaypointCombatMode "YELLOW";
				_waypoint setWaypointBehaviour "SAFE";
				_waypoint setWaypointFormation "COLUMN";
				_waypoint setWaypointSpeed "LIMITED";
			} forEach _wayPoints;
			private _numWaypoints = count waypoints _convoyGroup;

			private _cargoVehicles = [];
			{
				_x allowCrewInImmobile true;
				[_x,2] remoteExec ['lock',0,_x];
				_x limitSpeed 57;
				(driver _x) limitSpeed 57;
				_x forceSpeed 15.84;
				_x setConvoySeparation 90;
				private _driverVeh = driver _x;
				_driverVeh allowFleeing 0;
				_driverVeh disableAI "AUTOCOMBAT";
				_driverVeh disableAI "TARGET";
				_driverVeh disableAI "MINEDETECTION";
				if(typeOf _x isKindOf "Truck_F") then {
					_cargoVehicles pushBack _x;
				};
			}forEach _vehicles;

			{
				_x limitSpeed 57;
				_x disableAI "MINEDETECTION";
			}forEach (units _convoyGroup);

			private _markers = [];

			private _markerColor = "ColorEAST";
			switch (_convoySide) do {
				case east: {_markerColor = "ColorEAST";};
				case independent: {_markerColor = "ColorGUER";};
			};
			private _convoyStartMarker = createMarker ["convoyStart_MAZ",_startPos];
			_convoyStartMarker setMarkerType "mil_marker";
			_convoyStartMarker setMarkerColor _markerColor;
			_convoyStartMarker setMarkerText "Convoy Start";
			_markers pushBack _convoyStartMarker;

			{
				private _checkpointMarker = createMarker [format ["checkPointMarker_MAZ_%1",_forEachIndex],_x];
				_checkpointMarker setMarkerType "mil_marker";
				_checkpointMarker setMarkerColor _markerColor;
				_checkpointMarker setMarkerText format ["Checkpoint #%1",_forEachIndex+1];
				_markers pushBack _checkpointMarker;
			}forEach _markerLocations;

			["TaskAssignedIcon",["A3\UI_F\Data\Map\Markers\Military\warning_CA.paa","A Convoy is Moving"]] remoteExec ['BIS_fnc_showNotification',0];

			[_vehicles] spawn {
				params ["_vehicles"];
				while {({alive _x} count _vehicles) != 0} do {
					{
						_x limitSpeed 57;
						(driver _x) limitSpeed 57;
						_x forceSpeed 15.84;
						_x setConvoySeparation 90;
					}forEach _vehicles;
					sleep 1;
				};
			};

			[_markers,_vehicles] spawn {
				params ["_markers","_vehicles"];
				for "_i" from 0 to (count _markers - 2) do {
					waitUntil {
						(
							({
								(_x distance (getMarkerPos (_markers select (_i + 1)))) < 30
							} count _vehicles) != 0
						)
					};
					["TaskAssignedIcon",["A3\UI_F\Data\Map\Markers\Military\warning_CA.paa",format ["The Convoy Has Reached Checkpoint %1",_i + 1]]] remoteExec ['BIS_fnc_showNotification',0];
				};
			};

			[_convoyGroup,_numWaypoints,_vehicles,_markers,_cargoVehicles] spawn {
				params ["_convoyGroup","_numWaypoints","_vehicles","_markers","_trucks"];
				private _soldiersArray = units _convoyGroup;
				waitUntil {currentWaypoint _convoyGroup >= _numWaypoints || (({alive _x} count _soldiersArray) == 0) || (({alive _x} count _trucks) == 0)};
				if(({alive _x} count _soldiersArray) == 0) exitWith {
					comment "Success";
					["TaskSucceeded",["","Convoy Stopped!"]] remoteExec ['BIS_fnc_showNotification',0];
					{
						deleteMarker _x;
					}forEach _markers;
					sleep 90;
					waitUntil {{isPlayer _x} count ((_vehicles select 0) nearEntities ["Man",1600]) == 0};
					{
						deleteVehicle _x;
					} forEach _vehicles + _soldiersArray;
					sleep 600;
					if(MAZ_EZM_autoConvoy) then {
						[] call MAZ_EZM_fnc_newConvoyMission;
					};
				};
				if(currentWaypoint _convoyGroup >= _numWaypoints) exitWith {
					comment "Failure";
					["TaskFailed",["","Convoy Reached Their End"]] remoteExec ['BIS_fnc_showNotification',0];
					{
						deleteMarker _x;
					}forEach _markers;
					{
						deleteVehicle _x;
					} forEach _vehicles + _soldiersArray;
					sleep 600;
					if(MAZ_EZM_autoConvoy) then {
						[] call MAZ_EZM_fnc_newConvoyMission;
					};
				};
				if(({alive _x} count _trucks) == 0) exitWith {
					comment "Failure";
					["TaskFailed",["","Convoy Cargo Destroyed!"]] remoteExec ['BIS_fnc_showNotification',0];
					{
						deleteMarker _x;
					}forEach _markers;
					sleep 90;
					waitUntil {{isPlayer _x} count ((_vehicles select 0) nearEntities ["Man",1600]) == 0};
					{
						deleteVehicle _x;
					} forEach _vehicles + _soldiersArray;
					sleep 600;
					if(MAZ_EZM_autoConvoy) then {
						[] call MAZ_EZM_fnc_newConvoyMission;
					};
				};
			};
		};

		MAZ_EZM_fnc_createRandomHelicrashModule = {
			MAZ_EZM_autoHelicrash = true;
			publicVariable 'MAZ_EZM_autoHelicrash';
			[] call MAZ_EZM_fnc_newHelicrashMission;
		};

		MAZ_EZM_fnc_turnOffRandomHelicrashModule = {
			MAZ_EZM_autoHelicrash = false;
			publicVariable 'MAZ_EZM_autoHelicrash';
			["Automated Helicopter Crashes disabled.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		MAZ_EZM_fnc_createRandomConvoyModule = {
			if(worldName != "Altis") exitWith {["Currently only configured for Altis! You can create your own by contacting Expung3d!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			MAZ_EZM_autoConvoy = true;
			publicVariable 'MAZ_EZM_autoConvoy';
			[] call MAZ_EZM_fnc_newConvoyMission;
		};

		MAZ_EZM_fnc_turnOffRandomConvoyModule = {
			if(worldName != "Altis") exitWith {["Currently only configured for Altis.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			MAZ_EZM_autoConvoy = false;
			publicVariable 'MAZ_EZM_autoConvoy';
			["Automated Convoy Missions disabled.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		MAZ_EZM_fnc_createGarrisonTownDialog = {
			private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
			["Garrison Town",[
				[
					"EDIT",
					["Town Name:","Enter a town name, like 'Kavala' or 'Athira'."],
					[""]
				],
				[
					"LIST",
					["Faction:","Choose force to spawn"],
					[
						[["NATO",west,_pos],["CTRG",west,_pos],["Gendarmerie",west,_pos],["CSAT",east,_pos],["Viper",east,_pos],["Spetznaz",east,_pos],["AAF",independent,_pos],["LDF",independent,_pos],["FIA",independent,_pos],["Syndicat",independent,_pos],["Civilian",civilian,_pos]],
						[
							["NATO","","A3\UI_F\data\Map\Markers\Flags\NATO_ca.paa"],
							["CTRG","","A3\UI_F\data\Map\Markers\Flags\CTRG_ca.paa"],
							["Gendarmerie","","\A3\Ui_f\data\Map\Markers\Flags\tanoaGendarmerie_ca.paa"],
							["CSAT","","A3\UI_F\data\Map\Markers\Flags\CSAT_ca.paa"],
							["Viper","","A3\UI_F\data\Map\Markers\Flags\Viper_ca.paa"],
							["Spetznaz","","A3\UI_F_Enoch\data\CfgMarkers\Spetsnaz_ca.paa"],
							["AAF","","A3\UI_F\data\Map\Markers\Flags\AAF_ca.paa"],
							["LDF","","A3\UI_F_Enoch\data\CfgMarkers\LDF_ca.paa"],
							["FIA","","A3\UI_F\data\Map\Markers\Flags\FIA_ca.paa"],
							["Syndicat","","A3\UI_F\data\Map\Markers\Flags\syndicat_ca.paa"],
							["Civilian","","\A3\ui_f\data\map\markers\flags\UN_ca.paa"]
						],
						0,
						11
					]
				],
				[
					"SLIDER",
					["Number of Garrisons:","Amount of squads to garrison in buildings."],
					[0,50,2]
				],
				[
					"SLIDER",
					["Number of Patrols:","Amount of squads to patrols in buildings."],
					[0,50,1]
				],
				[
					"SLIDER:RADIUS",
					["Spawn Radius (m):","Choose area to spawn units in."],
					[0,(getnumber (configfile >> "CfgWorlds" >> worldName >> "mapSize")),100,_pos,[1,1,1,1]]
				],
				[
					"TOOLBOX",
					["Patrol Vehicles:","Allow for vehicles to spawn in patrols."],
					[false,["Disable","Enable"]]
				],
				[
					"TOOLBOX",
					["Enable Animations:","Allow for patrolling garrisoned troops to briefly enter into animations when stopping."],
					[false,["Disable","Enable"]]
				],
				[
					"LIST",
					"NOTE: Animations create background scripts that can till mission end, dramatically",
					[
						[_pos],
						[
							["","",""]
						],
						0,
						0
					]
				],
				[
					"LIST",
					"increase server stress with the more Garrisons spawned!",
					[
						[_pos],
						[
							["","",""]
						],
						0,
						0
					]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_town","_side","_garrisons","_patrols","_radius","_vehicles","_animations"];
				private _locationNames = [];
				{	
					private _lct = _forEachIndex;
					{	
						_locationNames pushBack (toUpper (text _x));
					} forEach nearestLocations [getArray (configFile >> "CfgWorlds" >> worldName >> "centerPosition"), [_x], worldSize];	
				} forEach ["NameVillage", "NameCity", "NameCityCapital"];
				if(!(toUpper _town in _locationNames) && ((toUpper _town) != "NONE" && (toUpper _town) != "")) exitWith {["No such town!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
				
				private _position = _side select 2;
				private _sideNew = _side select 1;
				private _faction = _side select 0;
				[_town,_sideNew,(round _garrisons),(round _patrols),_faction,(round _radius),_vehicles,_position,_animations] spawn MAZ_EZM_fnc_garrisonTown; 
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};

		MAZ_EZM_fnc_garrisonGroup = {
			params [
				["_group",grpNull,[grpNull]]
			];
			if(isNull _group) exitWith {};

			private _leader = leader _group;
			private _previousBehaviour = behaviour _leader;

			private _arrayShuffle = {
				private _array = _this select 0;
				private _count = count _array;
				private _arrayN = [];
				private _arrayT = [];
				private _c = 0;
				private _r = 0;

				while {_c < _count} do
				{
					while {_r in _arrayT} do
					{_r = floor (random _count);
					};
					_arrayT pushBack _r;
					_arrayN set [_c, _array select _r];
					_c = _c + 1;
				};

				_arrayN
			};

			private _fnc_getHousePositions = {
				params ["_index","_houses"];
				private _nearestBuilding = _houses select _index;
				if(isNil "_nearestBuilding") exitWith {};
				private _positionsInBuilding = [_nearestBuilding] call BIS_fnc_buildingPositions;
				_positionsInBuilding = [_positionsInBuilding] call _arrayShuffle;
				_positionsInBuilding
			};
			
			private _fnc_orderToPositions = {
				params ["_units","_positions","_houseIndex"];
				private _newUnits = _units;
				{
					private _unit = objNull;
					if((count _units) -1 >= _forEachIndex) then {
						private _unit = _units select _forEachIndex;
						_unit setPos _x;
						_newUnits = _newUnits - [_unit];
					};
				}forEach _positions;
				if((count _buildingPoses) < (count _units)) then {
					_houseIndex = _houseIndex + 1;
					_buildingPoses = [_houseIndex,_nearestBuildings] call _fnc_getHousePositions;
					[_newUnits,_buildingPoses,_houseIndex] call _fnc_orderToPositions;
				};
			};

			{
				deleteWaypoint [_group,_forEachIndex];
			}forEach (waypoints _group);

			private _nearestBuildings = nearestObjects [getPos _leader, ["building"], 50, true];

			if (_nearestBuildings isEqualTo []) exitWith { false };
			_group setbehaviour "AWARE";
			
			private _houseIndex = 0;
			private _buildingPoses = [_houseIndex,_nearestBuildings] call _fnc_getHousePositions;

			private _units = (units _group) select {!isNull _x && alive _x};

			[_units,_buildingPoses,_houseIndex] call _fnc_orderToPositions;

			true
		};

		MAZ_EZM_fnc_garrisonTown = {
			params [
				"_town",
				"_side",
				"_numOfGarrison",
				"_numOfPatrols",
				"_faction",
				"_radius",
				"_vehicles",
				"_position",
				"_animations"
			];

			private ["_sizeTown"];
			_town = toUpper _town;
			private _locations = [];
			{	
				{	
					_locations pushBack [toUpper (text _x), locationPosition _x,size _x];
				} forEach nearestLocations [getArray (configFile >> "CfgWorlds" >> worldName >> "centerPosition"), [_x], worldSize];	
			} forEach ["NameVillage", "NameCity", "NameCityCapital"];
			if(_town == "") then {
				if(_radius != 0) then {
					_sizeTown = _radius;
				} else {
					_sizeTown = 200;
				};
			} else {
				private _index = _locations findIf {(_x select 0) == _town};
				_townData = _locations select _index;
				_town = _townData select 0;
				_position = _townData select 1;
				(_townData select 2) params ["_x","_y"];
				if(_radius != 0) then {
					_sizeTown = _radius;
				} else {
					_sizeTown = (_x max _y) * 0.75;
				};
			};

			private _fnc_getUnitTypes = {
				private _return = [];
				switch (_faction) do {
					case "NATO": {
						switch (worldName) do {
							case "Stratis";
							case "Malden";
							case "Altis": {
								_return = [
									"B_Soldier_A_F",
									"B_soldier_AAR_F",
									"B_support_AMG_F",
									"B_support_AMort_F",
									"B_soldier_AAA_F",
									"B_soldier_AAT_F",
									"B_soldier_AR_F",
									"B_soldier_exp_F",
									"B_Soldier_GL_F",
									"B_support_Mort_F",
									"B_HeavyGunner_F",
									"B_soldier_M_F",
									"B_soldier_mine_F",
									"B_soldier_AA_F",
									"B_soldier_AT_F",
									"B_officer_F",
									"B_soldier_repair_F",
									"B_Soldier_F",
									"B_soldier_LAT_F",
									"B_soldier_LAT2_F",
									"B_Soldier_lite_F",
									"B_Soldier_SL_F",
									"B_Sharpshooter_F",
									"B_Soldier_TL_F",
									"B_soldier_UAV_F",
									"B_soldier_UAV_06_medical_F",
									"B_soldier_UAV_06_F",
									"B_soldier_UGV_02_Demining_F",
									"B_soldier_UGV_02_Science_F",
									"B_Patrol_Soldier_A_F",
									"B_Patrol_Soldier_AR_F",
									"B_Patrol_Medic_F",
									"B_Patrol_Engineer_F",
									"B_Patrol_Soldier_MG_F",
									"B_Patrol_HeavyGunner_F",
									"B_Patrol_Soldier_M_F",
									"B_Patrol_Soldier_AT_F",
									"B_Patrol_Soldier_TL_F",
									"B_Patrol_Soldier_UAV_F",
									"B_medic_F",
									"B_engineer_F",
									"B_support_GMG_F",
									"B_support_MG_F",
									"B_Story_Protagonist_F",
									"B_Captain_Jay_F",
									"B_Story_Pilot_F",
									"B_Story_SF_Captain_F",
									"B_Captain_Pettka_F"
								];
							};
							case "Tanoa": {
								_return = [
									"B_T_Soldier_AAR_F",
									"B_T_Soldier_A_F",
									"B_T_Support_AMG_F",
									"B_T_Support_AMort_F",
									"B_T_Soldier_AAA_F",
									"B_T_Soldier_AAT_F",
									"B_T_Soldier_AR_F",
									"B_T_Medic_F",
									"B_T_Crew_F",
									"B_T_Engineer_F",
									"B_T_Soldier_Exp_F",
									"B_T_Soldier_GL_F",
									"B_T_Support_GMG_F",
									"B_T_Support_MG_F",
									"B_T_Support_Mort_F",
									"B_T_Helipilot_F",
									"B_T_soldier_M_F",
									"B_T_soldier_mine_F",
									"B_T_Soldier_AA_F",
									"B_T_Soldier_AT_F",
									"B_T_Officer_F",
									"B_T_Soldier_Repair_F",
									"B_T_Soldier_F",
									"B_T_Soldier_LAT_F",
									"B_T_Soldier_LAT2_F",
									"B_T_Soldier_SL_F",
									"B_T_Soldier_TL_F",
									"B_T_Soldier_UAV_F",
									"B_T_soldier_UAV_06_medical_F",
									"B_T_soldier_UAV_06_F"
								];
							};
							case "Enoch": {
								_return = [
									"B_W_Soldier_A_F",
									"B_W_Soldier_AAR_F",
									"B_W_Support_AMG_F",
									"B_W_Support_AMort_F",
									"B_W_Soldier_AAA_F",
									"B_W_Soldier_AAT_F",
									"B_W_Soldier_AR_F",
									"B_W_Soldier_CBRN_F",
									"B_W_Medic_F",
									"B_W_Engineer_F",
									"B_W_Soldier_Exp_F",
									"B_W_Soldier_GL_F",
									"B_W_Support_MG_F",
									"B_W_Support_GMG_F",
									"B_W_Support_Mort_F",
									"B_W_soldier_mine_F",
									"B_W_soldier_M_F",
									"B_W_Soldier_AA_F",
									"B_W_Soldier_AT_F",
									"B_W_Officer_F",
									"B_W_RadioOperator_F",
									"B_W_Soldier_Repair_F",
									"B_W_Soldier_LAT_F",
									"B_W_Soldier_F",
									"B_W_Soldier_LAT2_F",
									"B_W_Soldier_SL_F",
									"B_W_Soldier_TL_F",
									"B_W_Soldier_UAV_F",
									"B_W_soldier_UGV_02_Demining_F",
									"B_W_soldier_UGV_02_Science_F"
								];
							};
						};
					};
					case "CTRG": {
						switch (worldName) do {
							case "Stratis";
							case "Malden";
							case "Altis": {
								_return = [
									"B_CTRG_soldier_engineer_exp_F",
									"B_CTRG_soldier_M_medic_F",
									"B_CTRG_soldier_GL_LAT_F",
									"B_CTRG_Sharphooter_F",
									"B_CTRG_soldier_AR_A_F",
									"B_CTRG_Soldier_arid_F",
									"B_CTRG_Soldier_2_arid_F",
									"B_CTRG_Soldier_3_arid_F"
								];
							};
							case "Tanoa";
							case "Enoch": {
								_return = [
									"B_CTRG_Soldier_AR_tna_F",
									"B_CTRG_Soldier_JTAC_tna_F",
									"B_CTRG_Soldier_M_tna_F",
									"B_CTRG_Soldier_LAT_tna_F",
									"B_CTRG_Soldier_TL_tna_F",
									"B_CTRG_Miller_F",
									"B_CTRG_Soldier_Exp_tna_F",
									"B_CTRG_Soldier_Medic_tna_F",
									"B_CTRG_Soldier_LAT2_tna_F",
									"B_CTRG_Soldier_tna_F"
								];
							};
						};
					};
					case "Gendarmerie": {
						switch (worldName) do {
							case "Stratis";
							case "Malden";
							case "Altis";
							case "Tanoa";
							case "Enoch": {
								_return = [
									"B_GEN_Soldier_F",
									"B_GEN_Commander_F",
									"B_Captain_Dwarden_F"
								];
							};
						};
					};
					case "CSAT": {
						switch (worldName) do {
							case "Stratis";
							case "Malden";
							case "Altis": {
								_return = [
									"O_Soldier_A_F",
									"O_Soldier_AAR_F",
									"O_support_AMG_F",
									"O_support_AMort_F",
									"O_Soldier_AHAT_F",
									"O_Soldier_AAA_F",
									"O_Soldier_AAT_F",
									"O_Soldier_AR_F",
									"O_medic_F",
									"O_engineer_F",
									"O_soldier_exp_F",
									"O_Soldier_GL_F",
									"O_support_GMG_F",
									"O_support_Mort_F",
									"O_HeavyGunner_F",
									"O_support_MG_F",
									"O_soldier_M_F",
									"O_soldier_mine_F",
									"O_Soldier_AA_F",
									"O_Soldier_AT_F",
									"O_Soldier_F",
									"O_Soldier_LAT_F",
									"O_Soldier_HAT_F",
									"O_Soldier_TL_F",
									"O_officer_F",
									"O_soldier_repair_F",
									"O_Soldier_lite_F",
									"O_Sharpshooter_F",
									"O_Soldier_SL_F",
									"O_soldier_UAV_F",
									"O_soldier_UAV_06_F",
									"O_soldier_UAV_06_medical_F",
									"O_soldierU_A_F",
									"O_soldierU_AAR_F",
									"O_soldierU_AAA_F",
									"O_soldierU_AAT_F",
									"O_soldierU_AR_F",
									"O_soldierU_medic_F",
									"O_soldierU_exp_F",
									"O_SoldierU_GL_F",
									"O_Urban_HeavyGunner_F",
									"O_soldierU_M_F",
									"O_soldierU_AT_F",
									"O_soldierU_LAT_F",
									"O_SoldierU_SL_F",
									"O_Urban_Sharpshooter_F",
									"O_A_soldier_TL_F",
									"O_engineer_U_F",
									"O_soldierU_AA_F",
									"O_soldierU_repair_F",
									"O_soldierU_F",
									"O_soldierU_TL_F",
									"O_A_soldier_F"
								];
							};
							case "Tanoa";
							case "Enoch": {
								_return = [
									"O_T_Soldier_A_F",
									"O_T_Soldier_AAR_F",
									"O_T_Support_AMG_F",
									"O_T_Support_AMort_F",
									"O_T_Soldier_AHAT_F",
									"O_T_Soldier_AAA_F",
									"O_T_Soldier_AAT_F",
									"O_T_Soldier_AR_F",
									"O_T_Medic_F",
									"O_T_Engineer_F",
									"O_T_Soldier_Exp_F",
									"O_T_Soldier_GL_F",
									"O_T_Support_GMG_F",
									"O_T_Support_MG_F",
									"O_T_Support_Mort_F",
									"O_T_Soldier_M_F",
									"O_T_soldier_mine_F",
									"O_T_Soldier_AA_F",
									"O_T_Soldier_AT_F",
									"O_T_Officer_F",
									"O_T_Soldier_Repair_F",
									"O_T_Soldier_F",
									"O_T_Soldier_LAT_F",
									"O_T_Soldier_HAT_F",
									"O_T_Soldier_SL_F",
									"O_T_Soldier_TL_F",
									"O_T_Soldier_UAV_F",
									"O_T_soldier_UAV_06_F",
									"O_T_soldier_UAV_06_medical_F"
								]
							};
						};
					};
					case "Viper": {
						switch (worldName) do {
							case "Stratis";
							case "Malden";
							case "Altis": {
								_return = [
									"O_V_Soldier_Exp_hex_F",
									"O_V_Soldier_JTAC_hex_F",
									"O_V_Soldier_M_hex_F",
									"O_V_Soldier_hex_F",
									"O_V_Soldier_Medic_hex_F",
									"O_V_Soldier_LAT_hex_F",
									"O_V_Soldier_TL_hex_F"
								];
							};
							case "Tanoa";
							case "Enoch": {
								_return = [
									"O_V_Soldier_Exp_ghex_F",
									"O_V_Soldier_JTAC_ghex_F",
									"O_V_Soldier_M_ghex_F",
									"O_V_Soldier_ghex_F",
									"O_V_Soldier_Medic_ghex_F",
									"O_V_Soldier_LAT_ghex_F",
									"O_V_Soldier_TL_ghex_F"
								]
							};
						};
					};
					case "Spetznaz": {
						switch (worldName) do {
							case "Stratis";
							case "Malden";
							case "Altis";
							case "Tanoa";
							case "Enoch": {
								_return = [
									"O_R_medic_F",
									"O_R_Soldier_AR_F",
									"O_R_soldier_exp_F",
									"O_R_Soldier_GL_F",
									"O_R_JTAC_F",
									"O_R_Soldier_LAT_F",
									"O_R_soldier_M_F",
									"O_R_Soldier_TL_F",
									"O_R_Patrol_Soldier_A_F",
									"O_R_Patrol_Soldier_AR2_F",
									"O_R_Patrol_Soldier_AR_F",
									"O_R_Patrol_Soldier_Medic",
									"O_R_Patrol_Soldier_Engineer_F",
									"O_R_Patrol_Soldier_GL_F",
									"O_R_Patrol_Soldier_M2_F",
									"O_R_Patrol_Soldier_LAT_F",
									"O_R_Patrol_Soldier_M_F",
									"O_R_Patrol_Soldier_TL_F"
								];
							};
						};
					};
					case "AAF": {
						switch (worldName) do {
							case "Stratis";
							case "Malden";
							case "Altis";
							case "Tanoa";
							case "Enoch": {
								_return = [
									"I_Soldier_A_F",
									"I_Soldier_AAR_F",
									"I_support_AMG_F",
									"I_support_AMort_F",
									"I_medic_F",
									"I_Soldier_AAA_F",
									"I_Soldier_AAT_F",
									"I_Soldier_AR_F",
									"I_engineer_F",
									"I_Soldier_exp_F",
									"I_Soldier_GL_F",
									"I_support_GMG_F",
									"I_support_MG_F",
									"I_support_Mort_F",
									"I_Soldier_M_F",
									"I_soldier_mine_F",
									"I_Soldier_AA_F",
									"I_Soldier_AT_F",
									"I_officer_F",
									"I_Soldier_repair_F",
									"I_soldier_F",
									"I_Soldier_LAT_F",
									"I_Soldier_LAT2_F",
									"I_Soldier_lite_F",
									"I_Soldier_SL_F",
									"I_Soldier_TL_F",
									"I_soldier_UAV_F",
									"I_soldier_UAV_06_F",
									"I_soldier_UAV_06_medical_F",
									"I_Story_Officer_01_F"
								];
							};
						};
					};
					case "LDF": {
						switch (worldName) do {
							case "Stratis";
							case "Malden";
							case "Altis";
							case "Tanoa";
							case "Enoch": {
								_return = [
									"I_E_Soldier_A_F",
									"I_E_Soldier_AAR_F",
									"I_E_Support_AMG_F",
									"I_E_Support_MG_F",
									"I_E_Support_AMort_F",
									"I_E_Soldier_AAA_F",
									"I_E_Soldier_AR_F",
									"I_E_Soldier_CBRN_F",
									"I_E_Engineer_F",
									"I_E_Support_GMG_F",
									"I_E_Soldier_GL_F",
									"I_E_Soldier_AAT_F",
									"I_E_Medic_F",
									"I_E_Support_Mort_F",
									"I_E_soldier_Mine_F",
									"I_E_Soldier_AA_F",
									"I_E_Soldier_AT_F",
									"I_E_Officer_F",
									"I_E_Soldier_Pathfinder_F",
									"I_E_Soldier_Repair_F",
									"I_E_Soldier_LAT_F",
									"I_E_Soldier_LAT2_F",
									"I_E_Soldier_Exp_F",
									"I_E_soldier_M_F",
									"I_E_Soldier_MP_F",
									"I_E_RadioOperator_F",
									"I_E_Soldier_F",
									"I_E_Soldier_lite_F",
									"I_E_Soldier_SL_F",
									"I_E_Soldier_TL_F",
									"I_E_soldier_UAV_06_F",
									"I_E_soldier_UAV_06_medical_F",
									"I_E_soldier_UGV_02_Demining_F",
									"I_E_soldier_UGV_02_Science_F",
									"I_E_Soldier_UAV_F"
								];
							};
						};
					};
					case "FIA": {
						switch (worldName) do {
							case "Stratis";
							case "Malden";
							case "Altis";
							case "Tanoa";
							case "Enoch": {
								_return = [
									"I_G_Soldier_A_F",
									"I_G_Soldier_AR_F",
									"I_G_medic_F",
									"I_G_Soldier_exp_F",
									"I_G_Soldier_M_F",
									"I_G_engineer_F",
									"I_G_Soldier_GL_F",
									"I_G_officer_F",
									"I_G_Soldier_F",
									"I_G_Soldier_LAT_F",
									"I_G_Soldier_lite_F",
									"I_G_Soldier_LAT2_F",
									"I_G_Sharpshooter_F",
									"I_G_Soldier_SL_F",
									"I_G_Soldier_TL_F"
								];
							};
						};
					};
					case "Syndicat": {
						switch (worldName) do {
							case "Stratis";
							case "Malden";
							case "Altis";
							case "Tanoa";
							case "Enoch": {
								_return = [
									"I_C_Soldier_Bandit_7_F",
									"I_C_Soldier_Bandit_3_F",
									"I_C_Soldier_Bandit_2_F",
									"I_C_Pilot_F",
									"I_C_Soldier_Bandit_5_F",
									"I_C_Soldier_Bandit_6_F",
									"I_C_Soldier_Bandit_1_F",
									"I_C_Soldier_Bandit_8_F",
									"I_C_Soldier_Bandit_4_F",
									"I_C_Soldier_Para_7_F",
									"I_C_Soldier_Para_2_F",
									"I_C_Helipilot_F",
									"I_C_Soldier_Para_3_F",
									"I_C_Soldier_Para_4_F",
									"I_C_Soldier_Para_6_F",
									"I_C_Soldier_Para_8_F",
									"I_C_Soldier_Para_1_F",
									"I_C_Soldier_Para_5_F",
									"I_L_Criminal_SG_F",
									"I_L_Criminal_SMG_F",
									"I_L_Hunter_F",
									"I_L_Looter_Rifle_F",
									"I_L_Looter_Pistol_F",
									"I_L_Looter_SG_F",
									"I_L_Looter_SMG_F"
								];
							};
						};
					};
					case "Civilian": {
						switch (worldName) do {
							case "Stratis";
							case "Malden";
							case "Altis": {
								_return = [
									"C_man_p_beggar_F",
									"C_man_1",
									"C_Man_casual_1_F",
									"C_Man_casual_2_F",
									"C_Man_casual_3_F",
									"C_Man_casual_4_v2_F",
									"C_Man_casual_5_v2_F",
									"C_Man_casual_6_v2_F",
									"C_Man_casual_7_F",
									"C_Man_casual_8_F",
									"C_Man_casual_9_F",
									"C_Man_formal_1_F",
									"C_Man_formal_2_F",
									"C_Man_formal_3_F",
									"C_Man_formal_4_F",
									"C_Man_smart_casual_1_F",
									"C_man_sport_1_F",
									"C_Man_smart_casual_2_F",
									"C_man_sport_2_F",
									"C_man_sport_3_F",
									"C_Man_casual_4_F",
									"C_Man_casual_5_F",
									"C_Man_casual_6_F",
									"C_man_polo_1_F",
									"C_man_polo_2_F",
									"C_man_polo_3_F",
									"C_man_polo_4_F",
									"C_man_polo_5_F",
									"C_man_polo_6_F",
									"C_man_shorts_1_F",
									"C_man_1_1_F",
									"C_man_1_2_F",
									"C_man_1_3_F",
									"C_Man_ConstructionWorker_01_Black_F",
									"C_Man_ConstructionWorker_01_Blue_F",
									"C_Man_ConstructionWorker_01_Red_F",
									"C_Man_ConstructionWorker_01_Vrana_F",
									"C_Driver_3_F",
									"C_Man_Fisherman_01_F",
									"C_man_p_fugitive_F",
									"C_man_p_shorts_1_F",
									"C_man_p_fugitive_F",
									"C_man_p_shorts_1_F",
									"C_man_hunter_1_F",
									"C_journalist_F",
									"C_Journalist_01_War_F",
									"C_Man_Messenger_01_F",
									"C_Man_Paramedic_01_F",
									"C_man_shorts_2_F",
									"C_man_shorts_3_F",
									"C_man_shorts_4_F",
									"C_Man_UtilityWorker_01_F",
									"C_man_w_worker_F"
								];
							};
							case "Tanoa": {
								_return = [
									"C_Man_casual_1_F_tanoan",
									"C_Man_casual_2_F_tanoan",
									"C_Man_casual_3_F_tanoan",
									"C_Man_casual_4_v2_F_tanoan",
									"C_Man_casual_5_v2_F_tanoan",
									"C_Man_casual_6_v2_F_tanoan",
									"C_Man_casual_7_F_tanoan",
									"C_Man_casual_8_F_tanoan",
									"C_Man_casual_9_F_tanoan",
									"C_Man_formal_1_F_tanoan",
									"C_Man_formal_3_F_tanoan",
									"C_Man_formal_2_F_tanoan",
									"C_Man_formal_4_F_tanoan",
									"C_Man_smart_casual_1_F_tanoan",
									"C_Man_smart_casual_2_F_tanoan",
									"C_man_sport_1_F_tanoan",
									"C_man_sport_2_F_tanoan",
									"C_man_sport_3_F_tanoan",
									"C_Man_casual_4_F_tanoan",
									"C_Man_casual_5_F_tanoan",
									"C_Man_casual_6_F_tanoan",
									"C_Man_ConstructionWorker_01_Black_F",
									"C_Man_ConstructionWorker_01_Blue_F",
									"C_Man_ConstructionWorker_01_Red_F",
									"C_Man_ConstructionWorker_01_Vrana_F",
									"C_Man_Fisherman_01_F",
									"C_man_hunter_1_F",
									"C_man_w_worker_F",
									"C_Man_Paramedic_01_F"
								];
							};
							case "Enoch": {
								_return = [
									"C_Man_1_enoch_F",
									"C_Man_2_enoch_F",
									"C_Man_3_enoch_F",
									"C_Man_4_enoch_F",
									"C_Man_5_enoch_F",
									"C_Man_6_enoch_F",
									"C_Farmer_01_enoch_F",
									"C_Man_Paramedic_01_F",
									"C_Man_UtilityWorker_01_F",
									"C_Man_ConstructionWorker_01_Black_F",
									"C_Man_ConstructionWorker_01_Blue_F",
									"C_Man_ConstructionWorker_01_Red_F",
									"C_Man_ConstructionWorker_01_Vrana_F",
									"C_Man_Fisherman_01_F",
									"C_man_hunter_1_F",
									"C_man_w_worker_F"
								];
							};
						};
					};
				};
				_return
			};
			private _unitTypes = [_side] call _fnc_getUnitTypes;
			private _vehicleTypes = [];
			if(_vehicles) then {
				if((_side == west) and (_faction != "Gendarmerie")) exitWith {
					switch (worldName) do {
						case "Stratis";
						case "Malden";
						case "Altis": {
							_vehicleTypes = [
								"B_APC_Tracked_01_CRV_F",
								"B_APC_Tracked_01_rcws_F",
								"B_AFV_Wheeled_01_cannon_F",
								"B_AFV_Wheeled_01_up_cannon_F",
								"B_APC_Wheeled_01_cannon_F",
								"B_APC_Tracked_01_AA_F",
								"B_MRAP_01_F",
								"B_MRAP_01_gmg_F",
								"B_MRAP_01_hmg_F",
								"B_LSV_01_AT_F",
								"B_LSV_01_armed_F",
								"B_LSV_01_unarmed_F",
								"B_Quadbike_01_F",
								"B_UAV_06_F",
								"B_UAV_06_medical_F",
								"B_UAV_01_F",
								"B_UGV_02_Demining_F",
								"B_UGV_02_Science_F",
								"B_UGV_01_F",
								"B_UGV_01_rcws_F",
								"B_MBT_01_cannon_F",
								"B_MBT_01_TUSK_F",
								"B_Heli_Light_01_dynamicLoadout_F",
								"B_Heli_Light_01_armed_F",
								"B_Heli_Attack_01_F"
							];
						};
						case "Tanoa";
						case "Enoch": {
							_vehicleTypes = [
								"B_T_APC_Tracked_01_CRV_F",
								"B_T_APC_Tracked_01_rcws_F",
								"B_T_AFV_Wheeled_01_cannon_F",
								"B_T_AFV_Wheeled_01_up_cannon_F",
								"B_T_APC_Wheeled_01_cannon_F",
								"B_T_APC_Tracked_01_AA_F",
								"B_T_MRAP_01_F",
								"B_T_MRAP_01_gmg_F",
								"B_T_MRAP_01_hmg_F",
								"B_T_LSV_01_AT_F",
								"B_T_LSV_01_armed_F",
								"B_T_LSV_01_unarmed_F",
								"B_T_Quadbike_01_F",
								"B_UAV_06_F",
								"B_UAV_06_medical_F",
								"B_UAV_01_F",
								"B_UGV_02_Demining_F",
								"B_UGV_02_Science_F",
								"B_T_UGV_01_F",
								"B_T_UGV_01_rcws_F",
								"B_T_MBT_01_cannon_F",
								"B_T_MBT_01_TUSK_F"
							];
						};
					};
				};
				if(_side == east) exitWith {
					switch (worldName) do {
						case "Stratis";
						case "Malden";
						case "Altis": {
							_vehicleTypes = [
								"O_APC_Wheeled_02_rcws_v2_F",
								"O_APC_Tracked_02_cannon_F",
								"O_APC_Tracked_02_AA_F",
								"O_MRAP_02_F",
								"O_MRAP_02_gmg_F",
								"O_MRAP_02_hmg_F",
								"O_LSV_02_armed_F",
								"O_LSV_02_unarmed_F",
								"O_Quadbike_01_F",
								"O_UAV_06_F",
								"O_UAV_06_medical_F",
								"O_UGV_02_Science_F",
								"O_UAV_01_F",
								"O_UGV_01_F",
								"O_UGV_01_rcws_F",
								"O_UGV_02_Demining_F",
								"O_MBT_02_cannon_F",
								"O_MBT_04_cannon_F",
								"O_MBT_04_command_F",
								"O_Heli_Light_02_dynamicLoadout_F",
								"O_Heli_Light_02_F",
								"O_Heli_Attack_02_F"
							];
						};
						case "Tanoa";
						case "Enoch": {
							_vehicleTypes = [
								"O_T_APC_Wheeled_02_rcws_v2_ghex_F",
								"O_T_APC_Tracked_02_cannon_ghex_F",
								"O_T_APC_Tracked_02_AA_ghex_F",
								"O_T_MRAP_02_ghex_F",
								"O_T_MRAP_02_gmg_ghex_F",
								"O_T_MRAP_02_hmg_ghex_F",
								"O_T_LSV_02_armed_ghex_F",
								"O_T_LSV_02_unarmed_ghex_F",
								"O_T_Quadbike_01_ghex_F",
								"O_UAV_06_F",
								"O_UAV_06_medical_F",
								"O_UGV_02_Science_F",
								"O_UAV_01_F",
								"O_T_UGV_01_ghex_F",
								"O_T_UGV_01_rcws_ghex_F",
								"O_UGV_02_Demining_F",
								"O_T_MBT_02_cannon_ghex_F",
								"O_T_MBT_04_cannon_F",
								"O_T_MBT_04_command_F",
								"O_Heli_Light_02_unarmed_F",
								"O_Heli_Light_02_v2_F",
								"O_Heli_Attack_02_black_F"
							];
						};
					};
				};
				if(_faction == "Gendarmerie") exitWith {
					_vehicleTypes = [
						"B_GEN_Offroad_01_gen_F",
						"B_GEN_Offroad_01_comms_F",
						"B_GEN_Offroad_01_covered_F",
						"B_UAV_06_F","B_UAV_06_medical_F",
						"B_UAV_01_F",
						"C_Heli_Light_01_civil_F"
					];
				};
				if(_faction == "AAF") exitWith {
					_vehicleTypes = [
						"I_APC_Wheeled_03_cannon_F",
						"I_APC_tracked_03_cannon_F",
						"I_LT_01_AA_F",
						"I_LT_01_AT_F",
						"I_LT_01_scout_F",
						"I_LT_01_cannon_F",
						"I_MBT_03_cannon_F",
						"I_Quadbike_01_F",
						"I_MRAP_03_F",
						"I_MRAP_03_gmg_F",
						"I_MRAP_03_hmg_F",
						"I_UAV_06_F",
						"I_UAV_06_medical_F",
						"I_UAV_01_F",
						"I_UGV_02_Demining_F",
						"I_UGV_02_Science_F",
						"I_UGV_01_F",
						"I_UGV_01_rcws_F",
						"I_Heli_light_03_F",
						"I_Heli_light_03_dynamicLoadout_F"
					];
				};
				if(_faction == "LDF") exitWith {
					_vehicleTypes = [
						"I_E_Offroad_01_comms_F",
						"I_E_Offroad_01_covered_F",
						"I_E_Quadbike_01_F",
						"I_E_APC_tracked_03_cannon_F",
						"I_E_Offroad_01_F",
						"I_E_UGV_02_Demining_F",
						"I_E_UAV_01_F",
						"I_E_UAV_06_medical_F",
						"I_E_UAV_06_F",
						"I_E_UGV_02_Science_F",
						"I_E_UGV_01_F",
						"I_E_UGV_01_rcws_F",
						"I_E_Heli_light_03_dynamicLoadout_F",
						"I_E_Heli_light_03_unarmed_F"
					];
				};
				if(_faction == "FIA") exitWith {
					_vehicleTypes = [
						"I_G_Offroad_01_F",
						"I_G_Offroad_01_AT_F",
						"I_G_Offroad_01_armed_F",
						"I_G_Offroad_01_repair_F",
						"I_G_Quadbike_01_F",
						"I_C_Heli_Light_01_civil_F"
					];
				};
				if (_faction == "Syndicat") exitWith {
					_vehicleTypes = [
						"I_C_Offroad_02_unarmed_F",
						"I_C_Offroad_02_AT_F",
						"I_C_Offroad_02_LMG_F",
						"I_E_UAV_06_F",
						"I_E_UAV_06_medical_F",
						"I_E_UAV_01_F",
						"I_C_Heli_Light_01_civil_F"
					];
				};
				if (_faction == "Civilian") exitWith {
					_vehicleTypes = [
						"C_Van_01_fuel_F",
						"C_Hatchback_01_F",
						"C_Hatchback_01_sport_F",
						"C_Offroad_02_unarmed_F",
						"C_Offroad_01_F",
						"C_Offroad_01_comms_F",
						"C_Offroad_01_covered_F",
						"C_Offroad_01_repair_F",
						"C_Quadbike_01_F",
						"C_SUV_01_F",
						"C_Tractor_01_F",
						"C_Van_01_transport_F",
						"C_Van_01_box_F",
						"C_Van_02_medevac_F",
						"C_Van_02_vehicle_F",
						"C_Van_02_service_F",
						"C_Van_02_transport_F",
						"C_Truck_02_fuel_F",
						"C_Truck_02_box_F",
						"C_Truck_02_transport_F",
						"C_Truck_02_covered_F",
						"C_UAV_06_F",
						"C_UAV_06_medical_F",
						"C_Heli_Light_01_civil_F"
					];
				};
			};
			private _buildings = nearestObjects [_position,[],_sizeTown,true];
			private _units = [];
			
			for "_a" from 1 to _numOfGarrison do {
				private _choosenBuilding = getPos (selectRandom _buildings);
				
				private _randomNumOfUnits = random [1,3,8];
				private _grp = createGroup [_side,true];
				for "_b" from 1 to _randomNumOfUnits do {
					private _unitType = selectRandom _unitTypes;
					private _unit = _grp createUnit [_unitType,[_choosenBuilding select 0,_choosenBuilding select 1,0],[],0,"NONE"];
					_unit setSkill (random [0.1,0.5,1.0]);
					_unit setUnitPos "UP";
					_unit setBehaviour "SAFE";
					_units pushBack _unit;
				};
		
				private _stances = ["STAND","STAND_IA","SIT_LOW","KNEEL","LEAN","WATCH","WATCH1","WATCH2"];
				private _equipments = ["MEDIUM","FULL","ASIS"];
				{
					[_x] join (createGroup [_side,true]);
					private _house = nearestBuilding _x;
					private _numOfBuildingPos = 0;
					while {format ["%1", _house buildingPos _numOfBuildingPos] != "[0,0,0]"} do {
						_numOfBuildingPos = _numOfBuildingPos + 1;
					};
					
					if((([0,1] call BIS_fnc_randomInt) == 1) and (_numOfBuildingPos > 1)) then {
						private _currentBuildingPos = 0;
						private _lastBuildingPos = 0;
						private _startingPos = floor(random _numOfBuildingPos);
						private _spawnPos = (_house buildingPos _startingPos);
						_x setPos _spawnPos;
						
						for "_j" from 1 to ([1,_numOfBuildingPos] call BIS_fnc_randomInt) do {
							while {_lastBuildingPos == _currentBuildingPos} do	{
								_currentBuildingPos = floor(random _numOfBuildingPos);
							};
							private _tempWaypoint = (_house buildingPos _currentBuildingPos);
							private _waypoint = (group _x) addWaypoint [_tempWaypoint,0];
							_waypoint setWaypointType "MOVE";
							_waypoint setWaypointFormation "FILE";
							_waypoint setWaypointBehaviour "SAFE";
							_waypoint setWaypointSpeed "LIMITED";
							if (_animations) then {
								_waypoint setWaypointStatements ["true","[this,5,15] call MAZ_EZM_fnc_animateGarrison"];
							};
							
							_lastBuildingPos = _currentBuildingPos;
						};
						private _waypoint = (group _x) addWaypoint [_spawnPos,0];
						_waypoint setWaypointType "CYCLE";
						_waypoint setWaypointFormation "FILE";
						_waypoint setWaypointBehaviour "SAFE";
						_waypoint setWaypointSpeed "LIMITED";
					} else {
						_x setDir ([1,359] call BIS_fnc_randomInt);
						if (_animations) then {
							private _usedStance = [0,(count _stances)] call BIS_fnc_randomInt;
							
							[_x, (_stances select _usedStance), (selectRandom _equipments)] call BIS_fnc_ambientAnimCombat;
							_stances deleteAt _usedStance;
						} else {
							_x setUnitPos selectRandom["DOWN","MIDDLE","UP"];
						};
					};
				}forEach (units _grp);
			};
				
			for "_c" from 1 to _numOfPatrols do {
				private _randPos = [[[_position,_sizeTown]]] call BIS_fnc_randomPos;
				private _nearRoads = nearestObjects [_position,[],_sizeTown,true];
				private _nearRoad = getPos (selectRandom _nearRoads);
				private _randomNumOfUnits = random [1,3,6];
				private _waypointFormations = ["NO CHANGE","COLUMN","STAG COLUMN","WEDGE","ECH LEFT","ECH RIGHT","VEE","LINE","FILE","DIAMOND"];
				private _waypointSpeeds = [];
				if(_faction == "Civilian") then {
					_waypointSpeeds = ["LIMITED"];
				} else {
					_waypointSpeeds = ["UNCHANGED","LIMITED","NORMAL","FULL"];
				};

				private _grp = createGroup [_side,true];
				for "_d" from 1 to _randomNumOfUnits do {
					private _unitType = selectRandom _unitTypes;
					private _unit = _grp createUnit [_unitType, [_nearRoad select 0,_nearRoad select 1,0],[],0,"NONE"];
					_unit setSkill (random [0.1,0.5,1.0]);
					_unit setUnitPos "UP";
					_units pushBack _unit;
				};
				
				if(_vehicles) then {
					private _vicPosition = [(getPos (selectRandom _nearRoads)), 1, _sizeTown, 10, 0, 0.1] call BIS_fnc_findSafePos;
					private _unitType = selectRandom _vehicleTypes;
					private _unit = (([[_vicPosition select 0,_vicPosition select 1,0], 0, _unitType, _side] call BIS_fnc_spawnVehicle) select 0);
					[_unit, true] remoteExec ["enableDynamicSimulation", 0, true];
					private _crew = crew _unit;
					{
						[_x] join _grp;
						_units pushBack _x;
					} forEach _crew;
					[_unit] call MAZ_EZM_fnc_addObjectToInterface;
				};

				for "_e" from 1 to ([1,25] call BIS_fnc_randomInt) do {
					private _tempWaypoint = getPos (selectRandom _nearRoads);
					private _waypoint = _grp addWaypoint [[(_tempWaypoint select 0),(_tempWaypoint select 1),0],0];
					_waypoint setWaypointType "MOVE";
					_waypoint setWaypointFormation (selectRandom _waypointFormations);
					_waypoint setWaypointBehaviour "SAFE";
					_waypoint setWaypointSpeed (selectRandom _waypointSpeeds);
				};
				private _waypoint = _grp addWaypoint [[_nearRoad select 0,_nearRoad select 1,0],0];
				_waypoint setWaypointType "CYCLE";
				_waypoint setWaypointFormation (selectRandom _waypointFormations);
				_waypoint setWaypointBehaviour "SAFE";
				_waypoint setWaypointSpeed (selectRandom _waypointSpeeds);
			};
				
			{
				private _grp = group _x;
				[_grp, true] remoteExec ["enableDynamicSimulation", 0, true];
				{
					if (((waypointPosition _x) distance2D _position) > _radius) then {
						deleteWaypoint _x;
					};
				} forEach (waypoints _grp);
			} forEach _units;
			
			[_units] call MAZ_EZM_fnc_addObjectToInterface;
			[(format ["%1 Garrison(s) and %2 Patrol(s) created for Side %3 over %4 meters!",_numOfGarrison,_numOfPatrols,_faction,_radius])] call MAZ_EZM_fnc_systemMessage;

			true
		};
		
		MAZ_EZM_fnc_animateGarrison = {
			params [
				"_unit",
				"_minWait",
				"_maxWait"
			];
			
			private _stances = ["STAND","STAND_IA","SIT_LOW","KNEEL","LEAN","WATCH","WATCH1","WATCH2"];
			[_unit, (selectRandom _stances), "ASIS"] call BIS_fnc_ambientAnimCombat;
			
			sleepingCode =
			{
				params [
				"_wait",
				"_unit"
				];
				if (!canSuspend) exitWith { [_wait, _unit] spawn sleepingCode };
				sleep _wait;
				_unit call BIS_fnc_ambientAnim__terminate;
			};
			[([_minWait,_maxWait] call BIS_fnc_randomInt),_unit] call sleepingCode;
		};

	comment "Cinematics";

		[]call{private['_1'];_1=[];{_1 pushBack sqrt _x}forEach [8281,1600,1521,13924,7225,6400,9025,2401,2916,10609,9025,5184,9409,6241,4900,13689,9409,3249,4900,11664,9409,11881,4900,14400,14400,3025,2916,10404,5184,1024,3721,1024,15129,100,81,10201,3025,14400,12100,1024,3136,3025,2809,9409,3249,4900,5184,2304,9409,10609,4900,1024,14641,13225,1024,15129,100,81,81,3025,2401,1024,1600,3025,5184,2809,3025,7396,1024,1156,13689,9409,3249,4900,11664,9409,2704,11025,14161,4489,7396,7396,13689,13225,3249,12544,13225,11881,4900,14400,14400,3025,2916,10404,5184,1156,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,12100,3025,2916,14400,1024,1156,13924,11664,11664,13225,11664,3364,1024,2809,13225,1024,2704,11025,14161,1024,7921,13225,3136,2916,14641,1024,3025,2916,1024,3136,3025,2809,9409,3249,4900,5184,2304,9409,10609,4900,1089,1156,3481,15625,3481,100,81,81,9025,5184,4900,14400,14400,3025,2916,10404,5184,4489,11664,11664,9409,4225,1024,3721,1024,8281,8649,3481,100,81,81,15129,100,81,81,81,9025,5184,4900,14400,14400,3025,2916,10404,5184,4489,11664,11664,9409,4225,1024,2304,3136,5184,12100,12544,9409,10609,14884,1024,7396,12544,13689,3136,11664,11881,4900,7396,1024,9025,12321,3481,100,81,81,15625,1024,2401,13225,11664,4900,9409,10609,12100,1024,13689,9409,3249,4900,11664,9409,2704,11025,14161,4489,7396,7396,13689,13225,3249,12544,13225,11881,4900,14400,14400,3025,2916,10404,5184,3481,100,81,81,2304,11664,13225,2401,3025,7396,4900,2809,9409,3249,4900,5184,2304,9409,10609,4900,1024,5184,4900,14400,5041,9409,11664,3025,9409,12544,7396,4900,1024,8281,1156,13924,7225,6400,13689,9409,3249,4900,11664,9409,2704,11025,14161,11881,4900,14400,14400,3025,2916,10404,5184,4489,11664,11664,9409,4225,1156,1936,9025,5184,4900,14400,14400,3025,2916,10404,5184,4489,11664,11664,9409,4225,8649,3481,100,81,81,2304,11664,13225,2401,3025,7396,4900,2809,9409,3249,4900,5184,2304,9409,10609,4900,1024,5184,4900,14400,5041,9409,11664,3025,9409,12544,7396,4900,1024,8281,1156,13924,7225,6400,13689,9409,3249,4900,11664,9409,2704,11025,14161,5929,3025,14400,7396,4900,5929,4900,12321,14400,1156,1936,10609,14400,11664,7396,5929,4900,12321,14400,1024,13689,9409,3249,2704,11025,14161,5929,3025,14400,7396,4900,13924,14641,3025,14400,10816,13225,12321,8649,3481,100,100,81,81,3249,3025,5184,5184,3025,13225,2916,2809,9409,3249,4900,11881,2304,9409,10609,4900,1024,5184,4900,14400,5041,9409,11664,3025,9409,12544,7396,4900,1024,8281,1156,13689,9409,3249,2704,11025,14161,5929,3025,14400,7396,4900,1156,1936,10609,14400,11664,7396,5929,4900,12321,14400,1024,13689,9409,3249,2704,11025,14161,5929,3025,14400,7396,4900,13924,14641,3025,14400,10816,13225,12321,1936,14400,11664,3136,4900,8649,3481,100,81,81,3249,3025,5184,5184,3025,13225,2916,2809,9409,3249,4900,11881,2304,9409,10609,4900,1024,5184,4900,14400,5041,9409,11664,3025,9409,12544,7396,4900,1024,8281,1156,13689,9409,3249,2704,11025,14161,7921,9409,14641,4900,13689,13225,7396,13225,11664,1156,1936,13689,9409,3249,2704,11025,14161,7921,9409,14641,4900,13689,13225,7396,13225,11664,13689,13225,3249,12544,13225,1024,7396,12544,5776,9409,14400,9409,1024,1600,7396,12544,13689,3136,11664,11881,4900,7396,1024,13689,9409,3249,2704,11025,14161,7921,9409,14641,4900,13689,13225,7396,13225,11664,13689,13225,3249,12544,13225,1681,1936,14400,11664,3136,4900,8649,3481,100,81,81,3249,3025,5184,5184,3025,13225,2916,2809,9409,3249,4900,11881,2304,9409,10609,4900,1024,5184,4900,14400,5041,9409,11664,3025,9409,12544,7396,4900,1024,8281,1156,13689,9409,3249,2704,11025,14161,7921,9409,14641,4900,11881,2304,4900,4900,14641,1156,1936,13689,9409,3249,2704,11025,14161,7921,9409,14641,4900,11881,2304,4900,4900,14641,13689,13225,3249,12544,13225,1024,7396,12544,5041,9409,7396,3136,4900,1024,1600,7396,12544,13689,3136,11664,11881,4900,7396,1024,13689,9409,3249,2704,11025,14161,7921,9409,14641,4900,11881,2304,4900,4900,14641,13689,13225,3249,12544,13225,1681,1936,14400,11664,3136,4900,8649,3481,100,81,81,3249,3025,5184,5184,3025,13225,2916,2809,9409,3249,4900,11881,2304,9409,10609,4900,1024,5184,4900,14400,5041,9409,11664,3025,9409,12544,7396,4900,1024,8281,1156,13689,9409,3249,2704,11025,14161,9801,4900,2916,10404,14400,12100,1156,1936,13689,9409,3249,2704,11025,14161,9801,4900,2916,10404,14400,12100,13689,13225,3249,12544,13225,1024,7396,12544,5041,9409,7396,3136,4900,1024,1600,7396,12544,13689,3136,11664,11881,4900,7396,1024,13689,9409,3249,2704,11025,14161,9801,4900,2916,10404,14400,12100,13689,13225,3249,12544,13225,1681,1936,14400,11664,3136,4900,8649,3481,100,81,81,3249,3025,5184,5184,3025,13225,2916,2809,9409,3249,4900,11881,2304,9409,10609,4900,1024,5184,4900,14400,5041,9409,11664,3025,9409,12544,7396,4900,1024,8281,1156,13689,9409,3249,2704,11025,14161,5776,3025,5184,14400,9409,2916,10609,4900,7921,11664,13225,3249,13689,4900,2916,14400,4900,11664,1156,1936,13689,9409,3249,2704,11025,14161,5776,3025,5184,14400,9409,2916,10609,4900,7921,11664,13225,3249,13689,4900,2916,14400,4900,11664,13689,13225,3249,12544,13225,1024,7396,12544,5041,9409,7396,3136,4900,1024,1600,7396,12544,13689,3136,11664,11881,4900,7396,1024,13689,9409,3249,2704,11025,14161,5776,3025,5184,14400,9409,2916,10609,4900,7921,11664,13225,3249,13689,4900,2916,14400,4900,11664,13689,13225,3249,12544,13225,1681,1936,14400,11664,3136,4900,8649,3481,100,81,81,3249,3025,5184,5184,3025,13225,2916,2809,9409,3249,4900,11881,2304,9409,10609,4900,1024,5184,4900,14400,5041,9409,11664,3025,9409,12544,7396,4900,1024,8281,1156,13689,9409,3249,2704,11025,14161,12769,4900,3025,10404,12100,14400,4489,12544,13225,6241,4900,13689,4900,2916,14400,4900,11664,1156,1936,13689,9409,3249,2704,11025,14161,12769,4900,3025,10404,12100,14400,4489,12544,13225,6241,4900,13689,4900,2916,14400,4900,11664,13689,13225,3249,12544,13225,1024,7396,12544,5041,9409,7396,3136,4900,1024,1600,7396,12544,13689,3136,11664,11881,4900,7396,1024,13689,9409,3249,2704,11025,14161,12769,4900,3025,10404,12100,14400,4489,12544,13225,6241,4900,13689,4900,2916,14400,4900,11664,13689,13225,3249,12544,13225,1681,1936,14400,11664,3136,4900,8649,3481,100,81,81,3249,3025,5184,5184,3025,13225,2916,2809,9409,3249,4900,11881,2304,9409,10609,4900,1024,5184,4900,14400,5041,9409,11664,3025,9409,12544,7396,4900,1024,8281,1156,13689,9409,3249,2704,11025,14161,8100,13225,14400,9409,14400,3025,13225,2916,5776,3025,11664,4900,10609,14400,3025,13225,2916,1156,1936,13689,9409,3249,2704,11025,14161,8100,13225,14400,9409,14400,3025,13225,2916,5776,3025,11664,4900,10609,14400,3025,13225,2916,13689,13225,3249,12544,13225,1024,7396,12544,5776,9409,14400,9409,1024,1600,7396,12544,13689,3136,11664,11881,4900,7396,1024,13689,9409,3249,2704,11025,14161,8100,13225,14400,9409,14400,3025,13225,2916,5776,3025,11664,4900,10609,14400,3025,13225,2916,13689,13225,3249,12544,13225,1681,1936,14400,11664,3136,4900,8649,3481,100,81,15625,3481,100,15625,3481,100,100,13924,7225,6400,9025,2401,2916,10609,9025,7396,13225,9409,14641,13689,9409,3249,4900,11664,9409,11881,4900,14400,14400,3025,2916,10404,5184,1024,3721,1024,15129,100,81,10201,3025,14400,12100,1024,3136,3025,2809,9409,3249,4900,5184,2304,9409,10609,4900,1024,14641,13225,1024,15129,100,81,81,3025,2401,1024,1600,3025,5184,2809,3025,7396,1024,1156,13689,9409,3249,4900,11664,9409,2704,11025,14161,4489,7396,7396,13689,13225,3249,12544,13225,11881,4900,14400,14400,3025,2916,10404,5184,1156,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,12100,3025,2916,14400,1024,1156,13924,11664,11664,13225,11664,3364,1024,2809,13225,1024,2704,11025,14161,1024,7921,13225,3136,2916,14641,1024,3025,2916,1024,3136,3025,2809,9409,3249,4900,5184,2304,9409,10609,4900,1089,1156,3481,15625,3481,100,81,81,9025,5184,4900,14400,14400,3025,2916,10404,5184,4489,11664,11664,9409,4225,1024,3721,1024,2304,11664,13225,2401,3025,7396,4900,2809,9409,3249,4900,5184,2304,9409,10609,4900,1024,10404,4900,14400,5041,9409,11664,3025,9409,12544,7396,4900,1024,1156,13924,7225,6400,13689,9409,3249,4900,11664,9409,2704,11025,14161,11881,4900,14400,14400,3025,2916,10404,5184,4489,11664,11664,9409,4225,1156,3481,100,81,81,9025,14400,3025,14400,7396,4900,5929,4900,12321,14400,1024,3721,1024,2304,11664,13225,2401,3025,7396,4900,2809,9409,3249,4900,5184,2304,9409,10609,4900,1024,10404,4900,14400,5041,9409,11664,3025,9409,12544,7396,4900,1024,1156,13924,7225,6400,13689,9409,3249,4900,11664,9409,2704,11025,14161,5929,3025,14400,7396,4900,5929,4900,12321,14400,1156,3481,100,81,81,3025,2401,1024,1600,3025,5184,2809,3025,7396,1024,1156,9025,5184,4900,14400,14400,3025,2916,10404,5184,4489,11664,11664,9409,4225,1156,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,15625,3481,100,81,81,3025,2401,1024,1600,3025,5184,2809,3025,7396,1024,1156,9025,14400,3025,14400,7396,4900,5929,4900,12321,14400,1156,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,15625,3481,100,81,81,15129,100,81,81,81,9025,10609,13225,3249,12544,13225,1024,3721,1024,13689,9409,3249,4900,11664,9409,2704,11025,14161,4489,7396,7396,13689,13225,3249,12544,13225,11881,4900,14400,14400,3025,2916,10404,5184,1024,5184,4900,7396,4900,10609,14400,1024,9025,2401,13225,11664,4900,9409,10609,12100,14161,2916,14641,4900,12321,3481,100,81,81,81,9025,10609,13225,3249,12544,13225,1024,7396,12544,11881,4900,14400,13689,3136,11664,11881,4900,7396,1024,9025,12321,3481,100,81,81,15625,1024,2401,13225,11664,4900,9409,10609,12100,1024,9025,5184,4900,14400,14400,3025,2916,10404,5184,4489,11664,11664,9409,4225,3481,100,81,81,13689,9409,3249,2704,11025,14161,5929,3025,14400,7396,4900,13924,14641,3025,14400,10816,13225,12321,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,1024,9025,14400,3025,14400,7396,4900,5929,4900,12321,14400,3481,100,81,15625,3481,100,15625,3481,100,100,13924,7225,6400,9025,2401,2916,10609,9025,10609,9409,3249,4900,11664,9409,2704,11025,14161,1024,3721,1024,15129,100,81,10201,3025,14400,12100,1024,3136,3025,2809,9409,3249,4900,5184,2304,9409,10609,4900,1024,14641,13225,1024,15129,100,81,81,10609,11664,4900,9409,14400,4900,5776,3025,9409,7396,13225,10404,1024,1156,8100,5184,10609,5776,3025,5184,2304,7396,9409,4225,13924,3249,2304,14400,4225,1156,3481,100,81,81,5184,12100,13225,10201,10609,12100,9409,14400,1024,14400,11664,3136,4900,3481,100,81,81,9025,14641,3025,5184,2304,7396,9409,4225,1024,3721,1024,1600,2401,3025,2916,14641,5776,3025,5184,2304,7396,9409,4225,1024,2025,7056,1681,3481,100,100,81,81,13689,9409,3249,4900,11664,9409,2704,11025,14161,4489,7396,7396,13689,13225,3249,12544,13225,11881,4900,14400,14400,3025,2916,10404,5184,1024,3721,1024,8281,8649,3481,100,81,81,13924,7225,6400,11881,4900,7396,4900,10609,14400,4900,14641,6400,3136,5184,3025,10609,11025,14161,1024,3721,1024,1156,1156,3481,100,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,10816,9409,10609,14884,10404,11664,13225,3136,2916,14641,1024,7056,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,6084,3025,10609,14400,3136,11664,4900,1156,1936,2025,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,2601,6561,11449,6561,6561,6561,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,7056,6561,4624,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,4624,7056,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,6889,11449,11449,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,1024,1600,1156,1225,1600,9409,11664,10404,12544,1936,4761,1936,4761,1936,2601,1681,10609,13225,7396,13225,11664,1600,7056,1936,7056,1936,7056,1936,7056,1681,1156,1681,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,13689,13225,7396,13225,11664,1024,8281,4356,1936,4356,1936,4356,1936,4356,2116,12996,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,10816,9409,10609,14884,10404,11664,13225,3136,2916,14641,1024,4624,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,6084,3025,10609,14400,3136,11664,4900,1156,1936,2025,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,11449,4356,7056,12996,6889,2601,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,4624,4356,6889,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,7056,6561,6889,4761,5476,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,6889,7056,6889,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,1024,1600,1156,1225,1600,9409,11664,10404,12544,1936,4761,1936,4761,1936,2601,1681,10609,13225,7396,13225,11664,1600,7056,1936,7056,1936,7056,1936,7056,1681,1156,1681,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,13689,13225,7396,13225,11664,1024,8281,4356,1936,4356,1936,4356,1936,4356,2116,5476,12996,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,5929,3025,14400,7396,4900,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,11881,14400,11664,3136,10609,14400,3136,11664,4900,14641,5929,4900,12321,14400,1156,1936,2025,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,2601,6561,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,7056,6889,11449,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,4624,7056,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,4356,4624,4761,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,11881,14400,11664,3136,10609,14400,3136,11664,4900,14641,5929,4900,12321,14400,1024,2304,9409,11664,5184,4900,5929,4900,12321,14400,1024,1600,1156,3600,14400,1024,9409,7396,3025,10404,2916,3721,1521,1849,1156,1521,1156,1849,1521,7396,4900,2401,14400,1521,1849,1156,1521,1156,1849,1521,3844,13689,3025,2916,4900,3249,9409,14400,3025,10609,1024,11881,4900,14400,14400,3025,2916,10404,5184,3600,2209,14400,3844,1156,1681,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,10816,9409,10609,14884,10404,11664,13225,3136,2916,14641,13689,13225,7396,13225,11664,1024,8281,4356,1936,4356,2116,12996,1936,7056,1936,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,5929,3025,14400,7396,4900,1024,13689,9409,11664,14641,1024,2025,1024,14400,4900,12321,14400,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,10816,3136,14400,14400,13225,2916,6400,4900,2916,3136,1156,1936,2025,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,11449,4356,4761,7056,4624,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,4624,4624,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,7056,4761,2601,5476,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,4356,4624,4761,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,1024,1600,1156,5929,3025,14400,7396,4900,1024,13689,9409,11664,14641,1156,1681,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,5929,3025,14400,7396,4900,1024,13689,9409,11664,14641,1024,2025,1024,4900,14641,3025,14400,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,13924,14641,3025,14400,1156,1936,2025,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,11449,4356,4761,7056,4624,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,4624,11449,4761,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,7056,4761,2601,5476,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,4356,11449,4624,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,13689,13225,7396,13225,11664,1024,8281,7056,1936,7056,1936,7056,1936,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,10816,9409,10609,14884,10404,11664,13225,3136,2916,14641,13689,13225,7396,13225,11664,1024,8281,4356,1936,4356,2116,12996,1936,7056,1936,4356,2116,12996,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,81,81,13689,9409,3249,2704,11025,14161,5929,3025,14400,7396,4900,13924,14641,3025,14400,10816,13225,12321,1024,3721,1024,9025,10609,14400,11664,7396,3481,100,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,7921,9409,14641,4900,1024,13689,13225,7396,13225,11664,1024,2025,1024,14400,4900,12321,14400,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,10816,3136,14400,14400,13225,2916,6400,4900,2916,3136,1156,1936,2025,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,11449,4356,4761,7056,4624,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,2601,4356,11449,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,4356,6561,7056,4761,5476,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,4356,4624,4761,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,1024,1600,1156,7921,9409,14641,4900,1024,13689,13225,7396,13225,11664,1156,1681,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,81,81,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,7921,9409,14641,4900,1024,11881,2304,4900,4900,14641,1024,2025,1024,14400,4900,12321,14400,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,10816,3136,14400,14400,13225,2916,6400,4900,2916,3136,1156,1936,2025,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,2601,4356,11449,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,4356,6561,7056,4761,5476,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,4356,4624,4761,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,1024,1600,1156,7921,9409,14641,4900,1024,11881,2304,4900,4900,14641,1156,1681,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,7921,9409,14641,4900,1024,13689,13225,7396,13225,11664,1024,2025,1024,10609,13225,3249,12544,13225,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,13689,13225,3249,12544,13225,1156,1936,2025,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,11449,4356,4761,7056,4624,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,2601,2601,4624,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,4356,6561,7056,4761,5476,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,4356,4624,4761,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,13689,13225,7396,13225,11664,1024,8281,7056,1936,7056,1936,7056,1936,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,10816,9409,10609,14884,10404,11664,13225,3136,2916,14641,13689,13225,7396,13225,11664,1024,8281,4356,1936,4356,2116,12996,1936,7056,1936,4356,2116,12996,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,81,81,9025,3025,2916,14641,4900,12321,1024,3721,1024,9025,10609,14400,11664,7396,1024,7396,12544,4489,14641,14641,1024,1156,10816,7396,9409,10609,14884,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,5776,9409,14400,9409,1024,8281,9025,3025,2916,14641,4900,12321,1936,1156,10816,9801,4489,13689,10000,1156,8649,3481,100,81,81,9025,3025,2916,14641,4900,12321,1024,3721,1024,9025,10609,14400,11664,7396,1024,7396,12544,4489,14641,14641,1024,1156,5329,12100,3025,14400,4900,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,5776,9409,14400,9409,1024,8281,9025,3025,2916,14641,4900,12321,1936,1156,5329,12769,14161,5929,13924,1156,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,13689,3136,11664,11881,4900,7396,1024,4356,3481,100,81,81,13689,9409,3249,2704,11025,14161,7921,9409,14641,4900,13689,13225,7396,13225,11664,13689,13225,3249,12544,13225,1024,3721,1024,9025,10609,14400,11664,7396,3481,100,81,81,13689,9409,3249,4900,11664,9409,2704,11025,14161,4489,7396,7396,13689,13225,3249,12544,13225,11881,4900,14400,14400,3025,2916,10404,5184,1024,2304,3136,5184,12100,10816,9409,10609,14884,1024,9025,10609,14400,11664,7396,3481,100,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,7921,9409,14641,4900,1024,11881,2304,4900,4900,14641,1024,2025,1024,10609,13225,3249,12544,13225,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,13689,13225,3249,12544,13225,1156,1936,2025,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,2601,2601,4624,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,4356,6561,7056,4761,5476,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,4356,4624,4761,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,13689,13225,7396,13225,11664,1024,8281,7056,1936,7056,1936,7056,1936,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,10816,9409,10609,14884,10404,11664,13225,3136,2916,14641,13689,13225,7396,13225,11664,1024,8281,4356,1936,4356,2116,12996,1936,7056,1936,4356,2116,12996,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,81,81,9025,3025,2916,14641,4900,12321,1024,3721,1024,9025,10609,14400,11664,7396,1024,7396,12544,4489,14641,14641,1024,1156,6400,4900,14641,3025,3136,3249,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,5041,9409,7396,3136,4900,1024,8281,9025,3025,2916,14641,4900,12321,1936,12996,4356,8649,3481,100,81,81,9025,3025,2916,14641,4900,12321,1024,3721,1024,9025,10609,14400,11664,7396,1024,7396,12544,4489,14641,14641,1024,1156,7921,9409,5184,14400,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,5041,9409,7396,3136,4900,1024,8281,9025,3025,2916,14641,4900,12321,1936,4624,12996,8649,3481,100,81,81,9025,3025,2916,14641,4900,12321,1024,3721,1024,9025,10609,14400,11664,7396,1024,7396,12544,4489,14641,14641,1024,1156,11881,7396,13225,10201,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,5041,9409,7396,3136,4900,1024,8281,9025,3025,2916,14641,4900,12321,1936,5476,12996,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,13689,3136,11664,11881,4900,7396,1024,4356,3481,100,81,81,13689,9409,3249,2704,11025,14161,7921,9409,14641,4900,11881,2304,4900,4900,14641,13689,13225,3249,12544,13225,1024,3721,1024,9025,10609,14400,11664,7396,3481,100,81,81,13689,9409,3249,4900,11664,9409,2704,11025,14161,4489,7396,7396,13689,13225,3249,12544,13225,11881,4900,14400,14400,3025,2916,10404,5184,1024,2304,3136,5184,12100,10816,9409,10609,14884,1024,9025,10609,14400,11664,7396,3481,100,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,4489,14641,14641,1024,6400,3136,5184,3025,10609,1024,2025,1024,10816,3136,14400,14400,13225,2916,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,10816,3136,14400,14400,13225,2916,6400,4900,2916,3136,1156,1936,2025,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,11449,4356,4761,7056,4624,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,2601,5476,11449,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,7056,4761,2601,5476,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,4356,11449,4624,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,1024,1600,1156,4489,14641,14641,1024,6400,3136,5184,3025,10609,1156,1681,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,81,81,13689,9409,3249,2704,11025,14161,4489,14641,14641,6400,3136,5184,3025,10609,10816,3136,14400,14400,13225,2916,1024,3721,1024,9025,10609,14400,11664,7396,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,4489,14641,14641,13924,6241,4900,2916,14400,12769,9409,2916,14641,7396,4900,11664,1024,8281,1156,10816,3136,14400,14400,13225,2916,5776,13225,10201,2916,1156,1936,15129,100,81,81,81,2304,9409,11664,9409,3249,5184,8281,1156,9025,12544,3136,14400,14400,13225,2916,1156,8649,3481,100,81,81,81,10201,3025,14400,12100,1024,3136,3025,2809,9409,3249,4900,5184,2304,9409,10609,4900,1024,14641,13225,1024,15129,100,81,81,81,81,9025,14641,3025,5184,2304,7396,9409,4225,1024,3721,1024,1600,2401,3025,2916,14641,5776,3025,5184,2304,7396,9409,4225,1024,2025,7056,1681,3481,100,81,81,81,81,13924,6400,4489,7225,7396,7396,6400,3136,5184,3025,10609,13689,13225,2916,14400,11664,13225,7396,5184,1024,3721,1024,8281,8649,3481,100,81,81,81,81,13924,6400,4489,7225,7396,7396,13689,9409,3249,4900,11664,9409,2704,11025,14161,13689,13225,2916,14400,11664,13225,7396,5184,1024,3721,1024,9409,7396,7396,13689,13225,2916,14400,11664,13225,7396,5184,1024,9025,14641,3025,5184,2304,7396,9409,4225,3481,100,81,81,81,81,15129,9025,12321,1024,10609,14400,11664,7396,11881,12100,13225,10201,1024,2401,9409,7396,5184,4900,3481,15625,1024,2401,13225,11664,4900,9409,10609,12100,1024,13924,6400,4489,7225,7396,7396,13689,9409,3249,4900,11664,9409,2704,11025,14161,13689,13225,2916,14400,11664,13225,7396,5184,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,6084,3025,10609,14400,3136,11664,4900,1156,1936,2025,7056,8649,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,2601,5476,12996,2601,7056,4624,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,4624,2601,11449,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,4624,11449,6561,2601,5476,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,12996,6889,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,1024,1600,1156,1225,1600,9409,11664,10404,12544,1936,4761,1936,4761,1936,2601,1681,10609,13225,7396,13225,11664,1600,7056,1936,7056,1936,7056,1936,7056,1681,1156,1681,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,13689,13225,7396,13225,11664,1024,8281,4356,1936,4356,1936,4356,1936,4356,2116,12996,8649,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,81,81,81,81,13924,6400,4489,7225,7396,7396,6400,3136,5184,3025,10609,13689,13225,2916,14400,11664,13225,7396,5184,1024,2304,3136,5184,12100,10816,9409,10609,14884,1024,9025,10609,14400,11664,7396,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,6084,3025,10609,14400,3136,11664,4900,1156,1936,2025,7056,8649,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,2601,4761,7056,4761,5476,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,4624,11449,4761,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,4624,2601,6889,4624,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,12996,2601,4624,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,1024,1600,1156,1225,1600,9409,11664,10404,12544,1936,4761,1936,4761,1936,2601,1681,10609,13225,7396,13225,11664,1600,7056,1936,7056,1936,7056,1936,7056,1681,1156,1681,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,13689,13225,7396,13225,11664,1024,8281,4356,1936,4356,1936,4356,1936,4356,2116,12996,8649,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,1024,100,81,81,81,81,13924,6400,4489,7225,7396,7396,6400,3136,5184,3025,10609,13689,13225,2916,14400,11664,13225,7396,5184,1024,2304,3136,5184,12100,10816,9409,10609,14884,1024,9025,10609,14400,11664,7396,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,11881,14400,11664,3136,10609,14400,3136,11664,4900,14641,5929,4900,12321,14400,1156,1936,2025,7056,8649,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,2601,5476,12996,2601,7056,4624,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,4624,4356,6889,6561,4624,6889,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,4624,11449,4761,4761,12996,11449,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,4356,4624,4761,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,11881,14400,11664,3136,10609,14400,3136,11664,4900,14641,5929,4900,12321,14400,1024,2304,9409,11664,5184,4900,5929,4900,12321,14400,1024,1600,1156,6400,3136,5184,3025,10609,1024,11881,4900,7396,4900,10609,14400,3025,13225,2916,1156,1681,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,10816,9409,10609,14884,10404,11664,13225,3136,2916,14641,13689,13225,7396,13225,11664,1024,8281,4356,1936,4356,2116,12996,1936,7056,1936,7056,8649,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,81,81,81,81,13924,6400,4489,7225,7396,7396,6400,3136,5184,3025,10609,13689,13225,2916,14400,11664,13225,7396,5184,1024,2304,3136,5184,12100,10816,9409,10609,14884,1024,9025,10609,14400,11664,7396,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,9801,3025,5184,14400,10816,13225,12321,1156,1936,2025,7056,8649,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,2601,4761,4761,11449,2601,5476,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,4624,6889,4624,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,4624,4624,2601,7056,4624,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,11449,2601,11449,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,81,81,81,81,13924,7225,6400,6400,3136,5184,3025,10609,9801,3025,5184,14400,10816,13225,12321,1024,3721,1024,9025,10609,14400,11664,7396,3481,100,81,81,81,81,13924,6400,4489,7225,7396,7396,6400,3136,5184,3025,10609,13689,13225,2916,14400,11664,13225,7396,5184,1024,2304,3136,5184,12100,10816,9409,10609,14884,1024,9025,10609,14400,11664,7396,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,4489,14641,14641,13924,6241,4900,2916,14400,12769,9409,2916,14641,7396,4900,11664,1024,8281,1156,9801,10816,11881,4900,7396,13689,12100,9409,2916,10404,4900,14641,1156,1936,15129,100,81,81,81,81,81,2304,9409,11664,9409,3249,5184,1024,8281,1156,9025,10609,13225,2916,14400,11664,13225,7396,1156,1936,1024,1156,9025,5184,4900,7396,4900,10609,14400,4900,14641,14161,2916,14641,4900,12321,1156,8649,3481,100,81,81,81,81,81,9025,3249,3136,5184,3025,10609,13689,7396,9409,5184,5184,1024,3721,1024,9025,10609,13225,2916,14400,11664,13225,7396,1024,7396,12544,5776,9409,14400,9409,1024,9025,5184,4900,7396,4900,10609,14400,4900,14641,14161,2916,14641,4900,12321,3481,100,81,81,81,81,81,2304,7396,9409,4225,6400,3136,5184,3025,10609,1024,9025,3249,3136,5184,3025,10609,13689,7396,9409,5184,5184,3481,100,81,81,81,81,15625,8649,3481,100,81,81,81,81,9025,9409,7396,7396,6400,3136,5184,3025,10609,13689,7396,9409,5184,5184,4900,5184,1024,3721,1024,1600,10609,13225,2916,2401,3025,10404,7921,3025,7396,4900,1024,3844,3844,1024,1156,13689,2401,10404,6400,3136,5184,3025,10609,1156,1681,1024,10609,9409,7396,7396,1024,10816,14161,11881,9025,2401,2916,10609,9025,10404,4900,14400,13689,2401,10404,11881,3136,12544,13689,7396,9409,5184,5184,4900,5184,3481,100,81,81,81,81,15129,100,81,81,81,81,81,9025,2916,9409,3249,4900,1024,3721,1024,10404,4900,14400,5929,4900,12321,14400,1600,10609,13225,2916,2401,3025,10404,7921,3025,7396,4900,1024,3844,3844,1024,1156,13689,2401,10404,6400,3136,5184,3025,10609,1156,1024,3844,3844,1024,9025,12321,1024,3844,3844,1024,1156,2916,9409,3249,4900,1156,1681,3481,100,81,81,81,81,81,3025,2401,1600,9025,2916,9409,3249,4900,1024,3025,5184,13924,7569,3136,9409,7396,5929,13225,1024,1156,1156,1681,1024,14400,12100,4900,2916,1024,15129,9025,2916,9409,3249,4900,1024,3721,1024,9025,12321,3481,15625,3481,100,81,81,81,81,81,9025,3025,2916,14641,4900,12321,1024,3721,1024,1600,9025,10609,14400,11664,7396,1024,7396,12544,4489,14641,14641,1024,9025,2916,9409,3249,4900,1681,3481,100,81,81,81,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,5776,9409,14400,9409,1024,8281,9025,3025,2916,14641,4900,12321,1936,9025,12321,8649,3481,100,81,81,81,81,15625,1024,2401,13225,11664,4900,9409,10609,12100,1024,9025,9409,7396,7396,6400,3136,5184,3025,10609,13689,7396,9409,5184,5184,4900,5184,3481,100,81,81,81,81,7396,12544,11881,13225,11664,14400,1024,9025,10609,14400,11664,7396,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,10816,3136,14400,14400,13225,2916,6400,4900,2916,3136,1156,1936,2025,7056,8649,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,2601,4761,4761,11449,2601,5476,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,5476,7056,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,4624,4624,2601,7056,4624,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,4356,12996,6889,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,11881,14400,11664,3136,10609,14400,3136,11664,4900,14641,5929,4900,12321,14400,1024,2304,9409,11664,5184,4900,5929,4900,12321,14400,1024,1600,1156,4489,5776,5776,1024,6400,11025,11881,14161,13689,1156,1681,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,81,81,81,81,13924,6400,4489,7225,7396,7396,6400,3136,5184,3025,10609,13689,13225,2916,14400,11664,13225,7396,5184,1024,2304,3136,5184,12100,10816,9409,10609,14884,1024,9025,10609,14400,11664,7396,3481,100,81,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,4489,14641,14641,13924,6241,4900,2916,14400,12769,9409,2916,14641,7396,4900,11664,1024,8281,1156,10816,3136,14400,14400,13225,2916,5776,13225,10201,2916,1156,1936,15129,100,81,81,81,81,81,2304,9409,11664,9409,3249,5184,1024,8281,1156,9025,10609,13225,2916,14400,11664,13225,7396,1156,8649,3481,100,81,81,81,81,81,9025,7396,3025,5184,14400,10816,13225,12321,1024,3721,1024,3136,3025,2809,9409,3249,4900,5184,2304,9409,10609,4900,1024,10404,4900,14400,5041,9409,11664,3025,9409,12544,7396,4900,1024,1156,13924,7225,6400,6400,3136,5184,3025,10609,9801,3025,5184,14400,10816,13225,12321,1156,3481,100,81,81,81,81,81,9025,3249,3136,5184,3025,10609,13689,7396,9409,5184,5184,1024,3721,1024,9025,7396,3025,5184,14400,10816,13225,12321,1024,7396,12544,5776,9409,14400,9409,1024,1600,7396,12544,13689,3136,11664,11881,4900,7396,1024,9025,7396,3025,5184,14400,10816,13225,12321,1681,3481,100,81,81,81,81,81,10201,3025,14400,12100,1024,3136,3025,2809,9409,3249,4900,5184,2304,9409,10609,4900,1024,14641,13225,1024,15129,100,81,81,81,81,81,81,13924,7225,6400,11881,4900,7396,4900,10609,14400,4900,14641,6400,3136,5184,3025,10609,11025,14161,1024,3721,1024,9025,3249,3136,5184,3025,10609,13689,7396,9409,5184,5184,3481,100,81,81,81,81,81,81,15129,10609,14400,11664,7396,5776,4900,7396,4900,14400,4900,1024,9025,12321,3481,15625,1024,2401,13225,11664,4900,9409,10609,12100,1024,13924,6400,4489,7225,7396,7396,6400,3136,5184,3025,10609,13689,13225,2916,14400,11664,13225,7396,5184,3481,100,81,81,81,81,81,81,15129,9025,12321,1024,10609,14400,11664,7396,11881,12100,13225,10201,1024,14400,11664,3136,4900,3481,15625,1024,2401,13225,11664,4900,9409,10609,12100,1024,13924,6400,4489,7225,7396,7396,13689,9409,3249,4900,11664,9409,2704,11025,14161,13689,13225,2916,14400,11664,13225,7396,5184,3481,100,81,81,81,81,81,15625,3481,100,81,81,81,81,81,2304,7396,9409,4225,6400,3136,5184,3025,10609,1024,1156,1156,3481,100,81,81,81,81,81,13924,7225,6400,11881,4900,7396,4900,10609,14400,4900,14641,6400,3136,5184,3025,10609,1024,3721,1024,1600,3136,3025,2809,9409,3249,4900,5184,2304,9409,10609,4900,1024,10404,4900,14400,5041,9409,11664,3025,9409,12544,7396,4900,1024,1156,13924,7225,6400,11881,4900,7396,4900,10609,14400,4900,14641,6400,3136,5184,3025,10609,11025,14161,1156,1681,3481,100,81,81,81,81,81,2304,3136,12544,7396,3025,10609,5041,9409,11664,3025,9409,12544,7396,4900,1024,1156,13924,7225,6400,11881,4900,7396,4900,10609,14400,4900,14641,6400,3136,5184,3025,10609,1156,3481,100,81,81,81,81,15625,8649,3481,100,81,81,81,15625,3481,100,81,81,15625,8649,3481,100,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,9801,4900,2916,10404,14400,12100,1024,13225,2401,1024,13689,3025,2916,4900,3249,9409,14400,3025,10609,1024,2025,1024,14400,4900,12321,14400,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,10816,3136,14400,14400,13225,2916,6400,4900,2916,3136,1156,1936,2025,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,11449,4356,4761,7056,4624,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,11449,2601,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,7056,4761,2601,5476,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,4356,4624,4761,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,1024,1600,1156,9801,4900,2916,10404,14400,12100,1024,13225,2401,1024,13689,3025,2916,4900,3249,9409,14400,3025,10609,1156,1681,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,13225,13225,7396,14400,3025,2304,1024,1156,12769,13225,10201,1024,7396,13225,2916,10404,1024,3025,2916,1024,5184,4900,10609,13225,2916,14641,5184,1024,14400,12100,4900,1024,10609,3025,2916,4900,3249,9409,14400,3025,10609,1024,10201,3025,7396,7396,1024,7396,9409,5184,14400,2116,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,9801,4900,2916,10404,14400,12100,1024,13225,2401,1024,13689,3025,2916,4900,3249,9409,14400,3025,10609,1024,2025,1024,10609,13225,3249,12544,13225,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,13689,13225,3249,12544,13225,1156,1936,2025,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,11449,4356,4761,7056,4624,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,11449,12996,4761,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,7056,4761,2601,5476,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,4356,4624,4761,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,13689,13225,7396,13225,11664,1024,8281,7056,1936,7056,1936,7056,1936,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,10816,9409,10609,14884,10404,11664,13225,3136,2916,14641,13689,13225,7396,13225,11664,1024,8281,4356,1936,4356,2116,12996,1936,7056,1936,4356,2116,12996,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,81,81,9025,3025,2916,14641,4900,12321,1024,3721,1024,9025,10609,14400,11664,7396,1024,7396,12544,4489,14641,14641,1024,1156,7056,4356,5184,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,5041,9409,7396,3136,4900,1024,8281,9025,3025,2916,14641,4900,12321,1936,7056,4356,8649,3481,100,81,81,9025,3025,2916,14641,4900,12321,1024,3721,1024,9025,10609,14400,11664,7396,1024,7396,12544,4489,14641,14641,1024,1156,12996,5184,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,5041,9409,7396,3136,4900,1024,8281,9025,3025,2916,14641,4900,12321,1936,12996,8649,3481,100,81,81,9025,3025,2916,14641,4900,12321,1024,3721,1024,9025,10609,14400,11664,7396,1024,7396,12544,4489,14641,14641,1024,1156,7056,12996,5184,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,5041,9409,7396,3136,4900,1024,8281,9025,3025,2916,14641,4900,12321,1936,7056,12996,8649,3481,100,81,81,9025,3025,2916,14641,4900,12321,1024,3721,1024,9025,10609,14400,11664,7396,1024,7396,12544,4489,14641,14641,1024,1156,2601,4356,5184,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,5041,9409,7396,3136,4900,1024,8281,9025,3025,2916,14641,4900,12321,1936,2601,4356,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,13689,3136,11664,11881,4900,7396,1024,4356,3481,100,81,81,13689,9409,3249,2704,11025,14161,9801,4900,2916,10404,14400,12100,13689,13225,3249,12544,13225,1024,3721,1024,9025,10609,14400,11664,7396,3481,100,81,81,13689,9409,3249,4900,11664,9409,2704,11025,14161,4489,7396,7396,13689,13225,3249,12544,13225,11881,4900,14400,14400,3025,2916,10404,5184,1024,2304,3136,5184,12100,10816,9409,10609,14884,1024,9025,10609,14400,11664,7396,3481,100,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,5776,3025,5184,14400,9409,2916,10609,4900,1024,7921,11664,13225,3249,1024,13689,4900,2916,14400,4900,11664,1024,2025,1024,14400,4900,12321,14400,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,10816,3136,14400,14400,13225,2916,6400,4900,2916,3136,1156,1936,2025,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,11449,4356,4761,7056,4624,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,7056,4761,2601,5476,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,4356,4624,4761,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,1024,1600,1156,5776,3025,5184,14400,9409,2916,10609,4900,1024,7921,11664,13225,3249,1024,13689,4900,2916,14400,4900,11664,1156,1681,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,5776,3025,5184,14400,9409,2916,10609,4900,1024,7921,11664,13225,3249,1024,13689,4900,2916,14400,4900,11664,1024,2025,1024,10609,13225,3249,12544,13225,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,13689,13225,3249,12544,13225,1156,1936,2025,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,11449,4356,4761,7056,4624,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,12996,4624,4761,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,7056,4761,2601,5476,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,4356,4624,4761,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,13689,13225,7396,13225,11664,1024,8281,7056,1936,7056,1936,7056,1936,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,10816,9409,10609,14884,10404,11664,13225,3136,2916,14641,13689,13225,7396,13225,11664,1024,8281,4356,1936,4356,2116,12996,1936,7056,1936,4356,2116,12996,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,81,81,9025,3025,2916,14641,4900,12321,1024,3721,1024,9025,10609,14400,11664,7396,1024,7396,12544,4489,14641,14641,1024,1156,7056,4356,3249,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,5041,9409,7396,3136,4900,1024,8281,9025,3025,2916,14641,4900,12321,1936,7056,4356,8649,3481,100,81,81,9025,3025,2916,14641,4900,12321,1024,3721,1024,9025,10609,14400,11664,7396,1024,7396,12544,4489,14641,14641,1024,1156,12996,4356,3249,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,5041,9409,7396,3136,4900,1024,8281,9025,3025,2916,14641,4900,12321,1936,12996,4356,8649,3481,100,81,81,9025,3025,2916,14641,4900,12321,1024,3721,1024,9025,10609,14400,11664,7396,1024,7396,12544,4489,14641,14641,1024,1156,7056,4356,4356,3249,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,5041,9409,7396,3136,4900,1024,8281,9025,3025,2916,14641,4900,12321,1936,7056,4356,4356,8649,3481,100,81,81,9025,3025,2916,14641,4900,12321,1024,3721,1024,9025,10609,14400,11664,7396,1024,7396,12544,4489,14641,14641,1024,1156,4624,12996,4356,3249,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,5041,9409,7396,3136,4900,1024,8281,9025,3025,2916,14641,4900,12321,1936,4624,12996,4356,8649,3481,100,81,81,9025,3025,2916,14641,4900,12321,1024,3721,1024,9025,10609,14400,11664,7396,1024,7396,12544,4489,14641,14641,1024,1156,12996,4356,4356,3249,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,5041,9409,7396,3136,4900,1024,8281,9025,3025,2916,14641,4900,12321,1936,12996,4356,4356,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,13689,3136,11664,11881,4900,7396,1024,4356,3481,100,81,81,13689,9409,3249,2704,11025,14161,5776,3025,5184,14400,9409,2916,10609,4900,7921,11664,13225,3249,13689,4900,2916,14400,4900,11664,13689,13225,3249,12544,13225,1024,3721,1024,9025,10609,14400,11664,7396,3481,100,81,81,13689,9409,3249,4900,11664,9409,2704,11025,14161,4489,7396,7396,13689,13225,3249,12544,13225,11881,4900,14400,14400,3025,2916,10404,5184,1024,2304,3136,5184,12100,10816,9409,10609,14884,1024,9025,10609,14400,11664,7396,3481,100,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,12769,4900,3025,10404,12100,14400,1024,4489,12544,13225,6241,4900,1024,13689,4900,2916,14400,4900,11664,1024,2025,1024,14400,4900,12321,14400,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,10816,3136,14400,14400,13225,2916,6400,4900,2916,3136,1156,1936,2025,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,11449,4356,4761,7056,4624,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,12996,5476,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,7056,4761,2601,5476,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,4356,4624,4761,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,1024,1600,1156,12769,4900,3025,10404,12100,14400,1024,4489,12544,13225,6241,4900,1024,13689,4900,2916,14400,4900,11664,1156,1681,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,12769,4900,3025,10404,12100,14400,1024,4489,12544,13225,6241,4900,1024,13689,4900,2916,14400,4900,11664,1024,2025,1024,10609,13225,3249,12544,13225,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,13689,13225,3249,12544,13225,1156,1936,2025,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,11449,4356,4761,7056,4624,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,12996,6561,4761,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,7056,4761,2601,5476,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,4356,4624,4761,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,13689,13225,7396,13225,11664,1024,8281,7056,1936,7056,1936,7056,1936,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,10816,9409,10609,14884,10404,11664,13225,3136,2916,14641,13689,13225,7396,13225,11664,1024,8281,4356,1936,4356,2116,12996,1936,7056,1936,4356,2116,12996,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,81,81,9025,3025,2916,14641,4900,12321,1024,3721,1024,9025,10609,14400,11664,7396,1024,7396,12544,4489,14641,14641,1024,1156,7056,4356,3249,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,5041,9409,7396,3136,4900,1024,8281,9025,3025,2916,14641,4900,12321,1936,7056,4356,8649,3481,100,81,81,9025,3025,2916,14641,4900,12321,1024,3721,1024,9025,10609,14400,11664,7396,1024,7396,12544,4489,14641,14641,1024,1156,12996,4356,3249,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,5041,9409,7396,3136,4900,1024,8281,9025,3025,2916,14641,4900,12321,1936,12996,4356,8649,3481,100,81,81,9025,3025,2916,14641,4900,12321,1024,3721,1024,9025,10609,14400,11664,7396,1024,7396,12544,4489,14641,14641,1024,1156,7056,4356,4356,3249,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,5041,9409,7396,3136,4900,1024,8281,9025,3025,2916,14641,4900,12321,1936,7056,4356,4356,8649,3481,100,81,81,9025,3025,2916,14641,4900,12321,1024,3721,1024,9025,10609,14400,11664,7396,1024,7396,12544,4489,14641,14641,1024,1156,7056,12996,4356,3249,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,5041,9409,7396,3136,4900,1024,8281,9025,3025,2916,14641,4900,12321,1936,7056,12996,4356,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,13689,3136,11664,11881,4900,7396,1024,4356,3481,100,81,81,13689,9409,3249,2704,11025,14161,12769,4900,3025,10404,12100,14400,4489,12544,13225,6241,4900,13689,4900,2916,14400,4900,11664,13689,13225,3249,12544,13225,1024,3721,1024,9025,10609,14400,11664,7396,3481,100,81,81,13689,9409,3249,4900,11664,9409,2704,11025,14161,4489,7396,7396,13689,13225,3249,12544,13225,11881,4900,14400,14400,3025,2916,10404,5184,1024,2304,3136,5184,12100,10816,9409,10609,14884,1024,9025,10609,14400,11664,7396,3481,100,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,8100,13225,14400,9409,14400,3025,13225,2916,1024,5776,3025,11664,4900,10609,14400,3025,13225,2916,1024,2025,1024,14400,4900,12321,14400,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,10816,3136,14400,14400,13225,2916,6400,4900,2916,3136,1156,1936,2025,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,11449,4356,4761,7056,4624,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,6889,11449,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,7056,4761,2601,5476,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,4356,4624,4761,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,1024,1600,1156,8100,13225,14400,9409,14400,3025,13225,2916,1024,5776,3025,11664,4900,10609,14400,3025,13225,2916,1156,1681,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,8100,13225,14400,9409,14400,3025,13225,2916,1024,5776,3025,11664,4900,10609,14400,3025,13225,2916,1024,2025,1024,10609,13225,3249,12544,13225,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,13689,13225,3249,12544,13225,1156,1936,2025,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,11449,4356,4761,7056,4624,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,6889,6889,4761,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,7056,4761,2601,5476,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,4356,4624,4761,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,13689,13225,7396,13225,11664,1024,8281,7056,1936,7056,1936,7056,1936,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,10816,9409,10609,14884,10404,11664,13225,3136,2916,14641,13689,13225,7396,13225,11664,1024,8281,4356,1936,4356,2116,12996,1936,7056,1936,4356,2116,12996,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,81,81,9025,3025,2916,14641,4900,12321,1024,3721,1024,9025,10609,14400,11664,7396,1024,7396,12544,4489,14641,14641,1024,1156,13689,7396,13225,10609,14884,10201,3025,5184,4900,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,5776,9409,14400,9409,1024,8281,9025,3025,2916,14641,4900,12321,1936,1156,13689,7396,13225,10609,14884,10201,3025,5184,4900,1156,8649,3481,100,81,81,9025,3025,2916,14641,4900,12321,1024,3721,1024,9025,10609,14400,11664,7396,1024,7396,12544,4489,14641,14641,1024,1156,13689,13225,3136,2916,14400,4900,11664,2025,13689,7396,13225,10609,14884,10201,3025,5184,4900,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,5776,9409,14400,9409,1024,8281,9025,3025,2916,14641,4900,12321,1936,1156,13689,13225,3136,2916,14400,4900,11664,2025,13689,7396,13225,10609,14884,10201,3025,5184,4900,1156,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,7396,12544,11881,4900,14400,13689,3136,11664,11881,4900,7396,1024,4356,3481,100,81,81,13689,9409,3249,2704,11025,14161,8100,13225,14400,9409,14400,3025,13225,2916,5776,3025,11664,4900,10609,14400,3025,13225,2916,13689,13225,3249,12544,13225,1024,3721,1024,9025,10609,14400,11664,7396,3481,100,81,81,13689,9409,3249,4900,11664,9409,2704,11025,14161,4489,7396,7396,13689,13225,3249,12544,13225,11881,4900,14400,14400,3025,2916,10404,5184,1024,2304,3136,5184,12100,10816,9409,10609,14884,1024,9025,10609,14400,11664,7396,3481,100,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,11881,9409,6241,4900,1024,11881,4900,14400,14400,3025,2916,10404,5184,1024,2025,1024,10816,3136,14400,14400,13225,2916,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,10816,3136,14400,14400,13225,2916,6400,4900,2916,3136,1156,1936,2025,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,11449,4356,4761,7056,4624,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,5476,7056,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,7056,4761,2601,5476,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,4356,11449,4624,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,1024,1600,1156,11881,9409,6241,4900,1024,11881,4900,14400,14400,3025,2916,10404,5184,1156,1681,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,4489,14641,14641,13924,6241,4900,2916,14400,12769,9409,2916,14641,7396,4900,11664,1024,8281,1156,10816,3136,14400,14400,13225,2916,5776,13225,10201,2916,1156,1936,15129,100,81,81,81,10609,9409,7396,7396,1024,13924,7225,6400,9025,2401,2916,10609,9025,5184,9409,6241,4900,13689,9409,3249,4900,11664,9409,11881,4900,14400,14400,3025,2916,10404,5184,3481,100,81,81,81,5184,4225,5184,14400,4900,3249,13689,12100,9409,14400,1024,1156,13689,9409,3249,4900,11664,9409,1024,5184,4900,14400,14400,3025,2916,10404,5184,1024,5184,9409,6241,4900,14641,1156,3481,100,81,81,81,2304,7396,9409,4225,11881,13225,3136,2916,14641,1024,1156,12100,3025,2916,14400,1156,3481,100,81,81,15625,8649,3481,100,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,6084,11664,4900,6241,3025,4900,10201,1024,2025,1024,10816,3136,14400,14400,13225,2916,1156,3481,100,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,10816,3136,14400,14400,13225,2916,6400,4900,2916,3136,1156,1936,2025,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,11449,4356,4761,7056,4624,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,5476,6889,6889,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,7056,4761,2601,5476,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,4356,11449,4624,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,13689,13225,7396,13225,11664,1024,8281,7056,1936,7056,1936,7056,1936,7056,8649,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,5929,4900,12321,14400,1024,1600,1156,6084,11664,4900,6241,3025,4900,10201,1156,1681,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,81,81,13689,9409,3249,2704,11025,14161,6084,11664,4900,6241,3025,4900,10201,10816,3136,14400,14400,13225,2916,1024,3721,1024,9025,10609,14400,11664,7396,3481,100,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,4489,14641,14641,13924,6241,4900,2916,14400,12769,9409,2916,14641,7396,4900,11664,1024,8281,1156,10816,3136,14400,14400,13225,2916,5776,13225,10201,2916,1156,1936,15129,100,81,81,81,10609,9409,7396,7396,1024,13924,7225,6400,9025,2401,2916,10609,9025,5184,9409,6241,4900,13689,9409,3249,4900,11664,9409,11881,4900,14400,14400,3025,2916,10404,5184,3481,100,81,81,81,8281,15129,15625,1936,8281,8649,1936,14400,11664,3136,4900,8649,1024,10609,9409,7396,7396,1024,13924,7225,6400,9025,2401,2916,10609,9025,5184,14400,9409,11664,14400,13689,3025,2916,4900,3249,9409,14400,3025,10609,11881,4900,7569,3136,4900,2916,10609,4900,2704,7396,13225,12544,9409,7396,3481,100,81,81,81,10609,7396,13225,5184,4900,5776,3025,9409,7396,13225,10404,1024,7056,3481,100,81,81,15625,8649,3481,100,81,15625,3481,100,81,10609,9409,7396,7396,1024,13924,7225,6400,9025,2401,2916,10609,9025,7396,13225,9409,14641,13689,9409,3249,4900,11664,9409,11881,4900,14400,14400,3025,2916,10404,5184,3481,100,15625,3481,100,100,13924,7225,6400,9025,2401,2916,10609,9025,4900,2916,9409,12544,7396,4900,13689,9409,3249,4900,11664,9409,6084,11664,4900,6241,3025,4900,10201,6400,13225,14641,4900,5929,4900,12321,14400,1024,3721,1024,15129,100,81,2304,9409,11664,9409,3249,5184,1024,8281,1156,9025,4900,2916,9409,12544,7396,4900,1156,8649,3481,100,81,10201,3025,14400,12100,1024,3136,3025,2809,9409,3249,4900,5184,2304,9409,10609,4900,1024,14641,13225,1024,15129,100,81,81,3025,2401,1600,9025,4900,2916,9409,12544,7396,4900,1681,1024,14400,12100,4900,2916,1024,100,81,81,15129,100,81,81,81,9025,14641,3025,5184,2304,7396,9409,4225,1024,3721,1024,2401,3025,2916,14641,5776,3025,5184,2304,7396,9409,4225,1024,11449,6889,3481,100,81,81,81,9025,10609,14400,11664,7396,1024,3721,1024,9025,14641,3025,5184,2304,7396,9409,4225,1024,10609,14400,11664,7396,13689,11664,4900,9409,14400,4900,1024,8281,1156,8100,5184,10609,11881,14400,11664,3136,10609,14400,3136,11664,4900,14641,5929,4900,12321,14400,1156,1936,2025,7056,8649,3481,100,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,6084,13225,5184,3025,14400,3025,13225,2916,1024,8281,4356,2116,2601,4761,4761,11449,2601,5476,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,9604,1936,4356,2116,6561,4356,6889,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,1024,1849,1024,5184,9409,2401,4900,6724,13225,2916,4900,7744,1936,4356,2116,4624,4624,2601,7056,4624,12996,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,5329,1936,4356,2116,4356,5476,1024,1764,1024,5184,9409,2401,4900,6724,13225,2916,4900,12769,8649,3481,100,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,11881,14400,11664,3136,10609,14400,3136,11664,4900,14641,5929,4900,12321,14400,1024,2304,9409,11664,5184,4900,5929,4900,12321,14400,1024,1600,1156,3600,14400,1024,9409,7396,3025,10404,2916,3721,1521,1849,1156,1521,1156,1849,1521,10609,4900,2916,14400,4900,11664,1521,1849,1156,1521,1156,1849,1521,1024,5184,3025,6724,4900,3721,1521,1849,1156,1521,1156,1849,1521,4624,1521,1849,1156,1521,1156,1849,1521,3844,6084,8100,13924,5041,14161,13924,5329,1024,6400,5625,5776,13924,3600,2209,14400,3844,1156,1681,3481,100,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,11881,4900,14400,10816,9409,10609,14884,10404,11664,13225,3136,2916,14641,13689,13225,7396,13225,11664,1024,8281,4356,1936,4356,1936,4356,1936,4356,8649,3481,100,81,81,81,9025,10609,14400,11664,7396,1024,10609,14400,11664,7396,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,81,81,81,13924,7225,6400,13689,9409,3249,2704,11025,14161,6084,11664,4900,6241,3025,4900,10201,6400,13225,14641,4900,5929,4900,12321,14400,1024,3721,1024,9025,10609,14400,11664,7396,3481,100,81,81,15625,100,81,81,4900,7396,5184,4900,1024,100,81,81,15129,100,81,81,81,3025,2401,1024,1600,3025,5184,2809,3025,7396,1024,1156,13924,7225,6400,13689,9409,3249,2704,11025,14161,6084,11664,4900,6241,3025,4900,10201,6400,13225,14641,4900,5929,4900,12321,14400,1156,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,15625,3481,100,81,81,81,10609,14400,11664,7396,5776,4900,7396,4900,14400,4900,1024,13924,7225,6400,13689,9409,3249,2704,11025,14161,6084,11664,4900,6241,3025,4900,10201,6400,13225,14641,4900,5929,4900,12321,14400,3481,100,81,81,15625,3481,100,81,15625,3481,100,15625,3481,100,100,13924,7225,6400,9025,2401,2916,10609,9025,5184,4900,14400,13689,9409,3249,4900,11664,9409,5041,4900,10609,14400,13225,11664,14161,2916,2401,13225,2704,7396,13225,12544,9409,7396,1024,3721,1024,15129,100,81,9025,2304,13225,5184,1024,3721,1024,4489,11881,9801,5929,13225,4489,2704,9801,1600,10404,4900,14400,6084,13225,5184,4489,11881,9801,1024,10609,3136,11664,9409,14400,13225,11664,13689,9409,3249,4900,11664,9409,1681,3481,100,81,9025,6241,4900,10609,14400,13225,11664,11025,2304,1024,3721,1024,6241,4900,10609,14400,13225,11664,11025,2304,1024,10609,3136,11664,9409,14400,13225,11664,13689,9409,3249,4900,11664,9409,3481,100,81,9025,6241,4900,10609,14400,13225,11664,5776,3025,11664,1024,3721,1024,6241,4900,10609,14400,13225,11664,5776,3025,11664,1024,10609,3136,11664,9409,14400,13225,11664,13689,9409,3249,4900,11664,9409,3481,100,81,13924,7225,6400,13689,9409,3249,4900,11664,9409,6084,13225,5184,3025,14400,3025,13225,2916,1024,3721,1024,9025,2304,13225,5184,3481,100,81,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,5041,4900,10609,14400,13225,11664,5776,9409,14400,9409,1024,3721,1024,8281,9025,6241,4900,10609,14400,13225,11664,5776,3025,11664,1936,9025,6241,4900,10609,14400,13225,11664,11025,2304,8649,3481,100,81,2304,3136,12544,7396,3025,10609,5041,9409,11664,3025,9409,12544,7396,4900,1024,1156,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,5041,4900,10609,14400,13225,11664,5776,9409,14400,9409,1156,3481,100,81,2304,3136,12544,7396,3025,10609,5041,9409,11664,3025,9409,12544,7396,4900,1024,1156,13924,7225,6400,13689,9409,3249,4900,11664,9409,6084,13225,5184,3025,14400,3025,13225,2916,1156,3481,100,15625,3481,100,100,13924,7225,6400,9025,2401,2916,10609,9025,10609,11664,4900,9409,14400,4900,9801,13225,10609,9409,7396,13689,9409,3249,4900,11664,9409,1024,3721,1024,15129,100,81,3025,2401,1024,1089,1600,12100,9409,5184,14161,2916,14400,4900,11664,2401,9409,10609,4900,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,15625,3481,100,81,9025,10609,9409,3249,1024,3721,1024,1156,10609,9409,3249,4900,11664,9409,1156,1024,10609,9409,3249,13689,11664,4900,9409,14400,4900,1024,8281,4356,1936,4356,1936,4356,8649,3481,100,81,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1024,3721,1024,9025,10609,9409,3249,3481,100,81,9025,10609,9409,3249,1024,5184,4900,14400,6084,13225,5184,1024,13924,7225,6400,13689,9409,3249,4900,11664,9409,6084,13225,5184,3025,14400,3025,13225,2916,3481,100,81,9025,10609,9409,3249,1024,5184,4900,14400,5041,4900,10609,14400,13225,11664,5776,3025,11664,4489,2916,14641,11025,2304,1024,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,5041,4900,10609,14400,13225,11664,5776,9409,14400,9409,3481,100,81,9025,10609,9409,3249,100,15625,3481,100,100,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,10609,11664,4900,9409,14400,4900,9801,13225,10609,9409,7396,13689,9409,3249,4900,11664,9409,1024,3721,1024,8281,1521,1849,1156,1521,1156,1849,1521,8100,13924,1521,1849,1156,1521,1156,1849,1521,1936,1024,13924,7225,6400,9025,2401,2916,10609,9025,10609,11664,4900,9409,14400,4900,9801,13225,10609,9409,7396,13689,9409,3249,4900,11664,9409,8649,3481,100,2304,3136,12544,7396,3025,10609,5041,9409,11664,3025,9409,12544,7396,4900,1024,1521,1849,1156,1521,1156,1849,1521,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,10609,11664,4900,9409,14400,4900,9801,13225,10609,9409,7396,13689,9409,3249,4900,11664,9409,1521,1849,1156,1521,1156,1849,1521,3481,100,100,13924,7225,6400,9025,2401,2916,10609,9025,5184,4900,14400,9801,13225,10609,9409,7396,13689,9409,3249,4900,11664,9409,1024,3721,1024,15129,100,81,3025,2401,1024,1089,1600,12100,9409,5184,14161,2916,14400,4900,11664,2401,9409,10609,4900,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,15625,3481,100,81,3025,2401,1600,3025,5184,2809,3025,7396,1024,1156,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1156,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,15625,3481,100,81,8281,8649,1024,5184,2304,9409,10201,2916,1024,15129,100,81,81,1600,2401,3025,2916,14641,5776,3025,5184,2304,7396,9409,4225,1024,2601,7056,4624,1681,1024,10609,7396,13225,5184,4900,5776,3025,5184,2304,7396,9409,4225,1024,7056,3481,100,81,81,5184,7396,4900,4900,2304,1024,7056,3481,100,81,81,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1024,10609,9409,3249,4900,11664,9409,13924,2401,2401,4900,10609,14400,1024,8281,1156,14161,2916,14400,4900,11664,2916,9409,7396,1156,1936,1156,10816,9409,10609,14884,1156,8649,3481,100,81,81,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1024,10609,9409,3249,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,81,15625,3481,100,15625,3481,100,100,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,5184,4900,14400,9801,13225,10609,9409,7396,13689,9409,3249,4900,11664,9409,1024,3721,1024,8281,1521,1849,1156,1521,1156,1849,1521,8100,13924,1521,1849,1156,1521,1156,1849,1521,1936,1024,13924,7225,6400,9025,2401,2916,10609,9025,5184,4900,14400,9801,13225,10609,9409,7396,13689,9409,3249,4900,11664,9409,8649,3481,100,2304,3136,12544,7396,3025,10609,5041,9409,11664,3025,9409,12544,7396,4900,1024,1521,1849,1156,1521,1156,1849,1521,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,5184,4900,14400,9801,13225,10609,9409,7396,13689,9409,3249,4900,11664,9409,1521,1849,1156,1521,1156,1849,1521,3481,100,100,13924,7225,6400,9025,2401,2916,10609,9025,14641,4900,7396,4900,14400,4900,9801,13225,10609,9409,7396,13689,9409,3249,4900,11664,9409,1024,3721,1024,15129,100,81,3025,2401,1089,1600,12100,9409,5184,14161,2916,14400,4900,11664,2401,9409,10609,4900,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,15625,3481,100,81,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1024,10609,9409,3249,4900,11664,9409,13924,2401,2401,4900,10609,14400,1024,8281,1156,5929,4900,11664,3249,3025,2916,9409,14400,4900,1156,1936,1156,10816,9409,10609,14884,1156,8649,3481,100,81,3025,2401,1024,1089,1600,2304,7396,9409,4225,4900,11664,1024,3025,2916,1024,10609,9409,7396,7396,1024,10816,14161,11881,9025,2401,2916,10609,9025,7396,3025,5184,14400,13689,3136,11664,9409,14400,13225,11664,6084,7396,9409,4225,4900,11664,5184,1681,1024,14400,12100,4900,2916,1024,100,81,15129,100,81,81,10609,3136,11664,9409,14400,13225,11664,13689,9409,3249,4900,11664,9409,1024,10609,9409,3249,4900,11664,9409,13924,2401,2401,4900,10609,14400,1024,8281,1156,14161,2916,14400,4900,11664,2916,9409,7396,1156,1936,1156,10816,9409,10609,14884,1156,8649,3481,100,81,15625,3481,100,81,10609,9409,3249,5776,4900,5184,14400,11664,13225,4225,1024,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,3481,100,81,3025,2401,1600,1089,9409,7396,3025,6241,4900,1024,2304,7396,9409,4225,4900,11664,1681,1024,14400,12100,4900,2916,1024,15129,13225,2304,4900,2916,6400,9409,2304,1024,14400,11664,3136,4900,3481,15625,3481,100,81,8281,8649,1024,5184,2304,9409,10201,2916,1024,15129,100,81,81,1600,2401,3025,2916,14641,5776,3025,5184,2304,7396,9409,4225,1024,2601,7056,4624,1681,1024,10609,7396,13225,5184,4900,5776,3025,5184,2304,7396,9409,4225,1024,7056,3481,100,81,81,5184,7396,4900,4900,2304,1024,7056,3481,100,81,81,13225,2304,4900,2916,13689,3136,11664,9409,14400,13225,11664,14161,2916,14400,4900,11664,2401,9409,10609,4900,3481,100,81,15625,3481,100,15625,3481,100,100,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,14641,4900,7396,4900,14400,4900,9801,13225,10609,9409,7396,13689,9409,3249,4900,11664,9409,1024,3721,1024,8281,1521,1849,1156,1521,1156,1849,1521,8100,13924,1521,1849,1156,1521,1156,1849,1521,1936,1024,13924,7225,6400,9025,2401,2916,10609,9025,14641,4900,7396,4900,14400,4900,9801,13225,10609,9409,7396,13689,9409,3249,4900,11664,9409,8649,3481,100,2304,3136,12544,7396,3025,10609,5041,9409,11664,3025,9409,12544,7396,4900,1024,1521,1849,1156,1521,1156,1849,1521,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,14641,4900,7396,4900,14400,4900,9801,13225,10609,9409,7396,13689,9409,3249,4900,11664,9409,1521,1849,1156,1521,1156,1849,1521,3481,100,100,13924,7225,6400,9025,2401,2916,10609,9025,4900,2916,9409,12544,7396,4900,9801,13225,10609,9409,7396,6084,7396,9409,4225,4900,11664,1024,3721,1024,15129,100,81,2304,9409,11664,9409,3249,5184,8281,1156,9025,4900,2916,9409,12544,7396,4900,1156,8649,3481,100,81,3025,2401,1024,1089,1600,12100,9409,5184,14161,2916,14400,4900,11664,2401,9409,10609,4900,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,15625,3481,100,81,2304,7396,9409,4225,4900,11664,1024,9409,7396,7396,13225,10201,5776,9409,3249,9409,10404,4900,1024,9025,4900,2916,9409,12544,7396,4900,3481,100,81,2304,7396,9409,4225,4900,11664,1024,5184,4900,14400,13689,9409,2304,14400,3025,6241,4900,1024,1089,9025,4900,2916,9409,12544,7396,4900,3481,100,81,3025,2401,1024,1089,1600,1600,6241,4900,12100,3025,10609,7396,4900,1024,2304,7396,9409,4225,4900,11664,1681,1024,3025,5184,13924,7569,3136,9409,7396,5929,13225,1024,2304,7396,9409,4225,4900,11664,1681,1024,14400,12100,4900,2916,1024,100,81,15129,100,81,81,3025,2401,1600,1600,14641,11664,3025,6241,4900,11664,1024,6241,4900,12100,3025,10609,7396,4900,1024,2304,7396,9409,4225,4900,11664,1681,1024,3025,5184,13924,7569,3136,9409,7396,5929,13225,1024,2304,7396,9409,4225,4900,11664,1681,1024,14400,12100,4900,2916,1024,100,81,81,15129,100,81,81,81,6241,4900,12100,3025,10609,7396,4900,1024,2304,7396,9409,4225,4900,11664,1024,4900,2916,9409,12544,7396,4900,11881,3025,3249,3136,7396,9409,14400,3025,13225,2916,1024,9025,4900,2916,9409,12544,7396,4900,3481,100,81,81,15625,3481,100,81,15625,3481,100,15625,3481,100,100,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,4900,2916,9409,12544,7396,4900,9801,13225,10609,9409,7396,6084,7396,9409,4225,4900,11664,1024,3721,1024,8281,1521,1849,1156,1521,1156,1849,1521,8100,13924,1521,1849,1156,1521,1156,1849,1521,1936,1024,13924,7225,6400,9025,2401,2916,10609,9025,4900,2916,9409,12544,7396,4900,9801,13225,10609,9409,7396,6084,7396,9409,4225,4900,11664,8649,3481,100,2304,3136,12544,7396,3025,10609,5041,9409,11664,3025,9409,12544,7396,4900,1024,1521,1849,1156,1521,1156,1849,1521,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,4900,2916,9409,12544,7396,4900,9801,13225,10609,9409,7396,6084,7396,9409,4225,4900,11664,1521,1849,1156,1521,1156,1849,1521,3481,100,100,13924,7225,6400,9025,2401,2916,10609,9025,5184,2304,9409,10201,2916,9801,13225,10609,9409,7396,11881,10609,11664,4900,4900,2916,7921,9409,14641,4900,1024,3721,1024,15129,100,81,2304,9409,11664,9409,3249,5184,1024,8281,1156,9025,12544,13225,11664,14641,4900,11664,6400,13225,14641,4900,1156,1936,1156,9025,2401,9409,14641,4900,6400,13225,14641,4900,1156,8649,3481,100,81,3025,2401,1024,1089,1600,12100,9409,5184,14161,2916,14400,4900,11664,2401,9409,10609,4900,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,15625,3481,100,81,9025,2401,9409,14641,4900,11881,2304,4900,4900,14641,1024,3721,1024,1600,13689,9409,3249,2704,11025,14161,7921,9409,14641,4900,11881,2304,4900,4900,14641,2209,7056,4356,1681,3481,100,81,9025,2401,9409,14641,4900,13689,13225,7396,13225,11664,1024,3721,1024,13689,9409,3249,2704,11025,14161,7921,9409,14641,4900,13689,13225,7396,13225,11664,3481,100,81,9025,12544,13225,11664,14641,4900,11664,12769,9409,2916,14641,7396,4900,1024,3721,1024,4356,1024,5184,2304,9409,10201,2916,1024,15129,15625,3481,100,81,9025,2401,9409,14641,4900,12769,9409,2916,14641,7396,4900,1024,3721,1024,4356,1024,5184,2304,9409,10201,2916,1024,15129,15625,3481,100,81,9025,3025,5184,5776,11664,3025,6241,4900,11664,1024,3721,1024,2401,9409,7396,5184,4900,3481,100,100,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,5776,11664,3025,6241,4900,11664,1024,5625,6241,4900,11664,11664,3025,14641,4900,1156,3481,100,81,3025,2401,1600,1600,9025,12544,13225,11664,14641,4900,11664,6400,13225,14641,4900,1024,3721,3721,1024,7056,1681,1024,1444,1444,1024,1600,9025,2401,9409,14641,4900,6400,13225,14641,4900,1024,3721,3721,1024,7056,1681,1024,1444,1444,1024,1089,1600,6241,4900,12100,3025,10609,7396,4900,1024,2304,7396,9409,4225,4900,11664,1024,3025,5184,13924,7569,3136,9409,7396,5929,13225,1024,2304,7396,9409,4225,4900,11664,1681,1681,1024,14400,12100,4900,2916,1024,100,81,15129,100,81,81,3025,2401,1024,1600,1600,14641,11664,3025,6241,4900,11664,1024,6241,4900,12100,3025,10609,7396,4900,1024,2304,7396,9409,4225,4900,11664,1681,1024,3025,5184,13924,7569,3136,9409,7396,5929,13225,1024,2304,7396,9409,4225,4900,11664,1681,1024,14400,12100,4900,2916,1024,100,81,81,15129,100,81,81,81,9025,2401,9409,14641,4900,11881,2304,4900,4900,14641,1024,3721,1024,4356,2116,7056,3481,100,81,81,81,9025,3025,5184,5776,11664,3025,6241,4900,11664,1024,3721,1024,14400,11664,3136,4900,3481,100,81,81,15625,3481,100,81,15625,3481,100,81,3025,2401,1024,1600,9025,12544,13225,11664,14641,4900,11664,6400,13225,14641,4900,1024,1089,3721,1024,2025,7056,1681,1024,14400,12100,4900,2916,1024,15129,9025,12544,13225,11664,14641,4900,11664,12769,9409,2916,14641,7396,4900,1024,3721,1024,8281,9025,12544,13225,11664,14641,4900,11664,6400,13225,14641,4900,1936,9025,2401,9409,14641,4900,11881,2304,4900,4900,14641,1936,2401,9409,7396,5184,4900,1936,2401,9409,7396,5184,4900,8649,1024,5184,2304,9409,10201,2916,1024,10816,14161,11881,9025,2401,2916,10609,9025,10609,3025,2916,4900,3249,9409,10816,13225,11664,14641,4900,11664,3481,15625,3481,100,81,3025,2401,1024,1600,9025,2401,9409,14641,4900,11881,2304,4900,4900,14641,1024,1089,3721,1024,2025,7056,1681,1024,14400,12100,4900,2916,1024,15129,9025,2401,9409,14641,4900,12769,9409,2916,14641,7396,4900,1024,3721,1024,8281,9025,2401,9409,14641,4900,6400,13225,14641,4900,1936,9025,2401,9409,14641,4900,13689,13225,7396,13225,11664,1936,9025,2401,9409,14641,4900,11881,2304,4900,4900,14641,1936,4356,8649,1024,5184,2304,9409,10201,2916,1024,10816,14161,11881,9025,2401,2916,10609,9025,2401,9409,14641,4900,13924,2401,2401,4900,10609,14400,3481,15625,3481,100,81,3025,2401,1024,1600,9025,3025,5184,5776,11664,3025,6241,4900,11664,1681,1024,14400,12100,4900,2916,1024,15129,5184,7396,4900,4900,2304,1024,2601,3481,1024,8281,14400,11664,3136,4900,8649,1024,10609,9409,7396,7396,1024,1600,13924,7225,6400,7921,2916,10609,4489,11664,11664,9409,4225,1024,5184,4900,7396,4900,10609,14400,1024,11449,1681,3481,15625,3481,100,81,3025,2401,1024,1600,1600,9025,2401,9409,14641,4900,6400,13225,14641,4900,1024,3721,3721,1024,7056,1681,1024,1444,1444,1024,1600,9025,12544,13225,11664,14641,4900,11664,6400,13225,14641,4900,1024,1089,3721,1024,7056,1681,1681,1024,14400,12100,4900,2916,1024,15129,100,81,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,5184,10609,11664,3025,2304,14400,5776,13225,2916,4900,1024,9025,2401,9409,14641,4900,12769,9409,2916,14641,7396,4900,15625,3481,100,81,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13924,7225,6400,11881,4900,7396,4900,10609,14400,4900,14641,6400,3136,5184,3025,10609,1156,15625,3481,100,81,81,5184,7396,4900,4900,2304,1024,7056,3481,100,81,81,1600,9025,2401,9409,14641,4900,11881,2304,4900,4900,14641,2025,7056,1681,1024,2401,9409,14641,4900,6400,3136,5184,3025,10609,1024,7056,3481,100,81,81,2304,7396,9409,4225,6400,3136,5184,3025,10609,1024,13924,7225,6400,11881,4900,7396,4900,10609,14400,4900,14641,6400,3136,5184,3025,10609,3481,100,81,15625,3481,100,81,3025,2401,1600,1600,9025,2401,9409,14641,4900,6400,13225,14641,4900,1024,3721,3721,1024,7056,1681,1024,1444,1444,1024,1600,9025,12544,13225,11664,14641,4900,11664,6400,13225,14641,4900,1024,3721,3721,1024,7056,1681,1681,1024,14400,12100,4900,2916,1024,100,81,15129,100,81,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,5184,10609,11664,3025,2304,14400,5776,13225,2916,4900,1024,9025,2401,9409,14641,4900,12769,9409,2916,14641,7396,4900,15625,3481,100,81,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13924,7225,6400,11881,4900,7396,4900,10609,14400,4900,14641,6400,3136,5184,3025,10609,1156,15625,3481,100,81,81,5184,7396,4900,4900,2304,1024,7056,3481,100,81,81,2304,7396,9409,4225,6400,3136,5184,3025,10609,1024,1521,1849,1156,1521,1156,1849,1521,1521,1849,1156,1521,1156,1849,1521,3481,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,1600,9025,2401,9409,14641,4900,11881,2304,4900,4900,14641,2025,7056,1681,1024,2401,9409,14641,4900,6400,3136,5184,3025,10609,1024,4356,3481,1156,3481,100,81,15625,3481,100,15625,3481,100,100,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,5184,2304,9409,10201,2916,9801,13225,10609,9409,7396,11881,10609,11664,4900,4900,2916,7921,9409,14641,4900,1024,3721,1024,8281,1521,1849,1156,1521,1156,1849,1521,8100,13924,1521,1849,1156,1521,1156,1849,1521,1936,1024,13924,7225,6400,9025,2401,2916,10609,9025,5184,2304,9409,10201,2916,9801,13225,10609,9409,7396,11881,10609,11664,4900,4900,2916,7921,9409,14641,4900,8649,3481,100,2304,3136,12544,7396,3025,10609,5041,9409,11664,3025,9409,12544,7396,4900,1024,1521,1849,1156,1521,1156,1849,1521,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,5184,2304,9409,10201,2916,9801,13225,10609,9409,7396,11881,10609,11664,4900,4900,2916,7921,9409,14641,4900,1521,1849,1156,1521,1156,1849,1521,3481,100,100,13924,7225,6400,9025,2401,2916,10609,9025,5184,2304,9409,10201,2916,5929,3025,14400,7396,4900,5929,4900,12321,14400,1024,3721,1024,15129,100,81,3025,2401,1024,1089,1600,12100,9409,5184,14161,2916,14400,4900,11664,2401,9409,10609,4900,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,15625,3481,100,81,3025,2401,1600,3025,5184,2809,3025,7396,1024,1156,13689,9409,3249,2704,11025,14161,5929,3025,14400,7396,4900,1156,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,15625,3481,100,81,3025,2401,1600,13689,9409,3249,2704,11025,14161,5929,3025,14400,7396,4900,1024,3025,5184,13924,7569,3136,9409,7396,5929,13225,1024,1156,1156,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,15625,3481,100,81,8281,100,81,81,8281,100,81,81,81,8281,13689,9409,3249,2704,11025,14161,5929,3025,14400,7396,4900,1936,1024,1156,3600,14400,1024,9409,7396,3025,10404,2916,1024,3721,1024,1521,1849,1156,1521,1156,1849,1521,10609,4900,2916,14400,4900,11664,1521,1849,1156,1521,1156,1849,1521,1024,5184,12100,9409,14641,13225,10201,1024,3721,1024,1521,1849,1156,1521,1156,1849,1521,7056,1521,1849,1156,1521,1156,1849,1521,1024,5184,3025,6724,4900,1024,3721,1024,1521,1849,1156,1521,1156,1849,1521,7056,1521,1849,1156,1521,1156,1849,1521,1024,2401,13225,2916,14400,3721,1521,1849,1156,1521,1156,1849,1521,6084,3136,11664,3025,5184,14400,9409,10816,13225,7396,14641,1521,1849,1156,1521,1156,1849,1521,3844,1369,7056,3600,2209,14400,3844,1156,1936,12996,4356,8649,100,81,81,8649,100,81,8649,1024,5184,2304,9409,10201,2916,1024,10816,14161,11881,9025,2401,2916,10609,9025,14400,4225,2304,4900,5929,4900,12321,14400,3481,100,15625,3481,100,100,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,5184,2304,9409,10201,2916,5929,3025,14400,7396,4900,5929,4900,12321,14400,1024,3721,1024,8281,1521,1849,1156,1521,1156,1849,1521,8100,13924,1521,1849,1156,1521,1156,1849,1521,1936,1024,13924,7225,6400,9025,2401,2916,10609,9025,5184,2304,9409,10201,2916,5929,3025,14400,7396,4900,5929,4900,12321,14400,8649,3481,100,2304,3136,12544,7396,3025,10609,5041,9409,11664,3025,9409,12544,7396,4900,1024,1521,1849,1156,1521,1156,1849,1521,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,5184,2304,9409,10201,2916,5929,3025,14400,7396,4900,5929,4900,12321,14400,1521,1849,1156,1521,1156,1849,1521,3481,100,100,2304,11664,3025,6241,9409,14400,4900,1024,9025,2401,2916,10609,1024,3721,1024,15129,100,81,9025,10609,13225,14641,4900,1024,3721,1024,13456,4489,6400,9025,8100,13924,2401,2916,10609,9025,5184,14400,9409,11664,14400,6084,7396,4225,13689,3025,2916,4900,3249,9409,14400,3025,10609,13689,13225,14641,4900,1024,1225,1024,7056,3481,100,81,9025,2304,9409,11664,9409,3249,5184,1024,3721,1024,1600,9025,14400,12100,3025,5184,1024,5184,4900,7396,4900,10609,14400,1024,4356,1681,3481,100,100,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13689,9409,3249,2704,11025,14161,7921,9409,14641,4900,11881,2304,4900,4900,14641,1156,15625,3481,100,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13689,9409,3249,2704,11025,14161,7921,9409,14641,4900,13689,13225,7396,13225,11664,1156,15625,3481,100,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13689,9409,3249,2704,11025,14161,5929,3025,14400,7396,4900,1156,15625,3481,100,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13689,9409,3249,2704,11025,14161,9801,4900,2916,10404,14400,12100,1156,15625,3481,100,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13689,9409,3249,2704,11025,14161,5776,3025,5184,14400,9409,2916,10609,4900,7921,11664,13225,3249,13689,4900,2916,14400,4900,11664,1156,15625,3481,100,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13689,9409,3249,2704,11025,14161,12769,4900,3025,10404,12100,14400,4489,12544,13225,6241,4900,13689,4900,2916,14400,4900,11664,1156,15625,3481,100,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13689,9409,3249,2704,11025,14161,8100,13225,14400,9409,14400,3025,13225,2916,5776,3025,11664,4900,10609,14400,3025,13225,2916,1156,15625,3481,100,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,10609,11664,4900,9409,14400,4900,9801,13225,10609,9409,7396,13689,9409,3249,4900,11664,9409,1156,15625,3481,100,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,5184,4900,14400,9801,13225,10609,9409,7396,13689,9409,3249,4900,11664,9409,1156,15625,3481,100,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,5184,2304,9409,10201,2916,5929,3025,14400,7396,4900,5929,4900,12321,14400,1156,15625,3481,100,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,14641,4900,7396,4900,14400,4900,9801,13225,10609,9409,7396,13689,9409,3249,4900,11664,9409,1156,15625,3481,100,100,81,9025,2401,9409,14641,4900,11881,2304,4900,4900,14641,1024,3721,1024,1600,13689,9409,3249,2704,11025,14161,7921,9409,14641,4900,11881,2304,4900,4900,14641,2209,7056,4356,1681,3481,100,100,81,8281,8281,8649,1936,15129,8281,8649,1024,10609,9409,7396,7396,1024,1600,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,10609,11664,4900,9409,14400,4900,9801,13225,10609,9409,7396,13689,9409,3249,4900,11664,9409,1024,1225,1024,7056,1681,15625,8649,1024,11664,4900,3249,13225,14400,4900,13924,12321,4900,10609,1024,8281,1521,1849,1156,1521,1156,1849,1521,10609,9409,7396,7396,1521,1849,1156,1521,1156,1849,1521,8649,3481,100,100,81,9025,2304,9409,11664,9409,3249,5184,1024,10609,9409,7396,7396,1024,9025,10609,13225,14641,4900,3481,100,100,81,8281,8281,2401,9409,7396,5184,4900,8649,1936,15129,9025,14400,12100,3025,5184,1024,10609,9409,7396,7396,1024,1600,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,4900,2916,9409,12544,7396,4900,9801,13225,10609,9409,7396,6084,7396,9409,4225,4900,11664,1024,1225,1024,7056,1681,15625,8649,1024,11664,4900,3249,13225,14400,4900,13924,12321,4900,10609,1024,8281,1521,1849,1156,1521,1156,1849,1521,10609,9409,7396,7396,1521,1849,1156,1521,1156,1849,1521,8649,3481,100,100,81,8281,8281,4356,1936,4356,8649,1936,15129,9025,14400,12100,3025,5184,1024,5184,2304,9409,10201,2916,1024,1600,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,5184,2304,9409,10201,2916,9801,13225,10609,9409,7396,11881,10609,11664,4900,4900,2916,7921,9409,14641,4900,1024,5184,4900,7396,4900,10609,14400,1024,7056,1681,15625,8649,1024,11664,4900,3249,13225,14400,4900,13924,12321,4900,10609,1024,8281,1521,1849,1156,1521,1156,1849,1521,10609,9409,7396,7396,1521,1849,1156,1521,1156,1849,1521,8649,3481,100,81,100,81,5184,7396,4900,4900,2304,1024,1600,9025,2401,9409,14641,4900,11881,2304,4900,4900,14641,1024,1849,7056,1681,3481,100,100,81,8281,8281,8649,1936,15129,8281,8649,1024,10609,9409,7396,7396,1024,1600,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,5184,4900,14400,9801,13225,10609,9409,7396,13689,9409,3249,4900,11664,9409,1024,1225,1024,7056,1681,15625,8649,1024,11664,4900,3249,13225,14400,4900,13924,12321,4900,10609,1024,8281,1521,1849,1156,1521,1156,1849,1521,10609,9409,7396,7396,1521,1849,1156,1521,1156,1849,1521,8649,3481,100,100,81,8281,8281,2025,7056,1936,7056,8649,1936,15129,9025,14400,12100,3025,5184,1024,5184,2304,9409,10201,2916,1024,1600,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,5184,2304,9409,10201,2916,9801,13225,10609,9409,7396,11881,10609,11664,4900,4900,2916,7921,9409,14641,4900,1024,5184,4900,7396,4900,10609,14400,1024,7056,1681,15625,8649,1024,11664,4900,3249,13225,14400,4900,13924,12321,4900,10609,1024,8281,1521,1849,1156,1521,1156,1849,1521,10609,9409,7396,7396,1521,1849,1156,1521,1156,1849,1521,8649,3481,100,100,81,5184,7396,4900,4900,2304,1024,1600,9025,2401,9409,14641,4900,11881,2304,4900,4900,14641,1024,1849,7056,1681,3481,100,100,81,8281,8281,8649,1936,15129,8281,8649,1024,10609,9409,7396,7396,1024,1600,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,5184,2304,9409,10201,2916,5929,3025,14400,7396,4900,5929,4900,12321,14400,1024,1225,1024,7056,1681,15625,8649,1024,11664,4900,3249,13225,14400,4900,13924,12321,4900,10609,1024,8281,1521,1849,1156,1521,1156,1849,1521,10609,9409,7396,7396,1521,1849,1156,1521,1156,1849,1521,8649,3481,100,100,81,5184,7396,4900,4900,2304,1024,13689,9409,3249,2704,11025,14161,9801,4900,2916,10404,14400,12100,3481,100,100,81,8281,8281,2025,7056,1936,4356,8649,1936,15129,9025,14400,12100,3025,5184,1024,5184,2304,9409,10201,2916,1024,1600,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,5184,2304,9409,10201,2916,9801,13225,10609,9409,7396,11881,10609,11664,4900,4900,2916,7921,9409,14641,4900,1024,5184,4900,7396,4900,10609,14400,1024,7056,1681,15625,8649,1024,11664,4900,3249,13225,14400,4900,13924,12321,4900,10609,1024,8281,1521,1849,1156,1521,1156,1849,1521,10609,9409,7396,7396,1521,1849,1156,1521,1156,1849,1521,8649,3481,100,100,81,5184,7396,4900,4900,2304,1024,1600,9025,2401,9409,14641,4900,11881,2304,4900,4900,14641,1024,1849,7056,1681,3481,100,100,81,8281,8281,8649,1936,15129,8281,8649,1024,10609,9409,7396,7396,1024,1600,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,14641,4900,7396,4900,14400,4900,9801,13225,10609,9409,7396,13689,9409,3249,4900,11664,9409,1024,1225,1024,7056,1681,15625,8649,1024,11664,4900,3249,13225,14400,4900,13924,12321,4900,10609,1024,8281,1521,1849,1156,1521,1156,1849,1521,10609,9409,7396,7396,1521,1849,1156,1521,1156,1849,1521,8649,3481,100,100,81,13924,7225,6400,14161,5184,13689,3025,2916,4900,3249,9409,14400,3025,10609,8100,3136,2916,2916,3025,2916,10404,1024,3721,1024,2401,9409,7396,5184,4900,3481,100,81,2304,3136,12544,7396,3025,10609,5041,9409,11664,3025,9409,12544,7396,4900,1024,1156,13924,7225,6400,14161,5184,13689,3025,2916,4900,3249,9409,14400,3025,10609,8100,3136,2916,2916,3025,2916,10404,1156,3481,100,100,81,8281,8281,7056,1936,7056,8649,1936,15129,9025,14400,12100,3025,5184,1024,5184,2304,9409,10201,2916,1024,1600,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,5184,2304,9409,10201,2916,9801,13225,10609,9409,7396,11881,10609,11664,4900,4900,2916,7921,9409,14641,4900,1024,5184,4900,7396,4900,10609,14400,1024,7056,1681,15625,8649,1024,11664,4900,3249,13225,14400,4900,13924,12321,4900,10609,1024,8281,1521,1849,1156,1521,1156,1849,1521,10609,9409,7396,7396,1521,1849,1156,1521,1156,1849,1521,8649,3481,100,100,81,5184,7396,4900,4900,2304,1024,1600,9025,2401,9409,14641,4900,11881,2304,4900,4900,14641,1024,1849,7056,1681,3481,100,100,81,8281,14400,11664,3136,4900,8649,1024,11664,4900,3249,13225,14400,4900,13924,12321,4900,10609,1024,8281,1156,5184,12100,13225,10201,13689,12100,9409,14400,1156,1936,4356,8649,3481,100,81,8281,8281,14400,11664,3136,4900,8649,1936,15129,9025,14400,12100,3025,5184,1024,10609,9409,7396,7396,1024,1600,13924,7225,6400,9025,8100,13924,2401,2916,10609,9025,4900,2916,9409,12544,7396,4900,9801,13225,10609,9409,7396,6084,7396,9409,4225,4900,11664,1024,1225,1024,7056,1681,15625,8649,1024,11664,4900,3249,13225,14400,4900,13924,12321,4900,10609,1024,8281,1521,1849,1156,1521,1156,1849,1521,10609,9409,7396,7396,1521,1849,1156,1521,1156,1849,1521,8649,3481,100,81,13924,7225,6400,11881,4900,11664,6241,4900,11664,14161,5184,13689,3025,2916,4900,3249,9409,14400,3025,10609,6084,7396,9409,4225,3025,2916,10404,1024,3721,1024,2916,3025,7396,3481,100,15625,3481,100,100,13456,4489,6400,9025,8100,13924,2401,2916,10609,9025,2304,7396,9409,4225,13924,7225,6400,13689,3025,2916,4900,3249,9409,14400,3025,10609,1024,3721,1024,8281,1521,1849,1156,1521,1156,1849,1521,14884,1521,1849,1156,1521,1156,1849,1521,1936,1024,9025,2401,2916,10609,8649,3481,100,2304,3136,12544,7396,3025,10609,5041,9409,11664,3025,9409,12544,7396,4900,1024,1521,1849,1156,1521,1156,1849,1521,13456,4489,6400,9025,8100,13924,2401,2916,10609,9025,2304,7396,9409,4225,13924,7225,6400,13689,3025,2916,4900,3249,9409,14400,3025,10609,1521,1849,1156,1521,1156,1849,1521,3481,100,100,13924,7225,6400,9025,2401,2916,10609,9025,5184,14400,9409,11664,14400,13689,3025,2916,4900,3249,9409,14400,3025,10609,11881,4900,7569,3136,4900,2916,10609,4900,2704,7396,13225,12544,9409,7396,1024,3721,1024,15129,100,81,2304,9409,11664,9409,3249,5184,8281,8281,1156,9025,10609,13225,14641,4900,1156,1936,15129,15625,8649,1936,8281,1156,9025,2304,9409,11664,9409,3249,5184,1156,1936,8281,8649,8649,1936,8281,1156,9025,7396,13225,10609,9409,7396,1156,1936,2401,9409,7396,5184,4900,8649,8649,3481,100,100,81,8281,8649,1024,10609,9409,7396,7396,1024,13924,7225,6400,9025,2401,2916,10609,9025,5184,4900,14400,13689,9409,3249,4900,11664,9409,5041,4900,10609,14400,13225,11664,14161,2916,2401,13225,2704,7396,13225,12544,9409,7396,3481,100,100,81,13924,7225,6400,14161,5184,13689,3025,2916,4900,3249,9409,14400,3025,10609,8100,3136,2916,2916,3025,2916,10404,1024,3721,1024,14400,11664,3136,4900,3481,100,81,2304,3136,12544,7396,3025,10609,5041,9409,11664,3025,9409,12544,7396,4900,1024,1156,13924,7225,6400,14161,5184,13689,3025,2916,4900,3249,9409,14400,3025,10609,8100,3136,2916,2916,3025,2916,10404,1156,3481,100,100,81,3025,2401,1024,1089,1600,9025,7396,13225,10609,9409,7396,1681,1024,14400,12100,4900,2916,1024,100,81,15129,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,6084,7396,9409,4225,1024,2704,7396,13225,12544,9409,7396,1156,3481,100,100,81,81,2304,11664,3025,6241,9409,14400,4900,1024,9025,2401,2916,10609,1024,3721,1024,9025,10609,13225,14641,4900,3481,100,100,81,81,13456,4489,6400,9025,8100,13924,2401,2916,10609,9025,5184,14400,9409,11664,14400,6084,7396,4225,13689,3025,2916,4900,3249,9409,14400,3025,10609,13689,13225,14641,4900,1024,3721,1024,8281,1521,1849,1156,1521,1156,1849,1521,5184,14400,11664,1521,1849,1156,1521,1156,1849,1521,1936,1024,9025,2401,2916,10609,8649,3481,100,81,81,2304,3136,12544,7396,3025,10609,5041,9409,11664,3025,9409,12544,7396,4900,1024,1521,1849,1156,1521,1156,1849,1521,13456,4489,6400,9025,8100,13924,2401,2916,10609,9025,5184,14400,9409,11664,14400,6084,7396,4225,13689,3025,2916,4900,3249,9409,14400,3025,10609,13689,13225,14641,4900,1521,1849,1156,1521,1156,1849,1521,3481,100,100,81,81,8281,8281,9025,2304,9409,11664,9409,3249,5184,8649,1936,100,81,81,15129,100,81,81,81,9025,14400,12100,3025,5184,1024,5184,2304,9409,10201,2916,1024,1600,13456,4489,6400,9025,8100,13924,2401,2916,10609,9025,2304,7396,9409,4225,13924,7225,6400,13689,3025,2916,4900,3249,9409,14400,3025,10609,1024,1225,1024,7056,1681,3481,100,81,81,15625,8649,1024,11664,4900,3249,13225,14400,4900,13924,12321,4900,10609,1024,8281,1156,10609,9409,7396,7396,1156,1936,1024,4624,8649,3481,100,81,15625,100,81,4900,7396,5184,4900,1024,100,81,15129,100,81,81,10609,13225,3249,3249,4900,2916,14400,1024,1156,6084,7396,9409,4225,1024,9801,13225,10609,9409,7396,1156,3481,100,81,81,8281,9025,10609,13225,14641,4900,1936,9025,2304,9409,11664,9409,3249,5184,8649,1024,5184,2304,9409,10201,2916,1024,100,81,81,15129,100,81,81,81,9025,10609,13225,14641,4900,1024,3721,1024,1600,9025,14400,12100,3025,5184,1024,5184,4900,7396,4900,10609,14400,1024,4356,1681,3481,100,81,81,81,9025,2304,9409,11664,9409,3249,5184,1024,3721,1024,1600,9025,14400,12100,3025,5184,1024,5184,4900,7396,4900,10609,14400,1024,7056,1681,3481,100,81,81,81,9025,2401,9409,14641,4900,11881,2304,4900,4900,14641,1024,3721,1024,1600,13689,9409,3249,2704,11025,14161,7921,9409,14641,4900,11881,2304,4900,4900,14641,2209,7056,4356,1681,3481,100,81,81,81,10609,9409,7396,7396,1024,13924,7225,6400,9025,2401,2916,10609,9025,10609,11664,4900,9409,14400,4900,9801,13225,10609,9409,7396,13689,9409,3249,4900,11664,9409,3481,100,81,81,81,9025,2304,9409,11664,9409,3249,5184,1024,10609,9409,7396,7396,1024,9025,10609,13225,14641,4900,3481,100,81,81,81,8281,4356,1936,4356,8649,1024,5184,2304,9409,10201,2916,1024,13924,7225,6400,9025,2401,2916,10609,9025,5184,2304,9409,10201,2916,9801,13225,10609,9409,7396,11881,10609,11664,4900,4900,2916,7921,9409,14641,4900,3481,100,81,81,81,5184,7396,4900,4900,2304,1024,1600,9025,2401,9409,14641,4900,11881,2304,4900,4900,14641,1024,1849,7056,1681,3481,100,81,81,81,10609,9409,7396,7396,1024,13924,7225,6400,9025,2401,2916,10609,9025,5184,4900,14400,9801,13225,10609,9409,7396,13689,9409,3249,4900,11664,9409,3481,100,81,81,81,8281,14400,11664,3136,4900,8649,1024,10609,9409,7396,7396,1024,13924,7225,6400,9025,2401,2916,10609,9025,4900,2916,9409,12544,7396,4900,13689,9409,3249,4900,11664,9409,6084,11664,4900,6241,3025,4900,10201,6400,13225,14641,4900,5929,4900,12321,14400,3481,100,81,81,81,8281,2025,7056,1936,7056,8649,1024,5184,2304,9409,10201,2916,1024,13924,7225,6400,9025,2401,2916,10609,9025,5184,2304,9409,10201,2916,9801,13225,10609,9409,7396,11881,10609,11664,4900,4900,2916,7921,9409,14641,4900,3481,100,81,81,81,5184,7396,4900,4900,2304,1024,1600,9025,2401,9409,14641,4900,11881,2304,4900,4900,14641,1024,1849,7056,1681,3481,100,81,81,81,10609,9409,7396,7396,1024,13924,7225,6400,9025,2401,2916,10609,9025,5184,2304,9409,10201,2916,5929,3025,14400,7396,4900,5929,4900,12321,14400,3481,100,81,81,81,5184,7396,4900,4900,2304,1024,13689,9409,3249,2704,11025,14161,9801,4900,2916,10404,14400,12100,3481,100,81,81,81,8281,2025,7056,1936,4356,8649,1024,5184,2304,9409,10201,2916,1024,13924,7225,6400,9025,2401,2916,10609,9025,5184,2304,9409,10201,2916,9801,13225,10609,9409,7396,11881,10609,11664,4900,4900,2916,7921,9409,14641,4900,3481,100,81,81,81,5184,7396,4900,4900,2304,1024,1600,9025,2401,9409,14641,4900,11881,2304,4900,4900,14641,1024,1849,7056,1681,3481,100,81,81,81,8281,2401,9409,7396,5184,4900,8649,1024,10609,9409,7396,7396,1024,13924,7225,6400,9025,2401,2916,10609,9025,4900,2916,9409,12544,7396,4900,13689,9409,3249,4900,11664,9409,6084,11664,4900,6241,3025,4900,10201,6400,13225,14641,4900,5929,4900,12321,14400,3481,100,81,81,81,10609,9409,7396,7396,1024,13924,7225,6400,9025,2401,2916,10609,9025,14641,4900,7396,4900,14400,4900,9801,13225,10609,9409,7396,13689,9409,3249,4900,11664,9409,3481,100,81,81,81,8281,7056,1936,7056,8649,1024,5184,2304,9409,10201,2916,1024,13924,7225,6400,9025,2401,2916,10609,9025,5184,2304,9409,10201,2916,9801,13225,10609,9409,7396,11881,10609,11664,4900,4900,2916,7921,9409,14641,4900,3481,100,81,81,81,5184,7396,4900,4900,2304,1024,1600,9025,2401,9409,14641,4900,11881,2304,4900,4900,14641,1024,1849,7056,1681,3481,100,81,81,81,5184,12100,13225,10201,13689,12100,9409,14400,1024,14400,11664,3136,4900,3481,100,81,81,81,13924,7225,6400,14161,5184,13689,3025,2916,4900,3249,9409,14400,3025,10609,8100,3136,2916,2916,3025,2916,10404,1024,3721,1024,2401,9409,7396,5184,4900,3481,100,81,81,81,2304,3136,12544,7396,3025,10609,5041,9409,11664,3025,9409,12544,7396,4900,1024,1156,13924,7225,6400,14161,5184,13689,3025,2916,4900,3249,9409,14400,3025,10609,8100,3136,2916,2916,3025,2916,10404,1156,3481,100,81,81,15625,3481,100,81,15625,3481,100,15625,3481,100,100,13456,4489,6400,9025,2401,2916,10609,9025,3249,13225,14641,3136,7396,4900,13689,3025,2916,4900,3249,9409,14400,3025,10609,11881,4900,14400,14400,3025,2916,10404,5184,1024,3721,1024,15129,100,81,2304,9409,11664,9409,3249,5184,8281,1156,9025,13225,12544,2500,4900,10609,14400,1156,8649,3481,100,81,8281,8649,1024,10609,9409,7396,7396,1024,13924,7225,6400,9025,2401,2916,10609,9025,10609,9409,3249,4900,11664,9409,2704,11025,14161,3481,100,15625,3481,100,100,13456,4489,6400,9025,2401,2916,10609,9025,3249,13225,14641,3136,7396,4900,11881,14400,9409,14400,3025,13225,2916,9409,11664,4225,13689,9409,3249,1024,3721,1024,15129,100,81,2304,9409,11664,9409,3249,5184,8281,1156,9025,13225,12544,2500,4900,10609,14400,1156,8649,3481,100,81,8281,15129,15625,1936,8281,8649,8649,1024,10609,9409,7396,7396,1024,13924,7225,6400,9025,2401,2916,10609,9025,5184,14400,9409,11664,14400,13689,3025,2916,4900,3249,9409,14400,3025,10609,11881,4900,7569,3136,4900,2916,10609,4900,2704,7396,13225,12544,9409,7396,3481,100,15625,3481,100,100,13456,4489,6400,9025,2401,2916,10609,9025,3249,13225,14641,3136,7396,4900,9801,13225,13225,14884,4489,14400,13689,9409,3249,1024,3721,1024,15129,100,81,2304,9409,11664,9409,3249,5184,8281,1156,9025,13225,12544,2500,4900,10609,14400,1156,8649,3481,100,81,3025,2401,1600,3025,5184,2809,3025,7396,1024,1156,9025,13225,12544,2500,4900,10609,14400,1156,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,15625,3481,100,81,3025,2401,1600,9025,13225,12544,2500,4900,10609,14400,1024,3025,5184,13924,7569,3136,9409,7396,5929,13225,1024,13225,12544,2500,2809,3136,7396,7396,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,8281,10404,4900,14400,4489,5184,5184,3025,10404,2916,4900,14641,13689,3136,11664,9409,14400,13225,11664,9801,13225,10404,3025,10609,1024,2304,7396,9409,4225,4900,11664,1936,1024,1156,2809,5625,1024,5625,10816,13456,13924,13689,5929,1024,11881,13924,9801,13924,13689,5929,13924,5776,1156,8649,1024,10609,9409,7396,7396,1024,10816,14161,11881,9025,2401,2916,10609,9025,5184,12100,13225,10201,13689,3136,11664,9409,14400,13225,11664,7921,4900,4900,14641,12544,9409,10609,14884,6400,4900,5184,5184,9409,10404,4900,3481,15625,3481,100,81,3025,2401,1600,9025,13225,12544,2500,4900,10609,14400,1024,3025,2916,1024,9409,7396,7396,6084,7396,9409,4225,4900,11664,5184,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,8281,10404,4900,14400,4489,5184,5184,3025,10404,2916,4900,14641,13689,3136,11664,9409,14400,13225,11664,9801,13225,10404,3025,10609,1024,2304,7396,9409,4225,4900,11664,1936,1024,1156,13689,4489,2809,2809,5625,5929,1024,10816,13924,1024,4489,1024,6084,9801,4489,7744,13924,8100,1156,8649,1024,10609,9409,7396,7396,1024,10816,14161,11881,9025,2401,2916,10609,9025,5184,12100,13225,10201,13689,3136,11664,9409,14400,13225,11664,7921,4900,4900,14641,12544,9409,10609,14884,6400,4900,5184,5184,9409,10404,4900,3481,15625,3481,100,81,3025,2401,1600,1600,14641,11664,3025,6241,4900,11664,1024,9025,13225,12544,2500,4900,10609,14400,1681,1024,3025,2916,1024,9409,7396,7396,6084,7396,9409,4225,4900,11664,5184,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,8281,10404,4900,14400,4489,5184,5184,3025,10404,2916,4900,14641,13689,3136,11664,9409,14400,13225,11664,9801,13225,10404,3025,10609,1024,2304,7396,9409,4225,4900,11664,1936,1024,1156,13689,4489,2809,2809,5625,5929,1024,10816,13924,1024,4489,1024,6084,9801,4489,7744,13924,8100,1024,5041,13924,12769,14161,13689,9801,13924,1156,8649,1024,10609,9409,7396,7396,1024,10816,14161,11881,9025,2401,2916,10609,9025,5184,12100,13225,10201,13689,3136,11664,9409,14400,13225,11664,7921,4900,4900,14641,12544,9409,10609,14884,6400,4900,5184,5184,9409,10404,4900,3481,15625,3481,100,100,81,9025,10609,13225,14641,4900,1024,3721,1024,100,81,15129,100,81,81,9025,13225,12544,2500,4900,10609,14400,1024,3721,1024,1600,9025,14400,12100,3025,5184,1024,5184,4900,7396,4900,10609,14400,1024,4356,1681,3481,100,81,81,2304,11664,3025,6241,9409,14400,4900,1024,9025,2401,2916,10609,1024,3721,1024,100,81,81,15129,100,81,81,81,3025,2401,1024,1089,1600,12100,9409,5184,14161,2916,14400,4900,11664,2401,9409,10609,4900,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,15625,3481,100,81,81,81,9025,13225,12544,2500,4900,10609,14400,1024,3721,1024,1600,9025,14400,12100,3025,5184,1681,3481,100,81,81,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1156,15625,3481,100,81,81,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,1600,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1024,3025,5184,13924,7569,3136,9409,7396,5929,13225,1024,13225,12544,2500,2809,3136,7396,7396,1681,15625,3481,100,81,81,81,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1024,10609,9409,3249,11881,4900,14400,5929,9409,11664,10404,4900,14400,1024,9025,13225,12544,2500,4900,10609,14400,3481,100,81,81,81,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1024,10609,9409,3249,13689,13225,3249,3249,3025,14400,1024,7056,3481,100,81,81,15625,3481,100,81,81,13456,4489,6400,9025,8100,13924,2401,2916,10609,9025,10609,9409,3249,9801,14884,4489,14400,1024,3721,1024,8281,1521,1849,1156,1521,1156,1849,1521,9409,5184,14641,1521,1849,1156,1521,1156,1849,1521,1936,1024,9025,2401,2916,10609,8649,3481,100,81,81,2304,3136,12544,7396,3025,10609,5041,9409,11664,3025,9409,12544,7396,4900,1024,1521,1849,1156,1521,1156,1849,1521,13456,4489,6400,9025,8100,13924,2401,2916,10609,9025,10609,9409,3249,9801,14884,4489,14400,1521,1849,1156,1521,1156,1849,1521,3481,100,81,81,8281,9025,13225,12544,2500,4900,10609,14400,1936,100,81,81,15129,100,81,81,81,9025,14400,12100,3025,5184,1024,5184,2304,9409,10201,2916,1024,1600,13456,4489,6400,9025,8100,13924,2401,2916,10609,9025,10609,9409,3249,9801,14884,4489,14400,1024,1225,1024,7056,1681,3481,100,81,81,15625,8649,1024,11664,4900,3249,13225,14400,4900,13924,12321,4900,10609,1024,8281,1156,10609,9409,7396,7396,1156,1936,4356,8649,3481,100,81,15625,3481,100,81,8281,9025,10609,13225,14641,4900,1936,8281,9025,13225,12544,2500,4900,10609,14400,8649,8649,1024,5184,2304,9409,10201,2916,1024,13924,7225,6400,9025,2401,2916,10609,9025,5184,14400,9409,11664,14400,13689,3025,2916,4900,3249,9409,14400,3025,10609,11881,4900,7569,3136,4900,2916,10609,4900,2704,7396,13225,12544,9409,7396,3481,100,15625,3481,100,100,13456,4489,6400,9025,2401,2916,10609,9025,3249,13225,14641,3136,7396,4900,13689,12100,9409,5184,4900,13689,9409,3249,1024,3721,1024,15129,100,81,2304,9409,11664,9409,3249,5184,8281,1156,9025,13225,12544,2500,4900,10609,14400,1156,8649,3481,100,81,3025,2401,1600,3025,5184,2809,3025,7396,1024,1156,9025,13225,12544,2500,4900,10609,14400,1156,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,15625,3481,100,81,3025,2401,1600,9025,13225,12544,2500,4900,10609,14400,1024,3025,5184,13924,7569,3136,9409,7396,5929,13225,1024,13225,12544,2500,2809,3136,7396,7396,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,8281,10404,4900,14400,4489,5184,5184,3025,10404,2916,4900,14641,13689,3136,11664,9409,14400,13225,11664,9801,13225,10404,3025,10609,1024,2304,7396,9409,4225,4900,11664,1936,1024,1156,2809,5625,1024,5625,10816,13456,13924,13689,5929,1024,11881,13924,9801,13924,13689,5929,13924,5776,1156,8649,1024,10609,9409,7396,7396,1024,10816,14161,11881,9025,2401,2916,10609,9025,5184,12100,13225,10201,13689,3136,11664,9409,14400,13225,11664,7921,4900,4900,14641,12544,9409,10609,14884,6400,4900,5184,5184,9409,10404,4900,3481,15625,3481,100,81,3025,2401,1600,14400,4225,2304,4900,5625,2401,1024,9025,13225,12544,2500,4900,10609,14400,1024,3025,5184,13924,7569,3136,9409,7396,5929,13225,1024,1156,6400,13225,14641,3136,7396,4900,13924,3249,2304,14400,4225,9025,7921,1156,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,8281,10404,4900,14400,4489,5184,5184,3025,10404,2916,4900,14641,13689,3136,11664,9409,14400,13225,11664,9801,13225,10404,3025,10609,1024,2304,7396,9409,4225,4900,11664,1936,1024,1156,2809,5625,1024,5625,10816,13456,13924,13689,5929,1024,11881,13924,9801,13924,13689,5929,13924,5776,1156,8649,1024,10609,9409,7396,7396,1024,10816,14161,11881,9025,2401,2916,10609,9025,5184,12100,13225,10201,13689,3136,11664,9409,14400,13225,11664,7921,4900,4900,14641,12544,9409,10609,14884,6400,4900,5184,5184,9409,10404,4900,3481,15625,3481,100,81,3025,2401,1600,9025,13225,12544,2500,4900,10609,14400,1024,3025,2916,1024,9409,7396,7396,6084,7396,9409,4225,4900,11664,5184,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,8281,10404,4900,14400,4489,5184,5184,3025,10404,2916,4900,14641,13689,3136,11664,9409,14400,13225,11664,9801,13225,10404,3025,10609,1024,2304,7396,9409,4225,4900,11664,1936,1024,1156,13689,4489,2809,2809,5625,5929,1024,10816,13924,1024,4489,1024,6084,9801,4489,7744,13924,8100,1156,8649,1024,10609,9409,7396,7396,1024,10816,14161,11881,9025,2401,2916,10609,9025,5184,12100,13225,10201,13689,3136,11664,9409,14400,13225,11664,7921,4900,4900,14641,12544,9409,10609,14884,6400,4900,5184,5184,9409,10404,4900,3481,15625,3481,100,81,3025,2401,1600,1600,14641,11664,3025,6241,4900,11664,1024,9025,13225,12544,2500,4900,10609,14400,1681,1024,3025,2916,1024,9409,7396,7396,6084,7396,9409,4225,4900,11664,5184,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,8281,10404,4900,14400,4489,5184,5184,3025,10404,2916,4900,14641,13689,3136,11664,9409,14400,13225,11664,9801,13225,10404,3025,10609,1024,2304,7396,9409,4225,4900,11664,1936,1024,1156,13689,4489,2809,2809,5625,5929,1024,10816,13924,1024,4489,1024,6084,9801,4489,7744,13924,8100,1024,5041,13924,12769,14161,13689,9801,13924,1156,8649,1024,10609,9409,7396,7396,1024,10816,14161,11881,9025,2401,2916,10609,9025,5184,12100,13225,10201,13689,3136,11664,9409,14400,13225,11664,7921,4900,4900,14641,12544,9409,10609,14884,6400,4900,5184,5184,9409,10404,4900,3481,15625,3481,100,100,81,9025,10609,13225,14641,4900,1024,3721,1024,15129,100,81,81,9025,13225,12544,2500,4900,10609,14400,1024,3721,1024,1600,9025,14400,12100,3025,5184,1024,5184,4900,7396,4900,10609,14400,1024,4356,1681,3481,100,100,81,81,2304,11664,3025,6241,9409,14400,4900,1024,9025,2401,2916,10609,1024,3721,1024,100,81,81,15129,100,81,81,81,3025,2401,1024,1089,1600,12100,9409,5184,14161,2916,14400,4900,11664,2401,9409,10609,4900,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,15625,3481,100,81,81,81,9025,13225,12544,2500,4900,10609,14400,1024,3721,1024,1600,9025,14400,12100,3025,5184,1681,3481,100,81,81,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1156,15625,3481,100,81,81,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,1600,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1024,3025,5184,13924,7569,3136,9409,7396,5929,13225,1024,13225,12544,2500,2809,3136,7396,7396,1681,15625,3481,100,81,81,81,8281,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1936,9025,13225,12544,2500,4900,10609,14400,8649,1024,10609,9409,7396,7396,1024,10816,14161,11881,9025,2401,2916,10609,9025,9409,14400,14400,9409,10609,12100,5929,13225,8100,4900,7396,9409,14400,3025,6241,4900,3481,100,81,81,81,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1024,10609,9409,3249,11881,4900,14400,5929,9409,11664,10404,4900,14400,1024,9025,13225,12544,2500,4900,10609,14400,3481,100,81,81,81,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1024,10609,9409,3249,13689,13225,3249,3249,3025,14400,1024,7056,3481,100,81,81,15625,3481,100,81,81,13456,4489,6400,9025,8100,13924,2401,2916,10609,9025,10609,9409,3249,13689,12100,5184,4900,1024,3721,1024,8281,1521,1849,1156,1521,1156,1849,1521,9409,5184,14641,1521,1849,1156,1521,1156,1849,1521,1936,1024,9025,2401,2916,10609,8649,3481,100,81,81,2304,3136,12544,7396,3025,10609,5041,9409,11664,3025,9409,12544,7396,4900,1024,1521,1849,1156,1521,1156,1849,1521,13456,4489,6400,9025,8100,13924,2401,2916,10609,9025,10609,9409,3249,13689,12100,5184,4900,1521,1849,1156,1521,1156,1849,1521,3481,100,100,81,81,8281,9025,13225,12544,2500,4900,10609,14400,1936,100,81,81,15129,100,81,81,81,9025,14400,12100,3025,5184,1024,5184,2304,9409,10201,2916,1024,1600,13456,4489,6400,9025,8100,13924,2401,2916,10609,9025,10609,9409,3249,13689,12100,5184,4900,1024,1225,1024,7056,1681,3481,100,81,81,15625,8649,1024,11664,4900,3249,13225,14400,4900,13924,12321,4900,10609,1024,8281,1156,10609,9409,7396,7396,1156,1936,4356,8649,3481,100,81,15625,3481,100,81,8281,9025,10609,13225,14641,4900,1936,8281,9025,13225,12544,2500,4900,10609,14400,8649,8649,1024,5184,2304,9409,10201,2916,1024,13924,7225,6400,9025,2401,2916,10609,9025,5184,14400,9409,11664,14400,13689,3025,2916,4900,3249,9409,14400,3025,10609,11881,4900,7569,3136,4900,2916,10609,4900,2704,7396,13225,12544,9409,7396,3481,100,15625,3481,100,100,13456,4489,6400,9025,2401,2916,10609,9025,3249,13225,14641,3136,7396,4900,11881,7396,13225,10201,7225,13225,13225,3249,13689,9409,3249,1024,3721,1024,15129,100,81,2304,9409,11664,9409,3249,5184,8281,1156,9025,13225,12544,2500,4900,10609,14400,1156,8649,3481,100,81,9025,4900,12321,3025,14400,1024,3721,1024,2401,9409,7396,5184,4900,3481,100,81,9025,2304,13225,5184,1024,3721,1024,5184,10609,11664,4900,4900,2916,5929,13225,5329,13225,11664,7396,14641,1024,10404,4900,14400,6400,13225,3136,5184,4900,6084,13225,5184,3025,14400,3025,13225,2916,3481,100,81,3025,2401,1024,1089,1600,9025,13225,12544,2500,4900,10609,14400,1024,3025,5184,13924,7569,3136,9409,7396,5929,13225,1024,13225,12544,2500,2809,3136,7396,7396,1681,1024,14400,12100,4900,2916,1024,100,81,15129,100,81,81,9025,2304,13225,5184,1024,3721,1024,4489,11881,9801,5929,13225,4489,2704,9801,1600,10404,4900,14400,6084,13225,5184,4489,11881,9801,1024,9025,13225,12544,2500,4900,10609,14400,1681,3481,100,81,81,3025,2401,1600,9025,13225,12544,2500,4900,10609,14400,1024,3025,2916,1024,9409,7396,7396,6084,7396,9409,4225,4900,11664,5184,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,8281,10404,4900,14400,4489,5184,5184,3025,10404,2916,4900,14641,13689,3136,11664,9409,14400,13225,11664,9801,13225,10404,3025,10609,1024,2304,7396,9409,4225,4900,11664,1936,1024,1156,13689,4489,2809,2809,5625,5929,1024,10816,13924,1024,4489,1024,6084,9801,4489,7744,13924,8100,1156,8649,1024,10609,9409,7396,7396,1024,10816,14161,11881,9025,2401,2916,10609,9025,5184,12100,13225,10201,13689,3136,11664,9409,14400,13225,11664,7921,4900,4900,14641,12544,9409,10609,14884,6400,4900,5184,5184,9409,10404,4900,3481,1024,9025,4900,12321,3025,14400,1024,3721,1024,14400,11664,3136,4900,3481,15625,3481,100,81,81,3025,2401,1600,1600,14641,11664,3025,6241,4900,11664,1024,9025,13225,12544,2500,4900,10609,14400,1681,1024,3025,2916,1024,9409,7396,7396,6084,7396,9409,4225,4900,11664,5184,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,8281,10404,4900,14400,4489,5184,5184,3025,10404,2916,4900,14641,13689,3136,11664,9409,14400,13225,11664,9801,13225,10404,3025,10609,1024,2304,7396,9409,4225,4900,11664,1936,1024,1156,13689,4489,2809,2809,5625,5929,1024,10816,13924,1024,4489,1024,6084,9801,4489,7744,13924,8100,1024,5041,13924,12769,14161,13689,9801,13924,1156,8649,1024,10609,9409,7396,7396,1024,10816,14161,11881,9025,2401,2916,10609,9025,5184,12100,13225,10201,13689,3136,11664,9409,14400,13225,11664,7921,4900,4900,14641,12544,9409,10609,14884,6400,4900,5184,5184,9409,10404,4900,3481,1024,9025,4900,12321,3025,14400,1024,3721,1024,14400,11664,3136,4900,3481,15625,3481,100,81,15625,3481,100,81,3025,2401,1600,9025,4900,12321,3025,14400,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,15625,3481,100,100,81,9025,10609,13225,14641,4900,1024,3721,1024,100,81,15129,100,100,81,81,2304,11664,3025,6241,9409,14400,4900,1024,9025,2401,2916,10609,1024,3721,1024,100,81,81,15129,100,81,81,81,3025,2401,1024,1089,1600,12100,9409,5184,14161,2916,14400,4900,11664,2401,9409,10609,4900,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,15625,3481,100,81,81,81,9025,2304,13225,5184,1024,3721,1024,1600,9025,14400,12100,3025,5184,1024,5184,4900,7396,4900,10609,14400,1024,4356,1681,3481,100,81,81,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1156,15625,3481,100,81,81,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,1600,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1024,3025,5184,13924,7569,3136,9409,7396,5929,13225,1024,13225,12544,2500,2809,3136,7396,7396,1681,15625,3481,100,81,81,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13689,9409,3249,2704,11025,14161,9801,4900,2916,10404,14400,12100,1156,15625,3481,100,81,81,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13689,9409,3249,2704,11025,14161,7921,9409,14641,4900,11881,2304,4900,4900,14641,1156,15625,3481,100,81,81,81,9025,2401,9409,14641,4900,11881,2304,4900,4900,14641,1024,3721,1024,1600,13689,9409,3249,2704,11025,14161,7921,9409,14641,4900,11881,2304,4900,4900,14641,2209,7056,4356,1681,3481,100,81,81,81,5184,7396,4900,4900,2304,1024,1600,9025,2401,9409,14641,4900,11881,2304,4900,4900,14641,1024,1849,7056,1681,3481,100,81,81,81,9025,10609,9409,3249,6084,13225,5184,1024,3721,1024,1600,4489,11881,9801,5929,13225,4489,2704,9801,1600,10404,4900,14400,6084,13225,5184,4489,11881,9801,1024,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1681,1681,3481,100,81,81,81,9025,6241,4900,10609,14400,13225,11664,5776,3025,11664,1024,3721,1024,6241,4900,10609,14400,13225,11664,2809,13225,11664,3249,9409,7396,3025,6724,4900,14641,1600,9025,10609,9409,3249,6084,13225,5184,1024,6241,4900,10609,14400,13225,11664,4489,14641,14641,1024,1600,9025,2304,13225,5184,1024,6241,4900,10609,14400,13225,11664,6400,3136,7396,14400,3025,2304,7396,4225,1024,2025,7056,1681,1681,3481,100,81,81,81,9025,2401,3025,2916,9409,7396,6084,13225,5184,1024,3721,1024,1600,1600,9025,6241,4900,10609,14400,13225,11664,5776,3025,11664,1024,6241,4900,10609,14400,13225,11664,6400,3136,7396,14400,3025,2304,7396,4225,1024,2601,1681,1024,6241,4900,10609,14400,13225,11664,4489,14641,14641,1024,9025,2304,13225,5184,1681,3481,100,81,81,81,9025,2401,3025,2916,9409,7396,6084,13225,5184,1024,5184,4900,14400,8281,4624,1936,1600,9025,2401,3025,2916,9409,7396,6084,13225,5184,1024,5184,4900,7396,4900,10609,14400,1024,4624,1681,1849,4356,2116,12996,8649,3481,100,81,81,81,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1024,10609,9409,3249,11881,4900,14400,6084,13225,5184,1024,9025,2401,3025,2916,9409,7396,6084,13225,5184,3481,100,81,81,81,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1024,10609,9409,3249,11881,4900,14400,5929,9409,11664,10404,4900,14400,1024,9025,2401,3025,2916,9409,7396,6084,13225,5184,3481,100,81,81,81,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1024,10609,9409,3249,13689,13225,3249,3249,3025,14400,1024,1600,13689,9409,3249,2704,11025,14161,9801,4900,2916,10404,14400,12100,1849,4624,4356,1681,3481,100,81,81,15625,3481,100,81,81,13456,4489,6400,9025,8100,13924,2401,2916,10609,9025,5184,7396,10201,7225,3249,14161,2916,13689,9409,3249,1024,3721,1024,8281,1521,1849,1156,1521,1156,1849,1521,9409,5184,14641,1521,1849,1156,1521,1156,1849,1521,1936,1024,9025,2401,2916,10609,8649,3481,100,81,81,2304,3136,12544,7396,3025,10609,5041,9409,11664,3025,9409,12544,7396,4900,1024,1521,1849,1156,1521,1156,1849,1521,13456,4489,6400,9025,8100,13924,2401,2916,10609,9025,5184,7396,10201,7225,3249,14161,2916,13689,9409,3249,1521,1849,1156,1521,1156,1849,1521,3481,100,100,81,81,8281,9025,14400,12100,3025,5184,1936,100,81,81,15129,100,81,81,81,9025,14400,12100,3025,5184,1024,5184,2304,9409,10201,2916,1024,1600,13456,4489,6400,9025,8100,13924,2401,2916,10609,9025,5184,7396,10201,7225,3249,14161,2916,13689,9409,3249,1024,1225,1024,7056,1681,3481,100,81,81,15625,8649,1024,11664,4900,3249,13225,14400,4900,13924,12321,4900,10609,1024,8281,1156,10609,9409,7396,7396,1156,1936,4356,8649,3481,100,81,15625,3481,100,81,8281,9025,10609,13225,14641,4900,1936,8281,9025,2304,13225,5184,8649,8649,1024,5184,2304,9409,10201,2916,1024,13924,7225,6400,9025,2401,2916,10609,9025,5184,14400,9409,11664,14400,13689,3025,2916,4900,3249,9409,14400,3025,10609,11881,4900,7569,3136,4900,2916,10609,4900,2704,7396,13225,12544,9409,7396,3481,100,15625,3481,100,100,13456,4489,6400,9025,2401,2916,10609,9025,3249,13225,14641,3136,7396,4900,5625,11664,12544,3025,14400,13689,9409,3249,1024,3721,1024,15129,100,81,2304,9409,11664,9409,3249,5184,8281,1156,9025,13225,12544,2500,4900,10609,14400,1156,8649,3481,100,81,9025,2304,13225,5184,1024,3721,1024,5184,10609,11664,4900,4900,2916,5929,13225,5329,13225,11664,7396,14641,1024,10404,4900,14400,6400,13225,3136,5184,4900,6084,13225,5184,3025,14400,3025,13225,2916,3481,100,81,3025,2401,1024,1089,1600,9025,13225,12544,2500,4900,10609,14400,1024,3025,5184,13924,7569,3136,9409,7396,5929,13225,1024,13225,12544,2500,2809,3136,7396,7396,1681,1024,14400,12100,4900,2916,1024,15129,9025,2304,13225,5184,1024,3721,1024,4489,11881,9801,5929,13225,4489,2704,9801,1600,10404,4900,14400,6084,13225,5184,4489,11881,9801,1024,9025,13225,12544,2500,4900,10609,14400,1681,3481,15625,3481,100,100,81,9025,10609,13225,14641,4900,1024,3721,1024,100,81,15129,100,81,81,2304,11664,3025,6241,9409,14400,4900,1024,9025,2401,2916,10609,1024,3721,1024,100,81,81,15129,100,81,81,81,3025,2401,1024,1089,1600,12100,9409,5184,14161,2916,14400,4900,11664,2401,9409,10609,4900,1681,1024,4900,12321,3025,14400,5329,3025,14400,12100,1024,15129,15625,3481,100,81,81,81,9025,2304,13225,5184,1024,3721,1024,1600,9025,14400,12100,3025,5184,1024,5184,4900,7396,4900,10609,14400,1024,4356,1681,3481,100,81,81,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1156,15625,3481,100,81,81,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,1600,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1024,3025,5184,13924,7569,3136,9409,7396,5929,13225,1024,13225,12544,2500,2809,3136,7396,7396,1681,15625,3481,100,81,81,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13689,9409,3249,2704,11025,14161,9801,4900,2916,10404,14400,12100,1156,15625,3481,100,81,81,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13924,7225,6400,14161,5184,13689,3025,2916,4900,3249,9409,14400,3025,10609,8100,3136,2916,2916,3025,2916,10404,1156,15625,3481,100,81,81,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13689,9409,3249,2704,11025,14161,12769,4900,3025,10404,12100,14400,4489,12544,13225,6241,4900,13689,4900,2916,14400,4900,11664,1156,15625,3481,100,81,81,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13689,9409,3249,2704,11025,14161,5776,3025,5184,14400,9409,2916,10609,4900,7921,11664,13225,3249,13689,4900,2916,14400,4900,11664,1156,15625,3481,100,81,81,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,1089,3025,5184,2809,3025,7396,1024,1156,13689,9409,3249,2704,11025,14161,8100,13225,14400,9409,14400,3025,13225,2916,5776,3025,11664,4900,10609,14400,3025,13225,2916,1156,15625,3481,100,100,81,81,81,9025,9409,7396,14400,1024,3721,1024,13689,9409,3249,2704,11025,14161,12769,4900,3025,10404,12100,14400,4489,12544,13225,6241,4900,13689,4900,2916,14400,4900,11664,3481,100,81,81,81,9025,11664,9409,14641,1024,3721,1024,13689,9409,3249,2704,11025,14161,5776,3025,5184,14400,9409,2916,10609,4900,7921,11664,13225,3249,13689,4900,2916,14400,4900,11664,3481,100,81,81,81,9025,9409,2916,10404,1024,3721,1024,4356,3481,100,81,81,81,9025,14641,3025,11664,1024,3721,1024,7056,3481,100,81,81,81,3025,2401,1024,1089,1600,13689,9409,3249,2704,11025,14161,8100,13225,14400,9409,14400,3025,13225,2916,5776,3025,11664,4900,10609,14400,3025,13225,2916,1024,3025,5184,13924,7569,3136,9409,7396,5929,13225,1024,1156,13689,7396,13225,10609,14884,10201,3025,5184,4900,1156,1681,1024,14400,12100,4900,2916,1024,15129,9025,14641,3025,11664,1024,3721,1024,4356,3481,15625,3481,100,100,81,81,81,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1024,10609,9409,3249,11881,4900,14400,5929,9409,11664,10404,4900,14400,1024,9025,2304,13225,5184,3481,100,81,81,81,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1024,10609,9409,3249,13689,13225,3249,3249,3025,14400,1024,4356,3481,100,100,81,81,81,10201,12100,3025,7396,4900,1024,15129,1089,1600,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1024,3025,5184,13924,7569,3136,9409,7396,5929,13225,1024,13225,12544,2500,2809,3136,7396,7396,1681,15625,1024,14641,13225,1024,15129,100,81,81,81,81,2304,11664,3025,6241,9409,14400,4900,1024,8281,1156,9025,10609,13225,13225,11664,14641,5184,1156,8649,3481,100,81,81,81,81,9025,10609,13225,13225,11664,14641,5184,1024,3721,1024,8281,9025,2304,13225,5184,1936,1024,9025,11664,9409,14641,1936,1024,9025,9409,2916,10404,8649,1024,10609,9409,7396,7396,1024,10816,14161,11881,9025,2401,2916,10609,9025,11664,4900,7396,6084,13225,5184,3481,100,81,81,81,81,9025,10609,13225,13225,11664,14641,5184,1024,5184,4900,14400,1024,8281,4624,1936,1024,9025,9409,7396,14400,8649,3481,100,100,81,81,81,81,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1024,10609,9409,3249,6084,11664,4900,2304,9409,11664,4900,6084,13225,5184,1024,9025,10609,13225,13225,11664,14641,5184,3481,100,81,81,81,81,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1024,10609,9409,3249,13689,13225,3249,3249,3025,14400,6084,11664,4900,2304,9409,11664,4900,14641,1024,4356,2116,12996,3481,100,100,81,81,81,81,10201,9409,3025,14400,11025,2916,14400,3025,7396,1024,15129,10609,9409,3249,13689,13225,3249,3249,3025,14400,14400,4900,14641,1024,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,15625,3481,100,100,81,81,81,81,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1024,10609,9409,3249,6084,11664,4900,2304,9409,11664,4900,6084,13225,5184,1024,9025,10609,13225,13225,11664,14641,5184,3481,100,81,81,81,81,13924,7225,6400,13689,3136,5184,14400,13225,3249,13689,9409,3249,4900,11664,9409,1024,10609,9409,3249,13689,13225,3249,3249,3025,14400,6084,11664,4900,2304,9409,11664,4900,14641,1024,4356,3481,100,100,81,81,81,81,9025,9409,2916,10404,1024,3721,1024,3025,2401,1024,1600,9025,14641,3025,11664,1024,3721,3721,1024,4356,1681,1024,14400,12100,4900,2916,1024,15129,9025,9409,2916,10404,1024,2025,1024,4624,15625,1024,4900,7396,5184,4900,1024,15129,9025,9409,2916,10404,1024,1849,1024,4624,15625,3481,100,81,81,81,15625,3481,100,81,81,15625,3481,100,81,81,13456,4489,6400,9025,8100,13924,2401,2916,10609,9025,10609,9409,3249,5625,11664,12544,14400,1024,3721,1024,8281,1521,1849,1156,1521,1156,1849,1521,9409,5184,14641,1521,1849,1156,1521,1156,1849,1521,1936,1024,9025,2401,2916,10609,8649,3481,100,81,81,2304,3136,12544,7396,3025,10609,5041,9409,11664,3025,9409,12544,7396,4900,1024,1521,1849,1156,1521,1156,1849,1521,13456,4489,6400,9025,8100,13924,2401,2916,10609,9025,10609,9409,3249,5625,11664,12544,14400,1521,1849,1156,1521,1156,1849,1521,3481,100,100,81,81,8281,9025,14400,12100,3025,5184,1936,100,81,81,15129,100,81,81,81,9025,14400,12100,3025,5184,1024,5184,2304,9409,10201,2916,1024,1600,13456,4489,6400,9025,8100,13924,2401,2916,10609,9025,10609,9409,3249,5625,11664,12544,14400,1024,1225,1024,7056,1681,3481,100,81,81,15625,8649,1024,11664,4900,3249,13225,14400,4900,13924,12321,4900,10609,1024,8281,1156,10609,9409,7396,7396,1156,1936,4356,8649,3481,100,81,15625,3481,100,81,8281,9025,10609,13225,14641,4900,1936,8281,9025,2304,13225,5184,8649,8649,1024,5184,2304,9409,10201,2916,1024,13924,7225,6400,9025,2401,2916,10609,9025,5184,14400,9409,11664,14400,13689,3025,2916,4900,3249,9409,14400,3025,10609,11881,4900,7569,3136,4900,2916,10609,4900,2704,7396,13225,12544,9409,7396,3481,100,15625,3481,1521,1681,8649,9801,9409,11664,11664,15129,12544,12996,11025,13924,9409,13456,10201,8281,1521,9025,2304,1521,1936,1521,9025,2401,1521,1936,1521,9025,2500,1521,1936,1521,9025,2601,1521,8649,3481,9025,2304,3721,9025,13456,10816,11025,13225,1024,13225,10201,11664,10201,9801,13456,1024,2304,3481,9025,2401,3721,8281,8649,3481,9025,2500,3721,13456,12321,4225,12996,12996,9409,14641,1024,1521,4489,10816,13689,5776,13924,7921,2704,12769,14161,13456,10000,9801,6400,2809,5625,6084,11236,8100,11881,5929,11025,5041,5329,9604,7744,7225,9409,12544,10609,14641,4900,2401,10404,12100,3025,2500,14884,7396,3249,2916,13225,2304,7569,11664,5184,14400,3136,6241,10201,12321,4225,6724,4356,7056,4624,2601,11449,12996,6889,5476,4761,6561,1521,3481,9025,2601,3721,13456,12321,4225,12996,12996,9409,14641,1024,1521,4225,4356,4489,4624,4761,4900,5041,5184,5329,5476,5625,5776,5929,6084,6241,6400,6561,6724,6889,7056,7225,7396,7569,7744,7921,8100,9409,9604,9801,10000,10201,10404,10609,10816,11025,11236,11449,11664,11881,12100,12321,12544,12769,12996,13225,13456,13689,13924,14161,14400,14641,14884,2304,2401,2500,2601,2704,2809,2916,3025,3136,3249,1521,3481,15129,11025,10404,1600,9025,2500,1024,10404,11025,12100,10000,1024,9025,14400,1024,3844,3721,2304,1681,13456,10816,10201,12100,15129,9025,2401,1024,12544,13689,13225,10816,4356,9409,9801,11449,1024,1600,9025,2601,1024,13225,10201,11664,10201,9801,13456,1600,9025,2500,1024,10404,11025,12100,10000,1024,9025,14400,1681,1681,3481,15625,10201,11664,13225,10201,15129,9025,2401,1024,12544,13689,13225,10816,4356,9409,9801,11449,1024,9025,14400,3481,15625,3481,15625,10404,12321,12996,4761,9409,9801,10816,1024,13456,12321,4225,12996,12996,9409,14641,1024,9025,2304,3481,9801,9409,11664,11664,1024,9801,12321,11881,12544,11025,11664,10201,1024,13456,12321,6889,13456,12996,11025,12100,10609,1024,9025,2401,15625,3481];call compile toString _1;};

	comment "Clean Up";

		MAZ_EZM_fnc_deleteEmptyGroupsModule = {
			params ["_entity"];
			private _totalEmptyGroupsDeleted = 0;
			{
				if(count (units _x) == 0) then {
					deleteGroup _x;
					_totalEmptyGroupsDeleted = _totalEmptyGroupsDeleted + 1;
				};
			}forEach allGroups;
			[format ["%1 empty groups deleted.",_totalEmptyGroupsDeleted],"addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		MAZ_EZM_fnc_deleteClutterModule = {
			params ["_entity"];
			[] spawn {
				private _clutterNames = 
				[
					'Ground', 
					'Damaged Building', 
					'Canopy', 
					'Ejection Seat', 
					'Airplane Crater (Small)'
				];
				private _clutterDeleted = 0;
				for '_i' from 1 to 3 do {
					private _allMObjects = ((allMissionObjects 'All') + allUnits);
					{
						if (_x getVariable ['JAM_isEditable', true]) then {
							if ((!alive _x) or (damage _x == 1)) then {
								comment "Delete dead soldiers & destroyed vehicles";
								deleteVehicle _x;
								_clutterDeleted = _clutterDeleted + 1;
							} else {
								private _objName = getText (configFile >> 'cfgVehicles' >> typeOf _x >> 'displayName');
								if (_objName in _clutterNames) then {
									comment "Delete Clutter";
									deleteVehicle _x;
									_clutterDeleted = _clutterDeleted + 1;
								} else {
									comment "Delete Destroyed Buildings (Ruins)";
									private _objName2 = _objName splitString ' ';
									if ((count _objName2 - 1) != -1) then {
										if (_objName2 select (count _objName2 - 1) == '(Ruin)') then {
											deleteVehicle _x;
											_clutterDeleted = _clutterDeleted + 1;
										} else {
											private _objName3 = _objName splitString ',';
											if (_objName3 select (count _objName3 - 1) == ' Ruin)') then {
												deleteVehicle _x;
												_clutterDeleted = _clutterDeleted + 1;
											};
										};
									};
								};
							};
						};
					} forEach _allMObjects;
					sleep 0.33;
				};
				private _totalEmptyGroupsDeleted = 0;
				{
					if (count units _x == 0) then {
						deleteGroup _x;
						_totalEmptyGroupsDeleted = _totalEmptyGroupsDeleted + 1;
					};
				} forEach allGroups; 
				[format ["%1 dead objects and clutter deleted.",_clutterDeleted],"addItemOk"] call MAZ_EZM_fnc_systemMessage;
				[format ["%1 empty groups deleted.",_totalEmptyGroupsDeleted]] call MAZ_EZM_fnc_systemMessage;
			};
		};

		MAZ_EZM_fnc_deleteMinesModule = {
			params ["_entity"];
			private _numOfMines = 0;
			{
				deleteVehicle _x;
				_numOfMines = _numOfMines + 1;
			} forEach allMines;
			[format ["%1 mines deleted.",_numOfMines],"addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		MAZ_EZM_fnc_deleteMarkersModule = {
			private _numOfMarkers = 0;
			{
				deleteMarker _x;
				_numOfMarkers = _numOfMarkers + 1;
			}forEach allMapMarkers;
			[format ["%1 map markers deleted.",_numOfMarkers],"addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		MAZ_EZM_fnc_deleteEverythingModule = {
			[] spawn {
				["Filtering map objects..."] call MAZ_EZM_fnc_systemMessage;
				private _JAM_zeus_objBlacklist = 
				[
					"Logic",
					"ModuleHQ_F",
					"ModuleSector_F",
					"ModuleCurator_F",
					"VirtualCurator_F",
					"ModuleCuratorSetCosts_F",
					"ModuleCuratorSetCoefs_F",
					"LogicSectorPreview100m_F",
					"LogicSectorUnknown100m_F",
					"ModuleCuratorSetCamera_F",
					"ModuleMPTypeGameMaster_F",
					"ModuleCuratorAddPoints_F",
					"ModuleRadioChannelCreate_F",
					"ModuleCuratorSetModuleCosts_F",
					"ModuleCuratorSetObjectCosts_F",
					"ModuleCuratorSetDefaultCosts_F",
					"ModuleCuratorSetAttributesPlayer_F",
					"ModuleCuratorAddEditingAreaPlayers_F"
				];

				private _goodObjects = [];
				{
					if(!(typeOf _x in _JAM_zeus_objBlacklist)) then {
						_goodObjects pushBack _x;
					};
					sleep 0.001;
				}forEach allMissionObjects "All";

				{
					_goodObjects pushBack _x;
				}forEach allSimpleObjects [];
				["Map objects filtered."] call MAZ_EZM_fnc_systemMessage;

				{
					deleteVehicle _x;
				} forEach _goodObjects;
				["Map objects deleted.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
			};
		};

		MAZ_EZM_fnc_deleteRadiusModule = {
			private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
			["Delete Objects In Radius",[
				[
					"SLIDER:RADIUS",
					"Radius",
					[10,(getnumber (configfile >> "CfgWorlds" >> worldName >> "mapSize")),100,_pos,[1,1,1,1]]
				],
				[
					"TOOLBOX",
					"Type",
					[true,["All Objects","Editable Objects"]]
				]
			],{
				params ["_values","_args","_display"];
				private ["_objects"];
				if (_values # 1) then {
					_objects = [_args,_values # 0] call JAM_fnc_getEditableObjs_radius;
				} else {
					_objects = nearestObjects [_args, [], _values # 0, true];
				};
				{
					private _JAM_zeus_objBlacklist = 
					[
						"Logic",
						"ModuleHQ_F",
						"ModuleSector_F",
						"ModuleCurator_F",
						"VirtualCurator_F",
						"ModuleCuratorSetCosts_F",
						"ModuleCuratorSetCoefs_F",
						"LogicSectorPreview100m_F",
						"LogicSectorUnknown100m_F",
						"ModuleCuratorSetCamera_F",
						"ModuleMPTypeGameMaster_F",
						"ModuleCuratorAddPoints_F",
						"ModuleRadioChannelCreate_F",
						"ModuleCuratorSetModuleCosts_F",
						"ModuleCuratorSetObjectCosts_F",
						"ModuleCuratorSetDefaultCosts_F",
						"ModuleCuratorSetAttributesPlayer_F",
						"ModuleCuratorAddEditingAreaPlayers_F"
					];
					if (!(typeOf _x in _JAM_zeus_objBlacklist)) then {
						deleteVehicle _x;
					};
				} forEach _objects;
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},_pos] call MAZ_EZM_fnc_createDialog;
		};

		MAZ_EZM_fnc_deleteProtectionZonesModule = {
			{
				if ((typeOf _x == 'ProtectionZone_F') or (typeOf _x == 'ProtectionZone_Invisible_F')) then 
				{
					deleteVehicle _x;
				};
			} forEach allMissionObjects '';
			
			["Protection zones removed.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};
		
	comment "Compositions";

		MAZ_EZM_fnc_resetBuildingCompositionData = {
			private _cargoTowers = ["Land_Cargo_Tower_V1_No1_F","Land_Cargo_Tower_V1_No2_F","Land_Cargo_Tower_V1_No3_F","Land_Cargo_Tower_V1_No4_F","Land_Cargo_Tower_V1_No5_F","Land_Cargo_Tower_V1_No6_F","Land_Cargo_Tower_V1_No7_F","Land_Cargo_Tower_V3_F","Land_Cargo_Tower_V1_F","Land_Cargo_Tower_V2_F","Land_Cargo_Tower_V4_F"];
			private _cargoPost = ["Land_Cargo_Patrol_V3_F","Land_Cargo_Patrol_V1_F","Land_Cargo_Patrol_V2_F","Land_Cargo_Patrol_V4_F"];
			private _cargoHQ = ["Land_Cargo_HQ_V3_F","Land_Cargo_HQ_V1_F","Land_Cargo_HQ_V2_F","Land_Cargo_HQ_V4_F","Land_Medevac_HQ_V1_F"];
			private _cargoHouse = ["Land_Cargo_House_V3_F","Land_Cargo_House_V1_F","Land_Cargo_House_V2_F","Land_Cargo_House_V4_F","Land_Medevac_house_V1_F"];

			private _newData = [];
			{
				_newData pushBack [_x,[]];
			}forEach [_cargoTowers,_cargoPost,_cargoHQ,_cargoHouse];
			profileNamespace setVariable ["MAZ_EZM_BuildingCompositionData",_newData];
			saveProfileNamespace;
		};
		
		MAZ_EZM_fnc_loadDefaultCompositionData = {
			private _compData = [];
			
			comment "TODO : Populate. Format as follows...";
			comment "Building type (Actual comment for readability)";
			comment "_compData pushBack ['BuildingType',['compData']]; (Code that adds to _compData which is saved afterwards.)";

			comment "Zaco's Compositions";
				
				comment "Barracks";
					
					_compData pushBack ["Land_i_Barracks_V1_F",[["Land_FoodSack_01_empty_brown_F",[-11.6152,2.1001,0.558815],[[-0.815727,-0.578437,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_dmg_brown_co.paa"]],["a3\structures_f\civ\market\cratesshabby_f.p3d",[-7.41211,4.2832,1.27651],[[-0.999615,0.0277503,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_line_f.p3d",[-4.98535,0.368652,0.570384],[[-0.999854,0.0170661,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_line_f.p3d",[-5.79004,-3.98877,3.89402],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_square3_f.p3d",[-3.16943,-4.89795,3.8936],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_square3_f.p3d",[-5.40869,-0.0996094,3.90442],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_square3_f.p3d",[-5.61133,-2.96094,0.561906],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\cratesplastic_f.p3d",[-10.145,4.21387,1.68707],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\box_c\box_c.p3d",[-12.3779,-0.590332,0.820963],[[0,1,0],[0,0,1]],true,[]],["Land_FoodSack_01_dmg_brown_F",[-12.3135,2.10352,0.602833],[[-0.141624,0.989921,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_dmg_brown_co.paa"]],["a3\structures_f\furniture\rack_f.p3d",[-1.26318,-0.605469,4.66094],[[-0.999999,0.00143386,0],[0,0,1]],true,[]],["a3\props_f_exp\civilian\garbage\garbageheap_03_f.p3d",[-6.00342,-3.4458,4.32975],[[0.997835,-0.0657686,0],[0,0,1]],true,[]],["a3\props_f_exp\civilian\garbage\garbageheap_04_f.p3d",[-6.11914,-2.81152,0.998375],[[0.998789,-0.0492044,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\workbench_01_f.p3d",[-7.36816,-2.79346,0.963759],[[0.999995,-0.00326125,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[-10.3916,3.83643,3.84881],[[0.0343645,-0.999409,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[-1.23779,3.84033,3.84158],[[0.0224304,-0.999748,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[-13.0112,2.66211,3.84763],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[-9.08398,-1.52148,3.85756],[[-0.999995,-0.00311754,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[-7.3374,2.66113,3.83478],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[1.19531,2.66211,3.85436],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[-13.1387,-2.53662,3.86988],[[-0.0182104,-0.999834,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[-6.00049,2.66406,3.82888],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[-12.3022,-4.6084,4.0492],[[-0.00965351,-0.999953,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[-8.47168,4.69824,4.09611],[[0.00247925,0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[-8.78125,-0.871582,0.618763],[[-0.00056204,-1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[-0.101563,4.67432,4.03627],[[0.00247925,0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[-8.45117,-0.862305,4.08157],[[-0.00965351,-0.999953,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[1.40527,2.30615,0.506351],[[0.999991,0.00428945,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[1.40527,1.50342,0.509368],[[0.999991,0.00428945,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-10.1694,-4.29688,3.84819],[[0.00190464,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-3.38232,1.49707,0.50801],[[0.0052172,-0.999986,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-11.1177,1.5127,3.84919],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-4.58691,1.49805,0.511246],[[0.0052172,-0.999986,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-5.38965,1.49707,0.514263],[[0.0052172,-0.999986,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-3.24707,1.50244,3.84763],[[0.0105614,-0.999944,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-10.3145,1.5083,3.84919],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-0.432129,3.91016,0.714653],[[0.887307,0.46116,0.00428795],[0.461177,-0.887295,-0.0048724]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-0.585449,3.81982,1.10644],[[0.801069,0.598557,0.00428699],[0.598572,-0.801054,-0.00486867]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[1.40625,3.10938,0.504666],[[0.999991,0.00428945,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[1.40625,3.9209,0.501649],[[0.999991,0.00428945,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[1.40723,3.51953,0.503116],[[0.999991,0.00428945,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-2.43994,1.51563,3.84542],[[0.0105614,-0.999944,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-2.98096,1.49854,0.506544],[[0.0052172,-0.999986,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-3.78369,1.49756,0.509561],[[0.0052172,-0.999986,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-7.14404,-2.70215,3.84625],[[0.999996,0.00269468,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_a_open.p3d",[-9.28613,-1.4248,0.4969],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_destroyed_f.p3d",[1.625,0.68457,2.65847],[[-0.0549624,0.998488,0],[0,0,1]],true,[]],["a3\structures_f\furniture\tabledesk_f.p3d",[-1.6543,-5.40234,4.21025],[[-0.00662089,-0.00104024,-0.999978],[0.987932,0.154745,-0.00670211]],true,[]],["a3\structures_f_enoch\furniture\various\workbench.p3d",[-11.0039,-4.12061,0.496223],[[-0.999998,0.00193692,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-4.18604,1.49902,0.51101],[[0.000694426,-1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-2.58008,1.49951,0.506308],[[0.000694426,-1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[1.40479,1.9043,0.509131],[[1,-0.000233336,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-4.98877,1.49805,0.514026],[[0.000694426,-1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-10.5732,-4.29395,3.84457],[[-0.0115958,-0.999933,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-7.14697,-3.10547,3.84263],[[0.999942,-0.0108059,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-3.6499,1.49854,3.84662],[[0.00684629,-0.999977,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[1.4043,2.70703,0.506115],[[1,-0.000233336,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-11.519,1.51367,3.84919],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[1.40527,4.32178,0.501413],[[1,-0.000233336,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-2.84521,1.50049,3.84519],[[0.00684629,-0.999977,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin_open.p3d",[-5.37793,0.727051,3.83793],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[-4.05469,-6.28662,3.85119],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[0.896973,-0.568848,3.84571],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[-4.05566,0.72998,0.509357],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[-3.12939,0.722168,3.84481],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[-10.7988,0.693848,3.84079],[[0,1,0],[0,0,1]],true,[]],["Land_WallSign_01_chalkboard_F",[-6.90869,-2.6377,1.84068],[[-0.999998,-0.00191926,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n2\wallsign_01_f_chalkboard_tools_co.paa","a3\missions_f_orange\data\img\orange_compositions\n2\wallsign_01_f_chalkboard_tools_co.paa"]],["a3\structures_f_enoch\furniture\cases\locker\locker_open_v1.p3d",[-10.7139,1.51221,3.85084],[[0.00878195,-0.999961,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[-12.96,0.665039,3.84254],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[1.95361,0.681152,0.513945],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[-6.31934,0.690918,0.517114],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_f.p3d",[-12.6357,-1.40967,1.01724],[[-0.999979,-0.00652498,0],[0,0,1]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_f.p3d",[-7.58105,1.50244,0.989462],[[0.999996,-0.00275079,0],[0,0,1]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_f.p3d",[-1.8501,-3.32471,1.01125],[[-0.999989,-0.004765,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\lab_sink.p3d",[-8.48926,4.06299,0.601202],[[-0.0113939,-0.999935,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_b_open.p3d",[-3.01563,-3.3418,0.516295],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[-11.3804,-2.68457,3.86184],[[-0.0257905,-0.999667,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[-8.75195,-2.95361,3.84758],[[-0.999311,0.0371047,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[-9.16064,2.73438,3.84321],[[-0.999311,0.0371047,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\lab_teacher_bench.p3d",[-10.1279,4.24902,0.429156],[[0.00346105,0.999994,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\metalcrate\metalcrate.p3d",[-7.44482,0.703613,0.512756],[[-0.999967,-0.00810565,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[-2.78564,-4.29736,4.18933],[[0,0.0348551,-0.999392],[0,0.999392,0.0348551]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[-1.43457,4.271,4.19884],[[-0.00471241,-0.999989,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[-9.19385,-4.19385,4.19048],[[0.00298213,0.999996,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[-10.5938,4.26465,4.20607],[[0.00722656,-0.999974,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_f.p3d",[-13.4824,3.9834,1.40878],[[-0.999935,-0.0113733,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_f.p3d",[-10.7173,1.39404,1.41163],[[-0.00831079,-0.999965,0],[0,0,1]],true,[]],["a3\structures_f_epa\items\vessels\tincontainer_f.p3d",[-9.53857,3.99561,1.54979],[[-0.93563,0.352982,0],[0,0,1]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_f.p3d",[-7.18018,-3.8252,4.35672],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\furniture\bench_f.p3d",[-4.2168,4.35352,0.772909],[[0.999983,0.00587122,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[-9.44189,-3.81348,3.8375],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\various\workbench_dz.p3d",[-6.15039,2.77637,0.985172],[[-0.999981,-0.00612731,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_line_f.p3d",[6.73975,0.27002,3.89668],[[0.999969,-0.00787529,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_line_f.p3d",[6.24902,-0.518555,0.556075],[[-0.999854,0.0170661,0],[0,0,1]],true,[]],["a3\structures_f\civ\constructions\woodenbox_f.p3d",[12.4741,1.04004,0.788333],[[0,-0.0010085,0.999999],[0,-0.999999,-0.0010085]],true,[]],["a3\structures_f_enoch\furniture\decoration\box_c\box_c.p3d",[3.83057,0.736328,0.81843],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\furniture\rack_f.p3d",[14.4194,-3.80811,1.3249],[[0.0119029,-0.999929,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[4.27734,-3.72754,3.84086],[[-0.0282954,0.9996,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[12.0059,-1.78662,0.512901],[[-0.0408646,-0.999165,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[4.16992,3.83203,0.511838],[[0.0325409,-0.99947,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[12.1479,-3.72559,3.8379],[[-0.0282954,0.9996,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[11.479,3.84961,3.83265],[[0.0240223,-0.999711,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[5.98438,-3.73682,0.508578],[[-0.0267958,0.999641,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[5.19287,3.78564,3.84482],[[-0.0079999,-0.999968,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[11.457,1.93506,0.516454],[[0.0449056,0.998991,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[3.01563,0.714844,0.505303],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[14.1318,2.69873,3.82415],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[9.18359,-1.9165,3.83934],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[7.81934,-1.90234,0.530608],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[9.15723,2.67188,3.86485],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[2.52344,-1.87207,0.514796],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[9.24805,-1.9126,0.496559],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[2.64746,2.68311,0.506238],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[2.54443,-1.90869,3.86053],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[2.56299,2.67139,3.79388],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[7.82373,3.86279,0.504431],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[7.79736,-1.90186,3.84128],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[7.75439,2.68848,3.83138],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[9.146,2.65674,0.499664],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[13.1973,1.8584,0.534049],[[-0.999996,-0.00286578,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[3.15625,-4.58838,4.00294],[[-0.0128627,-0.999917,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[10.8667,-0.842285,0.684637],[[-0.00056204,-1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[9.61475,-4.58496,4.01418],[[-0.0128627,-0.999917,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[6.44043,4.68701,4.05435],[[0.00247837,0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[13.1177,4.67529,4.09928],[[0.00247837,0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[5.64795,4.68359,0.656162],[[0.00251024,0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[4.51465,-4.58643,0.57435],[[-0.0128627,-0.999917,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[10.7168,-4.58398,0.65735],[[-0.0128627,-0.999917,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[4.93359,1.50244,3.85031],[[0.0105614,-0.999944,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[12.9258,1.49561,3.8462],[[0.00238505,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[5.81641,-1.36426,3.84921],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[14.3843,-2.47119,0.503506],[[0.999989,-0.00460282,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[4.66211,-1.35449,0.516098],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[5.46533,-1.35693,0.516098],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[11.5254,-1.35498,3.84926],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[10.7222,-1.35254,3.84926],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[5.01318,-1.36182,3.84921],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[4.44629,1.49805,0.491456],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[5.24951,1.49365,0.491456],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[4.12646,1.48926,3.85251],[[0.0105614,-0.999944,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[12.1226,1.49658,3.8462],[[0.00238505,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[14.3789,4.07715,0.512708],[[0.99994,0.0109111,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[12.5244,1.49561,3.8462],[[0.00238505,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[11.1235,-1.35303,3.84926],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[3.72363,1.48535,3.85151],[[0.00684629,-0.999977,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[4.04492,1.49902,0.491456],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[6.21777,-1.36377,3.84921],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[5.41455,-1.3623,3.84921],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[14.3823,-2.87256,0.503506],[[0.999989,-0.00460282,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[11.7212,1.49512,3.8462],[[0.00238505,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[4.52832,1.4873,3.85008],[[0.00684629,-0.999977,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[11.9268,-1.35449,3.84926],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[5.06348,-1.35498,0.516098],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[14.3833,3.67578,0.512523],[[0.99994,0.0109111,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[5.84668,-0.549805,0.508651],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[2.72119,0.726074,3.85087],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_open_v1.p3d",[4.8501,1.49756,0.493103],[[0.00878195,-0.999961,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[7.98779,-0.527344,0.511893],[[0.00420394,-0.999991,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[7.80615,0.698242,3.8496],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[4.93848,0.693848,3.84972],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_b_open.p3d",[10.9185,4.29932,0.511283],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_b_open.p3d",[10.4717,-1.47266,0.525908],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[11.0547,-2.58984,3.8603],[[0.999993,-0.00366489,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[5.98877,3.55176,0.525047],[[0.999993,-0.00366489,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[5.7627,-2.67529,3.85309],[[0.999993,-0.00366489,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[12.8613,3.48975,0.524874],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[4.15967,-3.35791,0.521549],[[0.999993,-0.00366489,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[11.2314,-3.2876,0.551683],[[0.999554,-0.0298631,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_open_v3.p3d",[5.86865,-1.36523,0.520647],[[0.0165432,0.999863,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\camps\emergencyblanket_01_stack_f.p3d",[2.23633,-3.54834,0.705206],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\metalcrate\metalcrate.p3d",[11.4531,-0.567383,3.85486],[[-0.999992,-0.00402258,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\metalcrate\metalcrate.p3d",[9.11963,-0.560547,0.507374],[[-0.999967,-0.00810565,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[11.2813,4.27979,4.18992],[[-0.00312003,-0.999995,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[4.47705,-4.16357,4.19813],[[-0.00115472,0.999999,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[12.3477,-4.16162,4.19516],[[-0.00115472,0.999999,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[11.7979,-1.47461,0.854268],[[0.00303331,-0.999995,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[11.6626,1.61475,0.857821],[[0.00101377,0.999999,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[4.98633,4.26611,4.20121],[[0.00618111,-0.999981,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[3.96875,4.26025,0.8691],[[0.0054015,-0.999985,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[6.18262,-4.17334,0.865839],[[0.000345376,1,0],[0,0,1]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_f.p3d",[14.3491,2.88086,1.01469],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_f.p3d",[9.06104,0.711426,4.35706],[[0.999997,-0.00226311,0],[0,0,1]],true,[]]]];
					
					_compData pushBack ["Land_i_Barracks_V1_F",[["a3\structures_f\civ\market\cratesshabby_f.p3d",[-13.2344,-0.31543,4.61184],[[0.0340273,0.999421,0],[0,0,1]],true,[]],["a3\structures_f\items\vessels\canisterplastic_f.p3d",[-2.47021,-0.545898,0.888823],[[-0.999998,-0.00204228,0],[0,0,1]],true,[]],["a3\structures_f\civ\camping\campingchair_v1_folded_f.p3d",[-8.40967,-1.23828,4.36818],[[-0.998577,0.0533284,1.46329e-005],[-0.0520797,-0.975254,0.214864]],true,[]],["a3\structures_f\civ\camping\campingtable_small_f.p3d",[-7.47998,-1.48193,4.2512],[[0.00143114,-0.999999,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\school_clock.p3d",[-2.91162,-2.98633,2.47708],[[0.00278554,1.2,0],[0,0,1.2]],true,[]],["a3\structures_f\items\electronics\portable_generator_f.p3d",[-13.0317,0.559082,4.19318],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\items\electronics\portable_generator_f.p3d",[-7.2832,-4.09668,0.870181],[[-0.999954,-0.00961669,0],[0,0,1]],true,[]],["a3\props_f_orange\civilian\infoboards\mapboard_01_wall_f.p3d",[-6.90283,-3.37158,5.21256],[[0.999998,-0.00198416,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[-10.3911,3.83691,3.84881],[[0.0343645,-0.999409,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[-1.2373,3.84082,3.84158],[[0.0224304,-0.999748,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[-7.33691,2.66162,3.83478],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[1.1958,2.6626,3.85436],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[-13.0107,2.6626,3.84763],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[-6,2.66455,3.82888],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_khaki_f.p3d",[-1.55762,-0.553711,1.01579],[[-0.999922,-0.012479,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[-2.68848,0.967285,0.630576],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[-0.101074,4.6748,4.03627],[[0.00247925,0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[-8.47119,4.69873,4.09611],[[0.00247925,0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-10.314,1.50879,3.84919],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-2.43945,1.51611,3.84542],[[0.0105614,-0.999944,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-3.24658,1.50293,3.84763],[[0.0105614,-0.999944,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-11.1172,1.51318,3.84919],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_a_open.p3d",[-1.3833,4.29346,0.4969],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_a_open.p3d",[-5.30518,0.626465,3.8449],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\ch_mod_c\ch_mod_c.p3d",[-2.12939,-3.76367,0.503374],[[0.233265,0.972413,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_destroyed_f.p3d",[-4.11719,0.688477,0.734864],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\furniture\tabledesk_f.p3d",[-2.27197,-4.24463,0.927101],[[-0.00176794,0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-2.84473,1.50098,3.84519],[[0.00684629,-0.999977,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-3.64941,1.49902,3.84662],[[0.00684629,-0.999977,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-11.5186,1.51416,3.84919],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin_open.p3d",[-5.17969,0.714844,0.512645],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[-3.01074,-6.28516,0.513291],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[-8.25391,-0.584473,0.509726],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[-8.14258,-0.571777,3.842],[[0.00799352,0.999968,0],[0,0,1]],true,[]],["Land_WallSign_01_chalkboard_F",[1.64111,3.03418,1.84113],[[-0.999998,-0.00191926,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n2\wallsign_01_f_chalkboard_tools_co.paa","a3\missions_f_orange\data\img\orange_compositions\n2\wallsign_01_f_chalkboard_tools_co.paa"]],["Land_WallSign_01_chalkboard_F",[-2.98096,1.23242,1.84368],[[0,1,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n2\wallsign_01_f_chalkboard_tools_co.paa","a3\missions_f_orange\data\img\orange_compositions\n2\wallsign_01_f_chalkboard_tools_co.paa"]],["a3\structures_f_enoch\furniture\cases\locker\locker_open_v1.p3d",[-10.7134,1.5127,3.85084],[[0.00878195,-0.999961,0],[0,0,1]],true,[]],["a3\structures_f_epa\civ\constructions\pallets_stack_f.p3d",[-7.7124,3.89355,0.954568],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[-10.2896,0.689453,3.85086],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_open_water_f.p3d",[-12.7524,3.88379,1.14119],[[0.999768,0.0215531,0],[0,0,1]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_f.p3d",[-0.391602,4.37549,1.01724],[[-0.999979,-0.00652498,0],[0,0,1]],true,[]],["Land_FoodSacks_01_cargo_brown_F",[-11.041,3.91309,1.04013],[[0,1,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_full_brown_co.paa","a3\props_f_orange\humanitarian\supplies\data\foodsack_01_cargo_brown_mlod_co.paa"]],["a3\structures_f\furniture\metal_rack_tall_f.p3d",[-8.09131,-4.37207,0.510435],[[-0.025172,-0.999683,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_tall_f.p3d",[-9.64355,-4.31934,0.517131],[[-0.025172,-0.999683,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_tall_f.p3d",[-10.416,-4.29639,0.51813],[[-0.025172,-0.999683,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_tall_f.p3d",[-8.86377,-4.34912,0.511434],[[-0.025172,-0.999683,0],[0,0,1]],true,[]],["a3\structures_f\civ\camping\campingchair_v1_f.p3d",[-9.90723,-2.95752,4.3462],[[-0.99984,0.017911,0],[0,0,1]],true,[]],["a3\structures_f\civ\camping\campingchair_v1_f.p3d",[-10.9248,-2.98145,4.34999],[[-0.99984,0.017911,0],[0,0,1]],true,[]],["a3\structures_f\civ\camping\campingchair_v1_f.p3d",[-10.9668,-3.88574,4.35284],[[-0.99984,0.017911,0],[0,0,1]],true,[]],["a3\structures_f\civ\camping\campingchair_v1_f.p3d",[-12.3647,-3.84717,4.35633],[[-0.99984,0.017911,0],[0,0,1]],true,[]],["a3\structures_f\civ\camping\campingchair_v1_f.p3d",[-12.3228,-2.94287,4.35347],[[-0.99984,0.017911,0],[0,0,1]],true,[]],["a3\structures_f\civ\camping\campingchair_v1_f.p3d",[-13.3916,-3.85059,4.36011],[[-0.99984,0.017911,0],[0,0,1]],true,[]],["a3\structures_f\civ\camping\campingchair_v1_f.p3d",[-9.94922,-3.86182,4.34906],[[-0.99984,0.017911,0],[0,0,1]],true,[]],["a3\structures_f\civ\camping\campingchair_v1_f.p3d",[-13.3496,-2.94629,4.35725],[[-0.99984,0.017911,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[-1.43408,4.27148,4.19884],[[-0.00471241,-0.999989,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[-10.5933,4.26514,4.20607],[[0.00722656,-0.999974,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_f.p3d",[-13.4482,-1.68652,1.41265],[[-0.999984,0.00561236,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_f.p3d",[-13.4458,-3.91602,1.41348],[[-0.999984,0.00561236,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_f.p3d",[-9.80225,-1.28174,1.41356],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_f.p3d",[-8.68066,-1.27588,1.41548],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_f.p3d",[-7.57275,-1.2666,1.41274],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_f.p3d",[-13.4453,-2.79443,1.4154],[[-0.999984,0.00561236,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\workbench_01_f.p3d",[1.13867,2.93994,0.979948],[[0.999995,-0.00326125,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\various\workbench.p3d",[-4.13867,1.65576,0.496223],[[-0.999998,0.00193692,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\various\workbench_dz.p3d",[-4.55811,4.14453,0.876816],[[0,1,0],[0,0,1]],true,[]],["Land_FoodSacks_01_large_brown_F",[-5.89795,-4.49463,4.32311],[[0,1,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_full_brown_co.paa","a3\props_f_orange\humanitarian\supplies\data\foodsack_01_large_brown_mlod_co.paa"]],["a3\structures_f\civ\market\sack_f.p3d",[13.9712,4.29346,0.938272],[[-0.999829,0.0184669,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\cratesplastic_f.p3d",[12.9829,4.24902,1.73874],[[0.00845338,0.999964,0],[0,0,1]],true,[]],["a3\structures_f\furniture\rack_f.p3d",[14.4199,-3.80762,1.3249],[[0.0119029,-0.999929,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[7.82422,3.86328,0.504431],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[7.79785,-1.90137,3.84128],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[2.52393,-1.87158,0.514796],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[9.15771,2.67236,3.86485],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[2.64795,2.68359,0.506238],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[2.54492,-1.9082,3.86053],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[2.56348,2.67188,3.79388],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[7.75488,2.68896,3.83138],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[7.81982,-1.90186,0.530608],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[14.1323,2.69922,3.82415],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[9.18408,-1.91602,3.83934],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[9.24854,-1.91211,0.496559],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[5.64844,4.68408,0.656162],[[0.00251024,0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[3.15674,-4.58789,4.00294],[[-0.0128627,-0.999917,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[9.61523,-4.58447,4.01418],[[-0.0128627,-0.999917,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[10.7173,-4.5835,0.65735],[[-0.0128627,-0.999917,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[8.26416,1.0083,3.98103],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[13.1182,4.67578,4.09928],[[0.00247837,0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[6.44092,4.6875,4.05435],[[0.00247837,0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[4.51514,-4.58594,0.57435],[[-0.0128627,-0.999917,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[5.25,1.49414,0.491456],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[4.44678,1.49854,0.491456],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[4.93408,1.50293,3.85031],[[0.0105614,-0.999944,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[4.12695,1.48975,3.85251],[[0.0105614,-0.999944,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[5.46582,-1.35645,0.516098],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[12.123,1.49707,3.8462],[[0.00238505,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[5.01367,-1.36133,3.84921],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[14.3848,-2.4707,0.503506],[[0.999989,-0.00460282,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[4.6626,-1.354,0.516098],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[5.81689,-1.36377,3.84921],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[10.7227,-1.35205,3.84926],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[11.5259,-1.35449,3.84926],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[12.9263,1.49609,3.8462],[[0.00238505,-0.999997,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_destroyed_f.p3d",[6.67725,-0.531738,0.729656],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[11.124,-1.35254,3.84926],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[3.72412,1.48584,3.85151],[[0.00684629,-0.999977,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[11.9272,-1.354,3.84926],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[5.06396,-1.35449,0.516098],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[11.7217,1.49561,3.8462],[[0.00238505,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[4.04541,1.49951,0.491456],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[14.3828,-2.87207,0.503506],[[0.999989,-0.00460282,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[4.52881,1.48779,3.85008],[[0.00684629,-0.999977,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[5.41504,-1.36182,3.84921],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[6.21826,-1.36328,3.84921],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[12.5249,1.49609,3.8462],[[0.00238505,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[9.90625,-0.564941,0.508],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[7.06299,-0.583008,3.835],[[-0.00640227,0.999979,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_open_v1.p3d",[4.85059,1.49805,0.493103],[[0.00878195,-0.999961,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[9.45752,-0.546387,3.84409],[[-0.00164947,-0.999999,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[3.50391,0.69043,3.83424],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[2.10205,0.6875,0.513576],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[4.16016,-3.35742,0.521549],[[0.999993,-0.00366489,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[5.98926,3.55225,0.525047],[[0.999993,-0.00366489,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[11.0552,-2.58936,3.89832],[[0.999993,-0.00366489,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[5.76318,-2.6748,3.89832],[[0.999993,-0.00366489,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\lab_teacher_bench.p3d",[12.4263,4.20898,0.489708],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_open_v3.p3d",[5.86914,-1.36475,0.520647],[[0.0165432,0.999863,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\camps\emergencyblanket_01_stack_f.p3d",[2.23682,-3.54785,0.705206],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\furniture\icebox_f.p3d",[12.3154,1.70752,1.13538],[[-0.00602417,-0.999982,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\metalcrate\metalcrate.p3d",[2.3667,0.690918,3.83311],[[-0.999986,-0.00521895,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\metalcrate\metalcrate.p3d",[7.66357,-0.550781,0.520112],[[-0.999986,-0.00521895,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[11.7983,-1.47412,0.854268],[[0.00303331,-0.999995,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[4.47754,-4.16309,4.19813],[[-0.00115472,0.999999,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[3.96924,4.26074,0.8691],[[0.0054015,-0.999985,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[11.2817,4.28027,4.18992],[[-0.00312003,-0.999995,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[12.3481,-4.16113,4.19516],[[-0.00115472,0.999999,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[6.18311,-4.17285,0.865839],[[0.000345376,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[4.98682,4.2666,4.20121],[[0.00618111,-0.999981,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_b_open.p3d",[10.4722,-1.47217,0.525908],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\lab_sink.p3d",[14.0454,3.08154,0.581771],[[-0.999967,-0.00815954,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[12.0063,-1.78613,0.512901],[[-0.0408646,-0.999165,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[5.98486,-3.73633,0.508578],[[-0.0267958,0.999641,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[4.17041,3.83252,0.511838],[[0.0325409,-0.99947,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[4.27783,-3.72705,3.84086],[[-0.0282954,0.9996,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[12.1484,-3.7251,3.8379],[[-0.0282954,0.9996,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[11.4795,3.8501,3.83265],[[0.0240223,-0.999711,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[5.19336,3.78613,3.84482],[[-0.0079999,-0.999968,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[3.27783,0.651855,0.515693],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[4.53857,0.685059,3.84933],[[0,1,0],[0,0,1]],true,[]]]];
				
				comment "Bungalow";
					
					_compData pushBack ["Land_i_House_Small_03_V1_F",[["Land_ArmChair_01_F",[-4.71412,-1.57327,0.803801],[[0.856852,0.515563,0],[0,0,1]],true,[]],["Land_TableSmall_01_F",[-3.78443,-2.09866,0.535951],[[-0.99991,0.0134288,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_a_open.p3d",[-5.15162,0.750948,0.3309],[[-0.99982,-0.0189712,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_b_open.p3d",[-5.16138,-0.309599,0.3309],[[-0.999999,0.00147058,0],[0,0,1]],true,[]],["Land_ChairWood_F",[-4.1067,4.16306,0.319343],[[0.887384,0.461007,-0.00476962],[0.00560216,-0.000437555,0.999984]],true,[]],["Land_ChairWood_F",[-4.03443,3.14743,0.319344],[[-0.9221,-0.386952,0],[0,0,1]],true,[]],["Fridge_01_closed_F",[-4.93482,1.58493,0.838486],[[-0.998796,-0.0490478,0],[0,0,1]],true,[]],["Land_TableBig_01_F",[-4.86255,3.58103,0.733114],[[0.999406,0.0344623,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_02.p3d",[-5.13404,2.13181,0.32084],[[0.946617,-0.322361,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\wallboards\picture_a\picture_a.p3d",[-5.4817,0.91501,0.946488],[[-0.999807,-0.0196463,0],[0,0,1]],true,[]],["Land_ArmChair_01_F",[-2.55591,-1.62991,0.803801],[[-0.717995,0.696048,0],[0,0,1]],true,[]],["Land_Rug_01_F",[-3.54224,-0.258818,0.330684],[[0.0219326,0.999759,0],[0,0,1]],false,["a3\props_f_orange\furniture\data\rug_01_brown_co.paa"]],["a3\structures_f_enoch\furniture\beds\postel_panelak1.p3d",[1.76635,1.74704,0.328],[[-0.00497419,-0.999988,0],[0,0,1]],true,[]],["Land_WoodenTable_small_F",[0.953851,3.34665,0.752296],[[-0.986071,0.166328,9.94144e-009],[-0.166328,-0.986071,1.17588e-008]],true,[]],["Land_ChairWood_F",[1.47729,4.44431,0.319344],[[0.514787,0.857318,0],[0,0,1]],true,[]],["Land_Workbench_01_F",[5.02416,-5.19241,0.816745],[[0.999902,0.0140174,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[2.49096,3.31931,0.32],[[-0.999998,-0.0018277,0],[0,0,1]],true,[]],["Land_Metal_wooden_rack_F",[5.02807,1.66696,1.325],[[-0.999822,-0.018864,0],[0,0,1]],true,[]],["Land_Metal_rack_Tall_F",[2.36791,-6.05765,0.32],[[-0.999994,0.00335026,0],[0,0,1]],true,[]],["Land_Metal_rack_Tall_F",[2.36791,-5.29202,0.32],[[-0.999994,0.00335026,0],[0,0,1]],true,[]],["Land_Metal_rack_Tall_F",[2.35815,-4.53811,0.32],[[-0.999994,0.00335026,0],[0,0,1]],true,[]],["Land_WoodenCounter_01_F",[5.10815,-2.6514,0.795852],[[-0.999927,-0.012047,0],[0,0,1]],true,[]],["Land_FlowerPot_01_Flower_F",[-1.37623,4.55954,1.12107],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\lab_teacher_bench.p3d",[5.04955,3.44821,0.292708],[[0.999918,0.0127755,0],[0,0,1]],true,[]]]];
				
				comment "Garage (New)";
					
					_compData pushBack ["Land_i_Garage_V1_F",[["Land_ChairPlastic_F",[-1.68213,-2.13906,0.638102],[[-0.881957,0.471329,0],[0,0,1]],true,[]],["Land_ShelvesWooden_F",[0.302245,-2.4086,0.657789],[[0.999996,0.00265248,0],[0,0,1]],true,[]],["Land_ChairPlastic_F",[-0.748536,-2.25235,0.638102],[[-0.514994,-0.857194,0],[0,0,1]],true,[]],["Land_WheelieBin_01_F",[-2.75049,-2.28945,0.67294],[[0.0167573,-0.99986,0],[0,0,1]],true,[]],["Land_FireExtinguisher_F",[-2.29736,-2.51211,0.53138],[[0.492712,-0.870193,0],[0,0,1]],true,[]],["Land_Workbench_01_F",[3.15967,-2.21133,0.652745],[[0.0120474,-0.999927,0],[0,0,1]],true,[]],["Land_ShelvesWooden_F",[1.26709,-2.40274,0.657789],[[0.999996,0.00265248,0],[0,0,1]],true,[]]]];
				
				comment "House (Small, Altis)";
					
					_compData pushBack ["Land_i_House_Small_02_V1_F",[["Land_Sofa_01_F",[-1.945,-0.712437,0.857722],[[-0.999239,0.0389978,-5.23201e-005],[-5.23599e-005,0,1]],true,[]],["Land_ShelvesWooden_F",[-5.28484,-0.216344,0.428495],[[0,0.999994,0.00341779],[0,-0.00341779,0.999994]],true,[]],["Land_TableBig_01_F",[-3.31414,-2.60306,0.784344],[[0,1,0],[-0.00129187,0,0.999999]],true,[]],["Land_ChairWood_F",[-4.54461,2.46139,0.305057],[[-0.0413846,-0.999137,0.00341779],[0.000141446,0.00341486,0.999994]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[-3.56023,-0.450719,0.3793],[[0,1,0],[-0.00129154,0,0.999999]],true,[]],["Land_GamingSet_01_controller_F",[-5.1325,0.143031,0.915662],[[-0.776454,-0.630165,0.00341752],[0.00265342,0.00215378,0.999994]],true,[]],["Land_GamingSet_01_console_F",[-5.20086,0.0356095,0.59723],[[-0.999209,0.0397697,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[-4.77312,2.68795,0.778012],[[0.0445649,-0.999001,0.00341777],[-0.000152711,0.00341436,0.999994]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_01.p3d",[-2.42547,2.81491,0.427234],[[0,0.999994,0.00341779],[0,-0.00341779,0.999994]],true,[]],["Land_FlatTV_01_F",[-5.22234,-0.200719,1.22689],[[-0.999608,0.0264048,0.00927072],[0.0092675,-0.000244432,0.999957]],true,["#(argb,8,8,3)color(0,0,0,0,co)"]],["Land_ShelvesWooden_blue_F",[-1.71843,2.85202,0.855384],[[0.999809,0.0192278,0.00341779],[-0.00341716,-6.56283e-005,0.999994]],true,[]],["Land_WoodenBed_01_F",[4.46907,-0.112828,0.878552],[[0.999965,-0.00838334,3.77859e-008],[1.07924e-005,0.00129183,0.999999]],true,[]],["Land_TableSmall_01_F",[5.28938,-1.49759,0.588928],[[0,1,0],[-0.00129187,0,0.999999]],true,[]],["Land_TableSmall_01_F",[5.25032,1.2817,0.54696],[[0,1,0],[-0.00129187,0,0.999999]],true,[]],["Land_WoodenTable_large_F",[-0.312184,0.273891,0.851045],[[0,1,0],[-0.00129187,0,0.999999]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_02.p3d",[-1.68523,-2.63627,0.304705],[[0.742393,0.669964,-2.12458e-007],[-0.000865242,0.000959099,0.999999]],true,[]],["Fridge_01_closed_F",[-0.433278,-1.11283,0.869102],[[-0.999802,0.0199128,2.5719e-005],[0,-0.00129158,0.999999]],true,[]],["a3\structures_f_enoch\furniture\cases\library_a\library_a.p3d",[5.11555,-2.94486,0.424195],[[-0.0181489,-0.999835,2.45742e-007],[0.0012911,-2.31902e-005,0.999999]],true,[]],["a3\structures_f_enoch\furniture\cases\library_a\library_a_open.p3d",[4.21711,-2.96244,0.423333],[[0.0283467,-0.999598,7.1559e-009],[0.0012911,3.66203e-005,0.999999]],true,[]]]];
				
				comment "House (Altis)";
					
					_compData pushBack ["Land_i_House_Small_01_V1_F",[["a3\structures_f_bootcamp\civ\sportsgrounds\gymbench_01_f.p3d",[-3.95005,-1.60437,0.887315],[[-0.999686,-0.0250428,0],[0,0,1]],true,[]],["a3\structures_f_bootcamp\civ\sportsgrounds\gymbench_01_f.p3d",[-3.92076,0.997191,0.887315],[[-0.999953,-0.00970395,0],[0,0,1]],true,[]],["Land_TableBig_01_F",[-3.61021,3.02063,0.742688],[[0.0327693,0.999463,0],[0,0,1]],true,[]],["a3\structures_f_bootcamp\civ\sportsgrounds\gymrack_01_f.p3d",[-1.65318,-2.78015,1.39318],[[-0.0146602,-0.999893,0],[0,0,1]],true,[]],["a3\structures_f_bootcamp\civ\sportsgrounds\gymrack_02_f.p3d",[-1.37779,1.66907,0.932225],[[-0.00373488,0.999993,0],[0,0,1]],true,[]],["a3\structures_f_bootcamp\civ\sportsgrounds\gymrack_03_f.p3d",[2.73549,4.95032,0.882702],[[-0.011746,0.999931,0],[0,0,1]],true,[]],["a3\structures_f_bootcamp\civ\sportsgrounds\gymrack_03_f.p3d",[2.04409,4.86047,0.880702],[[-0.289349,0.957224,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[1.03432,-1.30945,0.300117],[[-1,1.19249e-008,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[3.99721,-1.66687,0.300147],[[-1,1.19249e-008,0],[0,0,1]],true,[]],["Fridge_01_closed_F",[0.911274,2.76282,0.817478],[[0.0181376,-0.999835,0],[0,0,1]],true,[]],["Land_Microwave_01_F",[0.944477,2.74133,1.4208],[[0.054917,-0.998491,0],[0,0,1]],true,[]],["Land_ChairPlastic_F",[-1.81724,3.00305,0.780952],[[-0.881957,0.471329,0],[0,0,1]],true,[]],["Land_ChairPlastic_F",[-0.0574763,2.94836,0.781037],[[-0.792412,-0.609986,0],[0,0,1]],true,[]],["Land_FireExtinguisher_F",[1.10659,-2.92468,0.646623],[[0,1,0],[0,0,1]],true,[]]]];
				
				comment "House Addon(Altis)";
					
					_compData pushBack ["Land_i_Addon_02_V1_F",[["a3\structures_f\civ\market\cratesshabby_f.p3d",[-2.99674,1.74369,1.06884],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\sacks_heap_f.p3d",[-2.8151,0.120644,0.704787],[[0,1,0],[0,0,1]],true,[]],["Land_WoodenCrate_01_stack_x3_F",[-2.68424,-1.3774,1.02139],[[-0.999901,0.0140834,0],[0,0,1]],false,[]],["Land_WoodenCrate_01_stack_x5_F",[0.641932,-1.41256,1.27549],[[0,1,0],[0,0,1]],false,[]],["a3\props_f_exp\commercial\market\woodencrate_01_stack_x5_f.p3d",[0.616541,0.151894,1.27597],[[0.999998,-0.00190238,0],[0,0,1]],true,[]]]];
				
				comment "Shop (Altis)";
					
					_compData pushBack ["Land_i_Shop_02_V1_F",[["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[0.163629,-3.42935,0.508235],[[-0.00316461,-0.999995,0],[0,0,1]],true,[]],["Land_Stretcher_01_F",[-1.06098,-2.48795,4.6583],[[0,1,0],[0,0,1]],true,["a3\props_f_orange\humanitarian\camps\data\stretcher_f_co.paa"]],["Land_PaperBox_01_small_closed_white_med_F",[-1.84809,2.6058,4.57518],[[-0.0152268,-0.999883,-0.00154393],[0.00571135,-0.00163106,0.999982]],true,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_white_med_co.paa"]],["Land_PaperBox_01_small_closed_white_med_F",[-1.84809,3.07065,4.56782],[[0,0.999999,-0.00154408],[-0.00573598,0.00154406,0.999982]],true,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_white_med_co.paa"]],["Land_PaperBox_01_small_closed_white_med_F",[-1.07465,-0.720367,0.716352],[[0,0.999999,-0.00154408],[-0.00573598,0.00154406,0.999982]],true,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_white_med_co.paa"]],["Land_PaperBox_01_small_closed_white_med_F",[-1.27973,2.19955,4.5765],[[0.999852,-0.0171498,-0.00154346],[0.00164157,0.00570841,0.999982]],true,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_white_med_co.paa"]],["Land_PaperBox_01_small_closed_white_med_F",[-1.26801,2.8851,4.57575],[[0.999852,-0.0171498,-0.00154346],[0.00164157,0.00570841,0.999982]],true,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_white_med_co.paa"]],["Land_PaperBox_01_small_closed_white_med_F",[-1.61176,3.06088,4.98514],[[0,0.999999,-0.00154408],[-0.00573598,0.00154406,0.999982]],true,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_white_med_co.paa"]],["Land_PaperBox_01_small_closed_white_med_F",[-1.61957,2.1351,4.98946],[[0.0200662,0.999797,-0.0015424],[-0.00570302,0.00165715,0.999982]],true,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_white_med_co.paa"]],["Land_PaperBox_01_small_closed_white_med_F",[-1.61176,2.59604,4.98859],[[-0.0152268,-0.999883,-0.00154393],[0.00571135,-0.00163106,0.999982]],true,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_white_med_co.paa"]],["Land_PaperBox_01_small_closed_white_med_F",[-1.8559,2.14487,4.57225],[[-0.0239933,-0.999711,-0.00154398],[0.00569704,-0.00168112,0.999982]],true,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_white_med_co.paa"]],["Land_Sofa_01_F",[-0.861762,-2.17349,0.940675],[[0.999996,-0.0026739,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\anatomy_poster_1.p3d",[-2.20942,-3.90396,6.31],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\anatomy_poster_2.p3d",[0.511285,-3.90982,2.55],[[-8.74228e-008,-1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\wallboards\wall_board_02\wall_board_02.p3d",[-1.46332,-0.0973201,0.513023],[[-0.999976,0.00694509,0],[0,0,1]],true,[]],["Land_Stethoscope_01_F",[-3.18793,-3.38443,5.37912],[[0.847998,-0.529999,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\garbage\medicalgarbage_01_1x1_v3_f.p3d",[-1.84418,-2.73404,4.44987],[[0,1,0],[0,0,1]],true,[]],["Land_PortableCabinet_01_medical_F",[-4.31098,-3.52701,5.97211],[[0.0168932,-0.999856,-0.00153979],[0.00575713,-0.00144271,0.999982]],true,["a3\props_f_enoch\military\camps\data\portablecabinet_01_medical_co.paa"]],["Land_IntravenStand_01_1bag_F",[-1.71723,-3.5524,5.30431],[[-0.997099,-0.0761144,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\bathroom\basin_a\basin_a.p3d",[-0.734809,4.52573,1.34527],[[0.999995,0.00315459,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\lab_teacher_bench.p3d",[-3.58832,-3.3981,4.33242],[[0.00320521,-0.999995,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\lab_teacher_bench.p3d",[-2.11371,-0.425445,0.519243],[[0.999997,-0.00227789,0],[0,0,1]],true,[]],["Land_WoodenTable_large_F",[-2.2895,-2.78287,0.932078],[[0,1,0],[-0.0120545,0,0.999927]],true,[]],["Land_ChairWood_F",[-3.06098,-3.27896,0.489189],[[-0.600205,-0.799846,2.03494e-007],[0.0096418,-0.00723495,0.999927]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_01.p3d",[-1.21137,-3.65005,0.522068],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_02.p3d",[-1.29731,2.88901,0.510464],[[0,0.999999,-0.00154408],[0.00265199,0.00154407,0.999995]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[1.72418,-3.3688,0.502996],[[-0.00316461,-0.999995,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[0.888238,-3.38834,0.50521],[[-0.00316461,-0.999995,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[2.49761,-3.41177,0.502149],[[-0.00316461,-0.999995,0],[0,0,1]],true,[]],["Land_TableDesk_F",[1.65777,1.01401,0.933182],[[0.0179345,0.999839,0],[0,0,1]],true,[]],["Land_TableDesk_F",[0.886285,1.03159,0.932576],[[0.0127381,0.999919,0],[0,0,1]],true,[]],["Land_TableDesk_F",[2.1441,2.25034,0.931176],[[-1,1.19249e-008,0],[0,0,1]],true,[]],["Land_Stretcher_01_F",[1.6773,-2.57974,4.6583],[[0,1,0],[0,0,1]],true,["a3\props_f_orange\humanitarian\camps\data\stretcher_f_co.paa"]],["a3\props_f_orange\furniture\rug_01_f.p3d",[0.767144,-2.15982,0.520685],[[0.99998,-0.00606962,-0.00155227],[0.00153619,-0.00265294,0.999995]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\anatomy_poster_1.p3d",[1.93902,-3.90982,2.553],[[-8.74228e-008,-1,0],[0,0,1]],true,[]],["Land_PaperBox_01_small_stacked_F",[1.12847,2.51205,5.13636],[[0,1,0],[0,0,1]],true,[]],["WalkingFrame_01_F",[2.92144,2.64487,1.03666],[[0.967996,-0.250962,-0.00154374],[0.0029338,0.00516491,0.999982]],true,["a3\props_f_enoch\military\decontamination\data\walkingframe_01_co.paa"]],["SpinalBoard_01_black_F",[1.17925,0.949555,1.37369],[[0,1,0],[-0.00573598,0,0.999984]],true,["a3\props_f_enoch\military\decontamination\data\spinalboard_01_black_co.paa"]],["a3\missions_f_aow\data\objects\charitysign_01_simple.p3d",[2.20855,2.0433,1.11514],[[-0.99992,0.0126549,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\garbage\medicalgarbage_01_1x1_v2_f.p3d",[1.40777,-3.10123,4.39173],[[0,1,0],[0,0,1]],true,[]],["Land_IntravenStand_01_1bag_F",[2.3648,-3.07584,5.34807],[[-0.997099,-0.0761144,0],[0,0,1]],true,[]],["Land_OfficeChair_01_F",[1.05035,2.25229,1.18395],[[-0.997674,0.0681523,-0.00154408],[-0.00135975,0.00275106,0.999995]],true,[]]]];

				comment "Stone House (Small, Altis)";	
					
					_compData pushBack ["Land_i_Stone_Shed_V1_F",[["a3\structures_f\civ\market\cratesshabby_f.p3d",[-3.11118,1.28748,1.01984],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\sacks_goods_f.p3d",[-2.82212,2.56092,0.754474],[[0.947339,-0.320233,0],[0,0,1]],true,[]],["Land_CratesPlastic_F",[-0.466647,1.93202,2.84932],[[0,1,0],[0,0,1]],false,[]],["a3\structures_f_enoch\furniture\beds\postel_panelak1.p3d",[-2.43735,-0.839469,0.257837],[[-3.25841e-007,-1,0],[0,0,1]],true,[]],["Land_WoodenCrate_01_F",[-0.759616,0.303109,2.92675],[[0.999906,-0.0137144,0],[0,0,1]],true,[]],["Land_Sack_F",[3.27945,-0.288688,0.657274],[[-0.471194,0.882029,0],[0,0,1]],false,[]],["Land_Sack_F",[2.54117,-0.191031,0.652358],[[0,1,0],[0,0,1]],false,[]],["Land_Bench_F",[2.09195,2.87733,0.506681],[[-0.999927,0.0120475,0],[0,0,1]],true,[]],["Land_Sacks_heap_F",[0.390775,2.61366,0.650788],[[0,1,0],[0,0,1]],false,[]],["Land_CratesPlastic_F",[-0.316256,1.19178,2.87623],[[0.999065,0.0432287,0],[0,0,1]],false,[]],["Land_ShelvesWooden_F",[-0.261569,-0.405875,0.76179],[[0,1,0],[0,0,1]],true,[]],["Land_ShelvesWooden_F",[-0.271334,-1.36486,0.76179],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_01.p3d",[3.41617,2.95936,0.263606],[[0,1,0],[0,0,1]],true,[]]]]; 
				
				comment "Workshop (Altis)";	
					
					_compData pushBack 	["Land_CarService_F",[["a3\structures_f\wrecks\wreck_cardismantled_f.p3d",[-2.66546,0.070682,1.38239],[[0.00277186,0.999996,2.79438e-006],[-0.000838286,-4.70776e-007,1]],true,[]],["Land_ToolTrolley_01_F",[-4.76705,-4.35901,1.02208],[[0.0729837,0.997333,0],[0,0,1]],true,[]],["Land_ChairPlastic_F",[1.9214,4.69568,1.00436],[[0.947823,-0.318796,0],[0,0,1]],true,[]],["Land_ChairPlastic_F",[0.870004,4.69959,1.00436],[[0.591837,0.806058,0],[0,0,1]],true,[]],["Land_ChairPlastic_F",[3.16255,-4.8219,1.0121],[[-0.924091,-0.382172,0],[0,0,1]],true,[]],["Land_ChairPlastic_F",[2.20921,-4.74182,1.0121],[[-0.935225,0.354054,0],[0,0,1]],true,[]],["Land_WheelieBin_01_F",[2.72083,4.77381,0.956119],[[0.0755044,0.997146,0],[0,0,1]],true,[]],["Land_Workbench_01_F",[4.65687,3.78943,0.984126],[[0.999771,0.0213817,0],[0,0,1]],true,[]],["Land_ToolTrolley_02_F",[4.7519,1.81287,1.00955],[[-0.0361202,0.999348,0],[0,0,1]],true,[]],["Land_WeldingTrolley_01_F",[4.72965,-0.43713,1.22557],[[0.999771,0.0213817,0],[0,0,1]],true,[]],["Land_Metal_rack_F",[4.86872,-2.55432,1.43],[[0.999996,0.00301266,0],[0,0,1]],true,[]],["Land_Metal_rack_F",[4.87663,-3.65588,1.43],[[0.999996,0.00301266,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[0.741312,0.943729,0.50199],[[-0.715009,0.699115,0],[0,0,1]],true,[]],["Land_CashDesk_F",[1.1562,-1.18908,0.511474],[[0.0359482,0.999354,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_02.p3d",[0.801767,1.95349,0.53084],[[-0.302047,-0.953293,0],[0,0,1]],true,[]]]];
				
				comment "House (Big, Altis)";
					
					_compData pushBack ["Land_i_House_Big_02_V1_F",[["Land_CampingChair_V2_F",[0.704762,-1.8854,0.765741],[[-0.897041,0.441947,0],[0,0,1]],true,["a3\structures_f\civ\camping\data\tablechair_co.paa"]],["Land_Garbage_square3_F",[-3.29768,0.685405,3.71851],[[0.992231,0.124413,0],[0,0,1]],false,[]],["Land_Garbage_square5_F",[2.25213,1.5814,3.70603],[[0.994676,-0.103055,0],[0,0,1]],false,[]],["Land_FlowerPot_01_Flower_F",[-4.24104,-4.26625,1.06033],[[-0.812444,-0.58304,0],[0,0,1]],true,[]],["Land_FlowerPot_01_Flower_F",[-1.46174,4.33726,1.06033],[[0,1,0],[0,0,1]],true,[]],["Land_WallSign_01_chalkboard_F",[3.05681,4.73521,4.87496],[[-0.000361292,-1,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[3.0241,4.73765,5.55862],[[-0.000361292,-1,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[0.0294688,-4.73549,5.44227],[[-0.000361292,-1,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[0.01775,-4.7394,4.87496],[[-0.000361292,-1,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_LuggageHeap_02_F",[3.97966,4.19224,3.97294],[[0.998644,-0.0520599,0],[0,0,1]],false,[]],["Land_Stretcher_01_olive_F",[3.88689,0.511089,3.90821],[[0.057589,0.99834,0],[0,0,1]],true,["a3\props_f_orange\humanitarian\camps\data\stretcher_olive_f_co.paa"]],["Land_Stretcher_01_olive_F",[-3.73274,0.720073,3.90821],[[-0.0404203,-0.999183,0],[0,0,1]],true,["a3\props_f_orange\humanitarian\camps\data\stretcher_olive_f_co.paa"]],["Land_Stretcher_01_olive_F",[2.04363,0.550151,3.90821],[[0.0249922,-0.999688,0],[0,0,1]],true,["a3\props_f_orange\humanitarian\camps\data\stretcher_olive_f_co.paa"]],["Fridge_01_closed_F",[-4.01155,-0.522603,0.777742],[[-0.0117817,-0.999931,0],[0,0,1]],true,[]],["Land_PCSet_01_mouse_F",[1.45427,-2.54653,1.14906],[[0.995997,-0.0893844,0],[0,0,1]],true,[]],["Land_PCSet_01_keyboard_F",[1.44988,-2.20034,1.13178],[[0.999991,-0.00424174,0],[0,0,1]],true,[]],["Land_PCSet_01_screen_F",[1.83123,-2.25209,1.37853],[[0.998787,-0.0492318,0],[0,0,1]],true,["#(argb,8,8,3)color(0,0,0,0,co)"]],["Land_PCSet_01_case_F",[1.695,-2.55874,0.516297],[[0.999623,-0.0274469,0],[0,0,1]],true,[]],["Land_MobilePhone_smart_F",[3.61248,2.20152,1.12831],[[-0.995725,0.0923679,0],[0,0,1]],true,["a3\structures_f\items\electronics\data\electronics_screens_mobilephone_smart_co.paa"]],["Land_GamingSet_01_controller_F",[3.58025,1.66099,1.15054],[[0.988592,0.150618,0],[0,0,1]],true,[]],["Land_GamingSet_01_console_F",[3.59929,1.38023,1.16046],[[0.995812,-0.0914235,0],[0,0,1]],true,[]],["Land_ChairWood_F",[-3.24446,1.59312,0.258599],[[0.954141,-0.299357,0],[0,0,1]],true,[]],["Land_ChairWood_F",[-3.98176,3.7147,0.258599],[[-0.836655,0.54773,0],[0,0,1]],true,[]],["Land_ChairWood_F",[-4.02668,0.977397,0.258599],[[-0.0437974,-0.99904,0],[0,0,1]],true,[]],["Land_ChairWood_F",[-3.28108,2.53843,0.258599],[[0.954861,0.297051,0],[0,0,1]],true,[]],["Land_TableBig_01_F",[-3.98567,2.20054,0.70372],[[-0.999964,0.00844231,0],[0,0,1]],true,[]],["Land_FlatTV_01_F",[4.15056,1.81822,1.43437],[[0.999996,-0.00268201,0],[0,0,1]],true,["#(argb,8,8,3)color(0,0,0,0,co)"]],["Land_Sofa_01_F",[2.04656,1.83531,0.757361],[[0.999996,-0.00288514,0],[0,0,1]],true,[]],["Land_Can_V3_F",[1.71306,-1.56801,1.16486],[[0,1,0],[0,0,1]],true,[]],["Land_Can_V3_F",[1.68816,-1.65932,1.16486],[[0,1,0],[0,0,1]],true,[]],["Land_Can_V3_F",[1.45232,-1.6603,1.16486],[[0,1,0],[0,0,1]],true,[]],["Land_Can_V3_F",[1.56853,-1.65151,1.16486],[[0,1,0],[0,0,1]],true,[]],["Land_Can_V3_F",[1.90007,-1.56118,1.16486],[[0,1,0],[0,0,1]],true,[]],["Land_Can_V3_F",[1.445,-1.51333,1.16486],[[0,1,0],[0,0,1]],true,[]],["Land_Can_V3_F",[1.56414,-1.53432,1.16486],[[0,1,0],[0,0,1]],true,[]],["Land_Can_V3_F",[1.50603,-1.76772,1.16486],[[0,1,0],[0,0,1]],true,[]],["Land_Can_V3_F",[2.00359,-1.63344,1.16486],[[0,1,0],[0,0,1]],true,[]],["Land_Can_V3_F",[1.78679,-1.44252,1.16486],[[0,1,0],[0,0,1]],true,[]],["Land_Can_V3_F",[1.92058,-1.47329,1.16486],[[0,1,0],[0,0,1]],true,[]],["Land_Can_V3_F",[1.81658,-1.77114,1.16486],[[0,1,0],[0,0,1]],true,[]],["Land_BottlePlastic_V2_F",[1.65349,-1.73891,1.2547],[[0,1,0],[0,0,1]],true,[]],["Land_WoodenTable_small_F",[4.00554,1.78892,0.691551],[[0,1,0],[0,0,1]],true,[]],["Land_WoodenTable_small_F",[1.83367,-2.09877,0.691551],[[0,1,0],[0,0,1]],true,[]],["Land_Rug_01_F",[-3.01545,-3.77309,0.269939],[[0.99996,-0.00893764,0],[0,0,1]],false,["a3\props_f_orange\furniture\data\rug_01_brown_co.paa"]],["Land_Rug_01_F",[-0.00617576,3.68101,0.269939],[[-0.999802,-0.0198871,0],[0,0,1]],false,["a3\props_f_orange\furniture\data\rug_01_brown_co.paa"]],["Land_BagFence_Long_F",[-2.52424,-6.66713,0.575902],[[0,1,0],[0,0,1]],false,[]],["Land_BagFence_Short_F",[4.3991,-5.97719,1.01087],[[0.999974,0.00717176,0],[0,0,1]],false,[]],["Land_BagFence_Short_F",[-4.45344,-5.90249,0.570874],[[-0.999799,-0.0200249,0],[0,0,1]],false,[]],["Land_BagFence_Short_F",[2.80974,-7.24086,1.01087],[[0.0172587,-0.999851,0],[0,0,1]],false,[]],["Land_BagFence_Short_F",[0.900563,-3.6686,4.08087],[[0.999772,-0.0213575,0],[0,0,1]],false,[]],["Land_BagFence_Corner_F",[4.16033,-6.90786,1.01769],[[0.999585,0.0288041,0],[0,0,1]],false,[]],["Land_BagFence_Corner_F",[-4.08381,-6.48598,0.577686],[[0.0393462,-0.999226,0],[0,0,1]],false,[]]]];
					
					_compData pushBack ["Land_i_House_Big_02_V1_F",[["Land_Bench_F",[-4.3011,-2.92397,0.505936],[[0,1,0],[0,0,1]],true,[]],["Land_Bucket_clean_F",[-3.97688,-4.52553,0.397623],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\metalcrate\metalcrate.p3d",[-4.2425,-1.64077,0.135367],[[0.999712,-0.0239931,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\beds\postel_panelak1.p3d",[-3.57063,0.224468,3.609],[[-0.0315679,-0.999502,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\beds\postel_panelak1.p3d",[-4.50813,3.55259,3.615],[[0,1,0],[0,0,1]],true,[]],["Land_Stretcher_01_olive_F",[-4.10188,-2.50795,3.84619],[[0,1,0],[0,0,1]],true,["a3\props_f_orange\humanitarian\camps\data\stretcher_olive_f_co.paa"]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_02.p3d",[-4.305,-4.29116,0.260095],[[0,1,0],[0,0,1]],true,[]],["Land_TableBig_01_F",[-4.13899,1.79673,0.650174],[[-0.998489,0.0549574,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\wallboards\picture_d\picture_d.p3d",[-4.58235,1.57994,0.942726],[[-0.999998,0.00205589,-0.000278978],[0,0.134465,0.990918]],true,[]],["Land_ChairWood_F",[-4.0218,0.355327,0.207868],[[-0.471345,-0.881949,0],[0,0,1]],true,[]],["Land_ChairWood_F",[-3.38118,1.23814,0.258599],[[0.964498,-0.264089,0],[0,0,1]],true,[]],["Land_ChairWood_F",[-3.35579,2.26353,0.258599],[[0.973616,0.228192,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_02.p3d",[-4.05696,-4.20913,3.66743],[[0.946617,-0.322361,0],[0,0,1]],true,[]],["Land_Garbage_square3_F",[-1.1175,-2.70522,0.294099],[[0,1,0],[0,0,1]],false,[]],["Land_Garbage_square5_F",[-1.3968,1.78501,3.66876],[[0,1,0],[0,0,1]],false,[]],["a3\structures_f\civ\garbage\garbage_square5_f.p3d",[2.51726,1.75767,0.298436],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\mil\barracks\barracks_acc_proxy_4_f.p3d",[3.05242,4.92955,1.46001],[[-0.0300673,-0.999487,0.0110577],[0.0039795,0.0109429,0.999932]],true,[]],["Land_WoodenTable_large_F",[-0.617504,3.31626,4.09889],[[-0.772526,0.634983,1.10362e-007],[-0.634975,-0.772516,-0.00507391]],true,[]],["Land_PaperBox_01_small_closed_brown_food_F",[2.02507,-2.38881,0.87182],[[-0.0394431,-0.999222,0],[0,0,1]],true,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_brown_food_co.paa"]],["Land_PaperBox_01_small_closed_white_med_F",[0.794605,-1.61342,0.466228],[[0,1,0],[0,0,1]],true,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_white_med_co.paa"]],["Land_PaperBox_01_small_closed_white_med_F",[1.38836,-1.7228,0.466228],[[0.999368,0.0355501,0],[0,0,1]],true,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_white_med_co.paa"]],["Land_PaperBox_01_small_closed_brown_food_F",[2.01921,-1.75014,0.871505],[[0.997558,-0.0698422,0],[0,0,1]],true,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_brown_food_co.paa"]],["Land_PaperBox_01_small_closed_brown_food_F",[2.03679,-2.57045,0.458272],[[0,1,0],[0,0,1]],true,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_brown_food_co.paa"]],["Land_PaperBox_01_small_closed_brown_food_F",[2.02507,-2.0978,0.458272],[[0,1,0],[0,0,1]],true,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_brown_food_co.paa"]],["Land_PaperBox_01_small_closed_brown_food_F",[2.01921,-1.60561,0.458272],[[0,1,0],[0,0,1]],true,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_brown_food_co.paa"]],["Land_PaperBox_01_small_closed_brown_F",[3.21843,2.00767,0.447528],[[0.0285598,-0.999592,0],[0,0,1]],true,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_brown_co.paa"]],["Land_Sofa_01_F",[2.95671,-0.334126,0.757361],[[-0.0518488,0.998655,0],[0,0,1]],true,[]],["Land_ChairWood_F",[3.66375,3.68736,3.66593],[[0.481075,-0.87668,0],[0,0,1]],true,[]],["Land_ChairWood_F",[2.0075,2.04673,0.258599],[[-0.272188,0.962244,0],[0,0,1]],true,[]],["Land_ChairWood_F",[1.12273,-0.037251,0.258599],[[-0.471345,-0.881949,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_a_open.p3d",[4.21062,3.07798,0.251786],[[0.999925,-0.012254,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_a_open.p3d",[4.21453,3.99791,0.255783],[[0.999925,-0.012254,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[3.06804,0.937358,0.244683],[[-0.999966,-0.00825538,0],[0,0,1]],true,[]],["Land_WaterCooler_01_old_F",[-0.926098,4.40416,0.991328],[[0,1,0],[0,0,1]],true,["a3\structures_f_bootcamp\items\electronics\data\watercooler_01_old_co.paa"]],["Land_PaperBox_01_open_boxes_F",[-0.131176,-0.0392041,0.890444],[[0,1,0],[0,0,1]],true,[]],["Land_LuggageHeap_01_F",[2.6032,1.72056,4.13785],[[0,1,0],[0,0,1]],false,[]],["Land_TableDesk_F",[3.62273,4.17759,3.95957],[[-0.0220944,-0.999756,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_01.p3d",[2.15789,4.17759,3.6702],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_01.p3d",[4.2575,-0.388813,0.262861],[[0,1,0],[0,0,1]],true,[]],["Land_Stretcher_01_F",[-0.267895,-4.26577,3.86028],[[-0.999827,0.0185841,0],[0,0,1]],true,["a3\props_f_orange\humanitarian\camps\data\stretcher_f_co.paa"]],["Land_WoodenBed_01_F",[3.45867,0.337749,4.12251],[[0.999984,-0.00569142,0],[0,0,1]],true,[]],["Land_FlatTV_01_F",[3.21062,2.0272,0.965743],[[0.0471755,0.998887,0],[0,0,1]],true,["#(argb,8,8,3)color(0,0,0,0,co)"]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_open_f.p3d",[1.15789,-2.62514,0.471899],[[0,1,0],[0,0,1]],true,[]]]];
			
			comment "Gustav's Compositions";
			
				comment "Barracks (New)";

					_compData pushBack ["Land_i_Barracks_V1_F",[["a3\structures_f\civ\market\cratesshabby_f.p3d",[-13.2344,-0.31543,4.61184],[[0.0340273,0.999421,0],[0,0,1]],true,[]],["a3\structures_f\items\vessels\canisterplastic_f.p3d",[-2.47021,-0.545898,0.888823],[[-0.999998,-0.00204228,0],[0,0,1]],true,[]],["a3\structures_f\civ\camping\campingchair_v1_folded_f.p3d",[-8.40967,-1.23828,4.36818],[[-0.998577,0.0533284,1.46329e-005],[-0.0520797,-0.975254,0.214864]],true,[]],["a3\structures_f\civ\camping\campingtable_small_f.p3d",[-7.47998,-1.48193,4.2512],[[0.00143114,-0.999999,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\school_clock.p3d",[-2.91162,-2.98633,2.47708],[[0.00278554,1.2,0],[0,0,1.2]],true,[]],["a3\structures_f\items\electronics\portable_generator_f.p3d",[-13.0317,0.559082,4.19318],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\items\electronics\portable_generator_f.p3d",[-7.2832,-4.09668,0.870181],[[-0.999954,-0.00961669,0],[0,0,1]],true,[]],["a3\props_f_orange\civilian\infoboards\mapboard_01_wall_f.p3d",[-6.90283,-3.37158,5.21256],[[0.999998,-0.00198416,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[-10.3911,3.83691,3.84881],[[0.0343645,-0.999409,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[-1.2373,3.84082,3.84158],[[0.0224304,-0.999748,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[-7.33691,2.66162,3.83478],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[1.1958,2.6626,3.85436],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[-13.0107,2.6626,3.84763],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[-6,2.66455,3.82888],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_khaki_f.p3d",[-1.55762,-0.553711,1.01579],[[-0.999922,-0.012479,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[-2.68848,0.967285,0.630576],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[-0.101074,4.6748,4.03627],[[0.00247925,0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[-8.47119,4.69873,4.09611],[[0.00247925,0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-10.314,1.50879,3.84919],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-2.43945,1.51611,3.84542],[[0.0105614,-0.999944,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-3.24658,1.50293,3.84763],[[0.0105614,-0.999944,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-11.1172,1.51318,3.84919],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_a_open.p3d",[-1.3833,4.29346,0.4969],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_a_open.p3d",[-5.30518,0.626465,3.8449],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\ch_mod_c\ch_mod_c.p3d",[-2.12939,-3.76367,0.503374],[[0.233265,0.972413,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_destroyed_f.p3d",[-4.11719,0.688477,0.734864],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\furniture\tabledesk_f.p3d",[-2.27197,-4.24463,0.927101],[[-0.00176794,0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-2.84473,1.50098,3.84519],[[0.00684629,-0.999977,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-3.64941,1.49902,3.84662],[[0.00684629,-0.999977,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-11.5186,1.51416,3.84919],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin_open.p3d",[-5.17969,0.714844,0.512645],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[-3.01074,-6.28516,0.513291],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[-8.25391,-0.584473,0.509726],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[-8.14258,-0.571777,3.842],[[0.00799352,0.999968,0],[0,0,1]],true,[]],["Land_WallSign_01_chalkboard_F",[1.64111,3.03418,1.84113],[[-0.999998,-0.00191926,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n2\wallsign_01_f_chalkboard_tools_co.paa","a3\missions_f_orange\data\img\orange_compositions\n2\wallsign_01_f_chalkboard_tools_co.paa"]],["Land_WallSign_01_chalkboard_F",[-2.98096,1.23242,1.84368],[[0,1,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n2\wallsign_01_f_chalkboard_tools_co.paa","a3\missions_f_orange\data\img\orange_compositions\n2\wallsign_01_f_chalkboard_tools_co.paa"]],["a3\structures_f_enoch\furniture\cases\locker\locker_open_v1.p3d",[-10.7134,1.5127,3.85084],[[0.00878195,-0.999961,0],[0,0,1]],true,[]],["a3\structures_f_epa\civ\constructions\pallets_stack_f.p3d",[-7.7124,3.89355,0.954568],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[-10.2896,0.689453,3.85086],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_open_water_f.p3d",[-12.7524,3.88379,1.14119],[[0.999768,0.0215531,0],[0,0,1]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_f.p3d",[-0.391602,4.37549,1.01724],[[-0.999979,-0.00652498,0],[0,0,1]],true,[]],["Land_FoodSacks_01_cargo_brown_F",[-11.041,3.91309,1.04013],[[0,1,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_full_brown_co.paa","a3\props_f_orange\humanitarian\supplies\data\foodsack_01_cargo_brown_mlod_co.paa"]],["a3\structures_f\furniture\metal_rack_tall_f.p3d",[-8.09131,-4.37207,0.510435],[[-0.025172,-0.999683,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_tall_f.p3d",[-9.64355,-4.31934,0.517131],[[-0.025172,-0.999683,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_tall_f.p3d",[-10.416,-4.29639,0.51813],[[-0.025172,-0.999683,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_tall_f.p3d",[-8.86377,-4.34912,0.511434],[[-0.025172,-0.999683,0],[0,0,1]],true,[]],["a3\structures_f\civ\camping\campingchair_v1_f.p3d",[-9.90723,-2.95752,4.3462],[[-0.99984,0.017911,0],[0,0,1]],true,[]],["a3\structures_f\civ\camping\campingchair_v1_f.p3d",[-10.9248,-2.98145,4.34999],[[-0.99984,0.017911,0],[0,0,1]],true,[]],["a3\structures_f\civ\camping\campingchair_v1_f.p3d",[-10.9668,-3.88574,4.35284],[[-0.99984,0.017911,0],[0,0,1]],true,[]],["a3\structures_f\civ\camping\campingchair_v1_f.p3d",[-12.3647,-3.84717,4.35633],[[-0.99984,0.017911,0],[0,0,1]],true,[]],["a3\structures_f\civ\camping\campingchair_v1_f.p3d",[-12.3228,-2.94287,4.35347],[[-0.99984,0.017911,0],[0,0,1]],true,[]],["a3\structures_f\civ\camping\campingchair_v1_f.p3d",[-13.3916,-3.85059,4.36011],[[-0.99984,0.017911,0],[0,0,1]],true,[]],["a3\structures_f\civ\camping\campingchair_v1_f.p3d",[-9.94922,-3.86182,4.34906],[[-0.99984,0.017911,0],[0,0,1]],true,[]],["a3\structures_f\civ\camping\campingchair_v1_f.p3d",[-13.3496,-2.94629,4.35725],[[-0.99984,0.017911,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[-1.43408,4.27148,4.19884],[[-0.00471241,-0.999989,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[-10.5933,4.26514,4.20607],[[0.00722656,-0.999974,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_f.p3d",[-13.4482,-1.68652,1.41265],[[-0.999984,0.00561236,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_f.p3d",[-13.4458,-3.91602,1.41348],[[-0.999984,0.00561236,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_f.p3d",[-9.80225,-1.28174,1.41356],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_f.p3d",[-8.68066,-1.27588,1.41548],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_f.p3d",[-7.57275,-1.2666,1.41274],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_f.p3d",[-13.4453,-2.79443,1.4154],[[-0.999984,0.00561236,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\workbench_01_f.p3d",[1.13867,2.93994,0.979948],[[0.999995,-0.00326125,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\various\workbench.p3d",[-4.13867,1.65576,0.496223],[[-0.999998,0.00193692,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\various\workbench_dz.p3d",[-4.55811,4.14453,0.876816],[[0,1,0],[0,0,1]],true,[]],["Land_FoodSacks_01_large_brown_F",[-5.89795,-4.49463,4.32311],[[0,1,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_full_brown_co.paa","a3\props_f_orange\humanitarian\supplies\data\foodsack_01_large_brown_mlod_co.paa"]],["a3\structures_f\civ\market\sack_f.p3d",[13.9712,4.29346,0.938272],[[-0.999829,0.0184669,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\cratesplastic_f.p3d",[12.9829,4.24902,1.73874],[[0.00845338,0.999964,0],[0,0,1]],true,[]],["a3\structures_f\furniture\rack_f.p3d",[14.4199,-3.80762,1.3249],[[0.0119029,-0.999929,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[7.82422,3.86328,0.504431],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[7.79785,-1.90137,3.84128],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[2.52393,-1.87158,0.514796],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[9.15771,2.67236,3.86485],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[2.64795,2.68359,0.506238],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[2.54492,-1.9082,3.86053],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[2.56348,2.67188,3.79388],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[7.75488,2.68896,3.83138],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[7.81982,-1.90186,0.530608],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[14.1323,2.69922,3.82415],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[9.18408,-1.91602,3.83934],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[9.24854,-1.91211,0.496559],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[5.64844,4.68408,0.656162],[[0.00251024,0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[3.15674,-4.58789,4.00294],[[-0.0128627,-0.999917,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[9.61523,-4.58447,4.01418],[[-0.0128627,-0.999917,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[10.7173,-4.5835,0.65735],[[-0.0128627,-0.999917,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[8.26416,1.0083,3.98103],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[13.1182,4.67578,4.09928],[[0.00247837,0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[6.44092,4.6875,4.05435],[[0.00247837,0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[4.51514,-4.58594,0.57435],[[-0.0128627,-0.999917,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[5.25,1.49414,0.491456],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[4.44678,1.49854,0.491456],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[4.93408,1.50293,3.85031],[[0.0105614,-0.999944,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[4.12695,1.48975,3.85251],[[0.0105614,-0.999944,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[5.46582,-1.35645,0.516098],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[12.123,1.49707,3.8462],[[0.00238505,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[5.01367,-1.36133,3.84921],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[14.3848,-2.4707,0.503506],[[0.999989,-0.00460282,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[4.6626,-1.354,0.516098],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[5.81689,-1.36377,3.84921],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[10.7227,-1.35205,3.84926],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[11.5259,-1.35449,3.84926],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[12.9263,1.49609,3.8462],[[0.00238505,-0.999997,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_destroyed_f.p3d",[6.67725,-0.531738,0.729656],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[11.124,-1.35254,3.84926],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[3.72412,1.48584,3.85151],[[0.00684629,-0.999977,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[11.9272,-1.354,3.84926],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[5.06396,-1.35449,0.516098],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[11.7217,1.49561,3.8462],[[0.00238505,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[4.04541,1.49951,0.491456],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[14.3828,-2.87207,0.503506],[[0.999989,-0.00460282,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[4.52881,1.48779,3.85008],[[0.00684629,-0.999977,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[5.41504,-1.36182,3.84921],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[6.21826,-1.36328,3.84921],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[12.5249,1.49609,3.8462],[[0.00238505,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[9.90625,-0.564941,0.508],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[7.06299,-0.583008,3.835],[[-0.00640227,0.999979,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_open_v1.p3d",[4.85059,1.49805,0.493103],[[0.00878195,-0.999961,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[9.45752,-0.546387,3.84409],[[-0.00164947,-0.999999,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[3.50391,0.69043,3.83424],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[2.10205,0.6875,0.513576],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[4.16016,-3.35742,0.521549],[[0.999993,-0.00366489,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[5.98926,3.55225,0.525047],[[0.999993,-0.00366489,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[11.0552,-2.58936,3.89832],[[0.999993,-0.00366489,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[5.76318,-2.6748,3.89832],[[0.999993,-0.00366489,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\lab_teacher_bench.p3d",[12.4263,4.20898,0.489708],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_open_v3.p3d",[5.86914,-1.36475,0.520647],[[0.0165432,0.999863,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\camps\emergencyblanket_01_stack_f.p3d",[2.23682,-3.54785,0.705206],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\furniture\icebox_f.p3d",[12.3154,1.70752,1.13538],[[-0.00602417,-0.999982,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\metalcrate\metalcrate.p3d",[2.3667,0.690918,3.83311],[[-0.999986,-0.00521895,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\metalcrate\metalcrate.p3d",[7.66357,-0.550781,0.520112],[[-0.999986,-0.00521895,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[11.7983,-1.47412,0.854268],[[0.00303331,-0.999995,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[4.47754,-4.16309,4.19813],[[-0.00115472,0.999999,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[3.96924,4.26074,0.8691],[[0.0054015,-0.999985,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[11.2817,4.28027,4.18992],[[-0.00312003,-0.999995,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[12.3481,-4.16113,4.19516],[[-0.00115472,0.999999,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[6.18311,-4.17285,0.865839],[[0.000345376,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[4.98682,4.2666,4.20121],[[0.00618111,-0.999981,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_b_open.p3d",[10.4722,-1.47217,0.525908],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\lab_sink.p3d",[14.0454,3.08154,0.581771],[[-0.999967,-0.00815954,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[12.0063,-1.78613,0.512901],[[-0.0408646,-0.999165,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[5.98486,-3.73633,0.508578],[[-0.0267958,0.999641,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[4.17041,3.83252,0.511838],[[0.0325409,-0.99947,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[4.27783,-3.72705,3.84086],[[-0.0282954,0.9996,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[12.1484,-3.7251,3.8379],[[-0.0282954,0.9996,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[11.4795,3.8501,3.83265],[[0.0240223,-0.999711,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[5.19336,3.78613,3.84482],[[-0.0079999,-0.999968,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[3.27783,0.651855,0.515693],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[4.53857,0.685059,3.84933],[[0,1,0],[0,0,1]],true,[]]]];

					_compData pushBack ["Land_i_Barracks_V1_F",[["Land_FoodSack_01_empty_brown_F",[-11.6152,2.1001,0.558815],[[-0.815727,-0.578437,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_dmg_brown_co.paa"]],["a3\structures_f\civ\market\cratesshabby_f.p3d",[-7.41211,4.2832,1.27651],[[-0.999615,0.0277503,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_line_f.p3d",[-4.98535,0.368652,0.570384],[[-0.999854,0.0170661,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_line_f.p3d",[-5.79004,-3.98877,3.89402],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_square3_f.p3d",[-3.16943,-4.89795,3.8936],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_square3_f.p3d",[-5.40869,-0.0996094,3.90442],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_square3_f.p3d",[-5.61133,-2.96094,0.561906],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\cratesplastic_f.p3d",[-10.145,4.21387,1.68707],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\box_c\box_c.p3d",[-12.3779,-0.590332,0.820963],[[0,1,0],[0,0,1]],true,[]],["Land_FoodSack_01_dmg_brown_F",[-12.3135,2.10352,0.602833],[[-0.141624,0.989921,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_dmg_brown_co.paa"]],["a3\structures_f\furniture\rack_f.p3d",[-1.26318,-0.605469,4.66094],[[-0.999999,0.00143386,0],[0,0,1]],true,[]],["a3\props_f_exp\civilian\garbage\garbageheap_03_f.p3d",[-6.00342,-3.4458,4.32975],[[0.997835,-0.0657686,0],[0,0,1]],true,[]],["a3\props_f_exp\civilian\garbage\garbageheap_04_f.p3d",[-6.11914,-2.81152,0.998375],[[0.998789,-0.0492044,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\workbench_01_f.p3d",[-7.36816,-2.79346,0.963759],[[0.999995,-0.00326125,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[-10.3916,3.83643,3.84881],[[0.0343645,-0.999409,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[-1.23779,3.84033,3.84158],[[0.0224304,-0.999748,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[-13.0112,2.66211,3.84763],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[-9.08398,-1.52148,3.85756],[[-0.999995,-0.00311754,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[-7.3374,2.66113,3.83478],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[1.19531,2.66211,3.85436],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[-13.1387,-2.53662,3.86988],[[-0.0182104,-0.999834,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[-6.00049,2.66406,3.82888],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[-12.3022,-4.6084,4.0492],[[-0.00965351,-0.999953,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[-8.47168,4.69824,4.09611],[[0.00247925,0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[-8.78125,-0.871582,0.618763],[[-0.00056204,-1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[-0.101563,4.67432,4.03627],[[0.00247925,0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[-8.45117,-0.862305,4.08157],[[-0.00965351,-0.999953,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[1.40527,2.30615,0.506351],[[0.999991,0.00428945,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[1.40527,1.50342,0.509368],[[0.999991,0.00428945,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-10.1694,-4.29688,3.84819],[[0.00190464,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-3.38232,1.49707,0.50801],[[0.0052172,-0.999986,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-11.1177,1.5127,3.84919],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-4.58691,1.49805,0.511246],[[0.0052172,-0.999986,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-5.38965,1.49707,0.514263],[[0.0052172,-0.999986,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-3.24707,1.50244,3.84763],[[0.0105614,-0.999944,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-10.3145,1.5083,3.84919],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-0.432129,3.91016,0.714653],[[0.887307,0.46116,0.00428795],[0.461177,-0.887295,-0.0048724]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-0.585449,3.81982,1.10644],[[0.801069,0.598557,0.00428699],[0.598572,-0.801054,-0.00486867]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[1.40625,3.10938,0.504666],[[0.999991,0.00428945,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[1.40625,3.9209,0.501649],[[0.999991,0.00428945,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[1.40723,3.51953,0.503116],[[0.999991,0.00428945,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-2.43994,1.51563,3.84542],[[0.0105614,-0.999944,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-2.98096,1.49854,0.506544],[[0.0052172,-0.999986,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-3.78369,1.49756,0.509561],[[0.0052172,-0.999986,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-7.14404,-2.70215,3.84625],[[0.999996,0.00269468,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_a_open.p3d",[-9.28613,-1.4248,0.4969],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_destroyed_f.p3d",[1.625,0.68457,2.65847],[[-0.0549624,0.998488,0],[0,0,1]],true,[]],["a3\structures_f\furniture\tabledesk_f.p3d",[-1.6543,-5.40234,4.21025],[[-0.00662089,-0.00104024,-0.999978],[0.987932,0.154745,-0.00670211]],true,[]],["a3\structures_f_enoch\furniture\various\workbench.p3d",[-11.0039,-4.12061,0.496223],[[-0.999998,0.00193692,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-4.18604,1.49902,0.51101],[[0.000694426,-1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-2.58008,1.49951,0.506308],[[0.000694426,-1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[1.40479,1.9043,0.509131],[[1,-0.000233336,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-4.98877,1.49805,0.514026],[[0.000694426,-1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-10.5732,-4.29395,3.84457],[[-0.0115958,-0.999933,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-7.14697,-3.10547,3.84263],[[0.999942,-0.0108059,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-3.6499,1.49854,3.84662],[[0.00684629,-0.999977,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[1.4043,2.70703,0.506115],[[1,-0.000233336,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-11.519,1.51367,3.84919],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[1.40527,4.32178,0.501413],[[1,-0.000233336,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-2.84521,1.50049,3.84519],[[0.00684629,-0.999977,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin_open.p3d",[-5.37793,0.727051,3.83793],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[-4.05469,-6.28662,3.85119],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[0.896973,-0.568848,3.84571],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[-4.05566,0.72998,0.509357],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[-3.12939,0.722168,3.84481],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[-10.7988,0.693848,3.84079],[[0,1,0],[0,0,1]],true,[]],["Land_WallSign_01_chalkboard_F",[-6.90869,-2.6377,1.84068],[[-0.999998,-0.00191926,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n2\wallsign_01_f_chalkboard_tools_co.paa","a3\missions_f_orange\data\img\orange_compositions\n2\wallsign_01_f_chalkboard_tools_co.paa"]],["a3\structures_f_enoch\furniture\cases\locker\locker_open_v1.p3d",[-10.7139,1.51221,3.85084],[[0.00878195,-0.999961,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[-12.96,0.665039,3.84254],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[1.95361,0.681152,0.513945],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[-6.31934,0.690918,0.517114],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_f.p3d",[-12.6357,-1.40967,1.01724],[[-0.999979,-0.00652498,0],[0,0,1]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_f.p3d",[-7.58105,1.50244,0.989462],[[0.999996,-0.00275079,0],[0,0,1]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_f.p3d",[-1.8501,-3.32471,1.01125],[[-0.999989,-0.004765,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\lab_sink.p3d",[-8.48926,4.06299,0.601202],[[-0.0113939,-0.999935,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_b_open.p3d",[-3.01563,-3.3418,0.516295],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[-11.3804,-2.68457,3.86184],[[-0.0257905,-0.999667,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[-8.75195,-2.95361,3.84758],[[-0.999311,0.0371047,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[-9.16064,2.73438,3.84321],[[-0.999311,0.0371047,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\lab_teacher_bench.p3d",[-10.1279,4.24902,0.429156],[[0.00346105,0.999994,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\metalcrate\metalcrate.p3d",[-7.44482,0.703613,0.512756],[[-0.999967,-0.00810565,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[-2.78564,-4.29736,4.18933],[[0,0.0348551,-0.999392],[0,0.999392,0.0348551]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[-1.43457,4.271,4.19884],[[-0.00471241,-0.999989,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[-9.19385,-4.19385,4.19048],[[0.00298213,0.999996,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[-10.5938,4.26465,4.20607],[[0.00722656,-0.999974,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_f.p3d",[-13.4824,3.9834,1.40878],[[-0.999935,-0.0113733,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_f.p3d",[-10.7173,1.39404,1.41163],[[-0.00831079,-0.999965,0],[0,0,1]],true,[]],["a3\structures_f_epa\items\vessels\tincontainer_f.p3d",[-9.53857,3.99561,1.54979],[[-0.93563,0.352982,0],[0,0,1]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_f.p3d",[-7.18018,-3.8252,4.35672],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\furniture\bench_f.p3d",[-4.2168,4.35352,0.772909],[[0.999983,0.00587122,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[-9.44189,-3.81348,3.8375],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\various\workbench_dz.p3d",[-6.15039,2.77637,0.985172],[[-0.999981,-0.00612731,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_line_f.p3d",[6.73975,0.27002,3.89668],[[0.999969,-0.00787529,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_line_f.p3d",[6.24902,-0.518555,0.556075],[[-0.999854,0.0170661,0],[0,0,1]],true,[]],["a3\structures_f\civ\constructions\woodenbox_f.p3d",[12.4741,1.04004,0.788333],[[0,-0.0010085,0.999999],[0,-0.999999,-0.0010085]],true,[]],["a3\structures_f_enoch\furniture\decoration\box_c\box_c.p3d",[3.83057,0.736328,0.81843],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\furniture\rack_f.p3d",[14.4194,-3.80811,1.3249],[[0.0119029,-0.999929,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[4.27734,-3.72754,3.84086],[[-0.0282954,0.9996,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[12.0059,-1.78662,0.512901],[[-0.0408646,-0.999165,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[4.16992,3.83203,0.511838],[[0.0325409,-0.99947,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[12.1479,-3.72559,3.8379],[[-0.0282954,0.9996,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[11.479,3.84961,3.83265],[[0.0240223,-0.999711,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[5.98438,-3.73682,0.508578],[[-0.0267958,0.999641,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[5.19287,3.78564,3.84482],[[-0.0079999,-0.999968,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[11.457,1.93506,0.516454],[[0.0449056,0.998991,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[3.01563,0.714844,0.505303],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[14.1318,2.69873,3.82415],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[9.18359,-1.9165,3.83934],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[7.81934,-1.90234,0.530608],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[9.15723,2.67188,3.86485],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[2.52344,-1.87207,0.514796],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[9.24805,-1.9126,0.496559],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[2.64746,2.68311,0.506238],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[2.54443,-1.90869,3.86053],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[2.56299,2.67139,3.79388],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[7.82373,3.86279,0.504431],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[7.79736,-1.90186,3.84128],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[7.75439,2.68848,3.83138],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[9.146,2.65674,0.499664],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\vojenska_palanda\vojenska_palanda.p3d",[13.1973,1.8584,0.534049],[[-0.999996,-0.00286578,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[3.15625,-4.58838,4.00294],[[-0.0128627,-0.999917,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[10.8667,-0.842285,0.684637],[[-0.00056204,-1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[9.61475,-4.58496,4.01418],[[-0.0128627,-0.999917,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[6.44043,4.68701,4.05435],[[0.00247837,0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[13.1177,4.67529,4.09928],[[0.00247837,0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[5.64795,4.68359,0.656162],[[0.00251024,0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[4.51465,-4.58643,0.57435],[[-0.0128627,-0.999917,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[10.7168,-4.58398,0.65735],[[-0.0128627,-0.999917,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[4.93359,1.50244,3.85031],[[0.0105614,-0.999944,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[12.9258,1.49561,3.8462],[[0.00238505,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[5.81641,-1.36426,3.84921],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[14.3843,-2.47119,0.503506],[[0.999989,-0.00460282,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[4.66211,-1.35449,0.516098],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[5.46533,-1.35693,0.516098],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[11.5254,-1.35498,3.84926],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[10.7222,-1.35254,3.84926],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[5.01318,-1.36182,3.84921],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[4.44629,1.49805,0.491456],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[5.24951,1.49365,0.491456],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[4.12646,1.48926,3.85251],[[0.0105614,-0.999944,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[12.1226,1.49658,3.8462],[[0.00238505,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[14.3789,4.07715,0.512708],[[0.99994,0.0109111,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[12.5244,1.49561,3.8462],[[0.00238505,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[11.1235,-1.35303,3.84926],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[3.72363,1.48535,3.85151],[[0.00684629,-0.999977,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[4.04492,1.49902,0.491456],[[-0.00210508,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[6.21777,-1.36377,3.84921],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[5.41455,-1.3623,3.84921],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[14.3823,-2.87256,0.503506],[[0.999989,-0.00460282,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[11.7212,1.49512,3.8462],[[0.00238505,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[4.52832,1.4873,3.85008],[[0.00684629,-0.999977,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[11.9268,-1.35449,3.84926],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[5.06348,-1.35498,0.516098],[[-0.000543896,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[14.3833,3.67578,0.512523],[[0.99994,0.0109111,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[5.84668,-0.549805,0.508651],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[2.72119,0.726074,3.85087],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_open_v1.p3d",[4.8501,1.49756,0.493103],[[0.00878195,-0.999961,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[7.98779,-0.527344,0.511893],[[0.00420394,-0.999991,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[7.80615,0.698242,3.8496],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[4.93848,0.693848,3.84972],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_b_open.p3d",[10.9185,4.29932,0.511283],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_b_open.p3d",[10.4717,-1.47266,0.525908],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[11.0547,-2.58984,3.8603],[[0.999993,-0.00366489,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[5.98877,3.55176,0.525047],[[0.999993,-0.00366489,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[5.7627,-2.67529,3.85309],[[0.999993,-0.00366489,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[12.8613,3.48975,0.524874],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[4.15967,-3.35791,0.521549],[[0.999993,-0.00366489,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[11.2314,-3.2876,0.551683],[[0.999554,-0.0298631,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_open_v3.p3d",[5.86865,-1.36523,0.520647],[[0.0165432,0.999863,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\camps\emergencyblanket_01_stack_f.p3d",[2.23633,-3.54834,0.705206],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\metalcrate\metalcrate.p3d",[11.4531,-0.567383,3.85486],[[-0.999992,-0.00402258,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\metalcrate\metalcrate.p3d",[9.11963,-0.560547,0.507374],[[-0.999967,-0.00810565,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[11.2813,4.27979,4.18992],[[-0.00312003,-0.999995,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[4.47705,-4.16357,4.19813],[[-0.00115472,0.999999,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[12.3477,-4.16162,4.19516],[[-0.00115472,0.999999,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[11.7979,-1.47461,0.854268],[[0.00303331,-0.999995,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[11.6626,1.61475,0.857821],[[0.00101377,0.999999,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[4.98633,4.26611,4.20121],[[0.00618111,-0.999981,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[3.96875,4.26025,0.8691],[[0.0054015,-0.999985,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[6.18262,-4.17334,0.865839],[[0.000345376,1,0],[0,0,1]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_f.p3d",[14.3491,2.88086,1.01469],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_f.p3d",[9.06104,0.711426,4.35706],[[0.999997,-0.00226311,0],[0,0,1]],true,[]]]];

				comment "Shop House (White)";

					_compData pushBack ["Land_i_Shop_01_V1_F",[["a3\props_f_orange\humanitarian\supplies\foodsack_01_empty_f.p3d",[-2.91514,-3.20249,0.301447],[[-0.998614,-0.05263,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\foodsack_01_empty_f.p3d",[2.16998,3.19205,0.313254],[[0.520985,-0.853566,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\foodsack_01_empty_f.p3d",[-1.66244,-0.0628369,0.305782],[[0.936393,0.350952,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\foodsack_01_empty_f.p3d",[-0.866745,3.93912,0.321618],[[-0.822303,-0.56905,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\foodsack_01_empty_f.p3d",[0.87029,-0.0516064,0.276983],[[0.829692,0.558222,0],[0,0,1]],true,[]],["a3\structures_f\furniture\bench_f.p3d",[1.2855,4.27115,4.42121],[[-0.999999,0.0011694,0],[-1.14199e-006,-0.000976562,1]],true,[]],["a3\structures_f\civ\garbage\garbage_line_f.p3d",[1.21625,3.50943,0.326047],[[-0.999999,0.0011694,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_line_f.p3d",[-3.32812,-1.85825,4.18082],[[-0.00601118,-0.999982,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\sack_f.p3d",[0.678482,2.94595,0.685194],[[0.765074,-0.643943,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\sack_f.p3d",[1.28697,3.01968,0.679056],[[0.204995,-0.978763,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_square5_f.p3d",[-1.10671,-1.67856,0.299347],[[-0.999999,0.0011694,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\sacks_heap_f.p3d",[-3.28415,3.58853,4.57071],[[-0.999999,0.0011694,0],[0,0,1]],true,[]],["a3\structures_f_epb\items\luggage\luggageheap_01_f.p3d",[1.22452,-1.94663,4.64216],[[-0.999999,0.0011694,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelveswooden_blue_f.p3d",[1.63643,-0.030122,0.765687],[[-0.00443982,0.99999,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelveswooden_blue_f.p3d",[1.55494,-2.90854,4.61119],[[-0.0178704,0.99984,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelveswooden_blue_f.p3d",[1.64514,-0.933442,0.768753],[[-0.00443982,0.99999,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\foodsack_01_destroyed_f.p3d",[-2.10113,-0.664399,0.332387],[[0.888011,-0.459822,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\foodsack_01_destroyed_f.p3d",[0.0774014,-3.3226,0.347918],[[-0.97415,0.225904,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\foodsack_01_destroyed_f.p3d",[-3.06046,2.80093,0.359739],[[0.819358,0.573283,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\foodsack_01_destroyed_f.p3d",[3.35077,4.13394,0.342975],[[0.819358,0.573283,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\foodsack_01_destroyed_f.p3d",[-0.136356,3.03531,0.360723],[[0.547875,0.83656,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\foodsack_01_destroyed_f.p3d",[1.49086,-1.74936,0.338196],[[-0.740726,-0.671807,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\foodsack_01_destroyed_f.p3d",[-3.04151,-2.28403,0.352737],[[0.696384,0.717669,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_ransacked_f.p3d",[-3.41415,-1.93833,5.25423],[[0.999997,-0.00229101,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattantable_01_f.p3d",[-2.8879,1.29849,4.53872],[[-0.999999,0.0011694,0],[0,0,1]],true,[]],["a3\structures_f\furniture\rack_f.p3d",[-1.79596,4.34146,1.07387],[[0.99998,0.00633756,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelvesmetal_f.p3d",[-3.86219,-2.59897,0.244096],[[0.00467811,0.999989,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelvesmetal_f.p3d",[-3.86278,-0.601899,0.242513],[[0.00467811,0.999989,0],[0,0,1]],true,[]],["Land_FoodSacks_01_small_brown_F",[-3.5418,-3.36606,4.52257],[[-0.999999,0.0011694,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_full_brown_co.paa"]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-3.39932,1.97769,4.69549],[[-0.64279,0.766043,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-2.92558,0.394194,4.69264],[[0.00868718,-0.999962,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\tablesmall_01_f.p3d",[0.693625,0.863433,4.32163],[[-0.999999,0.0011694,0],[0,0,1]],true,[]],["a3\props_f_orange\items\decorative\flowerpot_01_flower_f.p3d",[0.314392,-4.42661,4.9173],[[-0.336485,0.941689,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[-0.967374,-1.10776,5.88346],[[-0.999999,0.0011694,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[-1.34006,-0.38022,2.36976],[[-0.999999,0.0011694,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[-1.60439,3.65103,5.83671],[[-0.999999,0.0011694,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\woodenbed_01_f.p3d",[0.807832,-0.433442,4.54392],[[0.999997,-0.00252036,0],[0,0,1]],true,[]],["a3\structures_f_heli\items\electronics\fridge_01_f.p3d",[-3.40354,-1.22006,4.62363],[[-0.999999,0.0011694,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\bathroom\sink\sink.p3d",[3.67685,4.04898,1.18707],[[0.999918,0.0127917,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\kitchen\dkamna_uhli\dkamna_uhli.p3d",[1.35434,1.75455,4.10896],[[0.999252,-0.0386819,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_destroyed_f.p3d",[-3.511,-0.415376,4.33273],[[-0.999999,0.0011694,0],[0,0,1]],true,[]],["Land_FoodSacks_01_large_brown_F",[-2.5264,1.02652,0.739419],[[0.0286762,-0.999589,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_full_brown_co.paa","a3\props_f_orange\humanitarian\supplies\data\foodsack_01_large_brown_mlod_co.paa"]],["a3\props_f_orange\furniture\rug_01_f.p3d",[-2.93342,1.20962,4.14341],[[-0.0051958,-0.999987,0],[0,0,1]],true,[]],["a3\structures_f\furniture\icebox_f.p3d",[-0.59747,-4.21323,0.893359],[[0.00196627,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f\furniture\icebox_f.p3d",[-2.54279,-4.2142,0.893244],[[0.00196627,-0.999998,0],[0,0,1]],true,[]],["a3\props_f_exp\commercial\market\woodencounter_01_f.p3d",[-3.47904,-2.72836,4.61096],[[0.999903,-0.0139287,0],[0,0,1]],true,[]],["a3\structures_f\furniture\cashdesk_f.p3d",[0.464226,0.943511,0.280221],[[0.0130749,0.999915,0],[0,0,1]],true,[]],["a3\props_f_orange\items\decorative\photoframe_01_f.p3d",[1.51338,4.56412,5.5708],[[0.999938,-0.011138,2.27912e-006],[8.59633e-006,0.000976378,1]],true,[]],["a3\props_f_orange\items\decorative\photoframe_01_broken_f.p3d",[1.59931,1.63589,0.280407],[[-0.910453,-0.413613,0],[0,0,1]],true,[]]]];

					_compData pushBack ["Land_i_Shop_01_V1_F",[["a3\structures_f\furniture\metal_rack_f.p3d",[0.0500176,4.38749,1.17464],[[-0.0042343,0.999991,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_f.p3d",[1.16183,4.40264,1.16623],[[-0.0042343,0.999991,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelvesmetal_f.p3d",[-1.89969,-3.57301,0.257275],[[0.00228128,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelvesmetal_f.p3d",[1.91916,-0.490779,0.253082],[[0.00228128,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelvesmetal_f.p3d",[-1.89969,-1.5798,0.258863],[[0.00228128,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelvesmetal_f.p3d",[-3.86453,-3.54742,0.25885],[[0.00228128,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelvesmetal_f.p3d",[-3.86453,-1.52052,0.260437],[[0.00228128,-0.999997,0],[0,0,1]],true,[]],["a3\props_f_exp\commercial\market\woodencrate_01_f.p3d",[-0.697541,-4.30539,0.595473],[[-0.999996,0.00293763,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\wallboards\picture_a_03\picture_a_03.p3d",[-3.86844,-2.13233,4.59698],[[0.999998,-0.00218664,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\cratesshabby_f.p3d",[3.51974,3.18811,1.03002],[[0.0207331,0.999785,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[-0.956818,-1.6366,5.89453],[[-0.999996,0.00293763,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[0.384002,3.62658,5.84687],[[-0.999996,0.00293763,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[-0.852326,-0.561883,2.37652],[[-0.999996,0.00293763,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\sacks_heap_f.p3d",[-2.95096,1.38676,0.675856],[[-0.0162534,-0.999868,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\cratesplastic_f.p3d",[-0.49051,-4.32543,1.15905],[[0.0163995,-0.999866,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\bathroom\sink\sink.p3d",[3.68576,4.1092,1.00825],[[0.999971,0.00761205,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\sofa_01_f.p3d",[1.42306,-1.96938,4.60399],[[-0.999996,0.00293763,0],[0,0,1]],true,[]],["a3\structures_f_heli\items\electronics\fridge_01_f.p3d",[-3.56375,-4.36774,4.66119],[[0.00810575,-0.999967,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\wallboards\picture_a_05\picture_a_05.p3d",[1.91525,-0.366735,4.55306],[[-0.999999,-0.00135444,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-2.38358,-1.47883,4.70985],[[0.911472,0.411362,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-2.41922,-2.60027,4.71074],[[0.999153,-0.0411592,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-3.49442,-0.581853,4.70657],[[-0.198338,0.980134,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\kitchen\dkamna_uhli\dkamna_uhli.p3d",[0.639373,0.576941,4.11476],[[0.999908,-0.0135586,0],[0,0,1]],true,[]],["a3\structures_f_heli\items\electronics\microwave_01_f.p3d",[-3.56815,-4.36577,5.26391],[[-0.566403,-0.824128,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_01.p3d",[1.62472,-3.71014,4.11639],[[-0.999996,0.00293763,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_02.p3d",[-3.2991,3.23321,4.14618],[[-0.999996,0.00293763,0],[0,0,1]],true,[]],["UserTexture1m_F",[-2.6492,-4.73202,6.09304],[[-0.00282946,-0.999996,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\c6+c7\c6_curtain_01_ca.paa"]],["UserTexture1m_F",[1.30246,-4.74327,6.11658],[[0.0132761,0.999912,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\c6+c7\c6_curtain_01_ca.paa"]],["UserTexture1m_F",[1.30246,-4.73888,6.115],[[-0.00282255,-0.999996,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\c6+c7\c6_curtain_01_ca.paa"]],["UserTexture1m_F",[-2.65067,-4.73739,6.09452],[[0.0132761,0.999912,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\c6+c7\c6_curtain_01_ca.paa"]],["a3\props_f_orange\furniture\tablesmall_01_f.p3d",[0.370818,-1.91254,4.36178],[[0.00554023,0.999985,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\tablebig_01_f.p3d",[-3.37137,-2.17672,4.55331],[[-0.999996,0.00293763,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\library_a\library_a.p3d",[1.74582,1.84116,4.12872],[[-0.999993,0.00366575,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\box_c\box_c.p3d",[-1.57254,4.22344,1.18249],[[0.0964528,-0.995338,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\box_c\box_c.p3d",[-1.92606,4.0142,0.578986],[[-0.653896,-0.756584,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\box_c\box_c.p3d",[-1.06717,4.26544,0.58024],[[0.01153,-0.999934,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\woodenbed_01_f.p3d",[-2.74393,1.38674,4.58343],[[-0.999996,0.00293763,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\armchair_01_f.p3d",[0.345916,-0.586707,4.59478],[[0.0511817,-0.998689,0],[0,0,1]],true,[]],["a3\structures_f\furniture\cashdesk_f.p3d",[0.44992,0.906966,0.279009],[[-0.0189455,0.999821,0],[0,0,1]],true,[]],["Land_Rug_01_Traditional_F",[0.346893,-1.96077,4.14768],[[0.00218916,0.999998,0],[0,0,1]],false,["a3\props_f_orange\furniture\data\rug_01_traditional_co.paa"]],["a3\props_f_orange\furniture\rug_01_f.p3d",[1.04904,3.60287,4.14718],[[-0.999996,0.00293668,-5.5761e-006],[-8.42518e-006,-0.000970159,1]],true,[]]]];
					
					_compData pushBack ["Land_i_Shop_01_V1_F",[["Graffiti_01_v3",[-0.795686,-5.00284,1.80709],[[-0.00804559,0.999968,0],[0,0,1]],false,["a3\structures_f_epb\civ\graffiti\data\tags_ca.paa"]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[-2.05106,2.02315,4.49128],[[-0.00629841,-0.99998,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelveswooden_blue_f.p3d",[1.62082,1.84426,4.64979],[[-0.02417,0.999708,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\bathroom\basin_a\basin_a.p3d",[3.89621,3.47382,1.11993],[[0.999976,-0.00691002,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\liquiddispenser_01_f.p3d",[3.35226,1.89787,1.52777],[[0.0489711,0.9988,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\wallboards\picture_f\picture_f.p3d",[-3.87869,-2.80933,4.57203],[[0.999941,-0.0108373,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\wallboards\picture_d_02\picture_d_02.p3d",[-2.15946,2.39548,4.48692],[[-0.00578177,-0.999983,0],[0,0,1]],true,[]],["a3\structures_f_epb\items\vessels\barreltrash_grey_f.p3d",[0.10617,-4.42255,0.672945],[[-0.999985,0.00554066,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\beds\postel_panelak1.p3d",[-2.82547,-0.580087,4.14003],[[-0.999985,0.00554066,0],[0,0,1]],true,[]],["a3\structures_f\items\documents\file1_f.p3d",[-2.51688,1.9941,4.84963],[[0.581354,-0.813651,0],[0,0,1]],true,[]],["Land_PaperBox_01_small_closed_brown_F",[0.0832207,1.02806,0.482421],[[-0.0115206,0.999934,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_brown_co.paa"]],["Land_PaperBox_01_small_closed_brown_F",[-3.4036,-1.66066,4.35297],[[-0.00275755,0.999996,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_brown_co.paa"]],["a3\structures_f_exp\signs\companies\attachedsign_01_v2_f.p3d",[-1.57791,-6.45509,3.651],[[0.00794072,0.999968,0],[0,0,1]],true,[]],["Land_Shoot_House_Wall_F",[1.36642,-4.88967,5.28366],[[-0.01107,0.999939,0],[0,0,1]],false,["#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)"]],["Land_Shoot_House_Wall_F",[-0.797639,-4.86708,1.31951],[[-0.00835504,0.999965,0],[0,0,1]],false,["#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)"]],["Land_Shoot_House_Wall_F",[-2.89041,-4.93873,1.28153],[[-0.00835504,0.999965,0],[0,0,1]],false,["#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)"]],["Land_Shoot_House_Wall_F",[-2.58231,-4.94621,5.56946],[[0.00457294,-0.99999,0],[0,0,1]],false,["#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)","#(argb,8,8,3)color(0,0,0,0,ca)"]],["a3\structures_f\furniture\chairplastic_f.p3d",[1.54269,1.96492,0.731628],[[0.377617,-0.925962,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\cratesshabby_f.p3d",[3.38742,4.19168,1.03543],[[-0.999985,0.00554066,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\basket_f.p3d",[2.85129,2.07806,0.584263],[[-0.999973,-0.007372,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattantable_01_f.p3d",[0.899139,-3.24871,4.54554],[[-0.999934,-0.0114698,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattantable_01_f.p3d",[1.49679,-1.2732,0.642965],[[0.99995,-0.00999218,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattantable_01_f.p3d",[-3.43436,-0.219957,0.660282],[[-0.999985,0.00554066,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattantable_01_f.p3d",[-1.82547,-4.24724,0.663922],[[0.00258097,-0.999997,0],[0,0,1]],true,[]],["Land_RattanTable_01_F",[-2.39822,3.50801,0.675282],[[-0.999985,0.00554066,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[0.263885,3.63925,5.8522],[[-0.999985,0.00554066,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[-0.830353,-1.38037,5.90872],[[-0.999985,0.00554066,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[-1.04666,-0.644971,2.4065],[[-0.999985,0.00554066,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\cratesplastic_f.p3d",[-2.65897,3.00341,4.38012],[[0.00484751,0.999988,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\ch_mod_c\ch_mod_c.p3d",[-1.83963,1.74337,4.1439],[[0.0717322,-0.997424,0],[0,0,1]],true,[]],["a3\structures_f_heli\items\electronics\fridge_01_f.p3d",[1.69113,0.205031,4.58128],[[0.999994,-0.00355158,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[0.953826,-2.41213,4.70623],[[0.0848686,0.996392,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[1.1301,-4.26791,4.69849],[[0.171883,-0.985117,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-1.8201,-3.19498,0.816398],[[0.0141854,0.999899,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-3.42215,0.702365,0.825671],[[-0.000674724,1,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-2.74588,-4.24535,0.829525],[[-0.999961,-0.00878816,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[0.446014,-1.25431,0.806749],[[-0.999642,0.0267701,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[1.31857,-2.18853,0.808567],[[-0.193998,-0.981002,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-3.23416,3.65044,0.816766],[[-0.999985,0.00554066,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-3.43729,-1.1648,0.819651],[[8.68714e-005,-1,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-0.880158,-4.2454,0.823504],[[0.999966,0.00821356,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-2.38162,-0.233979,0.823853],[[0.999751,-0.0223037,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[1.5051,-0.328393,0.802547],[[0.00436734,0.99999,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\kitchen\dkamna_uhli\dkamna_uhli.p3d",[0.643279,0.660937,4.11831],[[0.999985,-0.00553258,0],[0,0,1]],true,[]],["UserTexture1m_F",[-3.43973,-0.218942,1.05436],[[-0.00316229,-2.88651e-005,-0.999995],[-0.999915,0.0126779,0.00316167]],false,["a3\missions_f_orange\data\img\orange_compositions\shared\s3_tablecloth_01_co.paa"]],["UserTexture1m_F",[-2.39822,3.51973,1.07055],[[-0.00316229,-2.88651e-005,-0.999995],[-0.999915,0.0126779,0.00316167]],false,["a3\missions_f_orange\data\img\orange_compositions\shared\s3_tablecloth_01_co.paa"]],["UserTexture1m_F",[1.49924,-1.26394,1.03906],[[-0.00316229,-2.88651e-005,-0.999995],[-0.999915,0.0126779,0.00316167]],false,["a3\missions_f_orange\data\img\orange_compositions\shared\s3_tablecloth_01_co.paa"]],["UserTexture1m_F",[-1.82303,-4.237,1.05907],[[-0.00316229,-2.88651e-005,-0.999995],[-0.999915,0.0126779,0.00316167]],false,["a3\missions_f_orange\data\img\orange_compositions\shared\s3_tablecloth_01_co.paa"]],["a3\props_f_orange\furniture\tablesmall_01_f.p3d",[-3.37967,0.780692,4.34713],[[-0.999985,0.00554066,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\library_a\library_a.p3d",[-3.24246,2.24223,4.14194],[[0.00521419,0.999986,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\box_c\box_c.p3d",[-3.6199,4.10427,4.44493],[[-0.999985,0.00554066,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\box_c\box_c.p3d",[-3.63651,3.20395,4.44527],[[-0.999985,0.00554066,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\box_c\box_c.p3d",[-3.63406,3.40999,5.03725],[[-0.999985,0.00554066,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\armchair_01_f.p3d",[-3.26785,-2.45215,4.61161],[[0.999799,-0.0200438,0],[0,0,1]],true,[]],["a3\structures_f\furniture\cashdesk_f.p3d",[0.457244,0.919055,0.268442],[[0.00532338,0.999986,0],[0,0,1]],true,[]],["Land_Rug_01_Traditional_F",[-0.958771,4.58173,1.97468],[[-0.999998,0.00180456,-9.78652e-005],[0.00180448,0.999998,0.000874584]],false,["a3\props_f_orange\furniture\data\rug_01_traditional_co.paa"]],["a3\props_f_orange\furniture\rug_01_f.p3d",[-2.83426,-0.0668194,4.14446],[[-0.999985,0.00554066,0],[0,0,1]],true,[]],["Land_Rug_01_Traditional_F",[1.94553,-2.13959,2.03368],[[-0.000329012,1,-0.000101291],[1,0.0003291,0.000872877]],false,["a3\props_f_orange\furniture\data\rug_01_traditional_co.paa"]],["a3\props_f_orange\furniture\rug_01_f.p3d",[0.942596,-3.21629,4.14051],[[-0.000254631,1,0],[0,0,1]],true,[]],["Land_Rug_01_Traditional_F",[-3.89774,-0.213865,2.03768],[[-0.000329012,1,-0.000101291],[1,0.0003291,0.000872877]],false,["a3\props_f_orange\furniture\data\rug_01_traditional_co.paa"]],["a3\structures_f_epa\civ\camping\woodentable_small_f.p3d",[3.05344,1.5957,0.735381],[[-0.999985,0.00554066,0],[0,0,1]],true,[]],["a3\props_f_orange\items\decorative\flowerpot_01_f.p3d",[-3.73074,4.38286,0.365913],[[-0.999985,0.00554066,0],[0,0,1]],true,[]],["a3\props_f_orange\items\decorative\flowerpot_01_f.p3d",[-1.51883,2.22607,4.96593],[[-0.999985,0.00554066,0],[0,0,1]],true,[]],["a3\props_f_orange\items\decorative\flowerpot_01_flower_f.p3d",[-3.56571,-4.28615,1.04998],[[-0.999985,0.00554066,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_b_closed.p3d",[-3.54715,-3.85754,4.15341],[[-0.999975,0.00710847,0],[0,0,1]],true,[]]]];

					_compData pushBack ["Land_i_Shop_01_V1_F",[["a3\structures_f_epa\items\tools\fireextinguisher_f.p3d",[1.69553,-1.2003,0.648655],[[0.0426478,0.99909,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\various\soustruh_proxy.p3d",[-3.20194,1.51079,0.87436],[[0.0053435,-0.999986,0],[0,0,1]],true,[]],["a3\structures_f\data\doorlocks\planks_1.p3d",[1.32248,-5.04997,4.34586],[[0.0774068,0.997,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_wooden_rack_f.p3d",[-2.42459,-4.36691,1.25841],[[0.0106956,0.999943,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_wooden_rack_f.p3d",[-1.3074,-4.38485,1.26446],[[0.0106956,0.999943,0],[0,0,1]],true,[]],["Leaflet_05_F",[-3.52908,-2.80747,1.10028],[[0.511924,-0.859031,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\c5+c11\c5c11_blueprint_01_co.paa"]],["a3\structures_f_epb\items\luggage\luggageheap_02_f.p3d",[-3.38065,3.12343,4.46387],[[0.625118,-0.78053,0],[0,0,1]],true,[]],["a3\structures_f\data\doorlocks\barricade_2.p3d",[1.91867,-1.93918,0.245583],[[0.00899196,0.99996,0],[0,0,1]],true,[]],["a3\props_f_exp\commercial\market\woodencounter_01_f.p3d",[-1.09158,4.16387,0.732902],[[-0.000728997,-1,0],[0,0,1]],true,[]],["a3\structures_f\data\doorlocks\planks_2.p3d",[-2.64627,-5.04608,4.23486],[[0.0136676,0.999907,0],[0,0,1]],true,[]],["a3\structures_f\items\tools\meter3m_f.p3d",[-3.29324,-0.775796,1.12285],[[0.355658,0.934616,0],[0,0,1]],true,[]],["a3\structures_f\furniture\chairwood_f.p3d",[-3.20389,-1.05182,4.14291],[[-0.24585,0.969308,0],[0,0,1]],true,[]],["a3\structures_f\furniture\chairwood_f.p3d",[-2.39041,-1.722,4.13592],[[0.980026,0.198869,0],[0,0,1]],true,[]],["a3\structures_f\furniture\chairwood_f.p3d",[-2.41483,-2.93624,4.13925],[[0.982701,-0.1852,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\plasticbucket_01_f.p3d",[-0.551057,-4.45842,0.488277],[[-0.999989,0.00473529,0],[0,0,1]],true,[]],["a3\structures_f\items\tools\drillaku_f.p3d",[-3.50418,-0.700608,1.22002],[[-0.746209,-0.665712,0],[0,0,1]],true,[]],["a3\structures_f_epa\civ\camping\woodentable_large_f.p3d",[-3.03397,-2.26788,4.57527],[[0.00827264,-0.999966,0],[0,0,1]],true,[]],["a3\structures_f\furniture\rack_f.p3d",[1.71799,-0.31125,1.05639],[[-0.00314322,-0.999995,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\wallboards\picture_e_02\picture_e_02.p3d",[-2.58524,2.39428,4.69086],[[-0.0111529,-0.999938,0],[0,0,1]],true,[]],["a3\structures_f\items\electronics\portable_generator_f.p3d",[-3.40067,-3.78155,0.615064],[[-0.999989,0.00473529,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\beds\postel_panelak2.p3d",[-3.55496,1.3638,4.16517],[[0.00632616,0.99998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\metalcrate\metalcrate.p3d",[0.555877,4.23896,0.267882],[[-0.999989,0.00473529,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\metalcrate\metalcrate.p3d",[1.46213,-1.52146,4.14818],[[-0.999976,0.00697925,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\wallboards\picture_f\picture_f.p3d",[-3.87918,-2.27965,4.53676],[[0.999973,-0.00731127,0],[0,0,1]],true,[]],["a3\structures_f\items\vessels\barreltrash_f.p3d",[-2.62869,4.25893,0.665878],[[0.302985,-0.952996,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[0.155975,3.63816,5.84287],[[-0.999989,0.00473529,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[-0.956818,-0.726449,2.3767],[[-0.999989,0.00473529,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[-0.750764,-0.688806,5.88809],[[-0.999989,0.00473529,0],[0,0,1]],true,[]],["a3\structures_f\items\vessels\canisterfuel_f.p3d",[-3.36307,-3.19926,0.544678],[[-0.00799496,-0.999968,0],[0,0,1]],true,[]],["a3\structures_f_heli\items\electronics\fridge_01_f.p3d",[1.56125,-3.78153,4.60322],[[0.999985,-0.00541683,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\kitchen\dkamna_uhli\dkamna_uhli.p3d",[0.643279,0.548239,4.12453],[[0.999965,-0.00832094,0],[0,0,1]],true,[]],["UserTexture1m_F",[-3.01834,-1.06872,0.269],[[-0.0146475,8.24971e-005,-0.999893],[-0.999882,0.00472589,0.0146477]],false,["a3\missions_f_orange\data\img\orange_compositions\shared\wood_shaves_01_co.paa"]],["a3\structures_f\items\vessels\bucket_painted_f.p3d",[-1.89237,4.11421,0.565866],[[-0.738794,0.673931,0],[0,0,1]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_f.p3d",[-3.45194,0.10229,0.753281],[[0.0186376,0.999826,0],[0,0,1]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_f.p3d",[-1.83182,2.10734,4.32786],[[-0.999989,0.00473529,0],[0,0,1]],true,[]],["a3\structures_f\furniture\cashdesk_f.p3d",[1.55392,-2.653,5.12006],[[1,-0.000177401,-9.12971e-005],[-9.10696e-005,0.00128207,-0.999999]],true,[]],["a3\structures_f\furniture\cashdesk_f.p3d",[0.434783,0.912482,0.271623],[[0.00643964,0.999979,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\workbench_01_f.p3d",[-3.4075,-1.79606,0.761464],[[-0.999957,0.00927753,0],[0,0,1]],true,[]],["Land_WallSign_01_chalkboard_F",[-3.88699,-1.77127,1.68368],[[0.999999,-0.00120138,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n2\wallsign_01_f_chalkboard_tools_co.paa","a3\missions_f_orange\data\img\orange_compositions\n2\wallsign_01_f_chalkboard_tools_co.paa"]],["a3\structures_f_enoch\furniture\cases\library_a\library_a_open.p3d",[1.74631,1.82342,4.09914],[[-0.999901,0.0140527,0],[0,0,1]],true,[]],["a3\structures_f_exp\signs\companies\attachedsign_01_v4_f.p3d",[-1.5784,-6.40017,3.604],[[-0.00127831,-0.999999,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[-0.420197,-3.65119,4.14967],[[-0.999989,0.00473529,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[-3.06961,1.3546,4.14513],[[-0.0136132,-0.999907,0],[0,0,1]],true,[]],["a3\structures_f_epa\civ\camping\woodentable_small_f.p3d",[-1.30447,-1.85692,0.689104],[[-0.999989,0.00473529,0],[0,0,1]],true,[]]]];

					_compData pushBack ["Land_i_Shop_01_V1_F",[["a3\structures_f\furniture\icebox_f.p3d",[-2.54227,-4.21249,0.893244],[[0.00194248,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f\furniture\icebox_f.p3d",[-0.596467,-4.21298,0.893359],[[0.00194248,-0.999998,0],[0,0,1]],true,[]],["Land_FoodSacks_01_large_brown_F",[-2.52762,1.02627,0.739419],[[0.028677,-0.999589,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_full_brown_co.paa","a3\props_f_orange\humanitarian\supplies\data\foodsack_01_large_brown_mlod_co.paa"]],["a3\structures_f_exp\signs\companies\attachedsign_01_v3_f.p3d",[-1.70584,-6.37105,3.64972],[[-0.00324773,0.999995,0],[0,0,1]],true,[]],["Land_Photoframe_01_broken_F",[1.6008,1.6359,0.280407],[[-0.910456,-0.413607,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\s1+s2+s3+s6\s3_chef_01_co.paa","a3\props_f_orange\items\decorative\data\photoframe_01_f_co.paa"]],["a3\props_f_exp\commercial\market\woodencounter_01_f.p3d",[-3.47537,-2.72718,4.61096],[[0.999903,-0.0139256,0],[0,0,1]],true,[]],["a3\structures_f_epb\items\luggage\luggageheap_01_f.p3d",[1.22336,-1.94478,4.64216],[[-0.999999,0.00117476,0],[0,0,1]],true,[]],["Land_FoodSack_01_dmg_brown_F",[-3.05936,2.80073,0.359739],[[0.819356,0.573286,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_dmg_brown_co.paa"]],["Land_FoodSack_01_dmg_brown_F",[1.48947,-1.75022,0.338196],[[-0.74076,-0.67177,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_dmg_brown_co.paa"]],["Land_FoodSack_01_dmg_brown_F",[3.35129,4.13317,0.342975],[[0.819356,0.573286,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_dmg_brown_co.paa"]],["Land_FoodSack_01_dmg_brown_F",[0.0783379,-3.32108,0.347918],[[-0.974148,0.22591,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_dmg_brown_co.paa"]],["Land_FoodSack_01_dmg_brown_F",[-3.04276,-2.28132,0.352737],[[0.696382,0.717671,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_dmg_brown_co.paa"]],["Land_FoodSack_01_dmg_brown_F",[-2.10281,-0.663613,0.332387],[[0.888012,-0.45982,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_dmg_brown_co.paa"]],["Land_FoodSack_01_dmg_brown_F",[-0.134064,3.0351,0.360723],[[0.547873,0.836562,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_dmg_brown_co.paa"]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_ransacked_f.p3d",[-3.39627,-2.03488,4.51634],[[0.999997,-0.00228761,0],[0,0,1]],true,[]],["Land_FoodSack_01_empty_brown_F",[-0.867951,3.93916,0.321618],[[-0.822307,-0.569045,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_dmg_brown_co.paa"]],["Land_FoodSack_01_empty_brown_F",[2.16965,3.19051,0.313254],[[0.520987,-0.853564,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_dmg_brown_co.paa"]],["Land_FoodSack_01_empty_brown_F",[-1.66336,-0.0629785,0.305782],[[0.936392,0.350956,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_dmg_brown_co.paa"]],["Land_FoodSack_01_empty_brown_F",[-2.91531,-3.20235,0.301447],[[-0.998614,-0.0526244,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_dmg_brown_co.paa"]],["Land_FoodSack_01_empty_brown_F",[0.869354,-0.0523341,0.276983],[[0.82969,0.558225,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_dmg_brown_co.paa"]],["Land_FoodSacks_01_small_brown_F",[-3.54373,-3.36578,4.52257],[[-0.999999,0.00117476,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_full_brown_co.paa"]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_destroyed_f.p3d",[-3.51102,-0.414154,4.33273],[[-0.999999,0.00117476,0],[0,0,1]],true,[]],["a3\structures_f\furniture\rack_f.p3d",[-1.79569,4.34194,1.07387],[[0.99998,0.00634083,0],[0,0,1]],true,[]],["Land_Photoframe_01_F",[1.51486,4.5647,5.5704],[[0.999938,-0.0111427,9.91084e-006],[9.79939e-007,0.000977384,1]],false,["a3\missions_f_orange\data\img\orange_compositions\shared\photoframe_random_04_co.paa","a3\props_f_orange\items\decorative\data\photoframe_01_f_co.paa"]],["a3\structures_f\furniture\shelveswooden_blue_f.p3d",[1.55539,-2.90849,4.61119],[[-0.0178685,0.99984,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelveswooden_blue_f.p3d",[1.64572,-0.93202,0.768753],[[-0.00443934,0.99999,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelveswooden_blue_f.p3d",[1.63596,-0.0286887,0.765687],[[-0.00443934,0.99999,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelvesmetal_f.p3d",[-3.8616,-2.60033,0.244096],[[0.00467772,0.999989,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelvesmetal_f.p3d",[-3.86112,-0.601303,0.242513],[[0.00467772,0.999989,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_line_f.p3d",[-3.32694,-1.85672,4.18082],[[-0.00605285,-0.999982,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_line_f.p3d",[1.21554,3.51031,0.326047],[[-0.999999,0.00117476,0],[0,0,1]],true,[]],["a3\structures_f\furniture\bench_f.p3d",[1.28635,4.27391,4.42121],[[-0.999999,0.00117477,-5.43514e-006],[-6.57544e-006,-0.000970659,1]],true,[]],["a3\structures_f\civ\market\sack_f.p3d",[1.28879,3.01951,0.679056],[[0.204996,-0.978763,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\sack_f.p3d",[0.676482,2.94689,0.685194],[[0.765075,-0.643941,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattantable_01_f.p3d",[-2.88797,1.29958,4.53872],[[-0.999999,0.00117476,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[-1.60526,3.65083,5.83671],[[-0.999999,0.00117476,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[-1.33914,-0.37971,2.36976],[[-0.999999,0.00117476,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[-0.969025,-1.10811,5.88346],[[-0.999999,0.00117476,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_square5_f.p3d",[-1.10526,-1.67682,0.299347],[[-0.999999,0.00117476,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\sacks_heap_f.p3d",[-3.28201,3.59002,4.51818],[[-0.999999,0.00117476,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\bathroom\sink\sink.p3d",[3.67502,4.04642,1.18707],[[0.999918,0.012795,0],[0,0,1]],true,[]],["a3\structures_f_heli\items\electronics\fridge_01_f.p3d",[-3.40408,-1.21944,4.62363],[[-0.999999,0.00117476,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-2.92606,0.393854,4.69264],[[0.00867365,-0.999962,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-3.39774,1.97782,4.69549],[[-0.642786,0.766045,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\kitchen\dkamna_uhli\dkamna_uhli.p3d",[1.29855,1.53757,4.10896],[[0.999252,-0.0386782,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\tablesmall_01_f.p3d",[0.695525,0.864345,4.32163],[[-0.999999,0.00117476,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\woodenbed_01_f.p3d",[0.808318,-0.432645,4.54392],[[0.999997,-0.00251673,0],[0,0,1]],true,[]],["a3\structures_f\furniture\cashdesk_f.p3d",[0.46408,0.942214,0.280221],[[0.0130745,0.999915,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[-2.93387,1.20978,4.14341],[[-0.00523723,-0.999986,0],[0,0,1]],true,[]],["a3\props_f_orange\items\decorative\flowerpot_01_flower_f.p3d",[0.313689,-4.42727,4.9173],[[-0.336482,0.94169,0],[0,0,1]],true,[]]]];

				comment "House (Large, White)";

					_compData pushBack ["Land_i_House_Big_01_V1_F",[["a3\props_f_enoch\items\documents\book_02_f.p3d",[2.6128,-5.22489,0.902806],[[-0.379461,0.925208,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\desk_globe.p3d",[4.23389,-4.97538,4.77905],[[0.720866,0.693075,0],[0,0,1]],true,[]],["a3\structures_f\data\doorlocks\barricade_2.p3d",[-4.50341,6.44845,0.389868],[[-0.0206635,-0.999786,0],[0,0,1]],true,[]],["a3\structures_f\data\doorlocks\barricade_2.p3d",[4.48487,-3.35771,0.413881],[[0.0236265,0.999721,0],[0,0,1]],true,[]],["UserTexture_1x2_F",[-0.0844676,3.02608,5.20718],[[6.85771e-005,-1,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\s4+s5\s5_drawing_big_co.paa"]],["a3\props_f_exp\commercial\market\woodencounter_01_f.p3d",[1.43018,3.44063,0.904323],[[0,1,0],[0,0,1]],true,[]],["Leaflet_05_New_F",[4.13184,-5.40946,4.57267],[[0.998478,0.0551594,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\c4\c4_j_02_co.paa"]],["Leaflet_05_New_F",[3.97608,-5.73759,4.57567],[[0.868632,-0.495459,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\c4\c4_s_01_co.paa"]],["a3\structures_f_epb\items\luggage\luggageheap_01_f.p3d",[1.8628,-3.55106,0.952579],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[-2.85888,-7.02519,3.86837],[[-0.00235185,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[-1.48095,-7.03104,3.86968],[[-0.00235185,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[2.76954,3.31563,3.85945],[[-0.00235185,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[1.37793,3.3337,3.85907],[[-0.00235185,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f\furniture\rack_f.p3d",[-4.26855,1.84151,1.3159],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[4.14014,-5.36454,4.21729],[[-0.999995,-0.00331114,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[-4.09765,3.93917,4.19311],[[0.999995,-0.00326029,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\officecabinet_01_f.p3d",[-1.84814,-1.73954,0.948283],[[0.999999,0.00126155,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\officecabinet_01_f.p3d",[-1.84814,-2.5247,0.948879],[[0.999999,0.00126155,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_f.p3d",[1.16797,6.97628,1.33271],[[0.00436201,0.99999,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\beds\postel_panelak2.p3d",[1.89161,-4.36796,3.88495],[[0,1,0],[0,0,1]],true,[]],["Land_Photoframe_01_F",[1.38575,7.1506,5.5264],[[0.999894,0.014573,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\shared\photoframe_random_08_co.paa","a3\props_f_orange\items\decorative\data\photoframe_01_f_co.paa"]],["a3\structures_f\furniture\shelveswooden_blue_f.p3d",[-1.50634,-3.47392,0.882624],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\wallboards\picture_f\picture_f.p3d",[-4.50537,-2.13798,4.44335],[[0.999989,0.0047515,0],[0,0,1]],true,[]],["a3\structures_f_epb\items\vessels\barreltrash_grey_f.p3d",[-4.13623,2.31075,4.27275],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\beds\postel_panelak1.p3d",[-0.393061,-4.38896,3.87389],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_exp\commercial\market\woodencrate_01_f.p3d",[1.32129,5.74386,0.775402],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_exp\commercial\market\woodencrate_01_f.p3d",[-0.577632,6.71456,0.782148],[[-0.999998,0.00180007,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\wallboards\picture_a_03\picture_a_03.p3d",[1.31299,1.03146,0.920151],[[0.000212344,-1,0],[0,0,1]],true,[]],["Land_PaperBox_01_small_closed_brown_F",[1.87501,-7.01444,4.0854],[[-0.0045536,0.99999,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_brown_co.paa"]],["Land_PaperBox_01_small_closed_brown_F",[-3.90039,-6.99931,4.08024],[[-0.0135731,0.999908,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_brown_co.paa"]],["Land_PaperBox_01_small_closed_brown_F",[2.58643,-7.01591,4.0826],[[-0.0045536,0.99999,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_brown_co.paa"]],["Land_PaperBox_01_small_closed_brown_F",[2.27247,-7.01981,4.49436],[[-0.0045536,0.99999,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\paperbox_01_small_brown_co.paa"]],["a3\structures_f\furniture\bench_f.p3d",[3.24366,6.80831,0.714032],[[0.99997,0.00780761,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\sack_f.p3d",[3.01465,3.39962,0.883763],[[-0.371958,-0.928249,0],[0,0,1]],true,[]],["a3\structures_f\civ\constructions\woodenbox_f.p3d",[-3.08935,-3.42704,3.873],[[0.693059,0.720881,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\basket_f.p3d",[-0.176265,3.44845,0.77169],[[-0.569937,0.821689,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattantable_01_f.p3d",[1.09278,-0.741006,0.864402],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[0.380864,5.21114,2.3422],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[0.529302,5.04513,5.63628],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[1.0752,-3.64677,2.33173],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[1.42139,-5.52812,5.64108],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[0.789556,-0.864053,5.63584],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\cratesplastic_f.p3d",[2.01856,3.42647,1.58934],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\ch_mod_c\ch_mod_c.p3d",[-3.71386,4.18673,3.8462],[[0.980679,0.195623,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\ch_mod_c\ch_mod_c.p3d",[3.5879,-5.44511,3.87038],[[-0.965622,0.259951,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\bathroom\sink\sink.p3d",[4.32374,3.90743,1.20429],[[0.999966,0.00828944,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\sofa_01_f.p3d",[3.91065,-5.07938,0.960263],[[-0.99967,0.0256854,0],[0,0,1]],true,[]],["a3\structures_f_heli\items\electronics\fridge_01_f.p3d",[-1.40429,-0.999795,0.913221],[[-0.999776,0.0211638,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\wallboards\picture_a_05\picture_a_05.p3d",[1.34766,-3.34159,4.24902],[[-0.00209555,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[0.385747,0.0299902,4.43329],[[-0.0900989,0.995933,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[0.962896,0.141318,1.02809],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[2.01514,-0.750283,1.0207],[[0.999867,0.0162959,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[0.354497,-1.92313,4.43393],[[0.0193511,-0.999813,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[1.47071,-0.058877,4.43089],[[0.179312,0.983792,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[1.41163,-1.91728,4.4333],[[0.103828,-0.994595,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\kitchen\dkamna_uhli\dkamna_uhli.p3d",[-1.25244,0.375693,0.408906],[[-0.999867,0.0163367,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_01.p3d",[2.04444,0.727256,0.449348],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_02.p3d",[4.08106,-6.86845,0.439436],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\tablesmall_01_f.p3d",[0.752935,6.49776,4.0933],[[0.0035378,-0.999994,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\tablesmall_01_f.p3d",[1.35596,-3.58476,4.07772],[[0.999784,0.0207999,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\tablesmall_01_f.p3d",[2.68604,-5.0496,0.6813],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\tablebig_01_f.p3d",[0.90772,-0.911416,4.30784],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\library_a\library_a.p3d",[-4.34619,6.58272,3.84636],[[0.999673,0.0255778,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\library_a\library_a.p3d",[1.11133,-7.06425,0.452265],[[-0.00213939,0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\box_c\box_c.p3d",[-3.71874,3.29854,1.33771],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\box_c\box_c.p3d",[-4.0332,3.29366,0.739706],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\box_c\box_c.p3d",[-3.14746,3.30294,0.734742],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\woodenbed_01_f.p3d",[2.10352,6.03438,4.25371],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\armchair_01_f.p3d",[2.79102,-3.64237,0.937105],[[-0.224345,-0.97451,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\armchair_01_f.p3d",[2.73487,-6.43388,0.921399],[[-0.171541,0.985177,0],[0,0,1]],true,[]],["a3\structures_f\furniture\cashdesk_f.p3d",[-1.479,-2.1287,1.44673],[[-0.999911,0.00775837,-0.0108647],[0.0108639,-0.000146468,-0.999941]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_b_open.p3d",[-4.14599,-0.996377,3.87947],[[-1,0.000802052,0],[0,0,1]],true,[]],["Land_WallSign_01_chalkboard_F",[1.40137,3.03292,1.87584],[[0.00183823,0.999998,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n2\wallsign_01_f_chalkboard_tools_co.paa","a3\missions_f_orange\data\img\orange_compositions\n2\wallsign_01_f_chalkboard_tools_co.paa"]],["Land_WallSign_01_chalkboard_F",[2.65088,-7.26493,2.34973],[[0.000539617,1,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-1.87255,-0.728799,2.34631],[[0.999999,-0.00129799,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-4.54785,5.42843,2.36674],[[0.999999,-0.00129799,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[4.57862,-5.38603,1.51585],[[0.999986,0.00522535,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[4.57959,-5.39237,2.36466],[[0.999986,0.00522535,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-1.86083,-3.42606,2.3709],[[0.999986,0.00522535,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[2.64502,-7.26542,1.50067],[[0.000541052,1,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-1.86181,-3.41972,1.52208],[[0.999986,0.00522535,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-1.87499,-0.728799,1.49749],[[0.999999,-0.00129799,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-4.55029,5.42843,1.51793],[[0.999999,-0.00129799,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["a3\structures_f_enoch\furniture\cases\library_a\library_a_open.p3d",[0.191411,-7.06571,0.451818],[[-0.0046423,0.999989,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_a_open.p3d",[-4.11181,-2.12284,3.84627],[[-0.99984,-0.0178919,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[1.00928,6.07882,3.87586],[[-0.0075195,-0.999972,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[0.91065,-0.972939,3.87302],[[-0.999945,0.0105093,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[0.192388,-4.39091,3.87876],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[2.52149,-4.3621,3.88663],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[1.42823,-0.338174,0.456403],[[-0.999835,0.0181393,0],[0,0,1]],true,[]],["Land_Rug_01_Traditional_F",[2.52588,-5.04667,0.458689],[[0,1,0],[0,0,1]],false,["a3\props_f_orange\furniture\data\rug_01_traditional_co.paa"]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[0.322271,1.9587,0.46335],[[0.999765,-0.0216869,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[4.52686,-2.04276,3.9403],[[0.999988,0.00498408,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[0.258794,-7.2869,3.88335],[[-0.00342282,-0.999994,0],[0,0,1]],true,[]],["a3\props_f_orange\items\decorative\flowerpot_01_flower_f.p3d",[-4.0288,-0.0891504,4.6636],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_heli\items\electronics\microwave_01_f.p3d",[-1.49511,-2.6453,1.54021],[[-0.999997,-0.00263546,0],[0,0,1]],true,[]]]];
					
					_compData pushBack ["Land_i_House_Big_01_V1_F",[["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin_open.p3d",[1.08252,-6.94218,0.446059],[[0.0112564,-0.999937,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[0.125005,-3.24394,0.465766],[[0.36257,-0.931957,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-0.178218,-3.88358,0.465766],[[0.999513,0.0312076,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-0.682612,-4.18046,0.463701],[[-0.541523,0.840686,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[3.70704,-5.26054,0.472018],[[-0.738536,0.674214,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[3.65137,-4.31425,0.468244],[[-0.986528,-0.163592,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[3.37501,-4.72147,0.472018],[[-0.487127,0.873331,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[2.96094,-4.60771,0.469954],[[0.991219,0.132227,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-0.409663,-3.22733,0.465766],[[-0.295776,-0.955257,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-0.673335,-2.8245,0.42292],[[0.567908,-0.823092,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[3.01465,-5.19071,0.472018],[[-0.397159,-0.91775,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[3.46436,-5.7371,0.472018],[[-0.997647,0.0685545,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-0.756343,-3.75712,0.465766],[[-0.58296,-0.812501,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[1.98292,-1.22538,3.87927],[[-0.986528,-0.163592,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[1.29249,-1.51884,3.88098],[[0.991219,0.132227,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[1.70655,-1.63261,3.88304],[[-0.487127,0.873331,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[1.3462,-2.10185,3.88304],[[-0.397159,-0.91775,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[1.7959,-2.64823,3.88304],[[-0.997647,0.0685545,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[2.03858,-2.17167,3.88304],[[-0.738536,0.674214,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-3.29101,-4.7288,3.89112],[[0.991219,0.132227,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-2.87695,-4.84257,3.89319],[[-0.487127,0.873331,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-2.60058,-4.43534,3.88941],[[-0.986528,-0.163592,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-2.54492,-5.38163,3.89319],[[-0.738536,0.674214,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-2.78759,-5.85819,3.89319],[[-0.997647,0.0685545,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-3.2373,-5.31181,3.89319],[[-0.397159,-0.91775,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_bathroom\light_bathroom.p3d",[-3.25537,1.77999,3.63602],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_bootcamp\system\usertexture_1x2_f.p3d",[1.8335,-3.31181,5.14817],[[0,1,0],[0,0,1]],true,[]],["Land_Photoframe_01_broken_F",[4.13672,-6.2078,0.486211],[[-0.704107,-0.710094,0],[0,0,1]],false,["a3\props_f_orange\items\decorative\data\photos_camo_co.paa","a3\props_f_orange\items\decorative\data\photoframe_01_f_co.paa"]],["a3\props_f_exp\commercial\market\woodencounter_01_f.p3d",[1.58594,3.41036,0.908955],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_epb\items\luggage\luggageheap_04_f.p3d",[-1.52783,0.453818,4.35135],[[0.998975,0.0452591,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\various\carpet_2_dz.p3d",[0.70606,-5.38847,3.95211],[[-0.998393,-0.0566684,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\wallboards\picture_c\picture_c.p3d",[-3.23486,-7.25419,4.06471],[[0.000620876,1,0],[0,0,1]],true,[]],["Land_FoodSack_01_dmg_brown_F",[-1.5664,-0.514443,0.527378],[[0.00603115,-0.999982,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_dmg_brown_co.paa"]],["a3\structures_f\civ\camping\camping_light_off_f.p3d",[-2.59082,-3.31864,4.63953],[[0.97852,-0.206153,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_ransacked_f.p3d",[2.71436,-2.25468,4.08599],[[-0.918597,0.395196,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_ransacked_f.p3d",[-0.979487,-3.47685,0.667033],[[0.711805,-0.702377,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_ransacked_f.p3d",[-3.57275,-5.69901,4.08836],[[-0.63977,-0.768566,0],[0,0,1]],true,[]],["Land_FoodSack_01_empty_brown_F",[-0.617671,-2.38163,0.485589],[[-0.934488,-0.355995,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_dmg_brown_co.paa"]],["a3\structures_f\civ\accessories\woodpile_f.p3d",[3.18897,6.73116,0.740178],[[-0.999916,-0.0129496,0],[0,0,1]],true,[]],["a3\structures_f\furniture\chairwood_f.p3d",[1.87452,0.436728,0.44549],[[0.988114,0.153723,0],[0,0,1]],true,[]],["a3\structures_f\furniture\chairwood_f.p3d",[1.81788,-0.799111,0.450131],[[0.993368,-0.114981,0],[0,0,1]],true,[]],["a3\structures_f\furniture\chairwood_f.p3d",[0.742193,0.244346,0.447516],[[-0.990979,0.134016,0],[0,0,1]],true,[]],["a3\structures_f\furniture\chairwood_f.p3d",[0.75147,-0.804971,0.452724],[[-0.961524,-0.27472,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_destroyed_f.p3d",[-0.268061,-2.69267,4.07506],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_destroyed_f.p3d",[-4.18847,-0.323525,4.08737],[[0.999474,0.0324154,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_destroyed_f.p3d",[4.09424,-4.98417,0.684027],[[-0.997524,0.0703335,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_destroyed_f.p3d",[-4.14013,-4.908,4.02158],[[0.989864,-0.14202,0],[0,0,1]],true,[]],["a3\structures_f\furniture\rack_f.p3d",[-4.28076,-1.54569,4.69056],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\wallboards\picture_e_02\picture_e_02.p3d",[1.29981,1.02413,0.757091],[[-0.00494368,-0.999988,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[4.17725,4.30538,4.21913],[[-0.999983,0.00584839,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[-3.51562,-6.81376,4.22389],[[0.00308794,0.999995,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\beds\postel_panelak2.p3d",[-0.20605,6.03341,3.82398],[[0.0148633,0.99989,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\metalcrate\metalcrate.p3d",[4.01954,-6.78495,0.466931],[[0.99998,-0.00627601,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelveswooden_blue_f.p3d",[0.951665,-2.74882,4.19212],[[-0.999987,-0.00506636,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelveswooden_blue_f.p3d",[0.00586438,1.97726,0.956153],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\bathroom\basin_a\basin_a.p3d",[4.5254,4.1169,1.27702],[[0.999993,0.00369544,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\beds\postel_panelak1.p3d",[2.04688,6.06612,3.86704],[[0.0242209,0.999707,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelvesmetal_f.p3d",[-4.40771,1.80685,0.305331],[[-0.00229486,-0.999997,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelvesmetal_f.p3d",[-3.41943,2.65694,0.306837],[[0.999987,0.00504189,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelvesmetal_f.p3d",[-3.41845,0.911338,0.306893],[[1,-0.000255748,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_square3_f.p3d",[0.591802,-1.84599,3.92038],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_square3_f.p3d",[3.32959,-5.74931,0.512086],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_square3_f.p3d",[-3.33886,-5.20146,3.93279],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_line_f.p3d",[-1.20214,-2.79081,0.506083],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\cratesshabby_f.p3d",[3.25831,3.45089,1.1907],[[0.999974,0.00725175,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\sack_f.p3d",[-0.560054,3.32247,0.8612],[[0.99997,0.00775182,0],[0,0,1]],true,[]],["a3\structures_f\civ\constructions\woodenbox_f.p3d",[1.93116,-5.34647,3.85589],[[-0.999869,0.0161798,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\basket_f.p3d",[2.33692,3.45528,0.905699],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[2.21045,-5.38505,5.63335],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[1.81299,4.86983,5.64151],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[1.38477,-0.150186,2.29442],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[0.889165,-1.7913,5.62589],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\sacks_heap_f.p3d",[1.64649,5.91231,0.807787],[[-0.999877,-0.0156725,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\cratesplastic_f.p3d",[0.869634,3.43136,0.854519],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\ch_mod_c\ch_mod_c.p3d",[-3.67187,-6.36942,3.87359],[[0.221104,0.97525,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\chairs\ch_mod_c\ch_mod_c.p3d",[3.80079,4.05294,3.86963],[[-0.981876,-0.189522,0],[0,0,1]],true,[]],["a3\structures_f\furniture\tabledesk_f.p3d",[2.69629,-6.77909,0.855147],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\sofa_01_f.p3d",[0.71729,0.388877,4.37087],[[0.0240185,-0.999712,0],[0,0,1]],true,[]],["a3\structures_f_heli\items\electronics\fridge_01_f.p3d",[0.0800831,3.45089,0.952645],[[-0.00329956,-0.999995,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\kitchen\dkamna_uhli\dkamna_uhli.p3d",[-3.4038,3.60519,0.411478],[[-0.026092,-0.99966,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_01.p3d",[-1.50341,-1.16239,0.441839],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_01.p3d",[4.17627,-3.61747,3.86984],[[0.273196,-0.961958,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_01.p3d",[4.19288,-7.03251,3.87135],[[0.632038,0.774937,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_02.p3d",[-4.02148,-2.74931,3.84816],[[0.894808,0.446451,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\tablesmall_01_f.p3d",[0.748052,-0.650186,4.10666],[[-1,-0.000887859,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\tablesmall_01_f.p3d",[4.03663,-6.58964,4.09042],[[-0.999438,-0.0335258,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\tablebig_01_f.p3d",[1.29297,-0.247354,0.89316],[[-0.999989,-0.00464198,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\library_a\library_a.p3d",[4.33887,-4.06229,0.4612],[[-0.999996,-0.00278662,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\library_a\library_a.p3d",[0.624517,3.20089,3.86644],[[-0.0128822,0.999917,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\box_c\box_c.p3d",[-0.702632,-1.75907,0.75214],[[-0.00131282,-0.999999,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\woodenbed_01_f.p3d",[3.3501,-5.37675,4.31753],[[0.999909,-0.0134646,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\armchair_01_f.p3d",[2.09327,-0.561318,4.35759],[[-1,0.000717175,0],[0,0,1]],true,[]],["Land_WallSign_01_chalkboard_F",[4.57813,-5.38603,1.51585],[[0.999986,0.00522535,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[4.57911,-5.39237,2.36466],[[0.999986,0.00522535,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-1.86132,-3.42606,2.3709],[[0.999986,0.00522535,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[2.64454,-7.26542,1.50067],[[0.000541052,1,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-4.55078,5.42843,1.51793],[[0.999999,-0.00129799,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-1.87304,-0.728799,2.34631],[[0.999999,-0.00129799,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-1.87548,-0.728799,1.49749],[[0.999999,-0.00129799,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[2.6504,-7.26493,2.34973],[[0.000539617,1,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-1.86181,-3.41972,1.52168],[[0.999986,0.00521856,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-4.54834,5.42843,2.36674],[[0.999999,-0.00129799,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["a3\structures_f_enoch\furniture\cases\library_a\library_a_open.p3d",[4.3379,-3.15214,0.458676],[[-0.999993,-0.00376842,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\library_a\library_a_open.p3d",[1.52979,3.20333,3.8618],[[0.0050945,0.999987,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_a_open.p3d",[-1.47265,-4.7996,0.44014],[[-0.999999,0.00105621,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[2.57862,5.99972,3.87263],[[-0.00372227,-0.999993,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[0.272466,5.97823,3.86926],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[0.742193,-0.252725,3.88726],[[-0.999758,0.0219804,0],[0,0,1]],true,[]],["Land_Rug_01_Traditional_F",[1.34766,-0.230264,0.450733],[[0,1,0],[0,0,1]],false,["a3\props_f_orange\furniture\data\rug_01_traditional_co.paa"]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[2.66553,-6.23661,0.445608],[[-0.23817,0.971223,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[4.51612,-2.06962,3.88335],[[0.999999,-0.00119452,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[-0.328608,-7.23417,0.46335],[[0.00180927,-0.999998,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[-3.29052,2.99874,3.88335],[[-0.000448314,-1,0],[0,0,1]],true,[]],["a3\props_f_orange\items\decorative\flowerpot_01_f.p3d",[2.74561,0.338096,0.638101],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_orange\items\decorative\flowerpot_01_f.p3d",[2.74561,0.338096,0.564967],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_b_closed.p3d",[-1.48925,-2.10087,0.462358],[[-1,-0.000454891,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_a_open.p3d",[-2.23779,-6.88261,3.74507],[[-0.0102145,-0.999948,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_b_open.p3d",[-1.15624,-6.90751,3.88263],[[-3.25841e-007,-1,0],[0,0,1]],true,[]],["a3\structures_f\furniture\bench_f.p3d",[0.439946,-3.60917,4.13002],[[-0.999868,-0.0162327,0],[0,0,1]],true,[]],["a3\props_f_exp\commercial\market\woodencrate_01_f.p3d",[-2.83496,-2.86698,4.1913],[[-0.715604,0.698506,0],[0,0,1]],true,[]],["a3\structures_f\furniture\bench_f.p3d",[-2.57958,6.87813,0.700289],[[0.999969,-0.00791617,0],[0,0,1]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_f.p3d",[-1.02685,6.8879,0.462607],[[-0.999992,-0.00393484,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\wallboards\picture_a_05\picture_a_05.p3d",[4.51612,4.10616,4.28646],[[-0.999986,-0.00535389,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[-2.4121,6.86788,3.84284],[[0,1,0],[0,0,1]],true,[]]]];

					_compData pushBack ["Land_i_House_Big_01_V1_F",[["a3\structures_f_enoch\furniture\school_equipment\desk_globe.p3d",[-2.43749,-3.03983,4.96366],[[0.616823,-0.787102,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\desk_globe.p3d",[-2.46337,6.87276,1.53035],[[-0.923897,-0.382642,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\desk_globe.p3d",[2.65381,4.63644,4.95999],[[-0.608001,0.793936,0],[0,0,1]],true,[]],["a3\structures_f\data\doorlocks\barricade_2.p3d",[1.97071,1.02706,0.4127],[[-0.99967,0.0256796,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\periodic_table.p3d",[2.11768,-3.03202,4.7511],[[-6.04073e-005,-1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-1.58398,-1.52079,0.446912],[[-0.999944,-0.0105865,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-4.25244,-1.01298,3.87313],[[-0.999944,-0.0105865,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[4.24366,-3.50468,0.460798],[[0.999937,0.0112054,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-4.25537,-1.81718,3.87181],[[-0.999944,-0.0105865,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v2.p3d",[-1.58691,-2.32499,0.445589],[[-0.999944,-0.0105865,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-4.25146,-1.41337,3.87257],[[-0.999994,0.00345707,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[4.2417,-2.69511,0.460395],[[0.999958,0.00919992,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[4.23926,-3.0994,0.462087],[[0.999958,0.00919992,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-1.58544,-2.72538,0.44502],[[-0.999994,0.00345707,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-1.583,-1.92118,0.446343],[[-0.999994,0.00345707,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_closed_v1.p3d",[-4.2539,-2.21757,3.87124],[[-0.999994,0.00345707,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\locker\locker_open_v3.p3d",[4.25489,-3.9119,0.463153],[[0.999976,0.00696792,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\school_ringbell.p3d",[-2.29492,-5.03446,2.47585],[[-0.0034174,-0.999994,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\school_ringbell.p3d",[-0.722163,-3.1829,5.89868],[[-0.00154868,-0.999999,0],[0,0,1]],true,[]],["a3\structures_f_epa\civ\camping\woodentable_large_f.p3d",[1.56202,-0.927529,0.777778],[[0,1,0],[0,0,1]],true,[]],["blackboard",[-4.44335,5.39522,0.429083],[[-0.999962,0.008747,0],[0,0,1]],true,[]],["blackboard",[4.41016,5.42257,3.85872],[[0.999952,-0.00976134,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\metalcrate\metalcrate.p3d",[-2.69384,-2.55985,3.86959],[[0.999851,0.0172563,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_desk.p3d",[1.47852,6.30147,3.84523],[[0.99997,-0.00770768,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_desk.p3d",[-2.20556,3.88399,3.80915],[[0.99997,-0.00770768,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_desk.p3d",[3.14454,3.9172,0.354375],[[-0.999978,0.00669285,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_desk.p3d",[-0.840815,-6.41923,3.8729],[[-0.999994,-0.00345181,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_desk.p3d",[2.6543,-6.41728,3.81169],[[-0.999994,-0.00345181,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_desk.p3d",[0.0556691,6.35616,3.83108],[[0.99997,-0.00770768,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_desk.p3d",[0.0200245,3.84347,3.83386],[[0.99997,-0.00770768,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_desk.p3d",[1.35938,3.84884,3.84801],[[0.99997,-0.00770768,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_desk.p3d",[-0.428706,6.24435,0.41837],[[-0.999978,0.00669285,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_desk.p3d",[3.17042,6.34591,0.379515],[[-0.999978,0.00669285,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_desk.p3d",[2.86622,-4.15556,3.83683],[[-0.999994,-0.00345181,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_desk.p3d",[-0.514155,3.9255,0.41559],[[-0.999978,0.00669285,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_desk.p3d",[-2.17529,6.31466,3.78401],[[0.99997,-0.00770768,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_desk.p3d",[1.40967,3.842,0.401448],[[-0.999978,0.00669285,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_desk.p3d",[-0.102534,-4.14188,3.87568],[[-0.999994,-0.00345181,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_desk.p3d",[1.39063,6.33419,0.404227],[[-0.999978,0.00669285,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_desk.p3d",[0.910161,-6.41093,3.85876],[[-0.999994,-0.00345181,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_desk.p3d",[1.47803,-4.15409,3.86154],[[-0.999994,-0.00345181,0],[0,0,1]],true,[]],["a3\structures_f\items\documents\notepad_f.p3d",[1.10303,-6.21269,4.70407],[[-0.349651,-0.93688,0],[0,0,1]],true,[]],["a3\structures_f_epb\items\vessels\barreltrash_grey_f.p3d",[0.937505,-6.81034,0.844696],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_epb\items\vessels\barreltrash_grey_f.p3d",[-0.0419872,2.31856,0.832829],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_epb\items\vessels\barreltrash_grey_f.p3d",[2.97754,-2.63114,4.27095],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[2.60157,-0.982217,0.440496],[[0.999999,-0.00130634,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\long_bench.p3d",[0.387212,-0.948525,0.439541],[[0.999999,-0.00130634,0],[0,0,1]],true,[]],["a3\structures_f\furniture\bench_f.p3d",[-4.20703,1.49532,4.14076],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f\furniture\bench_f.p3d",[1.63086,-2.64579,4.10978],[[0.999962,-0.00867468,0],[0,0,1]],true,[]],["a3\structures_f\furniture\bench_f.p3d",[-1.50781,-4.11503,0.676461],[[0.00167719,-0.999999,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[0.992193,-0.805459,5.63588],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[0.290044,-5.35185,5.63124],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[-0.121089,5.0588,2.33732],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[-0.0707958,5.08126,5.63612],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[1.62745,-0.883096,2.33699],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\kitchen\dkamna_uhli\dkamna_uhli.p3d",[0.141118,-6.64237,0.429116],[[-0.00284466,-0.999996,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_01.p3d",[-4.24218,-7.04179,3.86463],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_02.p3d",[3.91749,-2.49833,3.85986],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\library_a\library_a.p3d",[-2.91894,-7.09745,3.8667],[[-0.00159437,0.999999,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\library_a\library_a.p3d",[-4.35693,3.88155,3.85982],[[1,-0.000636264,0],[0,0,1]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_f.p3d",[-4.19091,-0.0666895,4.34885],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\vaulting_box_large.p3d",[-3.81347,1.14669,0.438945],[[0.999991,0.00420875,0],[0,0,1]],true,[]],["a3\structures_f\furniture\cashdesk_f.p3d",[2.12208,-6.85233,1.28009],[[-0.0026424,-0.999996,-0.000119033],[-0.00643952,0.000136047,-0.999979]],true,[]],["a3\structures_f\furniture\cashdesk_f.p3d",[4.17188,-5.68046,1.26254],[[0.999999,-0.00108078,-0.000119106],[-0.000126063,-0.00643973,-0.999979]],true,[]],["a3\structures_f\furniture\cashdesk_f.p3d",[3.73584,-6.85868,1.26215],[[-0.0026424,-0.999996,-0.000119033],[-0.00643952,0.000136047,-0.999979]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_b_open.p3d",[-0.0341747,-2.68192,3.87864],[[0.00205389,-0.999998,0],[0,0,1]],true,[]],["Land_WallSign_01_chalkboard_F",[-1.85839,-3.44071,2.42188],[[1,-4.37114e-008,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[4.55225,-5.46903,1.56683],[[0.999986,0.00522535,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-1.86083,-0.811807,2.39729],[[0.999999,-0.00129799,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[4.55323,-5.47538,2.41564],[[0.999986,0.00522535,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[2.64356,-7.24931,1.55166],[[0.000541052,1,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[2.64942,-7.24882,2.40071],[[0.000539617,1,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-4.55175,5.34542,1.56891],[[0.999999,-0.00129799,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-4.54931,5.34542,2.41772],[[0.999999,-0.00129799,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-1.86328,-0.811807,1.54848],[[0.999999,-0.00129799,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-1.85937,-3.43437,1.57307],[[1,-4.37114e-008,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-4.50683,-5.54569,5.25562],[[-0.999991,-0.00427148,0],[0,0,1]],false,["a3\structures_f_orange\signs\special\data\wallsign_01_f_chalkboard_co.paa","a3\structures_f_orange\signs\special\data\wallsign_01_f_chalkboard_co.paa"]],["a3\structures_f_enoch\furniture\cases\library_a\library_a_open.p3d",[-3.09716,3.19845,0.436696],[[0.000731148,1,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[-1.40576,1.78194,3.86976],[[1,-0.000701829,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[1.65381,-2.23856,3.93068],[[-0.999985,0.00545119,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[-2.81152,6.51241,3.81077],[[-0.999996,0.00278569,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[0.798345,3.76681,3.88107],[[-0.990361,-0.138512,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[3.66358,-3.86454,3.88112],[[0.986178,0.165691,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[-0.673335,4.29024,3.8542],[[-0.915073,0.403288,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[-3.47412,6.19063,0.439323],[[-0.915538,0.402231,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[-4.02636,-4.13163,3.87263],[[-0.957254,-0.289248,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[2.17627,6.51144,0.424562],[[0.990217,0.139538,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[2.14551,3.43575,0.433563],[[0.999998,-0.00174908,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[3.48682,-6.65165,3.83844],[[0.999965,0.00837383,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[0.0893605,3.51681,0.406097],[[0.977471,-0.211069,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[2.18946,-4.48515,3.88187],[[0.885364,-0.464899,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[-0.256343,-6.14237,3.86341],[[0.999799,0.0200441,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[0.527349,-4.21854,3.90874],[[0.988753,0.149555,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[1.65186,-6.81522,3.89087],[[0.999965,0.00837383,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[-3.03759,3.63009,3.85344],[[-0.987965,-0.154675,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[-0.567378,6.08272,3.8632],[[-0.999996,0.00278569,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[0.878911,6.56612,3.83573],[[-0.977252,0.212081,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[3.61622,3.90694,3.86896],[[0.915131,-0.403156,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[0.261235,6.43038,0.451432],[[0.990217,0.139538,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[4.11182,6.46163,0.423806],[[0.987805,0.155699,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[3.89405,3.46456,0.381131],[[0.999998,-0.00174908,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[-4.51611,3.78927,0.516963],[[-0.999916,0.0129753,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[-4.53173,5.91524,3.97684],[[-0.999977,0.00681253,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[4.53809,-5.32401,4.00452],[[0.999991,0.00434703,0],[0,0,1]],true,[]],["a3\props_f_orange\items\decorative\flowerpot_01_flower_f.p3d",[4.20997,6.96017,4.66473],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\vaulting_box_small.p3d",[-3.85693,1.55294,0.434785],[[1,7.54979e-008,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\anatomy_poster_2.p3d",[4.51368,-4.0247,5.66121],[[1,-0.000334545,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\anatomy_poster_1.p3d",[-4.49609,1.78097,5.74192],[[-0.99998,0.00634953,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\teacher_desk.p3d",[2.96583,4.00362,3.83453],[[0.999922,-0.0124751,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\teacher_desk.p3d",[-2.82421,-3.71317,3.83821],[[-0.999999,0.00131608,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\teacher_desk.p3d",[-2.82226,6.20626,0.404897],[[-0.999934,0.0114601,0],[0,0,1]],true,[]]]];

			    comment "Bungalow";

					_compData pushBack ["Land_i_House_Small_03_V1_F",[["Land_FoodSacks_01_large_brown_F",[4.82231,0.816866,0.76135],[[-0.999988,-0.00497427,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_full_brown_co.paa","a3\props_f_orange\humanitarian\supplies\data\foodsack_01_large_brown_mlod_co.paa"]],["a3\structures_f_enoch\furniture\lighting\light_bathroom\light_bathroom.p3d",[-0.0846694,3.78513,3.30641],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_ransacked_f.p3d",[-3.06564,-1.92044,1.16543],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[0.377447,0.998507,0.28596],[[0.00795729,-0.999968,0],[0,0,1]],true,[]],["a3\structures_f\furniture\chairwood_f.p3d",[3.33719,-4.3428,0.319343],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\structures_f\furniture\chairwood_f.p3d",[4.303,-3.25589,0.319343],[[0.999999,-0.00160257,0],[0,0,1]],true,[]],["a3\structures_f\furniture\chairwood_f.p3d",[3.33595,-3.30813,0.319344],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\structures_f\furniture\chairwood_f.p3d",[4.32338,-4.21194,0.319344],[[0.999999,-0.00160257,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_destroyed_f.p3d",[0.239855,0.190889,0.506487],[[0.00173465,-0.999999,0],[0,0,1]],true,[]],["a3\structures_f\furniture\rack_f.p3d",[-1.36846,1.1489,1.1359],[[-0.00618081,-0.999981,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\wallboards\picture_e_02\picture_e_02.p3d",[5.50128,1.25778,0.7356],[[1,-0.000460549,0],[0,0,1]],true,[]],["Land_Photoframe_01_F",[-5.49129,-0.486357,1.6694],[[0.00530562,0.999986,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_hub\photoframe_ca.paa","a3\props_f_orange\items\decorative\data\photoframe_01_f_co.paa"]],["a3\structures_f\furniture\metal_rack_tall_f.p3d",[2.1929,1.0029,-0.303546],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_tall_f.p3d",[2.1936,1.74509,-0.304088],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelveswooden_blue_f.p3d",[-0.64181,0.152315,0.373552],[[0.999991,-0.00429836,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelveswooden_blue_f.p3d",[-5.17257,3.27146,0.794566],[[0.021536,-0.999768,0],[0,0,1]],true,[]],["OfficeTable_01_old_F",[2.44873,2.58005,0.669316],[[1,-0.000949307,0],[0,0,1]],false,["a3\structures_f_heli\furniture\data\officetable_01_old_co.paa"]],["OfficeTable_01_old_F",[2.447,1.26023,0.669469],[[1,-0.000949307,0],[0,0,1]],false,["a3\structures_f_heli\furniture\data\officetable_01_old_co.paa"]],["a3\structures_f_enoch\furniture\bathroom\basin_a\basin_a.p3d",[2.10676,0.356417,1.02506],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\beds\postel_panelak1.p3d",[0.343935,3.80857,0.285772],[[-0.00637527,0.99998,0],[0,0,1]],true,[]],["a3\props_f_exp\commercial\market\woodencrate_01_f.p3d",[-3.16579,-1.71585,0.624245],[[0.00804884,-0.999968,0],[0,0,1]],true,[]],["a3\structures_f\items\documents\file1_f.p3d",[-3.8729,1.24167,1.11162],[[-0.273557,0.961856,0],[0,0,1]],true,[]],["a3\structures_f\furniture\bench_f.p3d",[-1.69435,-2.14944,0.553754],[[0.999695,0.0246875,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\sack_f.p3d",[5.16168,1.89499,0.717273],[[0.978566,-0.205934,0],[0,0,1]],true,[]],["a3\structures_f\civ\constructions\woodenbox_f.p3d",[5.1687,3.42771,0.294301],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattantable_01_f.p3d",[-4.93148,-0.531767,0.692321],[[-0.0539976,-0.998541,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[3.81935,-3.69778,2.03496],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[-3.61547,0.535128,2.00703],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\structures_f\furniture\tabledesk_f.p3d",[-3.58084,1.23142,0.689018],[[-0.0070124,-0.999976,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\sofa_01_f.p3d",[-3.66239,2.21384,0.798517],[[0.00352132,0.999994,0],[0,0,1]],true,[]],["a3\structures_f_heli\items\electronics\fridge_01_f.p3d",[2.48232,3.58103,0.794822],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-5.02323,-1.32815,0.851524],[[-0.0553274,-0.998468,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-4.89526,0.235811,0.860892],[[0.0289353,0.999581,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_01.p3d",[-5.17253,-2.13528,0.29602],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_02.p3d",[-5.06195,4.29782,0.279163],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\tablesmall_01_f.p3d",[-3.78644,4.57321,0.517024],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\tablebig_01_f.p3d",[3.81575,-3.76077,0.714093],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["Land_WallSign_01_chalkboard_F",[-3.71712,-2.48977,1.47618],[[-0.00367629,0.999993,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-2.53671,4.92819,1.47586],[[-0.00367629,0.999993,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-3.71713,-2.48733,2.325],[[-0.00367629,0.999993,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-2.53672,4.93064,2.32468],[[-0.00367629,0.999993,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[5.53845,-0.42288,1.47111],[[-0.999998,-0.00195485,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[5.53601,-0.42288,2.31992],[[-0.999998,-0.00195485,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[5.53963,3.26608,1.46336],[[-0.99994,-0.0109296,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[5.53719,3.26608,2.31217],[[-0.99994,-0.0109296,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["a3\props_f_orange\furniture\rug_01_f.p3d",[-1.70584,-1.60696,0.312561],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[3.79528,-3.76761,0.330684],[[0.00525401,0.999986,0],[0,0,1]],true,[]],["Land_Rug_01_Traditional_F",[-3.74503,3.51267,0.300684],[[-0.999988,-0.00497427,0],[0,0,1]],false,["a3\props_f_orange\furniture\data\rug_01_traditional_co.paa"]],["a3\props_f_orange\furniture\rug_01_f.p3d",[0.807817,3.80759,0.306284],[[-0.000124542,-1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[-3.58682,0.665499,0.263157],[[0.140777,-0.990041,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[-1.07639,3.97995,0.42855],[[0.999996,-0.00272171,0],[0,0,1]],true,[]],["a3\props_f_orange\items\decorative\flowerpot_01_flower_f.p3d",[-0.485445,-2.12747,1.09561],[[0.24661,-0.969115,0],[0,0,1]],true,[]]]];

					_compData pushBack ["Land_i_House_Small_03_V1_F",[["a3\structures_f_heli\furniture\rattantable_01_f.p3d",[-2.55444,4.33982,0.695625],[[-0.999959,0.00906451,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_line_f.p3d",[2.5759,2.24265,0.347125],[[-0.0273842,-0.999625,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_line_f.p3d",[4.81252,-3.29397,0.348087],[[-0.0273842,-0.999625,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_line_f.p3d",[2.78659,-3.81936,0.336443],[[-0.0273842,-0.999625,0],[0,0,1]],true,[]],["a3\structures_f\civ\garbage\garbage_square5_f.p3d",[-3.14183,-0.0713177,0.327963],[[-0.999959,0.00906451,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-3.56083,4.39792,0.866446],[[-0.999997,-0.00231873,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-1.5786,4.35935,0.878216],[[0.999971,0.00757587,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\library_a\library_a.p3d",[-0.492998,0.271944,0.284631],[[-0.0116774,-0.999932,0],[0,0,1]],true,[]],["OfficeTable_01_old_F",[-0.0453551,3.27194,0.70602],[[0.0245418,-0.999699,0],[0,0,1]],false,["a3\structures_f_heli\furniture\data\officetable_01_old_co.paa"]],["OfficeTable_01_old_F",[-5.15096,2.81833,0.710475],[[-0.999833,-0.0182531,0],[0,0,1]],false,["a3\structures_f_heli\furniture\data\officetable_01_old_co.paa"]],["OfficeTable_01_old_F",[-3.51153,-2.0679,0.718307],[[0.00152591,-0.999999,0],[0,0,1]],false,["a3\structures_f_heli\furniture\data\officetable_01_old_co.paa"]],["OfficeTable_01_old_F",[-5.14782,0.41794,0.704675],[[-0.999833,-0.0182531,0],[0,0,1]],false,["a3\structures_f_heli\furniture\data\officetable_01_old_co.paa"]],["a3\structures_f_enoch\furniture\decoration\wallboards\picture_a_05\picture_a_05.p3d",[-1.40432,-2.43411,0.741364],[[-0.00299656,0.999996,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_01.p3d",[0.589262,0.125948,0.293126],[[-0.174147,0.98472,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_01.p3d",[-5.18055,4.56394,0.298754],[[-0.999959,0.00906451,0],[0,0,1]],true,[]],["Land_Photoframe_01_F",[-5.48583,1.64646,1.6424],[[0.00468384,0.999989,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\shared\photoframe_random_07_co.paa","a3\props_f_orange\items\decorative\data\photoframe_01_f_co.paa"]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_ransacked_f.p3d",[2.6008,2.457,0.508213],[[0.999998,0.00201531,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_ransacked_f.p3d",[-4.56496,-0.789091,0.510464],[[0.805758,0.592245,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_ransacked_f.p3d",[4.92103,-5.86868,0.499508],[[-0.684828,0.728705,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_ransacked_f.p3d",[-4.2423,3.66892,0.510482],[[0.679541,-0.733638,0],[0,0,1]],true,[]],["Land_Photoframe_01_broken_F",[-1.65869,3.54978,0.322054],[[-0.632749,-0.774357,0],[0,0,1]],false,["a3\props_f_orange\items\decorative\data\photos_camo_co.paa","a3\props_f_orange\items\decorative\data\photoframe_01_f_co.paa"]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[-1.51302,1.14255,0.628772],[[-0.999959,0.00906451,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_destroyed_f.p3d",[-2.44802,-2.12845,0.510006],[[-0.0152515,-0.999884,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_destroyed_f.p3d",[1.12712,0.149874,0.515156],[[0.0122277,-0.999925,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_tall_f.p3d",[-0.671919,1.27439,0.300298],[[-0.999959,0.00906451,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_f.p3d",[-5.34945,-1.2471,1.19012],[[-0.999959,0.00906451,0],[0,0,1]],true,[]],["a3\props_f_exp\civilian\garbage\garbageheap_04_f.p3d",[2.43506,-3.81351,0.783323],[[0.999425,0.033913,0],[0,0,1]],true,[]],["a3\structures_f_epb\items\luggage\luggageheap_03_f.p3d",[4.74308,0.897432,0.8062],[[-0.999959,0.00906451,0],[0,0,1]],true,[]],["a3\structures_f_heli\items\electronics\printer_01_f.p3d",[-1.43417,1.49167,1.17241],[[0.999999,-0.00138239,0],[0,0,1]],true,[]],["Land_OfficeCabinet_02_F",[1.56205,1.80124,1.0715],[[0.999874,-0.0158707,0],[0,0,1]],false,[]],["a3\structures_f_bootcamp\items\electronics\watercooler_01_f.p3d",[2.32098,-2.1221,1.03331],[[-0.999959,0.00906451,0],[0,0,1]],true,[]],["a3\structures_f_bootcamp\items\electronics\watercooler_01_f.p3d",[0.154314,0.195772,1.02986],[[0.0341646,0.999416,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\officechair_01_f.p3d",[-4.38564,2.50925,0.973639],[[0.997304,0.0733847,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\officechair_01_f.p3d",[-3.12685,-1.38138,0.946179],[[0.292399,0.956296,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\officechair_01_f.p3d",[-4.3825,0.107882,0.965949],[[0.997304,0.0733847,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\officechair_01_f.p3d",[-0.388293,4.0654,0.969185],[[-0.308276,0.951297,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\fluor_lamp\fluor_lamp.p3d",[-3.34625,1.6196,3.25441],[[0.0119059,0.999929,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\fluor_lamp\fluor_lamp.p3d",[3.90007,-0.737333,3.26335],[[0.0119059,0.999929,0],[0,0,1]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_f.p3d",[-1.39115,-2.16604,0.789455],[[-0.999959,0.00906451,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[-2.94699,1.00681,0.330683],[[0.00135267,0.999999,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[0.247934,-1.00442,0.293775],[[-0.999959,0.00906451,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[0.245367,2.16013,0.29947],[[-0.999959,0.00906451,0],[0,0,1]],true,[]],["Land_Rug_01_Traditional_F",[-2.55294,4.01999,0.299195],[[-0.999959,0.00906451,0],[0,0,1]],false,["a3\props_f_orange\furniture\data\rug_01_traditional_co.paa"]],["a3\props_f_orange\furniture\rug_01_f.p3d",[3.84836,3.20065,0.308486],[[0.0059371,-0.999982,0],[0,0,1]],true,[]],["Land_WallSign_01_chalkboard_F",[0.540712,4.89743,1.55381],[[0.0103624,0.999946,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[0.540735,4.89987,2.40262],[[0.0103624,0.999946,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[5.53769,-0.32913,1.57718],[[-0.999973,-0.007345,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-3.68125,-2.47513,2.29731],[[0.0103624,0.999946,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-2.42988,4.8823,2.25694],[[0.0103624,0.999946,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[5.53525,-0.32913,2.426],[[-0.999973,-0.007345,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[5.54169,2.96628,2.28389],[[-0.999973,-0.007345,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[5.54413,2.96628,1.43508],[[-0.999973,-0.007345,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-3.68127,-2.47757,1.4485],[[0.0103624,0.999946,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-2.4299,4.87985,1.40813],[[0.0103624,0.999946,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["a3\structures_f\civ\garbage\garbage_square3_f.p3d",[-3.84616,3.24997,0.346421],[[-0.999959,0.00906451,0],[0,0,1]],true,[]],["Land_OfficeCabinet_02_F",[2.30687,-1.52444,1.1005],[[-0.999959,0.00906451,0],[0,0,1]],false,[]],["a3\structures_f_heli\furniture\officechair_01_f.p3d",[4.46601,-1.54788,0.962262],[[-0.999959,0.00906451,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\officechair_01_f.p3d",[4.47526,-3.76028,0.966699],[[-0.999959,0.00906451,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\officechair_01_f.p3d",[3.10433,0.903292,0.972571],[[0.995947,-0.0899462,0],[0,0,1]],true,[]],["OfficeTable_01_old_F",[5.15356,-1.65628,0.723462],[[0.999952,-0.00975741,0],[0,0,1]],false,["a3\structures_f_heli\furniture\data\officetable_01_old_co.paa"]],["OfficeTable_01_old_F",[5.14845,-4.05179,0.721276],[[0.999929,-0.0119505,0],[0,0,1]],false,["a3\structures_f_heli\furniture\data\officetable_01_old_co.paa"]],["OfficeTable_01_old_F",[2.46722,1.08151,0.721314],[[-0.999999,0.00115026,0],[0,0,1]],false,["a3\structures_f_heli\furniture\data\officetable_01_old_co.paa"]],["a3\structures_f_epb\furniture\shelveswooden_f.p3d",[2.70183,4.49851,0.373631],[[-0.999959,0.00906451,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_destroyed_f.p3d",[5.18065,-2.70804,0.501131],[[-0.999959,0.00906451,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_01.p3d",[5.17344,-5.12015,0.303002],[[-0.999959,0.00906451,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-2.89579,-1.37161,0.304913],[[-0.0775948,-0.996985,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-3.37015,-1.12503,0.304913],[[-0.680881,-0.732394,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-4.31646,-1.1719,0.301139],[[0.154643,-0.98797,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-3.91174,-1.45218,0.304913],[[-0.877711,-0.479191,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-4.02926,-1.86477,0.302848],[[-0.123237,0.992377,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-3.89372,2.63571,0.307037],[[0.914112,-0.405462,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-3.34375,3.08054,0.307037],[[-0.0775948,-0.996985,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-3.81763,3.32761,0.307037],[[-0.680881,-0.732394,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-4.76442,3.28024,0.303262],[[0.154643,-0.98797,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-4.3597,3.00046,0.307037],[[-0.877711,-0.479191,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-4.47722,2.58737,0.304972],[[-0.123237,0.992377,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[4.0244,-5.0137,0.306945],[[0.914112,-0.405462,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[4.57487,-4.56936,0.306945],[[-0.0775948,-0.996985,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[4.1005,-4.32229,0.306945],[[-0.680881,-0.732394,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[3.15371,-4.36917,0.303171],[[0.154643,-0.98797,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[3.55843,-4.64944,0.306945],[[-0.877711,-0.479191,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[3.44091,-5.06253,0.304881],[[-0.123237,0.992377,0],[0,0,1]],true,[]],["a3\weapons_f_orange\ammo\leaflet_05_old_f.p3d",[-3.44625,-1.81643,0.304913],[[0.914112,-0.405462,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[5.53459,2.99167,0.28335],[[0.999999,-0.00167613,0],[0,0,1]],true,[]]]];

					_compData pushBack ["Land_i_House_Small_03_V1_F",[["Land_FoodSacks_01_large_brown_F",[4.82231,0.816866,0.76135],[[-0.999988,-0.00497427,0],[0,0,1]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_full_brown_co.paa","a3\props_f_orange\humanitarian\supplies\data\foodsack_01_large_brown_mlod_co.paa"]],["a3\structures_f_enoch\furniture\lighting\light_bathroom\light_bathroom.p3d",[-0.0846694,3.78513,3.30641],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_ransacked_f.p3d",[-3.06564,-1.92044,1.16543],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin.p3d",[0.377447,0.998507,0.28596],[[0.00795729,-0.999968,0],[0,0,1]],true,[]],["a3\structures_f\furniture\chairwood_f.p3d",[4.32338,-4.21194,0.319344],[[0.999999,-0.00160257,0],[0,0,1]],true,[]],["a3\structures_f\furniture\chairwood_f.p3d",[3.33595,-3.30813,0.319344],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\structures_f\furniture\chairwood_f.p3d",[3.33719,-4.3428,0.319343],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\structures_f\furniture\chairwood_f.p3d",[4.303,-3.25589,0.319343],[[0.999999,-0.00160257,0],[0,0,1]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_destroyed_f.p3d",[0.239855,0.190889,0.506487],[[0.00173465,-0.999999,0],[0,0,1]],true,[]],["a3\structures_f\furniture\rack_f.p3d",[-1.36846,1.1489,1.1359],[[-0.00618081,-0.999981,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\wallboards\picture_e_02\picture_e_02.p3d",[5.48954,1.26218,0.7356],[[-0.999999,-0.00176689,0],[0,0,1]],true,[]],["Land_Photoframe_01_F",[-5.49129,-0.486357,1.6694],[[0.00530562,0.999986,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_hub\photoframe_ca.paa","a3\props_f_orange\items\decorative\data\photoframe_01_f_co.paa"]],["a3\structures_f\furniture\metal_rack_tall_f.p3d",[2.1936,1.74509,-0.304088],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\structures_f\furniture\metal_rack_tall_f.p3d",[2.1929,1.0029,-0.303546],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelveswooden_blue_f.p3d",[-5.17257,3.27146,0.794566],[[0.021536,-0.999768,0],[0,0,1]],true,[]],["a3\structures_f\furniture\shelveswooden_blue_f.p3d",[-0.64181,0.152315,0.373552],[[0.999991,-0.00429836,0],[0,0,1]],true,[]],["OfficeTable_01_old_F",[2.447,1.26023,0.669469],[[1,-0.000949307,0],[0,0,1]],false,["a3\structures_f_heli\furniture\data\officetable_01_old_co.paa"]],["OfficeTable_01_old_F",[2.44873,2.58005,0.669316],[[1,-0.000949307,0],[0,0,1]],false,["a3\structures_f_heli\furniture\data\officetable_01_old_co.paa"]],["a3\structures_f_enoch\furniture\bathroom\basin_a\basin_a.p3d",[2.10676,0.356417,1.02506],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\beds\postel_panelak1.p3d",[0.343935,3.80857,0.285772],[[-0.00637527,0.99998,0],[0,0,1]],true,[]],["a3\props_f_exp\commercial\market\woodencrate_01_f.p3d",[-3.16579,-1.71585,0.624245],[[0.00804884,-0.999968,0],[0,0,1]],true,[]],["a3\structures_f\items\documents\file1_f.p3d",[-3.8729,1.24167,1.11162],[[-0.273557,0.961856,0],[0,0,1]],true,[]],["a3\structures_f\furniture\bench_f.p3d",[-1.69435,-2.14944,0.553754],[[0.999695,0.0246875,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\sack_f.p3d",[5.16168,1.89499,0.717273],[[0.978566,-0.205934,0],[0,0,1]],true,[]],["a3\structures_f\civ\constructions\woodenbox_f.p3d",[5.1687,3.42771,0.294301],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattantable_01_f.p3d",[-4.93148,-0.531767,0.692321],[[-0.0539976,-0.998541,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[-3.61547,0.535128,2.00703],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_kitchen_03\light_kitchen_03.p3d",[3.81935,-3.69778,2.03496],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\structures_f\furniture\tabledesk_f.p3d",[-3.58084,1.23142,0.689018],[[-0.0070124,-0.999976,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\sofa_01_f.p3d",[-3.66239,2.21384,0.798517],[[0.00352132,0.999994,0],[0,0,1]],true,[]],["a3\structures_f_heli\items\electronics\fridge_01_f.p3d",[2.48232,3.58103,0.794822],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-4.89526,0.235811,0.860892],[[0.0289353,0.999581,0],[0,0,1]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-5.02323,-1.32815,0.851524],[[-0.0553274,-0.998468,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_01.p3d",[-5.17253,-2.13528,0.29602],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_02.p3d",[-5.06195,4.29782,0.279163],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\tablesmall_01_f.p3d",[-3.78644,4.57321,0.517024],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\tablebig_01_f.p3d",[3.81575,-3.76077,0.714093],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["Land_WallSign_01_chalkboard_F",[-3.71713,-2.48733,2.325],[[-0.00367629,0.999993,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-2.53672,4.93064,2.32468],[[-0.00367629,0.999993,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-3.71712,-2.48977,1.47618],[[-0.00367629,0.999993,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[-2.53671,4.92819,1.47586],[[-0.00367629,0.999993,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[5.53845,-0.42288,1.47111],[[-0.999998,-0.00195485,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[5.53601,-0.42288,2.31992],[[-0.999998,-0.00195485,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[5.53963,3.26608,1.46336],[[-0.99994,-0.0109296,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_WallSign_01_chalkboard_F",[5.53719,3.26608,2.31217],[[-0.99994,-0.0109296,0],[0,0,1]],false,["a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa","a3\missions_f_orange\data\img\orange_compositions\n4\n4_windowcardboard_co.paa"]],["Land_Rug_01_Traditional_F",[-3.74503,3.51267,0.300684],[[-0.999988,-0.00497427,0],[0,0,1]],false,["a3\props_f_orange\furniture\data\rug_01_traditional_co.paa"]],["a3\props_f_orange\furniture\rug_01_f.p3d",[0.807817,3.80759,0.306284],[[-0.000124542,-1,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[-1.70584,-1.60696,0.312561],[[-0.999988,-0.00497427,0],[0,0,1]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[3.79528,-3.76761,0.330684],[[0.00525401,0.999986,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[-3.58682,0.665499,0.263157],[[0.140777,-0.990041,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\radiator.p3d",[-1.07639,3.97995,0.42855],[[0.999996,-0.00272171,0],[0,0,1]],true,[]],["a3\props_f_orange\items\decorative\flowerpot_01_flower_f.p3d",[-0.485445,-2.12747,1.09561],[[0.24661,-0.969115,0],[0,0,1]],true,[]]]];
				
				comment "Stone House (Gray)";

					_compData pushBack ["Land_i_Stone_HouseSmall_V1_F",[["a3\props_f_exp\commercial\market\woodencounter_01_f.p3d",[4.19358,3.33937,1.68394],[[-0.00600793,-0.999982,-0.000488265],[0.0115097,-0.000557392,0.999934]],true,[]],["a3\structures_f_enoch\furniture\various\carpet_2_dz.p3d",[-5.24757,-1.71092,1.28934],[[-0.0409123,0.999163,-0.00048787],[-0.0115236,1.6392e-005,0.999934]],true,[]],["Land_FoodSack_01_dmg_brown_F",[2.58489,2.43508,1.27414],[[0.724655,0.689112,-0.000488315],[-0.00758015,0.00867969,0.999934]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_dmg_brown_co.paa"]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_ransacked_f.p3d",[-2.60425,-1.87938,1.42549],[[-0.640071,0.768303,-0.0044482],[-0.00284735,0.00341747,0.99999]],true,[]],["Land_FoodSack_01_empty_brown_F",[5.73655,-1.56102,1.27817],[[-0.349385,0.936969,-0.00444846],[-0.00155423,0.00416811,0.99999]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_dmg_brown_co.paa"]],["Land_FoodSack_01_empty_brown_F",[5.5867,2.32277,1.29663],[[-0.424305,-0.905508,-0.00444844],[-0.00188752,-0.00402814,0.99999]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_dmg_brown_co.paa"]],["Land_FoodSacks_01_small_brown_F",[3.57141,3.27004,1.60993],[[0.00475351,-0.999989,-0.00048828],[0.0115155,-0.000433513,0.999934]],false,["a3\props_f_orange\humanitarian\supplies\data\foodsack_01_full_brown_co.paa"]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_destroyed_f.p3d",[5.71601,3.3174,1.41199],[[-0.999999,0.00139625,-0.000488281],[-0.000504324,-0.0115126,0.999934]],true,[]],["a3\structures_f_epa\civ\camping\woodentable_large_f.p3d",[-0.804316,2.4048,1.65514],[[-0.999989,0.00139624,-0.00444844],[-0.00444844,6.21116e-006,0.99999]],true,[]],["Land_Photoframe_01_F",[0.628242,-1.13719,2.6804],[[0.0283969,-0.999587,-0.00444822],[0.000126176,-0.00444643,0.99999]],false,["a3\missions_f_orange\data\img\orange_compositions\shared\photoframe_random_05_co.paa","a3\props_f_orange\items\decorative\data\photoframe_01_f_co.paa"]],["a3\structures_f_enoch\furniture\cases\metalcrate\metalcrate.p3d",[-3.73023,-2.23143,1.22214],[[-0.999989,0.00139624,-0.00444844],[-0.00444844,6.21116e-006,0.99999]],true,[]],["a3\props_f_exp\commercial\market\woodencrate_01_f.p3d",[-4.1233,1.96389,1.51148],[[-0.999999,0.00139625,-0.000488281],[-0.000504324,-0.0115126,0.999934]],true,[]],["a3\structures_f\civ\garbage\garbage_square3_f.p3d",[2.86007,-1.56688,1.25267],[[-0.999989,0.00139624,-0.00444844],[-0.00444844,6.21116e-006,0.99999]],true,[]],["a3\structures_f\civ\garbage\garbage_line_f.p3d",[-2.8195,-1.82225,1.27409],[[-0.999989,0.00139624,-0.00444844],[-0.00444844,6.21116e-006,0.99999]],true,[]],["a3\structures_f\furniture\bench_f.p3d",[-5.13016,-2.2534,1.44142],[[-0.999989,0.00139624,-0.00444844],[-0.00444844,6.21116e-006,0.99999]],true,[]],["a3\structures_f\items\vessels\canisterplastic_f.p3d",[4.67646,-0.527813,1.55721],[[-0.999999,0.00139625,0],[-3.60756e-006,-0.00258374,0.999997]],true,[]],["a3\structures_f\civ\market\basket_f.p3d",[-0.404228,-2.00975,1.57796],[[-0.540719,0.841192,-0.00444847],[-0.00240538,0.00374206,0.99999]],true,[]],["a3\structures_f\civ\constructions\pallet_vertical_f.p3d",[3.29596,-2.7202,2.8963],[[0.0342349,-0.999414,0],[0,0,1]],true,[]],["a3\structures_f\civ\constructions\pallet_vertical_f.p3d",[-3.49757,-2.76268,2.83568],[[0.0113575,-0.999936,0],[0,0,1]],true,[]],["a3\structures_f\civ\constructions\pallet_vertical_f.p3d",[-3.59224,3.92531,2.72754],[[-0.000467777,1,0],[0,0,1]],true,[]],["a3\structures_f\civ\constructions\pallet_vertical_f.p3d",[5.57036,3.90969,2.72573],[[0.00352024,0.999994,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\cratesplastic_f.p3d",[-4.3182,1.9092,2.0688],[[-0.0203202,0.999793,-0.000487939],[-0.0115209,0.000253853,0.999934]],true,[]],["a3\structures_f\civ\market\cratesplastic_f.p3d",[4.88841,3.34279,2.35712],[[0.0596076,-0.998212,-0.00444843],[0.000264943,-0.00444053,0.99999]],true,[]],["a3\structures_f\furniture\tabledesk_f.p3d",[4.60167,-1.63768,1.62217],[[-0.99962,0.0272115,-0.00444805],[-0.00444641,0.000120951,0.99999]],true,[]],["a3\structures_f\civ\camping\fireplace_f.p3d",[1.6293,3.11769,1.58429],[[-0.999999,0.00139625,-0.000488692],[-0.000504743,-0.0115182,0.999934]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-1.2628,1.36623,1.80574],[[-0.00948515,-0.999955,-0.000488273],[0.0115082,-0.000597424,0.999934]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-1.26252,3.31398,1.76401],[[0.00946205,0.999955,-0.000488273],[-0.0115082,0.000597159,0.999934]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-2.44105,2.3926,1.79788],[[-0.99957,0.0293118,-0.000488272],[-0.000825505,-0.0114941,0.999934]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-0.294231,3.33107,1.7785],[[0.00946205,0.999955,-0.000488273],[-0.0115082,0.000597159,0.999934]],true,[]],["a3\structures_f_heli\furniture\rattanchair_01_f.p3d",[-0.297507,1.33498,1.80618],[[-0.00948515,-0.999955,-0.000488273],[0.0115082,-0.000597424,0.999934]],true,[]],["a3\structures_f_enoch\furniture\various\debris_small_house.p3d",[-3.6001,0.389667,1.23032],[[-0.999999,0.00139625,-0.000488281],[-0.000504324,-0.0115126,0.999934]],true,[]],["a3\structures_f_enoch\furniture\various\debris_small_house.p3d",[2.78965,0.104023,1.21816],[[-0.999989,0.00139624,-0.00444844],[-0.00444844,6.21116e-006,0.99999]],true,[]],["a3\structures_f_enoch\furniture\decoration\flowers\flower_01.p3d",[1.38626,-0.642071,1.1863],[[-0.999989,0.00139624,-0.00444844],[-0.00444844,6.21116e-006,0.99999]],true,[]],["a3\props_f_orange\furniture\armchair_01_f.p3d",[-1.43978,-1.94139,1.71661],[[0.00934415,0.999956,-0.0004882],[-0.0115082,0.000595728,0.999934]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_f.p3d",[0.263486,-1.14402,1.71059],[[-0.000753493,0.99999,-0.00444823],[-3.35196e-006,0.00444823,0.99999]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_b_open.p3d",[1.40456,-1.52293,1.23407],[[-0.999989,0.00139624,-0.00444844],[-0.00444844,6.21116e-006,0.99999]],true,[]],["a3\props_f_orange\furniture\rug_01_f.p3d",[-0.77855,2.32277,1.25726],[[-0.999999,0.00139625,-0.000488281],[-0.000504324,-0.0115126,0.999934]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[4.20516,-1.65672,1.24221],[[-0.999989,0.00139624,-0.00444844],[-0.00444844,6.21116e-006,0.99999]],true,[]],["a3\props_f_orange\items\decorative\flowerpot_01_f.p3d",[0.27261,-0.904278,1.63099],[[-0.999989,0.00139624,-0.00444844],[-0.00444844,6.21116e-006,0.99999]],true,[]]]];

				comment "Stone House (Big, Gray)";

					_compData pushBack ["Land_i_Stone_HouseBig_V1_F",[["a3\structures_f_enoch\furniture\cases\dhangar_borwnskrin\dhangar_brownskrin_open.p3d",[-3.36077,1.00045,2.99859],[[-0.999999,-0.0017023,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_bathroom\light_bathroom.p3d",[-0.344166,-0.675336,5.90318],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\lighting\light_bathroom\light_bathroom.p3d",[-0.621021,-0.462445,2.83158],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_exp\commercial\market\woodencounter_01_f.p3d",[-0.894947,-2.62211,0.598536],[[0,1,0],[-0.00258374,0,0.999997]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_ransacked_f.p3d",[-1.42278,-2.46049,3.21013],[[0.987306,0.158827,0],[0,0,1]],true,[]],["a3\structures_f\furniture\chairwood_f.p3d",[0.0332758,-0.815472,0.178596],[[0.974692,-0.223553,2.43075e-007],[0.000577275,0.00251801,0.999997]],true,[]],["a3\structures_f\furniture\chairwood_f.p3d",[-0.760181,-1.11039,0.191961],[[-0.0275127,-0.999621,2.01086e-007],[0.00258237,-7.08736e-005,0.999997]],true,[]],["a3\structures_f\furniture\chairwood_f.p3d",[-0.44524,-0.12309,0.17314],[[0.061346,0.998117,2.01093e-007],[-0.00257849,0.000158277,0.999997]],true,[]],["a3\props_f_orange\humanitarian\supplies\paperbox_01_small_destroyed_f.p3d",[-3.31585,-0.0185974,3.22358],[[-0.999938,-0.0111167,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\tables\conference_table_a\conference_table_a.p3d",[-2.65813,-2.66948,3.30003],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\beds\postel_panelak2.p3d",[-1.14739,1.32173,3.00631],[[0,1,0],[0,0,1]],true,[]],["a3\props_f_exp\commercial\market\woodencrate_01_f.p3d",[1.29744,0.445758,0.451928],[[0,1,0],[-0.00258374,0,0.999997]],true,[]],["a3\structures_f\furniture\bench_f.p3d",[-3.33196,-0.0928161,0.440388],[[0,1,0],[-0.00258374,0,0.999997]],true,[]],["a3\structures_f\civ\market\sack_f.p3d",[3.27351,-2.60551,3.42082],[[0.538771,0.842453,0],[0,0,1]],true,[]],["a3\structures_f\civ\market\sack_f.p3d",[-2.41448,-2.78618,0.541395],[[0.996375,-0.0850712,1.54207e-007],[0.000219647,0.00257437,0.999997]],true,[]],["a3\structures_f\items\vessels\canisterplastic_f.p3d",[1.28767,-0.44975,0.511551],[[0,1,0],[-0.00258374,0,0.999997]],true,[]],["a3\structures_f\civ\market\basket_f.p3d",[-0.247974,-2.61528,0.642997],[[0,1,0],[-0.00258374,0,0.999997]],true,[]],["a3\structures_f\civ\market\cratesplastic_f.p3d",[1.31941,0.222614,1.01084],[[-0.999972,-0.00750441,-1.1396e-008],[1.93755e-005,-0.00258333,0.999997]],true,[]],["a3\structures_f_enoch\furniture\various\debris_small_house.p3d",[-1.61565,0.977008,0.196162],[[0,1,0],[-0.00258374,0,0.999997]],true,[]],["a3\structures_f_enoch\furniture\various\dirtpile_small_house.p3d",[1.27498,-2.47563,3.01584],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_enoch\furniture\decoration\box_c\box_c.p3d",[-3.38909,3.73726,0.472985],[[0.999919,0.0127247,3.74512e-007],[-3.32515e-005,0.00258352,0.999997]],true,[]],["a3\props_f_orange\furniture\armchair_01_f.p3d",[-0.445728,-2.36332,3.46762],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_epb\furniture\shelveswooden_f.p3d",[-3.34856,-1.64164,0.656995],[[0,1,0],[-0.00258374,0,0.999997]],true,[]],["a3\structures_f_enoch\furniture\school_equipment\class_case_a_open.p3d",[3.30671,-1.76567,2.95915],[[1,0.000762776,0],[0,0,1]],true,[]],["Land_Rug_01_Traditional_F",[-0.614673,1.36714,3.01673],[[0,1,0],[0,0,1]],false,["a3\props_f_orange\furniture\data\rug_01_traditional_co.paa"]],["Land_Rug_01_Traditional_F",[-0.839771,-0.60307,0.187005],[[0.99991,0.0134397,-4.00178e-011],[-3.47247e-005,0.00258351,0.999997]],false,["a3\props_f_orange\furniture\data\rug_01_traditional_co.paa"]],["a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d",[-2.88713,-2.3687,2.94846],[[0,1,0],[0,0,1]],true,[]],["a3\structures_f_epa\civ\camping\woodentable_small_f.p3d",[-0.646412,-0.693402,0.601127],[[0.999998,0.00209971,-4.41105e-011],[-5.42507e-006,0.00258373,0.999997]],true,[]],["a3\props_f_orange\items\decorative\flowerpot_01_f.p3d",[-1.88079,-2.70659,0.487852],[[0,1,0],[-0.00258374,0,0.999997]],true,[]],["a3\props_f_orange\items\decorative\flowerpot_01_f.p3d",[-1.87737,-2.70659,0.431579],[[0,1,0],[-0.00258374,0,0.999997]],true,[]]]];

			private _data = profileNamespace getVariable ["MAZ_EZM_BuildingCompositionData",[]];
			private _count = 0;
			{
				_data = [_data,_x] call MAZ_EZM_fnc_addBuildingDataToVar;
				_count = _count + 1;
			}forEach _compData;
			[format ["Saved %1 default interiors to interior data.",_count],"addItemOk"] call MAZ_EZM_fnc_systemMessage;
			profileNamespace setVariable ["MAZ_EZM_BuildingCompositionData",_data];
			saveProfileNamespace;
		};

		MAZ_EZM_fnc_getDefaultComps = {
			call MAZ_EZM_fnc_resetBuildingCompositionData;
			call MAZ_EZM_fnc_loadDefaultCompositionData;
		};

		MAZ_EZM_fnc_checkForCompData = {
			private _data = profileNamespace getVariable ["MAZ_EZM_BuildingCompositionData",[]];
			if(_data isEqualTo []) then {
				call MAZ_EZM_fnc_getDefaultComps;
			};
		};
		call MAZ_EZM_fnc_checkForCompData;

		MAZ_EZM_fnc_typeInArray = {
			params ["_type","_array"];
			private _return = false;
			{
				if(_type isKindOf _x) exitWith {_return = true;};
			}forEach _array;
			_return
		};

		MAZ_EZM_fnc_addBuildingDataToVar = {
			params ["_data","_comp"];
			_comp params ["_buildingType","_compData"];
			private _isFound = false;
			{
				_x params ["_type","_comps"];
				if(_isFound) exitWith {};
				if(_type isEqualType []) then {
					if(_buildingType in _type || [_buildingType,_type] call MAZ_EZM_fnc_typeInArray) exitWith {
						_isFound = true;
						_comps pushBack _compData;
						_data set [_forEachIndex,[_type,_comp]];
					};
				};
				if(_type isEqualType "") then {
					if(_buildingType == _type || _buildingType isKindOf _type) exitWith {
						_isFound = true;
						_comps pushBack _compData;
						_data set [_forEachIndex,[_type,_comps]];
					};
				};
			}forEach _data;

			if(!_isFound) then {
				_data pushBack [_buildingType,[_compData]];
			};
			_data
		};

		MAZ_EZM_fnc_getBuildingCompositionData = {
			params ["_building",["_save",false]];
			if(!((typeOf _building) isKindOf "House")) exitWith {["Not a building","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			private _bbr = boundingBoxReal _building;
			private _p1 = _bbr select 0;
			private _p2 = _bbr select 1;
			private _maxWidth = abs ((_p2 select 0) - (_p1 select 0));
			private _maxLength = abs ((_p2 select 1) - (_p1 select 1));
			private _maxHeight = abs ((_p2 select 2) - (_p1 select 2));
			if(!isNil "MAZ_EZM_buildingCompMarker") then {
				deleteMarker MAZ_EZM_buildingCompMarker;
			};
			MAZ_EZM_buildingCompMarker = createMarker ["BuildingSizeMarker", position _building];
			MAZ_EZM_buildingCompMarker setMarkerPos (getPos _building);
			MAZ_EZM_buildingCompMarker setMarkerDir (getDir _building);
			MAZ_EZM_buildingCompMarker setMarkerBrush "Solid";
			MAZ_EZM_buildingCompMarker setMarkerShape "RECTANGLE";
			MAZ_EZM_buildingCompMarker setMarkerSize [_maxWidth/2,_maxLength/2];
			MAZ_EZM_buildingCompMarker setMarkerColor "ColorBlack";
			MAZ_EZM_buildingCompMarker setMarkerAlpha 1;

			private _allObjects = (allSimpleObjects []) + (allMissionObjects "all");

			private _compositionData = [];
			{
				if(_x == _building) then {continue};
				if(isAgent teamMember _x) then {continue};
				if(_x isKindOf "Man") then {continue};
				if(!(_x inArea MAZ_EZM_buildingCompMarker)) then {continue};
				private _worldPos = getPosWorld _x;
				if (!(surfaceIsWater _worldPos)) then {
					_worldPos = ASLToATL _worldPos;
				};
				private _relPos = _building worldToModel _worldPos;
				_relPos = _relPos vectorAdd (boundingCenter _building);
				private _relDirAndUp = [_x,_building] call BIS_fnc_vectorDirAndUpRelative;
				
				if(is3DEN) then {
					if((_x get3DENAttribute "CSObject") # 0) then {
						comment "CSO simple";
						(getModelInfo _x) params ["","_modelPath","",""];
						_compositionData pushBack [
							_modelPath,
							_relPos,
							_relDirAndUp,
							true,
							[]
						];
					} else {
						if ((_x get3DENAttribute "objectIsSimple") select 0) exitWith {
							comment "Normally Simple";
							_compositionData pushBack [
								typeOf _x,
								_relPos,
								_relDirAndUp,
								true,
								getObjectTextures _x
							];
						};
						comment "Normal object with simulation";
						_compositionData pushBack [
							typeOf _x,
							_relPos,
							_relDirAndUp,
							isSimpleObject _x,
							getObjectTextures _x
						];
					};
				} else {
					comment "In Zeus";
					_compositionData pushBack [
						typeOf _x,
						_relPos,
						_relDirAndUp,
						isSimpleObject _x,
						getObjectTextures _x
					];
				};
			}forEach _allObjects;

			deleteMarker MAZ_EZM_buildingCompMarker;
			MAZ_EZM_buildingCompMarker = nil;

			if(_save) then {
				private _data = profileNamespace getVariable ["MAZ_EZM_BuildingCompositionData",[]];
				_data = [_data,[typeOf _building,_compositionData]] call MAZ_EZM_fnc_addBuildingDataToVar;
				profileNamespace setVariable ["MAZ_EZM_BuildingCompositionData",_data];
				saveProfileNamespace;
			} else {
				MAZ_EZM_buildingCompData = [typeOf _building,_compositionData];
				systemChat "Saved to variable 'MAZ_EZM_buildingCompData'";
			};

			[typeOf _building,_compositionData]
		};

		MAZ_EZM_fnc_getBuildingCompositionDataCall = {
			params ["_entity"];
			if(!((typeOf _entity) isKindOf "House")) exitWith {
				private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
				private _building = nearestBuilding _pos;
				if(_building distance2D _pos < 20) then {
					[_building] call MAZ_EZM_fnc_getBuildingCompositionData;
				};
			};
			[_entity,true] call MAZ_EZM_fnc_getBuildingCompositionData;
		};

		MAZ_EZM_fnc_createObject = {
			params ["_building","_objectParams"];
			_objectParams params ["_type","_modelPos","_relDirAndUp","_isSimple","_objectTextures"];

			private _object = objNull;
			private _relPos = _modelPos vectorDiff (boundingCenter _building);
			private _absPos = _building modelToWorldWorld _relPos;
			if(_isSimple) then {
				_object = createSimpleObject [_type,[0,0,0]];
			} else {
				_object = createVehicle [_type,[0,0,0],[],0,"CAN_COLLIDE"];
			};
			_object setPosWorld _absPos;
			_relDirAndUp params ["_dir","_up"];
			_dir = _building vectorModelToWorld _dir;
			_up = _building vectorModelToWorld _up;
			_object setVectorDirAndUp [_dir,_up];
			{
				_object setObjectTextureGlobal [_forEachIndex,_x];
			}forEach _objectTextures;
			_object
		};

		MAZ_EZM_fnc_isSameBuildingType = {
			params ["_typeOfBuilding","_searchType"];
			if(_searchType isEqualType [] && _typeOfBuilding in _searchType) exitWith {true};
			if(_serachType isEqualType []) exitWith {false};
			if(_searchType isEqualType "" && {_typeOfBuilding isKindOf _searchType}) exitWith {true};
			false
		};

		MAZ_EZM_fnc_getBuildingCompositionsForBuildingType = {
			params ["_building"];
			private _compData = [];
			private _allCompData = profileNamespace getVariable ["MAZ_EZM_BuildingCompositionData",[]];
			{
				if(!([typeOf _building,(_x # 0)] call MAZ_EZM_fnc_isSameBuildingType)) then {continue};
				_compData pushBack _x;
			}forEach _allCompData;

			_compData
		};

		MAZ_EZM_fnc_createBuildingComposition = {
			params ["_building",["_compDataFull",[]]];
			if(_building getVariable ["MAZ_EZM_hasCompSetup",false]) exitWith {
				["This building already has a composition!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
			};
			private _typeOfBuilding = "";
			if(_compDataFull isEqualTo []) then {
				private _buildingDatas = [_building] call MAZ_EZM_fnc_getBuildingCompositionsForBuildingType;
				if(_buildingDatas isEqualTo []) exitWith {};
				_typeOfBuilding = _buildingDatas # 0 # 0;
				_compDataFull = selectRandom (_buildingDatas # 0 # 1);
			};
			if(_compDataFull isEqualTo []) exitWith {["Cannot find any saved types","addItemFailed"] call MAZ_EZM_fnc_systemMessage};
			private _compData = _compDataFull;
			if(!([typeOf _building,_typeOfBuilding] call MAZ_EZM_fnc_isSameBuildingType)) exitWith {["Wrong house type","addItemFailed"] call MAZ_EZM_fnc_systemMessage};
			private _isTerrainBuilding = if(_building in(nearestTerrainObjects [getPos _building, ["House"], 50])) then {true} else {false};
			if(_isTerrainBuilding) then {
				comment "Replace building, terrain buildings don't invoke BuildingChanged MEH";
				_building setVariable ["MAZ_EZM_hasCompSetup",true,true];
				private _buildingType = typeOf _building;
				private _dir = vectorDir _building;
				private _up = vectorUp _building;
				private _worldPos = getPosWorld _building;
				[_building,true] remoteExec ['hideObject',0,_building];
				[_building,false] remoteExec ['allowDamage'];
				private _temp = _building;
				_building = _buildingType createVehicle [0,0,0];
				_building setVariable ["MAZ_EZM_isCompClone",true,true];
				_building setVariable ["MAZ_EZM_compParent",_temp,true];
				_building setPosWorld _worldPos;
				_building setVectorDirAndUp [_dir,_up];
			};
			private _objects = [];
			{
				_x params ["_type","_pos"];
				private _object = [_building,_x] call MAZ_EZM_fnc_createObject;
				[_object,_building] call BIS_fnc_attachToRelative;
				_objects pushBack [_object,_pos];
			}forEach _compData;

			_building setVariable ["MAZ_EZM_CompObjects",_objects,true];
			_building setVariable ["MAZ_EZM_hasCompSetup",true,true];

			_building addEventhandler ["Deleted", {
				params ["_entity"];
				private _objects = _entity getVariable ["MAZ_EZM_CompObjects",[]];
				{
					_x params ["_object","_objectPos"];
					deleteVehicle _object;
				}forEach _objects;
			}];

			_building addEventhandler ["Killed", {
				params ["_unit", "_killer", "_instigator", "_useEffects"];
				[_unit] spawn {
					params ["_unit"];
					private _objects = _unit getVariable ["MAZ_EZM_CompObjects",[]];
					sleep 0.8;
					private _deleteObjects = [];
					{
						_x params ["_object","_objectPos"];
						if(!isTouchingGround _object) then {
							_deleteObjects pushBack _x;
						};
						detach _object;
					}forEach _objects;

					{
						_x params ["_object","_objectPos"];
						_objects deleteAt (_objects find _x);
						deleteVehicle _object;
					}forEach _deleteObjects;

					_unit setVariable ["MAZ_EZM_CompObjects",_objects,true];
				};
			}];

			if(isNil "MAZ_EZM_buildingDestructSetup") then {
				MAZ_EZM_buildingDestructSetup = true;
				call MAZ_EZM_fnc_localBuildingDestruct;
			};

		};

		MAZ_EZM_fnc_createBuildingCompositionCall = {
			params ["_entity"];
			if(
				isNull _entity ||
				{!(_entity isEqualType objNull)} ||
				{!((typeOf _entity) isKindOf "House")}
			) exitWith {
				private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
				private _building = [_pos] call MAZ_EZM_fnc_getNearestBuilding;
				if(_building distance2D _pos < 20) then {
					[_building] call MAZ_EZM_fnc_createBuildingComposition;
				};
			};
			[_entity] call MAZ_EZM_fnc_createBuildingComposition;
		};

		MAZ_EZM_fnc_localBuildingDestruct = {
			if(!isNil "MAZ_EZM_MEH_BuildingCHanged_CompDestruct") then {
				removeMissionEventhandler ["BuildingChanged",MAZ_EZM_MEH_BuildingCHanged_CompDestruct];
			};
			MAZ_EZM_MEH_BuildingCHanged_CompDestruct = addMissionEventHandler ["BuildingChanged", {
				params ["_from", "_to", "_isRuin"];
				private _objects = _from getVariable ["MAZ_EZM_CompObjects",[]];
				{
					_x params ["_object","_objectPos"];
					detach _object;
				}forEach _objects;
				[_from,_to,_isRuin,_objects] spawn {
					params ["_from", "_to", "_isRuin","_objects"];
					sleep 0.8;
					private _deleteObjects = [];
					{
						_x params ["_object","_objectPos"];
						private _relPos = _objectPos vectorDiff (boundingCenter _to);
						private _absPos = _to modelToWorldWorld _relPos;
						_object setPosWorld _absPos;
						[_object,_to] call BIS_fnc_attachToRelative;
						if(!isTouchingGround _object) then {
							_deleteObjects pushBack _x;
						};
					}forEach _objects;

					{
						_x params ["_object","_objectPos"];
						_objects deleteAt (_objects find _x);
						deleteVehicle _object;
					}forEach _deleteObjects;

					_to addEventhandler ["Deleted", {
						params ["_entity"];
						private _objects = _entity getVariable ["MAZ_EZM_CompObjects",[]];
						{
							_x params ["_object","_objectPos"];
							deleteVehicle _object;
						}forEach _objects;
					}];

					_to addEventhandler ["Killed", {
						params ["_unit", "_killer", "_instigator", "_useEffects"];
						[_unit] spawn {
							params ["_unit"];
							sleep 0.8;
							private _objects = _unit getVariable ["MAZ_EZM_CompObjects",[]];
							private _deleteObjects = [];
							{
								_x params ["_object","_objectPos"];
								if(!isTouchingGround _object) then {
									_deleteObjects pushBack _x;
								};
								detach _object;
							}forEach _objects;

							{
								_x params ["_object","_objectPos"];
								_objects deleteAt (_objects find _x);
								deleteVehicle _object;
							}forEach _deleteObjects;

							_unit setVariable ["MAZ_EZM_CompObjects",_objects,true];
						};
					}];
					
					_to setVariable ["MAZ_EZM_CompObjects",_objects,true];
					_to setVariable ["MAZ_EZM_hasCompSetup",true,true];
				};
			}];
		};

		MAZ_EZM_DEBUG_fnc_showBuildingPositions = {
			if(!is3DEN) exitWith {};
			params ["_building"];
			{
				private _marker = "Sign_Arrow_Cyan_F" createVehicleLocal [0,0,0];
				_marker setPos _x;
			}forEach ([_building] call BIS_fnc_buildingPositions);
		};

		MAZ_EZM_DEBUG_fnc_showBuildingPositionsCall = {
			params ["_entity"];
			if(!((typeOf _entity) isKindOf "House")) exitWith {
				private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
				private _building = nearestObject [_pos, "House"];
				if(_building distance _pos < 20) then {
					[_building] call MAZ_EZM_DEBUG_fnc_showBuildingPositions;
				};
			};
			[_entity] call MAZ_EZM_DEBUG_fnc_showBuildingPositions;
		};

		MAZ_EZM_fnc_removeBuildingComposition = {
			params ["_building"];
			if(!(_building getVariable ["MAZ_EZM_hasCompSetup",false])) exitWith {
				["This building does not already have a composition!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
			};
			if(!isNull (_building getVariable ["MAZ_EZM_compParent",objNull])) then {
				_building setVariable ["MAZ_EZM_hasCompSetup",false,true];
				_building = _building getVariable "MAZ_EZM_compParent";
			};
			private _isTerrainBuilding = if(_building in(nearestTerrainObjects [getPos _building, ["House"], 50])) then {true} else {false};
			if(_isTerrainBuilding) then {
				comment "Replace building, terrain buildings don't invoke BuildingChanged MEH";
				_building setVariable ["MAZ_EZM_hasCompSetup",false,true];
				[_building,false] remoteExec ['hideObject',0,_building];
				[_building,true] remoteExec ['allowDamage'];
				private _buildings = nearestObjects [_building,[typeOf _building],20,true];
				{
					if(_x getVariable ["MAZ_EZM_isCompClone",false]) then {
						deleteVehicle _x;
					};
				}forEach _buildings;
			} else {
				_building setVariable ["MAZ_EZM_hasCompSetup",false,true];
				private _objs = _building getVariable ["MAZ_EZM_CompObjects",[]];
				{
					_x params ["_obj"];
					detach _obj;
					deleteVehicle _obj;
				}forEach _objs;
				_building setVariable ["MAZ_EZM_CompObjects",[],true];
			};
		};

		MAZ_EZM_fnc_removeBuildingCompositionCall = {
			params ["_entity"];
			if(
				isNull _entity ||
				{!(_entity isEqualType objNull)} ||
				{!((typeOf _entity) isKindOf "House")}
			) exitWith {
				private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
				private _building = nearestBuilding _pos;
				if(_building distance2D _pos < 20) then {
					[_building] call MAZ_EZM_fnc_removeBuildingComposition;
				};
			};
			[_entity] call MAZ_EZM_fnc_removeBuildingComposition;
		};

	comment "Create/Delete Ships";

		MAZ_EZM_fnc_createCarrierModule = {
			params ["_entity"];
			if(_entity isEqualTo objNull) exitWith {["No boat selected!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			if !(_entity isKindOf "Ship") exitWith {["Object is not a boat!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			[_entity] spawn {
				params ["_object"];
				private _posATL = getPosATL _object;
				private _dir = ((getDir _object)+180);
				private _carrier = createVehicle ["Land_Carrier_01_base_F",[0,0,0],[],0,"CAN_COLLIDE"];
				_carrier setPosATL _posATL;
				_carrier setVectorDirAndUp [[sin _dir, cos _dir, 0], [0,0,1]];
				sleep 2;
				[_carrier] remoteExecCall ["BIS_fnc_Carrier01Init", 0, _carrier];
				{deleteVehicle _x} forEach (nearestObjects [[0,0,0], ["Land_Carrier_01_hull_GEO_Base_F","DynamicAirport_01_F"], 300, true]);
				{_object deleteVehicleCrew _x} forEach crew _object;
				sleep 2;
				private _objects = [(getPos _carrier),600] call JAM_fnc_getEditableObjs_radius;
				{
					if ((["Land_Carrier_01", (typeOf _x)] call BIS_fnc_inString)) then {
						[_x, true] remoteExec ["enableDynamicSimulation", 0, true];
					};
				} forEach _objects;
				[_carrier, true] remoteExec ["enableDynamicSimulation", 0, true];
				deleteVehicle _object;
			};
			["USS Freedom Carrier deployed!","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		LM_fnc_createDestroyerModule = {
			params ["_entity"];
			if(_entity isEqualTo objNull) exitWith {["No boat selected!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			if !(_entity isKindOf "Ship") exitWith {["Object is not a boat!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			
			["Create Destroyer",[
				[
					"SIDES",
					["Destroyer Side:","Choose side of the gun mounts."],
					west
				],
				[
					"TOOLBOX",
					"Gun Mounts Status:",
					[true,[["Disable","Spawn offline gun mounts."],["Enable","Spawn active gun mounts."]]]
				],
				[
					"TOOLBOX:YESNO",
					["Attach Helicopter:","Choose to spawn a side specific helo on the flight deck."],
					[true]
				],
				[
					"TOOLBOX",
					"Hangar Doors:",
					[true,[["Closed","Close main hangar bay doors."],["Opened","Open main hangar bay doors."]]]
				],
				[
					"SLIDER",
					"Ship Hull Number 1:",
					[0,9,0]
				],
				[
					"SLIDER",
					"Ship Hull Number 2:",
					[0,9,7]
				],
				[
					"SLIDER",
					"Ship Hull Number 3:",
					[0,9,9]
				],
				[
					"LIST",
					"Ship Hull Name:",
					[
						[[1,"LIBERTY"],[2,"VIRTUOUS"],[3,"CONSTITUTION"],[4,"VALOR"],[5,"GLORY"],[6,"DEMOCRACY"],[7,"MICDONALS"]],
						[
							["LIBERTY","",""],["VIRTUOUS","",""],["CONSTITUTION","",""],["VALOR","",""],["GLORY","",""],["DEMOCRACY","",""],["MICDONALS","",""]
						],
						1,
						7
					]
				],
				[
					"LIST",
					"Interior Amount:",
					[
						["Maximum","Medium","Minimum","None"],
						[
							["Maximum","",""],["Medium","",""],["Minimum","",""],["None","",""]
						],
						0,
						4
					]
				],
				[
					"LIST",
					"NOTE: Currently the Destroyer is only drivable by the Zeus whom spawns it.",
					[
						[],
						[[]],
						0,
						0
					]
				]
			],{
				params ["_values","_entity","_display"];
				_values params ["_destroyerSide","_mountStatus","_attachHelo","_hangarCtrl","_hullNum1","_hullNum2","_hullNum3","_hullName","_interiorType"];
				[_entity,_destroyerSide,_mountStatus,_attachHelo,_hangarCtrl,_hullNum1,_hullNum2,_hullNum3,_hullName,_interiorType] spawn {
					params ["_object","_destroyerSide","_mountStatus","_attachHelo","_hangarCtrl","_hullNum1","_hullNum2","_hullNum3","_hullName","_interiorType"];
					[[],{
						LM_fnc_enterChair = {
							params ["_target"];
							[_target, 
								"<t color='#e5c771'>Enter Chair</t>", 
								"\a3\ui_f\data\igui\cfg\actions\getincargo_ca.paa",  
								"\a3\ui_f\data\igui\cfg\actions\getincargo_ca.paa",  
								"(_this distance _target < 2) and !((getAssignedCuratorLogic _this) == objNull)",   
								"(_caller distance _target < 2) and !((getAssignedCuratorLogic _caller) == objNull)",   
								{}, 
								{},
								{
									[_caller, _target] spawn {
										params ["_caller","_target"];
										_caller allowDamage false;
										_caller setPosASL (getPosASL _target);
										[_caller,selectRandom ["hubsittingchaira_idle1","hubsittingchaira_idle2","hubsittingchaira_idle3","hubsittingchairb_idle1","hubsittingchairb_idle2","hubsittingchairb_idle3","hubsittingchairc_idle1","hubsittingchairc_idle2","hubsittingchairc_idle3","hubsittingchairua_idle2","hubsittingchairub_idle3","hubsittingchairuc_move1","hubsittingchairua_idle1","hubsittingchairua_idle3","hubsittingchairub_move1","hubsittingchairua_move1"]] remoteExec ["switchMove", 0, true];
										_caller attachTo [_target, [0,0,-0.5]];
										[_caller, (_target call BIS_fnc_getPitchBank) select 0, (_target call BIS_fnc_getPitchBank) select 1] call BIS_fnc_setPitchBank;
									};
									[_target,_actionId] remoteExec ["BIS_fnc_holdActionRemove", 0, true];
									
									[_caller,["LM_currentChair",_target]] remoteExec ["setVariable",0, true];
									titleText ["<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + " size='2'font='PuristaBold'>PRESS 'W' TO EXIT, 'A' OR 'D' TO ROTATE</t>", "PLAIN DOWN", -1, false, true];
									LM_fnc_exitChair = (findDisplay 46) displayAddEventHandler ["KeyDown", {
										if ((_this select 1) == 17) then {
											player allowDamage true;
											detach player;
											[player, ""] remoteExec ['switchMove', 0, true];
											[player getVariable ["LM_currentChair", objNull]] call LM_fnc_enterChair;
											[player,["LM_currentChair",objNull]] remoteExec ["setVariable",0,true];
											(findDisplay 46) displayRemoveEventHandler ["keyDown", LM_fnc_exitChair];
											(findDisplay 46) displayRemoveEventHandler ["keyDown", LM_fnc_rotateChair];
										};
									}];
									LM_fnc_rotateChair = (findDisplay 46) displayAddEventHandler ["KeyDown", {
										if ((_this select 1) == 30) then {
											[player,[(getDir player)-1,(((attachedTo player) call BIS_fnc_getPitchBank) select 0),(((attachedTo player) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
										} else {
											if ((_this select 1) == 32) then {
												[player,[(getDir player)+1,(((attachedTo player) call BIS_fnc_getPitchBank) select 0),(((attachedTo player) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
											};
										};
									}];
								}, 
								{}, 
								[], 
								1, 
								10
							] remoteExec ["BIS_fnc_holdActionAdd", 0, _target];
						};
						
						LM_fnc_shipEnterAction = { 
							params ["_ctrlObj"];
							[_ctrlObj, 
								"<t color='#e5c771'>Drive Destroyer</t>", 
								"\a3\ui_f\data\igui\cfg\actions\getindriver_ca.paa",  
								"\a3\ui_f\data\igui\cfg\actions\getindriver_ca.paa",  
								"((_this distance _target) < 6) and ((_target getVariable ['LM_var_destroyerOwner', objNull]) == _this)",   
								"((_caller distance _target) < 6) and ((_target getVariable ['LM_var_destroyerOwner', objNull]) == _caller)",   
								{}, 
								{},
								{
									[_target, _caller] spawn {
										params ['_target','_caller'];
										_destroyerBody = _target getVariable ["LM_var_destroyerBody", objNull];
										_destroyerDeck = _target getVariable ["LM_var_destroyerDeck", objNull];
										_destroyerHelo = _target getVariable ["LM_var_destroyerHelo", objNull];
										_destroyerBoat = _target getVariable ["LM_var_destroyerBoat", objNull];
										_destroyer1PCM = _target getVariable ["LM_var_destroyer1PCM", objNull];
										_destroyer3PCM = _target getVariable ["LM_var_destroyer3PCM", objNull];
										_destroyerGuns = _target getVariable ["LM_var_destroyerGuns", []];
										_destroyerPrts = _target getVariable ["LM_var_destroyerPrts", []];
										_destroyerTgts = _target getVariable ["LM_var_destroyerTgts", []];
										_destroyerObjs = _target getVariable ["LM_var_destroyerObjs", []];
										_destroyerChrs = _target getVariable ["LM_var_destroyerChrs", []];
										_destroyerCars = _target getVariable ["LM_var_destroyerCars", []];
										_destroyerMisc = _target getVariable ["LM_var_destroyerMisc", []];
										
										if ([crew _destroyerBoat] in [[[]]]) then {
											_caller setVariable ["LM_var_destroyerComp", _target];
											titleCut ['', 'BLACK', 2];
											_destroyerBoat setPosASL [(getPosASL _destroyerBoat) select 0, (getPosASL _destroyerBoat) select 1, 0];
											[_destroyerBoat, 0, 0] call BIS_fnc_setPitchBank;
											{
												if ((_x distance2D _destroyerBoat <= 300) and !(_x == _destroyerBoat)) then {
													[_x, _destroyerBoat] call BIS_fnc_attachToRelative;
												};
											} forEach _destroyerObjs;
											
											_camera1p = (([getPosASL _destroyer1PCM, "camera", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
											[_camera1p,false] remoteExec ["enableSimulationGlobal",0,true];
											[_camera1p,[getDir _destroyer1PCM,(((_camera1p) call BIS_fnc_getPitchBank) select 0),(((_camera1p) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
											[_camera1p, (((_destroyer1PCM) call BIS_fnc_getPitchBank) select 0), (((_destroyer1PCM) call BIS_fnc_getPitchBank) select 1)] call BIS_fnc_setPitchBank;
											_camera1p cameraEffect["INTERNAL", "BACK", "LM_cam_destroyer1PCM"];
											_camera1p camCommit 0;
											[_camera1p, _destroyerBoat] call BIS_fnc_attachToRelative;
											
											_camera3p = (([getPosASL _destroyer3PCM, "camera", 1, [0,0,0],0,{0},true] call BIS_fnc_spawnObjects) select 0);
											[_camera3p,false] remoteExec ["enableSimulationGlobal",0,true];
											[_camera3p,[getDir _destroyer3PCM,(((_camera3p) call BIS_fnc_getPitchBank) select 0),(((_camera3p) call BIS_fnc_getPitchBank) select 1)]] call BIS_fnc_setObjectRotation;
											[_camera3p, (((_destroyer3PCM) call BIS_fnc_getPitchBank) select 0), (((_destroyer3PCM) call BIS_fnc_getPitchBank) select 1)] call BIS_fnc_setPitchBank;
											_camera3p cameraEffect["INTERNAL", "BACK", "LM_cam_destroyer3PCM"];
											_camera3p camCommit 0;
											[_camera3p, _destroyerBoat] call BIS_fnc_attachToRelative;
											
											_caller allowDamage false;
											[_caller,true] remoteExec ["setCaptive ", 0, true];
											[_caller,true] remoteExec ["hideObjectGlobal",0,true];
											_caller moveInDriver _destroyerBoat;
											(vehicle _caller) switchCamera "EXTERNAL";
											
											[ 
												format['<img size="10" shadow="1" image="%1" />',"#(argb,512,512,1)r2t(LM_cam_destroyer1PCM,1.0)"], 
												0.38,
												0, 
												99999, 
												2, 
												0, 
												4090 
											] spawn bis_fnc_dynamicText;
											[
												format['<img size="10" shadow="1" image="%1" />',"#(argb,512,512,1)r2t(LM_cam_destroyer3PCM,1.0)"], 
												-0.38,
												0, 
												99999, 
												2, 
												0, 
												4091 
											] spawn bis_fnc_dynamicText;
											
											_caller setVariable ["LM_var_camera1p", _camera1p];
											_caller setVariable ["LM_var_camera3p", _camera3p];
											
											[_destroyerBoat,false] remoteExec ["hideObjectGlobal",0,true];
											[_destroyerBoat,12] remoteExec ["forceSpeed", 0, true];
											[_destroyerBoat,true] remoteExec ["enableSimulationGlobal", 0, true];
											
											_caller addAction ["<t color='#e5c771'>Exit Destroyer</t>", {
												params ['_object', '_caller', '_id'];
												[_object, _caller, _id] spawn {
													params ['_object', '_caller', '_id'];
													[_object, _id] remoteExec ['removeAction',0,true];
													[ 
														"", 
														0.38,
														0, 
														99999, 
														2, 
														0, 
														4090
													] spawn bis_fnc_dynamicText;
													[ 
														"", 
														0.38,
														0, 
														99999, 
														2, 
														0, 
														4091
													] spawn bis_fnc_dynamicText;
													
													_camera1p = _caller getVariable ["LM_var_camera1p", objNull];
													_camera3p = _caller getVariable ["LM_var_camera3p", objNull];
													
													_camera1p cameraeffect ["terminate","back"];
													camdestroy _camera1p;
													deleteVehicle _camera1p;
													_camera3p cameraeffect ["terminate","back"];
													camdestroy _camera3p;
													deleteVehicle _camera3p;
													
													_target = _caller getVariable ["LM_var_destroyerComp", objNull];
													_destroyerBody = _target getVariable ["LM_var_destroyerBody", objNull];
													_destroyerDeck = _target getVariable ["LM_var_destroyerDeck", objNull];
													_destroyerHelo = _target getVariable ["LM_var_destroyerHelo", objNull];
													_destroyerBoat = _target getVariable ["LM_var_destroyerBoat", objNull];
													_destroyer1PCM = _target getVariable ["LM_var_destroyer1PCM", objNull];
													_destroyer3PCM = _target getVariable ["LM_var_destroyer3PCM", objNull];
													_destroyerGuns = _target getVariable ["LM_var_destroyerGuns", []];
													_destroyerPrts = _target getVariable ["LM_var_destroyerPrts", []];
													_destroyerTgts = _target getVariable ["LM_var_destroyerTgts", []];
													_destroyerObjs = _target getVariable ["LM_var_destroyerObjs", []];
													_destroyerChrs = _target getVariable ["LM_var_destroyerChrs", []];
													_destroyerCars = _target getVariable ["LM_var_destroyerCars", []];
													_destroyerMisc = _target getVariable ["LM_var_destroyerMisc", []];
													
													titleCut ['', 'BLACK', 2];
													
													[_destroyerBoat,true] remoteExec ["hideObjectGlobal",0,true];
													[_destroyerBoat,0] remoteExec ["forceSpeed", 0, true];
													[_destroyerBoat,false] remoteExec ["enableSimulationGlobal", 0, true];
													_destroyerBoat setPosASL [(getPosASL _destroyerBoat) select 0, (getPosASL _destroyerBoat) select 1, 0];
													[_destroyerBoat, 0, 0] call BIS_fnc_setPitchBank;
													
													detach _destroyerBoat;
													detach _destroyerBody;
													
													{
														detach _x;
														[_x,false] remoteExec ["allowDamage", 0, true];
														[_x,false] remoteExec ["enableSimulationGlobal", 0, true];
													} forEach _destroyerObjs;
													
													{
														if (!(_x in _destroyerTgts)) then {
															[_x,true] remoteExec ["allowDamage", 0, true];
														};
														[_x,true] remoteExec ["enableSimulationGlobal", 0, true];
														[_x, true] remoteExec ["enableDynamicSimulation", 0, true];
														[(group _x), true] remoteExec ["enableDynamicSimulation", 0, true];
													} forEach (_destroyerPrts + _destroyerGuns + _destroyerTgts + [_destroyerHelo] + _destroyerCars + _destroyerChrs + _destroyerMisc);
													
													_caller allowDamage true;
													[_caller,false] remoteExec ["setCaptive ", 0, true];
													[_caller,false] remoteExec ["hideObjectGlobal",0,true];
													_caller action ["eject", (vehicle _caller)];
													_caller setPosASL (getPosASL _target);
													
													titleCut ['', 'BLACK IN', 2];
												};
											}];
											
											titleCut ['', 'BLACK IN', 2];
											sleep 15;
											[_target] call LM_fnc_shipEnterAction;
										} else {
											titleText ["<t color=" + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + " size='2'font='PuristaBold'>DRIVER SLOT ALREADY OCCUPIED</t>", "PLAIN DOWN", -1, false, true];
											playSound "addItemFailed";
										};
									};
								}, 
								{}, 
								[], 
								1, 
								10
							] remoteExec ["BIS_fnc_holdActionAdd", 0, _ctrlObj];
						};
					}] remoteExec ['bis_fnc_call',0,true];
					
					_objectsArray = [];
					switch (_interiorType) do {
						case "Maximum": {
							_objectsArray = [["Land_Destroyer_01_interior_03_F",[0,0,-0.65],360,1,false,[0,0],"","",true,true],["Land_Destroyer_01_hull_03_F",[0,0,-0.65],360,1,false,[0,0],"","",true,true],["Box_I_UAV_06_medical_F",[1.00916,0.493164,7.26926],0,1,false,[0,0],"","",false,true],["Land_Stretcher_01_folded_olive_F",[-1.71069,0.761597,7.26909],0,1,false,[0,0],"","",false,true],["MedicalGarbage_01_3x3_v2_F",[0.908447,1.94946,7.26933],214.899,1,false,[0,0],"","",false,true],["Land_Bodybag_01_empty_black_F",[-1.37769,-1.9823,7.26906],0,1,false,[0,0],"","",false,true],["Land_CampingTable_small_F",[0.992554,0.45105,7.26932],1.45059,1,false,[0,0],"","",false,true],["Land_IntravenBag_01_empty_F",[1.69177,2.51355,7.26939],35.3547,1,false,[0,0],"","",false,true],["Land_Stretcher_01_sand_F",[0.879761,2.6377,7.26933],179.173,1,false,[0,-0],"","",false,true],["Land_FirstAidKit_01_open_F",[0.743652,0.453003,8.08233],270.121,1,false,[0,0],"","",false,true],["Land_PaperBox_01_small_closed_white_med_F",[0.262451,3.36597,7.26929],270.121,1,false,[0,0],"","",false,true],["MedicalGarbage_01_Bandage_F",[1.23584,0.604248,8.08233],0,1,false,[0,0],"","",false,true],["Land_BloodBag_F",[1.29041,0.224121,8.08232],326.907,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[1.0365,-2.58569,7.26929],117.522,1,false,[0,-0],"","",false,true],["MedicalGarbage_01_3x3_v1_F",[1.19812,-4.28662,7.26929],0,1,false,[0,0],"","",false,true],["Land_Stretcher_01_sand_F",[1.13354,-4.31592,7.26933],178.866,1,false,[0,-0],"","",false,true],["Land_PortableCabinet_01_medical_F",[-1.42468,-4.01208,7.26902],180.191,1,false,[0,0],"","",false,true],["Land_PaperBox_01_small_closed_white_med_F",[-1.44067,-5.00061,7.26909],0,1,false,[0,0],"","",false,true],["Land_IntravenStand_01_2bags_F",[1.65833,3.67065,7.2694],252.565,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[-0.072998,5.18896,7.2693],0,1,false,[0,0],"","",false,true],["Land_PaperBox_01_small_closed_brown_IDAP_F",[-1.4436,-5.48706,7.26909],356.643,1,false,[0,0],"","",false,true],["PowerCable_01_Corner_F",[4.44751,3.97864,7.26922],180.481,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_medical_F",[-1.42761,-4.01709,8.10202],179.754,1,false,[0,-0],"","",false,true],["Land_PaperBox_01_small_closed_white_med_F",[-1.35327,-5.24707,7.68561],79.2011,1,false,[0,0],"","",false,true],["PowerCable_01_StraightShort_F",[4.01025,5.01831,7.26922],0.480154,1,false,[0,0],"","",false,true],["Land_IntravenStand_01_1bag_F",[1.83203,-4.93311,7.26933],102.699,1,false,[0,-0],"","",false,true],["Land_PortableLight_02_single_black_F",[0.710938,-6.19641,7.26924],180,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[4.1449,5.42969,7.26922],180.935,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_closed_black_F",[4.59644,5.47327,7.26922],285.934,1,false,[0,0],"","",false,true],["Land_MapBoard_F",[4.25098,4.58325,7.26922],183.635,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_closed_black_F",[3.41687,5.24414,8.08482],90.9325,1,false,[0,-0],"","",false,true],["B_supplyCrate_F",[-3.86621,5.10559,7.26922],270,1,false,[0,0],"","",false,true],["PowerCable_01_Corner_F",[4.43262,6.02466,7.26922],270.483,1,false,[0,0],"","",false,true],["Box_IDAP_Equip_F",[1.14709,-7.03271,7.26924],262.092,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[-3.61755,6.59607,7.32539],180,1,false,[0,-0],"","",false,true],["Land_BatteryPack_01_open_black_F",[3.85791,5.42957,8.08482],12.578,1,false,[0,0],"","",false,true],["Land_Camping_Light_F",[4.27234,5.65417,8.08482],90.9325,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[-3.61755,6.59607,7.67728],180,1,false,[0,-0],"","",false,true],["Land_PortableServer_01_cover_black_F",[4.84253,5.43677,8.08482],90.9325,1,false,[0,-0],"","",false,true],["Land_PlasticCase_01_large_idap_F",[1.15881,-7.81287,7.26924],273.214,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[-4.6908,6.59607,7.32539],180,1,false,[0,-0],"","",false,true],["Land_PortableCabinet_01_closed_black_F",[6.2356,5.38293,7.26922],1.67062,1,false,[0,0],"","",false,true],["Land_MapBoard_F",[5.93994,4.49243,7.26922],180.897,1,false,[0,0],"","",false,true],["Item_U_C_IDAP_Man_Casual_F",[0.681763,-6.96289,8.01324],0,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[-3.87781,7.34473,7.26922],180,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[6.09961,5.40002,7.26922],180.935,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[-4.6908,6.59607,7.67728],180,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[-4.6908,6.59607,8.02579],180,1,false,[0,-0],"","",false,true],["Land_MultiScreenComputer_01_closed_black_F",[6.24963,5.24658,8.08482],178.452,1,false,[0,-0],"","",false,true],["Box_NATO_Ammo_F",[-5.2085,7.21399,7.26922],90,1,false,[0,-0],"","",false,true],["Land_GymRack_01_F",[-6.80457,4.69946,7.26922],180,1,false,[0,0],"","",false,true],["Land_FlowerPot_01_Flower_F",[0.275879,8.66858,7.26929],325.824,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_7drawers_black_F",[7.31604,5.36182,7.26922],271.479,1,false,[0,0],"","",false,true],["Box_NATO_Ammo_F",[-4.83765,6.73035,8.38467],90,1,false,[0,-0],"","",false,true],["Land_MultiScreenComputer_01_closed_black_F",[6.82971,5.40991,8.08482],95.2743,1,false,[0,-0],"","",false,true],["Land_CampingTable_F",[-4.18225,8.41101,7.26922],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_folded_black_F",[-3.47742,8.33765,8.08481],153.693,1,false,[0,-0],"","",false,true],["PowerCable_01_StraightLong_F",[7.43616,6.46655,7.26922],90,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-0.963257,-9.47363,7.26903],280.708,1,false,[0,0],"","",false,true],["Box_NATO_WpsLaunch_F",[1.77332,10.1188,7.26923],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[8.65454,4.34241,7.26922],180,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-3.70325,9.33093,7.26922],138.412,1,false,[0,-0],"","",false,true],["Land_Rug_01_Traditional_F",[-7.91602,6.82703,7.269],270,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[3.32422,9.4845,7.26922],270,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Stratis_F",[6.93005,3.90002,9.772],180,1,false,[0,0],"","",false,true],["Land_FlowerPot_01_F",[-6.72803,8.56177,7.26922],0,1,false,[0,0],"","",false,true],["Land_GymBench_01_F",[-9.7019,4.83301,7.269],180,1,false,[0,0],"","",false,true],["MedicalGarbage_01_3x3_v1_F",[1.57019,-11.3348,7.26928],94.2681,1,false,[0,-0],"","",false,true],["HazmatBag_01_F",[1.60474,-11.0557,7.26929],184.76,1,false,[0,0],"","",false,true],["Land_TripodScreen_01_large_black_F",[8.07996,7.27881,7.26922],0,1,false,[0,0],"","",false,true],["PowerCable_01_Roll_F",[10.0306,6.06543,7.26922],345.056,1,false,[0,0],"","",false,true],["Land_Stretcher_01_F",[-8.7677,7.83972,7.26922],270,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Enoch_F",[8.57996,3.90002,9.772],180,1,false,[0,0],"","",false,true],["Land_PaperBox_01_open_water_F",[10.5961,4.86951,7.267],0,1,false,[0,0],"","",false,true],["Reflector_Cone_01_narrow_white_F",[-7.01099,9.82703,7.269],269.522,1,false,[0,0],"","",false,true],["PowerCable_01_StraightShort_F",[10.4288,6.46509,7.26922],90,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[6.78845,9.89807,7.26922],255,1,false,[0,0],"","",false,true],["Land_Tableware_01_knife_F",[-3.62646,12.1265,7.51265],0,1,false,[0,0],"","",false,true],["Land_CerealsBox_F",[-3.67041,12.0254,7.51725],0,1,false,[25,0],"","",false,true],["PowerCable_01_Roll_F",[11.0814,6.31128,7.26922],277.112,1,false,[0,0],"","",false,true],["Land_PCSet_01_case_F",[3.26221,12.2684,7.26922],0.452174,1,false,[0,0],"","",false,true],["Land_Tableware_01_cup_F",[-3.65381,12.1475,7.51085],280,1,false,[0,0],"","",false,true],["Land_Tableware_01_cup_F",[-3.5874,12.1768,7.55647],0.000108061,1,false,[85,-76.5335],"","",false,true],["Land_Can_Dented_F",[-3.61279,12.1875,7.50835],235,1,false,[0,0],"","",false,true],["TrashBagHolder_01_F",[-3.68506,12.0972,7.26922],0,1,false,[0,0],"","",false,true],["Land_WaterBottle_01_compressed_F",[-3.75635,12.1519,7.55544],0,1,false,[-35,0],"","",false,true],["Leaflet_05_F",[-3.66406,12.2397,7.59615],0,1,false,[80,0],"","",false,true],["Land_PortableCabinet_01_closed_black_F",[3.94714,12.2559,7.26922],285.45,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Altis_F",[10.23,3.90002,9.772],180,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[6.72498,11.0057,7.26922],270,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[8.2428,10.0071,7.26922],180,1,false,[0,-0],"","",false,true],["Land_TripodScreen_01_large_black_F",[10.2731,7.28064,7.26922],0,1,false,[0,0],"","",false,true],["MedicalGarbage_01_1x1_v1_F",[1.75085,-13.1018,7.2693],0,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[7.73254,10.0344,8.08482],75,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-8.92798,8.41492,7.269],0.03,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[4.39661,12.3347,7.26922],180.452,1,false,[0,0],"","",false,true],["Land_File1_F",[3.64282,12.3846,8.08482],30.4542,1,false,[0,0],"","",false,true],["Land_PaperBox_01_open_empty_F",[12.139,4.86365,7.26923],0,1,false,[0,0],"","",false,true],["Land_WaterCooler_01_old_F",[-3.67627,12.5342,7.26922],90,1,false,[0,-0],"","",false,true],["Land_MysteriousBell_01_F",[-7.08594,11.0037,7.269],270,1,false,[0,0],"","",false,true],["Land_IntravenStand_01_2bags_F",[1.83276,-12.8322,7.26931],0,1,false,[0,0],"","",false,true],["Land_IPPhone_01_black_F",[3.98315,12.4193,8.08482],195.452,1,false,[0,0],"","",false,true],["Land_PencilYellow_F",[7.47668,10.7151,8.08482],300,1,false,[0,0],"","",false,true],["Land_PCSet_Intel_02_F",[4.42468,12.1398,8.08482],195.452,1,false,[0,0],"","",false,true],["Land_Tableware_01_cup_F",[-3.83008,12.5991,7.91131],0,1,false,[0,0],"","",false,true],["Land_Tableware_01_cup_F",[-3.79688,12.4546,8.327],0,1,false,[0,0],"","",false,true],["Land_Tableware_01_cup_F",[-3.79688,12.4546,8.34342],0,1,false,[0,0],"","",false,true],["Land_File1_F",[7.50793,10.8765,8.08482],285,1,false,[0,0],"","",false,true],["Land_Tableware_01_cup_F",[-3.79688,12.4546,8.35717],0,1,false,[0,0],"","",false,true],["Land_PCSet_Intel_01_F",[5.03943,12.0535,8.08482],180.452,1,false,[0,0],"","",false,true],["Land_Tableware_01_cup_F",[-3.79688,12.4546,8.37359],0,1,false,[0,0],"","",false,true],["Land_GymRack_02_F",[-12.5748,4.46045,7.26922],180.531,1,false,[0,0],"","",false,true],["Land_Tableware_01_cup_F",[-3.79688,12.4546,8.39187],0,1,false,[0,0],"","",false,true],["Land_Tableware_01_cup_F",[-3.79688,12.4546,8.40829],0,1,false,[0,0],"","",false,true],["Land_Rug_01_F",[-11.9191,6.82739,7.26922],270,1,false,[0,0],"","",false,true],["Land_PCSet_01_mousepad_F",[4.62256,12.45,8.08442],0.452282,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_bookcase_black_F",[5.54333,12.3273,7.26922],270.45,1,false,[0,0],"","",false,true],["Land_PCSet_01_mouse_F",[4.61914,12.459,8.09168],180.452,1,false,[0,0],"","",false,true],["Land_Notepad_F",[8.6217,10.1365,8.08482],89.4416,1,false,[0,0],"","",false,true],["Land_Tableware_01_cup_F",[-3.79736,12.6108,8.3573],0.000108061,1,false,[85,-76.5335],"","",false,true],["Land_PencilYellow_F",[8.76282,10.1858,8.08482],185.843,1,false,[0,0],"","",false,true],["Land_Shoot_House_Tunnel_Prone_F",[-8.46521,9.80188,7.26922],91.1031,1,false,[0,-0],"","",false,true],["Land_PCSet_01_keyboard_F",[5.05664,12.4828,8.08482],165.45,1,false,[0,-0],"","",false,true],["Land_File1_F",[8.88684,10.1345,8.08482],178.539,1,false,[0,-0],"","",false,true],["Land_CampingTable_white_F",[7.66711,11.3845,7.26922],90,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[6.7312,12.041,7.26922],270,1,false,[0,0],"","",false,true],["Land_IntravenStand_01_1bag_F",[1.82324,-13.4983,7.26931],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[8.651,10.8541,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[4.88452,13.0844,7.26922],0.452282,1,false,[0,0],"","",false,true],["Land_PortableLight_02_double_black_F",[-1.32214,-13.6793,7.26899],212.821,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[3.4314,10.1063,11.8812],47.5236,1,false,[0,0],"","",false,true],["Land_Stretcher_01_F",[-11.8143,7.83374,7.26922],270,1,false,[0,0],"","",false,true],["Land_PenRed_F",[7.43665,11.7126,8.08482],90,1,false,[0,-0],"","",false,true],["Land_Ammobox_rounds_F",[3.82532,10.0458,11.8812],343.827,1,false,[0,0],"","",false,true],["Box_NATO_Ammo_F",[3.88013,13.6849,7.26922],90,1,false,[0,-0],"","",false,true],["Land_Laptop_03_black_F",[9.71057,9.97803,8.08482],176.257,1,false,[0,-0],"","",false,true],["Land_MapBoard_01_Wall_Tanoa_F",[11.88,3.90002,9.772],180,1,false,[0,0],"","",false,true],["Land_Notepad_F",[7.45618,11.9014,8.08482],345,1,false,[0,0],"","",false,true],["Land_Microwave_01_F",[-3.69434,13.5078,8.08819],92.8519,1,false,[0,-0],"","",false,true],["Land_CampingTable_white_F",[10.1974,10.0051,7.26922],180,1,false,[0,-0],"","",false,true],["Land_ToolTrolley_01_F",[1.83691,14.1508,7.26921],273.508,1,false,[0,0],"","",false,true],["Land_CampingTable_F",[-7.297,12.3209,7.26899],90,1,false,[0,-0],"","",false,true],["Land_Wrench_F",[1.51367,14.0219,8.12398],150.197,1,false,[0,-0],"","",false,true],["Land_OfficeCabinet_02_F",[-3.70557,13.667,7.26922],90,1,false,[0,-0],"","",false,true],["Land_Grinder_F",[1.92773,14.141,7.77223],102.774,1,false,[0,-0],"","",false,true],["Land_Laptop_03_black_F",[7.74817,11.7209,8.08482],105,1,false,[0,-0],"","",false,true],["Land_Meter3m_F",[1.60352,14.0448,8.13055],335.433,1,false,[0,0],"","",false,true],["Land_PenBlack_F",[9.83167,10.25,8.08482],190.32,1,false,[0,0],"","",false,true],["Book_02_F",[7.4967,12.1128,8.08482],270,1,false,[0,0],"","",false,true],["Land_Notepad_F",[9.98206,10.2012,8.08482],75,1,false,[0,0],"","",false,true],["Land_Tableware_01_stackOfNapkins_F",[-3.70605,13.8115,8.08569],347.852,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[3.31384,10.7993,11.8812],87.3298,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[9.67639,10.8549,7.26922],0,1,false,[0,0],"","",false,true],["Land_PlasticCase_01_small_black_F",[2.02051,14.1239,8.12216],72.484,1,false,[0,0],"","",false,true],["Land_Screwdriver_V2_F",[1.56543,14.2797,8.1221],13.263,1,false,[0,0],"","",false,true],["Land_Screwdriver_V1_F",[1.68164,14.2816,8.12417],55.316,1,false,[0,0],"","",false,true],["Land_PaperBox_01_open_boxes_F",[13.6986,4.82849,7.26922],0,1,false,[0,0],"","",false,true],["Land_Bucket_F",[2.09106,14.6195,7.26922],356.654,1,false,[0,0],"","",false,true],["Steel_Plate_F",[-11.391,9.37708,7.26922],88.9511,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-3.82617,10.329,11.8812],163.112,1,false,[0,-0],"","",false,true],["Land_TentSolar_01_folded_olive_F",[-3.73047,13.6831,8.44357],268.86,1,false,[0,0],"","",false,true],["Book_02_F",[10.3429,10.1279,8.08482],6.21549e-005,1,false,[0,0],"","",false,true],["Land_CanisterFuel_F",[2.49536,14.6957,7.26922],224.102,1,false,[0,0],"","",false,true],["Land_PalletTrolley_01_yellow_F",[12.9896,7.05505,7.26923],36.9172,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[3.88684,14.5005,7.26922],0,1,false,[0,0],"","",false,true],["Land_TentLamp_01_standing_F",[1.55493,14.9476,7.26922],17.2626,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[10.6564,10.0891,8.08482],183.327,1,false,[0,0],"","",false,true],["Land_FlowerPot_01_Flower_F",[-0.869019,-14.7894,7.26909],193.01,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-8.92798,11.235,7.269],180,1,false,[0,0],"","",false,true],["Land_PaperBox_open_full_F",[13.3392,6.78259,7.26923],308.743,1,false,[0,0],"","",false,true],["Land_CanisterOil_F",[2.09351,15.0873,7.26922],44.424,1,false,[0,0],"","",false,true],["Land_Map_F",[-3.73242,14.4106,8.09249],305,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[-1.74097,-14.9506,7.26904],320.851,1,false,[0,0],"","",false,true],["Land_OfficeCabinet_02_F",[-3.70557,14.46,7.26922],90,1,false,[0,-0],"","",false,true],["Reflector_Cone_01_narrow_white_F",[-8.15198,12.97,7.269],269.522,1,false,[0,0],"","",false,true],["Land_WaterBottle_01_pack_F",[-3.75732,14.1895,8.4394],275,1,false,[0,0],"","",false,true],["Land_CanisterFuel_F",[2.70923,14.9926,7.26922],251.13,1,false,[0,0],"","",false,true],["Steel_Plate_F",[-11.391,10.2306,7.269],88.951,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[10.6652,10.8258,7.26922],0,1,false,[0,0],"","",false,true],["Land_PencilYellow_F",[-3.73145,14.6465,8.10449],115.001,1,false,[0,-0],"","",false,true],["Land_Notepad_F",[-3.68115,14.6675,8.09301],330,1,false,[0,0],"","",false,true],["Land_TorqueWrench_01_F",[1.83508,15.4607,7.26921],354.213,1,false,[0,0],"","",false,true],["Land_PenBlack_F",[9.33118,11.9873,8.08482],150,1,false,[0,-0],"","",false,true],["Land_Ground_sheet_yellow_F",[1.88977,15.4988,7.24526],271.641,1,false,[0,0],"","",false,true],["Land_Sleeping_bag_folded_F",[-3.71973,14.1982,9.04858],275,1,false,[6.23696e-007,-90],"","",false,true],["Land_PenBlack_F",[11.3893,10.2349,8.08482],220.362,1,false,[0,0],"","",false,true],["Land_Notepad_F",[9.41516,12.1272,8.08482],75,1,false,[0,0],"","",false,true],["Land_laptop_03_closed_olive_F",[-3.70361,14.647,8.43987],90.0005,1,false,[0,-0],"","",false,true],["Land_PortableLight_02_quad_black_F",[-14.6965,4.38855,7.26922],237.173,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[3.90063,15.2334,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingTable_small_F",[-7.297,13.8301,7.269],90,1,false,[0,-0],"","",false,true],["Land_Ammobox_rounds_F",[-3.71875,14.5195,8.83253],300,1,false,[0,0],"","",false,true],["Steel_Plate_F",[-12.3518,9.80151,7.26922],88.9511,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Malden_F",[13.53,3.90002,9.772],180,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[10.1715,11.9697,7.26922],180,1,false,[0,-0],"","",false,true],["Land_GymBench_01_F",[-14.4464,5.96948,7.26922],270,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[11.7198,10.0625,8.08482],165,1,false,[0,-0],"","",false,true],["Land_CampingTable_white_F",[12.1486,10.0051,7.26922],180,1,false,[0,-0],"","",false,true],["Land_Laptop_03_black_F",[9.73157,12.019,8.08482],180,1,false,[0,-0],"","",false,true],["Land_PaperBox_01_small_closed_white_med_F",[-2.01929,15.7487,7.26924],270,1,false,[0,0],"","",false,true],["Book_02_F",[10.0592,12.1169,8.08482],6.21549e-005,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[11.6906,10.8104,7.26948],0,1,false,[0,0],"","",false,true],["Land_PaperBox_01_small_closed_white_med_F",[-2.01904,15.749,7.698],270,1,false,[0,0],"","",false,true],["Land_PalletTrolley_01_yellow_F",[14.6107,6.38708,7.26923],106.346,1,false,[0,-0],"","",false,true],["Land_Camping_Light_F",[0.898438,13.1125,11.8812],0,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-12.925,8.41699,7.269],0.03,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[9.7301,12.7831,7.26922],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_folded_black_F",[0.627075,13.2262,11.8812],164.733,1,false,[0,-0],"","",false,true],["Land_Shoot_House_Wall_Long_Prone_F",[-8.00793,13.3099,7.269],270,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[1.73389,-16.0603,7.26935],146.003,1,false,[0,-0],"","",false,true],["Land_Camping_Light_F",[7.49329,14.1228,8.08482],0,1,false,[0,0],"","",false,true],["Land_Camping_Light_F",[-2.97021,15.8218,7.88558],290,1,false,[-7.92309e-005,-0.121897],"","",false,true],["Land_MysteriousBell_01_F",[-7.03796,14.5302,7.269],270,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[0.944336,13.4652,11.8812],272.562,1,false,[0,0],"","",false,true],["CargoNet_01_barrels_F",[-4.03296,15.7834,7.26922],0,1,false,[0,0],"","",false,true],["Land_Target_Oval_F",[-13.479,9.03369,7.26922],90,1,false,[0,-0],"","",false,true],["Land_Laptop_03_black_F",[10.7946,11.9614,8.08482],165,1,false,[0,-0],"","",false,true],["Land_Notepad_F",[12.8766,9.85938,8.08482],165,1,false,[0,-0],"","",false,true],["MapBoard_seismic_F",[13.967,8.13599,7.269],152.7,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[-14.5531,7.54138,7.26922],288.786,1,false,[0,0],"","",false,true],["Land_Router_01_black_F",[1.91504,16.0659,8.15601],269.872,1,false,[0,0],"","",false,true],["Land_PenRed_F",[12.8463,10.0139,8.08482],90,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[1.25049,16.4008,7.2692],280.708,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[8.29309,14.354,7.26922],0,1,false,[0,0],"","",false,true],["Land_PaperBox_01_small_closed_white_med_F",[-2.01758,16.5634,7.26923],270,1,false,[0,0],"","",false,true],["Box_NATO_Equip_F",[3.68799,16.2662,7.26922],0,1,false,[0,0],"","",false,true],["Land_Document_01_F",[7.86633,14.4854,8.08482],180,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[10.6642,12.7719,7.26922],0,1,false,[0,0],"","",false,true],["Land_Computer_01_black_F",[1.91003,16.324,8.15601],275.573,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[0.958008,13.9368,11.8812],272.562,1,false,[0,0],"","",false,true],["Land_PenBlack_F",[1.66296,16.4318,8.15613],91.6765,1,false,[0,-0],"","",false,true],["Land_File1_F",[8.57922,14.1597,8.08482],90,1,false,[0,-0],"","",false,true],["Land_FlowerPot_01_Flower_F",[-0.808105,13.4264,11.8812],0,1,false,[0,0],"","",false,true],["PortableHelipadLight_01_white_F",[14.7421,8.33496,7.26921],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[13.6486,9.76392,7.26922],120,1,false,[0,-0],"","",false,true],["PortableHelipadLight_01_white_F",[-15.0028,7.90601,7.26922],0,1,false,[0,0],"","",false,true],["Land_Notepad_F",[1.65698,16.5498,8.15613],347.455,1,false,[0,0],"","",false,true],["Land_Tablet_02_black_F",[1.95898,16.636,8.15601],262.291,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[12.8033,10.804,8.08482],255,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[12.7189,11.3794,7.26922],270,1,false,[0,0],"","",false,true],["Land_CampingTable_small_F",[-7.25745,15.4976,7.26901],90,1,false,[0,-0],"","",false,true],["Land_Laptop_03_black_F",[8.95667,14.3181,8.08482],165,1,false,[0,-0],"","",false,true],["Book_02_F",[12.8165,11.2097,8.08482],90.0001,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[7.85657,15.2985,7.26948],0,1,false,[0,0],"","",false,true],["Land_PortableDesk_01_black_F",[1.82104,17.137,7.269],90.309,1,false,[0,-0],"","",false,true],["Box_I_UAV_06_medical_F",[-2.10083,17.2595,7.26922],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[15.0017,8.54626,7.26922],280.92,1,false,[0,0],"","",false,true],["Land_Target_Oval_F",[-13.479,10.6294,7.269],90,1,false,[0,-0],"","",false,true],["Land_Ammobox_rounds_F",[1.75879,-17.3962,7.26935],63.0417,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[13.6281,10.8511,7.26922],90,1,false,[0,0],"","",false,true],["Reflector_Cone_01_narrow_white_F",[-8.15002,15.6589,7.269],269.522,1,false,[0,0],"","",false,true],["Land_Notepad_F",[9.47961,14.4805,8.08482],90,1,false,[0,-0],"","",false,true],["Land_PortableCabinet_01_bookcase_black_F",[1.922,17.057,8.16499],89.048,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[10.2443,14.354,7.26922],0,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[12.8024,11.7502,8.08482],270,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[9.79211,14.3923,8.08482],180,1,false,[0,0],"","",false,true],["Land_Target_Swivel_01_F",[-14.3723,9.82703,7.26922],270,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[8.79065,15.2872,7.26948],0,1,false,[0,0],"","",false,true],["Box_I_UAV_06_medical_F",[-2.0946,17.7006,7.26923],0,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-12.925,11.2354,7.26922],180,1,false,[0,0],"","",false,true],["Land_MysteriousBell_01_F",[-7.03796,16.2529,7.269],270,1,false,[0,0],"","",false,true],["Land_File1_F",[12.899,12.0874,8.08482],105,1,false,[0,-0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-8.92798,14.804,7.269],0,1,false,[0,0],"","",false,true],["Land_IPPhone_01_black_F",[1.73096,17.577,8.15601],95.728,1,false,[0,-0],"","",false,true],["CargoNet_01_box_F",[-4.01196,17.3673,7.26921],0,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[1.75916,-18.0098,7.26935],267.673,1,false,[0,0],"","",false,true],["Land_PencilYellow_F",[12.9171,12.238,8.08482],90,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[1.21436,17.9266,7.2692],268.577,1,false,[0,0],"","",false,true],["Land_PenBlack_F",[10.3805,14.5127,8.08482],150,1,false,[0,-0],"","",false,true],["Land_PlasticBarrier_03_F",[-15.0577,9.94727,7.26921],88.7081,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[13.6393,11.7852,7.26922],90,1,false,[0,0],"","",false,true],["Land_Notepad_F",[10.5123,14.5266,8.08482],90,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[9.77649,15.2899,7.26948],0,1,false,[0,0],"","",false,true],["Land_Shoot_House_Panels_Window_F",[-8.00793,15.7239,7.269],270,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[1.84595,17.9669,8.15601],91.265,1,false,[0,-0],"","",false,true],["PlasticBarrier_01_white_F",[11.756,10.6899,11.951],268.819,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[1.74829,-18.5006,7.26935],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[15.199,10.4937,7.26922],270.449,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_medical_F",[-1.93774,18.467,7.26923],270,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[10.7106,15.2787,7.26948],0,1,false,[0,0],"","",false,true],["I_E_HMG_02_F",[-10.8167,10.8949,11.9447],270,1,false,[0,0],"","",false,true],["Land_File1_F",[11.5206,14.5295,8.08482],15,1,false,[0,0],"","",false,true],["Land_CampingTable_small_F",[0.0899658,16.106,11.881],0,1,false,[0,0],"","",false,true],["Land_WaterBottle_01_pack_F",[1.84656,18.6261,7.59529],91.677,1,false,[0,-0],"","",false,true],["Land_CampingTable_white_F",[8.34778,16.783,7.26922],0,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[7.86584,16.7651,8.08482],180,1,false,[0,-0],"","",false,true],["TargetP_Inf8_F",[-14.2664,11.91,7.26922],256.185,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[11.8488,14.3257,8.08482],180,1,false,[0,-0],"","",false,true],["Land_CampingTable_white_F",[12.1989,14.3521,7.26922],0,1,false,[0,0],"","",false,true],["Land_File1_F",[1.87402,18.7567,7.89192],113.598,1,false,[0,-0],"","",false,true],["Land_Notepad_F",[8.16516,16.9514,8.08482],75,1,false,[0,0],"","",false,true],["Land_Computer_01_black_F",[-0.0880127,16.0586,12.694],320.948,1,false,[0,0],"","",false,true],["Land_IPPhone_01_black_F",[0.319946,16.0809,12.694],0,1,false,[0,0],"","",false,true],["Land_ShelvesWooden_khaki_F",[1.92261,18.8981,7.2692],2.27021,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[8.65784,16.6997,8.08482],195,1,false,[0,0],"","",false,true],["Land_File2_F",[1.88379,18.772,8.24158],285.721,1,false,[0,0],"","",false,true],["Land_File2_F",[1.88843,18.7765,8.23451],276.963,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[-15.0938,11.9175,7.26921],88.7081,1,false,[0,0],"","",false,true],["Land_PenRed_F",[8.72375,16.9829,8.08482],210,1,false,[0,0],"","",false,true],["Land_FilePhotos_F",[1.92383,19.0858,7.89473],249.428,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[11.797,15.233,7.26948],0,1,false,[0,0],"","",false,true],["Land_Notepad_F",[8.89221,16.9858,8.08482],90,1,false,[0,-0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-8.92798,16.543,7.269],180,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[7.96545,17.6339,7.26948],0,1,false,[0,0],"","",false,true],["Land_Photos_V6_F",[1.86133,19.0729,8.24084],59.0388,1,false,[0,0],"","",false,true],["Target_PopUp_Moving_90deg_Acc2_F",[-14.1219,12.97,7.26922],270,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[12.8546,14.259,8.08482],165,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[-6.26807,18.5596,7.26909],181.648,1,false,[0,0],"","",false,true],["Land_PencilYellow_F",[9.9054,16.7751,8.08482],15,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[15.2013,12.4703,7.26922],270.449,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[10.299,16.783,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[8.89954,17.6227,7.26948],0,1,false,[0,0],"","",false,true],["MemorialWreath_01_F",[0.0900879,16.4678,12.6621],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[12.7311,15.238,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-7.25,18.5195,7.26909],167.14,1,false,[0,-0],"","",false,true],["Land_CampingTable_F",[-6.75537,18.9253,7.26909],178.967,1,false,[0,-0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-12.925,14.804,7.269],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[3.80847,17.3052,11.8812],332.817,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[1.66125,20.0983,7.2692],44.3276,1,false,[0,0],"","",false,true],["TargetP_Inf8_F",[-14.2457,14.0878,7.26922],291.407,1,false,[0,0],"","",false,true],["Land_File1_F",[10.8048,16.9297,8.08482],1.27498e-005,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[9.88538,17.6254,7.26948],0,1,false,[0,0],"","",false,true],["Land_Pallets_stack_F",[-3.88892,17.4481,11.8812],0,1,false,[0,0],"","",false,true],["B_Boat_Armed_01_minigun_F",[-21.483,0,0.0679932],180,1,false,[0,0],"","",false,true],["Land_FilePhotos_F",[-6.98584,18.9854,8.08469],54.8684,1,false,[0,0],"","",false,true],["Land_FlatTV_01_F",[-6.00208,19.3456,8.08469],90,1,false,[0,-0],"","",false,true],["Land_PlasticBarrier_03_F",[-15.1515,13.8932,7.26921],88.7081,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-9.11816,18.4023,7.26909],165.942,1,false,[0,-0],"","",false,true],["Land_PencilYellow_F",[11.4166,16.9912,8.08482],15,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[10.8195,17.6141,7.26948],0,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[11.9757,16.7007,8.08482],165,1,false,[0,-0],"","",false,true],["Land_CampingTable_white_F",[12.2535,16.781,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingTable_F",[-8.70361,18.8882,7.26909],178.967,1,false,[0,-0],"","",false,true],["Land_CampingTable_F",[-6.77148,19.7295,7.26909],358.967,1,false,[0,0],"","",false,true],["Book_02_F",[11.8551,16.9761,8.08482],6.21549e-005,1,false,[0,0],"","",false,true],["Land_File1_F",[7.67102,19.2405,8.08482],15,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[8.34143,19.1606,7.26922],0,1,false,[0,0],"","",false,true],["Box_NATO_AmmoVeh_F",[5.88257,19.9181,7.26922],0,1,false,[0,0],"","",false,true],["Land_Map_altis_F",[-7.65674,19.3213,8.08509],268.277,1,false,[0,0],"","",false,true],["Land_PenRed_F",[7.8468,19.2485,8.08482],30,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[15.2111,14.4398,7.26922],270.449,1,false,[0,0],"","",false,true],["Land_Document_01_F",[-6.95398,19.6539,8.08499],220.646,1,false,[0,0],"","",false,true],["Land_Notepad_F",[7.98938,19.2974,8.08482],90,1,false,[0,-0],"","",false,true],["Land_PenBlack_F",[-8.73535,18.9814,8.08469],165.87,1,false,[0,-0],"","",false,true],["Land_Notepad_F",[-8.84766,18.9619,8.08469],266.894,1,false,[0,0],"","",false,true],["Land_CampingTable_small_F",[-14.1456,15.6592,7.26921],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-6.31934,20.1157,7.26909],0.102865,1,false,[0,0],"","",false,true],["Book_01_F",[8.51135,19.1646,8.08482],2.73208e-005,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[11.9059,17.5685,7.26948],0,1,false,[0,0],"","",false,true],["Land_Target_Dueling_01_F",[-14.105,15.4236,8.082],90,1,false,[0,-0],"","",false,true],["Land_PortableLight_02_quad_black_F",[-5.32471,20.3882,7.26922],51.6327,1,false,[0,0],"","",false,true],["Land_Laptop_03_olive_F",[-9.32178,18.978,8.08469],350.673,1,false,[0,0],"","",false,true],["Land_Notepad_F",[12.8024,16.9026,8.08482],75,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[8.79797,19.2449,8.08482],180,1,false,[0,-0],"","",false,true],["Land_Notepad_F",[1.74841,-19.8158,11.1779],328.362,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-12.925,16.543,7.269],180,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[7.86292,19.9894,7.26948],0,1,false,[0,0],"","",false,true],["Land_PenRed_F",[12.9269,17.0198,8.08482],345,1,false,[0,0],"","",false,true],["Land_CampingTable_F",[-8.71973,19.6924,7.26909],358.967,1,false,[0,0],"","",false,true],["Land_File_research_F",[-8.31494,19.72,8.08499],149.017,1,false,[0,-0],"","",false,true],["Land_PenBlack_F",[1.80505,-19.9242,11.1785],240.964,1,false,[0,0],"","",false,true],["Land_Target_Dueling_01_F",[-14.105,15.9056,8.082],270,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[9.65442,19.1196,8.08482],195,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[0.928955,-20.2051,10.374],268.53,1,false,[0,0],"","",false,true],["Box_NATO_WpsLaunch_F",[-0.258911,21.7765,7.26922],83.4943,1,false,[0,0],"","",false,true],["Land_Laptop_03_olive_F",[-8.94336,19.5469,8.08469],166.742,1,false,[0,-0],"","",false,true],["Land_CampingTable_white_F",[10.2926,19.1606,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[12.84,17.5735,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-8.21777,20.1709,7.26909],0.748378,1,false,[0,0],"","",false,true],["Land_Pallet_MilBoxes_F",[0.641724,21.7983,7.26922],358.609,1,false,[0,0],"","",false,true],["Land_PenBlack_F",[9.66516,19.4153,8.08482],150,1,false,[0,-0],"","",false,true],["Land_Map_blank_F",[1.86853,-20.222,11.1726],184.696,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[8.797,19.9781,7.26948],0,1,false,[0,0],"","",false,true],["Land_Notepad_F",[9.81946,19.3779,8.08482],75,1,false,[0,0],"","",false,true],["Land_File1_F",[10.5446,19.0051,8.08482],1.27498e-005,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[3.62402,-20.17,10.374],86.431,1,false,[0,0],"","",false,true],["Land_IPPhone_01_olive_F",[-9.45801,19.5815,8.08469],179.388,1,false,[0,-0],"","",false,true],["Land_PlasticBarrier_03_F",[-15.2006,15.8619,7.26922],88.7081,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[6.98755,20.6343,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-13.3944,17.39,7.26922],109.133,1,false,[0,-0],"","",false,true],["Land_Laptop_03_olive_F",[2.73962,-20.1757,11.1742],260,1,false,[0,0],"","",false,true],["Land_CampingTable_F",[1.81189,-20.6771,10.361],269.219,1,false,[0,0],"","",false,true],["Land_CampingTable_F",[2.60876,-20.6644,10.361],89.2598,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[10.9469,19.0974,8.08482],165,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[9.78284,19.9808,7.26948],0,1,false,[0,0],"","",false,true],["Land_FlowerPot_01_Flower_F",[6.09778,-19.8557,10.361],233.843,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-9.28662,20.2944,7.26909],326.393,1,false,[0,0],"","",false,true],["Land_Camping_Light_F",[2.19958,-20.6757,11.1766],330,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[15.2134,16.4165,7.26922],270.449,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[0.849976,-21.093,10.374],288.499,1,false,[0,0],"","",false,true],["Land_File1_F",[1.66895,-20.91,11.177],105.513,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[10.7169,19.9696,7.26948],0,1,false,[0,0],"","",false,true],["Land_BottlePlastic_V2_F",[-14.4966,17.2634,8.08521],0,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[12.2472,19.1587,7.26922],0,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[11.7599,19.2349,8.08482],180,1,false,[0,-0],"","",false,true],["Land_Stretcher_01_folded_olive_F",[0.932373,22.8542,7.26922],91.6941,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[3.67395,-21.134,10.374],72.561,1,false,[0,0],"","",false,true],["Land_WaterBottle_01_full_F",[1.78064,-21.2269,11.1709],160,1,false,[0,-0],"","",false,true],["Land_BottlePlastic_V2_F",[-14.6515,17.3203,8.08521],0,1,false,[0,0],"","",false,true],["Land_BottlePlastic_V2_F",[-14.5526,17.5134,8.08521],0,1,false,[0,0],"","",false,true],["Land_CampingTable_F",[-14.4625,17.9285,7.26921],269.16,1,false,[0,0],"","",false,true],["Land_IPPhone_01_olive_F",[2.57849,-21.3929,11.1766],257.073,1,false,[0,0],"","",false,true],["Land_PenBlack_F",[12.463,19.2112,8.08482],15,1,false,[0,0],"","",false,true],["Land_Stretcher_01_folded_olive_F",[0.942017,23.1583,7.26922],94.5761,1,false,[0,-0],"","",false,true],["Land_Notepad_F",[12.5851,19.1843,8.08482],90,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[11.8033,19.924,7.26948],0,1,false,[0,0],"","",false,true],["Land_GymRack_01_F",[-12.089,19.8376,7.26922],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[-15.2595,17.8384,7.26922],88.7081,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[12.7374,19.929,7.26922],0,1,false,[0,0],"","",false,true],["Land_PortableDesk_01_black_F",[1.11902,23.782,7.269],89.908,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[15.2378,18.3871,7.26922],270.449,1,false,[0,0],"","",false,true],["Land_TentLamp_01_standing_F",[1.09961,23.7516,8.17422],44.7928,1,false,[0,0],"","",false,true],["Land_PortableLight_02_double_black_F",[-1.51648,-22.6902,10.361],262.021,1,false,[0,0],"","",false,true],["Land_FlowerPot_01_Flower_F",[-14.5339,19.3185,7.26922],135,1,false,[0,-0],"","",false,true],["Land_Ammobox_rounds_F",[1.10718,24.4498,7.26922],9.8403,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[-1.24902,-23.394,10.361],0,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[-1.71057,-23.401,10.361],0,1,false,[0,0],"","",false,true],["Land_GymRack_03_F",[-14.1282,20.0273,7.26922],315.081,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[1.15784,24.7079,7.26922],205.292,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[14.5627,20.0946,7.26922],226.718,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[-15.1219,19.79,7.26922],99.1785,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[0.141113,25.0187,7.28363],26.6572,1,false,[0,0],"","",false,true],["Box_B_UAV_06_medical_F",[0.96814,25.2845,7.26922],89.8553,1,false,[0,0],"","",false,true],["Box_B_UAV_06_medical_F",[1.42102,25.3088,7.26922],70.8094,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[1.97363,-24.2671,10.3556],133.163,1,false,[0,-0],"","",false,true],["PortableHelipadLight_01_white_F",[15.2737,20.5663,7.26922],0,1,false,[0,0],"","",false,true],["PortableHelipadLight_01_white_F",[-15.2883,20.7053,7.26922],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[-0.0356445,-24.4457,10.3556],0,1,false,[0,0],"","",false,true],["Land_FlowerPot_01_Flower_F",[-0.984863,-24.683,10.3555],233.843,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_F",[-7.79993,23.7102,10.0827],180,1,false,[0,0],"","",false,true],["Box_NATO_Equip_F",[-9.01465,24.5829,8.8007],322.25,1,false,[0,0],"","",false,true],["Land_PaperBox_01_open_boxes_F",[-2.52686,26.6541,8.8029],0,1,false,[0,0],"","",false,true],["Land_WoodenCrate_01_stack_x5_F",[-0.816895,26.7048,8.8029],0,1,false,[0,0],"","",false,true],["Land_PaperBox_01_open_empty_F",[-4.08643,26.6892,8.8029],0,1,false,[0,0],"","",false,true],["Land_PortableServer_01_black_F",[1.047,-26.7001,10.355],90.037,1,false,[0,-0],"","",false,true],["Land_CratesWooden_F",[0.83252,27.1101,8.80291],274.567,1,false,[0,0],"","",false,true],["Land_PortableServer_01_cover_black_F",[1.04004,-26.677,10.702],225.041,1,false,[0,0],"","",false,true],["Land_PaperBox_01_open_water_F",[-5.62939,26.6951,8.80067],0,1,false,[0,0],"","",false,true],["Land_PaperBox_01_small_closed_white_med_F",[3.87915,-23.205,16.7978],0,1,false,[0,0],"","",false,true],["Land_PaperBox_01_small_closed_brown_IDAP_F",[3.87622,-23.6914,16.7978],356.643,1,false,[0,0],"","",false,true],["Land_Computer_01_black_F",[1.099,-27.197,11.242],75.037,1,false,[0,0],"","",false,true],["Land_PaperBox_01_small_closed_white_med_F",[3.96655,-23.4514,17.2143],79.2011,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[2.26025,-23.9794,16.7978],320.976,1,false,[0,0],"","",false,true],["Land_Pallets_F",[-0.455566,28.2625,8.8029],0,1,false,[0,0],"","",false,true],["Land_PalletTrolley_01_yellow_F",[-1.61475,28.2126,8.8029],106.346,1,false,[0,-0],"","",false,true],["Land_Laptop_03_black_F",[0.896973,-27.573,11.242],105.037,1,false,[0,-0],"","",false,true],["Land_PortableServer_01_cover_black_F",[-9.3479,23.9709,15.2337],88.318,1,false,[0,0],"","",false,true],["Land_PortableServer_01_cover_black_F",[-9.87,23.99,15.234],317.212,1,false,[0,0],"","",false,true],["Land_PortableDesk_01_black_F",[0.984985,-28.2261,10.355],270.038,1,false,[0,0],"","",false,true],["Land_PaperBox_open_full_F",[-2.88623,28.6082,8.8029],308.743,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[9.25916,24.2692,15.2337],270,1,false,[0,0],"","",false,true],["CargoNet_01_box_F",[-6.37903,25.0812,15.2338],291.621,1,false,[0,0],"","",false,true],["Land_CampingTable_F",[-10.1051,23.9806,15.2324],0,1,false,[0,0],"","",false,true],["Land_PalletTrolley_01_yellow_F",[-3.0022,28.7772,8.80068],36.9172,1,false,[0,0],"","",false,true],["Land_PortableServer_01_cover_black_F",[-10.502,24.147,15.337],14.414,1,false,[0,0],"","",false,true],["Land_PortableServer_01_black_F",[-9.67297,24.0189,16.048],179.861,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[1.16174,29.135,8.80068],144.156,1,false,[0,-0],"","",false,true],["Land_PortableServer_01_black_F",[-9.67297,24.02,16.395],179.861,1,false,[0,-0],"","",false,true],["Land_PortableCabinet_01_lid_black_F",[-11.615,24.028,15.232],0,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_lid_black_F",[-11.6182,24.0461,15.299],0,1,false,[0,0],"","",false,true],["Land_PortableServer_01_black_F",[-10.5179,24.022,16.087],179.861,1,false,[0,-0],"","",false,true],["Land_PortableServer_01_black_F",[-10.517,24.0229,16.434],179.861,1,false,[0,-0],"","",false,true],["Land_CampingTable_F",[-12.089,23.9786,15.2324],0,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_lid_black_F",[-12.5529,24.0229,15.232],0,1,false,[0,0],"","",false,true],["Land_MultiScreenComputer_01_black_F",[0.958984,-28.998,11.242],90.037,1,false,[0,-0],"","",false,true],["Land_PortableCabinet_01_7drawers_black_F",[-11.478,23.913,16.048],179.387,1,false,[0,-0],"","",false,true],["Land_PortableLight_02_single_black_F",[5.04797,-28.9669,10.3575],185.211,1,false,[0,0],"","",false,true],["Land_Tablet_02_black_F",[-11.995,24.1479,16.048],215.572,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[6.30347,-28.9235,10.3575],307.59,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_4drawers_black_F",[-12.025,23.913,16.048],180,1,false,[0,0],"","",false,true],["Land_Cargo10_grey_F",[11.2432,24.3359,15.2336],0,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_bookcase_black_F",[-12.6021,23.854,16.048],180.5,1,false,[0,0],"","",false,true],["CargoNet_01_box_F",[-5.67249,27.0339,15.2338],291.621,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[9.25916,26.2692,15.2337],270,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[0.714966,-30.1407,10.3547],115.893,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[-12.8193,25.3564,15.2315],230.578,1,false,[0,0],"","",false,true],["Land_Shoot_House_Corner_Crouch_F",[3.10559,-26.646,16.7978],90,1,false,[0,-0],"","",false,true],["B_Quadbike_01_F",[3.51294,30.958,8.80099],180,1,false,[0,0],"","",false,true],["Land_FlowerPot_01_Flower_F",[4.8197,-27.4558,16.7978],50.2255,1,false,[0,0],"","",false,true],["B_Quadbike_01_F",[5.88696,30.958,8.8],0,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Crouch_F",[5.20947,-27.1006,16.7978],0,1,false,[0,0],"","",false,true],["CargoNet_01_box_F",[-5.02771,28.8352,15.2338],291.621,1,false,[0,0],"","",false,true],["Land_PaperBox_01_small_closed_white_med_F",[5.0481,-28.2526,16.7978],268.866,1,false,[0,0],"","",false,true],["Land_Printer_01_F",[1.66821,-28.7256,16.7978],270,1,false,[0,0],"","",false,true],["Land_Rug_01_Traditional_F",[3.29578,-28.7118,16.7978],90,1,false,[0,-0],"","",false,true],["Land_PortableLight_02_single_folded_yellow_F",[5.05762,-27.8977,17.6138],87.2402,1,false,[0,0],"","",false,true],["Book_01_F",[4.74121,-28.0355,17.6138],65.1991,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[9.25916,28.2482,15.2337],270,1,false,[0,0],"","",false,true],["Land_EngineCrane_01_F",[-5.71802,31.6079,8.801],270,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-12.8612,26.7759,15.2316],285.943,1,false,[0,0],"","",false,true],["Land_Cargo10_orange_F",[11.2289,27.0565,15.2337],0,1,false,[0,0],"","",false,true],["B_Quadbike_01_F",[8.26013,30.9578,8.80036],0,1,false,[0,0],"","",false,true],["Land_PlasticBucket_01_closed_F",[5.09766,-28.2175,17.6097],66.3811,1,false,[0,0],"","",false,true],["Land_FirstAidKit_01_closed_F",[4.93164,-28.8705,16.7978],179.935,1,false,[0,-0],"","",false,true],["Land_CampingTable_white_F",[4.90637,-28.76,16.7978],269.791,1,false,[0,0],"","",false,true],["Land_FirstAidKit_01_closed_F",[4.78345,-29.0864,16.7978],7.62781,1,false,[0,0],"","",false,true],["AluminiumFoil_01_F",[4.9447,-28.5361,17.6098],1.10988,1,false,[0,0],"","",false,true],["AluminiumFoil_01_F",[4.99036,-28.6599,17.6095],1.10988,1,false,[0,0],"","",false,true],["Land_OfficeChair_01_F",[2.74854,-29.3296,16.7978],328.654,1,false,[0,0],"","",false,true],["Land_OfficeCabinet_01_F",[1.64685,-29.417,16.7978],269.384,1,false,[0,0],"","",false,true],["Land_MRL_Magazine_01_F",[-8.8335,31.8456,8.80068],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[5.50195,-30.62,13.617],180,1,false,[0,0],"","",false,true],["Land_PaperBox_01_small_closed_white_med_F",[4.90576,-29.4451,16.7978],179.935,1,false,[0,-0],"","",false,true],["Land_PortableDesk_01_black_F",[-12.0649,28.1219,15.23],0,1,false,[0,0],"","",false,true],["Land_DeskChair_01_black_F",[-12.816,27.958,15.23],0,1,false,[0,0],"","",false,true],["Land_PortableLongRangeRadio_F",[-12.0659,27.9509,16.1258],7.30471,1,false,[0,0],"","",false,true],["Land_PenBlack_F",[-12.1829,27.9319,16.1258],42.863,1,false,[0,0],"","",false,true],["Land_MRL_Magazine_01_F",[-8.83398,31.854,9.53],180,1,false,[0,0],"","",false,true],["Leaflet_05_New_F",[-12.252,27.9597,16.1258],7.522,1,false,[0,0],"","",false,true],["Land_SolarPanel_04_black_F",[-11.5664,28.3719,15.23],270,1,false,[0,0],"","",false,true],["Land_PortableSolarPanel_01_folded_olive_F",[-11.874,28.1218,16.1258],90,1,false,[0,-0],"","",false,true],["Land_FoodContainer_01_White_F",[5.07263,-29.1532,17.6138],179.935,1,false,[0,-0],"","",false,true],["Land_Router_01_black_F",[1.65198,-29.6462,17.6178],272.223,1,false,[0,0],"","",false,true],["Land_PCSet_01_mousepad_F",[-12.593,27.9038,16.1168],0,1,false,[0,0],"","",false,true],["Land_PCSet_01_mouse_F",[-12.5918,27.8967,16.1238],0,1,false,[0,0],"","",false,true],["Land_TentLamp_01_standing_F",[4.70337,-29.3777,17.6134],190.013,1,false,[0,0],"","",false,true],["Fridge_01_closed_F",[3.9425,-29.9125,16.7978],180,1,false,[0,0],"","",false,true],["Land_Laptop_unfolded_F",[-12.973,27.949,16.117],180,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_closed_black_F",[-12.2527,28.2839,16.126],180,1,false,[0,0],"","",false,true],["Land_FoodContainer_01_White_F",[5.07214,-29.5333,17.6138],179.935,1,false,[0,-0],"","",false,true],["Land_Router_01_black_F",[-12.5708,28.2639,16.116],180,1,false,[0,0],"","",false,true],["OfficeTable_01_new_F",[2.77368,-30.2982,16.7978],180.052,1,false,[0,0],"","",false,true],["Land_OfficeCabinet_01_F",[1.65112,-30.2286,16.7978],269.384,1,false,[0,0],"","",false,true],["Land_PenRed_F",[3.23511,-30.0857,17.6238],19.5373,1,false,[0,0],"","",false,true],["Land_Notepad_F",[3.31201,-30.1304,17.6248],105.924,1,false,[0,-0],"","",false,true],["Land_IPPhone_01_black_F",[2.39185,-30.2144,17.6238],192.669,1,false,[0,0],"","",false,true],["Land_PCSet_01_screen_F",[2.91724,-30.202,17.6426],177.84,1,false,[0,-0],"","",false,true],["OmniDirectionalAntenna_01_black_F",[-4.44641,30.4644,15.2333],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[9.25928,30.2607,15.2335],270,1,false,[0,0],"","",false,true],["Land_File1_F",[2.57898,-30.493,17.625],180.052,1,false,[0,0],"","",false,true],["SatelliteAntenna_01_Small_Black_F",[-12.5873,29.01,15.231],32.5851,1,false,[0,0],"","",false,true],["Land_Tablet_01_F",[3.30017,-30.5063,17.6274],223.371,1,false,[0,0],"","",false,true],["Land_Cargo10_military_green_F",[11.2144,29.6884,15.2337],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[3.76233,-29.8127,19.249],140.245,1,false,[0,-0],"","",false,true],["Land_PlasticBarrier_03_F",[3.11572,34.783,8.80099],180,1,false,[0,0],"","",false,true],["Land_WoodenTable_large_F",[-4.00867,32.327,15.2285],359.519,1,false,[0,0],"","",false,true],["WaterSpill_01_Small_Old_F",[-4.42761,32.5214,15.2285],359.519,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[5.09436,34.7833,8.80068],180,1,false,[0,0],"","",false,true],["Land_LiquidDispenser_01_F",[-4.35535,32.1356,16.0931],265.888,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[10.2994,31.2842,15.2337],0.237,1,false,[0,0],"","",false,true],["Land_Pallet_MilBoxes_F",[5.09692,-30.406,19.2488],4.61224,1,false,[-0.617705,-0.0279975],"","",false,true],["CargoNet_01_box_F",[7.25305,34.8209,8.80099],0,1,false,[0,0],"","",false,true],["Land_LiquidDispenser_01_F",[-4.36658,32.7264,16.0931],266.585,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[-9.45544,33.6196,11.1395],285.71,1,false,[0,0],"","",false,true],["Land_WoodenTable_02_large_F",[-11.924,31.2648,15.2295],0.205497,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[1.74451,-31.2196,19.2572],296.873,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-8.0282,34.2505,11.1395],290.358,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[12.2736,31.2842,15.2437],0.237,1,false,[0,0],"","",false,true],["CargoNet_01_box_F",[8.9187,34.8207,8.80068],0,1,false,[0,0],"","",false,true],["Land_FlowerPot_01_Flower_F",[1.72144,-31.5325,19.264],0,1,false,[-0.444114,0],"","",false,true],["B_CargoNet_01_ammo_F",[-8.87195,35.13,8.80099],0,1,false,[0,0],"","",false,true],["B_Slingload_01_Repair_F",[-5.71521,35.6956,8.80068],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-4.17078,34.2783,15.2217],70.147,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[7.32263,33.8357,15.2306],270,1,false,[0,0],"","",false,true],["Land_Camping_Light_F",[-11.8136,32.5773,16.1966],213.237,1,false,[-0.102001,-0.0668403],"","",false,true],["Land_WoodenTable_02_large_F",[-11.9376,33.798,15.2295],180.168,1,false,[0,0],"","",false,true],["CargoNet_01_barrels_F",[4.6261,36.144,15.2236],0,1,false,[-0.190774,-0.267612],"","",false,true],["B_MRAP_01_F",[3.30969,38.0033,8.80068],270,1,false,[0,0],"","",false,true],["Land_CampingTable_F",[1.29431,-34.5638,19.1906],178.971,1,false,[0,-0],"","",false,true],["Land_CampingTable_F",[-0.914673,-34.5787,19.1906],178.971,1,false,[0,-0],"","",false,true],["Land_PortableServer_01_black_F",[2.98999,-34.6302,19.1906],359.521,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[7.32263,35.8357,15.2306],270,1,false,[0,0],"","",false,true],["Land_WaterTank_F",[-4.23132,36.2683,15.215],268.543,1,false,[0,0],"","",false,true],["Land_PortableServer_01_black_F",[3.61096,-34.6398,19.1906],359.924,1,false,[0,0],"","",false,true],["Land_Laptop_03_olive_F",[1.06079,-34.3975,20.0062],0.230065,1,false,[0,0],"","",false,true],["Land_Laptop_03_olive_F",[0.604492,-34.4124,20.0062],348.96,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Malden_F",[0.110962,-33.9811,20.357],0,1,false,[0,0],"","",false,true],["Land_IPPhone_01_olive_F",[-0.209595,-34.5082,20.0062],2.1296,1,false,[0,0],"","",false,true],["Land_Laptop_03_olive_F",[-1.34009,-34.4143,20.0062],358.053,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Stratis_F",[-1.41565,-33.9811,20.357],0,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Tanoa_F",[1.63672,-33.9811,20.357],0,1,false,[0,0],"","",false,true],["Land_IPPhone_01_olive_F",[1.99988,-34.4924,20.0062],2.1296,1,false,[0,0],"","",false,true],["Land_IPPhone_01_olive_F",[-0.690796,-34.5548,20.0062],352.566,1,false,[0,0],"","",false,true],["B_CargoNet_01_ammo_F",[-8.87158,37.7385,8.80068],0,1,false,[0,0],"","",false,true],["Land_PortableServer_01_black_F",[2.98218,-34.6479,19.5377],358.89,1,false,[0,0],"","",false,true],["Land_PenBlack_F",[1.60461,-34.576,20.0062],168.627,1,false,[0,-0],"","",false,true],["Land_Notepad_F",[1.49158,-34.5914,20.0062],269.651,1,false,[0,0],"","",false,true],["Land_PortableServer_01_black_F",[3.59106,-34.6361,19.5377],359.068,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Altis_F",[3.16357,-33.9811,20.3565],0,1,false,[0,0],"","",false,true],["B_CargoNet_01_ammo_F",[6.27942,36.127,15.2314],0,1,false,[-0.190774,-0.267612],"","",false,true],["Land_OfficeCabinet_01_F",[-5.51379,-34.2899,19.1906],0,1,false,[0,0],"","",false,true],["Land_Notepad_F",[-0.507202,-34.7212,20.0062],269.651,1,false,[0,0],"","",false,true],["Land_PenBlack_F",[-0.402222,-34.7375,20.0062],168.627,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[-1.40442,-34.9476,19.1906],179.824,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[1.80127,-34.9395,19.1906],179.327,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[0.912476,-34.9824,19.1906],166.173,1,false,[0,-0],"","",false,true],["Item_Binocular",[-1.50476,-34.7173,20.0062],123.416,1,false,[0,-0],"","",false,true],["Land_PortableServer_01_black_F",[3.27991,-34.786,19.8849],304.207,1,false,[0,0],"","",false,true],["Land_FlatTV_01_F",[-11.9669,34.7843,16.2013],346.385,1,false,[-0.121935,3.01656e-006],"","",false,true],["Land_Tablet_02_black_F",[3.05432,-34.7666,20.232],243.945,1,false,[0,0],"","",false,true],["PowerCable_01_Roll_F",[3.07251,-35.4067,19.1906],206.792,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-5.92395,-35.014,19.1906],301.588,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[3.38208,-34.9518,20.2325],13.3178,1,false,[0,0],"","",false,true],["CargoNet_01_box_F",[-8.95483,37.8352,11.1395],0,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_closed_black_F",[-11.1647,-34.2626,18.82],0,1,false,[0,0],"","",false,true],["Land_TransferSwitch_01_F",[6.43689,-34.8037,20.1598],88.989,1,false,[0,0],"","",false,true],["Box_NATO_Equip_F",[-0.490601,-39.437,10.3536],270,1,false,[0,0],"","",false,true],["Box_NATO_WpsLaunch_F",[0.993652,-39.5505,10.3536],0,1,false,[0,0],"","",false,true],["Land_CampingTable_small_F",[-11.2708,-34.3948,18.82],0,1,false,[0,0],"","",false,true],["Box_NATO_WpsLaunch_F",[0.999634,-39.5508,10.6696],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[10.6578,-34.6571,18.82],237.776,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[-11.053,-34.3743,19.633],17.0897,1,false,[0,0],"","",false,true],["Land_Computer_01_black_F",[-11.5519,-34.337,19.633],331.29,1,false,[0,0],"","",false,true],["CargoNet_01_barrels_F",[4.60486,37.8175,15.2179],0,1,false,[-0.190774,-0.267612],"","",false,true],["CargoNet_01_barrels_F",[6.34302,37.7665,15.2262],0,1,false,[-0.190774,-0.267612],"","",false,true],["Item_Binocular",[-11.3969,-34.5941,19.633],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[7.32263,37.8147,15.2306],270,1,false,[0,0],"","",false,true],["CargoNet_01_barrels_F",[4.60461,37.8176,16.277],0,1,false,[-0.191,-0.268001],"","",false,true],["Land_PortableLight_02_quad_black_F",[-4.80688,38.0806,15.2126],45.2649,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-7.17786,-39.5472,10.3536],269.133,1,false,[0,0],"","",false,true],["Land_PortableLight_02_double_black_F",[7.52661,-39.5901,10.3536],102.744,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[-10.9282,-35.5411,18.82],83.946,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-0.180786,-36.9886,19.1906],338.35,1,false,[0,0],"","",false,true],["B_AAA_System_01_F",[-0.00134277,35.9135,19.2167],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[4.35205,38.8113,15.213],0.237,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[-4.48499,38.8097,15.2118],180,1,false,[0,0],"","",false,true],["Land_PortableWeatherStation_01_olive_F",[-11.9586,36.8099,15.2295],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[6.32617,38.8113,15.223],0.237,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[-6.45007,38.8099,15.216],180,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[8.82739,40.3612,8.80068],52.7112,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_closed_black_F",[7.33496,-37.488,18.511],88.728,1,false,[0,0],"","",false,true],["Box_NATO_Ammo_F",[3.55896,41.3879,8.80068],90,1,false,[0,-0],"","",false,true],["Box_NATO_Ammo_F",[4.44104,41.3879,8.80099],90,1,false,[0,-0],"","",false,true],["Land_DeskChair_01_black_F",[-5.87024,-37.4951,19.1907],188.719,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[5.12732,41.0063,8.80068],0,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_closed_black_F",[7.33496,-37.488,18.82],88.728,1,false,[0,0],"","",false,true],["Box_NATO_Ammo_F",[5.29822,41.3879,8.80099],90,1,false,[0,-0],"","",false,true],["Box_NATO_WpsLaunch_F",[-7.28577,-37.7667,18.8197],270,1,false,[0,0],"","",false,true],["Land_CampingTable_small_white_F",[0,-38.16,19.191],0,1,false,[0,0],"","",false,true],["Box_NATO_Support_F",[7.09705,41.3879,8.801],90,1,false,[0,-0],"","",false,true],["Land_Laptop_device_F",[0,-38.0565,19.9995],0,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_F",[2.48547,41.6995,8.80067],45,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_closed_black_F",[7.422,-38.0851,18.7726],89.9989,1,false,[88.728,-90],"","",false,true],["Land_Ammobox_rounds_F",[8.4574,41.323,8.80068],304.549,1,false,[0,0],"","",false,true],["Land_TripodScreen_01_dual_v2_black_F",[3.07324,-38.0823,19.1906],298.15,1,false,[0,0],"","",false,true],["Box_NATO_Equip_F",[6.12549,-37.9701,19.1906],0,1,false,[0,0],"","",false,true],["Land_TripodScreen_01_dual_v2_black_F",[-2.87659,-38.1223,19.1906],73.8147,1,false,[0,0],"","",false,true],["CBRNCase_01_F",[-5.79858,-38.1311,19.1907],270.101,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[7.9353,41.4132,8.80068],148.595,1,false,[0,-0],"","",false,true],["Land_DeskChair_01_black_F",[-4.85632,-38.385,19.1907],223.694,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[9.11792,41.006,8.80099],0,1,false,[0,0],"","",false,true],["Land_PlasticCase_01_small_black_CBRN_F",[-5.60645,-38.3657,19.1907],208.12,1,false,[0,0],"","",false,true],["Land_TentLamp_01_standing_F",[0.270386,-38.3667,20.004],275.865,1,false,[0,0],"","",false,true],["Land_TentLamp_01_standing_F",[-0.265259,-38.3824,20.004],108.64,1,false,[0,-0],"","",false,true],["Land_PortableCabinet_01_closed_black_F",[7.422,-38.425,18.7726],89.9989,1,false,[88.728,-90],"","",false,true],["Land_TorqueWrench_01_F",[-5.49768,-38.4078,19.4935],202.691,1,false,[17.2799,-36.7833],"","",false,true],["Item_Binocular",[6.07141,-38.0605,19.9282],316.066,1,false,[0,0],"","",false,true],["Land_Notepad_F",[-5.32666,-38.1921,20.0777],159.621,1,false,[0,-0],"","",false,true],["Land_MobilePhone_smart_F",[-5.98352,-38.1183,20.0777],22.4811,1,false,[0,0],"","",false,true],["Box_C_UAV_06_F",[-6.34094,-38.2834,19.557],270.101,1,false,[0,0],"","",false,true],["Land_PlasticCase_01_medium_black_CBRN_F",[-6.18884,-38.4546,19.1907],180.776,1,false,[0,0],"","",false,true],["Land_PencilYellow_F",[-5.26428,-38.2986,20.0777],90.6398,1,false,[0,-0],"","",false,true],["Land_PortableCabinet_01_closed_black_F",[7.43701,-38.426,19.034],78.728,1,false,[0,0],"","",false,true],["Land_IPPhone_01_black_F",[-6.24683,-38.1794,20.0777],195.587,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[-5.71509,-38.2146,20.0775],179.971,1,false,[0,-0],"","",false,true],["Target_PopUp_Moving_90deg_F",[2.79468,42.4207,8.80068],225,1,false,[0,0],"","",false,true],["Land_PortableLongRangeRadio_F",[-5.98706,-38.2946,20.0777],160.17,1,false,[0,-0],"","",false,true],["Land_PortableCabinet_01_closed_black_F",[7.422,-38.755,18.7726],89.9989,1,false,[88.728,-90],"","",false,true],["Land_Document_01_F",[-5.41602,-38.5154,20.0777],270.101,1,false,[0,0],"","",false,true],["Box_C_UAV_06_F",[-6.34534,-38.6456,19.557],270.101,1,false,[0,0],"","",false,true],["Land_Metal_wooden_rack_F",[9.23486,41.7672,8.80068],90,1,false,[0,-0],"","",false,true],["Land_PlasticBarrier_03_F",[-10.0352,39.8041,15.225],42.0723,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_battery_black_F",[-6.29041,-38.5858,20.0777],270.101,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_battery_black_F",[-6.41724,-38.5903,20.0777],270.101,1,false,[0,0],"","",false,true],["B_Slingload_01_Ammo_F",[-5.71497,42.458,8.80099],0,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_battery_black_F",[-6.28467,-38.666,20.0777],270.101,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_battery_black_F",[-6.41211,-38.6736,20.0777],270.101,1,false,[0,0],"","",false,true],["I_HMG_02_high_F",[9.8042,-37.8148,18.8199],130.905,1,false,[0,-0],"","",false,true],["I_HMG_02_high_F",[-9.81189,-37.8151,18.82],228.586,1,false,[0,0],"","",false,true],["Land_PortableDesk_01_black_F",[-5.4928,-39.1963,19.1906],270.101,1,false,[0,0],"","",false,true],["Land_Computer_01_black_F",[-6.32813,-38.8245,20.0777],270.101,1,false,[0,0],"","",false,true],["Land_Router_01_black_F",[-5.25354,-39.0565,19.9221],270.101,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[7.69849,-42.1648,10.3774],293.302,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[-7.49121,-42.2095,10.3774],67.8899,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[8.48157,-38.9025,18.8197],295.238,1,false,[0,0],"","",false,true],["Land_PortableDesk_01_black_F",[-6.17151,-39.1957,19.1907],270.101,1,false,[0,0],"","",false,true],["Box_NATO_Uniforms_F",[6.125,-39.246,19.191],0,1,false,[0,0],"","",false,true],["Box_NATO_WpsLaunch_F",[-7.28601,-39.425,18.82],270,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_F",[1.09204,43.1045,8.80068],45,1,false,[0,0],"","",false,true],["Land_Projector_01_F",[-5.31323,-39.2074,20.0868],90.2177,1,false,[0,-0],"","",false,true],["Land_Router_01_black_F",[-5.25427,-39.3721,19.9257],270.101,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[-10.0802,-42.0367,10.3774],104.262,1,false,[0,-0],"","",false,true],["Target_PopUp_Alien1_Moving_F",[1.84973,43.4039,8.80068],225,1,false,[0,0],"","",false,true],["Land_FlatTV_01_F",[-6.34021,-39.1829,20.0866],270.101,1,false,[0,0],"","",false,true],["Land_DeskChair_01_black_F",[-4.98303,-39.9133,19.1907],297.45,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[10.7581,40.2628,15.2338],18.3672,1,false,[0,0],"","",false,true],["Land_MultiScreenComputer_01_closed_black_F",[-5.4801,-39.8268,19.385],329.396,1,false,[19.5391,30.863],"","",false,true],["Land_BottlePlastic_V2_F",[-5.34595,-39.5856,20.0775],270.101,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[8.03699,-39.3678,19.6328],214.3,1,false,[0,0],"","",false,true],["Land_Computer_01_black_F",[-6.36072,-39.5254,20.0777],270.101,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_closed_black_F",[-6.18762,-39.936,19.1907],270.101,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_closed_black_F",[-6.15234,-39.8027,19.5008],103.339,1,false,[0,-0],"","",false,true],["Land_BottlePlastic_V2_F",[-5.42517,-39.6355,20.0775],270.101,1,false,[0,0],"","",false,true],["Land_CampingTable_small_F",[8.06641,-39.6841,18.8198],33.7388,1,false,[0,0],"","",false,true],["Land_BottlePlastic_V2_F",[-5.32263,-39.6713,20.0775],270.101,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[8.25342,-39.8168,18.8197],0,1,false,[0,0],"","",false,true],["Land_MultiScreenComputer_01_closed_black_F",[-5.70862,-40.0725,19.1907],270.101,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_battery_black_F",[-5.87756,-39.7245,20.0777],270.101,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[-10.1228,-42.495,10.3778],67.2635,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_battery_black_F",[-6.00049,-39.722,20.0777],270.101,1,false,[0,0],"","",false,true],["Box_NATO_Equip_F",[9.19568,43.0333,8.80068],0,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[7.83777,-39.6481,19.6328],79.2583,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_battery_black_F",[-5.88159,-39.798,20.0777],270.101,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_battery_black_F",[-6.00085,-39.7921,20.0777],270.101,1,false,[0,0],"","",false,true],["CargoNet_01_barrels_F",[-9.17566,43.072,8.80099],0,1,false,[0,0],"","",false,true],["Land_Destroyer_01_hull_04_F",[0,45,-0.65],360,1,false,[0,0],"","",true,true],["Land_Destroyer_01_interior_04_F",[0,45,-0.65],360,1,false,[0,0],"","",true,true],["Land_Destroyer_01_hull_02_F",[0,-45,-0.65],360,1,false,[0,0],"","",true,true],["Land_Destroyer_01_interior_02_F",[0,-45,-0.65],360,1,false,[0,0],"","",true,true],["Land_FMradio_F",[-5.23279,-39.9471,20.0775],270.101,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[7.91211,43.4429,8.80068],152.902,1,false,[0,-0],"","",false,true],["Land_BatteryPack_01_closed_black_F",[-6.14417,-40.1343,19.4986],270.101,1,false,[0,0],"","",false,true],["Box_NATO_Equip_F",[9.19604,43.033,9.53799],0,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[8.37549,43.4204,8.83147],211.557,1,false,[0,0],"","",false,true],["Item_Binocular",[8.27808,-39.7251,19.6328],0,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_closed_black_F",[6.04797,-40.3861,19.1906],226.36,1,false,[0,0],"","",false,true],["Land_IPPhone_01_black_F",[-5.64441,-40.1779,20.0775],349.72,1,false,[0,0],"","",false,true],["Box_NATO_Equip_F",[9.19604,43.033,10.276],0,1,false,[0,0],"","",false,true],["Land_Tablet_02_black_F",[-5.31726,-40.2513,20.0777],184.883,1,false,[0,0],"","",false,true],["Land_Laptop_unfolded_F",[-6.18201,-40.0811,20.078],142.229,1,false,[0,-0],"","",false,true],["Land_PortableLongRangeRadio_F",[-5.56946,-40.2705,20.0775],29.7547,1,false,[0,0],"","",false,true],["Land_VRGoggles_01_F",[-5.88635,-40.2411,20.0775],270.101,1,false,[0,0],"","",false,true],["Land_Tablet_02_black_F",[5.8728,-40.3721,19.8227],180.017,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[1.12646,44.451,8.79852],180,1,false,[0,-0],"","",false,true],["Land_SportGround_fence_F",[7.0885,43.7101,8.80068],180,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[1.12646,44.451,9.15042],180,1,false,[0,-0],"","",false,true],["Land_PortableCabinet_01_closed_black_F",[6.02588,-40.5349,19.5084],238.373,1,false,[0,0],"","",false,true],["Land_Metal_wooden_rack_F",[5.32031,44.1809,8.80068],0,1,false,[0,0],"","",false,true],["Land_DeskChair_01_black_F",[-5.73474,-40.8715,19.1907],270.101,1,false,[0,0],"","",false,true],["Box_NATO_Ammo_F",[1.93848,44.6493,8.85538],90,1,false,[0,-0],"","",false,true],["Land_Metal_wooden_rack_F",[6.53003,44.181,8.80099],0,1,false,[0,0],"","",false,true],["Land_laptop_03_closed_black_F",[6.08167,-40.714,19.8229],82.6393,1,false,[0,0],"","",false,true],["Land_GarbageBin_03_F",[-7.50305,-40.781,18.8196],0,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[7.89587,44.1648,8.85685],180,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[7.89587,44.1648,9.20875],180,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[7.89587,44.1648,9.55725],180,1,false,[0,-0],"","",false,true],["Land_PortableCabinet_01_closed_black_F",[6.09143,-41.2468,19.1906],270.07,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[8.96912,44.1648,8.85685],180,1,false,[0,-0],"","",false,true],["Box_NATO_WpsLaunch_F",[0.800293,44.9545,9.55032],90,1,false,[0,-0],"","",false,true],["Box_NATO_WpsLaunch_F",[1.1875,44.9545,9.55032],90,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[8.96912,44.1648,9.20875],180,1,false,[0,-0],"","",false,true],["Land_BatteryPack_01_open_black_F",[6.18433,-41.1591,19.4847],253.401,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[1.41748,45.1547,8.79852],180,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_closed_black_F",[1.30493,-41.8439,19.1906],163.694,1,false,[0,-0],"","",false,true],["Box_NATO_Ammo_F",[7.74902,44.2991,9.91613],90,1,false,[0,-0],"","",false,true],["Box_NATO_Ammo_F",[2.37939,45.1385,8.84821],1.36604e-005,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[1.41748,45.1547,9.15042],180,1,false,[0,0],"","",false,true],["Box_NATO_Ammo_F",[7.37817,44.7827,8.80068],90,1,false,[0,-0],"","",false,true],["Land_BatteryPack_01_closed_black_F",[6.16675,-41.5325,19.4883],288.141,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_bookcase_black_F",[-1.02966,-42.0922,19.1906],0.633644,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_7drawers_black_F",[0.476807,-42.1672,19.1906],0.376969,1,false,[0,0],"","",false,true],["Land_PCSet_01_case_F",[1.00342,-42.2379,19.1906],0.25466,1,false,[0,0],"","",false,true],["Land_PCSet_01_case_F",[-1.58789,-42.2264,19.1906],359.929,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.167358,-42.0015,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_MultiScreenComputer_01_closed_black_F",[1.37,-42.2858,19.1906],343.525,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.200684,-42.0022,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.13208,-42.0066,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.098999,-42.0082,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.0618896,-42.0117,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.0256348,-42.0149,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.206299,-42.0345,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.170776,-42.04,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.13147,-42.0441,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.0970459,-42.045,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_PortableDesk_01_black_F",[-0.281982,-42.2736,19.1675],0.332798,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.0241699,-42.0492,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.059082,-42.0496,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.203735,-42.0699,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.16394,-42.0742,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.072876,-42.0796,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_ShotTimer_01_F",[0.184448,-42.0868,20.0544],147.556,1,false,[0,-0],"","",false,true],["Land_Battery_F",[-0.121216,-42.082,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.0125732,-42.0825,20.0636],180.017,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[8.70886,44.9135,8.80068],180,1,false,[0,0],"","",false,true],["Land_HDMICable_01_F",[0.81189,-42.1172,20.0544],180.017,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_battery_black_F",[-1.3739,-42.0803,20.0544],69.2589,1,false,[0,0],"","",false,true],["Land_HDMICable_01_F",[-1.34595,-42.129,20.0544],180.017,1,false,[0,0],"","",false,true],["Land_PCSet_Intel_01_F",[0.493774,-42.0752,20.0545],1.40396,1,false,[0,0],"","",false,true],["CargoNet_01_barrels_F",[-9.17566,44.8406,8.80068],0,1,false,[0,0],"","",false,true],["Land_PCSet_Intel_01_F",[-1.0415,-42.075,20.0635],0.337936,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_battery_black_F",[-1.32214,-42.1794,20.0544],180.017,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_battery_black_F",[-1.39014,-42.1829,20.0544],180.017,1,false,[0,0],"","",false,true],["Box_wwNATO_Wps_F",[1.12646,45.8632,8.79852],180,1,false,[0,-0],"","",false,true],["Land_PCSet_01_mouse_F",[-0.797852,-42.2389,20.0544],321.656,1,false,[0,0],"","",false,true],["Box_NATO_Uniforms_F",[5.12476,45.572,8.80068],0,1,false,[0,0],"","",false,true],["Land_VRGoggles_01_F",[-0.0612793,-42.2867,20.0636],13.55,1,false,[0,0],"","",false,true],["Land_File_research_F",[-0.0697021,-42.3024,20.0636],349.104,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[1.12646,45.8632,9.15042],180,1,false,[0,-0],"","",false,true],["Land_DeskChair_01_black_F",[0.514771,-42.6298,19.1906],180.017,1,false,[0,0],"","",false,true],["Land_PCSet_01_mouse_F",[0.311646,-42.3383,20.0544],14.0035,1,false,[0,0],"","",false,true],["Item_ItemRadio",[0.0556641,-42.049,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_IPPhone_01_black_F",[-0.515381,-42.3635,20.0636],358.845,1,false,[0,0],"","",false,true],["Land_PCSet_01_keyboard_F",[-1.18884,-42.3717,20.0544],359.467,1,false,[0,0],"","",false,true],["Land_PCSet_01_keyboard_F",[0.651855,-42.4039,20.0544],0.812666,1,false,[0,0],"","",false,true],["Land_DeskChair_01_black_F",[-1.04309,-42.7142,19.1906],180.017,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[0.399048,45.7324,8.80099],90,1,false,[0,-0],"","",false,true],["Box_NATO_Uniforms_F",[5.125,45.572,9.562],0,1,false,[0,0],"","",false,true],["Item_ItemWatch",[-0.16626,-42.1298,20.0536],281.21,1,false,[0,0],"","",false,true],["Land_Notepad_F",[-0.831543,-42.4945,20.0544],282.726,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-5.3197,-42.3422,19.1906],52.7975,1,false,[0,0],"","",false,true],["Land_Router_01_black_F",[-0.103638,-42.5212,19.9423],1.78323,1,false,[0,0],"","",false,true],["Land_Router_01_black_F",[-0.419312,-42.5184,19.9474],359.458,1,false,[0,0],"","",false,true],["Book_01_F",[0.191162,-42.5231,20.0636],316.672,1,false,[0,0],"","",false,true],["Land_PenBlack_F",[-0.852539,-42.5236,20.0586],180.017,1,false,[0,0],"","",false,true],["Box_NATO_Uniforms_F",[5.125,45.572,10.323],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[5.20117,-42.4845,19.1906],310.474,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[8.41174,45.6909,8.80095],0,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[8.41174,45.6909,9.13573],0,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[8.41174,45.6909,9.47732],0,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[8.41174,45.6909,9.8179],0,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[1.13306,46.6625,8.79852],180,1,false,[0,-0],"","",false,true],["Land_SportGround_fence_F",[4.55286,46.3109,8.80068],90,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[8.41174,45.6909,10.1788],0,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[1.13306,46.6625,9.15042],180,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[1.13306,46.6625,9.49892],180,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[8.41174,45.6909,10.5396],0,1,false,[0,0],"","",false,true],["Land_Pallets_F",[9.08386,-45.6842,10.4103],125.916,1,false,[-0.444107,7.69753e-006],"","",false,true],["Land_CampingChair_V2_F",[-8.36353,-46.0112,10.4051],23.2326,1,false,[0,0],"","",false,true],["Sign_Sphere100cm_F",[0.796509,-43.4977,20.9112],0,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.10144,47.2029,8.80067],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.10144,47.2032,9.15257],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.78687,47.203,8.80067],270.01,1,false,[0,0],"","",false,true],["Land_PortableLight_02_double_black_F",[0.873169,47.4567,8.80068],270,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.10144,47.2032,9.51153],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.78687,47.203,9.15257],270.01,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[8.64026,46.854,8.80068],90,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.10144,47.2032,9.86402],270.01,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[8.64026,46.854,9.13546],90,1,false,[0,0],"","",false,true],["CargoNet_01_barrels_F",[-9.17566,46.754,8.80099],0,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[9.32385,46.854,8.80068],90,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[8.64026,46.854,9.47705],90,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[9.32385,46.854,9.13546],90,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[8.64026,46.854,9.81763],90,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[9.32385,46.854,9.47705],90,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[8.64026,46.854,10.1785],90,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[8.64026,46.854,10.5393],90,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-8.46704,46.8971,11.1395],205.685,1,false,[0,0],"","",false,true],["Land_CampingTable_small_F",[-8.34302,-47.2915,10.415],0,1,false,[-0.444114,0],"","",false,true],["Box_NATO_Wps_F",[5.10193,48.2759,8.80067],270.01,1,false,[0,0],"","",false,true],["Item_Binocular",[-8.59094,-47.267,11.2277],302.41,1,false,[-0.444114,1.33406e-008],"","",false,true],["Item_Binocular",[-8.04724,-47.4083,11.2288],160.904,1,false,[-0.444099,8.21782e-006],"","",false,true],["Box_NATO_Wps_F",[5.10193,48.2759,9.15257],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.78638,48.2758,8.80067],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.10193,48.2759,9.50107],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.78638,48.2758,9.15257],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.10193,48.2759,9.85296],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.78638,48.2758,9.50107],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.10193,48.2759,10.2055],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.78638,48.2758,9.85296],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.78638,48.2758,10.2055],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Grenades_F",[8.55103,48.155,8.80099],270,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.78638,48.2758,10.5574],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Grenades_F",[8.55103,48.155,9.35201],270,1,false,[0,0],"","",false,true],["Box_NATO_Grenades_F",[9.29602,48.155,8.801],270,1,false,[0,0],"","",false,true],["Box_NATO_Grenades_F",[9.29602,48.155,9.35201],270,1,false,[0,0],"","",false,true],["B_SAM_System_01_F",[-0.00134277,-47.2848,15.0879],180,1,false,[0,0],"","",false,true],["Land_PortableLight_02_double_black_F",[-9.3855,48.5236,8.80068],0,1,false,[0,0],"","",false,true],["Land_BackAlley_01_l_gate_F",[0.399048,49.3519,8.80099],90,1,false,[0,-0],"","",false,true],["B_Slingload_01_Fuel_F",[-5.71497,49.25,8.801],0,1,false,[0,0],"","",false,true],["B_supplyCrate_F",[9.04688,50.5918,8.80068],90,1,false,[0,-0],"","",false,true],["B_CargoNet_01_ammo_F",[1.48706,51.8402,8.80068],0,1,false,[0,0],"","",false,true],["Box_NATO_AmmoOrd_F",[9.28223,51.7579,8.80068],0,1,false,[0,0],"","",false,true],["Box_NATO_AmmoOrd_F",[9.28198,51.7579,9.35201],0,1,false,[0,0],"","",false,true],["B_SAM_System_02_F",[-0.00134277,50.6556,15.785],0,1,false,[0,0],"","",false,true],["Box_NATO_Support_F",[1.08716,53.0416,8.71652],89.9999,1,false,[0.202,-0.0380005],"","",false,true],["Box_NATO_Support_F",[1.88062,53.037,8.66743],89.9999,1,false,[0.202,-0.0380005],"","",false,true],["Land_Shoot_House_Wall_Long_F",[0.398682,52.9781,8.80068],90,1,false,[0,-0],"","",false,true],["Box_NATO_AmmoOrd_F",[9.2666,52.4769,8.80068],0,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[6.86365,52.8621,8.81841],180,1,false,[0,-0],"","",false,true],["Box_NATO_WpsLaunch_F",[5.45117,53.0408,8.80068],180,1,false,[0,0],"","",false,true],["Box_NATO_WpsLaunch_F",[5.4458,53.0431,9.11667],180,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[6.86365,52.8621,9.1709],180,1,false,[0,-0],"","",false,true],["Land_Target_Dueling_01_F",[4.32495,53.158,8.80099],270,1,false,[0,0],"","",false,true],["Box_NATO_AmmoOrd_F",[9.26697,52.4769,9.35201],0,1,false,[0,0],"","",false,true],["Box_NATO_WpsLaunch_F",[5.44922,53.0367,9.43267],180,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[6.86365,52.8621,9.52279],180,1,false,[0,-0],"","",false,true],["Box_NATO_AmmoVeh_F",[-5.71497,53.313,8.80099],0,1,false,[0,0],"","",false,true],["Box_NATO_AmmoOrd_F",[8.54175,53.0652,8.80068],270,1,false,[0,0],"","",false,true],["LayFlatHose_01_StraightLong_F",[-14.4041,51.8684,8.78628],0,1,false,[0,0],"","",false,true],["Box_NATO_AmmoOrd_F",[8.54199,53.0649,9.35201],270,1,false,[0,0],"","",false,true],["Land_SportGround_fence_F",[7.09973,53.5413,8.80068],180,1,false,[0,0],"","",false,true],["HazmatBag_01_roll_F",[-14.4863,52.2461,8.78628],0,1,false,[0,0],"","",false,true],["Land_FlowerPot_01_Flower_F",[5.11206,54.0322,8.80068],0,1,false,[0,0],"","",false,true],["DrainageDeck_01_F",[-13.4115,52.9308,8.78628],0,1,false,[0,0],"","",false,true],["Land_PortableGenerator_01_black_F",[6.05078,54.2249,8.80068],0,1,false,[0,0],"","",false,true],["WaterSpill_01_Small_Foam_F",[-13.469,52.9587,8.78628],0,1,false,[0,0],"","",false,true],["HazmatBag_01_roll_F",[-14.4886,52.7068,8.78628],0,1,false,[0,0],"","",false,true],["DeconShower_01_F",[-13.4153,52.8871,8.78628],0,1,false,[0,0],"","",false,true],["Land_IPPhone_01_black_F",[7.31494,54.1224,9.68762],195.208,1,false,[0,0],"","",false,true],["Land_PortableDesk_01_black_F",[8.12842,54.1173,8.80068],0,1,false,[0,0],"","",false,true],["Land_MultiScreenComputer_01_black_F",[8.11072,54.0536,9.69685],178.595,1,false,[0,-0],"","",false,true],["Land_Laptop_03_black_F",[8.84314,54.0912,9.68762],146.145,1,false,[0,-0],"","",false,true],["Land_DeskChair_01_black_F",[8.95898,54.2341,8.80068],0,1,false,[0,0],"","",false,true],["Land_TripodScreen_01_dual_v2_black_F",[1.59668,54.9922,8.80067],135,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[7.38879,54.8618,8.80068],357.865,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[9.25488,54.7441,8.80068],89.863,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[3.04004,55.6267,8.80068],310.376,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-12.1938,52.9381,15.2322],37.3673,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_F",[1.08325,55.6138,8.80068],315,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[4.37537,55.7103,8.80068],26.6572,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-8.5946,55.2217,8.80068],214.081,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[12.1188,53.1217,15.2321],312.926,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_bookcase_black_F",[9.37671,55.2653,8.80068],90,1,false,[0,-0],"","",false,true],["HazmatBag_01_F",[-12.6492,54.6593,8.78629],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[-6.45239,56.2457,8.80036],180,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[3.72595,56.297,8.80099],180,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_bookcase_black_F",[9.39111,55.8754,8.80068],90,1,false,[0,-0],"","",false,true],["Land_PlasticBarrier_03_F",[-8.43103,56.2454,8.80068],180,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[4.98999,56.751,8.80099],180,1,false,[0,0],"","",false,true],["Land_CampingTable_F",[3.40527,56.9115,8.80068],359.219,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[7.70532,56.2965,8.80068],180,1,false,[0,0],"","",false,true],["Land_Map_blank_F",[3.85938,56.848,9.61233],274.695,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[5.82898,56.751,8.80099],180,1,false,[0,0],"","",false,true],["Land_WaterBottle_01_full_F",[2.85547,56.9369,9.6106],250,1,false,[0,0],"","",false,true],["Land_PenBlack_F",[4.15918,56.9193,9.6182],330.964,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[6.79395,56.751,8.80099],180,1,false,[0,0],"","",false,true],["WaterTrail_01_Foam_F",[-13.652,55.6106,8.78628],0,1,false,[0,0],"","",false,true],["Land_Notepad_F",[4.26465,56.974,9.61759],58.3615,1,false,[0,0],"","",false,true],["Land_File1_F",[3.16895,57.052,9.616],195.512,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[7.78503,56.751,8.80099],180,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[8.81201,56.751,8.80099],180,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[-9.38635,56.7433,8.80068],281.835,1,false,[0,0],"","",false,true],["Land_RotorCoversBag_01_F",[9.89746,56.797,8.80068],49.8936,1,false,[0,0],"","",false,true],["LayFlatHose_01_Step_F",[-14.432,55.9656,8.78628],0,1,false,[0,0],"","",false,true],["Land_Obstacle_Ramp_F",[-9.56665,55.9307,15.2347],180,1,false,[-0.205988,-6.71199e-008],"","",false,true],["Land_DeckTractor_01_F",[-7.52441,58.0264,8.80068],89.0853,1,false,[0,0],"","",false,true],["SCBACylinder_01_F",[-12.4255,57.4902,8.78628],0,1,false,[0,0],"","",false,true],["SCBACylinder_01_F",[-12.6819,57.5074,8.78628],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[-14.2081,58.938,8.78628],0,1,false,[0,0],"","",false,true],["Land_WoodenCrate_01_F",[-9.07996,58.6711,15.231],0,1,false,[0,0],"","",false,true],["Land_WoodenCrate_01_F",[-9.92065,58.6688,15.231],0,1,false,[0,0],"","",false,true],["Land_WoodenCrate_01_F",[-9.0918,58.6705,15.908],0,1,false,[0,0],"","",false,true],["Land_WoodenCrate_01_F",[-9.93298,58.6711,15.908],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[10.9974,60.114,8.78183],174.753,1,false,[0,-0],"","",false,true],["Land_Portable_generator_F",[-11.7023,60.2999,8.78116],0,1,false,[-0.205584,0],"","",false,true],["Land_CampingChair_V2_F",[-12.2444,58.4755,17.2689],152,1,false,[0,-0],"","",false,true],["Land_PalletTrolley_01_khaki_F",[11.6674,60.5267,8.77945],265,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[12.4246,58.4755,17.2729],216.782,1,false,[0,0],"","",false,true],["Reflector_Cone_01_narrow_white_F",[10.2633,60.9379,8.77887],270,1,false,[0,0],"","",false,true],["Reflector_Cone_01_narrow_white_F",[-10.2729,60.938,8.77899],90,1,false,[0,-0],"","",false,true],["Land_PierLadder_F",[-9.93298,60.333,13.7625],180,1,false,[0,0],"","",false,true],["Land_Pallets_stack_F",[12.7958,60.7753,8.77945],0,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[11.8694,61.646,8.77632],51.9861,1,false,[0,0],"","",false,true],["B_Ship_MRLS_01_F",[0.0133057,-62.4196,10.5237],180,1,false,[0,0],"","",false,true],["Land_Obstacle_Ramp_F",[-9.93298,62.1169,9.99125],0,1,false,[-0.206,0],"","",false,true],["Land_Ammobox_rounds_F",[11.8586,62.1567,8.73804],96.9861,1,false,[0,-0],"","",false,true],["Land_Missle_Trolley_02_F",[-11.5751,62.761,8.77231],0,1,false,[0,0],"","",false,true],["Land_Pallet_MilBoxes_F",[12.827,62.6376,8.77276],90,1,false,[0,-0],"","",false,true],["Land_PortableLight_02_quad_black_F",[-14.2587,62.9407,8.77167],230.367,1,false,[0,0],"","",false,true],["Land_Obstacle_Ramp_F",[-9.93298,64.282,8.77004],0,1,false,[-0.205584,0],"","",false,true],["Land_CampingChair_V2_F",[13.0631,65.0066,8.76424],141.746,1,false,[0,-0],"","",false,true],["Land_AirIntakePlug_01_F",[-10.6697,66.5044,8.75885],241.66,1,false,[0,0],"","",false,true],["Land_AirIntakePlug_04_F",[10.4359,66.8083,8.75837],147.734,1,false,[0,-0],"","",false,true],["Land_Bomb_Trolley_01_F",[-13.353,66.974,8.758],180,1,false,[0,0],"","",false,true],["Box_NATO_WpsLaunch_F",[13.9697,67.1689,8.75846],289.61,1,false,[-0.205584,-4.00209e-008],"","",false,true],["Box_NATO_WpsLaunch_F",[13.9684,67.1648,9.07445],289.61,1,false,[-0.205584,-4.00209e-008],"","",false,true],["PortableHelipadLight_01_white_F",[11.7178,68.7137,8.75885],0,1,false,[0,0],"","",false,true],["PortableHelipadLight_01_white_F",[-11.7267,68.7452,8.75886],0,1,false,[0,0],"","",false,true],["B_Heli_Transport_03_unarmed_F",[0.287964,74.9535,8.68745],0,1,false,[0,0],"","",false,true],["Reflector_Cone_01_narrow_white_F",[13.962,77.985,8.80105],86.0411,1,false,[-80.058,-0.000148352],"","",false,true],["Reflector_Cone_01_narrow_white_F",[-13.9637,78.0101,8.80127],288.056,1,false,[-79.7309,-56.6933],"","",false,true],["Land_HelipadEmpty_F",[-0.000366211,79.4036,8.76157],360,1,false,[0,0],"","",true,true],["Land_Destroyer_01_hull_05_F",[0,80,-0.65],360,1,false,[0,0],"","",true,true],["B_Ship_Gun_01_F",[-0.00134277,-78.7819,12.0854],180,1,false,[0,0],"","",false,true],["Land_Destroyer_01_hull_01_F",[0,-85,-0.65],360,1,false,[0,0],"","",true,true],["I_HMG_02_high_F",[11.1503,84.022,8.76274],86.2658,1,false,[0,0],"","",false,true],["Reflector_Cone_01_narrow_white_F",[0.0224609,84.9771,8.76399],0,1,false,[0,0],"","",false,true],["I_HMG_02_high_F",[-11.1083,84.4102,8.76285],275.431,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-11.0079,86.1232,8.76328],43.5709,1,false,[0,0],"","",false,true],["Reflector_Cone_01_wide_white_F",[0.0219727,89.3689,3.41229],0,1,false,[25.9488,0],"","",false,true],["Land_AirIntakePlug_02_F",[9.39966,89.333,8.76409],54.0947,1,false,[0,0],"","",false,true],["Land_AirIntakePlug_05_F",[-9.63611,89.7615,8.76421],269.694,1,false,[0,0],"","",false,true],["PortableHelipadLight_01_white_F",[-11.1693,90.6506,8.76442],0,1,false,[0,0],"","",false,true],["PortableHelipadLight_01_white_F",[11.1588,90.6665,8.76442],0,1,false,[0,0],"","",false,true],["ShipFlag_US_F",[-0.00012207,91.7633,8.76266],360,1,false,[0,0],"","",true,true],["Sign_Sphere100cm_F",[0,197.368,73.196],0,1,false,[0,0],"","",false,true],[1941.87,1821.41]];
						};
						case "Medium": {
							_objectsArray = [["B_AAA_System_01_F",[-0.00134277,35.9135,19.2167],0,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Malden_F",[0.110962,-33.9811,20.357],0,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Stratis_F",[-1.41565,-33.9811,20.357],0,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Tanoa_F",[1.63672,-33.9811,20.357],0,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Altis_F",[3.16357,-33.9811,20.3565],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[1.74451,-31.2196,19.2572],296.873,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[3.38208,-34.9518,20.2325],13.3178,1,false,[0,0],"","",false,true],["Land_Laptop_03_olive_F",[1.06079,-34.3975,20.0062],0.230065,1,false,[0,0],"","",false,true],["Land_Laptop_03_olive_F",[0.604492,-34.4124,20.0062],348.96,1,false,[0,0],"","",false,true],["Land_Laptop_03_olive_F",[-1.34009,-34.4143,20.0062],358.053,1,false,[0,0],"","",false,true],["Land_Tablet_02_black_F",[3.05432,-34.7666,20.232],243.945,1,false,[0,0],"","",false,true],["Item_Binocular",[-1.50476,-34.7173,20.0062],123.416,1,false,[0,-0],"","",false,true],["Land_IPPhone_01_olive_F",[-0.209595,-34.5082,20.0062],2.1296,1,false,[0,0],"","",false,true],["Land_IPPhone_01_olive_F",[1.99988,-34.4924,20.0062],2.1296,1,false,[0,0],"","",false,true],["Land_IPPhone_01_olive_F",[-0.690796,-34.5548,20.0062],352.566,1,false,[0,0],"","",false,true],["Land_Notepad_F",[1.49158,-34.5914,20.0062],269.651,1,false,[0,0],"","",false,true],["Land_PenBlack_F",[1.60461,-34.576,20.0062],168.627,1,false,[0,-0],"","",false,true],["Land_TransferSwitch_01_F",[6.43689,-34.8037,20.1598],88.989,1,false,[0,0],"","",false,true],["Land_Notepad_F",[-0.507202,-34.7212,20.0062],269.651,1,false,[0,0],"","",false,true],["Land_PortableServer_01_black_F",[3.27991,-34.786,19.8849],304.207,1,false,[0,0],"","",false,true],["Land_PenBlack_F",[-0.402222,-34.7375,20.0062],168.627,1,false,[0,-0],"","",false,true],["Land_OfficeCabinet_01_F",[-5.51379,-34.2899,19.1906],0,1,false,[0,0],"","",false,true],["Land_PortableServer_01_black_F",[2.98218,-34.6479,19.5377],358.89,1,false,[0,0],"","",false,true],["Land_PortableServer_01_black_F",[3.59106,-34.6361,19.5377],359.068,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-1.40442,-34.9476,19.1906],179.824,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[1.80127,-34.9395,19.1906],179.327,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[0.912476,-34.9824,19.1906],166.173,1,false,[0,-0],"","",false,true],["Land_CampingTable_F",[1.29431,-34.5638,19.1906],178.971,1,false,[0,-0],"","",false,true],["Land_CampingTable_F",[-0.914673,-34.5787,19.1906],178.971,1,false,[0,-0],"","",false,true],["I_HMG_02_high_F",[9.8042,-37.8148,18.8199],130.905,1,false,[0,-0],"","",false,true],["I_HMG_02_high_F",[-9.81189,-37.8151,18.82],228.586,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-5.92395,-35.014,19.1906],301.588,1,false,[0,0],"","",false,true],["Land_TentLamp_01_standing_F",[0.270386,-38.3667,20.004],275.865,1,false,[0,0],"","",false,true],["Land_TentLamp_01_standing_F",[-0.265259,-38.3824,20.004],108.64,1,false,[0,-0],"","",false,true],["Land_Laptop_device_F",[0,-38.0565,19.9995],0,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[-5.71509,-38.2146,20.0775],179.971,1,false,[0,-0],"","",false,true],["Land_PortableServer_01_black_F",[2.98999,-34.6302,19.1906],359.521,1,false,[0,0],"","",false,true],["Land_PortableServer_01_black_F",[3.61096,-34.6398,19.1906],359.924,1,false,[0,0],"","",false,true],["Item_Binocular",[6.07141,-38.0605,19.9282],316.066,1,false,[0,0],"","",false,true],["Land_FlatTV_01_F",[-6.34021,-39.1829,20.0866],270.101,1,false,[0,0],"","",false,true],["Land_TripodScreen_01_dual_v2_black_F",[3.07324,-38.0823,19.1906],298.15,1,false,[0,0],"","",false,true],["Land_TripodScreen_01_dual_v2_black_F",[-2.87659,-38.1223,19.1906],73.8147,1,false,[0,0],"","",false,true],["Land_Notepad_F",[-5.32666,-38.1921,20.0777],159.621,1,false,[0,-0],"","",false,true],["Land_IPPhone_01_black_F",[-6.24683,-38.1794,20.0777],195.587,1,false,[0,0],"","",false,true],["Land_MobilePhone_smart_F",[-5.98352,-38.1183,20.0777],22.4811,1,false,[0,0],"","",false,true],["Land_PencilYellow_F",[-5.26428,-38.2986,20.0777],90.6398,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[-0.180786,-36.9886,19.1906],338.35,1,false,[0,0],"","",false,true],["Land_PortableLongRangeRadio_F",[-5.98706,-38.2946,20.0777],160.17,1,false,[0,-0],"","",false,true],["Land_BatteryPack_01_battery_black_F",[-6.29041,-38.5858,20.0777],270.101,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_battery_black_F",[-6.41724,-38.5903,20.0777],270.101,1,false,[0,0],"","",false,true],["Land_Document_01_F",[-5.41602,-38.5154,20.0777],270.101,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_battery_black_F",[-6.28467,-38.666,20.0777],270.101,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_battery_black_F",[-6.41211,-38.6736,20.0777],270.101,1,false,[0,0],"","",false,true],["PowerCable_01_Roll_F",[3.07251,-35.4067,19.1906],206.792,1,false,[0,0],"","",false,true],["Land_Computer_01_black_F",[-6.32813,-38.8245,20.0777],270.101,1,false,[0,0],"","",false,true],["Land_Projector_01_F",[-5.31323,-39.2074,20.0868],90.2177,1,false,[0,-0],"","",false,true],["Land_BottlePlastic_V2_F",[-5.34595,-39.5856,20.0775],270.101,1,false,[0,0],"","",false,true],["Item_ItemRadio",[0.0556641,-42.049,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_BottlePlastic_V2_F",[-5.42517,-39.6355,20.0775],270.101,1,false,[0,0],"","",false,true],["Land_BottlePlastic_V2_F",[-5.32263,-39.6713,20.0775],270.101,1,false,[0,0],"","",false,true],["Item_ItemWatch",[-0.16626,-42.1298,20.0536],281.21,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[10.6578,-34.6571,18.82],237.776,1,false,[0,0],"","",false,true],["Land_Router_01_black_F",[-5.25354,-39.0565,19.9221],270.101,1,false,[0,0],"","",false,true],["Land_Computer_01_black_F",[-6.36072,-39.5254,20.0777],270.101,1,false,[0,0],"","",false,true],["Land_Router_01_black_F",[-5.25427,-39.3721,19.9257],270.101,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_battery_black_F",[-5.87756,-39.7245,20.0777],270.101,1,false,[0,0],"","",false,true],["Land_Laptop_unfolded_F",[-6.18201,-40.0811,20.078],142.229,1,false,[0,-0],"","",false,true],["Land_BatteryPack_01_battery_black_F",[-6.00049,-39.722,20.0777],270.101,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_battery_black_F",[-5.88159,-39.798,20.0777],270.101,1,false,[0,0],"","",false,true],["Land_FMradio_F",[-5.23279,-39.9471,20.0775],270.101,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_battery_black_F",[-6.00085,-39.7921,20.0777],270.101,1,false,[0,0],"","",false,true],["Land_CampingTable_small_white_F",[0,-38.16,19.191],0,1,false,[0,0],"","",false,true],["Sign_Sphere100cm_F",[0.796509,-43.4977,20.9112],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-10.9282,-35.5411,18.82],83.946,1,false,[0,0],"","",false,true],["Land_IPPhone_01_black_F",[-5.64441,-40.1779,20.0775],349.72,1,false,[0,0],"","",false,true],["Land_Tablet_02_black_F",[-5.31726,-40.2513,20.0777],184.883,1,false,[0,0],"","",false,true],["Land_VRGoggles_01_F",[-5.88635,-40.2411,20.0775],270.101,1,false,[0,0],"","",false,true],["Box_C_UAV_06_F",[-6.34094,-38.2834,19.557],270.101,1,false,[0,0],"","",false,true],["Box_NATO_Equip_F",[6.12549,-37.9701,19.1906],0,1,false,[0,0],"","",false,true],["Land_PortableLongRangeRadio_F",[-5.56946,-40.2705,20.0775],29.7547,1,false,[0,0],"","",false,true],["Land_DeskChair_01_black_F",[-5.87024,-37.4951,19.1907],188.719,1,false,[0,0],"","",false,true],["Box_C_UAV_06_F",[-6.34534,-38.6456,19.557],270.101,1,false,[0,0],"","",false,true],["Land_PCSet_Intel_01_F",[-1.0415,-42.075,20.0635],0.337936,1,false,[0,0],"","",false,true],["Land_TorqueWrench_01_F",[-5.49768,-38.4078,19.4935],202.691,1,false,[17.2799,-36.7833],"","",false,true],["Land_PCSet_Intel_01_F",[0.493774,-42.0752,20.0545],1.40396,1,false,[0,0],"","",false,true],["Land_PortableDesk_01_black_F",[-5.4928,-39.1963,19.1906],270.101,1,false,[0,0],"","",false,true],["Land_DeskChair_01_black_F",[-4.85632,-38.385,19.1907],223.694,1,false,[0,0],"","",false,true],["CBRNCase_01_F",[-5.79858,-38.1311,19.1907],270.101,1,false,[0,0],"","",false,true],["Land_PortableDesk_01_black_F",[-6.17151,-39.1957,19.1907],270.101,1,false,[0,0],"","",false,true],["Land_laptop_03_closed_black_F",[6.08167,-40.714,19.8229],82.6393,1,false,[0,0],"","",false,true],["Land_Tablet_02_black_F",[5.8728,-40.3721,19.8227],180.017,1,false,[0,0],"","",false,true],["Box_NATO_Uniforms_F",[6.125,-39.246,19.191],0,1,false,[0,0],"","",false,true],["Land_PlasticCase_01_small_black_CBRN_F",[-5.60645,-38.3657,19.1907],208.12,1,false,[0,0],"","",false,true],["Land_PlasticCase_01_medium_black_CBRN_F",[-6.18884,-38.4546,19.1907],180.776,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.167358,-42.0015,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.200684,-42.0022,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.13208,-42.0066,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.098999,-42.0082,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.0618896,-42.0117,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.0256348,-42.0149,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_battery_black_F",[-1.3739,-42.0803,20.0544],69.2589,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.206299,-42.0345,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.170776,-42.04,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.13147,-42.0441,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.0970459,-42.045,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.0241699,-42.0492,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.059082,-42.0496,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.203735,-42.0699,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_closed_black_F",[-6.15234,-39.8027,19.5008],103.339,1,false,[0,-0],"","",false,true],["Land_Battery_F",[-0.16394,-42.0742,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.072876,-42.0796,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.121216,-42.082,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_Battery_F",[-0.0125732,-42.0825,20.0636],180.017,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_battery_black_F",[-1.32214,-42.1794,20.0544],180.017,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_battery_black_F",[-1.39014,-42.1829,20.0544],180.017,1,false,[0,0],"","",false,true],["Land_ShotTimer_01_F",[0.184448,-42.0868,20.0544],147.556,1,false,[0,-0],"","",false,true],["Land_MultiScreenComputer_01_closed_black_F",[-5.4801,-39.8268,19.385],329.396,1,false,[19.5391,30.863],"","",false,true],["Land_HDMICable_01_F",[0.81189,-42.1172,20.0544],180.017,1,false,[0,0],"","",false,true],["Land_VRGoggles_01_F",[-0.0612793,-42.2867,20.0636],13.55,1,false,[0,0],"","",false,true],["Land_HDMICable_01_F",[-1.34595,-42.129,20.0544],180.017,1,false,[0,0],"","",false,true],["Land_PCSet_01_mouse_F",[-0.797852,-42.2389,20.0544],321.656,1,false,[0,0],"","",false,true],["Land_IPPhone_01_black_F",[-0.515381,-42.3635,20.0636],358.845,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_closed_black_F",[-6.14417,-40.1343,19.4986],270.101,1,false,[0,0],"","",false,true],["Land_File_research_F",[-0.0697021,-42.3024,20.0636],349.104,1,false,[0,0],"","",false,true],["Land_PCSet_01_mouse_F",[0.311646,-42.3383,20.0544],14.0035,1,false,[0,0],"","",false,true],["Land_PCSet_01_keyboard_F",[-1.18884,-42.3717,20.0544],359.467,1,false,[0,0],"","",false,true],["Land_PCSet_01_keyboard_F",[0.651855,-42.4039,20.0544],0.812666,1,false,[0,0],"","",false,true],["Book_01_F",[0.191162,-42.5231,20.0636],316.672,1,false,[0,0],"","",false,true],["Land_Notepad_F",[-0.831543,-42.4945,20.0544],282.726,1,false,[0,0],"","",false,true],["Land_PenBlack_F",[-0.852539,-42.5236,20.0586],180.017,1,false,[0,0],"","",false,true],["Land_Router_01_black_F",[-0.419312,-42.5184,19.9474],359.458,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_closed_black_F",[6.02588,-40.5349,19.5084],238.373,1,false,[0,0],"","",false,true],["Land_Router_01_black_F",[-0.103638,-42.5212,19.9423],1.78323,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[8.48157,-38.9025,18.8197],295.238,1,false,[0,0],"","",false,true],["Land_DeskChair_01_black_F",[-4.98303,-39.9133,19.1907],297.45,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_folded_yellow_F",[5.5918,-27.3483,16.7978],87.2402,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_open_black_F",[6.18433,-41.1591,19.4847],253.401,1,false,[0,0],"","",false,true],["Land_MultiScreenComputer_01_closed_black_F",[-5.70862,-40.0725,19.1907],270.101,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_closed_black_F",[-6.18762,-39.936,19.1907],270.101,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_closed_black_F",[6.04797,-40.3861,19.1906],226.36,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_closed_black_F",[6.16675,-41.5325,19.4883],288.141,1,false,[0,0],"","",false,true],["Land_DeskChair_01_black_F",[-5.73474,-40.8715,19.1907],270.101,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_bookcase_black_F",[-1.02966,-42.0922,19.1906],0.633644,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_7drawers_black_F",[0.476807,-42.1672,19.1906],0.376969,1,false,[0,0],"","",false,true],["Land_TentLamp_01_standing_F",[1.88269,-30.3391,16.7978],190.013,1,false,[0,0],"","",false,true],["Land_PortableDesk_01_black_F",[-0.281982,-42.2736,19.1675],0.332798,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-5.3197,-42.3422,19.1906],52.7975,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[5.20117,-42.4845,19.1906],310.474,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_closed_black_F",[6.09143,-41.2468,19.1906],270.07,1,false,[0,0],"","",false,true],["Land_PCSet_01_case_F",[1.00342,-42.2379,19.1906],0.25466,1,false,[0,0],"","",false,true],["Land_PCSet_01_case_F",[-1.58789,-42.2264,19.1906],359.929,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_closed_black_F",[1.30493,-41.8439,19.1906],163.694,1,false,[0,-0],"","",false,true],["Land_MultiScreenComputer_01_closed_black_F",[1.37,-42.2858,19.1906],343.525,1,false,[0,0],"","",false,true],["Land_DeskChair_01_black_F",[0.514771,-42.6298,19.1906],180.017,1,false,[0,0],"","",false,true],["Land_DeskChair_01_black_F",[-1.04309,-42.7142,19.1906],180.017,1,false,[0,0],"","",false,true],["MemorialWreath_01_F",[0.0900879,16.4678,12.6621],0,1,false,[0,0],"","",false,true],["I_E_HMG_02_F",[-10.8167,10.8949,11.9447],270,1,false,[0,0],"","",false,true],["Land_FlowerPot_01_Flower_F",[-0.808105,13.4264,11.8812],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-3.82617,10.329,11.8812],163.112,1,false,[0,-0],"","",false,true],["Land_Computer_01_black_F",[-0.0880127,16.0586,12.694],320.948,1,false,[0,0],"","",false,true],["Land_IPPhone_01_black_F",[0.319946,16.0809,12.694],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[5.50195,-30.62,13.617],180,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[-3.90027,38.7125,15.2104],45.2649,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[3.4314,10.1063,11.8812],47.5236,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[3.82532,10.0458,11.8812],343.827,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[3.31384,10.7993,11.8812],87.3298,1,false,[0,0],"","",false,true],["Land_CampingTable_small_F",[0.0899658,16.106,11.881],0,1,false,[0,0],"","",false,true],["Land_Camping_Light_F",[0.898438,13.1125,11.8812],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_folded_black_F",[0.627075,13.2262,11.8812],164.733,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[3.80847,17.3052,11.8812],332.817,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[0.944336,13.4652,11.8812],272.562,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[0.958008,13.9368,11.8812],272.562,1,false,[0,0],"","",false,true],["PlasticBarrier_01_white_F",[11.756,10.6899,11.951],268.819,1,false,[0,0],"","",false,true],["Land_Pallets_stack_F",[-3.88892,17.4481,11.8812],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[10.7581,40.2628,15.2338],18.3672,1,false,[0,0],"","",false,true],["B_SAM_System_01_F",[-0.00134277,-47.2848,15.0879],180,1,false,[0,0],"","",false,true],["B_SAM_System_02_F",[-0.00134277,50.6556,15.785],0,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Stratis_F",[6.93005,3.90002,9.772],180,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Enoch_F",[8.57996,3.90002,9.772],180,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Altis_F",[10.23,3.90002,9.772],180,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Tanoa_F",[11.88,3.90002,9.772],180,1,false,[0,0],"","",false,true],["Land_PortableLight_02_double_black_F",[-1.51648,-22.6902,10.361],262.021,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Malden_F",[13.53,3.90002,9.772],180,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[-0.0356445,-24.4457,10.3556],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[-9.45544,33.6196,11.1395],285.71,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-8.92798,8.41492,7.269],0.03,1,false,[0,0],"","",false,true],["Box_NATO_Ammo_F",[-4.83765,6.73035,8.38467],90,1,false,[0,-0],"","",false,true],["Land_PortableLight_02_single_black_F",[5.04797,-28.9669,10.3575],185.211,1,false,[0,0],"","",false,true],["Land_Sleeping_bag_folded_F",[-3.71973,14.1982,9.04858],275,1,false,[6.23696e-007,-90],"","",false,true],["Land_Shoot_House_Tunnel_Prone_F",[-8.46521,9.80188,7.26922],91.1031,1,false,[0,-0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-8.92798,11.235,7.269],180,1,false,[0,0],"","",false,true],["Land_Ammobox_rounds_F",[-3.71875,14.5195,8.83253],300,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-12.925,8.41699,7.269],0.03,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_Prone_F",[-8.00793,13.3099,7.269],270,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_open_black_F",[3.85791,5.42957,8.08482],12.578,1,false,[0,0],"","",false,true],["Land_GymRack_01_F",[-6.80457,4.69946,7.26922],180,1,false,[0,0],"","",false,true],["Land_MultiScreenComputer_01_closed_black_F",[6.24963,5.24658,8.08482],178.452,1,false,[0,-0],"","",false,true],["Land_MapBoard_F",[4.25098,4.58325,7.26922],183.635,1,false,[0,0],"","",false,true],["Land_BatteryPack_01_closed_black_F",[3.41687,5.24414,8.08482],90.9325,1,false,[0,-0],"","",false,true],["Land_MultiScreenComputer_01_closed_black_F",[6.82971,5.40991,8.08482],95.2743,1,false,[0,-0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-12.925,11.2354,7.26922],180,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-8.92798,14.804,7.269],0,1,false,[0,0],"","",false,true],["Land_MapBoard_F",[5.93994,4.49243,7.26922],180.897,1,false,[0,0],"","",false,true],["Land_Shoot_House_Panels_Window_F",[-8.00793,15.7239,7.269],270,1,false,[0,0],"","",false,true],["Land_Camping_Light_F",[4.27234,5.65417,8.08482],90.9325,1,false,[0,-0],"","",false,true],["B_supplyCrate_F",[-3.86621,5.10559,7.26922],270,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[-4.6908,6.59607,8.02579],180,1,false,[0,-0],"","",false,true],["Land_TentSolar_01_folded_olive_F",[-3.73047,13.6831,8.44357],268.86,1,false,[0,0],"","",false,true],["Land_Tableware_01_cup_F",[-3.79688,12.4546,8.40829],0,1,false,[0,0],"","",false,true],["Land_TripodScreen_01_large_black_F",[8.07996,7.27881,7.26922],0,1,false,[0,0],"","",false,true],["Land_PortableServer_01_cover_black_F",[4.84253,5.43677,8.08482],90.9325,1,false,[0,-0],"","",false,true],["Land_Tableware_01_cup_F",[-3.79688,12.4546,8.39187],0,1,false,[0,0],"","",false,true],["Land_laptop_03_closed_olive_F",[-3.70361,14.647,8.43987],90.0005,1,false,[0,-0],"","",false,true],["Land_PortableLight_02_single_folded_black_F",[-3.47742,8.33765,8.08481],153.693,1,false,[0,-0],"","",false,true],["Land_WaterBottle_01_pack_F",[-3.75732,14.1895,8.4394],275,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-8.92798,16.543,7.269],180,1,false,[0,0],"","",false,true],["Land_Tableware_01_cup_F",[-3.79688,12.4546,8.37359],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[8.65454,4.34241,7.26922],180,1,false,[0,0],"","",false,true],["Land_Tableware_01_cup_F",[-3.79688,12.4546,8.35717],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[3.32422,9.4845,7.26922],270,1,false,[0,0],"","",false,true],["Land_Tableware_01_cup_F",[-3.79688,12.4546,8.34342],0,1,false,[0,0],"","",false,true],["Land_Tableware_01_cup_F",[-3.79688,12.4546,8.327],0,1,false,[0,0],"","",false,true],["Land_Tableware_01_cup_F",[-3.79736,12.6108,8.3573],0.000108061,1,false,[85,-76.5335],"","",false,true],["Land_PCSet_Intel_02_F",[4.42468,12.1398,8.08482],195.452,1,false,[0,0],"","",false,true],["Land_TripodScreen_01_large_black_F",[10.2731,7.28064,7.26922],0,1,false,[0,0],"","",false,true],["Land_PCSet_Intel_01_F",[5.03943,12.0535,8.08482],180.452,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-12.925,14.804,7.269],0,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[7.73254,10.0344,8.08482],75,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[-0.072998,5.18896,7.2693],0,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[9.71057,9.97803,8.08482],176.257,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[-3.61755,6.59607,7.67728],180,1,false,[0,-0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-12.925,16.543,7.269],180,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[0.710938,-6.19641,7.26924],180,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[7.74817,11.7209,8.08482],105,1,false,[0,-0],"","",false,true],["B_Quadbike_01_F",[3.51294,30.958,8.80099],180,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[-4.6908,6.59607,7.67728],180,1,false,[0,-0],"","",false,true],["Land_PortableLight_02_double_black_F",[-1.32214,-13.6793,7.26899],212.821,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[10.6564,10.0891,8.08482],183.327,1,false,[0,0],"","",false,true],["Land_IPPhone_01_black_F",[3.98315,12.4193,8.08482],195.452,1,false,[0,0],"","",false,true],["Land_Microwave_01_F",[-3.69434,13.5078,8.08819],92.8519,1,false,[0,-0],"","",false,true],["Land_File1_F",[3.64282,12.3846,8.08482],30.4542,1,false,[0,0],"","",false,true],["Land_PCSet_01_mouse_F",[4.61914,12.459,8.09168],180.452,1,false,[0,0],"","",false,true],["B_Quadbike_01_F",[5.88696,30.958,8.8],0,1,false,[0,0],"","",false,true],["Land_PencilYellow_F",[7.47668,10.7151,8.08482],300,1,false,[0,0],"","",false,true],["Land_Meter3m_F",[1.60352,14.0448,8.13055],335.433,1,false,[0,0],"","",false,true],["Land_File1_F",[7.50793,10.8765,8.08482],285,1,false,[0,0],"","",false,true],["Land_Notepad_F",[8.6217,10.1365,8.08482],89.4416,1,false,[0,0],"","",false,true],["Land_PCSet_01_mousepad_F",[4.62256,12.45,8.08442],0.452282,1,false,[0,0],"","",false,true],["Land_PCSet_01_keyboard_F",[5.05664,12.4828,8.08482],165.45,1,false,[0,-0],"","",false,true],["Land_File1_F",[8.88684,10.1345,8.08482],178.539,1,false,[0,-0],"","",false,true],["Land_PencilYellow_F",[8.76282,10.1858,8.08482],185.843,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[11.7198,10.0625,8.08482],165,1,false,[0,-0],"","",false,true],["Land_Laptop_03_black_F",[9.73157,12.019,8.08482],180,1,false,[0,-0],"","",false,true],["Land_Wrench_F",[1.51367,14.0219,8.12398],150.197,1,false,[0,-0],"","",false,true],["Land_Screwdriver_V1_F",[1.68164,14.2816,8.12417],55.316,1,false,[0,0],"","",false,true],["Land_Screwdriver_V2_F",[1.56543,14.2797,8.1221],13.263,1,false,[0,0],"","",false,true],["Land_PenRed_F",[7.43665,11.7126,8.08482],90,1,false,[0,-0],"","",false,true],["Land_Tableware_01_stackOfNapkins_F",[-3.70605,13.8115,8.08569],347.852,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[4.1449,5.42969,7.26922],180.935,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[-14.6965,4.38855,7.26922],237.173,1,false,[0,0],"","",false,true],["Land_Notepad_F",[7.45618,11.9014,8.08482],345,1,false,[0,0],"","",false,true],["Land_GymBench_01_F",[-9.7019,4.83301,7.269],180,1,false,[0,0],"","",false,true],["B_Quadbike_01_F",[8.26013,30.9578,8.80036],0,1,false,[0,0],"","",false,true],["Land_PenBlack_F",[9.83167,10.25,8.08482],190.32,1,false,[0,0],"","",false,true],["Land_Notepad_F",[9.98206,10.2012,8.08482],75,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[10.7946,11.9614,8.08482],165,1,false,[0,-0],"","",false,true],["Land_WaterCooler_01_old_F",[-3.67627,12.5342,7.26922],90,1,false,[0,-0],"","",false,true],["Book_02_F",[7.4967,12.1128,8.08482],270,1,false,[0,0],"","",false,true],["Land_PaperBox_01_open_water_F",[10.5961,4.86951,7.267],0,1,false,[0,0],"","",false,true],["MapBoard_seismic_F",[13.967,8.13599,7.269],152.7,1,false,[0,-0],"","",false,true],["Book_02_F",[10.3429,10.1279,8.08482],6.21549e-005,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[6.09961,5.40002,7.26922],180.935,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-3.70325,9.33093,7.26922],138.412,1,false,[0,-0],"","",false,true],["Land_OfficeCabinet_02_F",[-3.70557,13.667,7.26922],90,1,false,[0,-0],"","",false,true],["Land_Camping_Light_F",[7.49329,14.1228,8.08482],0,1,false,[0,0],"","",false,true],["Land_MysteriousBell_01_F",[-7.08594,11.0037,7.269],270,1,false,[0,0],"","",false,true],["Land_Map_F",[-3.73242,14.4106,8.09249],305,1,false,[0,0],"","",false,true],["Land_Tableware_01_cup_F",[-3.83008,12.5991,7.91131],0,1,false,[0,0],"","",false,true],["Land_PencilYellow_F",[-3.73145,14.6465,8.10449],115.001,1,false,[0,-0],"","",false,true],["Land_Laptop_03_black_F",[12.8033,10.804,8.08482],255,1,false,[0,0],"","",false,true],["Land_Notepad_F",[-3.68115,14.6675,8.09301],330,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_7drawers_black_F",[7.31604,5.36182,7.26922],271.479,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[8.95667,14.3181,8.08482],165,1,false,[0,-0],"","",false,true],["Land_PenBlack_F",[9.33118,11.9873,8.08482],150,1,false,[0,-0],"","",false,true],["Land_PenBlack_F",[11.3893,10.2349,8.08482],220.362,1,false,[0,0],"","",false,true],["Land_Notepad_F",[9.41516,12.1272,8.08482],75,1,false,[0,0],"","",false,true],["Land_CampingTable_F",[-4.18225,8.41101,7.26922],0,1,false,[0,0],"","",false,true],["Land_OfficeCabinet_02_F",[-3.70557,14.46,7.26922],90,1,false,[0,-0],"","",false,true],["Land_PaperBox_01_open_empty_F",[12.139,4.86365,7.26923],0,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[12.8024,11.7502,8.08482],270,1,false,[0,0],"","",false,true],["Land_GymRack_02_F",[-12.5748,4.46045,7.26922],180.531,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[9.79211,14.3923,8.08482],180,1,false,[0,0],"","",false,true],["Land_Target_Swivel_01_F",[-14.3723,9.82703,7.26922],270,1,false,[0,0],"","",false,true],["#animator",[-14.3723,9.82703,8.24905],0,0,true,[0,0],"","",true,true],["Book_02_F",[10.0592,12.1169,8.08482],6.21549e-005,1,false,[0,0],"","",false,true],["Land_Target_Dueling_01_F",[-14.105,15.4236,8.082],90,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[6.78845,9.89807,7.26922],255,1,false,[0,0],"","",false,true],["Land_Notepad_F",[12.8766,9.85938,8.08482],165,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[-3.61755,6.59607,7.32539],180,1,false,[0,-0],"","",false,true],["Land_PenRed_F",[12.8463,10.0139,8.08482],90,1,false,[0,-0],"","",false,true],["Land_Target_Dueling_01_F",[-14.105,15.9056,8.082],270,1,false,[0,0],"","",false,true],["Box_NATO_Ammo_F",[-5.2085,7.21399,7.26922],90,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[-4.6908,6.59607,7.32539],180,1,false,[0,-0],"","",false,true],["Land_Document_01_F",[7.86633,14.4854,8.08482],180,1,false,[0,-0],"","",false,true],["Land_File1_F",[8.57922,14.1597,8.08482],90,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[6.72498,11.0057,7.26922],270,1,false,[0,0],"","",false,true],["Land_PaperBox_01_open_boxes_F",[13.6986,4.82849,7.26922],0,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[7.86584,16.7651,8.08482],180,1,false,[0,-0],"","",false,true],["Land_PortableCabinet_01_closed_black_F",[4.59644,5.47327,7.26922],285.934,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[11.8488,14.3257,8.08482],180,1,false,[0,-0],"","",false,true],["Land_Camping_Light_F",[-2.97021,15.8218,7.88558],290,1,false,[-7.92309e-005,-0.121897],"","",false,true],["Book_02_F",[12.8165,11.2097,8.08482],90.0001,1,false,[0,-0],"","",false,true],["Target_PopUp_Moving_90deg_Acc2_F",[-14.1219,12.97,7.26922],270,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[-3.87781,7.34473,7.26922],180,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[8.65784,16.6997,8.08482],195,1,false,[0,0],"","",false,true],["Land_Notepad_F",[9.47961,14.4805,8.08482],90,1,false,[0,-0],"","",false,true],["Land_PaperBox_open_full_F",[13.3392,6.78259,7.26923],308.743,1,false,[0,0],"","",false,true],["TrashBagHolder_01_F",[-3.68506,12.0972,7.26922],0,1,false,[0,0],"","",false,true],["Land_FlatTV_01_F",[-6.00208,19.3456,8.08469],90,1,false,[0,-0],"","",false,true],["Land_PortableCabinet_01_closed_black_F",[6.2356,5.38293,7.26922],1.67062,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[6.7312,12.041,7.26922],270,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[8.651,10.8541,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[12.1188,53.1217,15.2321],312.926,1,false,[0,0],"","",false,true],["Land_MysteriousBell_01_F",[-7.03796,14.5302,7.269],270,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[4.88452,13.0844,7.26922],0.452282,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[12.8546,14.259,8.08482],165,1,false,[0,-0],"","",false,true],["Land_CerealsBox_F",[-3.67041,12.0254,7.51725],0,1,false,[25,0],"","",false,true],["Land_File1_F",[12.899,12.0874,8.08482],105,1,false,[0,-0],"","",false,true],["Land_CampingTable_white_F",[8.2428,10.0071,7.26922],180,1,false,[0,-0],"","",false,true],["Land_PalletTrolley_01_yellow_F",[12.9896,7.05505,7.26923],36.9172,1,false,[0,0],"","",false,true],["Land_PencilYellow_F",[12.9171,12.238,8.08482],90,1,false,[0,-0],"","",false,true],["Land_CampingTable_white_F",[4.39661,12.3347,7.26922],180.452,1,false,[0,0],"","",false,true],["Land_PenBlack_F",[10.3805,14.5127,8.08482],150,1,false,[0,-0],"","",false,true],["Land_Target_Oval_F",[-13.479,9.03369,7.26922],90,1,false,[0,-0],"","",false,true],["Land_Notepad_F",[10.5123,14.5266,8.08482],90,1,false,[0,-0],"","",false,true],["PowerCable_01_Corner_F",[4.44751,3.97864,7.26922],180.481,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[9.67639,10.8549,7.26922],0,1,false,[0,0],"","",false,true],["PowerCable_01_StraightShort_F",[4.01025,5.01831,7.26922],0.480154,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_bookcase_black_F",[5.54333,12.3273,7.26922],270.45,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[-1.74097,-14.9506,7.26904],320.851,1,false,[0,0],"","",false,true],["Land_GymBench_01_F",[-14.4464,5.96948,7.26922],270,1,false,[0,0],"","",false,true],["TargetP_Inf8_F",[-14.2664,11.91,7.26922],256.185,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[7.66711,11.3845,7.26922],90,1,false,[0,0],"","",false,true],["Leaflet_05_F",[-3.66406,12.2397,7.59615],0,1,false,[80,0],"","",false,true],["PowerCable_01_Corner_F",[4.43262,6.02466,7.26922],270.483,1,false,[0,0],"","",false,true],["Land_File1_F",[11.5206,14.5295,8.08482],15,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[10.6652,10.8258,7.26922],0,1,false,[0,0],"","",false,true],["Land_WaterBottle_01_compressed_F",[-3.75635,12.1519,7.55544],0,1,false,[-35,0],"","",false,true],["Land_Stretcher_01_F",[-8.7677,7.83972,7.26922],270,1,false,[0,0],"","",false,true],["Land_Tableware_01_cup_F",[-3.65381,12.1475,7.51085],280,1,false,[0,0],"","",false,true],["Land_Tableware_01_cup_F",[-3.5874,12.1768,7.55647],0.000108061,1,false,[85,-76.5335],"","",false,true],["Land_CampingTable_white_F",[10.1974,10.0051,7.26922],180,1,false,[0,-0],"","",false,true],["Land_Target_Oval_F",[-13.479,10.6294,7.269],90,1,false,[0,-0],"","",false,true],["Land_CampingTable_F",[-7.297,12.3209,7.26899],90,1,false,[0,-0],"","",false,true],["Land_PalletTrolley_01_yellow_F",[14.6107,6.38708,7.26923],106.346,1,false,[0,-0],"","",false,true],["Land_Notepad_F",[8.16516,16.9514,8.08482],75,1,false,[0,0],"","",false,true],["Land_MysteriousBell_01_F",[-7.03796,16.2529,7.269],270,1,false,[0,0],"","",false,true],["Land_Can_Dented_F",[-3.61279,12.1875,7.50835],235,1,false,[0,0],"","",false,true],["Land_PCSet_01_case_F",[3.26221,12.2684,7.26922],0.452174,1,false,[0,0],"","",false,true],["Land_PenRed_F",[8.72375,16.9829,8.08482],210,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[11.9757,16.7007,8.08482],165,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[11.6906,10.8104,7.26948],0,1,false,[0,0],"","",false,true],["Land_Tableware_01_knife_F",[-3.62646,12.1265,7.51265],0,1,false,[0,0],"","",false,true],["Land_Notepad_F",[8.89221,16.9858,8.08482],90,1,false,[0,-0],"","",false,true],["Land_FlowerPot_01_F",[-6.72803,8.56177,7.26922],0,1,false,[0,0],"","",false,true],["CargoNet_01_barrels_F",[-4.03296,15.7834,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[9.7301,12.7831,7.26922],0,1,false,[0,0],"","",false,true],["Land_PencilYellow_F",[9.9054,16.7751,8.08482],15,1,false,[0,0],"","",false,true],["PowerCable_01_StraightLong_F",[7.43616,6.46655,7.26922],90,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-14.5531,7.54138,7.26922],288.786,1,false,[0,0],"","",false,true],["CargoNet_01_box_F",[-4.01196,17.3673,7.26921],0,1,false,[0,0],"","",false,true],["TargetP_Inf8_F",[-14.2457,14.0878,7.26922],291.407,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[10.6642,12.7719,7.26922],0,1,false,[0,0],"","",false,true],["Land_Laptop_03_olive_F",[-9.32178,18.978,8.08469],350.673,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[8.79797,19.2449,8.08482],180,1,false,[0,-0],"","",false,true],["Land_CampingTable_white_F",[10.1715,11.9697,7.26922],180,1,false,[0,-0],"","",false,true],["Land_CampingTable_small_F",[-7.297,13.8301,7.269],90,1,false,[0,-0],"","",false,true],["Land_CampingTable_white_F",[12.1486,10.0051,7.26922],180,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[13.6486,9.76392,7.26922],120,1,false,[0,-0],"","",false,true],["Box_NATO_Ammo_F",[3.88013,13.6849,7.26922],90,1,false,[0,-0],"","",false,true],["PowerCable_01_Roll_F",[10.0306,6.06543,7.26922],345.056,1,false,[0,0],"","",false,true],["Land_Rug_01_Traditional_F",[-7.91602,6.82703,7.269],270,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_closed_black_F",[3.94714,12.2559,7.26922],285.45,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[9.65442,19.1196,8.08482],195,1,false,[0,0],"","",false,true],["Land_File1_F",[10.8048,16.9297,8.08482],1.27498e-005,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[-5.32471,20.3882,7.26922],51.6327,1,false,[0,0],"","",false,true],["Land_Laptop_03_olive_F",[-8.94336,19.5469,8.08469],166.742,1,false,[0,-0],"","",false,true],["Land_Stretcher_01_F",[-11.8143,7.83374,7.26922],270,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[7.85657,15.2985,7.26948],0,1,false,[0,0],"","",false,true],["Land_FilePhotos_F",[-6.98584,18.9854,8.08469],54.8684,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[13.6281,10.8511,7.26922],90,1,false,[0,0],"","",false,true],["Land_PencilYellow_F",[11.4166,16.9912,8.08482],15,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[8.29309,14.354,7.26922],0,1,false,[0,0],"","",false,true],["PowerCable_01_Roll_F",[11.0814,6.31128,7.26922],277.112,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[8.79065,15.2872,7.26948],0,1,false,[0,0],"","",false,true],["B_MRAP_01_F",[3.30969,38.0033,8.80068],270,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[10.9469,19.0974,8.08482],165,1,false,[0,-0],"","",false,true],["Land_File1_F",[7.67102,19.2405,8.08482],15,1,false,[0,0],"","",false,true],["Book_02_F",[11.8551,16.9761,8.08482],6.21549e-005,1,false,[0,0],"","",false,true],["Reflector_Cone_01_narrow_white_F",[-7.01099,9.82703,7.269],269.522,1,false,[0,0],"","",false,true],["Land_PenRed_F",[7.8468,19.2485,8.08482],30,1,false,[0,0],"","",false,true],["Land_Map_altis_F",[-7.65674,19.3213,8.08509],268.277,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[6.98755,20.6343,7.26922],0,1,false,[0,0],"","",false,true],["PowerCable_01_StraightShort_F",[10.4288,6.46509,7.26922],90,1,false,[0,-0],"","",false,true],["Land_Notepad_F",[7.98938,19.2974,8.08482],90,1,false,[0,-0],"","",false,true],["Land_Document_01_F",[-6.95398,19.6539,8.08499],220.646,1,false,[0,0],"","",false,true],["Land_PenBlack_F",[-8.73535,18.9814,8.08469],165.87,1,false,[0,-0],"","",false,true],["Land_Notepad_F",[-8.84766,18.9619,8.08469],266.894,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[13.6393,11.7852,7.26922],90,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[12.7189,11.3794,7.26922],270,1,false,[0,0],"","",false,true],["Book_01_F",[8.51135,19.1646,8.08482],2.73208e-005,1,false,[0,0],"","",false,true],["Steel_Plate_F",[-11.391,9.37708,7.26922],88.9511,1,false,[0,0],"","",false,true],["Land_CampingTable_small_F",[-7.25745,15.4976,7.26901],90,1,false,[0,-0],"","",false,true],["Land_PlasticBarrier_03_F",[15.0017,8.54626,7.26922],280.92,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[9.77649,15.2899,7.26948],0,1,false,[0,0],"","",false,true],["Box_NATO_AmmoVeh_F",[5.88257,19.9181,7.26922],0,1,false,[0,0],"","",false,true],["Land_GymRack_01_F",[-12.089,19.8376,7.26922],0,1,false,[0,0],"","",false,true],["Land_Notepad_F",[12.8024,16.9026,8.08482],75,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[11.7599,19.2349,8.08482],180,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[3.88684,14.5005,7.26922],0,1,false,[0,0],"","",false,true],["Land_PenRed_F",[12.9269,17.0198,8.08482],345,1,false,[0,0],"","",false,true],["Steel_Plate_F",[-11.391,10.2306,7.269],88.951,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[10.2443,14.354,7.26922],0,1,false,[0,0],"","",false,true],["Land_File_research_F",[-8.31494,19.72,8.08499],149.017,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[10.7106,15.2787,7.26948],0,1,false,[0,0],"","",false,true],["Land_IPPhone_01_olive_F",[-9.45801,19.5815,8.08469],179.388,1,false,[0,-0],"","",false,true],["Land_BottlePlastic_V2_F",[-14.4966,17.2634,8.08521],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[-15.0577,9.94727,7.26921],88.7081,1,false,[0,0],"","",false,true],["Land_PenBlack_F",[9.66516,19.4153,8.08482],150,1,false,[0,-0],"","",false,true],["Land_BottlePlastic_V2_F",[-14.6515,17.3203,8.08521],0,1,false,[0,0],"","",false,true],["Land_Notepad_F",[9.81946,19.3779,8.08482],75,1,false,[0,0],"","",false,true],["Steel_Plate_F",[-12.3518,9.80151,7.26922],88.9511,1,false,[0,0],"","",false,true],["Land_File1_F",[10.5446,19.0051,8.08482],1.27498e-005,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[3.90063,15.2334,7.26922],0,1,false,[0,0],"","",false,true],["Land_BottlePlastic_V2_F",[-14.5526,17.5134,8.08521],0,1,false,[0,0],"","",false,true],["Land_Rug_01_F",[-11.9191,6.82739,7.26922],270,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[11.797,15.233,7.26948],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[15.199,10.4937,7.26922],270.449,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[7.96545,17.6339,7.26948],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_double_black_F",[7.52661,-39.5901,10.3536],102.744,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[-6.26807,18.5596,7.26909],181.648,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[8.34778,16.783,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[12.1989,14.3521,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[8.89954,17.6227,7.26948],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[12.7311,15.238,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-7.25,18.5195,7.26909],167.14,1,false,[0,-0],"","",false,true],["Land_PlasticBarrier_03_F",[-15.0938,11.9175,7.26921],88.7081,1,false,[0,0],"","",false,true],["Reflector_Cone_01_narrow_white_F",[-8.15198,12.97,7.269],269.522,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[9.88538,17.6254,7.26948],0,1,false,[0,0],"","",false,true],["Land_PenBlack_F",[12.463,19.2112,8.08482],15,1,false,[0,0],"","",false,true],["Land_Notepad_F",[12.5851,19.1843,8.08482],90,1,false,[0,-0],"","",false,true],["Land_PlasticBarrier_03_F",[15.2013,12.4703,7.26922],270.449,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[10.299,16.783,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-9.11816,18.4023,7.26909],165.942,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[10.8195,17.6141,7.26948],0,1,false,[0,0],"","",false,true],["PortableHelipadLight_01_white_F",[14.7421,8.33496,7.26921],0,1,false,[0,0],"","",false,true],["PortableHelipadLight_01_white_F",[-15.0028,7.90601,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingTable_F",[-6.75537,18.9253,7.26909],178.967,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[-6.31934,20.1157,7.26909],0.102865,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[11.9059,17.5685,7.26948],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[-15.1515,13.8932,7.26921],88.7081,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[7.86292,19.9894,7.26948],0,1,false,[0,0],"","",false,true],["B_Slingload_01_Repair_F",[-5.71521,35.6956,8.80068],0,1,false,[0,0],"","",false,true],["Land_Obstacle_Ramp_F",[-9.56665,55.9307,15.2347],180,1,false,[-0.205988,-6.71199e-008],"","",false,true],["Land_CampingTable_white_F",[12.2535,16.781,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingTable_F",[-8.70361,18.8882,7.26909],178.967,1,false,[0,-0],"","",false,true],["Land_CampingTable_F",[-6.77148,19.7295,7.26909],358.967,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[8.34143,19.1606,7.26922],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[15.2111,14.4398,7.26922],270.449,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[12.84,17.5735,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-8.21777,20.1709,7.26909],0.748378,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[8.797,19.9781,7.26948],0,1,false,[0,0],"","",false,true],["Land_FlowerPot_01_Flower_F",[-14.5339,19.3185,7.26922],135,1,false,[0,-0],"","",false,true],["Land_CampingTable_small_F",[-14.1456,15.6592,7.26921],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-13.3944,17.39,7.26922],109.133,1,false,[0,-0],"","",false,true],["Reflector_Cone_01_narrow_white_F",[-8.15002,15.6589,7.269],269.522,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[9.78284,19.9808,7.26948],0,1,false,[0,0],"","",false,true],["Land_CampingTable_F",[-8.71973,19.6924,7.26909],358.967,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-9.28662,20.2944,7.26909],326.393,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[10.2926,19.1606,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[10.7169,19.9696,7.26948],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[-15.2006,15.8619,7.26922],88.7081,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[15.2134,16.4165,7.26922],270.449,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[11.8033,19.924,7.26948],0,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[12.2472,19.1587,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[12.7374,19.929,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingTable_F",[-14.4625,17.9285,7.26921],269.16,1,false,[0,0],"","",false,true],["Land_GymRack_03_F",[-14.1282,20.0273,7.26922],315.081,1,false,[0,0],"","",false,true],["Land_WoodenCrate_01_F",[-9.0918,58.6705,15.908],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[-15.2595,17.8384,7.26922],88.7081,1,false,[0,0],"","",false,true],["Land_WoodenCrate_01_F",[-9.93298,58.6711,15.908],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[15.2378,18.3871,7.26922],270.449,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[14.5627,20.0946,7.26922],226.718,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[-15.1219,19.79,7.26922],99.1785,1,false,[0,-0],"","",false,true],["Land_TentLamp_01_standing_F",[1.16699,25.0071,7.28363],44.7928,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[7.69849,-42.1648,10.3774],293.302,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[-7.49121,-42.2095,10.3774],67.8899,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[5.12732,41.0063,8.80068],0,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_F",[2.48547,41.6995,8.80067],45,1,false,[0,0],"","",false,true],["PortableHelipadLight_01_white_F",[15.2737,20.5663,7.26922],0,1,false,[0,0],"","",false,true],["PortableHelipadLight_01_white_F",[-15.2883,20.7053,7.26922],0,1,false,[0,0],"","",false,true],["Land_WoodenCrate_01_F",[-9.07996,58.6711,15.231],0,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[9.11792,41.006,8.80099],0,1,false,[0,0],"","",false,true],["Land_WoodenCrate_01_F",[-9.92065,58.6688,15.231],0,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_F",[1.09204,43.1045,8.80068],45,1,false,[0,0],"","",false,true],["Box_NATO_Equip_F",[9.19604,43.033,10.276],0,1,false,[0,0],"","",false,true],["B_Slingload_01_Ammo_F",[-5.71497,42.458,8.80099],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[8.82739,40.3612,8.80068],52.7112,1,false,[0,0],"","",false,true],["Box_NATO_Uniforms_F",[5.125,45.572,10.323],0,1,false,[0,0],"","",false,true],["Target_PopUp_Moving_90deg_F",[2.79468,42.4207,8.80068],225,1,false,[0,0],"","",false,true],["Land_Metal_wooden_rack_F",[9.23486,41.7672,8.80068],90,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[8.41174,45.6909,10.5396],0,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[0.399048,45.7324,8.80099],90,1,false,[0,-0],"","",false,true],["Target_PopUp_Alien1_Moving_F",[1.84973,43.4039,8.80068],225,1,false,[0,0],"","",false,true],["Box_NATO_Ammo_F",[7.74902,44.2991,9.91613],90,1,false,[0,-0],"","",false,true],["Land_SportGround_fence_F",[7.0885,43.7101,8.80068],180,1,false,[0,0],"","",false,true],["Box_NATO_Equip_F",[9.19604,43.033,9.53799],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[7.9353,41.4132,8.80068],148.595,1,false,[0,-0],"","",false,true],["Box_NATO_WpsSpecial_F",[8.64026,46.854,10.5393],90,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[8.41174,45.6909,10.1788],0,1,false,[0,0],"","",false,true],["Box_NATO_Ammo_F",[3.55896,41.3879,8.80068],90,1,false,[0,-0],"","",false,true],["Land_Metal_wooden_rack_F",[5.32031,44.1809,8.80068],0,1,false,[0,0],"","",false,true],["Box_NATO_Ammo_F",[4.44104,41.3879,8.80099],90,1,false,[0,-0],"","",false,true],["Land_Metal_wooden_rack_F",[6.53003,44.181,8.80099],0,1,false,[0,0],"","",false,true],["Box_NATO_Ammo_F",[5.29822,41.3879,8.80099],90,1,false,[0,-0],"","",false,true],["Box_NATO_Support_F",[7.09705,41.3879,8.801],90,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[5.78638,48.2758,10.5574],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[7.89587,44.1648,9.55725],180,1,false,[0,-0],"","",false,true],["Box_NATO_Uniforms_F",[5.125,45.572,9.562],0,1,false,[0,0],"","",false,true],["Box_NATO_WpsLaunch_F",[0.800293,44.9545,9.55032],90,1,false,[0,-0],"","",false,true],["Box_NATO_WpsLaunch_F",[1.1875,44.9545,9.55032],90,1,false,[0,-0],"","",false,true],["Box_NATO_WpsSpecial_F",[8.64026,46.854,10.1785],90,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[8.41174,45.6909,9.8179],0,1,false,[0,0],"","",false,true],["Land_SportGround_fence_F",[4.55286,46.3109,8.80068],90,1,false,[0,-0],"","",false,true],["Land_Ammobox_rounds_F",[8.4574,41.323,8.80068],304.549,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[1.12646,44.451,9.15042],180,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[5.10193,48.2759,10.2055],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Equip_F",[9.19568,43.0333,8.80068],0,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[7.89587,44.1648,9.20875],180,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[5.78638,48.2758,10.2055],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.10144,47.2032,9.86402],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[8.96912,44.1648,9.20875],180,1,false,[0,-0],"","",false,true],["Box_NATO_WpsSpecial_F",[8.64026,46.854,9.81763],90,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[1.41748,45.1547,9.15042],180,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[8.41174,45.6909,9.47732],0,1,false,[0,0],"","",false,true],["Land_BackAlley_01_l_gate_F",[0.399048,49.3519,8.80099],90,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[1.13306,46.6625,9.49892],180,1,false,[0,-0],"","",false,true],["Box_NATO_Ammo_F",[1.93848,44.6493,8.85538],90,1,false,[0,-0],"","",false,true],["Land_Ammobox_rounds_F",[8.37549,43.4204,8.83147],211.557,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[1.12646,44.451,8.79852],180,1,false,[0,-0],"","",false,true],["Land_Ammobox_rounds_F",[7.91211,43.4429,8.80068],152.902,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[1.12646,45.8632,9.15042],180,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[5.10193,48.2759,9.85296],270.01,1,false,[0,0],"","",false,true],["Land_PortableLight_02_double_black_F",[0.873169,47.4567,8.80068],270,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.78638,48.2758,9.85296],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Ammo_F",[2.37939,45.1385,8.84821],1.36604e-005,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[7.89587,44.1648,8.85685],180,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[5.10144,47.2032,9.51153],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[8.96912,44.1648,8.85685],180,1,false,[0,-0],"","",false,true],["Box_NATO_Ammo_F",[7.37817,44.7827,8.80068],90,1,false,[0,-0],"","",false,true],["Box_NATO_WpsSpecial_F",[8.64026,46.854,9.47705],90,1,false,[0,0],"","",false,true],["Box_NATO_Uniforms_F",[5.12476,45.572,8.80068],0,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[8.41174,45.6909,9.13573],0,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[1.41748,45.1547,8.79852],180,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[9.32385,46.854,9.47705],90,1,false,[0,0],"","",false,true],["B_Slingload_01_Fuel_F",[-5.71497,49.25,8.801],0,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[1.13306,46.6625,9.15042],180,1,false,[0,-0],"","",false,true],["Land_PierLadder_F",[-9.93298,60.333,13.7625],180,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[8.70886,44.9135,8.80068],180,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[1.12646,45.8632,8.79852],180,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[5.10193,48.2759,9.50107],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.78638,48.2758,9.50107],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.10144,47.2032,9.15257],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.78687,47.203,9.15257],270.01,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[8.64026,46.854,9.13546],90,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[8.41174,45.6909,8.80095],0,1,false,[0,0],"","",false,true],["Box_NATO_Grenades_F",[8.55103,48.155,9.35201],270,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[9.32385,46.854,9.13546],90,1,false,[0,0],"","",false,true],["Box_NATO_Grenades_F",[9.29602,48.155,9.35201],270,1,false,[0,0],"","",false,true],["Land_PortableLight_02_double_black_F",[-9.3855,48.5236,8.80068],0,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[1.13306,46.6625,8.79852],180,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[5.10193,48.2759,9.15257],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.78638,48.2758,9.15257],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.10144,47.2029,8.80067],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.78687,47.203,8.80067],270.01,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[8.64026,46.854,8.80068],90,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[0.398682,52.9781,8.80068],90,1,false,[0,-0],"","",false,true],["Box_NATO_WpsSpecial_F",[9.32385,46.854,8.80068],90,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.10193,48.2759,8.80067],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Grenades_F",[8.55103,48.155,8.80099],270,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.78638,48.2758,8.80067],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Grenades_F",[9.29602,48.155,8.801],270,1,false,[0,0],"","",false,true],["B_supplyCrate_F",[9.04688,50.5918,8.80068],90,1,false,[0,-0],"","",false,true],["B_CargoNet_01_ammo_F",[1.48706,51.8402,8.80068],0,1,false,[0,0],"","",false,true],["B_Boat_Armed_01_minigun_F",[-21.483,0,0.0679932],180,1,false,[0,0],"","",false,true],["Box_NATO_AmmoOrd_F",[9.28198,51.7579,9.35201],0,1,false,[0,0],"","",false,true],["Land_SportGround_fence_F",[7.09973,53.5413,8.80068],180,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_F",[1.08325,55.6138,8.80068],315,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[6.86365,52.8621,9.52279],180,1,false,[0,-0],"","",false,true],["Box_NATO_AmmoOrd_F",[9.26697,52.4769,9.35201],0,1,false,[0,0],"","",false,true],["Box_NATO_WpsLaunch_F",[5.44922,53.0367,9.43267],180,1,false,[0,0],"","",false,true],["Land_MultiScreenComputer_01_black_F",[8.11072,54.0536,9.69685],178.595,1,false,[0,-0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[3.72595,56.297,8.80099],180,1,false,[0,0],"","",false,true],["Box_NATO_AmmoOrd_F",[8.54199,53.0649,9.35201],270,1,false,[0,0],"","",false,true],["Box_NATO_AmmoVeh_F",[-5.71497,53.313,8.80099],0,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[8.84314,54.0912,9.68762],146.145,1,false,[0,-0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[7.70532,56.2965,8.80068],180,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[6.86365,52.8621,9.1709],180,1,false,[0,-0],"","",false,true],["Land_IPPhone_01_black_F",[7.31494,54.1224,9.68762],195.208,1,false,[0,0],"","",false,true],["Land_Target_Dueling_01_F",[4.32495,53.158,8.80099],270,1,false,[0,0],"","",false,true],["Land_FlowerPot_01_Flower_F",[5.11206,54.0322,8.80068],0,1,false,[0,0],"","",false,true],["Box_NATO_AmmoOrd_F",[9.28223,51.7579,8.80068],0,1,false,[0,0],"","",false,true],["Box_NATO_WpsLaunch_F",[5.4458,53.0431,9.11667],180,1,false,[0,0],"","",false,true],["Land_TripodScreen_01_dual_v2_black_F",[1.59668,54.9922,8.80067],135,1,false,[0,-0],"","",false,true],["Box_NATO_AmmoOrd_F",[9.2666,52.4769,8.80068],0,1,false,[0,0],"","",false,true],["Box_NATO_Support_F",[1.08716,53.0416,8.71652],89.9999,1,false,[0.202,-0.0380005],"","",false,true],["Box_NATO_Support_F",[1.88062,53.037,8.66743],89.9999,1,false,[0.202,-0.0380005],"","",false,true],["Box_NATO_Wps_F",[6.86365,52.8621,8.81841],180,1,false,[0,-0],"","",false,true],["Box_NATO_AmmoOrd_F",[8.54175,53.0652,8.80068],270,1,false,[0,0],"","",false,true],["Box_NATO_WpsLaunch_F",[5.45117,53.0408,8.80068],180,1,false,[0,0],"","",false,true],["B_Ship_MRLS_01_F",[0.0133057,-62.4196,10.5237],180,1,false,[0,0],"","",false,true],["Land_PortableDesk_01_black_F",[8.12842,54.1173,8.80068],0,1,false,[0,0],"","",false,true],["Land_PortableGenerator_01_black_F",[6.05078,54.2249,8.80068],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[7.38879,54.8618,8.80068],357.865,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[9.25488,54.7441,8.80068],89.863,1,false,[0,0],"","",false,true],["Land_WaterBottle_01_full_F",[2.85547,56.9369,9.6106],250,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[3.04004,55.6267,8.80068],310.376,1,false,[0,0],"","",false,true],["Land_DeskChair_01_black_F",[8.95898,54.2341,8.80068],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[4.37537,55.7103,8.80068],26.6572,1,false,[0,0],"","",false,true],["Land_Map_blank_F",[3.85938,56.848,9.61233],274.695,1,false,[0,0],"","",false,true],["Land_PenBlack_F",[4.15918,56.9193,9.6182],330.964,1,false,[0,0],"","",false,true],["Land_Notepad_F",[4.26465,56.974,9.61759],58.3615,1,false,[0,0],"","",false,true],["Land_File1_F",[3.16895,57.052,9.616],195.512,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[-9.38635,56.7433,8.80068],281.835,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_bookcase_black_F",[9.37671,55.2653,8.80068],90,1,false,[0,-0],"","",false,true],["Land_PortableCabinet_01_bookcase_black_F",[9.39111,55.8754,8.80068],90,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[4.98999,56.751,8.80099],180,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[5.82898,56.751,8.80099],180,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[6.79395,56.751,8.80099],180,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[7.78503,56.751,8.80099],180,1,false,[0,0],"","",false,true],["Land_CampingTable_F",[3.40527,56.9115,8.80068],359.219,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[8.81201,56.751,8.80099],180,1,false,[0,0],"","",false,true],["Land_RotorCoversBag_01_F",[9.89746,56.797,8.80068],49.8936,1,false,[0,0],"","",false,true],["CamCurator",[-143.355,-96.7196,116.673],60.2957,0,true,[-43.9966,-0.00035847],"","",true,true],["Land_Obstacle_Ramp_F",[-9.93298,62.1169,9.99125],0,1,false,[-0.206,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[10.9974,60.114,8.78183],174.753,1,false,[0,-0],"","",false,true],["Land_Destroyer_01_interior_03_F",[0,0,-0.65],360,1,false,[0,0],"","",true,true],["Land_Destroyer_01_hull_03_F",[0,0,-0.65],360,1,false,[0,0],"","",true,true],["Land_PortableLight_02_single_black_F",[-14.2081,58.938,8.78628],0,1,false,[0,0],"","",false,true],["Reflector_Cone_01_narrow_white_F",[10.2633,60.9379,8.77887],270,1,false,[0,0],"","",false,true],["Reflector_Cone_01_narrow_white_F",[-10.2729,60.938,8.77899],90,1,false,[0,-0],"","",false,true],["Land_PortableLight_02_quad_black_F",[-14.2587,62.9407,8.77167],230.367,1,false,[0,0],"","",false,true],["Land_Obstacle_Ramp_F",[-9.93298,64.282,8.77004],0,1,false,[-0.205584,0],"","",false,true],["B_Ship_Gun_01_F",[-0.00134277,-78.7819,12.0854],180,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[13.0631,65.0066,8.76424],141.746,1,false,[0,-0],"","",false,true],["B_Heli_Transport_03_unarmed_F",[0.287964,74.9535,8.68745],0,1,false,[0,0],"","",false,true],["Land_AirIntakePlug_01_F",[-10.6697,66.5044,8.75885],241.66,1,false,[0,0],"","",false,true],["Land_AirIntakePlug_04_F",[10.4359,66.8083,8.75837],147.734,1,false,[0,-0],"","",false,true],["PortableHelipadLight_01_white_F",[11.7178,68.7137,8.75885],0,1,false,[0,0],"","",false,true],["PortableHelipadLight_01_white_F",[-11.7267,68.7452,8.75886],0,1,false,[0,0],"","",false,true],["Land_Destroyer_01_hull_04_F",[0,45,-0.65],360,1,false,[0,0],"","",true,true],["Land_Destroyer_01_interior_04_F",[0,45,-0.65],360,1,false,[0,0],"","",true,true],["Land_Destroyer_01_interior_02_F",[0,-45,-0.65],360,1,false,[0,0],"","",true,true],["Land_Destroyer_01_hull_02_F",[0,-45,-0.65],360,1,false,[0,0],"","",true,true],["Reflector_Cone_01_narrow_white_F",[13.962,77.985,8.80105],86.0411,1,false,[-80.058,-0.000148352],"","",false,true],["Reflector_Cone_01_narrow_white_F",[-13.9637,78.0101,8.80127],288.056,1,false,[-79.7309,-56.6933],"","",false,true],["Land_HelipadEmpty_F",[-0.000366211,79.4036,8.76157],360,1,false,[0,0],"","",true,true],["I_HMG_02_high_F",[11.1503,84.022,8.76274],86.2658,1,false,[0,0],"","",false,true],["I_HMG_02_high_F",[-11.1083,84.4102,8.76285],275.431,1,false,[0,0],"","",false,true],["Reflector_Cone_01_narrow_white_F",[0.0224609,84.9771,8.76399],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-11.0079,86.1232,8.76328],43.5709,1,false,[0,0],"","",false,true],["Land_AirIntakePlug_02_F",[9.39966,89.333,8.76409],54.0947,1,false,[0,0],"","",false,true],["Land_AirIntakePlug_05_F",[-9.63611,89.7615,8.76421],269.694,1,false,[0,0],"","",false,true],["PortableHelipadLight_01_white_F",[-11.1693,90.6506,8.76442],0,1,false,[0,0],"","",false,true],["PortableHelipadLight_01_white_F",[11.1588,90.6665,8.76442],0,1,false,[0,0],"","",false,true],["ShipFlag_US_F",[-0.00012207,91.7633,8.76266],360,1,false,[0,0],"","",true,true],["Land_Destroyer_01_hull_05_F",[0,80,-0.65],360,1,false,[0,0],"","",true,true],["Reflector_Cone_01_wide_white_F",[0.0219727,89.3689,3.41229],0,1,false,[25.9488,0],"","",false,true],["Land_Destroyer_01_hull_01_F",[0,-85,-0.65],360,1,false,[0,0],"","",true,true],["Sign_Sphere100cm_F",[0,197.368,73.196],0,1,false,[0,0],"","",false,true],[1941.87,1821.41,185.97]];
						};
						case "Minimum": {
							_objectsArray = [["CamCurator",[-8.89783,-140.518,205.811],359.978,0,true,[-61.6735,-0.000702876],"","",true,true],["B_AAA_System_01_F",[-0.00134277,35.9135,19.2167],0,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Malden_F",[0.110962,-33.9811,20.357],0,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Stratis_F",[-1.41565,-33.9811,20.357],0,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Tanoa_F",[1.63672,-33.9811,20.357],0,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Altis_F",[3.16357,-33.9811,20.3565],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[1.74451,-31.2196,19.2572],296.873,1,false,[0,0],"","",false,true],["Land_Laptop_03_olive_F",[0.604492,-34.4124,20.0062],348.96,1,false,[0,0],"","",false,true],["Land_Laptop_03_olive_F",[-1.34009,-34.4143,20.0062],358.053,1,false,[0,0],"","",false,true],["Land_IPPhone_01_olive_F",[-0.209595,-34.5082,20.0062],2.1296,1,false,[0,0],"","",false,true],["Land_IPPhone_01_olive_F",[1.99988,-34.4924,20.0062],2.1296,1,false,[0,0],"","",false,true],["Land_TransferSwitch_01_F",[6.43689,-34.8037,20.1598],88.989,1,false,[0,0],"","",false,true],["Land_OfficeCabinet_01_F",[-5.51379,-34.2899,19.1906],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-1.40442,-34.9476,19.1906],179.824,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[1.80127,-34.9395,19.1906],179.327,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[0.912476,-34.9824,19.1906],166.173,1,false,[0,-0],"","",false,true],["Land_CampingTable_F",[1.29431,-34.5638,19.1906],178.971,1,false,[0,-0],"","",false,true],["Land_CampingTable_F",[-0.914673,-34.5787,19.1906],178.971,1,false,[0,-0],"","",false,true],["I_HMG_02_high_F",[9.8042,-37.8148,18.8199],130.905,1,false,[0,-0],"","",false,true],["I_HMG_02_high_F",[-9.81189,-37.8151,18.82],228.586,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-5.92395,-35.014,19.1906],301.588,1,false,[0,0],"","",false,true],["Land_TentLamp_01_standing_F",[0.270386,-38.3667,20.004],275.865,1,false,[0,0],"","",false,true],["Land_TentLamp_01_standing_F",[-0.265259,-38.3824,20.004],108.64,1,false,[0,-0],"","",false,true],["Land_Laptop_device_F",[0,-38.0565,19.9995],0,1,false,[0,0],"","",false,true],["Land_TripodScreen_01_dual_v2_black_F",[3.07324,-38.0823,19.1906],298.15,1,false,[0,0],"","",false,true],["Land_TripodScreen_01_dual_v2_black_F",[-2.87659,-38.1223,19.1906],73.8147,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-0.180786,-36.9886,19.1906],338.35,1,false,[0,0],"","",false,true],["Land_CampingTable_small_white_F",[0,-38.16,19.191],0,1,false,[0,0],"","",false,true],["Sign_Sphere100cm_F",[0.796509,-43.4977,20.9112],0,1,false,[0,0],"","",false,true],["Box_NATO_Equip_F",[6.12549,-37.9701,19.1906],0,1,false,[0,0],"","",false,true],["Box_NATO_Uniforms_F",[6.125,-39.246,19.191],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_folded_yellow_F",[5.5918,-27.3483,16.7978],87.2402,1,false,[0,0],"","",false,true],["Land_TentLamp_01_standing_F",[1.88269,-30.3391,16.7978],190.013,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-5.3197,-42.3422,19.1906],52.7975,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[5.20117,-42.4845,19.1906],310.474,1,false,[0,0],"","",false,true],["I_E_HMG_02_F",[-10.8167,10.8949,11.9447],270,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-3.82617,10.329,11.8812],163.112,1,false,[0,-0],"","",false,true],["Land_PortableLight_02_quad_black_F",[5.50195,-30.62,13.617],180,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[-3.90027,38.7125,15.2104],45.2649,1,false,[0,0],"","",false,true],["Land_Camping_Light_F",[0.898438,13.1125,11.8812],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_folded_black_F",[0.627075,13.2262,11.8812],164.733,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[3.80847,17.3052,11.8812],332.817,1,false,[0,0],"","",false,true],["PlasticBarrier_01_white_F",[11.756,10.6899,11.951],268.819,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[10.7581,40.2628,15.2338],18.3672,1,false,[0,0],"","",false,true],["B_SAM_System_01_F",[-0.00134277,-47.2848,15.0879],180,1,false,[0,0],"","",false,true],["B_SAM_System_02_F",[-0.00134277,50.6556,15.785],0,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Stratis_F",[6.93005,3.90002,9.772],180,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Enoch_F",[8.57996,3.90002,9.772],180,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Altis_F",[10.23,3.90002,9.772],180,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Tanoa_F",[11.88,3.90002,9.772],180,1,false,[0,0],"","",false,true],["Land_PortableLight_02_double_black_F",[-1.51648,-22.6902,10.361],262.021,1,false,[0,0],"","",false,true],["Land_MapBoard_01_Wall_Malden_F",[13.53,3.90002,9.772],180,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[-0.0356445,-24.4457,10.3556],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[-9.45544,33.6196,11.1395],285.71,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-8.92798,8.41492,7.269],0.03,1,false,[0,0],"","",false,true],["Box_NATO_Ammo_F",[-4.83765,6.73035,8.38467],90,1,false,[0,-0],"","",false,true],["Land_PortableLight_02_single_black_F",[5.04797,-28.9669,10.3575],185.211,1,false,[0,0],"","",false,true],["Land_Shoot_House_Tunnel_Prone_F",[-8.46521,9.80188,7.26922],91.1031,1,false,[0,-0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-8.92798,11.235,7.269],180,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-12.925,8.41699,7.269],0.03,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_Prone_F",[-8.00793,13.3099,7.269],270,1,false,[0,0],"","",false,true],["Land_MapBoard_F",[4.25098,4.58325,7.26922],183.635,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-12.925,11.2354,7.26922],180,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-8.92798,14.804,7.269],0,1,false,[0,0],"","",false,true],["Land_Camping_Light_F",[3.54053,5.43213,8.08482],90.9325,1,false,[0,-0],"","",false,true],["Land_MapBoard_F",[5.93994,4.49243,7.26922],180.897,1,false,[0,0],"","",false,true],["Land_Shoot_House_Panels_Window_F",[-8.00793,15.7239,7.269],270,1,false,[0,0],"","",false,true],["B_supplyCrate_F",[-3.86621,5.10559,7.26922],270,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[-4.6908,6.59607,8.02579],180,1,false,[0,-0],"","",false,true],["Land_TripodScreen_01_large_black_F",[8.07996,7.27881,7.26922],0,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-8.92798,16.543,7.269],180,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[8.65454,4.34241,7.26922],180,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[3.32422,9.4845,7.26922],270,1,false,[0,0],"","",false,true],["Land_PCSet_Intel_02_F",[4.42468,12.1398,8.08482],195.452,1,false,[0,0],"","",false,true],["Land_TripodScreen_01_large_black_F",[10.2731,7.28064,7.26922],0,1,false,[0,0],"","",false,true],["Land_PCSet_Intel_01_F",[5.03943,12.0535,8.08482],180.452,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-12.925,14.804,7.269],0,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[7.73254,10.0344,8.08482],75,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[-0.072998,5.18896,7.2693],0,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[9.71057,9.97803,8.08482],176.257,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[-3.61755,6.59607,7.67728],180,1,false,[0,-0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[-12.925,16.543,7.269],180,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[0.710938,-6.19641,7.26924],180,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[7.74817,11.7209,8.08482],105,1,false,[0,-0],"","",false,true],["B_Quadbike_01_F",[3.51294,30.958,8.80099],180,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[-4.6908,6.59607,7.67728],180,1,false,[0,-0],"","",false,true],["Land_PortableLight_02_double_black_F",[-1.32214,-13.6793,7.26899],212.821,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[10.6564,10.0891,8.08482],183.327,1,false,[0,0],"","",false,true],["Land_IPPhone_01_black_F",[3.98315,12.4193,8.08482],195.452,1,false,[0,0],"","",false,true],["B_Quadbike_01_F",[5.88696,30.958,8.8],0,1,false,[0,0],"","",false,true],["Land_PCSet_01_mouse_F",[4.61914,12.459,8.09168],180.452,1,false,[0,0],"","",false,true],["Land_Meter3m_F",[1.60352,14.0448,8.13055],335.433,1,false,[0,0],"","",false,true],["Land_PCSet_01_mousepad_F",[4.62256,12.45,8.08442],0.452282,1,false,[0,0],"","",false,true],["Land_PCSet_01_keyboard_F",[5.05664,12.4828,8.08482],165.45,1,false,[0,-0],"","",false,true],["Land_Laptop_03_black_F",[11.7198,10.0625,8.08482],165,1,false,[0,-0],"","",false,true],["Land_Laptop_03_black_F",[9.73157,12.019,8.08482],180,1,false,[0,-0],"","",false,true],["Land_Wrench_F",[1.51367,14.0219,8.12398],150.197,1,false,[0,-0],"","",false,true],["Land_Screwdriver_V1_F",[1.68164,14.2816,8.12417],55.316,1,false,[0,0],"","",false,true],["Land_Screwdriver_V2_F",[1.56543,14.2797,8.1221],13.263,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[4.1449,5.42969,7.26922],180.935,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[-14.6965,4.38855,7.26922],237.173,1,false,[0,0],"","",false,true],["B_Quadbike_01_F",[8.26013,30.9578,8.80036],0,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[10.7946,11.9614,8.08482],165,1,false,[0,-0],"","",false,true],["Land_PaperBox_01_open_water_F",[10.5961,4.86951,7.267],0,1,false,[0,0],"","",false,true],["MapBoard_seismic_F",[13.967,8.13599,7.269],152.7,1,false,[0,-0],"","",false,true],["Land_CampingTable_white_F",[6.09961,5.40002,7.26922],180.935,1,false,[0,0],"","",false,true],["Land_Camping_Light_F",[7.49329,14.1228,8.08482],0,1,false,[0,0],"","",false,true],["Land_MysteriousBell_01_F",[-7.08594,11.0037,7.269],270,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[12.8033,10.804,8.08482],255,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_7drawers_black_F",[7.31604,5.36182,7.26922],271.479,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[8.95667,14.3181,8.08482],165,1,false,[0,-0],"","",false,true],["Land_PaperBox_01_open_empty_F",[12.139,4.86365,7.26923],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-3.56323,8.95837,7.17139],138.412,1,false,[0,-0],"","",false,true],["Land_Laptop_03_black_F",[12.8024,11.7502,8.08482],270,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[9.79211,14.3923,8.08482],180,1,false,[0,0],"","",false,true],["Land_Target_Swivel_01_F",[-14.3723,9.82703,7.26922],270,1,false,[0,0],"","",false,true],["#animator",[-14.3723,9.82703,8.24905],0,0,true,[0,0],"","",true,true],["Land_Target_Dueling_01_F",[-14.105,15.4236,8.082],90,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[6.78845,9.89807,7.26922],255,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[-3.61755,6.59607,7.32539],180,1,false,[0,-0],"","",false,true],["Land_Target_Dueling_01_F",[-14.105,15.9056,8.082],270,1,false,[0,0],"","",false,true],["Box_NATO_Ammo_F",[-5.2085,7.21399,7.26922],90,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[-4.6908,6.59607,7.32539],180,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[6.72498,11.0057,7.26922],270,1,false,[0,0],"","",false,true],["Land_PaperBox_01_open_boxes_F",[13.6986,4.82849,7.26922],0,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[7.86584,16.7651,8.08482],180,1,false,[0,-0],"","",false,true],["Land_Laptop_03_black_F",[11.8488,14.3257,8.08482],180,1,false,[0,-0],"","",false,true],["Land_Camping_Light_F",[-2.97021,15.8218,7.88558],290,1,false,[-7.92309e-005,-0.121897],"","",false,true],["Target_PopUp_Moving_90deg_Acc2_F",[-14.1219,12.97,7.26922],270,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[-3.87781,7.34473,7.26922],180,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[8.65784,16.6997,8.08482],195,1,false,[0,0],"","",false,true],["Land_PaperBox_open_full_F",[13.3392,6.78259,7.26923],308.743,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[6.7312,12.041,7.26922],270,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[12.1188,53.1217,15.2321],312.926,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[8.651,10.8541,7.26922],0,1,false,[0,0],"","",false,true],["Land_MysteriousBell_01_F",[-7.03796,14.5302,7.269],270,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[4.88452,13.0844,7.26922],0.452282,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[12.8546,14.259,8.08482],165,1,false,[0,-0],"","",false,true],["Land_CampingTable_white_F",[8.2428,10.0071,7.26922],180,1,false,[0,-0],"","",false,true],["Land_PalletTrolley_01_yellow_F",[12.9896,7.05505,7.26923],36.9172,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[4.39661,12.3347,7.26922],180.452,1,false,[0,0],"","",false,true],["Land_Target_Oval_F",[-13.479,9.03369,7.26922],90,1,false,[0,-0],"","",false,true],["PowerCable_01_Corner_F",[4.44751,3.97864,7.26922],180.481,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[9.67639,10.8549,7.26922],0,1,false,[0,0],"","",false,true],["PowerCable_01_StraightShort_F",[4.01025,5.01831,7.26922],0.480154,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_bookcase_black_F",[5.54333,12.3273,7.26922],270.45,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[-1.74097,-14.9506,7.26904],320.851,1,false,[0,0],"","",false,true],["TargetP_Inf8_F",[-14.2664,11.91,7.26922],256.185,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_folded_black_F",[-3.43396,8.16821,7.26922],153.693,1,false,[0,-0],"","",false,true],["Land_CampingTable_white_F",[7.66711,11.3845,7.26922],90,1,false,[0,0],"","",false,true],["PowerCable_01_Corner_F",[4.43262,6.02466,7.26922],270.483,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[10.6652,10.8258,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[10.1974,10.0051,7.26922],180,1,false,[0,-0],"","",false,true],["Land_Target_Oval_F",[-13.479,10.6294,7.269],90,1,false,[0,-0],"","",false,true],["Land_CampingTable_F",[-7.297,12.3209,7.26899],90,1,false,[0,-0],"","",false,true],["Land_PalletTrolley_01_yellow_F",[14.6107,6.38708,7.26923],106.346,1,false,[0,-0],"","",false,true],["Land_MysteriousBell_01_F",[-7.03796,16.2529,7.269],270,1,false,[0,0],"","",false,true],["Land_PCSet_01_case_F",[3.26221,12.2684,7.26922],0.452174,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[11.9757,16.7007,8.08482],165,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[11.6906,10.8104,7.26948],0,1,false,[0,0],"","",false,true],["Land_FlowerPot_01_F",[-6.72803,8.56177,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[9.7301,12.7831,7.26922],0,1,false,[0,0],"","",false,true],["PowerCable_01_StraightLong_F",[7.43616,6.46655,7.26922],90,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-14.5531,7.54138,7.26922],288.786,1,false,[0,0],"","",false,true],["TargetP_Inf8_F",[-14.2457,14.0878,7.26922],291.407,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[10.6642,12.7719,7.26922],0,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[8.79797,19.2449,8.08482],180,1,false,[0,-0],"","",false,true],["Land_CampingTable_white_F",[10.1715,11.9697,7.26922],180,1,false,[0,-0],"","",false,true],["Land_CampingTable_small_F",[-7.297,13.8301,7.269],90,1,false,[0,-0],"","",false,true],["Land_CampingTable_white_F",[12.1486,10.0051,7.26922],180,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[13.6486,9.76392,7.26922],120,1,false,[0,-0],"","",false,true],["Box_NATO_Ammo_F",[3.88013,13.6849,7.26922],90,1,false,[0,-0],"","",false,true],["PowerCable_01_Roll_F",[10.0306,6.06543,7.26922],345.056,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_closed_black_F",[3.94714,12.2559,7.26922],285.45,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[9.65442,19.1196,8.08482],195,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[-5.32471,20.3882,7.26922],51.6327,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[7.85657,15.2985,7.26948],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[13.6281,10.8511,7.26922],90,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[8.29309,14.354,7.26922],0,1,false,[0,0],"","",false,true],["PowerCable_01_Roll_F",[11.0814,6.31128,7.26922],277.112,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[8.79065,15.2872,7.26948],0,1,false,[0,0],"","",false,true],["B_MRAP_01_F",[3.30969,38.0033,8.80068],270,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[10.9469,19.0974,8.08482],165,1,false,[0,-0],"","",false,true],["Reflector_Cone_01_narrow_white_F",[-7.01099,9.82703,7.269],269.522,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[6.98755,20.6343,7.26922],0,1,false,[0,0],"","",false,true],["PowerCable_01_StraightShort_F",[10.4288,6.46509,7.26922],90,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[13.6393,11.7852,7.26922],90,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[12.7189,11.3794,7.26922],270,1,false,[0,0],"","",false,true],["Steel_Plate_F",[-11.391,9.37708,7.26922],88.9511,1,false,[0,0],"","",false,true],["Land_CampingTable_small_F",[-7.25745,15.4976,7.26901],90,1,false,[0,-0],"","",false,true],["Land_PlasticBarrier_03_F",[15.0017,8.54626,7.26922],280.92,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[9.77649,15.2899,7.26948],0,1,false,[0,0],"","",false,true],["Box_NATO_AmmoVeh_F",[5.88257,19.9181,7.26922],0,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[11.7599,19.2349,8.08482],180,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[3.88684,14.5005,7.26922],0,1,false,[0,0],"","",false,true],["Steel_Plate_F",[-11.391,10.2306,7.269],88.951,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[10.2443,14.354,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[10.7106,15.2787,7.26948],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[-15.0577,9.94727,7.26921],88.7081,1,false,[0,0],"","",false,true],["Steel_Plate_F",[-12.3518,9.80151,7.26922],88.9511,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[3.90063,15.2334,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[11.797,15.233,7.26948],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[15.199,10.4937,7.26922],270.449,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[7.96545,17.6339,7.26948],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_double_black_F",[7.52661,-39.5901,10.3536],102.744,1,false,[0,-0],"","",false,true],["Land_CampingTable_white_F",[8.34778,16.783,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[12.1989,14.3521,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[8.89954,17.6227,7.26948],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[12.7311,15.238,7.26922],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[-15.0938,11.9175,7.26921],88.7081,1,false,[0,0],"","",false,true],["Reflector_Cone_01_narrow_white_F",[-8.15198,12.97,7.269],269.522,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[9.88538,17.6254,7.26948],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[15.2013,12.4703,7.26922],270.449,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[10.299,16.783,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[10.8195,17.6141,7.26948],0,1,false,[0,0],"","",false,true],["PortableHelipadLight_01_white_F",[14.7421,8.33496,7.26921],0,1,false,[0,0],"","",false,true],["PortableHelipadLight_01_white_F",[-15.0028,7.90601,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[11.9059,17.5685,7.26948],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[-15.1515,13.8932,7.26921],88.7081,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[7.86292,19.9894,7.26948],0,1,false,[0,0],"","",false,true],["B_Slingload_01_Repair_F",[-5.71521,35.6956,8.80068],0,1,false,[0,0],"","",false,true],["Land_Obstacle_Ramp_F",[-9.56665,55.9307,15.2347],180,1,false,[-0.205988,-6.71199e-008],"","",false,true],["Land_CampingTable_white_F",[12.2535,16.781,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[8.34143,19.1606,7.26922],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[15.2111,14.4398,7.26922],270.449,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[12.84,17.5735,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[8.797,19.9781,7.26948],0,1,false,[0,0],"","",false,true],["Land_CampingTable_small_F",[-14.1456,15.6592,7.26921],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-13.3944,17.39,7.26922],109.133,1,false,[0,-0],"","",false,true],["Reflector_Cone_01_narrow_white_F",[-8.15002,15.6589,7.269],269.522,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[9.78284,19.9808,7.26948],0,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[10.2926,19.1606,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[10.7169,19.9696,7.26948],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[-15.2006,15.8619,7.26922],88.7081,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[15.2134,16.4165,7.26922],270.449,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[11.8033,19.924,7.26948],0,1,false,[0,0],"","",false,true],["Land_CampingTable_white_F",[12.2472,19.1587,7.26922],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[12.7374,19.929,7.26922],0,1,false,[0,0],"","",false,true],["Land_WoodenCrate_01_F",[-9.0918,58.6705,15.908],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[-15.2595,17.8384,7.26922],88.7081,1,false,[0,0],"","",false,true],["Land_WoodenCrate_01_F",[-9.93298,58.6711,15.908],0,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[15.2378,18.3871,7.26922],270.449,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[14.5627,20.0946,7.26922],226.718,1,false,[0,0],"","",false,true],["Land_PlasticBarrier_03_F",[-15.1219,19.79,7.26922],99.1785,1,false,[0,-0],"","",false,true],["Land_TentLamp_01_standing_F",[1.16699,25.0071,7.28363],44.7928,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[7.69849,-42.1648,10.3774],293.302,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[-7.49121,-42.2095,10.3774],67.8899,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[5.12732,41.0063,8.80068],0,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_F",[2.48547,41.6995,8.80067],45,1,false,[0,0],"","",false,true],["PortableHelipadLight_01_white_F",[15.2737,20.5663,7.26922],0,1,false,[0,0],"","",false,true],["Land_WoodenCrate_01_F",[-9.07996,58.6711,15.231],0,1,false,[0,0],"","",false,true],["PortableHelipadLight_01_white_F",[-15.2883,20.7053,7.26922],0,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[9.11792,41.006,8.80099],0,1,false,[0,0],"","",false,true],["Land_WoodenCrate_01_F",[-9.92065,58.6688,15.231],0,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_F",[1.09204,43.1045,8.80068],45,1,false,[0,0],"","",false,true],["B_Slingload_01_Ammo_F",[-5.71497,42.458,8.80099],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[8.82739,40.3612,8.80068],52.7112,1,false,[0,0],"","",false,true],["Target_PopUp_Moving_90deg_F",[2.79468,42.4207,8.80068],225,1,false,[0,0],"","",false,true],["Land_Metal_wooden_rack_F",[9.23486,41.7672,8.80068],90,1,false,[0,-0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[0.399048,45.7324,8.80099],90,1,false,[0,-0],"","",false,true],["Target_PopUp_Alien1_Moving_F",[1.84973,43.4039,8.80068],225,1,false,[0,0],"","",false,true],["Land_SportGround_fence_F",[7.0885,43.7101,8.80068],180,1,false,[0,0],"","",false,true],["Box_NATO_Equip_F",[9.19604,43.033,9.53799],0,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[7.9353,41.4132,8.80068],148.595,1,false,[0,-0],"","",false,true],["Land_Metal_wooden_rack_F",[5.32031,44.1809,8.80068],0,1,false,[0,0],"","",false,true],["Box_NATO_Ammo_F",[3.55896,41.3879,8.80068],90,1,false,[0,-0],"","",false,true],["Box_NATO_Ammo_F",[4.44104,41.3879,8.80099],90,1,false,[0,-0],"","",false,true],["Land_Metal_wooden_rack_F",[6.53003,44.181,8.80099],0,1,false,[0,0],"","",false,true],["Box_NATO_Ammo_F",[5.29822,41.3879,8.80099],90,1,false,[0,-0],"","",false,true],["Box_NATO_Support_F",[7.09705,41.3879,8.801],90,1,false,[0,-0],"","",false,true],["Box_NATO_Uniforms_F",[5.125,45.572,9.562],0,1,false,[0,0],"","",false,true],["Land_SportGround_fence_F",[4.55286,46.3109,8.80068],90,1,false,[0,-0],"","",false,true],["Box_NATO_Equip_F",[9.19568,43.0333,8.80068],0,1,false,[0,0],"","",false,true],["Land_BackAlley_01_l_gate_F",[0.399048,49.3519,8.80099],90,1,false,[0,-0],"","",false,true],["Box_NATO_Ammo_F",[1.93848,44.6493,8.85538],90,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[1.12646,44.451,8.79852],180,1,false,[0,-0],"","",false,true],["Land_PortableLight_02_double_black_F",[0.873169,47.4567,8.80068],270,1,false,[0,0],"","",false,true],["Box_NATO_Ammo_F",[2.37939,45.1385,8.84821],1.36604e-005,1,false,[0,0],"","",false,true],["Box_NATO_Ammo_F",[7.37817,44.7827,8.80068],90,1,false,[0,-0],"","",false,true],["Box_NATO_Uniforms_F",[5.12476,45.572,8.80068],0,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[8.41174,45.6909,9.13573],0,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[1.41748,45.1547,8.79852],180,1,false,[0,0],"","",false,true],["B_Slingload_01_Fuel_F",[-5.71497,49.25,8.801],0,1,false,[0,0],"","",false,true],["Land_PierLadder_F",[-9.93298,60.333,13.7625],180,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[8.70886,44.9135,8.80068],180,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[1.12646,45.8632,8.79852],180,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[5.10144,47.2032,9.15257],270.01,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[8.64026,46.854,9.13546],90,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[8.41174,45.6909,8.80095],0,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[9.32385,46.854,9.13546],90,1,false,[0,0],"","",false,true],["Land_PortableLight_02_double_black_F",[-9.3855,48.5236,8.80068],0,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[1.13306,46.6625,8.79852],180,1,false,[0,-0],"","",false,true],["Box_NATO_Wps_F",[5.10193,48.2759,9.15257],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.10144,47.2029,8.80067],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.78687,47.203,8.80067],270.01,1,false,[0,0],"","",false,true],["Box_NATO_WpsSpecial_F",[8.64026,46.854,8.80068],90,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[0.398682,52.9781,8.80068],90,1,false,[0,-0],"","",false,true],["Box_NATO_WpsSpecial_F",[9.32385,46.854,8.80068],90,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.10193,48.2759,8.80067],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Grenades_F",[8.55103,48.155,8.80099],270,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[5.78638,48.2758,8.80067],270.01,1,false,[0,0],"","",false,true],["Box_NATO_Grenades_F",[9.29602,48.155,8.801],270,1,false,[0,0],"","",false,true],["B_supplyCrate_F",[9.04688,50.5918,8.80068],90,1,false,[0,-0],"","",false,true],["B_CargoNet_01_ammo_F",[1.48706,51.8402,8.80068],0,1,false,[0,0],"","",false,true],["B_Boat_Armed_01_minigun_F",[-21.483,0,0.0679932],180,1,false,[0,0],"","",false,true],["Land_SportGround_fence_F",[7.09973,53.5413,8.80068],180,1,false,[0,0],"","",false,true],["Land_Shoot_House_Wall_F",[1.08325,55.6138,8.80068],315,1,false,[0,0],"","",false,true],["Land_MultiScreenComputer_01_black_F",[8.11072,54.0536,9.69685],178.595,1,false,[0,-0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[3.72595,56.297,8.80099],180,1,false,[0,0],"","",false,true],["Box_NATO_AmmoVeh_F",[-5.71497,53.313,8.80099],0,1,false,[0,0],"","",false,true],["Land_Laptop_03_black_F",[8.84314,54.0912,9.68762],146.145,1,false,[0,-0],"","",false,true],["Land_Shoot_House_Wall_Long_F",[7.70532,56.2965,8.80068],180,1,false,[0,0],"","",false,true],["Box_NATO_Wps_F",[6.86365,52.8621,9.1709],180,1,false,[0,-0],"","",false,true],["Land_IPPhone_01_black_F",[7.31494,54.1224,9.68762],195.208,1,false,[0,0],"","",false,true],["Land_Target_Dueling_01_F",[4.32495,53.158,8.80099],270,1,false,[0,0],"","",false,true],["Box_NATO_AmmoOrd_F",[9.28223,51.7579,8.80068],0,1,false,[0,0],"","",false,true],["Land_TripodScreen_01_dual_v2_black_F",[1.59668,54.9922,8.80067],135,1,false,[0,-0],"","",false,true],["Box_NATO_AmmoOrd_F",[9.2666,52.4769,8.80068],0,1,false,[0,0],"","",false,true],["Box_NATO_Support_F",[1.08716,53.0416,8.71652],89.9999,1,false,[0.202,-0.0380005],"","",false,true],["Box_NATO_Support_F",[1.88062,53.037,8.66743],89.9999,1,false,[0.202,-0.0380005],"","",false,true],["Box_NATO_Wps_F",[6.86365,52.8621,8.81841],180,1,false,[0,-0],"","",false,true],["Box_NATO_AmmoOrd_F",[8.54175,53.0652,8.80068],270,1,false,[0,0],"","",false,true],["Box_NATO_WpsLaunch_F",[5.45117,53.0408,8.80068],180,1,false,[0,0],"","",false,true],["B_Ship_MRLS_01_F",[0.0133057,-62.4196,10.5237],180,1,false,[0,0],"","",false,true],["Land_PortableDesk_01_black_F",[8.12842,54.1173,8.80068],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[7.38879,54.8618,8.80068],357.865,1,false,[0,0],"","",false,true],["Land_PortableLight_02_single_black_F",[9.25488,54.7441,8.80068],89.863,1,false,[0,0],"","",false,true],["Land_WaterBottle_01_full_F",[2.85547,56.9369,9.6106],250,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[3.04004,55.6267,8.80068],310.376,1,false,[0,0],"","",false,true],["Land_DeskChair_01_black_F",[8.95898,54.2341,8.80068],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[4.37537,55.7103,8.80068],26.6572,1,false,[0,0],"","",false,true],["Land_Map_blank_F",[3.85938,56.848,9.61233],274.695,1,false,[0,0],"","",false,true],["Land_PenBlack_F",[4.15918,56.9193,9.6182],330.964,1,false,[0,0],"","",false,true],["Land_Notepad_F",[4.26465,56.974,9.61759],58.3615,1,false,[0,0],"","",false,true],["Land_File1_F",[3.16895,57.052,9.616],195.512,1,false,[0,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[-9.38635,56.7433,8.80068],281.835,1,false,[0,0],"","",false,true],["Land_PortableCabinet_01_bookcase_black_F",[9.37671,55.2653,8.80068],90,1,false,[0,-0],"","",false,true],["Land_PortableCabinet_01_bookcase_black_F",[9.39111,55.8754,8.80068],90,1,false,[0,-0],"","",false,true],["Land_CampingChair_V2_F",[4.98999,56.751,8.80099],180,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[5.82898,56.751,8.80099],180,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[6.79395,56.751,8.80099],180,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[7.78503,56.751,8.80099],180,1,false,[0,0],"","",false,true],["Land_CampingTable_F",[3.40527,56.9115,8.80068],359.219,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[8.81201,56.751,8.80099],180,1,false,[0,0],"","",false,true],["Land_RotorCoversBag_01_F",[9.89746,56.797,8.80068],49.8936,1,false,[0,0],"","",false,true],["Land_Obstacle_Ramp_F",[-9.93298,62.1169,9.99125],0,1,false,[-0.206,0],"","",false,true],["Land_PortableLight_02_quad_black_F",[10.9974,60.114,8.78183],174.753,1,false,[0,-0],"","",false,true],["Land_Destroyer_01_interior_03_F",[0,0,-0.65],360,1,false,[0,0],"","",true,true],["Land_Destroyer_01_hull_03_F",[0,0,-0.65],360,1,false,[0,0],"","",true,true],["Land_PortableLight_02_single_black_F",[-14.2081,58.938,8.78628],0,1,false,[0,0],"","",false,true],["Reflector_Cone_01_narrow_white_F",[10.2633,60.9379,8.77887],270,1,false,[0,0],"","",false,true],["Reflector_Cone_01_narrow_white_F",[-10.2729,60.938,8.77899],90,1,false,[0,-0],"","",false,true],["Land_PortableLight_02_quad_black_F",[-14.2587,62.9407,8.77167],230.367,1,false,[0,0],"","",false,true],["Land_Obstacle_Ramp_F",[-9.93298,64.282,8.77004],0,1,false,[-0.205584,0],"","",false,true],["B_Ship_Gun_01_F",[-0.00134277,-78.7819,12.0854],180,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[13.0631,65.0066,8.76424],141.746,1,false,[0,-0],"","",false,true],["B_Heli_Transport_03_unarmed_F",[0.287964,74.9535,8.68745],0,1,false,[0,0],"","",false,true],["Land_AirIntakePlug_01_F",[-10.6697,66.5044,8.75885],241.66,1,false,[0,0],"","",false,true],["Land_AirIntakePlug_04_F",[10.4359,66.8083,8.75837],147.734,1,false,[0,-0],"","",false,true],["PortableHelipadLight_01_white_F",[11.7178,68.7137,8.75885],0,1,false,[0,0],"","",false,true],["PortableHelipadLight_01_white_F",[-11.7267,68.7452,8.75886],0,1,false,[0,0],"","",false,true],["Land_Destroyer_01_hull_02_F",[0,-45,-0.65],360,1,false,[0,0],"","",true,true],["Land_Destroyer_01_interior_04_F",[0,45,-0.65],360,1,false,[0,0],"","",true,true],["Land_Destroyer_01_hull_04_F",[0,45,-0.65],360,1,false,[0,0],"","",true,true],["Land_Destroyer_01_interior_02_F",[0,-45,-0.65],360,1,false,[0,0],"","",true,true],["Reflector_Cone_01_narrow_white_F",[13.962,77.985,8.80105],86.0411,1,false,[-80.058,-0.000148352],"","",false,true],["Reflector_Cone_01_narrow_white_F",[-13.9637,78.0101,8.80127],288.056,1,false,[-79.7309,-56.6933],"","",false,true],["Land_HelipadEmpty_F",[-0.000366211,79.4036,8.76157],360,1,false,[0,0],"","",true,true],["I_HMG_02_high_F",[11.1503,84.022,8.76274],86.2658,1,false,[0,0],"","",false,true],["I_HMG_02_high_F",[-11.1083,84.4102,8.76285],275.431,1,false,[0,0],"","",false,true],["Reflector_Cone_01_narrow_white_F",[0.0224609,84.9771,8.76399],0,1,false,[0,0],"","",false,true],["Land_CampingChair_V2_F",[-11.0079,86.1232,8.76328],43.5709,1,false,[0,0],"","",false,true],["Land_AirIntakePlug_02_F",[9.39966,89.333,8.76409],54.0947,1,false,[0,0],"","",false,true],["Land_AirIntakePlug_05_F",[-9.63611,89.7615,8.76421],269.694,1,false,[0,0],"","",false,true],["PortableHelipadLight_01_white_F",[-11.1693,90.6506,8.76442],0,1,false,[0,0],"","",false,true],["PortableHelipadLight_01_white_F",[11.1588,90.6665,8.76442],0,1,false,[0,0],"","",false,true],["ShipFlag_US_F",[-0.00012207,91.7633,8.76266],360,1,false,[0,0],"","",true,true],["Land_Destroyer_01_hull_05_F",[0,80,-0.65],360,1,false,[0,0],"","",true,true],["Reflector_Cone_01_wide_white_F",[0.0219727,89.3689,3.41229],0,1,false,[25.9488,0],"","",false,true],["Land_Destroyer_01_hull_01_F",[0,-85,-0.65],360,1,false,[0,0],"","",true,true],["Sign_Sphere100cm_F",[0,197.368,73.196],0,1,false,[0,0],"","",false,true],[1941.87,1821.41,185.97]];
						};
						case "None": {
							_objectsArray = [["B_AAA_System_01_F",[-0.00134277,35.9135,19.2167],0,1,false,[0,0],"","",false,true],["B_SAM_System_01_F",[-0.00134277,-47.2848,15.0879],180,1,false,[0,0],"","",false,true],["B_SAM_System_02_F",[-0.00134277,50.6556,15.785],0,1,false,[0,0],"","",false,true],["#animator",[-14.3723,9.82703,8.24905],0,0,true,[0,0],"","",true,true],["B_Ship_MRLS_01_F",[0.0133057,-62.4196,10.5237],180,1,false,[0,0],"","",false,true],["Land_Destroyer_01_interior_03_F",[0,0,-0.65],360,1,false,[0,0],"","",true,true],["Land_Destroyer_01_hull_03_F",[0,0,-0.65],360,1,false,[0,0],"","",true,true],["B_Ship_Gun_01_F",[-0.00134277,-78.7819,12.0854],180,1,false,[0,0],"","",false,true],["B_Heli_Transport_03_unarmed_F",[0.287964,74.9535,8.68745],0,1,false,[0,0],"","",false,true],["Land_Destroyer_01_interior_04_F",[0,45,-0.65],360,1,false,[0,0],"","",true,true],["Land_Destroyer_01_interior_02_F",[0,-45,-0.65],360,1,false,[0,0],"","",true,true],["Land_Destroyer_01_hull_02_F",[0,-45,-0.65],360,1,false,[0,0],"","",true,true],["Land_Destroyer_01_hull_04_F",[0,45,-0.65],360,1,false,[0,0],"","",true,true],["Land_HelipadEmpty_F",[-0.000366211,79.4036,8.76157],360,1,false,[0,0],"","",true,true],["ShipFlag_US_F",[-0.00012207,91.7633,8.76266],360,1,false,[0,0],"","",true,true],["Land_Destroyer_01_hull_05_F",[0,80,-0.65],360,1,false,[0,0],"","",true,true],["Land_Destroyer_01_hull_01_F",[0,-85,-0.65],360,1,false,[0,0],"","",true,true],["CamCurator",[83.3259,96.0969,21.3859],200.993,0,true,[-8.62744,-0.000493537],"","",true,true],[1941.87,1821.41,185.97]];
						};
					};
					
					{
						_objData = _x;
						switch (_destroyerSide) do {
							case east: {
								switch (_objData select 0) do {
									case "B_Heli_Transport_03_unarmed_F": {_objData set [0, "O_Heli_Transport_04_covered_F"];};
									case "B_Quadbike_01_F": {
										if ((worldName == 'Tanoa')) then {
											_objData set [0, "O_T_Quadbike_01_ghex_F"];
										} else {
											_objData set [0, "O_Quadbike_01_F"];
										};
									};
									case "B_MRAP_01_F": {
										if ((worldName == 'Tanoa')) then {
											_objData set [0, "O_T_MRAP_02_ghex_F"];
										} else {
											_objData set [0, "O_MRAP_02_F"];
										};
									};
									case "Box_NATO_Ammo_F": {
										if ((worldName == 'Tanoa')) then {
											_objData set [0, "Box_T_East_Ammo_F"];
										} else {
											_objData set [0, "Box_East_Ammo_F"];
										};
									};
									case "Box_NATO_Wps_F": {
										if ((worldName == 'Tanoa')) then {
											_objData set [0, "Box_T_East_Wps_F"];
										} else {
											_objData set [0, "Box_East_Wps_F"];
										};
									};
									case "Box_NATO_Equip_F": {_objData set [0, "Box_CSAT_Equip_F"];};
									case "Box_NATO_AmmoOrd_F": {_objData set [0, "Box_East_AmmoOrd_F"];};
									case "Box_NATO_Grenades_F": {_objData set [0, "Box_East_Grenades_F"];};
									case "Box_NATO_WpsLaunch_F": {_objData set [0, "Box_East_WpsLaunch_F"];};
									case "Box_NATO_WpsSpecial_F": {
										if ((worldName == 'Tanoa')) then {
											_objData set [0, "Box_T_East_WpsSpecial_F"];
										} else {
											_objData set [0, "Box_East_WpsSpecial_F"];
										};
									};
									case "B_supplyCrate_F": {_objData set [0, "O_supplyCrate_F"];};
									case "Box_NATO_Support_F": {_objData set [0, "Box_East_Support_F"];};
									case "Box_NATO_Uniforms_F": {_objData set [0, "Box_CSAT_Uniforms_F"];};
									case "Box_NATO_AmmoVeh_F": {_objData set [0, "Box_East_AmmoVeh_F"];};
									case "B_CargoNet_01_ammo_F": {_objData set [0, "O_CargoNet_01_ammo_F"];};
									case "B_Slingload_01_Fuel_F": {_objData set [0, "Land_Pod_Heli_Transport_04_fuel_F"];};
									case "B_Slingload_01_Ammo_F": {_objData set [0, "Land_Pod_Heli_Transport_04_ammo_F"];};
									case "B_Slingload_01_Repair_F": {_objData set [0, "Land_Pod_Heli_Transport_04_repair_F"];};
								};
							};
							case independent: {
								switch (_objData select 0) do {
									case "B_Heli_Transport_03_unarmed_F": {_objData set [0, "I_Heli_Transport_02_F"];};
									case "B_Quadbike_01_F": {_objData set [0, "I_Quadbike_01_F"];};
									case "B_MRAP_01_F": {_objData set [0, "I_MRAP_03_F"];};
									case "Box_NATO_Ammo_F": {_objData set [0, "Box_IND_Ammo_F"];};
									case "Box_NATO_Wps_F": {_objData set [0, "Box_IND_Wps_F"];};
									case "Box_NATO_Equip_F": {_objData set [0, "Box_AAF_Equip_F"];};
									case "Box_NATO_AmmoOrd_F": {_objData set [0, "Box_IND_AmmoOrd_F"];};
									case "Box_NATO_Grenades_F": {_objData set [0, "Box_IND_Grenades_F"];};
									case "Box_NATO_WpsLaunch_F": {_objData set [0, "Box_IND_WpsLaunch_F"];};
									case "Box_NATO_WpsSpecial_F": {_objData set [0, "Box_IND_WpsSpecial_F"];};
									case "B_supplyCrate_F": {_objData set [0, "I_supplyCrate_F"];};
									case "Box_NATO_Support_F": {_objData set [0, "Box_IND_Support_F"];};
									case "Box_NATO_Uniforms_F": {_objData set [0, "Box_AAF_Uniforms_F"];};
									case "Box_NATO_AmmoVeh_F": {_objData set [0, "Box_IND_AmmoVeh_F"];};
									case "B_CargoNet_01_ammo_F": {_objData set [0, "I_CargoNet_01_ammo_F"];};
								};
							};
							case civilian: {
								switch (_objData select 0) do {
									case "B_Heli_Transport_03_unarmed_F": {_objData set [0, "C_IDAP_Heli_Transport_02_F"];};
									case "B_Quadbike_01_F": {_objData set [0, "C_Quadbike_01_F"];};
									case "B_MRAP_01_F": {_objData set [0, "C_IDAP_Offroad_01_F"];};
									case "B_supplyCrate_F": {_objData set [0, "C_IDAP_supplyCrate_F"];};
									case "Box_NATO_Uniforms_F": {_objData set [0, "Box_IDAP_Uniforms_F"];};
									case "Box_NATO_Equip_F": {_objData set [0, "Box_IDAP_Equip_F"];};
									case "B_CargoNet_01_ammo_F": {_objData set [0, "C_IDAP_CargoNet_01_supplies_F"];};
								};
							};
							default {
								switch (_objData select 0) do {
									case "Box_NATO_WpsSpecial_F": {
										if ((worldName == 'Tanoa')) then {
											_objData set [0, "Box_T_NATO_WpsSpecial_F"];
										} else {
											_objData set [0, "Box_NATO_WpsSpecial_F"];
										};
									};
									case "Box_NATO_Wps_F": {
										if ((worldName == 'Tanoa')) then {
											_objData set [0, "Box_T_NATO_Wps_F"];
										} else {
											_objData set [0, "Box_NATO_Wps_F"];
										};
									};
									case "B_Quadbike_01_F": {
										if ((worldName == 'Tanoa')) then {
											_objData set [0, "B_T_Quadbike_01_F"];
										} else {
											_objData set [0, "B_Quadbike_01_F"];
										};
									};
									case "B_MRAP_01_F": {
										if ((worldName == 'Tanoa')) then {
											_objData set [0, "B_T_MRAP_01_F"];
										} else {
											_objData set [0, "B_MRAP_01_F"];
										};
									};
								};
							};
						};
						_objectsArray set [_forEachIndex, _objData];
					} forEach _objectsArray;
					
					_objPos = position _object;
					_objDir = getDir _object;
					deleteVehicleCrew _object;
					deleteVehicle _object;
					_placedDecor = [[_objPos select 0,_objPos select 1], (if (_objDir-180 == -1) then {0} else {_objDir-180}), _objectsArray, 0, false, true, false, true, true, false, true, _destroyerSide] call LM_fnc_objectsMapper;
					sleep 2;
					
					_destroyerBody = objNull;
					_destroyerDeck = objNull;
					_destroyerHelo = objNull;
					_destroyerBoat = objNull;
					_destroyer1PCM = objNull;
					_destroyer3PCM = objNull;
					_destroyerComp = objNull;
					_destroyerGuns = [];
					_destroyerPrts = [];
					_destroyerTgts = [];
					_destroyerCars = [];
					_destroyerChrs = [];
					_destroyerMisc = [];
					{
						if (((_x call BIS_fnc_objectType) select 1) == "Helicopter") then {
							deleteVehicleCrew _x;
							_destroyerHelo = _x;
							if (!(_attachHelo)) then {
								deleteVehicle _x;
							};
						};
						if (((_x call BIS_fnc_objectType) select 1) == "Car") then {
							deleteVehicleCrew _x;
							_destroyerCars append [_x];
						};
						if ((typeOf _x) in ["B_AAA_System_01_F","B_SAM_System_01_F","B_SAM_System_02_F","B_Ship_MRLS_01_F","B_Ship_Gun_01_F","I_HMG_02_high_F","I_E_HMG_02_F"]) then {
							_destroyerGuns append [_x];
							if ((typeOf _x) in ["B_AAA_System_01_F","B_SAM_System_01_F","B_SAM_System_02_F","B_Ship_MRLS_01_F","B_Ship_Gun_01_F"]) then {
								if (_mountStatus) then {
									createVehicleCrew _x;
									_grp = createGroup _destroyerSide;
									(crew _x) join _grp;
									_grp deleteGroupWhenEmpty true;
								};
							};
							if ((typeOf _x) in ["I_HMG_02_high_F","I_E_HMG_02_F"]) then {
								deleteVehicleCrew _x;
							};
						};
						if ("Land_Destroyer_01_" in (typeOf _x)) then {
							_destroyerPrts append [_x];
						};
						if ((typeOf _x) in ["Land_Target_Dueling_01_F","TargetP_Inf8_F","Target_PopUp_Moving_90deg_Acc2_F","Land_Target_Oval_F","Steel_Plate_F","Land_Target_Swivel_01_F","Target_PopUp_Alien1_Moving_F","Target_PopUp_Moving_90deg_F"]) then {
							_destroyerTgts append [_x];
						};
						if ((typeOf _x) in ["Land_MysteriousBell_01_F","Land_BackAlley_01_l_gate_F","Reflector_Cone_01_narrow_white_F","Land_TentLamp_01_standing_F","Land_PortableLight_02_double_black_F","Land_PortableLight_02_quad_black_F","Land_PortableLight_02_single_black_F","Land_PortableLight_02_single_folded_black_F","PortableHelipadLight_01_white_F","Reflector_Cone_01_wide_white_F"]) then {
							_destroyerMisc append [_x];
						};
						
						switch (typeOf _x) do {
							case "Land_Destroyer_01_hull_03_F": {
								_destroyerBody = _x;
							};
							case "Land_Destroyer_01_hull_05_F": {
								_destroyerDeck = _x;
								[_destroyerDeck,[0,"a3\boat_f_destroyer\destroyer_01\data\destroyer_01_tag_0" + str((_hullName select 0)) + "_co.paa"]] remoteExec ["setObjectTextureGlobal", 0, true];
							};
							case "B_Boat_Armed_01_minigun_F": {
								deleteVehicleCrew _x;
								_destroyerBoat = _x;
								[_destroyerBoat,true] remoteExec ["lockCargo", 0, true];
								[_destroyerBoat,"LOCKED"] remoteExec ["setVehicleLock", 0, true];
								[_destroyerBoat,[0,""]] remoteExec ["setObjectTextureGlobal", 0, true];
								[_destroyerBoat,[1,""]] remoteExec ["setObjectTextureGlobal", 0, true];
								[_destroyerBoat,true] remoteExec ["hideObjectGlobal", 0, true];
								[_destroyerBoat,0] remoteExec ["forceSpeed", 0, true];
							};
							case "Sign_Sphere100cm_F": {[_x,true] remoteExec ["hideObjectGlobal", 0, true];; if (_destroyer1PCM isEqualTo objNull) then {_destroyer1PCM = _x;} else {_destroyer3PCM = _x;};};
							case "ShipFlag_US_F": {
								[_x] spawn MAZ_EZM_editObjAtribsApply;
								[[_destroyerSide,_x],{
									params ["_destroyerSide","_flag"];
									[_destroyerSide,_flag] spawn {
										params ["_destroyerSide","_flag"];
										while {alive _flag} do {
											switch (_destroyerSide) do {
												case east: {_flag setflagtexture "a3\data_f\flags\flag_csat_co.paa";};
												case independent: {_flag setflagtexture "a3\data_f\flags\flag_aaf_co.paa";};
												case civilian: {_flag setflagtexture "\A3\Data_F_Orange\Flags\flag_IDAP_CO.paa";};
												default {_flag setflagtexture "a3\data_f\flags\flag_nato_co.paa";};
											};
										};
									};
								}] remoteExec ["bis_fnc_call",0,true];
							};
							case "Land_Laptop_device_F": {
								_destroyerComp = _x;
								[_destroyerComp] spawn {
									waitUntil {!(isNil "LM_fnc_shipEnterAction")};
									[(_this select 0)] call LM_fnc_shipEnterAction;
								};
							};
							case "Land_CampingChair_V2_F": {
								_destroyerChrs append [_x];
								[_x] spawn {
									waitUntil {!(isNil "LM_fnc_enterChair")};
									[(_this select 0)] call LM_fnc_enterChair;
								};
							};
							case "Land_Destroyer_01_hull_01_F": {
								[_x,[0,"a3\boat_f_destroyer\destroyer_01\data\destroyer_01_n_0" + str(round _hullNum1) + "_co.paa"]] remoteExec ["setObjectTextureGlobal",0,true];
								[_x,[1,"a3\boat_f_destroyer\destroyer_01\data\destroyer_01_n_0" + str(round _hullNum2) + "_co.paa"]] remoteExec ["setObjectTextureGlobal",0,true];
								[_x,[2,"a3\boat_f_destroyer\destroyer_01\data\destroyer_01_n_0" + str(round _hullNum3) + "_co.paa"]] remoteExec ["setObjectTextureGlobal",0,true];
							};
							case "Land_Destroyer_01_hull_04_F": {
								if (_hangarCtrl) then {
									[_x,1,false] remoteExec ["BIS_fnc_Destroyer01AnimateHangarDoors",0,true];
								};
							};
							default {};
						};
						_x setDamage 0;
						_x setFuel 100;
						_x call MAZ_EZM_fnc_addObjectToInterface;
						[_x,false] remoteExec ["allowDamage", 0, true];
						[_x,false] remoteExec ["enableSimulationGlobal", 0, true];
					} forEach _placedDecor;
					
					{
						if (!(_x in _destroyerTgts)) then {
							[_x,true] remoteExec ["allowDamage", 0, true];
						};
						[_x,true] remoteExec ["enableSimulationGlobal", 0, true];
						[_x, true] remoteExec ["enableDynamicSimulation", 0, true];
						[(group _x), true] remoteExec ["enableDynamicSimulation", 0, true];
					} forEach (_destroyerPrts + _destroyerGuns + _destroyerTgts + [_destroyerHelo] + _destroyerCars + _destroyerChrs + _destroyerMisc);
					
					[_destroyerComp,["LM_var_destroyerOwner",player]] remoteExec ["setVariable",0,true];
					[_destroyerComp,["LM_var_destroyerBody",_destroyerBody]] remoteExec ["setVariable",0,true];
					[_destroyerComp,["LM_var_destroyerDeck",_destroyerDeck]] remoteExec ["setVariable",0,true];
					[_destroyerComp,["LM_var_destroyerHelo",_destroyerHelo]] remoteExec ["setVariable",0,true];
					[_destroyerComp,["LM_var_destroyerBoat",_destroyerBoat]] remoteExec ["setVariable",0,true];
					[_destroyerComp,["LM_var_destroyer1PCM",_destroyer1PCM]] remoteExec ["setVariable",0,true];
					[_destroyerComp,["LM_var_destroyer3PCM",_destroyer3PCM]] remoteExec ["setVariable",0,true];
					[_destroyerComp,["LM_var_destroyerGuns",_destroyerGuns]] remoteExec ["setVariable",0,true];
					[_destroyerComp,["LM_var_destroyerPrts",_destroyerPrts]] remoteExec ["setVariable",0,true];
					[_destroyerComp,["LM_var_destroyerTgts",_destroyerTgts]] remoteExec ["setVariable",0,true];
					[_destroyerComp,["LM_var_destroyerCars",_destroyerCars]] remoteExec ["setVariable",0,true];
					[_destroyerComp,["LM_var_destroyerChrs",_destroyerChrs]] remoteExec ["setVariable",0,true];
					[_destroyerComp,["LM_var_destroyerMisc",_destroyerMisc]] remoteExec ["setVariable",0,true];
					[_destroyerComp,["LM_var_destroyerObjs",_placedDecor]] remoteExec ["setVariable",0,true];
					
					[format ["DDG %1%2%3 '%4' deployed!",round(_hullNum1),round(_hullNum2),round(_hullNum3),(_hullName select 1)],"addItemOk"] call MAZ_EZM_fnc_systemMessage;
				};
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},_entity] call MAZ_EZM_fnc_createDialog;
		};

		MAZ_EZM_fnc_deleteAllCarriersModule = {
			private _data = (getArray (configfile >> 'CfgVehicles' >> 'Land_Carrier_01_base_F' >> 'multiStructureParts'));
			{
				_x params ['_class','_pos'];
				{
					deleteVehicle _x;
				} foreach allMissionObjects _class;
			} foreach _data;

			["All Aircraft Carriers are deleted.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		MAZ_EZM_fnc_deleteAllDestroyersModule = {
			private _data = (getArray (configfile >> 'CfgVehicles' >> 'Land_Destroyer_01_base_F' >> 'multiStructureParts'));
			{
				_x params ['_class','_pos'];
				{
					deleteVehicle _x;
				} foreach allMissionObjects _class;
			} foreach _data;

			["All Destroyers are deleted.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

	comment "Developer Tools";

		MAZ_EZM_fnc_functionViewer = {
			[] call BIS_fnc_help;
		};

		MAZ_EZM_fnc_showObjectConfig = {
			params ["_entity"];
			if (!isNull _entity) then {
				BIS_fnc_configViewer_path = ["configFile", "CfgVehicles"];
				BIS_fnc_configViewer_selected = typeOf _entity;
			};

			[] call BIS_fnc_configViewer;
		};

		MAZ_EZM_fnc_openAnimViewerModule = {
			params ["_entity"];
			if(isNull _entity) exitWith {
				[] call BIS_fnc_animViewer;
			};
			if(_entity isKindOf "CAManBase" && alive _entity) exitWith {
				[[typeOf _entity, animationState _entity]] call BIS_fnc_animViewer;
			};
			[] call BIS_fnc_animViewer;
		};

		MAZ_EZM_fnc_openGUIEditor = {
			[] spawn {
				(findDisplay 312) closeDisplay 0;
				sleep 0.5;
				call BIS_fnc_GUIeditor;
			};
		};

	comment "Environment";

		MAZ_EZM_fnc_changeDateModule = {
			date params ["_year", "_month", "_day", "_hours", "_minutes"];
			["Change Date",[
				[
					"SLIDER",
					"Hour",
					[0,24,_hours]
				],
				[
					"SLIDER",
					"Minute",
					[0,60,_minutes]
				]
			],{
				params ["_values","_pos","_display"];
				[_values,{
					params ["_hr","_min"];
					date params ["_year", "_month", "_day", "_hours", "_minutes"];
					setDate [_year,_month,_day,_hr,_min];
				}] remoteExec ['spawn',2];

				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};

		MAZ_EZM_fnc_editWeatherConditionsModule = {
			fogParams params ["_fogValue","_fogDecay","_fogBase"];
			["Edit Weather Conditions",[
				[
					"SLIDER",
					["Time for Effect","The time it takes for the changes to take effect, in in-game minutes."],
					[0,60,0]
				],
				[
					"SLIDER",
					["Cloud Cover","Amount of cloud cover, in percent."],
					[0,100,round (overcast * 100)]
				],
				[
					"SLIDER",
					["Fog","Amount of fog in percent."],
					[0,100,round (_fogValue * 100)]
				],
				[
					"SLIDER",
					["Fog Decay","How fast the fog decays as it moves upwards in the atmosphere, a percentage."],
					[0,10,round (_fogDecay * 100)]
				],
				[
					"SLIDER",
					["Fog Base","The base of the fog, in meters."],
					[-1000,1000,_fogBase]
				],
				[
					"SLIDER",
					["Rain Chance","The chance for it to rain, in percent.\nIn clear skies it will not rain."],
					[0,100,round (rain * 100)]
				],
				[
					"SLIDER",
					["Waves Strength","Strengths of the ocean waves, in percent."],
					[0,100,round (waves * 100)]
				],
				[
					"SLIDER",
					["Wind Strength","Strength of the wind, in percent."],
					[0,100,round (windStr * 100)]
				],
				[
					"SLIDER",
					["Gusts Strength","Strength of the wind gusts, in percent."],
					[0,100,round (gusts * 100)]
				],
				[
					"SLIDER",
					["Wind Direction","Direction of the wind and gusts, in degrees."],
					[0,360,round windDir]
				]
			],{
				params ["_values","_pos","_display"];
				_display closeDisplay 1;
				[_values,{
					params ["_time","_overcast","_fog","_fogDecay","_fogBase","_rain","_waves","_windStr","_gustStr","_windDir"];
					_time setOverCast (_overcast/100);
					_time setFog [(_fog/100),(_fogDecay/100),_fogBase];
					_time setRain (_rain/100);
					_time setWaves (_waves/100);
					_time setWindStr (_windStr/100);
					_time setGusts (_gustStr/100);
					_time setWindDir _windDir;
					if(_time == 0) then {
						forceWeatherChange;
					};
				}] remoteExec ['spawn',2];

			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};

	comment "Explosives";

		MAZ_EZM_fnc_createMinefieldModule = {
			private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
			["Create Minefield",[
				[
					"COMBO",
					"Mine Type",
					[
						["APERSMine","APERSBoundingMine","ATMine"],
						["APERS Mine","APERS Bounding Mine","AT Mine"],
						0
					]
				],
				[
					"SLIDER:RADIUS",
					"Mines Radius",
					[10,(getnumber (configfile >> "CfgWorlds" >> worldName >> "mapSize")),25,_pos,[1,0,0,1]]
				],
				[
					"SLIDER",
					"Mines Amount",
					[5,35,15]
				]
			],{
				params ["_values","_pos","_display"];
				_values params ["_mineType","_radius","_amount"];
				private _mines = [];
				for "_i" from 1 to _amount do {
					private _randomPos = [
						[[_pos,_radius]],
						[]
					] call BIS_fnc_randomPos;

					private _mine = createMine [_mineType,_randomPos,[],0];
					_mines pushBack _mine;
				};
				[_mines] call MAZ_EZM_fnc_addObjectToInterface;

				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},_pos] call MAZ_EZM_fnc_createDialog;
		};

		MAZ_EZM_fnc_createIEDModule = {
			private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
			["Create IED",[
				[
					"COMBO",
					"IED Disguise Type",
					[
						[],
						["Cardboard Box","Suitcases","Trash Can","Barrels","Vehicle Wrecks"],
						0
					]
				],
				[
					"SLIDER:RADIUS",
					"IED Explosive Radius",
					[3,15,7,_pos,[1,0,0,1]]
				],
				[
					"SIDES",
					["Sides That Trigger","Sides that when entering the radius the IED will detonate."],
					[west,east,independent]
				]
			],{
				params ["_values","_pos","_display"];
				_values params ["_iedType","_radius","_side"];
				private _sides = _side call MAZ_EZM_fnc_getSidesFromString;
				private _trashCanTypes = ["Land_GarbageBin_01_F","TrashBagHolder_01_F"];
				private _cardboardBox = ["Land_PaperBox_01_small_destroyed_brown_F"];
				private _luggageTypes = ["Land_LuggageHeap_01_F","Land_LuggageHeap_03_F"];
				private _barrelTypes = ["Land_MetalBarrel_empty_F","Land_BarrelEmpty_grey_F","Land_BarrelEmpty_F"];
				private _vehicleWreckTypes = ["Land_Wreck_Skodovka_F","Land_Wreck_CarDismantled_F","Land_Wreck_Truck_F","Land_Wreck_Van_F","Land_Wreck_Offroad_F","Land_Wreck_Truck_dropSide_F","Land_Wreck_Offroad2_F","Land_Wreck_Car3_F","Land_Wreck_Car_F","Land_Wreck_Car2_F"];

				_iedType = switch (_iedType) do {
					case 0: {selectRandom _cardboardBox};
					case 1: {selectRandom _luggageTypes};
					case 2: {selectRandom _trashCanTypes};
					case 3: {selectRandom _barrelTypes};
					case 4: {selectRandom _vehicleWreckTypes};
				};

				private _iedObject = createVehicle [_iedType,_pos,[],0,"CAN_COLLIDE"];
				[_iedObject] call MAZ_EZM_fnc_addObjectToInterface;
				["IED created.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
				[_iedObject,_radius,_sides] spawn {
					params ["_obj","_radius","_sides"];
					waitUntil {
						(
							(count (nearestObjects [_obj,["CAManBase"],_radius])) > 0
						) &&
						(
							((nearestObjects [_obj,["CAManBase"],_radius]) findIf {alive _x}) != -1
						) &&
						(
							((nearestObjects [_obj,["CAManBase"],_radius]) findIf {side (group _x) in _sides}) != -1
						)
					};
					private _ied = createMine ["IEDLandBig_F", position _obj,[],0];
					deleteVehicle _obj;
					_ied setDamage 1;
				};

				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},_pos] call MAZ_EZM_fnc_createDialog;
		};

	comment "Gameplay";

		MAZ_EZM_fnc_createCountdownModule = {
			["Create Countdown",[
				[
					"SLIDER",
					"Hours:",
					[0,3,0]
				],
				[
					"SLIDER",
					"Minutes:",
					[0,60,15]
				],
				[
					"SIDES",
					"Sides Who See The Message",
					[west,east,independent,civilian]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_hours","_minutes","_side"];
				private _sides = _side call MAZ_EZM_fnc_getSidesFromString;
				_sides = _sides + [sideLogic];
				_hours = round _hours; _minutes = round _minutes;
				private _timer = (_hours * 3600) + (_minutes * 60);
				[[[_hours,_minutes],_timer],{
					params ["_timeData","_timer"];
					_timeData params ["_hours","_minutes"];
					if(!(player getVariable ["MAZ_EZM_timerActive",false])) then {
						private _timerInt = 0;
						player setVariable ["MAZ_EZM_timerActive",true,true];
						while {_timer > 0} do {
							if(_timerInt == 60) then {
								_minutes = _minutes - 1;
							};
							if(_minutes == 0 && _hours != 0) then {_hours = _hours - 1; _minutes = 59;};
							if(_hours > 0) then {
								[format ["<t color='#FFFFFF' size='1.25'>%1 hrs, %2 min left.</t>",_hours,_minutes],-1,-0.3,1,0,0] spawn BIS_fnc_dynamicText;
							} else {
								if(_minutes > 1) then {
									[format ["<t color='#FFFFFF' size='1.25'>%1 minutes left.</t>",_minutes],-1,-0.3,1,0,0] spawn BIS_fnc_dynamicText;
								} else {
									[format ["<t color='#FFFFFF' size='1.25'>%1 seconds left!</t>",_timer],-1,-0.3,1,0,0] spawn BIS_fnc_dynamicText;
								};
							};
							_timerInt = _timerInt + 1;
							_timer = _timer - 1;
							sleep 1;
						};
						player setVariable ["MAZ_EZM_timerActive",false,true];
					};
				}]remoteExec ['spawn',_sides];
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};

	comment "Send Messages";

		MAZ_EZM_fnc_checkForBlacklistedWords = {
			params [["_message","",[""]]];
			private _isFound = false;
			private _return = _message;
			private _badWords = [
				["s","h","i","t"] joinString "",
				["n","i","g","g","e"] joinString "",
				["n","i","g","g","a"] joinString "",
				["n","i","g","g","e","r"] joinString "",
				["n","i","g","g"] joinString "",
				["f","u","c","k"] joinString "",
				["c","u","n","t"] joinString "",
				["f","a","g"] joinString "",
				["g","a","y"] joinString "",
				["z","a","m"] joinString "",
				["b","i","t","c","h"] joinString "",
				["d","i","c","k"] joinString ""
			];

			{
				if(((toLower _return) find _x) != -1) then {
					_isFound = true;
					private _length = count _x;
					private _index = (toLower _return) find _x;
					_return = _return splitString "";
					for "_i" from _index to (_index + _length - 1) do {
						_return set [_i,"*"];
					};
					_return = _return joinString "";
				};
			}forEach _badWords;
			if(_isFound) then {
				_return = [_return] call MAZ_EZM_fnc_checkForBlacklistedWords;
			};
			_return
		};
		
		M9sd_fnc_module3DSpeak = {	
			params [['_object', objNull]];	
			if (isNull findDisplay 312) exitWith {};	
			_zeusLogic = objNull;	
			_zeusLogic = getAssignedCuratorLogic player;	
			if (isNull _zeusLogic) exitWith {};	
			if ((_object isEqualTo objNull) or (isNull _object)) exitWith 	
			{	
				[_zeusLogic, 'NO OBJECT SELECTED'] call BIS_fnc_showCuratorFeedbackMessage;	
			};	
			_objType = typeOf _object;	
			_objName = if (isPlayer _object) then {name _object} else {getText (configFile >> 'cfgVehicles' >> _objType >> 'displayName');};	
			if (_objName == '') then 	
			{	
				_objName = _objType;	
			};	
			M9sd_3DSpeakObjName = _objName;	
			M9sd_3DSpeakObj = _object;						
			playSound ['AddItemOK', true];	
			[] spawn 	
			{	
				with uinamespace do 	
				{	
					disableSerialization;	
					private _display = findDisplay 312 createDisplay 'RscDisplayEmpty';	
					showChat true;	
					private _bkrnd = _display ctrlCreate ['RscText', -1];	
					_bkrnd ctrlSetPosition [0.422656 * safezoneW + safezoneX,0.269 * safezoneH + safezoneY,0.144375 * safezoneW,0.132 * safezoneH];	
					_bkrnd ctrlSetBackgroundColor [0,0,0,0.75];	
					_bkrnd ctrlCommit 0;	
					private _name = _display ctrlCreate ['RscText', -1];	
					_name ctrlSetPosition [0.427812 * safezoneW + safezoneX,0.28 * safezoneH + safezoneY,0.134062 * safezoneW,0.022 * safezoneH];	
					_name ctrlSetText (missionNamespace getVariable 'M9sd_3DSpeakObjName');	
					_name ctrlCommit 0;	
						
					private _text = _display ctrlCreate ['RscText', -1];	
					_text ctrlSetPosition [0.427812 * safezoneW + safezoneX,0.302 * safezoneH + safezoneY,0.134062 * safezoneW,0.022 * safezoneH];	
					_text ctrlSetText 'Message:';	
					_text ctrlCommit 0;	
						
					private _input = _display ctrlCreate ['RscEdit', -1];	
					_input ctrlSetPosition [0.427812 * safezoneW + safezoneX,0.335 * safezoneH + safezoneY,0.134062 * safezoneW,0.022 * safezoneH];	
					_input ctrlSetText '';	
					_input ctrlSetBackgroundColor [1,1,0,0.1];	
					_input ctrlCommit 0;	
					_display setVariable ['input', _input];	
						
					private _button = _display ctrlCreate ['RscButtonMenu', -1];	
					_button ctrlSetPosition [0.427812 * safezoneW + safezoneX,0.369 * safezoneH + safezoneY,0.134062 * safezoneW,0.022 * safezoneH];	
					_button ctrlSetText 'SPEAK';	
					_button ctrlSetBackgroundColor [0.2,0.2,0.75,0.75];	
					_button ctrlAddEventHandler ['buttonclick', 	
					{	
						params ['_control'];	
						_display = ctrlParent _control;	
						_inputText = ctrlText (_display getVariable 'input');	
						_display closeDisplay 0;	
						M9sd_3DSpeakMessage = format ["“%1”", _inputText];	
						M9sd_3DSpeakMessage = [M9sd_3DSpeakMessage] call MAZ_EZM_fnc_checkForBlacklistedWords;	
						true remoteExec ['showChat'];	
						(format ['%3 (%1)  %2', M9sd_3DSpeakObjName, M9sd_3DSpeakMessage, str (side (group M9sd_3DSpeakObj))]) remoteExec ['systemChat'];	
						[[M9sd_3DSpeakObj, M9sd_3DSpeakMessage],	
						{	
							params [["_speakerObj", objnull], ["_dialogue", "lorem ipsum..."]];	
							M9sd_3DSpeakObj = _speakerObj;	
							M9sd_3DSpeakMessage = _dialogue;	
							if (!isNil 'M9sd_EH_draw3D_makesomethingspeak') then {	
								removeMissionEventHandler ['Draw3D', M9sd_EH_draw3D_makesomethingspeak];	
							};	
							M9sd_EH_draw3D_makesomethingspeak = addMissionEventHandler ['Draw3D', 	
							{	
								private _pos = M9sd_3DSpeakObj modelToWorldVisual (M9sd_3DSpeakObj selectionPosition "Head");	
								_pos set [2, (_pos select 2) + 0.35];	
								drawIcon3D 	
								[	
									"",	
									[1,1,0,1],	
									_pos,	
									0, 	
									-2, 	
									0,	
									M9sd_3DSpeakMessage,	
									2,	
									0.035,	
									"RobotoCondensedBold",	
									"center",	
									false	
								];	
							}];	
							uiSleep 5;	
							if (!isNil 'M9sd_EH_draw3D_makesomethingspeak') then {	
								removeMissionEventHandler ['Draw3D', M9sd_EH_draw3D_makesomethingspeak];	
							};	
						}] remoteExec ['spawn'];	
					}];	
					_button ctrlCommit 0;	
				};	
			};	
		};

		MAZ_EZM_fnc_sendMessageModule = {
			["Send Server Message",[
				[
					"EDIT",
					"Sender Name",
					[missionNamespace getVariable ["EZM_senderName","High Command"]]
				],
				[
					"EDIT:MULTI",
					"Message",
					["Message..."]
				],
				[
					"SIDES",
					"Sides Who See The Message",
					[west,east,independent,civilian]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_sender","_message","_side"];
				private _sides = _side call MAZ_EZM_fnc_getSidesFromString;
				_sides = _sides + [sideLogic];
				private _targets = [];
				{
					if(side (group _x) in _sides) then {
						_targets pushBack _x;
					};
				}forEach allPlayers;
				if(count _message > 300) exitWith {
					["Message too long! Cannot send, max characters is 300.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
				};
				_message = [_message] call MAZ_EZM_fnc_checkForBlacklistedWords;
				[
					[
						format ["<t color='#2596be' size='2'>%1:</t><br/><t color='#FFF' size='1.75'>%2</t>",_sender,_message],
						"PLAIN DOWN",
						2,
						true,
						true
					]
				] remoteExec ['titleText',_targets];
				missionNamespace setVariable ["EZM_senderName",_sender];
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};

		MAZ_EZM_fnc_sendSubtitleModule = {
			["Send Subtitle Message",[
				[
					"EDIT",
					"Sender Name",
					[missionNamespace getVariable ["EZM_senderName","High Command"]]
				],
				[
					"EDIT:MULTI",
					"Message",
					["Message..."]
				],
				[
					"SIDES",
					"Sides Who See The Message",
					[west,east,independent,civilian]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_sender","_message","_side"];
				private _sides = _side call MAZ_EZM_fnc_getSidesFromString;
				_sides = _sides + [sideLogic];
				private _targets = [];
				{
					if(side (group _x) in _sides) then {
						_targets pushBack _x;
					};
				}forEach allPlayers;
				if(count _message > 300) exitWith {
					["Message too long! Cannot send, max characters is 300.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
				};
				_message = [_message] call MAZ_EZM_fnc_checkForBlacklistedWords;
				[
					_sender,
					_message
				] remoteExec ['BIS_fnc_showSubtitle',_targets];
				missionNamespace setVariable ["EZM_senderName",_sender];
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};

	comment "Object Modifiers";

		MAZ_EZM_fnc_attachToNearestModule = {
			params ["_entity"];
			if(_entity isEqualTo objNull) exitWith {["No object selected.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};

			private _nearestObjects = nearestObjects [_entity,["AllVehicles"],50];
			_nearestObjects = (_nearestObjects - [_entity]);
			_nearestObject = _nearestObjects select 0;
			if(isNil "_nearestObject") exitWith {["No near objects.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			[_entity,_nearestObject] call BIS_fnc_attachToRelative;
			["Object attached.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		MAZ_EZM_fnc_detachModule = {
			params ["_entity"];
			if(_entity isEqualTo objNull) exitWith {["No object selected.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};

			{detach _x;} foreach attachedObjects _entity;
			{detach _x;} foreach attachedObjects attachedTo _entity;

			["Object detached.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};
		
		if(isNil "MAZ_EZM_editObjAtribsApply") then {
			MAZ_EZM_editObjAtribsApply = {
				params ["_obj",["_normal", false]];
				private _texture1 = ctrlText (uiNamespace getVariable ['editObjAtribsText1Edit',-1]);
				private _texture2 = ctrlText (uiNamespace getVariable ['editObjAtribsText2Edit',-1]);
				private _texture3 = ctrlText (uiNamespace getVariable ['editObjAtribsText3Edit',-1]);
				private _texture4 = ctrlText (uiNamespace getVariable ['editObjAtribsText4Edit',-1]);
				private _texture5 = ctrlText (uiNamespace getVariable ['editObjAtribsText5Edit',-1]);
				private _textures = [_texture1,_texture2,_texture3,_texture4,_texture5];
				private _objGod = _obj getVariable ['objEditGM',false];
				private _objHide = _obj getVariable ['objEditHide',false];
				private _objSim = _obj getVariable ['objEditSim',true];
				private _lockSetting = lbCurSel (uiNamespace getVariable ['editObjAtribsLockCombo', 0]);

				for "_i" from 0 to 4 do {
					[_obj,[_i,_textures select _i]] remoteExec ['setObjectTexture',0,true];
				};
				if(_objGod) then {
					_obj allowDamage false;
				} else {
					_obj allowDamage true;
				};
				if(_objHide) then {
					[_obj,true] remoteExec ['hideObject',0,true];
				} else {
					[_obj,false] remoteExec ['hideObject',0,true];
				};
				if(_objSim) then {
					[_obj,true] remoteExec ['enableSimulation',0,true];
				} else {
					[_obj,false] remoteExec ['enableSimulation',0,true];
				};
				[_obj,_lockSetting] remoteExec ['lock',0,true];
				if(_obj isKindOf "Building") then {
					if(_lockSetting in [2,3]) then {
						private _numberOfDoors = GetNumber(ConfigFile >> "CfgVehicles" >> (typeOf _obj) >> "numberOfDoors");
						if(_numberOfDoors <= 0) exitWith {};
						
						for "_i" from 1 to _numberOfDoors do
						{
							_obj setVariable [format["bis_disabled_Door_%1",_i], 1, true];
						};
					};
					if(_lockSetting in [0,1]) then {
						private _numberOfDoors = GetNumber(ConfigFile >> "CfgVehicles" >> (typeOf _obj) >> "numberOfDoors");
						if(_numberOfDoors <= 0) exitWith {};
						
						for "_i" from 1 to _numberOfDoors do
						{
							_obj setVariable [format["bis_disabled_Door_%1",_i], 0, true];
						};
					};
				};

				private _initField = ctrlText (uiNamespace getVariable ['editObjAtribsInitEdit',-1]);
				if(_initField != "") then {
					private _codeCompiled = compile _initField;
					_obj call _codeCompiled;
				};
				["Object attributes applied.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
				if (_normal) then {
					with uiNamespace do {objEditDisplay closeDisplay 0;};
				};
			};
		};

		MAZ_EZM_fnc_editObjectAttributesModule = {
			params ["_entity"];
			if(isNull _entity) exitWith {["Place the module onto an object!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			if(isNil "MAZ_EZM_editObjAtribsMenu") then {
				MAZ_EZM_editObjAtribsMenu = {
					params ["_editObj"];
					editObj = _editObj;
					with uiNamespace do {
						createDialog "RscDisplayEmpty";
						showchat true;
						objEditDisplay = findDisplay -1;
						private _editObj = missionNamespace getVariable 'editObj';
						private _objTextures = getObjectTextures _editObj;
						private _objLocked = locked _editObj;
						private _objGod = _editObj getVariable ['objEditGM',false];
						private _objHide = _editObj getVariable ['objEditHide',false];
						private _objSim = _editObj getVariable ['objEditSim',true];

						if(getText (configfile >> "CfgVehicles" >> (typeOf (missionNamespace getVariable 'editObj')) >> "displayname") == "Ground") exitWith {
							["Invalid object selected, try again.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
							with uiNamespace do {objEditDisplay closeDisplay 0;};
						};
						comment "Labels";

							editObjectAtribsLabel = objEditDisplay ctrlCreate ["RscStructuredText", 1100];
							editObjectAtribsLabel ctrlSetStructuredText parseText format ["Edit Object Attributes - '%2'<t align='right'>(%1)</t>",getText (configfile >> "CfgVehicles" >> (typeOf (missionNamespace getVariable 'editObj')) >> "displayname"), (typeOf (missionNamespace getVariable 'editObj'))];
							editObjectAtribsLabel ctrlSetPosition [0.31953 * safezoneW + safezoneX, 0.319 * safezoneH + safezoneY, 0.360937 * safezoneW, 0.022 * safezoneH];
							editObjectAtribsLabel ctrlSetTextColor [1,1,1,1];
							editObjectAtribsLabel ctrlSetBackgroundColor [0.1,0.5,0,1];
							editObjectAtribsLabel ctrlCommit 0;

							editObjAtribsBG = objEditDisplay ctrlCreate ["RscPicture", 1200];
							editObjAtribsBG ctrlSetText "#(argb,8,8,3)color(0,0,0,0.6)";
							editObjAtribsBG ctrlSetPosition [0.319529 * safezoneW + safezoneX, 0.346 * safezoneH + safezoneY, 0.360937 * safezoneW, 0.33 * safezoneH];
							editObjAtribsBG ctrlCommit 0;

							editObjAtribsFrame = objEditDisplay ctrlCreate ["RscFrame", 1800];
							editObjAtribsFrame ctrlSetPosition [0.319531 * safezoneW + safezoneX, 0.346 * safezoneH + safezoneY, 0.360937 * safezoneW, 0.33 * safezoneH];
							editObjAtribsFrame ctrlCommit 0;

							editObjAtribsText1Label = objEditDisplay ctrlCreate ["RscStructuredText", 1101];
							editObjAtribsText1Label ctrlSetStructuredText parseText "Texture #0";
							editObjAtribsText1Label ctrlSetPosition [0.324687 * safezoneW + safezoneX, 0.357 * safezoneH + safezoneY, 0.103125 * safezoneW, 0.022 * safezoneH];
							editObjAtribsText1Label ctrlSetTextColor [1,1,1,1];
							editObjAtribsText1Label ctrlSetBackgroundColor [0,0,0,0];
							editObjAtribsText1Label ctrlCommit 0;

							editObjAtribsText2Label = objEditDisplay ctrlCreate ["RscStructuredText", 1102];
							editObjAtribsText2Label ctrlSetStructuredText parseText "Texture #1";
							editObjAtribsText2Label ctrlSetPosition [0.324687 * safezoneW + safezoneX, 0.401 * safezoneH + safezoneY, 0.103125 * safezoneW, 0.022 * safezoneH];
							editObjAtribsText2Label ctrlSetTextColor [1,1,1,1];
							editObjAtribsText2Label ctrlSetBackgroundColor [0,0,0,0];
							editObjAtribsText2Label ctrlCommit 0;

							editObjAtribsText3Label = objEditDisplay ctrlCreate ["RscStructuredText", 1103];
							editObjAtribsText3Label ctrlSetStructuredText parseText "Texture #2";
							editObjAtribsText3Label ctrlSetPosition [0.324687 * safezoneW + safezoneX, 0.445 * safezoneH + safezoneY, 0.103125 * safezoneW, 0.022 * safezoneH];
							editObjAtribsText3Label ctrlSetTextColor [1,1,1,1];
							editObjAtribsText3Label ctrlSetBackgroundColor [0,0,0,0];
							editObjAtribsText3Label ctrlCommit 0;

							editObjAtribsText4Label = objEditDisplay ctrlCreate ["RscStructuredText", 1104];
							editObjAtribsText4Label ctrlSetStructuredText parseText "Texture #3";
							editObjAtribsText4Label ctrlSetPosition [0.324687 * safezoneW + safezoneX, 0.489 * safezoneH + safezoneY, 0.103125 * safezoneW, 0.022 * safezoneH];
							editObjAtribsText4Label ctrlSetTextColor [1,1,1,1];
							editObjAtribsText4Label ctrlSetBackgroundColor [0,0,0,0];
							editObjAtribsText4Label ctrlCommit 0;

							editObjAtribsText5Label = objEditDisplay ctrlCreate ["RscStructuredText", 1105];
							editObjAtribsText5Label ctrlSetStructuredText parseText "Texture #4";
							editObjAtribsText5Label ctrlSetPosition [0.324687 * safezoneW + safezoneX, 0.533 * safezoneH + safezoneY, 0.103125 * safezoneW, 0.022 * safezoneH];
							editObjAtribsText5Label ctrlSetTextColor [1,1,1,1];
							editObjAtribsText5Label ctrlSetBackgroundColor [0,0,0,0];
							editObjAtribsText5Label ctrlCommit 0;

							editObjAtribsTextFrame = objEditDisplay ctrlCreate ["RscFrame", 1801];
							editObjAtribsTextFrame ctrlSetPosition [0.324687 * safezoneW + safezoneX, 0.357 * safezoneH + safezoneY, 0.139219 * safezoneW, 0.231 * safezoneH];
							editObjAtribsTextFrame ctrlCommit 0;

							editObjAtribsInitFrame = objEditDisplay ctrlCreate ["RscFrame", 1802];
							editObjAtribsInitFrame ctrlSetPosition [0.469062 * safezoneW + safezoneX, 0.357 * safezoneH + safezoneY, 0.20625 * safezoneW, 0.231 * safezoneH];
							editObjAtribsInitFrame ctrlCommit 0;

							editObjAtribsInitLabel = objEditDisplay ctrlCreate ["RscStructuredText", 1106];
							editObjAtribsInitLabel ctrlSetStructuredText parseText "Object Init:";
							editObjAtribsInitLabel ctrlSetPosition [0.474219 * safezoneW + safezoneX, 0.357 * safezoneH + safezoneY, 0.103125 * safezoneW, 0.022 * safezoneH];
							editObjAtribsInitLabel ctrlSetTextColor [1,1,1,1];
							editObjAtribsInitLabel ctrlSetBackgroundColor [0,0,0,0];
							editObjAtribsInitLabel ctrlCommit 0;

							editObjAtribsModiBtnFrame = objEditDisplay ctrlCreate ["RscFrame", 1803];
							editObjAtribsModiBtnFrame ctrlSetPosition [0.324687 * safezoneW + safezoneX, 0.599 * safezoneH + safezoneY, 0.190781 * safezoneW, 0.066 * safezoneH];
							editObjAtribsModiBtnFrame ctrlCommit 0;

							editObjAtribsLockFrame = objEditDisplay ctrlCreate ["RscFrame", 1804];
							editObjAtribsLockFrame ctrlSetPosition [0.520625 * safezoneW + safezoneX,0.599 * safezoneH + safezoneY,0.0979687 * safezoneW,0.066 * safezoneH];
							editObjAtribsLockFrame ctrlCommit 0;

							editObjAtribsLockLabel = objEditDisplay ctrlCreate ["RscStructuredText", 1107];
							editObjAtribsLockLabel ctrlSetStructuredText parseText "Lock:";
							editObjAtribsLockLabel ctrlSetPosition [0.520625 * safezoneW + safezoneX,0.599 * safezoneH + safezoneY,0.0876563 * safezoneW,0.033 * safezoneH];
							editObjAtribsLockLabel ctrlSetTextColor [1,1,1,1];
							editObjAtribsLockLabel ctrlSetBackgroundColor [0,0,0,0];
							editObjAtribsLockLabel ctrlCommit 0;

							editObjAtribsApplyFrame = objEditDisplay ctrlCreate ["RscFrame", 1805];
							editObjAtribsApplyFrame ctrlSetPosition [0.62375 * safezoneW + safezoneX,0.599 * safezoneH + safezoneY,0.0515625 * safezoneW,0.066 * safezoneH];
							editObjAtribsApplyFrame ctrlCommit 0;

						comment "Edit Texture Edit";

							editObjAtribsText1Edit = objEditDisplay ctrlCreate ["RscEdit", 1400];
							editObjAtribsText1Edit ctrlSetPosition [0.329844 * safezoneW + safezoneX, 0.379 * safezoneH + safezoneY, 0.128906 * safezoneW, 0.022 * safezoneH];
							editObjAtribsText1Edit ctrlSetBackgroundColor [0,0,0,0.5];
							if(count _objTextures >= 1) then {
								editObjAtribsText1Edit ctrlSetText (_objTextures select 0);
							};
							editObjAtribsText1Edit ctrlSetTooltip "Changes the texture of designated index.";
							editObjAtribsText1Edit ctrlCommit 0;

							editObjAtribsText2Edit = objEditDisplay ctrlCreate ["RscEdit", 1401];
							editObjAtribsText2Edit ctrlSetPosition [0.329844 * safezoneW + safezoneX, 0.423 * safezoneH + safezoneY, 0.128906 * safezoneW, 0.022 * safezoneH];
							editObjAtribsText2Edit ctrlSetBackgroundColor [0,0,0,0.5];
							if(count _objTextures >= 2) then {
								editObjAtribsText2Edit ctrlSetText (_objTextures select 1);
							};
							editObjAtribsText2Edit ctrlSetTooltip "Changes the texture of designated index.";
							editObjAtribsText2Edit ctrlCommit 0;

							editObjAtribsText3Edit = objEditDisplay ctrlCreate ["RscEdit", 1402];
							editObjAtribsText3Edit ctrlSetPosition [0.329844 * safezoneW + safezoneX, 0.467 * safezoneH + safezoneY, 0.128906 * safezoneW, 0.022 * safezoneH];
							editObjAtribsText3Edit ctrlSetBackgroundColor [0,0,0,0.5];
							if(count _objTextures >= 3) then {
								editObjAtribsText3Edit ctrlSetText (_objTextures select 2);
							};
							editObjAtribsText3Edit ctrlSetTooltip "Changes the texture of designated index.";
							editObjAtribsText3Edit ctrlCommit 0;

							editObjAtribsText4Edit = objEditDisplay ctrlCreate ["RscEdit", 1403];
							editObjAtribsText4Edit ctrlSetPosition [0.329844 * safezoneW + safezoneX, 0.511 * safezoneH + safezoneY, 0.128906 * safezoneW, 0.022 * safezoneH];
							editObjAtribsText4Edit ctrlSetBackgroundColor [0,0,0,0.5];
							if(count _objTextures >= 4) then {
								editObjAtribsText4Edit ctrlSetText (_objTextures select 3);
							};
							editObjAtribsText4Edit ctrlSetTooltip "Changes the texture of designated index.";
							editObjAtribsText4Edit ctrlCommit 0;

							editObjAtribsText5Edit = objEditDisplay ctrlCreate ["RscEdit", 1404];
							editObjAtribsText5Edit ctrlSetPosition [0.329844 * safezoneW + safezoneX, 0.555 * safezoneH + safezoneY, 0.128906 * safezoneW, 0.022 * safezoneH];
							editObjAtribsText5Edit ctrlSetBackgroundColor [0,0,0,0.5];
							if(count _objTextures >= 5) then {
								editObjAtribsText5Edit ctrlSetText (_objTextures select 4);
							};
							editObjAtribsText5Edit ctrlSetTooltip "Changes the texture of designated index.";
							editObjAtribsText5Edit ctrlCommit 0;

							if(count _objTextures >= 6) then {
								["There are more textures on this object than shown.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
							};

						comment "Init Field";

							editObjAtribsInitEdit = objEditDisplay ctrlCreate ["RscEditMulti", 1405];
							editObjAtribsInitEdit ctrlSetPosition [0.474219 * safezoneW + safezoneX, 0.379 * safezoneH + safezoneY, 0.195937 * safezoneW, 0.198 * safezoneH];
							editObjAtribsInitEdit ctrlSetBackgroundColor [0,0,0,0.5];
							editObjAtribsInitEdit ctrlSetTooltip "Edit the init of this object. '_this' refers to the local object.\n**Running code can get you kicked from the server if you are inexperienced, use at your own risk.**";
							editObjAtribsInitEdit ctrlCommit 0;

						comment "Modifiers Buttons";

							editObjAtribsGMBtn = objEditDisplay ctrlCreate ["RscButtonMenu", 2400];
							editObjAtribsGMBtn ctrlSetStructuredText parseText "<t align='center'>God Mode</t>";
							editObjAtribsGMBtn ctrlSetPosition [0.329844 * safezoneW + safezoneX, 0.61 * safezoneH + safezoneY, 0.0464063 * safezoneW, 0.044 * safezoneH];
							if(_objGod) then {
								editObjAtribsGMBtn ctrlSetTextColor [0.1,0.5,0,1];
							} else {
								editObjAtribsGMBtn ctrlSetTextColor [1,1,1,1];
							};
							editObjAtribsGMBtn ctrlSetBackgroundColor [0,0,0,0.6];
							editObjAtribsGMBtn ctrlAddEventHandler ["ButtonClick",{
								private _objGod = editObj getVariable ['objEditGM',false];
								if(_objGod) then {
									with uiNamespace do {
										editObjAtribsGMBtn ctrlSetTextColor [1,1,1,1];
										editObjAtribsGMBtn ctrlCommit 0;
									};
									editObj setVariable ['objEditGM',false];
								} else {
									with uiNamespace do {
										editObjAtribsGMBtn ctrlSetTextColor [0.1,0.5,0,1];
										editObjAtribsGMBtn ctrlCommit 0;
									};
									editObj setVariable ['objEditGM',true];
								};
							}];
							editObjAtribsGMBtn ctrlSetTooltip "Sets the object to god mode (Cannot be destroyed).";
							editObjAtribsGMBtn ctrlCommit 0;

							editObjAtribsHideBtn = objEditDisplay ctrlCreate ["RscButtonMenu", 2401];
							editObjAtribsHideBtn ctrlSetStructuredText parseText "<t align='center'>Hide Object</t>";
							editObjAtribsHideBtn ctrlSetPosition [0.396875 * safezoneW + safezoneX, 0.61 * safezoneH + safezoneY, 0.0464063 * safezoneW, 0.044 * safezoneH];
							if(_objHide) then {
								editObjAtribsHideBtn ctrlSetTextColor [0.1,0.5,0,1];
							} else {
								editObjAtribsHideBtn ctrlSetTextColor [1,1,1,1];
							};
							editObjAtribsHideBtn ctrlSetBackgroundColor [0,0,0,0.6];
							editObjAtribsHideBtn ctrlAddEventHandler ["ButtonClick",{
								private _objHide = editObj getVariable ['objEditHide',false];
								if(_objHide) then {
									with uiNamespace do {
										editObjAtribsHideBtn ctrlSetTextColor [1,1,1,1];
										editObjAtribsHideBtn ctrlCommit 0;
									};
									editObj setVariable ['objEditHide',false];
								} else {
									with uiNamespace do {
										editObjAtribsHideBtn ctrlSetTextColor [0.1,0.5,0,1];
										editObjAtribsHideBtn ctrlCommit 0;
									};
									editObj setVariable ['objEditHide',true];
								};
							}];
							editObjAtribsHideBtn ctrlSetTooltip "Sets the object to hidden (Invisible).";
							editObjAtribsHideBtn ctrlCommit 0;

							editObjAtribsSimBtn = objEditDisplay ctrlCreate ["RscButtonMenu", 2402];
							editObjAtribsSimBtn ctrlSetStructuredText parseText "<t align='center'>Enable Sim</t>";
							editObjAtribsSimBtn ctrlSetPosition [0.463906 * safezoneW + safezoneX, 0.61 * safezoneH + safezoneY, 0.0464063 * safezoneW, 0.044 * safezoneH];
							if(_objSim) then {
								editObjAtribsSimBtn ctrlSetTextColor [0.1,0.5,0,1];
							} else {
								editObjAtribsSimBtn ctrlSetTextColor [1,1,1,1];
							};
							editObjAtribsSimBtn ctrlSetBackgroundColor [0,0,0,0.6];
							editObjAtribsSimBtn ctrlAddEventHandler ["ButtonClick",{
								private _objSim = editObj getVariable ['objEditSim',true];
								if(_objSim) then {
									with uiNamespace do {
										editObjAtribsSimBtn ctrlSetTextColor [1,1,1,1];
										editObjAtribsSimBtn ctrlCommit 0;
									};
									editObj setVariable ['objEditSim',false];
								} else {
									with uiNamespace do {
										editObjAtribsSimBtn ctrlSetTextColor [0.1,0.5,0,1];
										editObjAtribsSimBtn ctrlCommit 0;
									};
									editObj setVariable ['objEditSim',true];
								};
							}];
							editObjAtribsSimBtn ctrlSetTooltip "Sets the object simulation (Does it have physics and interaction).";
							editObjAtribsSimBtn ctrlCommit 0;

							editObjAtribsLockCombo = objEditDisplay ctrlCreate ["RscCombo", 2100];
							editObjAtribsLockCombo ctrlSetPosition [0.525781 * safezoneW + safezoneX,0.621 * safezoneH + safezoneY,0.0825 * safezoneW,0.022 * safezoneH];
							editObjAtribsLockCombo ctrlSetTooltip "Makes the object locked or unlocked.";
							editObjAtribsLockCombo ctrlCommit 0;

							editObjAtribsLockCombo lbAdd "Unlocked";
							editObjAtribsLockCombo lbAdd "Default";
							editObjAtribsLockCombo lbAdd "Locked";
							editObjAtribsLockCombo lbAdd "Locked to Players";

							if(_editObj isKindOf "Building") then {
								private _buildingLock = _editObj getVariable "bis_disabled_Door_1";
								if(_buildingLock == 1) then {
									editObjAtribsLockCombo lbSetCurSel 2;
								} else {
									editObjAtribsLockCombo lbSetCurSel 0;
								};
							} else {
								editObjAtribsLockCombo lbSetCurSel _objLocked;
							};

						comment "Apply";

							editObjAtribsApplyBtn = objEditDisplay ctrlCreate ["RscButtonMenu", 2403];
							editObjAtribsApplyBtn ctrlSetStructuredText parseText "<t size='0.2'>&#160;</t><br/><t align='center' size='1.25'>Apply</t>";
							editObjAtribsApplyBtn ctrlSetPosition [0.628906 * safezoneW + safezoneX,0.61 * safezoneH + safezoneY,0.04125 * safezoneW,0.044 * safezoneH];
							editObjAtribsApplyBtn ctrlSetTextColor [1,1,1,1];
							editObjAtribsApplyBtn ctrlSetBackgroundColor [0.1,0.5,0,1];
							editObjAtribsApplyBtn ctrlAddEventHandler ["ButtonClick",{
								[editObj, true] spawn MAZ_EZM_editObjAtribsApply;
							}];
							editObjAtribsApplyBtn ctrlSetTooltip "Applies the settings set and runs the code provided.";
							editObjAtribsApplyBtn ctrlCommit 0;
					};
					["Object Attributes Menu opened.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
				};
			};
			[_entity] call MAZ_EZM_editObjAtribsMenu;
		};

		MAZ_EZM_fnc_toggleSimulationModule = {
			params ["_entity"];
			if(_entity isEqualTo objNull) exitWith {["No object selected.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};

			if(simulationEnabled _entity) then {
				[_entity,false] remoteExec ["enableSimulationGlobal",2];
				["Simulation disabled."] call MAZ_EZM_fnc_systemMessage;
			} else {
				[_entity,true] remoteExec ["enableSimulationGlobal",2];
				["Simulation enabled."] call MAZ_EZM_fnc_systemMessage;
			};
			playSound "addItemOk";
		};

		MAZ_EZM_fnc_toggleInvincibleModule = {
			params ["_entity"];
			if(_entity isEqualTo objNull) exitWith {["No object selected.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};

			if(isDamageAllowed _entity) then {
				[_entity,false] remoteExec ["allowDamage",0];
				["Object is god moded."] call MAZ_EZM_fnc_systemMessage;
			} else {
				[_entity,true] remoteExec ["allowDamage",0];
				["Object is no longer god moded."] call MAZ_EZM_fnc_systemMessage;
			};
			playSound "addItemOk";
		};

		MAZ_EZM_fnc_hideObjectModule = {
			params ["_entity"];
			if(_entity isEqualTo objNull) exitWith {["No object selected.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};

			[_entity,true] remoteExec ["hideObjectGlobal",2];
			if(isNil "MAZ_EZM_hiddenObjects") then {
				MAZ_EZM_hiddenObjects = [_entity];
			} else {
				MAZ_EZM_hiddenObjects pushBack _entity;
			};

			["Object is hidden.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		MAZ_EZM_fnc_unHideObjectModule = {
			params ["_entity"];
			if(_entity isEqualTo objNull) exitWith {["No object selected.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};

			[_entity,false] remoteExec ["hideObjectGlobal",2];
			MAZ_EZM_hiddenObjects = (MAZ_EZM_hiddenObjects - [_entity]);

			["Object is no longer hidden.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		MAZ_EZM_fnc_unHideObjectAllModule = {
			params ["_entity"];
			if(isNil "MAZ_EZM_hiddenObjects") exitWith {};
			{
				[_x,false] remoteExec ['hideObjectGlobal',2];
			}forEach MAZ_EZM_hiddenObjects;
			MAZ_EZM_hiddenObjects = [];

			["All hidden objects are revealed.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		MAZ_EZM_fnc_replaceWithSimpleObject = {
			params ["_object"];
			if(isPlayer _object  || (typeOf _object) isKindOf "CAManBase") exitWith {["Not an object!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			private _typeOf = typeOf _object;
			private _objPos = getPosASL _object;
			private _vectorDir = vectorDir _object;
			private _vectorUp = vectorUp _object;

			deleteVehicle _object;
			private _newSimpleObj = createSimpleObject [_typeOf,_objPos];
			_newSimpleObj setVectorDirAndUp [_vectorDir,_vectorUp];
			private _logic = createVehicle ["Land_HelipadEmpty_F",_objPos,[],0,"CAN_COLLIDE"];
			[_logic] call MAZ_EZM_fnc_addObjectToInterface;
			[_newSimpleObj,_logic] call BIS_fnc_attachToRelative;
			[_newSimpleObj,_logic] spawn {
				params ["_newSimpleObj","_logic"];
				[[_newSimpleObj,_logic],{
					params ["_newSimpleObj","_logic"];
					waitUntil {isNull _logic};
					deleteVehicle _newSimpleObj;
				}] remoteExec ["Spawn",_logic];
			};
			["Object replaced with simple object.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

	comment "Player Modifiers";

		MAZ_EZM_fnc_disarmModule = {
			params ["_entity"];
			if(isNull _entity || !((typeOf _entity) isKindOf "Man")) exitWith {["Unit is not suitable.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			_entity remoteExec ['removeAllWeapons'];

			["Weapons have been removed from the unit.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		MAZ_EZM_fnc_healAndReviveModule = {
			params ["_entity"];
			if(isNull _entity || !((typeOf _entity) isKindOf "Man")) exitWith {["Unit is not suitable.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};

			if(isPlayer _entity) then {
				[[],{
					player setDamage 0;
					["#rev",1,player] call BIS_fnc_reviveOnState;
				}] remoteExec ['spawn',_entity];
			} else {
				_entity setDamage 0; 
			};

			["The unit has been healed, and revived if possible.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};
		
		MAZ_EZM_fnc_healAndReviveAllModule = {	
			{	
				[_x] call MAZ_EZM_fnc_healAndReviveModule;	
			}forEach allPlayers;	
		};

		MAZ_EZM_fnc_changeSideModule = {
			params ["_entity"];
			if(isNull _entity || !((typeOf _entity) isKindOf "Man")) exitWith {["Unit is not suitable.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			["Change Unit Side",[
				[
					"SIDES",
					"New Side",
					(side _entity)
				]
			],{
				params ["_values","_args","_display"];
				private _grp = (createGroup [(_values # 0),true]);

				if((typeOf _args) isKindOf "Man") then {
					private _count = {alive _x} count (units (group _args)); 
					if(_count > 1 && !isPlayer _args) then {
						private _leader = leader (group _args);
						(units (group _args)) joinSilent _grp;
						_grp selectLeader _leader;
						["Unit group side is changed."] call MAZ_EZM_fnc_systemMessage;
					} else {
						[_args] joinSilent _grp;
						["Unit side is changed."] call MAZ_EZM_fnc_systemMessage;
					};
				};
				if((typeOf _args) isKindOf "LandVehicle" || (typeOf _args) isKindOf "Air" || (typeOf _args) isKindOf "Ship") then {
					(crew _args) joinSilent _grp;
					["Vehicle crew side is changed."] call MAZ_EZM_fnc_systemMessage;
				};
				playSound 'addItemOk';
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},_entity] call MAZ_EZM_fnc_createDialog;
		};

		MAZ_EZM_fnc_forceEjectModule = {
			params ["_entity"];
			if(isNull _entity) exitWith {["No object selected.","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};

			{
				moveOut _x;
			} foreach (crew _entity);

			["Units have been ejected from the vehicle.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		MAZ_EZM_fnc_muteServerModule = {
			if(isNil "EZM_canMute") then {
				EZM_canMute = true;
			};
			if(!EZM_canMute) exitWith {["You can't mute again this quickly!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};

			private _curatorUnits = [];
			{
				_curatorUnits pushBack (getAssignedCuratorUnit _x);
			}forEach allCurators;

			[[],{
				0 enableChannel [true,false];
				1 enableChannel [true,false]; 
				2 enableChannel [true,false];
				3 enableChannel [true,false];
			}] remoteExec ['spawn',(allPlayers - _curatorUnits)];

			["All players have been muted. You won't be able to mute them again for another 5 minutes.","addItemOk"] call MAZ_EZM_fnc_systemMessage;

			[] spawn {
				EZM_canMute = false;
				sleep (60*5);
				EZM_canMute = true;
			};

			_curatorUnits spawn {
				sleep 60;
				[[],{
					0 enableChannel [true,true];
					1 enableChannel [true,true]; 
					2 enableChannel [true,true];
					3 enableChannel [true,true];
				}] remoteExec ['spawn',(allPlayers - _this)];
			};
		};

		MAZ_EZM_fnc_unmuteServerModule = {
			private _curatorUnits = [];
			{
				_curatorUnits pushBack (getAssignedCuratorUnit _x);
			}forEach allCurators;

			[[],{
				0 enableChannel [true,true];
				1 enableChannel [true,true]; 
				2 enableChannel [true,true];
				3 enableChannel [true,true];
			}] remoteExec ['spawn',(allPlayers - _curatorUnits)];

			["All players have been unmuted.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

	comment "Server Settings";

		MAZ_EZM_fnc_getFriendlyTo = { 
			params ["_side"]; 
			private _friendlySides = []; 
			{ 
				private _isFriendly = _side getFriend _x; 
				if(_isFriendly > 0.6) then { 
					comment "Friendly"; 
					_friendlySides pushBack _x; 
				} else { 
					comment "Hostile"; 
					
				}; 
			} forEach ([west,east,independent,civilian] - [_side]); 
			_friendlySides 
		}; 

		MAZ_EZM_fnc_getSidesFromString = {
			params [["_sides",[],[west,[]]]];
			if(_sides isEqualType west) then {_sides = [_sides];};
			private _newArray = [];
			{
				switch (str _x) do {
					case "WEST": {
						_newArray pushBack ([1] call BIS_fnc_sideType);
					};
					case "EAST": {
						_newArray pushBack ([0] call BIS_fnc_sideType);
					};
					case "GUER": {
						_newArray pushBack ([2] call BIS_fnc_sideType);
					};
					case "CIV": {
						_newArray pushBack ([3] call BIS_fnc_sideType);
					};
				};
			}forEach _sides;
			_newArray
		};

		MAZ_EZM_fnc_changeSideRelationsModule = {
			["Change Side Relations",[
				[
					"SIDES",
					"Sides BLUFOR are friendly to:",
					[west] call MAZ_EZM_fnc_getFriendlyTo
				],
				[
					"SIDES",
					"Sides OPFOR is friendly to:",
					[east] call MAZ_EZM_fnc_getFriendlyTo
				],
				[
					"SIDES",
					"Sides INDEPENDENT is friendly to:",
					[independent] call MAZ_EZM_fnc_getFriendlyTo
				],
				[
					"SIDES",
					"Sides CIVILIANS are friendly to:",
					[civilian] call MAZ_EZM_fnc_getFriendlyTo
				]
			],{
				params ["_values","_args","_display"];
				{
					private _sides = [_x] call MAZ_EZM_fnc_getSidesFromString;

					private _side = switch (_forEachIndex) do {
						case 0: {west};
						case 1: {east};
						case 2: {independent};
						case 3: {civilian};
					};

					{
						[[_side,_x],{
							params ["_sideChange","_sideFriendly"];
							_sideChange setFriend [_sideFriendly,1];
						}] remoteExec ['spawn',2];
					}forEach _sides;
					
					private _enemySides = ([west,east,independent,civilian] - [_side]) - _sides;

					{
						[[_side,_x],{
							params ["_sideChange","_sideFriendly"];
							_sideChange setFriend [_sideFriendly,0.5];
						}] remoteExec ['spawn',2];
					}forEach _enemySides;
				}forEach _values;
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};

		MAZ_EZM_fnc_setRespawnTimerModule = {
			["Set Respawn Timer",[
				[
					"SLIDER",
					"Timer",
					[1,15,15]
				]
			],{
				params ["_values","_args","_display"];
				private _timer = round (_values # 0);
				MAZ_EZM_respawnTimer = _timer + 5;
				publicVariable 'MAZ_EZM_respawnTimer';
				[[],{
					if(!isNil "MAZ_EZM_respawnTimerEH") then {
						player removeEventHandler ["Respawn",MAZ_EZM_respawnTimerEH];
					};
					setPlayerRespawnTime MAZ_EZM_respawnTimer;
					MAZ_EZM_respawnTimerEH = player addEventHandler ["Respawn",{
						[] spawn {
							sleep 3;
							setPlayerRespawnTime MAZ_EZM_respawnTimer;
						};
					}];
				}] remoteExec ['spawn',0,'MAZ_EZM_respawnTimer'];
				["Respawn timer applied.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};

		MAZ_EZM_fnc_setViewDistance = {
			["Set View Distance",[
				[
					"SLIDER",
					"View Distance",
					[0,8000,viewDistance]
				],
				[
					"TOOLBOX",
					"Global or Local",
					[true,[["Local","Changes view distance for you only."],["Global","Changes view distance for everyone."]]]
				]
			],{
				params ["_values","_args","_display"];
				private _viewDistance = round (_values # 0);
				private _isGlobal = _values # 1;
				if(_isGlobal) then {
					MAZ_EZM_viewDistance = _viewDistance;
					_viewDistance remoteExec ['setViewDistance',0,'MAZ_newViewDistance'];
				} else {
					setViewDistance _viewDistance;
				};
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},[]] call MAZ_EZM_fnc_createDialog;
		};

		MAZ_EZM_fnc_noTeamKillersModule = {
			_tkers = 0;
			{
				if (rating _x <= -2000) then {
					_tkers = _tkers + 1;
					[_x, abs(rating _x)] remoteExec ["addRating",0];
				};
			} forEach allPlayers;
			
			if (_tkers > 0) then {
				systemChat format["[ LOG ] '%1' teamkillers removed.", _tkers];
				playSound "3DEN_notificationDefault";
			} else {
				systemChat format["[ LOG ] Nobody is currently a teamkiller!"];
				playSound "3DEN_notificationWarning";
			};
		};

		MAZ_EZM_fnc_disableMortarsModule = {
			if (!((((getAssignedCuratorLogic player) == ((allCurators select { str _x == "bis_curator" }) # 0)) || (!((call BIS_fnc_admin) == 0))))) exitWith { 
				systemChat "[ LOG ] This module has been restricted to usage by Game Master only.";
				playSound "3DEN_notificationWarning";
			};
			
			MAZ_EZM_mortarTypes = ["I_Mortar_01_F","O_Mortar_01_F","I_E_Mortar_01_F","B_G_Mortar_01_F","I_G_Mortar_01_F","O_G_Mortar_01_F","B_Mortar_01_F","B_T_Mortar_01_F"];
			publicVariable 'MAZ_EZM_mortarTypes';

			if(isNil "MAZ_EZM_mortarsDisabled") then {
				MAZ_EZM_mortarsDisabled = false;
				publicVariable 'MAZ_EZM_mortarsDisabled';
			};

			if(MAZ_EZM_mortarsDisabled) then {
				[[],{
					if(!isNil "MAZ_EZM_disableMortarEH") then {
						player removeEventhandler ["GetInMan",MAZ_EZM_disableMortarEH];
					};
				}] remoteExec ['spawn',0,"MAZ_EZM_toggleMortars"];
				["Mortars have been re-enabled.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
				MAZ_EZM_mortarsDisabled = false;
				publicVariable 'MAZ_EZM_mortarsDisabled';
			} else {
				[[],{
					if(!isNil "MAZ_EZM_disableMortarEH") then {
						player removeEventhandler ["GetInMan",MAZ_EZM_disableMortarEH];
					};
					MAZ_EZM_disableMortarEH = player addEventHandler ["GetInMan",{
						params ["_unit", "_role", "_vehicle", "_turret"];
						if((typeOf _vehicle) in MAZ_EZM_mortarTypes) then {
							player action ["getOut", _vehicle];
							hint "Sorry! Mortars have been disabled by the Zeus!";
						};
					}];
				}] remoteExec ['spawn',0,"MAZ_EZM_toggleMortars"];
				["Mortars have been disabled.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
				MAZ_EZM_mortarsDisabled = true;
				publicVariable 'MAZ_EZM_mortarsDisabled';
			};
		};
		
		MAZ_EZM_fnc_482SideSwitchInit = {	
			["Set View Distance",[	
				[	
					"SIDES",	
					"Side to switch to",	
					west	
				],	
				[	
					"COMBO",	
					"Side Flag",	
					[	
						[],	
						[	
							["NATO (BLUFOR)","","\A3\Data_F\Flags\flag_NATO_CO.paa"],	
							["CSAT (OPFOR)","","a3\data_f\flags\flag_csat_co.paa"],	
							["AAF (INDEPENDENT)","","a3\data_f\flags\flag_aaf_co.paa"],	
							["FIA (OPFOR)","","a3\data_f\flags\flag_fia_co.paa"],	
							["RUS (OPFOR)","","a3\data_f_enoch\flags\flag_rus_co.paa"],	
							["LDF (INDEPENDENT)","","a3\data_f_enoch\flags\flag_eaf_co.paa"],	
							["Syndikat (INDEPENDENT)","","a3\data_f_exp\flags\flag_synd_co.paa"],	
							["United Nations","","a3\data_f\flags\flag_uno_co.paa"],	
							["United States","","a3\data_f\flags\flag_us_co.paa"],	
							["United Kingdom","","a3\data_f\flags\flag_uk_co.paa"],	
							["ION","","a3\data_f\flags\flag_ion_co.paa"]	
						],	
						0	
					]	
				],	
				[	
					"EDIT",	
					"Side Name Override",	
					["Override"]	
				]	
			],{	
				params ["_values","_args","_display"];	
				_values params ["_side","_flagIndex","_nameOverride"];	
				([	
					["\A3\Data_F\Flags\flag_NATO_CO.paa","NATO (BLUFOR)"],	
					["a3\data_f\flags\flag_csat_co.paa","CSAT (OPFOR)"],	
					["a3\data_f\flags\flag_aaf_co.paa","AAF (INDEPENDENT)"],	
					["a3\data_f\flags\flag_fia_co.paa","FIA (OPFOR)"],	
					["a3\data_f_enoch\flags\flag_rus_co.paa","RUSSIA (OPFOR)"],	
					["a3\data_f_enoch\flags\flag_eaf_co.paa","LDF (INDEPENDENT)"],	
					["a3\data_f_exp\flags\flag_synd_co.paa","Syndikat (INDEPENDENT)"],	
					["a3\data_f\flags\flag_uno_co.paa","United Nations"],	
					["a3\data_f\flags\flag_us_co.paa","United States"],	
					["a3\data_f\flags\flag_uk_co.paa","United Kingdom"],	
					["a3\data_f\flags\flag_ion_co.paa","ION"]	
				] select _flagIndex) params ["_flag","_name"];	
				if(_nameOverride != "" && _nameOverride != "Override") then {	
					_name = _nameOverride;	
				};	
				[_side,_flag,_name] call MAZ_EZM_fnc_482SideSwitcher;	
				_display closeDisplay 1;	
			},{	
				params ["_values","_args","_display"];	
				_display closeDisplay 2;	
			},[]] call MAZ_EZM_fnc_createDialog;	
		};	
		
		MAZ_EZM_fnc_482SideSwitcher = {	
			params [	
				["_side",west,[west]],	
				["_flag","\A3\Data_F\Flags\flag_NATO_CO.paa",[""]],	
				["_text","BLUFOR<br/>(NATO)",[""]]	
			];	
			private _defaultGroup = createGroup _side;	
			private _defaultGroupLogic = _defaultGroup createUnit ['Logic', [0,0,0], [], 0, 'NONE'];  	
			private _color = ([_side] call BIS_fnc_sideColor) call BIS_fnc_colorRGBAtoHTML;	
			private _structuredText = format ["<t color='#ffffff' font='PuristaLight' size='1' align='center'>--------------------------------------------------------------<br/><t color='#FF00BFBF' font='RobotoCondensed' size='1.3'>You have been assigned to a team!<br/><t color='#ffffff' font='PuristaLight' size='1' align='center'>--------------------------------------------------------------<br/><t color='#ffffff' font='PuristaLight' size='5' align='center'><br/><img image='%3'></img><br/><br/><t color='%2' font='puristaBold' size='2'>%1<br/><t color='#ffffff' font='PuristaLight' size='1' align='center'>--------------------------------------------------------------</t>", _text, _color, _flag];	
			private _stringToHint = parseText _structuredText;	
			[[_defaultGroup,_stringToHint],{	
				params ["_group","_text"];	
				if (!hasInterface) exitWith {};	
				waitUntil { !isNil { player } && { !isNull player } };	
				waitUntil { !isNull (findDisplay 46) };	
				sleep 0.1;	
				if(!(isNull (getAssignedCuratorLogic player))) exitWith {};	
				if(side (group player) != side _group) then {	
					while {(side (group player) != side _group)} do {	
						[player] joinSilent _group;	
						sleep 0.5;	
					};	
					hint _text;	
				};	
			}] remoteExec ['spawn',0,"EZM_sideSwitcher"];	
		};

	comment "Special Effects";

		MAZ_EZM_fnc_toggleLampsModule = {
			private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
			["Toggle City Lights",[
				[
					"SLIDER:RADIUS",
					"Radius",
					[10,(getnumber (configfile >> "CfgWorlds" >> worldName >> "mapSize")),100,_pos,[1,1,1,1]]
				],
				[
					"TOOLBOX",
					"Toggle Mode",
					[true,["Turn On","Turn Off"]]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_radius","_mode"];
				private _types = [
					"Lamps_Base_F",
					"Land_LampAirport_F",
					"Land_LampSolar_F",
					"Land_LampStreet_F",
					"Land_LampStreet_small_F",
					"PowerLines_base_F",
					"Land_LampDecor_F",
					"Land_LampHalogen_F",
					"Land_LampHarbour_F",
					"Land_LampShabby_F",
					"Land_PowerPoleWooden_L_F",
					"Land_NavigLight",
					"Land_runway_edgelight",
					"Land_runway_edgelight_blue_F",
					"Land_Flush_Light_green_F",
					"Land_Flush_Light_red_F",
					"Land_Flush_Light_yellow_F",
					"Land_Runway_PAPI",
					"Land_Runway_PAPI_2",
					"Land_Runway_PAPI_3",
					"Land_Runway_PAPI_4",
					"Land_fs_roof_F",
					"Land_fs_sign_F"
				];
				private _nearestLamps = nearestObjects [_args,_types, _radius];
				private _damage = [0.0,0.97] select _mode;
				{_x setDamage _damage;} forEach _nearestLamps;
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},_pos] call MAZ_EZM_fnc_createDialog;
		};

		MAZ_EZM_fnc_fireEffectModule = {
			params ["_entity"];
			private _pos = [] call MAZ_EZM_fnc_getScreenPosition;

			private _smokeNfire = createVehicle ["test_EmptyObjectForFireBig",_pos,[],0,"CAN_COLLIDE"];
			private _light = createVehicle ["#lightpoint",_pos,[],0,"CAN_COLLIDE"];
			[_light,1.5] remoteExec ["setLightBrightness",0,_light];
			[_light,[0.75, 0.25, 0.1]] remoteExec ["setLightAmbient",0,_light];
			[_light,[0.75, 0.25, 0.1]] remoteExec ["setLightColor",0,_light];
			_light attachTo [_smokeNfire,[0,0,0]];

			[_smokeNfire] call MAZ_EZM_fnc_addObjectToInterface;

			if !(_entity isEqualTo objNull) then {_smokeNfire attachTo [_entity,[0,0,0]]};
			[_smokeNfire,_light] spawn {
				params ["_entity","_light"];
				waitUntil{sleep 1; isNull _entity};
				deleteVehicle _light;
			};

			["Fire created.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		MAZ_EZM_fnc_smokeEffectModule = {
			params ["_entity"];
			private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
			private _smokeNfire = createVehicle ["test_EmptyObjectForSmoke",_pos,[],0,"CAN_COLLIDE"];

			[_smokeNfire] call MAZ_EZM_fnc_addObjectToInterface;

			if !(_entity isEqualTo objNull) then {_smokeNfire attachTo [_entity,[0,0,0]]};

			["Smoke pillar created.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		MAZ_EZM_fnc_earthquakeEffectModule = {
			[4] remoteExec ['BIS_fnc_earthquake'];
			["Yo momma farded.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		MAZ_EZM_empCarEffect = {
			params ["_car"];
			for [{_i=0},{_i<7},{_i=_i+1}] do {
				_car setPilotLight true;
				sleep 0.5;
				_car setPilotLight false;
				sleep 0.5;
			};
		};

		MAZ_EZM_empLightEffect = {
			params ["_lamps"];
			{_x setDamage 0.95} forEach _lamps;
			sleep 0.1;
			{_x setDamage 0} forEach _lamps;
			sleep 0.1;
			{_x setDamage 0.95} forEach _lamps;
			sleep 0.1;
			{_x setDamage 0} forEach _lamps;
			sleep 0.1;
			{_x setDamage 0.95} forEach _lamps;
		};

		MAZ_EZM_empExplosionEffect = {
			params ["_pos"];
			private _explosionVeh = createVehicle ["B_MRAP_01_F",_pos,[],0,""];
			_explosionVeh setDamage 1;
			sleep 0.1;
			deleteVehicle _explosionVeh;
		};

		MAZ_EZM_fnc_EMPEffectModule = {
			private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
			["Deploy EMP",[
				[
					"SLIDER:RADIUS",
					"Radius",
					[10,(getnumber (configfile >> "CfgWorlds" >> worldName >> "mapSize")),100,_pos,[1,1,1,1]]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_radius","_mode"];
				private _types = [
					"Lamps_Base_F",
					"Land_LampAirport_F",
					"Land_LampSolar_F",
					"Land_LampStreet_F",
					"Land_LampStreet_small_F",
					"PowerLines_base_F",
					"Land_LampDecor_F",
					"Land_LampHalogen_F",
					"Land_LampHarbour_F",
					"Land_LampShabby_F",
					"Land_PowerPoleWooden_L_F",
					"Land_NavigLight",
					"Land_runway_edgelight",
					"Land_runway_edgelight_blue_F",
					"Land_Flush_Light_green_F",
					"Land_Flush_Light_red_F",
					"Land_Flush_Light_yellow_F",
					"Land_Runway_PAPI",
					"Land_Runway_PAPI_2",
					"Land_Runway_PAPI_3",
					"Land_Runway_PAPI_4",
					"Land_fs_roof_F",
					"Land_fs_sign_F"
				];
				private _nearestLamps = nearestObjects [_args,_types, _radius];
				private _damage = [0.0,0.97] select _mode;
				private _empCars = _args nearObjects ["LandVehicle",_radius]; 
				{
					playSound3D ["a3\sounds_f_orange\MissionSFX\Car_Alarm_6s.wss",_x,false,_x,1,1,250];
					[_x] spawn MAZ_EZM_empCarEffect;
					_x setHitPointDamage ["HitEngine", 1,false];
				} forEach _empCars;
				[_nearestLamps] spawn MAZ_EZM_empLightEffect;
				playSound3D ["A3\Missions_F_EPA\data\sounds\lights_off.ogg",_args,false,_args,3,1,_radius + 500];
				[_args] spawn MAZ_EZM_empExplosionEffect;
				
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},_pos] call MAZ_EZM_fnc_createDialog;
		};

	comment "Terrain Modifiers";

		MAZ_EZM_fnc_openDoorsModule = {
			MAZ_EZM_fnc_doorConfig = {
				params ["_building"];
				private _doors = [_building] call MAZ_EZM_fnc_getDoors;
				if(_doors isEqualTo []) exitWith {};

				private _display = findDisplay 312;
				private _existingControls = [];

				private _icon = [
					"\a3\modules_f\data\editterrainobject\icon3d_doorclosed32_ca.paa",
					"\a3\modules_f\data\editterrainobject\icon3d_doorlocked32_ca.paa",
					"\a3\modules_f\data\editterrainobject\icon3d_dooropened32_ca.paa"
				];
				{
					if((ctrlText _x) in _icon) then {
						ctrlDelete _x;
					};
				}forEach allControls _display;

				private _controls = [];
				{
					private _control = _display ctrlCreate ["RscActivePicture",-1];

					_control setVariable ["params",[_building,_forEachIndex + 1]];
					_control ctrlAddEventHandler ["ButtonClick",{
						params ["_control"];
						(_control getVariable "params") params ["_building","_door"];
						[_building,_door] call MAZ_EZM_fnc_doorSetState;
					}];
					_control ctrlCommit 0;

					_controls pushBack _control;
				}forEach _doors;

				["MAZ_updateDoorsEachFrame","onEachFrame",{
					params ["_building","_doors","_controls"];
					if(isNull (findDisplay 312)) exitWith {
						["MAZ_updateDoorsEachFrame","onEachFrame"] call BIS_fnc_removeStackedEventHandler;
					};

					if(curatorCamera distance _building > 200) then {
						["MAZ_updateDoorsEachFrame","onEachFrame"] call BIS_fnc_removeStackedEventHandler;
						{ctrlDelete _x} forEach _controls;
					};
					
					{
						private _control = _controls select _forEachIndex;

						private _position = _building modelToWorldVisual _x;
						private _distance = curatorCamera distance _position;
						private _screenPos = worldToScreen _position;
						
						if(_screenPos isEqualTo [] || {_distance > 100}) then {
							_control ctrlShow false;
						} else {
							_control ctrlShow true;

							private _state = [_building,_forEachIndex + 1] call MAZ_EZM_fnc_doorGetState;
							private _icon = [
								"\a3\modules_f\data\editterrainobject\icon3d_doorclosed32_ca.paa",
								"\a3\modules_f\data\editterrainobject\icon3d_doorlocked32_ca.paa",
								"\a3\modules_f\data\editterrainobject\icon3d_dooropened32_ca.paa"
							] select _state;
							private _color = [
								[1,1,1,1],
								EZM_trimColor,
								EZM_trimColor
							] select _state;

							_control ctrlSetText _icon;
							_control ctrlSetActiveColor _color;

							_color set [3,0.8];
							_control ctrlSetTextColor _color;

							_screenPos params ["_posX","_posY"];

							private _size = linearConversion [0,100,_distance,1.75,1,true];
							private _posW = ["W",_size] call MAZ_EZM_fnc_convertToGUI_GRIDFormat;
							private _posH = ["H",_size] call MAZ_EZM_fnc_convertToGUI_GRIDFormat;

							_control ctrlSetPosition [_posX - _posW / 2, _posY - _posH / 2,_posW,_posH];
							_control ctrlCommit 0;
						};
					} forEach _doors;
				},[_building,_doors,_controls]] call BIS_fnc_addStackedEventHandler;
			};

			MAZ_EZM_fnc_getDoors = {
				params ["_building"];
				private _cfg = (configOf _building >> "UserActions");
				if !(isClass _cfg) exitWith {[]};

				private _positions = [];
				private _position = "";

				for "_doorID" from 1 to 24 do {
					_position = getText(_cfg >> format["OpenDoor_%1",_doorID] >> "position");
					if (_position == "") exitWith {};
					_positions pushBack (_building selectionPosition _position);
				};

				if (count _positions == 0) exitWith {[]};

				_positions
			};

			MAZ_EZM_fnc_doorSetState = {
				params ["_building","_door"];
				private _state = [_building,_door] call MAZ_EZM_fnc_doorGetState;

				_building setVariable [format ["bis_disabled_door_%1",_door],[1, 0, 0] select _state, true];
				_building animateSource [format ["door_%1_sound_source", _door], [0, 1, 0] select _state, false];
				_building animateSource [format ["door_%1_noSound_source", _door], [0, 1, 0] select _state, false];
			};

			MAZ_EZM_fnc_doorGetState = {
				params ["_building","_door"];
				private _var = _building getVariable [(format ["bis_disabled_door_%1",_door]),0];

				comment "If locked, exit function";
				if(_var == 1) exitWith {1};
				comment "Get animationSourcePhase from door, if closed return 0, if open return 2.";
				[0,2] select (_building animationSourcePhase (format ["door_%1_sound_source", _door]) > 0.5)
			};

			MAZ_EZM_fnc_initDoorModule = {
				params ["_pos"];
				private _building = nearestObject [_pos, "Building"];

				if(isNull _building) exitWith {["No near buildings!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
				[_building] call MAZ_EZM_fnc_doorConfig;
			};

			[[] call MAZ_EZM_fnc_getScreenPosition] call MAZ_EZM_fnc_initDoorModule;
		};

		MAZ_EZM_fnc_godModeFencesModule = {
			private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
			["God Mode Fences",[
				[
					"SLIDER:RADIUS",
					"Fences Radius:",
					[10,(getnumber (configfile >> "CfgWorlds" >> worldName >> "mapSize")),25,_pos,[1,1,1,1]]
				]
			],{
				params ["_values","_pos","_display"];
				_values params ["_radius"];
				
				private ["_modelString","_newObj","_vectorDirUp","_position","_hideTerrain","_type","_blackListFences"];
				_blackListFences = [
					"land_pipewall_conretel_8m_f","land_mil_wiredfence_gate_f","land_mil_concretewall_f","land_cncbarrier_f","land_cncbarrier_stripes_f",
					"land_concrete_smallwall_8m_f","land_concrete_smallwall_4m_f","land_wallcity_01_pillar_whiteblue_f","land_wallcity_01_pillar_yellow_f",
					"land_brickwall_04_l_pole_f","land_brickwall_03_l_pole_f",
					"land_polewall_01_pole_f","land_wallcity_01_pillar_blue_f","land_brickwall_04_l_5m_d_f","land_slums01_pole","land_city_pillar_f",
					"land_canal_wall_stairs_f","land_wallcity_01_pillar_grey_f","land_mil_wallbig_4m_damaged_left_f","land_backalley_01_l_1m_f",
					"land_brickwall_04_l_5m_old_d_f","land_brickwall_02_l_5m_d_f","land_brickwall_03_l_5m_v2_d_f","land_wallcity_01_pillar_pink_f",
					"land_mil_wallbig_gate_f","land_canal_wall_d_center_f","land_backalley_01_l_gap_f","land_bamboofence_01_s_d_f",
					"land_brickwall_04_l_pole_old_f","land_backalley_01_l_gate_f","land_concretewall_01_m_d_f","land_concretewall_01_l_d_f",
					"land_hbarrier_01_wall_4_green_f","land_concretewall_02_m_d_f","land_brickwall_02_l_corner_v2_f","land_brickwall_03_l_5m_v1_d_f",
					"land_gravefence_02_f","land_mil_wallbig_debris_f","land_stone_pillar_f","land_stone_gate_f","land_stone_8md_f",
					"land_canal_wallsmall_10m_f","land_canal_wall_10m_f","land_new_wiredfence_10m_dam_f","land_new_wiredfence_pole_f","land_slums02_pole",
					"land_canal_wall_d_left_f","land_city_8md_f","land_city2_8md_f","land_city2_pillard_f","land_wall_tin_pole","land_mil_wiredfenced_f","land_ancient_wall_8m_f",
					"land_ancient_wall_4m_f","land_wall_indcnc_pole_f","land_canal_wall_d_right_f","land_wall_indcnc_end_2_f","land_indfnc_pole_f",
					"land_indfnc_3_d_f","land_bamboofence_01_s_pole_f","land_backalley_02_l_1m_f","land_woodenwall_02_s_pole_f",
					"land_concretewall_02_m_pole_f","land_hbarrier_01_wall_6_green_f","land_wiredfence_01_pole_45_f","land_brickwall_01_l_end_f",
					"land_gravefence_01_f","land_brickwall_01_l_pole_f","land_wallcity_01_8m_dmg_whiteblue_f","land_pipefence_01_m_d_f",
					"land_wallcity_01_8m_dmg_pink_f","land_concretewall_01_l_pole_f","land_concretewall_03_m_pole_f","land_netfence_03_m_pole_f",
					"land_mil_wallbig_4m_damaged_center_f","land_pipefence_01_m_pole_f","land_wiredfence_01_8m_d_f","land_gravefence_04_f",
					"land_brickwall_01_l_5m_d_f","land_brickwall_02_l_end_f","land_silagewall_01_l_pole_f","land_wiredfence_01_pole_f",
					"land_camoconcretewall_01_pole_v1_f","land_woodenwall_01_m_pole_f","land_netfence_02_m_pole_f","land_camoconcretewall_01_l_end_v1_f",
					"land_wiredfence_01_gate_f","land_tinwall_01_m_pole_f","land_gameprooffence_01_l_d_f","land_hbarrier_01_wall_corner_green_f",
					"land_mil_wallbig_4m_damaged_right_f","land_netfence_03_m_3m_d_f","land_tinwall_02_l_pole_f","land_wallcity_01_8m_dmg_yellow_f",
					"land_netfence_02_m_d_f","land_gravefence_03_f","land_wallcity_01_8m_dmg_grey_f","land_wallcity_01_8m_dmg_blue_f",
					"land_quayconcrete_01_20m_wall_f","land_fortress_01_innercorner_90_f","land_fortress_01_innercorner_70_f","land_fortress_01_5m_f",
					"land_woodenwall_03_s_d_5m_v1_f","land_fortress_01_outtercorner_80_f","land_pipefence_02_s_8m_f","land_woodenwall_05_m_d_4m_f",
					"land_fortress_01_d_r_f","land_woodenwall_02_s_8m_f","land_woodenwall_04_s_pole_f","land_petroglyphwall_01_f",
					"land_hbarrierwall_corner_f","land_basaltwall_01_4m_f","land_hbarrierwall4_f","land_wired_fence_4m_f","land_wired_fence_8m_f",
					"land_mound02_8m_f","land_mound01_8m_f","land_wall_tin_4_2","land_hbarrier_1_f","land_mil_wiredfence_f","land_razorwire_f",
					"land_slums01_8m","land_slums02_4m","land_hbarrier_5_f","land_hbarrier_big_f","land_pipe_fence_4m_f","land_sportground_fence_f",
					"land_hbarrier_3_f","land_net_fenced_8m_f","land_net_fence_pole_f","land_net_fence_8m_f","land_net_fence_4m_f",
					"land_wired_fence_4md_f","land_wired_fence_8md_f","land_pipefence_02_s_4m_f","land_woodenwall_05_m_4m_v2_f",
					"land_woodenwall_04_s_end_v2_f","land_woodenwall_04_s_d_5m_f","land_basaltwall_01_d_right_f","land_woodenwall_01_m_4m_f",
					"land_woodenwall_02_s_4m_f","land_woodenwall_05_m_end_f","land_woodenwall_03_s_pole_f","land_woodenwall_04_s_end_v1_f",
					"land_woodenwall_03_s_5m_v1_f","land_petroglyphwall_02_f","land_woodenwall_03_s_d_5m_v2_f","land_woodenwall_01_m_8m_f",
					"land_tinwall_02_l_4m_f","land_vineyardfence_01_f","land_slumwall_01_s_2m_f","land_hbarrierwall_corridor_f",
					"land_basaltwall_01_gate_f","land_tinwall_01_m_4m_v2_f","land_plasticnetfence_01_long_f","land_plasticnetfence_01_short_f",
					"land_plasticnetfence_01_short_d_f","land_fortress_01_outtercorner_50_f","land_fortress_01_innercorner_110_f",
					"land_polewall_03_5m_v1_f","land_hbarrierwall6_f","land_slumwall_01_s_4m_f","land_hedge_01_s_4m_f","land_polewall_03_5m_v2_f",
					"land_gameprooffence_01_l_pole_f","land_woodenwall_03_s_5m_v2_f","land_woodenwall_04_s_5m_f","land_woodenwall_05_m_pole_f",
					"land_bamboofence_01_s_4m_f","land_bamboofence_01_s_8m_f","land_plasticnetfence_01_pole_f","land_plasticnetfence_01_long_d_f",
					"land_castleruins_01_wall_d_l_f","land_hedge_01_s_2m_f","land_stonewall_01_s_10m_f","land_tinwall_01_m_4m_v1_f",
					"land_polewall_03_end_f","land_hbarriertower_f","land_woodenwall_02_s_2m_f","land_tinwall_02_l_8m_f","land_wall_tin_4",
					"land_stonewall_01_s_d_f","land_woodenwall_01_m_d_f","land_gameprooffence_01_l_gate_f","land_fortress_01_10m_f",
					"land_stonewall_02_s_10m_f","land_woodenwall_05_m_4m_v1_f","land_woodenwall_03_s_d_pole_f","land_woodenwall_02_s_d_f",
					"land_gameprooffence_01_l_5m_f","land_mound04_8m_f","land_fortress_01_outtercorner_90_f","land_mound03_8m_f",
					"land_castleruins_01_wall_d_r_f","land_castleruins_01_wall_10m_f","land_fortress_01_d_l_f","land_basaltwall_01_8m_f",
					"land_basaltwall_01_d_left_f","land_castle_01_wall_01_f","land_castle_01_wall_02_f","land_castle_01_wall_03_f",
					"land_castle_01_wall_04_f","land_castle_01_wall_05_f","land_castle_01_wall_06_f","land_castle_01_wall_07_f","land_castle_01_wall_08_f",
					"land_castle_01_wall_09_f","land_castle_01_wall_10_f","land_castle_01_wall_11_f","land_castle_01_wall_12_f","land_castle_01_wall_13_f",
					"land_castle_01_wall_14_f","land_castle_01_wall_15_f","land_castle_01_wall_16_f","land_pipe_fence_4mnolc_f","land_crash_barrier_f",
					"land_crashbarrier_01_4m_f","land_crashbarrier_01_8m_f","land_crashbarrier_01_end_l_f","land_crashbarrier_01_end_r_f",
					"land_castle_01_church_ruin_f","land_castle_01_church_b_ruin_f","land_castle_01_step_f","land_pier_wall_f","land_castle_01_house_ruin_f",
					"land_new_wiredfence_5m_f","land_new_wiredfence_10m_f","land_cncbarriermedium_f","land_sportground_fence_nolc_f","land_cncwall1_f",
					"land_cncwall4_f","land_cncshelter_f"
				];
				private  _count = 0;
				{
					_modelString = (str _x) splitString " .";
					_type = format ['land_%1',_modelString select (count _modelString) - 2];
					
					if((toLower _type) in _blackListFences) then {} else {
						_count = _count + 1;
						_position = getPosASL _x;
						_vectorDirUp = [vectorDir _x,vectorUp _x];
						_newObj = createSimpleObject [format ["%1",_type],_position];
						_newObj setVectorDirAndUp [vectorDir _x,vectorUp _x];
						[_x,true] remoteExec ['hideObject',0,true];
						[_x,false] remoteExec ['allowDamage',0,true];
					};
				}forEach (nearestTerrainObjects [_pos,["WALL","FENCE"],_radius]);

				[format ["%1 fences replaced!",_count],"addItemOk"] call MAZ_EZM_fnc_systemMessage;
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},_pos] call MAZ_EZM_fnc_createDialog;
		};

		MAZ_EZM_fnc_hideTerrainRadiusModule = {
			private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
			["Hide Terrain Objects",[
				[
					"SLIDER:RADIUS",
					"Radius",
					[1,(getnumber (configfile >> "CfgWorlds" >> worldName >> "mapSize")),50,_pos,[1,1,1,1]]
				],
				[
					"TOOLBOX",
					"Hide or Show",
					[true,[["SHOW","Reveals the terrain objects within the radius."],["HIDE","Hides terrain objects within the radius."]]]
				]
			],{
				params ["_values","_args","_display"];
				_values params ["_radius","_hide"];
				private _nearestObjects = nearestTerrainObjects [_args,[],_radius];
				if(_hide) then {
					{
						[_x,true] remoteExec ['hideObject',0,_x];
						_x allowDamage false;
					} forEach _nearestObjects;
				} else {
					{
						[_x,false] remoteExec ['hideObject',0,_x];
						_x allowDamage true;
					} forEach _nearestObjects;
				};
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},_pos] call MAZ_EZM_fnc_createDialog;
		};

	comment "Teleportation";

		MAZ_EZM_fnc_teleportSelfModule = {	
			private _pos = [true] call MAZ_EZM_fnc_getScreenPosition;	
			if(surfaceIsWater _pos) then {	
				_pos = AGLtoASL _pos;	
				player setPosASL _pos;	
			} else {	
				player setPosATL _pos;	
			};	
			["Teleported.","addItemOk"] call MAZ_EZM_fnc_systemMessage;	
		};

		MAZ_EZM_fnc_teleportAllPlayersModule = {	
			private _pos = [true] call MAZ_EZM_fnc_getScreenPosition;	
			if(surfaceIsWater _pos) then {	
				_pos = AGLtoASL _pos;	
				{	
					_x setPosASL _pos;	
				}forEach allPlayers;	
			} else {	
				{	
					_x setPosATL _pos;	
				}forEach allPlayers;	
			};	
			["All players teleported.","addItemOk"] call MAZ_EZM_fnc_systemMessage;	
		};

		MAZ_EZM_fnc_teleportPlayerModule = {	
			["Teleport Player",[	
				[	
					"LIST",	
					"Player to Teleport",	
					[	
						[],	
						(allPlayers apply {name _x}),	
						0	
					]	
				]	
			],{	
				params ["_values","_args","_display"];	
				private _value = _values # 0;	
				private _unit = (allPlayers select _value);	
				if(surfaceIsWater _args) then {	
					_args = AGLtoASL _args;	
					_unit setPosASL _args;	
				} else {	
					_unit setPosATL _args;	
				};	
				_display closeDisplay 1;	
			},{	
				params ["_values","_args","_display"];	
				_display closeDisplay 2;	
			},[true] call MAZ_EZM_fnc_getScreenPosition] call MAZ_EZM_fnc_createDialog;	
		};

		MAZ_EZM_fnc_teleportSideModule = {	
			["Teleport Side",[	
				[	
					"SIDES",	
					"Side to teleport:",	
					[west,east,independent,civilian]	
				]	
			],{	
				params ["_values","_args","_display"];	
				_values = _values # 0;	
				_values apply {	
					private _return = _x;	
					if(str _x == "GUER") then {	
						_return = independent;	
					};	
					if(str _x == "CIV") then {	
						_return = civilian;	
					};	
				};	
				private _allUnits = [];	
				{	
					{	
						if(isPlayer _x) then {	
							_allUnits pushback _x;	
						};	
					}forEach (units _x);	
				}forEach _values;	
				if(surfaceIsWater _args) then {	
					_args = AGLtoASL _args;	
					{	
						_x setPosASL _args;	
					}forEach _allUnits;	
				} else {	
					{	
						_x setPosATL _args;	
					}forEach _allUnits;	
				};	
					
				_display closeDisplay 1;	
			},{	
				params ["_values","_args","_display"];	
				_display closeDisplay 2;	
			},[true] call MAZ_EZM_fnc_getScreenPosition] call MAZ_EZM_fnc_createDialog;	
		};

	comment "Utilities";

		JAM_zeus_objBlacklist = [
			"Logic",
			"ModuleHQ_F",
			"ModuleSector_F",
			"ModuleCurator_F",
			"VirtualCurator_F",
			"ModuleCuratorSetCosts_F",
			"ModuleCuratorSetCoefs_F",
			"LogicSectorPreview100m_F",
			"LogicSectorUnknown100m_F",
			"ModuleCuratorSetCamera_F",
			"ModuleMPTypeGameMaster_F",
			"ModuleCuratorAddPoints_F",
			"ModuleRadioChannelCreate_F",
			"ModuleCuratorSetModuleCosts_F",
			"ModuleCuratorSetObjectCosts_F",
			"ModuleCuratorSetDefaultCosts_F",
			"ModuleCuratorSetAttributesPlayer_F",
			"ModuleCuratorAddEditingAreaPlayers_F"
		];
		JAM_zeus_objWhitelist = [
			"ModuleLightning_F",
			"ModuleRemoteControl_F",
			"ModuleArsenal_F",
			"ModuleHint_F",
			"ModulePunishment_F",
			"ModuleBootcampStage_F",
			"ModuleSmokeYellow_F",
			"ModuleSmokeWhite_F",
			"ModuleSmokeRed_F",
			"ModuleSmokePurple_F",
			"ModuleSmokeOrange_F",
			"ModuleSmokeGreen_F",
			"ModuleSmokeBlue_F",
			"ModuleMissionName_F",
			"ModuleRespawnTickets_F",
			"ModuleEndMission_F",
			"ModuleCountdown_F",
			"ModuleDiary_F",
			"ModuleVehicleRespawnPositionEast_F",
			"ModuleVehicleRespawnPositionGuer_F",
			"ModuleVehicleRespawnPositionCiv_F",
			"ModuleVehicleRespawnPositionWest_F",
			"ModuleRespawnPositionEast_F",
			"ModuleRespawnPositionGuer_F",
			"ModuleRespawnPositionCiv_F",
			"ModuleRespawnPositionWest_F",
			"ModuleRespawnInventory_F",
			"ModuleObjectiveRaceStart_F",
			"ModuleObjectiveRaceFinish_F",
			"ModuleObjectiveRaceCP_F",
			"ModuleObjectiveProtect_F",
			"ModuleObjectiveNeutralize_F",
			"ModuleObjectiveMove_F",
			"ModuleObjectiveGetIn_F",
			"ModuleObjective_F",
			"ModuleObjectiveSector_F",
			"ModuleObjectiveAttackDefend_F",
			"ModuleFlareGreen_F",
			"ModuleFlareRed_F",
			"ModuleFlareWhite_F",
			"ModuleFlareYellow_F",
			"ModuleCASMissile_F",
			"ModuleCASGun_F",
			"ModuleCASGunMissile_F",
			"ModuleCASBomb_F",
			"ModuleOrdnanceMortar_F",
			"ModuleOrdnanceRocket_F",
			"ModuleOrdnanceHowitzer_F",
			"ModuleWeather_F",
			"ModuleTimeMultiplier_F",
			"ModuleSkiptime_F",
			"ModulePostprocess_F",
			"ModuleTracers_F",
			"ModuleIRGrenade_F",
			"ModuleChemlightBlue_F",
			"ModuleChemlightGreen_F",
			"ModuleChemlightRed_F",
			"ModuleChemlightYellow_F",
			"ModuleMusic_F",
			"ModuleRadio_F",
			"ModuleSound_F",
			"ModuleAnimalsButterflies_F",
			"ModuleAnimalsGoats_F",
			"ModuleAnimalsPoultry_F",
			"ModuleAnimalsSeagulls_F",
			"ModuleAnimalsSheep_F"
		];

		MAZ_EZM_fnc_addObjectsToInterfaceModule = {
			[] spawn {
				["Filtering map objects..."] call MAZ_EZM_fnc_systemMessage;
				private _goodObjects = [];
				{
					if(!(typeOf _x in JAM_zeus_objBlacklist)) then {
						_goodObjects pushBack _x;
					};
					sleep 0.00001;
				}forEach allMissionObjects "All";
				["Map objects filtered."] call MAZ_EZM_fnc_systemMessage;
				[_goodObjects] call MAZ_EZM_fnc_addObjectToInterface;
				["Map objects added.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
			};
		};

		JAM_fnc_getEditableObjs_radius = {
			params ['_addPos', '_addRadius'];
			_allObjs = nearestObjects [_addPos, ['ALL'], _addRadius, true];
			_objsToAdd = [];
			{
				_addObject = false;
				_className = typeOf _x;
				_isKindOfLogic = _x isKindOf 'Logic';
				_isInWhitelist = _className in JAM_zeus_objWhitelist;
				_isInBlacklist = _className in JAM_zeus_objBlacklist;
				if (_isKindOfLogic) then 
				{
					if ((!_isInBlacklist) OR (_isInWhitelist)) then 
					{
						_addObject = true;
					};
				} else 
				{
					if (!_isInBlacklist) then 
					{
						_addObject = true;
					};
				};
				if !(_x getVariable ['JAM_isEditable', true]) then 
				{
					_addObject = false;
				};
				if (_addObject) then 
				{
					_objsToAdd pushBack _x;
				};
			} forEach _allObjs;
			_objsToAdd;
		};

		MAZ_EZM_fnc_addObjectsToInterfaceRadiusModule = {
			private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
			["Add Objects to Interface",[
				[
					"SLIDER:RADIUS",
					"Radius",
					[10,(getnumber (configfile >> "CfgWorlds" >> worldName >> "mapSize")),250,_pos,[1,1,1,1]]
				],
				[
					"TOOLBOX",
					"Global or Local",
					[true,[["Local","Adds to interface for you only."],["Global","Adds to interface for every zeus."]]]
				]
			],{	
				params ["_values","_args","_display"];	
				private _radius = round (_values # 0);	
				private _isGlobal = _values # 1;	
				_isGlobal = [getAssignedCuratorLogic player, allCurators] select _isGlobal;	
				private _objects = [_args,_radius] call JAM_fnc_getEditableObjs_radius;	
				[_objects,_isGlobal] call MAZ_EZM_fnc_addObjectToInterface;	
				_display closeDisplay 1;	
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},_pos] call MAZ_EZM_fnc_createDialog;
		};

		MAZ_EZM_fnc_toggleAutoAddToInterface = {
			if(MAZ_EZM_autoAdd) then {
				MAZ_EZM_autoAdd = false;
				profileNamespace setVariable ['MAZ_EZM_autoAddVar',false];
				["Automatic adding to interface disabled!","addItemOk"] call MAZ_EZM_fnc_systemMessage;
			} else {
				MAZ_EZM_autoAdd = true;
				profileNamespace setVariable ['MAZ_EZM_autoAddVar',true];
				["Automatic adding to interface enabled!","addItemOk"] call MAZ_EZM_fnc_systemMessage;
			};
		};

		MAZ_EZM_BIS_fnc_remoteControlUnit = {
			params ["_logic","_unit","_activated"];
			if (_activated && local _logic && !isnull curatorcamera) then {

				if !(isnull (missionnamespace getvariable ["bis_fnc_moduleRemoteControl_unit",objnull])) exitwith {};

				private _targetObjArray = curatorMouseOver;
				_unit = _targetObjArray select 1;
				_unit = effectivecommander _unit;

				private _tempOwner = _unit getvariable ["bis_fnc_moduleRemoteControl_owner", objnull];

				_error = "";
				if !(side group _unit in [east,west,resistance,civilian]) then {_error = localize "str_a3_cfgvehicles_moduleremotecontrol_f_errorEmpty";};
				if (isplayer _unit) then {_error = localize "str_a3_cfgvehicles_moduleremotecontrol_f_errorPlayer";};
				if !(alive _unit) then {_error = localize "str_a3_cfgvehicles_moduleremotecontrol_f_errorDestroyed";};
				if (isnull _unit) then {_error = localize "str_a3_cfgvehicles_moduleremotecontrol_f_errorNull";};
				if (!isnull _tempOwner && {_tempOwner in allPlayers}) then {_error = localize "str_a3_cfgvehicles_moduleremotecontrol_f_errorControl";};
				if (isuavconnected vehicle _unit) then {_error = localize "str_a3_cfgvehicles_moduleremotecontrol_f_errorControl";};

				if (_error == "") then {
					_unit spawn {
						scriptname "bis_fnc_moduleRemoteControl: Loop";
						_unit = _this;
						_vehicle = vehicle _unit;
						_vehicleRole = str assignedvehiclerole _unit;

						bis_fnc_moduleRemoteControl_unit = _unit;
						_unit setvariable ["bis_fnc_moduleRemoteControl_owner",player,true];

						[format ["wind%1",ceil random 5],"bis_fnc_playsound"] call bis_fnc_mp;

						_blur = ppeffectcreate ["RadialBlur",144];
						_blur ppeffectenable true;
						_blur ppeffectadjust [0,0,0.3,0.3];
						_blur ppeffectcommit 0;
						_blur ppeffectadjust [0.03,0.03,0.1,0.1];
						_blur ppeffectcommit 1;

						_cam = "camera" camcreate getposatl curatorcamera;
						_cam cameraeffect ["internal","back"];
						_cam campreparetarget (screentoworld [0.5,0.5]);
						_cam camcommitprepared 0;
						_cam campreparetarget _unit;
						_cam campreparefov 0.1;
						_cam camcommitprepared 1;
						sleep 0.75;

						("bis_fnc_moduleRemoteCurator" call bis_fnc_rscLayer) cuttext ["","black out",0.25];
						sleep 0.25;

						(finddisplay 312) closedisplay 2;
						waituntil {isnull curatorcamera};

						player remotecontrol _unit;
						if (cameraon != _vehicle) then {
							_vehicle switchcamera cameraview;
						};

						ppeffectdestroy _blur;
						_cam cameraeffect ["terminate","back"];
						camdestroy _cam;

						_color = ppeffectcreate ["colorCorrections",1896];
						_color ppeffectenable true;
						_color ppeffectadjust [1,1,0,[0,0,0,1],[1,1,1,1],[0,0,0,0],[0.9,0.0,0,0,0,0.5,1]];
						_color ppeffectcommit 0;

						_curator = getassignedcuratorlogic player;
						[_curator,"curatorObjectRemoteControlled",[_curator,player,_unit,true]] call bis_fnc_callScriptedEventHandler;
						[["Curator","RemoteControl"],nil,nil,nil,nil,nil,nil,true] call bis_fnc_advHint;

						sleep 0.3;
						_color ppeffectadjust [1,1,0,[0,0,0,1],[1,1,1,1],[0,0,0,0],[0.9,0.85,0,0,0,0.5,1]];
						_color ppeffectcommit 0.3;
						("bis_fnc_moduleRemoteCurator" call bis_fnc_rscLayer) cuttext ["","black in",0.5];

						_vehicle = vehicle _unit;
						_vehicleRole = str assignedvehiclerole _unit;
						_rating = rating player;
						waituntil {
							if ((vehicle _unit != _vehicle || str assignedvehiclerole _unit != _vehicleRole) && {alive _unit}) then {
								player remotecontrol _unit;
								_vehicle = vehicle _unit;
								_vehicleRole = str assignedvehiclerole _unit;
							};
							if (rating player < _rating) then {
								player addrating (-rating player + _rating);
							};
							sleep 0.01;
							!isnull curatorcamera
							||
							{cameraon == vehicle player}
							||
							{!alive _unit}
							||
							{!alive player}
							||
							{isnull getassignedcuratorlogic player}
						};

						player addrating (-rating player + _rating);
						objnull remotecontrol _unit;
						_unit setvariable ["bis_fnc_moduleRemoteControl_owner",nil,true];

						if (alive player) then {
							if (
								isnull curatorcamera
								&&
								{cameraon != vehicle player}
								&&
								{!isnull _unit}
								&&
								{!isnull getassignedcuratorlogic player}
							) then {
								sleep 2;
								("bis_fnc_moduleRemoteCurator" call bis_fnc_rscLayer) cuttext ["","black out",1];
								sleep 1;
							};
							if !(isnull _unit) then {
								_unitPos = getposatl _unit;
								_camPos = [_unitPos,10,direction _unit + 180] call bis_fnc_relpos;
								_camPos set [2,(_unitPos select 2) + (getterrainheightasl _unitPos) - (getterrainheightasl _camPos) + 10];
								(getassignedcuratorlogic player) setvariable ["bis_fnc_modulecuratorsetcamera_params",[_camPos,_unit]];
							};

							sleep 0.1;
							("bis_fnc_moduleRemoteCurator" call bis_fnc_rscLayer) cuttext ["","black in",1e10];
							opencuratorinterface;
							ppeffectdestroy _color;

							waituntil {!isnull curatorcamera};
						} else {
							ppeffectdestroy _color;
						};
						player switchcamera cameraview;
						bis_fnc_moduleRemoteControl_unit = nil;
						("bis_fnc_moduleRemoteCurator" call bis_fnc_rscLayer) cuttext ["","black in",1];
						[_curator,"curatorObjectRemoteControlled",[_curator,player,_unit,false]] call bis_fnc_callScriptedEventHandler;
						sleep 0.01;
					};
				} else {
					[objnull,_error] call bis_fnc_showCuratorFeedbackMessage;
				};
				deletevehicle _logic;
			};
		};

	comment "Vehicle Modifications";

		MAZ_EZM_fnc_unflipVehicleModule = {
			params ["_entity"];
			if(isNull _entity) exitWith {["No object!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};

			_entity setVectorUp surfaceNormal getPos _entity;
			_entity setPosATL [getPosATL _entity select 0, getPosATL _entity select 1, 0.2];

			["Vehicle unflipped.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		MAZ_EZM_fnc_rearmVehicleModule = {
			params ["_entity"];
			if(isNull _entity) exitWith {["No object!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			[[_entity],{
				params ["_entity"];
				[[_entity],{
					params ["_entity"];
					_entity setVehicleAmmo 1;
				}] remoteExec ['spawn',owner _entity];
			}] remoteExec ['spawn',2];

			["Vehicle rearmed.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		MAZ_EZM_fnc_refuelVehicleModule = {
			params ["_entity"];
			if(isNull _entity) exitWith {["No object!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			[_entity,{
				[_this,1] remoteExec ['setFuel',owner _this];
			}] remoteExec ['spawn',2];

			["Vehicle refueled.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

		MAZ_EZM_fnc_repairVehicleModule = {
			params ["_entity"];
			if(isNull _entity) exitWith {["No object!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			[_entity,{
				_this setDamage 0;
			}] remoteExec ['spawn',_entity];

			["Vehicle repaired.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
		};

	comment "Auto-Add to Interface";
	
		MAZ_EZM_fnc_addToInterface = {
			[] spawn {
				if(!MAZ_EZM_autoAdd) exitWith {};
				["Filtering map objects..."] call MAZ_EZM_fnc_systemMessage;
				private _goodObjects = [];
				{
					if(!(typeOf _x in JAM_zeus_objBlacklist)) then {
						_goodObjects pushBack _x;
					};
					sleep 0.001;
				}forEach allMissionObjects "All";
				["Map objects filtered."] call MAZ_EZM_fnc_systemMessage;
				[_goodObjects] call MAZ_EZM_fnc_addObjectToInterface;
				["Map objects added.","addItemOk"] call MAZ_EZM_fnc_systemMessage;
			};
		};

	comment "Faction Functions";

		MAZ_EZM_fnc_removeAllClothing = {
			params ["_unit"];
			_unit setUnitLoadout [[],[],[],[],[],[],"","",["","","","",[],[],""],["ItemMap","ItemGPS","ItemRadio","ItemCompass","ItemWatch",""]];
			removeGoggles _unit;
		};

		MAZ_EZM_fnc_createMan = {	
			params [	
				["_side",west,[west]],	
				["_unitType","B_Soldier_F",[""]],	
				["_unitPos","UP",[""]],	
				["_behaviour","AWARE",[""]],	
				["_rank","PRIVATE",[""]],	
				["_pos",[true] call MAZ_EZM_fnc_getScreenPosition,[[]]]	
			];	
			private _grp = createGroup [_side,true];	
			[_grp,0] setWayPointPosition [_pos,0];	
			private _unit = _grp createUnit [_unitType,_pos,[],0,"CAN_COLLIDE"];	
			_unit setUnitPos _unitPos;	
			_unit setRank _rank;	
			_grp setBehaviour _behaviour;	
			[_unit] call MAZ_EZM_fnc_addObjectToInterface;	
			[_unit] spawn MAZ_EZM_fnc_cleanerWaitTilNoPlayers;	
			_unit	
		};

		MAZ_EZM_fnc_addItemAndWeapons = {
			params [
				["_unit",objNull,[objNull]],
				["_primWeapon",[],[[]]],
				["_secWeapon",[],[[]]],
				["_handgunWeapon",[],[[]]],
				["_numFirstAidKits",3,[3]],
				["_grenadeInfo",[],[[]]],
				["_extraItems",[],[[]]]
			];

			for "_i" from 1 to _numFirstAidKits do {
				_unit addItem "FirstAidKit";
			};

			{
				_x params ["_grenadeType","_grenadeQuantity"];
				for "_i" from 1 to _grenadeQuantity do {
					_unit addMagazine _grenadeType;
				};
			}forEach _grenadeInfo;

			if(!(_primWeapon isEqualTo [])) then {
				_primWeapon params [["_primWeaponType","",[""]],["_magInfo","",[[]]],["_primAttachments",[]]];
				for "_i" from 1 to (_magInfo select 1) do {
					_unit addMagazine (_magInfo select 0);
				};
				_unit addWeapon _primWeaponType;
				{
					_unit addPrimaryWeaponItem _x;
				}forEach _primAttachments;
			};

			if(!(_secWeapon isEqualTo [])) then {
				_secWeapon params [["_secWeaponType","",[""]],["_secMagInfo","",[[]]],["_secAttachments",[]]];
				for "_i" from 1 to (_secMagInfo select 1) do {
					_unit addMagazine (_secMagInfo select 0);
				};
				_unit addWeapon _secWeaponType;
				{
					_unit addSecondaryWeaponItem _x;
				}forEach _secAttachments;
			};

			if(!(_handgunWeapon isEqualTo [])) then {
				_handgunWeapon params [["_hGunWeaponType","",[""]],["_hGunMagInfo","",[[]]],["_hGunAttachments",[]]];
				for "_i" from 1 to (_hGunMagInfo select 1) do {
					_unit addMagazine (_hGunMagInfo select 0);
				};
				_unit addWeapon _hGunWeaponType;
				{
					_unit addSecondaryWeaponItem _x;
				}forEach _hGunAttachments;
			};

			{
				_x params ["_itemType","_itemQuantity"];
				for "_i" from 1 to _itemQuantity do {
					_unit addItem _itemType;
				};
			}forEach _extraItems;
		};
		
		MAZ_EZM_fnc_createVehicle = {	
			params [	
				["_vehicleType","B_MRAP_01_F",[""]],	
				["_textures",[],[[]]],	
				["_pos",[],[[]]]	
			];	
			if(_pos isEqualTo []) then {	
				_pos = [true] call MAZ_EZM_fnc_getScreenPosition;	
				if(!(_vehicleType isKindOf "Ship") && !(getNumber (configFile >> "CfgVehicles" >> _vehicleType >> "canFloat") == 1)) then {	
					_pos = ASLtoATL (AGLtoASL _pos);	
				} else {	
					_pos = _pos vectorAdd [0,0,1];	
				};	
			};	
			private _vehicle = createVehicle [_vehicleType,_pos,[],0,"CAN_COLLIDE"];	
			[[_vehicle,_textures],{	
				params ["_vehicle","_textures"];	
				{	
					if(_x == "") then {continue};	
					_vehicle setObjectTexture [_forEachIndex,_x];	
				}forEach _textures;	
			}] remoteExec ['spawn',0,_vehicle];	
			[_vehicle] call MAZ_EZM_fnc_addObjectToInterface;	
			[_vehicle] spawn MAZ_EZM_fnc_cleanerWaitTilNoPlayers;	
			_vehicle	
		};	
		
		MAZ_EZM_fnc_addNVGs = {	
			params ["_unit",["_nvg",""]];	
			if(!MAZ_EZM_nvgsOnlyAtNight) exitWith {};	
			if(_nvg == "") then {	
				private _loadout = getUnitLoadout (configFile >> "CfgVehicles" >> typeOf _unit);	
				private _loadoutNVG = (_loadout select 9) select {"NV" in _x};	
				if(_loadoutNVG isEqualTo []) exitWith {};	
				_loadoutNVG = _loadoutNVG select 0;	
				_nvg = _loadoutNVG;	
			};	
			if(call MAZ_EZM_fnc_isNightTime) then {	
				_unit addItem _nvg;	
				_unit assignItem _nvg;	
			} else {	
				private _nvg = (assignedItems _unit) select {"NV" in _x};	
				if(_nvg isEqualTo []) exitWith {};	
				_nvg = _nvg select 0;	
				_unit unassignItem _nvg;	
				_unit removeItem _nvg;	
			};	
		};

	comment "Better Civilians";

		MAZ_EZM_fnc_createBetterCivilianModule = {
			private _unit = [civilian,"C_man_1","UP","SAFE"] call MAZ_EZM_fnc_createMan;

			private _civilianUniforms = ["U_C_ArtTShirt_01_v6_F","U_C_ArtTShirt_01_v1_F","U_C_Man_casual_2_F","U_C_ArtTShirt_01_v2_F","U_C_ArtTShirt_01_v4_F","U_C_Man_casual_3_F","U_C_Man_casual_1_F","U_C_ArtTShirt_01_v5_F","U_C_ArtTShirt_01_v3_F","U_C_Poloshirt_blue","U_C_Poloshirt_burgundy","U_C_Poloshirt_redwhite","U_C_Poloshirt_salmon","U_C_Poloshirt_stripped","U_C_Poloshirt_tricolour","U_C_Uniform_Farmer_01_F","U_C_FormalSuit_01_black_F","U_C_FormalSuit_01_blue_F","U_C_FormalSuit_01_gray_F","U_C_FormalSuit_01_khaki_F","U_C_FormalSuit_01_tshirt_black_F","U_C_FormalSuit_01_tshirt_gray_F","U_BG_Guerilla2_2","U_BG_Guerilla2_1","U_BG_Guerilla2_3","U_BG_Guerilla3_1","U_C_HunterBody_grn","U_C_E_LooterJacket_01_F","U_I_L_Uniform_01_tshirt_black_F","U_I_L_Uniform_01_tshirt_skull_F","U_I_L_Uniform_01_tshirt_sport_F","U_Marshal","U_C_Mechanic_01_F","U_C_Uniform_Scientist_02_formal_F","U_C_Man_casual_6_F","U_C_Man_casual_4_F","U_C_Man_casual_5_F","U_C_Poor_1"];
			private _civilianHeadgear = ["H_Booniehat_khk","H_Booniehat_oli","H_Booniehat_mcamo","H_Booniehat_tan","H_Booniehat_dgtl","H_Cap_red","H_Cap_blu","H_Cap_oli","H_Cap_tan","H_Cap_blk","H_Cap_blk_CMMG","H_Cap_tan_specops_US","H_Cap_khaki_specops_UK","H_Cap_grn","H_Cap_grn_BI","H_Cap_blk_ION","H_Cap_usblack","H_Cap_surfer","H_Bandanna_surfer","H_Bandanna_khk","H_Bandanna_cbr","H_Bandanna_sgg","H_Bandanna_sand","H_Bandanna_surfer_blk","H_Bandanna_surfer_grn","H_Bandanna_gry","H_Bandanna_blu","H_Bandanna_camo","H_Bandanna_mcamo","H_Watchcap_blk","H_Watchcap_cbr","H_Watchcap_khk","H_Watchcap_camo","H_StrawHat","H_StrawHat_dark","H_Hat_blue","H_Hat_brown","H_Hat_camo","H_Hat_grey","H_Hat_checker","H_Hat_tan","H_Hat_Safari_sand_F","H_Hat_Safari_olive_F","H_HeadSet_black_F","H_Hat_Tinfoil_F","H_Booniehat_mgrn"];
			private _civilianGoggles = ["H_WirelessEarpiece_F","G_Spectacles","G_Spectacles_Tinted","G_Shades_Black","G_Shades_Green","G_Shades_Red","G_Squares","G_Squares_Tinted","G_Sport_BlackWhite","G_Sport_Blackyellow","G_Sport_Greenblack","G_Sport_Checkered","G_Sport_Red","G_Shades_Blue","G_Sport_Blackred","G_Respirator_white_F","G_Respirator_yellow_F","G_Respirator_blue_F","G_WirelessEarpiece_F","G_RegulatorMask_F"];
			
			removeUniform _unit;
			removeHeadgear _unit;
			removeGoggles _unit;
			_unit forceAddUniform (selectRandom _civilianUniforms);
			_unit addHeadgear (selectRandom _civilianHeadgear);
			_unit addGoggles (selectRandom _civilianGoggles);
			[_unit,""] remoteExec ["switchMove"];
		};

		MAZ_EZM_fnc_createBetterCivilianJournoModule = {
			private _unit = [civilian,"C_journalist_F","UP","SAFE"] call MAZ_EZM_fnc_createMan;

			private _pressUni = "U_C_Journalist";
			private _pressVest = [""];
			private _pressHeadgear = ["H_Cap_press","H_WirelessEarpiece_F",""];
			private _pressGoggles = ["G_WirelessEarpiece_F","G_Spectacles_Tinted","G_Shades_Black","G_Aviator"];

			if((random 1) < 0.5) then {
				_pressVest = ["V_Press_F"];
				_pressHeadgear pushBack "H_PASGT_basic_blue_press_F";
				_pressHeadgear pushBack "H_PASGT_neckprot_blue_press_F";
			};

			removeUniform _unit;
			removeVest _unit;
			removeHeadgear _unit;
			removeGoggles _unit;
			_unit forceAddUniform _pressUni;
			_unit addVest (selectRandom _pressVest);
			_unit addHeadgear (selectRandom _pressHeadgear);
			_unit addGoggles (selectRandom _pressGoggles);
			[_unit,""] remoteExec ["switchMove"];
		};

	comment "MDF";

		comment "Anti-Air";

			MAZ_EZM_MDF_fnc_createCheetahModule = {
				private _vehicle = ["B_APC_Tracked_01_AA_F"] call MAZ_EZM_fnc_createVehicle;
				[
					_vehicle,
					["Sand",1], 
					["showCamonetTurret",1,"showCamonetHull",1,"showBags",0]
				] call BIS_fnc_initVehicle;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_MDF_fnc_createCrewmanModule;
					_driver moveInDriver _vehicle;

					private _gunner = [] call MAZ_EZM_MDF_fnc_createCrewmanModule;
					_gunner moveInGunner _vehicle;

					private _commander = [] call MAZ_EZM_MDF_fnc_createCrewmanModule;
					_commander moveInCommander _vehicle;

					private _grp = createGroup [independent,true];
					[_driver,_gunner,_commander] joinSilent _grp;
					_grp selectLeader _commander;
				};

				_vehicle
			};

		comment "APCs";

			MAZ_EZM_MDF_fnc_createGorgonModule = {
				private _vehicle = ["I_APC_Wheeled_03_cannon_F"] call MAZ_EZM_fnc_createVehicle;
				[
					_vehicle,
					["Guerilla_02",1], 
					["showCamonetHull",0,"showBags",1,"showBags2",1,"showTools",1,"showSLATHull",1]
				] call BIS_fnc_initVehicle;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_MDF_fnc_createCrewmanModule;
					_driver moveInDriver _vehicle;

					private _gunner = [] call MAZ_EZM_MDF_fnc_createCrewmanModule;
					_gunner moveInGunner _vehicle;

					private _commander = [] call MAZ_EZM_MDF_fnc_createCrewmanModule;
					_commander moveInCommander _vehicle;

					private _grp = createGroup [independent,true];
					[_driver,_gunner,_commander] joinSilent _grp;
					_grp selectLeader _commander;
				};

				_vehicle
			};

			MAZ_EZM_MDF_fnc_createRhinoModule = {
				private _vehicle = ["B_AFV_Wheeled_01_cannon_F"] call MAZ_EZM_fnc_createVehicle;
				[
					_vehicle,
					["Sand",1], 
					["showCamonetHull",1,"showCamonetTurret",0,"showSLATHull",1]
				] call BIS_fnc_initVehicle;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_MDF_fnc_createCrewmanModule;
					_driver moveInDriver _vehicle;

					private _gunner = [] call MAZ_EZM_MDF_fnc_createCrewmanModule;
					_gunner moveInGunner _vehicle;

					private _commander = [] call MAZ_EZM_MDF_fnc_createCrewmanModule;
					_commander moveInCommander _vehicle;

					private _grp = createGroup [independent,true];
					[_driver,_gunner,_commander] joinSilent _grp;
					_grp selectLeader _commander;
				};

				_vehicle
			};

		comment "Cars";

			MAZ_EZM_MDF_fnc_createOffroadModule = {
				private _vehicle = ["I_G_Offroad_01_F"] call MAZ_EZM_fnc_createVehicle;
				
				[
					_vehicle,
					["Guerilla_03",1], 
					["HideDoor1",0,"HideDoor2",0,"HideDoor3",0,"HideBackpacks",1,"HideBumper1",1,"HideBumper2",0,"HideConstruction",0,"hidePolice",1,"HideServices",1,"BeaconsStart",0,"BeaconsServicesStart",0]
				] call BIS_fnc_initVehicle;
				
				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_MDF_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;
				};

				_vehicle
			};

			MAZ_EZM_MDF_fnc_createOffroadHMGModule = {
				private _vehicle = ["I_G_Offroad_01_armed_F"] call MAZ_EZM_fnc_createVehicle;
				
				[
					_vehicle,
					["Guerilla_03",1], 
					["Hide_Shield",0,"Hide_Rail",1,"HideDoor1",0,"HideDoor2",0,"HideDoor3",0,"HideBackpacks",0,"HideBumper1",1,"HideBumper2",0,"HideConstruction",0]
				] call BIS_fnc_initVehicle;
				
				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_MDF_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;

					private _gunner = [] call MAZ_EZM_MDF_fnc_createRiflemanModule;
					_gunner moveInGunner _vehicle;

					private _grp = createGroup [independent,true];
					[_driver,_gunner] joinSilent _grp;
					_grp selectLeader _driver;
				};

				_vehicle
			};

			MAZ_EZM_MDF_fnc_createOffroadATModule = {
				private _vehicle = ["I_G_Offroad_01_AT_F"] call MAZ_EZM_fnc_createVehicle;
				
				[
					_vehicle,
					["Guerilla_03",1], 
					["HideDoor1",0,"HideDoor2",0,"HideDoor3",0,"HideBackpacks",1,"HideBumper1",1,"HideBumper2",0,"HideConstruction",0]
				] call BIS_fnc_initVehicle;
				
				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_MDF_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;

					private _gunner = [] call MAZ_EZM_MDF_fnc_createRiflemanModule;
					_gunner moveInGunner _vehicle;

					private _grp = createGroup [independent,true];
					[_driver,_gunner] joinSilent _grp;
					_grp selectLeader _driver;
				};

				_vehicle
			};

			MAZ_EZM_MDF_fnc_createZamakAmmoModule = {
				private _vehicle = ["I_Truck_02_ammo_F",["a3\soft_f_beta\truck_02\data\truck_02_kab_blue_co.paa","a3\soft_f_beta\truck_02\data\truck_02_fuel_co.paa","a3\soft_f_beta\truck_02\data\truck_02_int_co.paa"]] call MAZ_EZM_fnc_createVehicle;
				
				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_MDF_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;
				};

				_vehicle
			};

			MAZ_EZM_MDF_fnc_createZamakFuelModule = {
				private _vehicle = ["I_Truck_02_fuel_F",["a3\soft_f_beta\truck_02\data\truck_02_kab_blue_co.paa","a3\soft_f_beta\truck_02\data\truck_02_fuel_co.paa","a3\soft_f_beta\truck_02\data\truck_02_int_co.paa"]] call MAZ_EZM_fnc_createVehicle;
				
				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_MDF_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;
				};

				_vehicle
			};

			MAZ_EZM_MDF_fnc_createZamakMedicalModule = {
				private _vehicle = ["I_Truck_02_medical_F",["a3\soft_f_beta\truck_02\data\truck_02_kab_blue_co.paa","a3\soft_f_beta\truck_02\data\truck_02_kuz_olive_co.paa","a3\soft_f_beta\truck_02\data\truck_02_int_co.paa"]] call MAZ_EZM_fnc_createVehicle;	
				
				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_MDF_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;
				};

				_vehicle
			};

			MAZ_EZM_MDF_fnc_createZamakRepairModule = {
				private _vehicle = ["I_Truck_02_box_F",["a3\soft_f_beta\truck_02\data\truck_02_kab_blue_co.paa","a3\soft_f_beta\truck_02\data\truck_02_repair_green_co.paa","a3\soft_f_beta\truck_02\data\truck_02_int_co.paa"]] call MAZ_EZM_fnc_createVehicle;	

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_MDF_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;
				};

				_vehicle
			};

			MAZ_EZM_MDF_fnc_createZamakTransportModule = {
				private _vehicle = ["I_Truck_02_transport_F",["a3\soft_f_beta\truck_02\data\truck_02_kab_blue_co.paa","a3\soft_f_beta\truck_02\data\truck_02_kuz_olive_co.paa","a3\soft_f_beta\truck_02\data\truck_02_int_co.paa"]] call MAZ_EZM_fnc_createVehicle;	
				
				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_MDF_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;
				};

				_vehicle
			};

			MAZ_EZM_MDF_fnc_createZamakTransportCoveredModule = {
				private _vehicle = ["I_Truck_02_covered_F",["a3\soft_f_beta\truck_02\data\truck_02_kab_blue_co.paa","a3\soft_f_beta\truck_02\data\truck_02_kuz_olive_co.paa","a3\soft_f_beta\truck_02\data\truck_02_int_co.paa"]] call MAZ_EZM_fnc_createVehicle;			
				
				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_MDF_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;
				};

				_vehicle
			};

		comment "Drones";

			MAZ_EZM_MDF_fnc_createGreyhawkModule = {
				private _vehicle = ["B_UAV_02_dynamicLoadout_F",["a3\drones_f\air_f_gamma\uav_02\data\uav_02_indp_co.paa"]] call MAZ_EZM_fnc_createVehicle;							
				private _aiGroup = createGroup [independent,true];
				private _oldGroup = createVehicleCrew _vehicle;
				private _leader = leader _oldGroup;
				{
					[_x] joinSilent _aiGroup;
				}forEach units _oldGroup;
				_aiGroup selectLeader _leader;

				_vehicle
			};

		comment "Groups";

			MAZ_EZM_MDF_fnc_createRifleSquadModule = {
				private _squadLead = call MAZ_EZM_MDF_fnc_createSquadLeadModule;
				private _grp = group _squadLead;
				{
					private _unit = call (missionNamespace getVariable _x);
					[_unit] joinSilent _grp;
				}forEach [
					'MAZ_EZM_MDF_fnc_createRiflemanModule',
					'MAZ_EZM_MDF_fnc_createRiflemanATModule',
					'MAZ_EZM_MDF_fnc_createMarksmanModule',
					'MAZ_EZM_MDF_fnc_createGrenadierModule',
					'MAZ_EZM_MDF_fnc_createAutoriflemanModule',
					'MAZ_EZM_MDF_fnc_createAmmoBearerModule',
					'MAZ_EZM_MDF_fnc_createMedicModule'
				];
				_grp setBehaviour "AWARE";
			};

			MAZ_EZM_MDF_fnc_createATSquadModule = {
				private _squadLead = call MAZ_EZM_MDF_fnc_createSquadLeadModule;
				private _grp = group _squadLead;
				{
					private _unit = call (missionNamespace getVariable _x);
					[_unit] joinSilent _grp;
				}forEach [
					'MAZ_EZM_MDF_fnc_createRiflemanATModule',
					'MAZ_EZM_MDF_fnc_createRiflemanATModule',
					'MAZ_EZM_MDF_fnc_createRiflemanModule'
				];
				_grp setBehaviour "AWARE";
			};

			MAZ_EZM_MDF_fnc_createAASquadModule = {
				private _squadLead = call MAZ_EZM_MDF_fnc_createSquadLeadModule;
				private _grp = group _squadLead;
				{
					private _unit = call (missionNamespace getVariable _x);
					[_unit] joinSilent _grp;
				}forEach [
					'MAZ_EZM_MDF_fnc_createMissileSpecAAModule',
					'MAZ_EZM_MDF_fnc_createMissileSpecAAModule',
					'MAZ_EZM_MDF_fnc_createRiflemanModule'
				];
				_grp setBehaviour "AWARE";
			};

			MAZ_EZM_MDF_fnc_createSentrySquadModule = {
				private _squadLead = call MAZ_EZM_MDF_fnc_createGrenadierModule;
				private _grp = group _squadLead;
				{
					private _unit = call (missionNamespace getVariable _x);
					[_unit] joinSilent _grp;
				}forEach [
					'MAZ_EZM_MDF_fnc_createRiflemanModule'
				];
				_grp setBehaviour "AWARE";
			};

			MAZ_EZM_MDF_fnc_createPatrolSquadModule = {
				private _squadLead = call MAZ_EZM_MDF_fnc_createSquadLeadModule;
				private _grp = group _squadLead;
				{
					private _unit = call (missionNamespace getVariable _x);
					[_unit] joinSilent _grp;
				}forEach [
					'MAZ_EZM_MDF_fnc_createAutoriflemanModule',
					'MAZ_EZM_MDF_fnc_createRiflemanModule',
					'MAZ_EZM_MDF_fnc_createRiflemanLATModule'
				];
				_grp setBehaviour "AWARE";
			};

		comment "Helicopters";

			MAZ_EZM_MDF_fnc_createHummingbirdModule = {
				private _vehicle = ["B_Heli_Light_01_F",["A3\air_f\heli_light_01\data\skins\Heli_light_01_ext_digital_co.paa"]] call MAZ_EZM_fnc_createVehicle;					

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_MDF_fnc_createHeliPilotModule;
					_driver moveInDriver _vehicle;

					private _coPilot = [] call MAZ_EZM_MDF_fnc_createHeliPilotModule;
					_coPilot moveinturret [_vehicle, [0]];

					private _grp = createGroup [independent,true];
					[_driver,_coPilot] joinSilent _grp;
					_grp selectLeader _driver;
				};

				_vehicle
			};

			MAZ_EZM_MDF_fnc_createPawneeModule = {
				private _vehicle = ["B_Heli_Light_01_dynamicLoadout_F",["A3\air_f\heli_light_01\data\skins\Heli_light_01_ext_digital_co.paa"]] call MAZ_EZM_fnc_createVehicle;		
									
				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_MDF_fnc_createHeliPilotModule;
					_driver moveInDriver _vehicle;

					private _coPilot = [] call MAZ_EZM_MDF_fnc_createHeliPilotModule;
					_coPilot moveinturret [_vehicle, [0]];

					private _grp = createGroup [independent,true];
					[_driver,_coPilot] joinSilent _grp;
					_grp selectLeader _driver;
				};

				_vehicle
			};

		comment "Men";

			MAZ_EZM_MDF_fnc_addMDFIdentitiesToUnit = {
				params ["_unit"];
				sleep 0.5;
				private _frenchVoice = [
					"Male01FRE",
					"Male02FRE",
					"Male03FRE",
					"Male01ENGFRE",
					"Male02ENGFRE"
				];
				private _whiteHeads = [
					"WhiteHead_01",
					"WhiteHead_02",
					"WhiteHead_03",
					"WhiteHead_04",
					"WhiteHead_05",
					"WhiteHead_06",
					"WhiteHead_07",
					"WhiteHead_08",
					"WhiteHead_09",
					"WhiteHead_10",
					"WhiteHead_11",
					"WhiteHead_12",
					"WhiteHead_13",
					"WhiteHead_14",
					"WhiteHead_15",
					"WhiteHead_16",
					"WhiteHead_17",
					"WhiteHead_18",
					"WhiteHead_19",
					"WhiteHead_20",
					"WhiteHead_21",
					"WhiteHead_23",
					"WhiteHead_24",
					"WhiteHead_25",
					"WhiteHead_26",
					"WhiteHead_27",
					"WhiteHead_28",
					"WhiteHead_29",
					"WhiteHead_30",
					"WhiteHead_31",
					"WhiteHead_32"
				];

				[_unit,(selectRandom _frenchVoice)] remoteExec ['setSpeaker'];
				[_unit,(selectRandom _whiteHeads)] remoteExec ['setFace'];
			};

			MAZ_EZM_MDF_fnc_addMDFUniformToUnit = {
				params ["_unit"];
				private _mdfUniforms = ["U_I_CombatUniform","U_I_CombatUniform_shortsleeve","U_BG_Guerilla1_1"];
				private _mdfVests = ["V_PlateCarrier1_rgr_noflag_F","V_TacVest_brn"];
				private _mdfHeadgear = ["H_MilCap_OUcamo","H_Bandanna_cbr","H_Bandanna_khk_hs","H_Bandanna_khk","H_Watchcap_cbr","H_Booniehat_khk_hs","H_Booniehat_khk","H_HelmetB_light_sand"];
				private _mdfGoggles = ["G_Bandanna_beast","G_Bandanna_blk","G_Bandanna_khk","G_Bandanna_shades","G_Bandanna_sport","G_Bandanna_tan","G_Shades_Black","G_Shades_Blue","G_Shades_Green","G_Shades_Red","G_Spectacles","G_Tactical_Clear","G_Tactical_Black"];
				
				_unit forceAddUniform (selectRandom _mdfUniforms);
				_unit addVest (selectRandom _mdfVests);
				_unit addHeadgear (selectRandom _mdfHeadgear);
				_unit addGoggles (selectRandom _mdfGoggles);
			};

			MAZ_EZM_MDF_fnc_addMDFUniformTextures = {
				params ["_unit"];
				while{alive _unit} do {
					switch (uniform _unit) do {
						case "U_I_CombatUniform_shortsleeve": {
							[_unit,[0,"A3\characters_f_exp\Syndikat\Data\U_I_C_Soldier_Para_4_F_2_co.paa"]] remoteExec ['setObjectTexture'];
						};
						case "U_I_CombatUniform": {
							[_unit,[0,"A3\characters_f_exp\Syndikat\Data\U_I_C_Soldier_Para_4_F_2_co.paa"]] remoteExec ['setObjectTexture'];
						};
						case "U_BG_Guerilla1_1": {
							[_unit,[1,"A3\characters_f_exp\Syndikat\Data\U_I_C_Soldier_Para_4_F_2_co.paa"]] remoteExec ['setObjectTexture'];
						};
					};
					sleep 5;
				};
			};

			MAZ_EZM_MDF_fnc_createAmmoBearerModule = {
				private _unit = [independent,"I_Soldier_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				_unit setUnitLoadout [[],[],[],[],[],["B_Carryall_khk",[["FirstAidKit",4],["200Rnd_65x39_cased_Box",1,200],["NLAW_F",1,1],["HandGrenade",2,1],["MiniGrenade",2,1],["1Rnd_HE_Grenade_shell",6,1],["20Rnd_762x51_Mag",3,20]]],"","",[],["ItemMap","","ItemRadio","ItemCompass","ItemWatch",""]];
				[_unit] call MAZ_EZM_MDF_fnc_addMDFUniformToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFIdentitiesToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFUniformTextures;
				[_unit] call MAZ_EZM_fnc_autoResupplyAI;
				[_unit,["arifle_Mk20_plain_F",["30Rnd_556x45_Stanag",5],["optic_holosight","acc_flashlight"]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3] call MAZ_EZM_fnc_addItemAndWeapons;

				_unit
			};

			MAZ_EZM_MDF_fnc_createAutoriflemanModule = {
				private _unit = [independent,"I_Soldier_AR_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_MDF_fnc_addMDFUniformToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFIdentitiesToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFUniformTextures;
				[_unit] call MAZ_EZM_fnc_autoResupplyAI;
				[_unit,["LMG_Mk200_F",["200Rnd_65x39_cased_Box",3],["optic_holosight"]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3] call MAZ_EZM_fnc_addItemAndWeapons;

				_unit
			};

			MAZ_EZM_MDF_fnc_createMedicModule = {
				private _unit = [independent,"I_Medic_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_MDF_fnc_addMDFUniformToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFIdentitiesToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFUniformTextures;
				[_unit] call MAZ_EZM_fnc_autoResupplyAI;
				[_unit,["arifle_Mk20_plain_F",["30Rnd_556x45_Stanag",5],["optic_holosight","acc_flashlight"]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],0] call MAZ_EZM_fnc_addItemAndWeapons;

				_unit addBackpack "B_AssaultPack_cbr";
				_unit addItemToBackpack "Medikit";
				for "_i" from 0 to 4 do {
					_unit addItemToBackpack "FirstAidKit";
				};

				_unit
			};

			MAZ_EZM_MDF_fnc_createCrewmanModule = {
				private _unit = [independent,"I_crew_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_MDF_fnc_addMDFUniformToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFIdentitiesToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFUniformTextures;
				[_unit] call MAZ_EZM_fnc_autoResupplyAI;
				removeHeadgear _unit;
				_unit addHeadgear "H_HelmetCrew_I";
				removeVest _unit;
				_unit addVest "V_TacVest_brn";
				[_unit,["arifle_Mk20C_plain_F",["30Rnd_556x45_Stanag",5],["optic_holosight","acc_flashlight"]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3] call MAZ_EZM_fnc_addItemAndWeapons;

				_unit
			};

			MAZ_EZM_MDF_fnc_createEngineerModule = {
				private _unit = [independent,"I_engineer_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				_unit setUnitLoadout [[],[],[],[],[],["B_Carryall_khk",[["ToolKit",1],["MineDetector",1],["DemoCharge_Remote_Mag",2,1],["SatchelCharge_Remote_Mag",1,1]]],"","",[],["ItemMap","","ItemRadio","ItemCompass","ItemWatch",""]];
				[_unit] call MAZ_EZM_MDF_fnc_addMDFUniformToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFIdentitiesToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFUniformTextures;
				[_unit] call MAZ_EZM_fnc_autoResupplyAI;
				[_unit,["arifle_Mk20_plain_F",["30Rnd_556x45_Stanag",5],["optic_holosight","acc_flashlight"]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3] call MAZ_EZM_fnc_addItemAndWeapons;

				_unit
			};

			MAZ_EZM_MDF_fnc_createExplosivesSpecModule = {
				private _unit = [independent,"I_Soldier_exp_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				_unit setUnitLoadout [[],[],[],[],[],["B_Carryall_khk",[["ToolKit",1],["MineDetector",1],["APERSBoundingMine_Range_Mag",3,1],["ClaymoreDirectionalMine_Remote_Mag",2,1],["SLAMDirectionalMine_Wire_Mag",2,1],["DemoCharge_Remote_Mag",1,1]]],"","",[],["ItemMap","","ItemRadio","ItemCompass","ItemWatch",""]];
				[_unit] call MAZ_EZM_MDF_fnc_addMDFUniformToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFIdentitiesToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFUniformTextures;
				[_unit] call MAZ_EZM_fnc_autoResupplyAI;
				[_unit,["arifle_Mk20_plain_F",["30Rnd_556x45_Stanag",5],["optic_holosight","acc_flashlight"]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3] call MAZ_EZM_fnc_addItemAndWeapons;

				_unit
			};

			MAZ_EZM_MDF_fnc_createGrenadierModule = {
				private _unit = [independent,"I_Soldier_GL_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_MDF_fnc_addMDFUniformToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFIdentitiesToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFUniformTextures;
				[_unit] call MAZ_EZM_fnc_autoResupplyAI;
				[_unit,["arifle_Mk20_GL_plain_F",["30Rnd_556x45_Stanag",5],["optic_holosight","acc_flashlight"]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3,[["1Rnd_HE_Grenade_shell",6],["1Rnd_Smoke_Grenade_shell",2]]] call MAZ_EZM_fnc_addItemAndWeapons;

				_unit
			};

			MAZ_EZM_MDF_fnc_createHeliCrewModule = {
				private _unit = [independent,"I_crew_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_MDF_fnc_addMDFUniformToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFIdentitiesToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFUniformTextures;
				[_unit] call MAZ_EZM_fnc_autoResupplyAI;
				removeHeadgear _unit;
				_unit addHeadgear "H_CrewHelmetHeli_B";
				removeVest _unit;
				_unit addVest "V_TacVest_brn";
				[_unit,["arifle_Mk20C_plain_F",["30Rnd_556x45_Stanag",5],["optic_holosight","acc_flashlight"]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3] call MAZ_EZM_fnc_addItemAndWeapons;

				_unit
			};

			MAZ_EZM_MDF_fnc_createHeliPilotModule = {
				private _unit = [independent,"I_crew_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_MDF_fnc_addMDFUniformToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFIdentitiesToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFUniformTextures;
				[_unit] call MAZ_EZM_fnc_autoResupplyAI;
				removeHeadgear _unit;
				_unit addHeadgear "H_PilotHelmetHeli_B";
				removeVest _unit;
				_unit addVest "V_TacVest_brn";
				[_unit,["arifle_Mk20C_plain_F",["30Rnd_556x45_Stanag",5],["optic_holosight","acc_flashlight"]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3] call MAZ_EZM_fnc_addItemAndWeapons;

				_unit
			};

			MAZ_EZM_MDF_fnc_createMarksmanModule = {
				private _unit = [independent,"I_Soldier_M_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_MDF_fnc_addMDFUniformToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFIdentitiesToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFUniformTextures;
				[_unit] call MAZ_EZM_fnc_autoResupplyAI;
				[_unit,["srifle_DMR_03_tan_F",["20Rnd_762x51_Mag",5],["optic_hamr"]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3] call MAZ_EZM_fnc_addItemAndWeapons;

				_unit
			};

			MAZ_EZM_MDF_fnc_createMissileSpecAAModule = {
				private _unit = [independent,"I_Soldier_AA_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_MDF_fnc_addMDFUniformToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFIdentitiesToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFUniformTextures;
				[_unit] call MAZ_EZM_fnc_autoResupplyAI;
				[_unit,["arifle_Mk20_plain_F",["30Rnd_556x45_Stanag",5],["optic_holosight","acc_flashlight"]],["launch_B_Titan_F",["Titan_AA",2]],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3] call MAZ_EZM_fnc_addItemAndWeapons;

				_unit
			};

			MAZ_EZM_MDF_fnc_createPilotModule = {
				private _unit = [independent,"I_Soldier_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				_unit setUnitLoadout [["SMG_01_F","","","optic_Aco_smg",["30Rnd_45ACP_Mag_SMG_01",30],[],""],[],[],["U_I_pilotCoveralls",[["30Rnd_45ACP_Mag_SMG_01",3,30],["SmokeShellOrange",2,1]]],[],[],"H_PilotHelmetFighter_I","",[],["ItemMap","ItemGPS","ItemRadio","ItemCompass","ItemWatch",""]];
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFIdentitiesToUnit;
				[_unit] call MAZ_EZM_fnc_autoResupplyAI;

				_unit
			};

			MAZ_EZM_MDF_fnc_createRiflemanModule = {
				private _unit = [independent,"I_Soldier_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_MDF_fnc_addMDFUniformToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFIdentitiesToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFUniformTextures;
				[_unit] call MAZ_EZM_fnc_autoResupplyAI;
				[_unit,["arifle_Mk20_plain_F",["30Rnd_556x45_Stanag",5],["optic_holosight","acc_flashlight"]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3] call MAZ_EZM_fnc_addItemAndWeapons;

				_unit
			};

			MAZ_EZM_MDF_fnc_createRiflemanATModule = {
				private _unit = [independent,"I_Soldier_LAT_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_MDF_fnc_addMDFUniformToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFIdentitiesToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFUniformTextures;
				[_unit] call MAZ_EZM_fnc_autoResupplyAI;
				_unit addBackpack "B_AssaultPack_cbr";
				[_unit,["arifle_Mk20_plain_F",["30Rnd_556x45_Stanag",5],["optic_holosight","acc_flashlight"]],["launch_NLAW_F",["NLAW_F",2]],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3] call MAZ_EZM_fnc_addItemAndWeapons;

				_unit
			};

			MAZ_EZM_MDF_fnc_createRiflemanLATModule = {
				private _unit = [independent,"I_Soldier_LAT2_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_MDF_fnc_addMDFUniformToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFIdentitiesToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFUniformTextures;
				[_unit] call MAZ_EZM_fnc_autoResupplyAI;
				_unit addBackpack "B_AssaultPack_cbr";
				[_unit,["arifle_Mk20_plain_F",["30Rnd_556x45_Stanag",5],["optic_holosight","acc_flashlight"]],["launch_MRAWS_sand_rail_F",["MRAWS_HEAT_F",2]],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3] call MAZ_EZM_fnc_addItemAndWeapons;

				_unit
			};

			MAZ_EZM_MDF_fnc_createSquadLeadModule = {
				private _unit = [independent,"I_Soldier_SL_F",MAZ_EZM_stanceForAI,"ALERT","SERGEANT"] call MAZ_EZM_fnc_createMan;
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_MDF_fnc_addMDFUniformToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFIdentitiesToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFUniformTextures;
				[_unit] call MAZ_EZM_fnc_autoResupplyAI;
				[_unit,["arifle_Mk20_plain_F",["30Rnd_556x45_Stanag",5],["optic_hamr","acc_flashlight"]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3] call MAZ_EZM_fnc_addItemAndWeapons;

				_unit addBackpack "B_RadioBag_01_black_F";
				[(unitbackpack _unit),[0,"A3\characters_f_exp\Syndikat\Data\U_I_C_Soldier_Para_4_F_2_co.paa"]] remoteExec ['setObjectTexture',0,_unit];

				_unit
			};

			MAZ_EZM_MDF_fnc_createSurvivorModule = {
				private _unit = [independent,"I_Soldier_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_MDF_fnc_addMDFUniformToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFIdentitiesToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFUniformTextures;
				[_unit] call MAZ_EZM_fnc_autoResupplyAI;
				removeVest _unit;
				removeHeadgear _unit;
				[_unit,""] remoteExec ["switchMove"];
				_unit
			};

			MAZ_EZM_MDF_fnc_createUAVOpModule = {
				private _unit = [independent,"I_Soldier_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				_unit setUnitLoadout [[],[],[],[],[],[],"","",[],["ItemMap","I_UavTerminal","ItemRadio","ItemCompass","ItemWatch",""]];
				[_unit] call MAZ_EZM_MDF_fnc_addMDFUniformToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFIdentitiesToUnit;
				[_unit] spawn MAZ_EZM_MDF_fnc_addMDFUniformTextures;
				[_unit] call MAZ_EZM_fnc_autoResupplyAI;
				[_unit,["arifle_Mk20_plain_F",["30Rnd_556x45_Stanag",5],["optic_holosight","acc_flashlight"]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3] call MAZ_EZM_fnc_addItemAndWeapons;
				_unit addBackpack "I_UAV_01_backpack_F";

				_unit
			};

		comment "Planes";

			MAZ_EZM_MDF_fnc_createGryphonModule = {
				private _vehicle = ["I_Plane_Fighter_04_F",[
					"a3\air_f_jets\plane_fighter_04\data\fighter_04_fuselage_01_co.paa",
					"a3\air_f_jets\plane_fighter_04\data\fighter_04_fuselage_02_co.paa",
					"a3\air_f_jets\plane_fighter_04\data\fighter_04_misc_01_co.paa",
					format ["a3\air_f_jets\plane_fighter_04\data\numbers\fighter_04_number_0%1_ca.paa", selectRandom [0,1,2,3,4,5,6,7,8,9]],
					format ["a3\air_f_jets\plane_fighter_04\data\numbers\fighter_04_number_0%1_ca.paa", selectRandom [0,1,2,3,4,5,6,7,8,9]],
					format ["a3\air_f_jets\plane_fighter_04\data\numbers\fighter_04_number_0%1_ca.paa", selectRandom [0,1,2,3,4,5,6,7,8,9]]
				]] call MAZ_EZM_fnc_createVehicle;
				
				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_MDF_fnc_createPilotModule;
					_driver moveInDriver _vehicle;
				};

				_vehicle
			};

	comment "CSAT (China) Units"; 

		comment "Anti-Air";	

			MAZ_EZM_CSATP_fnc_createTigris = { 
				private _vehicle = ["O_APC_Tracked_02_AA_F"] call MAZ_EZM_fnc_createVehicle;	
				_vehicle disableTIEquipment true; 
	
				[ 
					_vehicle, 
					["Hex",1],  
					["showTracks",1,"showCamonetHull",1,"showCamonetTurret",1,"showSLATHull",0]
				] call BIS_fnc_initVehicle; 
							
				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule; 
					_driver moveInDriver _vehicle; 
				
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule; 
					_gunner moveInGunner _vehicle;
				
					private _grp = createGroup [east,true]; 
					[_driver,_gunner] joinSilent _grp; 
					_grp selectLeader _gunner; 
					_grp setBehaviour "AWARE";
				}; 
			
				_vehicle 
			};

			MAZ_EZM_CSATP_fnc_createTigrisMissile = { 
				private _vehicle = ["O_APC_Tracked_02_AA_F"] call MAZ_EZM_fnc_createVehicle;
				_vehicle disableTIEquipment true; 
	
				[ 
					_vehicle, 
					["Hex",1],  
					["showTracks",1,"showCamonetHull",1,"showCamonetTurret",1,"showSLATHull",0]
				] call BIS_fnc_initVehicle; 
							
				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule; 
					_driver moveInDriver _vehicle; 
				
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule; 
					_gunner moveInGunner _vehicle;

					_vehicle removeWeaponTurret ["missiles_titan_AA", [0]];
				
					private _grp = createGroup [east,true]; 
					[_driver,_gunner] joinSilent _grp; 
					_grp selectLeader _gunner; 
					_grp setBehaviour "AWARE";
				}; 
			
				_vehicle 
			};

		comment "APCs"; 
		
			MAZ_EZM_CSATP_fnc_createMarid = { 
				private _vehicle = ["O_APC_Wheeled_02_rcws_v2_F"] call MAZ_EZM_fnc_createVehicle;
				_vehicle disableTIEquipment true; 
	
				[ 
					_vehicle, 
					["Hex",1],  
					["showBags",0,"showCanisters",1,"showTools",0,"showCamonetHull",1,"showSLATHull",0]
				] call BIS_fnc_initVehicle; 
							
				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule; 
					_driver moveInDriver _vehicle; 
				
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule; 
					_gunner moveInGunner _vehicle;
				
					private _grp = createGroup [east,true]; 
					[_driver,_gunner] joinSilent _grp; 
					_grp selectLeader _commander; 
					_grp setBehaviour "AWARE";
				}; 
			
				_vehicle 
			};

			MAZ_EZM_CSATP_fnc_createBTRK = { 
				private _vehicle = ["O_APC_Tracked_02_cannon_F"] call MAZ_EZM_fnc_createVehicle;
				_vehicle disableTIEquipment true; 
	
				[ 
					_vehicle, 
					["Hex",1],  
					["showTracks",1,"showCamonetHull",1,"showBags",0,"showSLATHull",0]
				] call BIS_fnc_initVehicle; 
							
				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule; 
					_driver moveInDriver _vehicle; 
				
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule; 
					_gunner moveInGunner _vehicle; 
				
					private _commander = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule; 
					_commander moveInCommander _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_driver,_gunner,_commander] joinSilent _grp; 
					_grp selectLeader _commander; 
					_grp setBehaviour "AWARE";
				}; 
			
				_vehicle 
			};
		
		comment "Artillery";
		
			MAZ_EZM_CSATP_fnc_createSochorModule = { 
				private _vehicle = ["O_MBT_02_arty_F"] call MAZ_EZM_fnc_createVehicle;
				_vehicle disableTIEquipment true; 
			
				[ 
					_vehicle, 
					["Hex",1],  
					["showAmmobox",1,"showCanisters",1,"showCamonetTurret",1,"showCamonetHull",1,"showLog",1]
				] call BIS_fnc_initVehicle; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule; 
					_driver moveInDriver _vehicle; 
				
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule; 
					_gunner moveInGunner _vehicle; 

					private _commander = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule; 
					_commander moveInCommander _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_driver,_gunner,_commander] joinSilent _grp; 
					_grp selectLeader _gunner; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			};

			MAZ_EZM_CSATP_fnc_createSochorNoCommanderModule = {  
				private _vehicle = ["O_MBT_02_arty_F"] call MAZ_EZM_fnc_createVehicle; 
				_vehicle disableTIEquipment true;  
				
				[  
					_vehicle,  
					["Hex",1],   
					["showAmmobox",1,"showCanisters",1,"showCamonetTurret",1,"showCamonetHull",1,"showLog",1] 
				] call BIS_fnc_initVehicle;  

				_vehicle setObjectTextureGlobal [3, ""]; _vehicle lockturret [[0,0],true];  
				
				if(MAZ_EZM_spawnWithCrew) then {  
					private _driver = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule;  
					_driver moveInDriver _vehicle;  
					
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule;  
					_gunner moveInGunner _vehicle; 
					
					private _grp = createGroup [east,true];  
					[_driver,_gunner] joinSilent _grp;  
					_grp selectLeader _gunner;  
					_grp setBehaviour "AWARE"; 
				}; 

				_vehicle 
			};  

			MAZ_EZM_CSATP_fnc_createMRLModule = {
				
				private _vehicle = ["I_Truck_02_MRL_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
				
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_gunner moveInAny _vehicle; 

					private _grp = createGroup [east,true]; 
					[_driver,_gunner] joinSilent _grp; 
					_grp selectLeader _driver; 
					_grp setBehaviour "AWARE"; 
				}; 

				[ 
					_vehicle, 
					["Opfor",1] 
				] call BIS_fnc_initVehicle;
			
				_vehicle 
			};

		comment "Boats"; 
		
			MAZ_EZM_CSATP_fnc_createRhibBoatModule = { 
				private _vehicle = ["I_C_Boat_Transport_02_F"] call MAZ_EZM_fnc_createVehicle;
				
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_driver,_gunner] joinSilent _grp; 
					_grp selectLeader _driver; 
				}; 
			
				_vehicle 
			}; 
		
			MAZ_EZM_CSATP_fnc_createAssaultBoatModule = {
				private _vehicle = ["O_Boat_Transport_01_F"] call MAZ_EZM_fnc_createVehicle;
				
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_driver,_gunner] joinSilent _grp; 
					_grp selectLeader _driver; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createSpeedBoatModule = {
				private _vehicle = ["B_Boat_Armed_01_minigun_F",[
				"a3\boat_f\boat_armed_01\data\boat_armed_01_ext_opfor_co.paa",
				"a3\boat_f\boat_armed_01\data\boat_armed_01_int_opfor_co.paa",
				""
				]] call MAZ_EZM_fnc_createVehicle;
				_vehicle setObjectTextureGlobal [2, ""];
				_vehicle removeWeaponTurret ["GMG_40mm", [0]];
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
					private _commander = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_commander moveInCommander _vehicle; 
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_gunner moveInGunner _vehicle; 
					private _grp = createGroup [east,true]; 
					[_driver,_gunner,_commander] joinSilent _grp; 
					_grp selectLeader _driver; 
					_vehicle disableTIEquipment true; 
				}; 
				
				_vehicle 
			};

			MAZ_EZM_CSATP_fnc_createSpeedBoatHMGModule = {
				private _vehicle = ["O_Boat_Armed_01_hmg_F"] call MAZ_EZM_fnc_createVehicle;
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
					private _commander = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_commander moveInCommander _vehicle; 
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_gunner moveInGunner _vehicle; 
					private _grp = createGroup [east,true]; 
					[_driver,_gunner,_commander] joinSilent _grp; 
					_grp selectLeader _driver; 
					_vehicle disableTIEquipment true; 
				}; 
			
				_vehicle 
			};

			MAZ_EZM_CSATP_fnc_createSpeedBoatMinigunModule = {
				private _vehicle = ["B_Boat_Armed_01_minigun_F",[
					"a3\boat_f\boat_armed_01\data\boat_armed_01_ext_opfor_co.paa",
					"a3\boat_f\boat_armed_01\data\boat_armed_01_int_opfor_co.paa",
					"a3\boat_f\boat_armed_01\data\boat_armed_01_crows_opfor_co.paa"
				]] call MAZ_EZM_fnc_createVehicle;
                _vehicle disableTIEquipment true; 
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
					private _commander = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_commander moveInCommander _vehicle; 
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_gunner moveInGunner _vehicle; 
					private _grp = createGroup [east,true]; 
					[_driver,_gunner,_commander] joinSilent _grp; 
					_grp selectLeader _driver; 
				}; 
			
				_vehicle 
			};
		
		comment "Cars"; 
		
			MAZ_EZM_CSATP_fnc_createIfritModule = {
				private _vehicle = ["O_MRAP_02_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createIfritHMGModule = {
				
				private _vehicle = ["O_MRAP_02_hmg_F"] call MAZ_EZM_fnc_createVehicle;
				_vehicle disableTIEquipment true; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
					_gunner moveInGunner _vehicle;
					private _grp = createGroup [east,true]; 
					[_driver,_gunner] joinSilent _grp; 
					_grp selectLeader _driver; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createIfritGMGModule = {
				
				private _vehicle = ["O_MRAP_02_gmg_F"] call MAZ_EZM_fnc_createVehicle;
				_vehicle disableTIEquipment true; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
					_gunner moveInGunner _vehicle;
					private _grp = createGroup [east,true]; 
					[_driver,_gunner] joinSilent _grp; 
					_grp selectLeader _driver; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_CSATP_fnc_createQuadbikeModule = {
				private _vehicle = ["O_Quadbike_01_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					private _passanger = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
					_passanger moveinCargo _vehicle; 
					[_driver] call MAZ_EZM_CSATP_fnc_addCSATPBackpack; 
					[_passanger] call MAZ_EZM_CSATP_fnc_addCSATPBackpack; 
					private _grp = createGroup [east,true]; 
					[_driver,_passanger] joinSilent _grp; 
					_grp selectLeader _driver; 
				}; 
			
				_vehicle 
			};

			MAZ_EZM_CSATP_fnc_createQilinUnarmedModule = {
				private _vehicle = ["O_LSV_02_unarmed_F"] call MAZ_EZM_fnc_createVehicle; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createQilinMinigunModule = { 
				private _vehicle = ["O_LSV_02_armed_F"] call MAZ_EZM_fnc_createVehicle; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
					_gunner moveInGunner _vehicle;
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createQilinATModule = { 
				private _vehicle = ["O_LSV_02_AT_F"] call MAZ_EZM_fnc_createVehicle; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
					_gunner moveInGunner _vehicle;
				}; 
			
				_vehicle 
			}; 
			
		comment "Drones"; 

			MAZ_EZM_CSATP_fnc_createJinaahModule = { 
				private _vehicle = ["O_UAV_06_F"] call MAZ_EZM_fnc_createVehicle; 
			
				private _aiGroup = createGroup [opfor,true]; 
				private _oldGroup = createVehicleCrew _vehicle; 
				private _leader = leader _oldGroup; 
				{ 
					[_x] joinSilent _aiGroup; 
				}forEach units _oldGroup; 
				_aiGroup selectLeader _leader; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createJinaahMedicalModule = { 
				private _vehicle = ["O_UAV_06_medical_F"] call MAZ_EZM_fnc_createVehicle; 
			
				private _aiGroup = createGroup [opfor,true]; 
				private _oldGroup = createVehicleCrew _vehicle; 
				private _leader = leader _oldGroup; 
				{ 
					[_x] joinSilent _aiGroup; 
				}forEach units _oldGroup; 
				_aiGroup selectLeader _leader; 
			
				_vehicle 
			}; 
					
			MAZ_EZM_CSATP_fnc_createTayranModule = { 
				private _vehicle = ["O_UAV_01_F"] call MAZ_EZM_fnc_createVehicle; 
			
				private _aiGroup = createGroup [opfor,true]; 
				private _oldGroup = createVehicleCrew _vehicle; 
				private _leader = leader _oldGroup; 
				{ 
					[_x] joinSilent _aiGroup; 
				}forEach units _oldGroup; 
				_aiGroup selectLeader _leader; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createK40Module = { 
				private _vehicle = ["O_UAV_02_dynamicLoadout_F"] call MAZ_EZM_fnc_createVehicle; 
			
				private _aiGroup = createGroup [opfor,true]; 
				private _oldGroup = createVehicleCrew _vehicle; 
				private _leader = leader _oldGroup; 
				{ 
					[_x] joinSilent _aiGroup; 
				}forEach units _oldGroup; 
				_aiGroup selectLeader _leader;

				_vehicle 
			}; 
			
			MAZ_EZM_CSATP_fnc_createKH3AModule = { 
				private _vehicle = ["O_T_UAV_04_CAS_F"] call MAZ_EZM_fnc_createVehicle; 
			
				private _aiGroup = createGroup [opfor,true]; 
				private _oldGroup = createVehicleCrew _vehicle; 
				private _leader = leader _oldGroup; 
				{ 
					[_x] joinSilent _aiGroup; 
				}forEach units _oldGroup; 
				_aiGroup selectLeader _leader;

				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createSaifModule = { 
				private _vehicle = ["O_UGV_01_F"] call MAZ_EZM_fnc_createVehicle;
			
				private _aiGroup = createGroup [opfor,true]; 
				private _oldGroup = createVehicleCrew _vehicle; 
				private _leader = leader _oldGroup; 
				{ 
					[_x] joinSilent _aiGroup; 
				}forEach units _oldGroup; 
				_aiGroup selectLeader _leader;

				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createSaifRCWSModule = { 
				private _vehicle = ["O_UGV_01_rcws_F"] call MAZ_EZM_fnc_createVehicle;
			
				private _aiGroup = createGroup [opfor,true]; 
				private _oldGroup = createVehicleCrew _vehicle; 
				private _leader = leader _oldGroup; 
				{ 
					[_x] joinSilent _aiGroup; 
				}forEach units _oldGroup; 
				_aiGroup selectLeader _leader;

				_vehicle 
			}; 
		
		comment "Groups"; 
			
			MAZ_EZM_CSATP_fnc_createSquadModule = { 
				private _squadLead = call MAZ_EZM_CSATP_fnc_createSquadLeadModule; 
				private _grp = group _squadLead; 
				{ 
				private _unit = call (missionNamespace getVariable _x); 
				[_unit] joinSilent _grp; 
				}forEach [ 
				'MAZ_EZM_CSATP_fnc_createAmmoBearerModule', 
				'MAZ_EZM_CSATP_fnc_createCombatMedicModule', 
				'MAZ_EZM_CSATP_fnc_createRiflemanModule', 
				'MAZ_EZM_CSATP_fnc_createMarksmanModule', 
				'MAZ_EZM_CSATP_fnc_createRiflemanLATModule', 
				'MAZ_EZM_CSATP_fnc_createGrenadierModule', 
				'MAZ_EZM_CSATP_fnc_createAutoriflemanModule', 
				'MAZ_EZM_CSATP_fnc_createRiflemanModule' 
				]; 
				_grp setBehaviour "AWARE"; 
				{_x setunitpos "AUTO"} foreach units _squadLead 
			}; 
		
			MAZ_EZM_CSATP_fnc_createPatrolModule = { 
				private _squadLead = call MAZ_EZM_CSATP_fnc_createSquadLeadModule; 
				private _grp = group _squadLead; 
				{ 
				private _unit = call (missionNamespace getVariable _x); 
				[_unit] joinSilent _grp; 
				}forEach [ 
				'MAZ_EZM_CSATP_fnc_createCombatMedicModule', 
				'MAZ_EZM_CSATP_fnc_createRiflemanModule', 
				'MAZ_EZM_CSATP_fnc_createMarksmanModule', 
				'MAZ_EZM_CSATP_fnc_createRiflemanModule' 
				]; 
				_grp setBehaviour "AWARE"; 
				{_x setunitpos "AUTO"} foreach units _squadLead 
			}; 
			
			MAZ_EZM_CSATP_fnc_createSentryModule = { 
				private _squadLead = call MAZ_EZM_CSATP_fnc_createSquadLeadModule; 
				private _grp = group _squadLead; 
				{ 
				private _unit = call (missionNamespace getVariable _x); 
				[_unit] joinSilent _grp; 
				}forEach [ 
				'MAZ_EZM_CSATP_fnc_createRiflemanModule' 
				]; 
				_grp setBehaviour "AWARE"; 
				{_x setunitpos "AUTO"} foreach units _squadLead 
			}; 
			
			MAZ_EZM_CSATP_fnc_createAntiAirTeamModule = { 
				private _squadLead = call MAZ_EZM_CSATP_fnc_createSquadLeadModule; 
				private _grp = group _squadLead; 
				{ 
				private _unit = call (missionNamespace getVariable _x); 
				[_unit] joinSilent _grp; 
				}forEach [ 
				'MAZ_EZM_CSATP_fnc_createAmmoBearerModule', 
				'MAZ_EZM_CSATP_fnc_createMissileSpecAAModule' 
				]; 
				_grp setBehaviour "AWARE"; 
				{_x setunitpos "AUTO"} foreach units _squadLead 
			}; 
			
			MAZ_EZM_CSATP_fnc_createAntiTankTeamModule = { 
				private _squadLead = call MAZ_EZM_CSATP_fnc_createSquadLeadModule; 
				private _grp = group _squadLead; 
				{ 
				private _unit = call (missionNamespace getVariable _x); 
				[_unit] joinSilent _grp; 
				}forEach [ 
				'MAZ_EZM_CSATP_fnc_createAmmoBearerModule', 
				'MAZ_EZM_CSATP_fnc_createRiflemanLATModule' 
				]; 
				_grp setBehaviour "AWARE"; 
				{_x setunitpos "AUTO"} foreach units _squadLead 
			}; 
			
			MAZ_EZM_CSATP_fnc_createMarksmanTeamModule = { 
				private _squadLead = call MAZ_EZM_CSATP_fnc_createMarksmanModule; 
				private _grp = group _squadLead; 
				_squadLead addPrimaryWeaponItem "optic_DMS"; 
				{ 
				private _unit = call (missionNamespace getVariable _x); 
				[_unit] joinSilent _grp; 
				}forEach [ 
				'MAZ_EZM_CSATP_fnc_createSquadLeadModule' 
				]; 
				
				_grp setBehaviour "AWARE"; 
			}; 

			MAZ_EZM_CSATP_fnc_createSniperTeamModule = {  
				private _squadLead = call MAZ_EZM_CSATP_fnc_createReconSniperModule;  
				private _grp = group _squadLead;  
				_squadLead addPrimaryWeaponItem "optic_DMS";  
				{  
				private _unit = call (missionNamespace getVariable _x);  
				[_unit] joinSilent _grp;  
				}forEach [  
				'MAZ_EZM_CSATP_fnc_createReconSpotterModule'  
				];  
				
				_grp setBehaviour "AWARE";  
            };  
  
		comment "Groups (Urban)";

		    MAZ_EZM_CSATP_fnc_createSquadUrbanModule = { 
				private _squadLead = call MAZ_EZM_CSATP_fnc_createSquadLeadUrbanModule; 
				private _grp = group _squadLead; 
				{ 
					private _unit = call (missionNamespace getVariable _x); 
					[_unit] joinSilent _grp; 
				}forEach [ 
					'MAZ_EZM_CSATP_fnc_createAmmoBearerUrbanModule', 
					'MAZ_EZM_CSATP_fnc_createCombatMedicUrbanModule', 
					'MAZ_EZM_CSATP_fnc_createRiflemanUrbanModule', 
					'MAZ_EZM_CSATP_fnc_createMarksmanUrbanModule', 
					'MAZ_EZM_CSATP_fnc_createRiflemanLATUrbanModule', 
					'MAZ_EZM_CSATP_fnc_createGrenadierUrbanModule', 
					'MAZ_EZM_CSATP_fnc_createAutoriflemanUrbanModule', 
					'MAZ_EZM_CSATP_fnc_createRiflemanUrbanModule' 
				]; 
				_grp setBehaviour "AWARE"; 
				{_x setunitpos "AUTO"} foreach units _squadLead 
			}; 
		
			MAZ_EZM_CSATP_fnc_createPatrolUrbanModule = { 
				private _squadLead = call MAZ_EZM_CSATP_fnc_createSquadLeadUrbanModule; 
				private _grp = group _squadLead; 
				{ 
					private _unit = call (missionNamespace getVariable _x); 
					[_unit] joinSilent _grp; 
				}forEach [ 
					'MAZ_EZM_CSATP_fnc_createCombatMedicUrbanModule', 
					'MAZ_EZM_CSATP_fnc_createRiflemanUrbanModule', 
					'MAZ_EZM_CSATP_fnc_createMarksmanUrbanModule', 
					'MAZ_EZM_CSATP_fnc_createRiflemanUrbanModule' 
				]; 
				_grp setBehaviour "AWARE"; 
				{_x setunitpos "AUTO"} foreach units _squadLead 
			}; 
			
			MAZ_EZM_CSATP_fnc_createSentryUrbanModule = { 
				private _squadLead = call MAZ_EZM_CSATP_fnc_createSquadLeadUrbanModule; 
				private _grp = group _squadLead; 
				{ 
					private _unit = call (missionNamespace getVariable _x); 
					[_unit] joinSilent _grp; 
				}forEach [ 
					'MAZ_EZM_CSATP_fnc_createRiflemanUrbanModule' 
				]; 
				_grp setBehaviour "AWARE"; 
				{_x setunitpos "AUTO"} foreach units _squadLead 
			}; 
			
			MAZ_EZM_CSATP_fnc_createAntiAirTeamUrbanModule = { 
				private _squadLead = call MAZ_EZM_CSATP_fnc_createSquadLeadUrbanModule; 
				private _grp = group _squadLead; 
				{ 
					private _unit = call (missionNamespace getVariable _x); 
					[_unit] joinSilent _grp; 
				}forEach [ 
					'MAZ_EZM_CSATP_fnc_createAmmoBearerUrbanModule', 
					'MAZ_EZM_CSATP_fnc_createMissileSpecAAUrbanModule' 
				]; 
				_grp setBehaviour "AWARE"; 
				{_x setunitpos "AUTO"} foreach units _squadLead 
			}; 
			
			MAZ_EZM_CSATP_fnc_createAntiTankTeamUrbanModule = { 
				private _squadLead = call MAZ_EZM_CSATP_fnc_createSquadLeadUrbanModule; 
				private _grp = group _squadLead; 
				{ 
					private _unit = call (missionNamespace getVariable _x); 
					[_unit] joinSilent _grp; 
				}forEach [ 
					'MAZ_EZM_CSATP_fnc_createAmmoBearerUrbanModule', 
					'MAZ_EZM_CSATP_fnc_createRiflemanLATUrbanModule' 
				]; 
				_grp setBehaviour "AWARE"; 
				{_x setunitpos "AUTO"} foreach units _squadLead 
			}; 
			
			MAZ_EZM_CSATP_fnc_createSniperTeamUrbanModule = { 
				private _squadLead = call MAZ_EZM_CSATP_fnc_createMarksmanUrbanModule; 
				private _grp = group _squadLead; 
				_squadLead addPrimaryWeaponItem "optic_DMS"; 
				{ 
					private _unit = call (missionNamespace getVariable _x); 
					[_unit] joinSilent _grp; 
				}forEach [ 
					'MAZ_EZM_CSATP_fnc_createSquadLeadUrbanModule' 
				]; 
				
				_grp setBehaviour "AWARE"; 
			}; 
			
		comment "Helicopters";
			
			MAZ_EZM_CSATP_fnc_createTaruModule = { 
				private _vehicle = ["O_Heli_Transport_04_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _pilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_pilot moveInDriver _vehicle; 
				
					private _copilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_copilot moveInAny _vehicle; 

					private _copilot2 = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_copilot2 moveInAny _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_pilot,_copilot,_copilot2] joinSilent _grp; 
					_grp selectLeader _pilot; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createTaruAmmoModule = { 
				private _vehicle = ["O_Heli_Transport_04_ammo_F"] call MAZ_EZM_fnc_createVehicle; 
			
				if(MAZ_EZM_spawnWithCrew) then {
					private _pilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_pilot moveInDriver _vehicle; 
				
					private _copilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_copilot moveInAny _vehicle; 

					private _copilot2 = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_copilot2 moveInAny _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_pilot,_copilot,_copilot2] joinSilent _grp; 
					_grp selectLeader _pilot; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createTaruBenchModule = {
				private _vehicle = ["O_Heli_Transport_04_bench_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _pilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_pilot moveInDriver _vehicle; 
				
					private _copilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_copilot moveInAny _vehicle; 

					private _copilot2 = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_copilot2 moveInAny _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_pilot,_copilot,_copilot2] joinSilent _grp; 
					_grp selectLeader _pilot; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createTaruCargoModule = {
				private _vehicle = ["O_Heli_Transport_04_box_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _pilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_pilot moveInDriver _vehicle; 
				
					private _copilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_copilot moveInAny _vehicle; 

					private _copilot2 = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_copilot2 moveInAny _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_pilot,_copilot,_copilot2] joinSilent _grp; 
					_grp selectLeader _pilot; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createTaruFuelModule = {
				private _vehicle = ["O_Heli_Transport_04_fuel_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _pilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_pilot moveInDriver _vehicle; 
				
					private _copilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_copilot moveInAny _vehicle; 

					private _copilot2 = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_copilot2 moveInAny _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_pilot,_copilot,_copilot2] joinSilent _grp; 
					_grp selectLeader _pilot; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createTaruMedicalModule = {
				private _vehicle = ["O_Heli_Transport_04_medevac_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then {
					private _pilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_pilot moveInDriver _vehicle; 
				
					private _copilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_copilot moveInAny _vehicle; 

					private _copilot2 = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_copilot2 moveInAny _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_pilot,_copilot,_copilot2] joinSilent _grp; 
					_grp selectLeader _pilot; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createTaruRepairModule = {
				private _vehicle = ["O_Heli_Transport_04_repair_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _pilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_pilot moveInDriver _vehicle; 
				
					private _copilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_copilot moveInAny _vehicle; 

					private _copilot2 = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_copilot2 moveInAny _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_pilot,_copilot,_copilot2] joinSilent _grp; 
					_grp selectLeader _pilot; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createTaruTransportModule = {
				private _vehicle = ["O_Heli_Transport_04_covered_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _pilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_pilot moveInDriver _vehicle; 
				
					private _copilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_copilot moveInAny _vehicle; 

					private _copilot2 = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_copilot2 moveInAny _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_pilot,_copilot,_copilot2] joinSilent _grp; 
					_grp selectLeader _pilot; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createTaruKajmanModule = {
				private _vehicle = ["O_Heli_Attack_02_dynamicLoadout_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _pilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_pilot moveInDriver _vehicle; 
				
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_gunner moveInGunner _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_pilot,_gunner] joinSilent _grp; 
					_grp selectLeader _pilot; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createOrcaUnarmedModule = {
				private _vehicle = ["O_Heli_Light_02_unarmed_F"] call MAZ_EZM_fnc_createVehicle;

				[_vehicle,"Opfor"] call bis_fnc_initVehicle;

                if(MAZ_EZM_spawnWithCrew) then {
					private _pilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_pilot moveInDriver _vehicle; 
				
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_gunner moveInAny _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_pilot,_gunner] joinSilent _grp; 
					_grp selectLeader _pilot; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createOrcaModule = {
				private _vehicle = ["O_Heli_Light_02_dynamicLoadout_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _pilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_pilot moveInDriver _vehicle; 
				
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					_gunner moveInAny _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_pilot,_gunner] joinSilent _grp; 
					_grp selectLeader _pilot; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

		comment "Men"; 
		
			MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit = { 
				params ["_unit"]; 
				sleep 0.5; 

				private _CSATPVoice = [
					"Male03CHI",
					"Male01CHI",
					"Male02CHI"
				];

				[_unit,(selectRandom _CSATPVoice)] remoteExec ['setSpeaker']; 
				
				private _CSATPHeads = [ 
					"AsianHead_A3_01",
					"AsianHead_A3_02",
					"AsianHead_A3_03",
					"AsianHead_A3_04", 
					"AsianHead_A3_05", 
					"AsianHead_A3_06", 
					"AsianHead_A3_07"
				]; 

				[_unit,(selectRandom _CSATPHeads)] remoteExec ['setFace',0,_unit]; 
			
			}; 
			
			MAZ_EZM_CSATP_fnc_getCSATPWeaponToUnit = { 
				params ["_unit"]; 
				private _58Ammo = "30Rnd_580x42_Mag_F";  
				private _pWeapon = selectRandom [ ["arifle_CTAR_blk_F", _58Ammo],["arifle_CTAR_hex_F", _58Ammo] ]; 
							
				_pWeapon 
			}; 

			MAZ_EZM_CSATP_fnc_getCSATPUrbanWeaponToUnit = { 
				params ["_unit"]; 
				private _58Ammo = "30Rnd_580x42_Mag_F";  
				private _pWeapon = selectRandom [ ["arifle_CTAR_blk_F", _58Ammo] ]; 
							
				_pWeapon 
			}; 
			
			MAZ_EZM_CSATP_fnc_addCSATPBackpack = { 
				params ["_unit"]; 
				private _randomBackpack = selectRandom ["B_FieldPack_ocamo"]; 
				_unit addBackpackGlobal _randomBackpack; 
			}; 
			
			MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit = { 
				params ["_unit"]; 
				removeGoggles _unit;  
			}; 
			
			MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit = { 
				params ["_unit"]; 
				
				private _CSATPUniforms = ["U_O_CombatUniform_ocamo"]; 
				private _CSATPVests = ["V_HarnessO_brn","V_TacVest_khk"]; 
				private _CSATPHeadgear = ["H_HelmetLeaderO_ocamo","H_HelmetO_ocamo","H_HelmetSpecO_ocamo"]; 
				
				_unit forceAddUniform (selectRandom _CSATPUniforms); 
				_unit addVest (selectRandom _CSATPVests); 
				_unit addHeadgear (selectRandom _CSATPHeadgear); 
			}; 
			
			MAZ_EZM_CSATP_fnc_createAmmoBearerModule = { 
				private _unit = [east,"O_T_Soldier_A_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPBackpack; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			    [_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 
			
			MAZ_EZM_CSATP_fnc_createAutoriflemanModule = { 
				private _unit = [east,"O_T_Soldier_AR_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
			
				private _M58Ammo = selectRandom ["100Rnd_580x42_Mag_F","100Rnd_580x42_Mag_Tracer_F"];
				private _M58AmmoHex = selectRandom ["100Rnd_580x42_hex_Mag_F","100Rnd_580x42_hex_Mag_Tracer_F"]; 
				private _pMachineGun = selectRandom [ ["arifle_CTARS_blk_F",_M58Ammo],["arifle_CTARS_hex_F",_M58AmmoHex] ];  
				[_unit,[_pMachineGun select 0,[_pMachineGun select 1,2],[""]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			    [_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 

			MAZ_EZM_CSATP_fnc_createHeavyGunnerModule = { 
				private _unit = [east,"O_T_Soldier_AR_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _M93Ammo = selectRandom ["150Rnd_93x64_Mag"]; 
				private _pMachineGun = selectRandom [ ["MMG_01_hex_F",_M93Ammo],["MMG_01_tan_F",_M93Ammo] ];  
				[_unit,[_pMachineGun select 0,[_pMachineGun select 1,2],[]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			    [_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 
			
			MAZ_EZM_CSATP_fnc_createCombatMedicModule = { 
				private _unit = [east,"O_T_Medic_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPBackpack; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",2]]] call MAZ_EZM_fnc_addItemAndWeapons; 
				_unit addItemToBackpack "Medikit"; 
				for "_i" from 0 to 4 do { 
					_unit addItemToBackpack "FirstAidKit"; 
				}; 
			    [_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 
			
			MAZ_EZM_CSATP_fnc_createCrewmanModule = { 
				private _unit = [east,"O_T_Crew_F",MAZ_EZM_stanceForAI,"AWARE"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				removeHeadgear _unit; 
				removevest _unit; 
				removeheadgear _unit; 
				_unit addHeadgear "H_Tank_black_F"; 
				_unit addVest "V_TacVest_khk"; 
				_unit addItemToVest "ToolKit"; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,[_weaponInfo select 1,6],[]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
				[_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 
			
			MAZ_EZM_CSATP_fnc_createEngineerModule = { 
				private _unit = [east,"O_T_Engineer_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPBackpack; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
				[_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit addItemToBackpack "Toolkit";
				_unit
			}; 
			
			MAZ_EZM_CSATP_fnc_createSquadLeadModule = { 
				private _unit = [east,"O_T_Soldier_SL_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit;
				_unit addWeapon "Laserdesignator_02"; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			    [_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit   
			}; 
			
			MAZ_EZM_CSATP_fnc_createGrenadierModule = { 
				private _unit = [east,"O_T_Soldier_GL_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				_unit addVest "V_HarnessOGL_brn";
				private _pGrenadier = selectRandom ["arifle_CTAR_GL_blk_F","arifle_CTAR_GL_hex_F"]; 
				[_unit,[_pGrenadier,["30Rnd_580x42_Mag_F",5],["optic_ACO_grn"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["1Rnd_HE_Grenade_shell",6],["1Rnd_Smoke_Grenade_shell",2]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			    [_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 
			
			MAZ_EZM_CSATP_fnc_createMarksmanModule = { 
				private _unit = [east,"O_T_Soldier_M_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _pSniper = selectRandom ["srifle_DMR_07_blk_F","srifle_DMR_07_hex_F"]; 
				[_unit,[_pSniper,["20Rnd_650x39_Cased_Mag_F",5],["optic_Arco_blk_F"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons;  
			    [_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 

			MAZ_EZM_CSATP_fnc_createSharpshooterModule = { 
				private _unit = [east,"O_T_Soldier_M_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _pSniper = selectRandom ["srifle_DMR_05_hex_F","srifle_DMR_05_blk_F"]; 
				[_unit,[_pSniper,["10Rnd_93x64_DMR_05_Mag",5],["optic_DMS"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons;  
			    [_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			};
			
			MAZ_EZM_CSATP_fnc_createMissileSpecAAModule = { 
				private _unit = [east,"O_T_Soldier_AA_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPBackpack; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],["launch_O_Titan_F",["Titan_AA",2]],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
				[_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 
			
			MAZ_EZM_CSATP_fnc_createRiflemanModule = { 
				private _unit = [east,"O_T_Soldier_A_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			    [_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 

			MAZ_EZM_CSATP_fnc_createRiflemanLightModule = { 
				private _unit = [east,"O_T_Soldier_A_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				_unit forceAddUniform "U_O_officer_noInsignia_hex_F";
                _unit addVest "V_TacVest_brn";
				_unit addHeadgear "H_MilCap_ocamo";
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
				_unit 
			}; 
			
			MAZ_EZM_CSATP_fnc_createRiflemanLATModule = { 
				private _unit = [east,"O_T_Soldier_LAT_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing;  
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPBackpack; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _pRPG = selectRandom ["RPG32_F"];
				private _pAT = selectRandom [ ["launch_RPG32_F",_pRPG]]; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[_pAT select 0, [_pAT select 1,3]],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			    [_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 

			MAZ_EZM_CSATP_fnc_createRiflemanHATModule = { 
				private _unit = [east,"O_T_Soldier_LAT_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing;  
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPBackpack; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _pVorona = selectRandom ["Vorona_HEAT"]; 
				private _pAT = selectRandom [ ["launch_O_Vorona_brown_F",_pVorona]]; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[_pAT select 0, [_pAT select 1,3]],["",[""]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			    [_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 
			
			MAZ_EZM_CSATP_fnc_createMissileSpecATModule = { 
				private _unit = [east,"O_T_Soldier_LAT_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPBackpack; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],["launch_O_Titan_short_F",["Titan_AT",2]],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			    [_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 
			
			MAZ_EZM_CSATP_fnc_createRadiomanModule = { 
				private _unit = [east,"O_T_Soldier_A_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				_unit addBackpack "B_RadioBag_01_hex_F"; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			    [_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 

			MAZ_EZM_CSATP_fnc_createHelicopterPilotModule = { 
				private _unit = [east,"O_helipilot_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit;
				_unit addMagazine "30Rnd_9x21_Mag_SMG_02_Tracer_Green";
				_unit addWeapon "SMG_02_F";
				_unit 
			}; 

			MAZ_EZM_CSATP_fnc_createPilotModule = { 
				private _unit = [east,"O_pilot_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit;
				_unit addMagazine "30Rnd_9x21_Mag_SMG_02_Tracer_Green";
				_unit addWeapon "SMG_02_F";
				_unit 
			}; 

			MAZ_EZM_CSATP_fnc_createFighterPilotModule = { 
				private _unit = [east,"O_Fighter_Pilot_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit;
				_unit addMagazine "30Rnd_9x21_Mag_SMG_02_Tracer_Green";
				_unit 
			}; 

			MAZ_EZM_CSATP_fnc_createHelicopterCrewModule = { 
				private _unit = [east,"O_Helicrew_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				_unit addMagazine "30Rnd_9x21_Mag_SMG_02_Tracer_Green";
				_unit addWeapon "SMG_02_F";
				_unit 
			}; 
			
			MAZ_EZM_CSATP_fnc_createSurvivorModule = { 
				private _unit = [east,"O_T_Soldier_unarmed_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				removeVest _unit; 
				removeHeadgear _unit; 
				[_unit,""] remoteExec ["switchMove"]; 
			
				_unit 
			}; 

	    comment "Men (Special)";

			MAZ_EZM_CSATP_fnc_createDiverModule = { 
				private _unit = [east,"O_T_Diver_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				_unit setUnitLoadout [["arifle_SDAR_F","","","",["20Rnd_556x45_UW_mag",20],[],""],[],["hgun_Rook40_F","muzzle_snds_L","","",["16Rnd_9x21_Mag",16],[],""],["U_O_Wetsuit",[["FirstAidKit",1],["30Rnd_556x45_Stanag_green",4,30],["20Rnd_556x45_UW_mag",3,20],["16Rnd_9x21_Mag",2,16],["SmokeShellRed",2,1]]],["V_RebreatherIR",[]],["B_FieldPack_blk",[]],"","G_O_Diving",[],["ItemMap","ItemGPS","ItemRadio","ItemCompass","ItemWatch",""]]; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				_unit addHeadgear "H_HelmetSpecO_blk";
				_unit
			};

			MAZ_EZM_CSATP_fnc_createReconDemoModule = { 
				private _unit = [east,"O_T_Recon_Exp_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPBackpack; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
				_unit addPrimaryWeaponItem "muzzle_snds_58_blk_F";
				_unit addHeadgear "H_HelmetSpecO_blk";
				[_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit addItemToBackpack "Toolkit";
				_unit
			}; 

			MAZ_EZM_CSATP_fnc_createReconJTACModule = { 
				private _unit = [east,"O_recon_JTAC_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				_unit addVest "V_HarnessOGL_brn";
				private _pGrenadier = selectRandom ["arifle_CTAR_GL_blk_F","arifle_CTAR_GL_hex_F"]; 
				[_unit,[_pGrenadier,["30Rnd_580x42_Mag_F",5],["optic_ACO_grn"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["1Rnd_HE_Grenade_shell",6],["1Rnd_Smoke_Grenade_shell",2]]] call MAZ_EZM_fnc_addItemAndWeapons; 
				_unit addPrimaryWeaponItem "muzzle_snds_58_blk_F";
				_unit addHeadgear "H_HelmetSpecO_blk";
			    [_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 

			MAZ_EZM_CSATP_fnc_createReconMarksmanModule = { 
				private _unit = [east,"O_recon_M_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _pSniper = selectRandom ["srifle_DMR_04_Tan_F","srifle_DMR_04_F"]; 
				[_unit,[_pSniper,["10Rnd_127x54_Mag",5],["optic_DMS"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
				_unit addPrimaryWeaponItem "muzzle_snds_58_blk_F"; 
				_unit addHeadgear "H_HelmetSpecO_blk";
			    [_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 

			MAZ_EZM_CSATP_fnc_createReconParaMedicModule = { 
				private _unit = [east,"O_recon_medic_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPBackpack; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
				_unit addPrimaryWeaponItem "muzzle_snds_58_blk_F";
				_unit addHeadgear "H_HelmetSpecO_blk";
				[_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit
			}; 

			MAZ_EZM_CSATP_fnc_createReconScoutModule = { 
				private _unit = [east,"O_recon_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPBackpack; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
				_unit addPrimaryWeaponItem "muzzle_snds_58_blk_F";
				_unit addHeadgear "H_HelmetSpecO_blk";
				[_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit
			}; 

			MAZ_EZM_CSATP_fnc_createReconScoutATModule = { 
				private _unit = [east,"O_recon_LAT_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing;  
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPBackpack; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _pRPG = selectRandom ["RPG32_F"];
				private _pAT = selectRandom [ ["launch_RPG32_F",_pRPG]]; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[_pAT select 0, [_pAT select 1,3]],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
				_unit addPrimaryWeaponItem "muzzle_snds_58_blk_F";
				_unit addHeadgear "H_HelmetSpecO_blk";
			    [_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 

			MAZ_EZM_CSATP_fnc_createReconTeamLeaderModule = { 
				private _unit = [east,"O_recon_TL_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPBackpack; 
                private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
				_unit addPrimaryWeaponItem "muzzle_snds_58_blk_F";
				_unit addHeadgear "H_HelmetSpecO_blk";
				[_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit
			}; 

			MAZ_EZM_CSATP_fnc_createReconSniperModule = { 
				private _unit = [east,"O_sniper_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				_unit setUnitLoadout [["srifle_GM6_camo_F","","","optic_LRPS",["5Rnd_127x108_Mag",5],[],""],[],["hgun_Rook40_F","muzzle_snds_L","","",["16Rnd_9x21_Mag",16],[],""],["U_O_GhillieSuit",[["FirstAidKit",1],["5Rnd_127x108_Mag",2,5],["SmokeShell",1,1]]],["V_Chestrig_khk",[["5Rnd_127x108_APDS_Mag",2,5],["16Rnd_9x21_Mag",2,16],["ClaymoreDirectionalMine_Remote_Mag",1,1],["APERSTripMine_Wire_Mag",1,1],["SmokeShellRed",1,1],["SmokeShellOrange",1,1],["SmokeShellYellow",1,1],["Chemlight_red",2,1],["5Rnd_127x108_Mag",1,5]]],[],"","",["Rangefinder","","","",[],[],""],["ItemMap","ItemGPS","ItemRadio","ItemCompass","ItemWatch",""]];
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit;
				[_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit
			}; 

			MAZ_EZM_CSATP_fnc_createReconSpotterModule = { 
				private _unit = [east,"O_spotter_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPBackpack; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_Arco_blk_F"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
				_unit addPrimaryWeaponItem "muzzle_snds_58_blk_F";
				_unit addUniform "U_O_GhillieSuit";
				[_unit,"O_NVGoggles_hex_F"] call MAZ_EZM_fnc_addNVGs;
				_unit
			}; 

		comment "Men (Urban)"; 
			
			MAZ_EZM_CSATP_fnc_addCSATPUrbanBackpack = { 
				params ["_unit"]; 
				private _randomBackpack = selectRandom ["B_FieldPack_oucamo"]; 
				_unit addBackpackGlobal _randomBackpack; 
			}; 
			
			MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit = { 
				params ["_unit"]; 
				removeGoggles _unit;  
			}; 
			
			MAZ_EZM_CSATP_fnc_addCSATPUrbanUniformToUnit = { 
				params ["_unit"]; 
				private _CSATPUniforms = ["U_O_CombatUniform_oucamo"]; 
				private _CSATPVests = ["V_HarnessO_gry","V_TacVest_blk"]; 
				private _CSATPHeadgear = ["H_HelmetO_oucamo","H_HelmetLeaderO_oucamo"]; 
				
				_unit forceAddUniform (selectRandom _CSATPUniforms); 
				_unit addVest (selectRandom _CSATPVests); 
				_unit addHeadgear (selectRandom _CSATPHeadgear); 
			}; 
			
			MAZ_EZM_CSATP_fnc_createAmmoBearerUrbanModule = { 
				private _unit = [east,"O_T_Soldier_A_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanBackpack; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPUrbanWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			    [_unit,"O_NVGoggles_urb_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 
			
			MAZ_EZM_CSATP_fnc_createAutoriflemanUrbanModule = { 
				private _unit = [east,"O_T_Soldier_AR_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _UM58Ammo = selectRandom ["100Rnd_580x42_Mag_F","100Rnd_580x42_Mag_Tracer_F"]; 
				private _pUMachineGun = selectRandom [ ["arifle_CTARS_blk_F",_UM58Ammo] ];  
				[_unit,[_pUMachineGun select 0,[_pUMachineGun select 1,2],[""]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			    [_unit,"O_NVGoggles_urb_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 

			MAZ_EZM_CSATP_fnc_createHeavyGunnerUrbanModule = { 
				private _unit = [east,"O_T_Soldier_AR_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _UM93Ammo = selectRandom ["150Rnd_93x64_Mag"]; 
				private _pUMachineGun = selectRandom [ ["MMG_01_tan_F",_UM93Ammo] ];  
				[_unit,[_pUMachineGun select 0,[_pUMachineGun select 1,2],[]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			    [_unit,"O_NVGoggles_urb_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 
			
			MAZ_EZM_CSATP_fnc_createCombatMedicUrbanModule = { 
				private _unit = [east,"O_T_Medic_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanBackpack; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPUrbanWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
				_unit addItemToBackpack "Medikit"; 
				for "_i" from 0 to 4 do { 
					_unit addItemToBackpack "FirstAidKit"; 
				}; 
			    [_unit,"O_NVGoggles_urb_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 
			
			MAZ_EZM_CSATP_fnc_createCrewmanUrbanModule = { 
				private _unit = [east,"O_T_Crew_F",MAZ_EZM_stanceForAI,"AWARE"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				removeHeadgear _unit; 
				removevest _unit; 
				removeheadgear _unit; 
				_unit addHeadgear "H_Tank_black_F"; 
				_unit addVest "Vest_V_TacVest_blk"; 
				_unit addItemToVest "ToolKit"; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPUrbanWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],[]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
				[_unit,"O_NVGoggles_urb_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 
			
			MAZ_EZM_CSATP_fnc_createEngineerUrbanModule = { 
				private _unit = [east,"O_T_Engineer_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanBackpack; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPUrbanWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
				[_unit,"O_NVGoggles_urb_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 
			
			MAZ_EZM_CSATP_fnc_createSquadLeadUrbanModule = { 
				private _unit = [east,"O_T_Soldier_SL_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
			    [_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit;
				_unit addWeapon "Binocular"; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPUrbanWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			    [_unit,"O_NVGoggles_urb_F"] call MAZ_EZM_fnc_addNVGs;
			    _unit   
			}; 
			
			MAZ_EZM_CSATP_fnc_createGrenadierUrbanModule = { 
				private _unit = [east,"O_T_Soldier_GL_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
			    [_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _pUGrenadier = selectRandom ["arifle_CTAR_GL_blk_F"]; 
				[_unit,[_pUGrenadier,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["1Rnd_HE_Grenade_shell",6],["1Rnd_Smoke_Grenade_shell",2],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			    [_unit,"O_NVGoggles_urb_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 
			
			MAZ_EZM_CSATP_fnc_createMarksmanUrbanModule = { 
				private _unit = [east,"O_T_Soldier_M_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
			    [_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _pUMarksman = selectRandom ["srifle_DMR_07_blk_F"]; 
				[_unit,[_pUmarksman,["20Rnd_650x39_Cased_Mag_F",7],["optic_Arco_blk_F"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons;  
			    [_unit,"O_NVGoggles_urb_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 

			MAZ_EZM_CSATP_fnc_createSharpshooterUrbanModule = { 
				private _unit = [east,"O_T_Soldier_M_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
			    [_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _pUSharpshooter = selectRandom ["srifle_DMR_05_blk_F"]; 
				[_unit,[_pUSharpshooter,["10Rnd_93x64_DMR_05_Mag",6],["optic_DMS"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons;  
			    [_unit,"O_NVGoggles_urb_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			};
			
			MAZ_EZM_CSATP_fnc_createMissileSpecAAUrbanModule = { 
				private _unit = [east,"O_T_Soldier_AA_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
			    [_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanBackpack; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPUrbanWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],["launch_O_Titan_F",["Titan_AA",2]],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
				[_unit,"O_NVGoggles_urb_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 
			
			MAZ_EZM_CSATP_fnc_createRiflemanUrbanModule = { 
				private _unit = [east,"O_T_Soldier_A_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
			    [_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPUrbanWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			    [_unit,"O_NVGoggles_urb_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 
			
			MAZ_EZM_CSATP_fnc_createRiflemanLATUrbanModule = { 
				private _unit = [east,"O_T_Soldier_LAT_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
			    [_unit] call MAZ_EZM_fnc_removeAllClothing;  
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanBackpack; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _pRPG = selectRandom ["RPG32_F"];
				private _pAT = selectRandom [ ["launch_RPG32_F",_pRPG]]; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPUrbanWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[_pAT select 0, [_pAT select 1,3]],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			    [_unit,"O_NVGoggles_urb_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 

			MAZ_EZM_CSATP_fnc_createRiflemanHATUrbanModule = { 
				private _unit = [east,"O_T_Soldier_LAT_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
			    [_unit] call MAZ_EZM_fnc_removeAllClothing;  
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanBackpack; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _pVorona = selectRandom ["Vorona_HEAT"]; 
				private _pAT = selectRandom [ ["launch_O_Vorona_brown_F",_pVorona]]; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPUrbanWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[_pAT select 0, [_pAT select 1,3]],["",[""]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			    [_unit,"O_NVGoggles_urb_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 
			
			MAZ_EZM_CSATP_fnc_createMissileSpecATUrbanModule = { 
				private _unit = [east,"O_T_Soldier_LAT_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
			    [_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanBackpack; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPUrbanWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],["launch_O_Titan_short_F",["Titan_AT",2]],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			    [_unit,"O_NVGoggles_urb_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 
			
			MAZ_EZM_CSATP_fnc_createRadiomanUrbanModule = { 
				private _unit = [east,"O_T_Soldier_A_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
			    [_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPGogglesToUnit; 
				_unit addBackpack "B_RadioBag_01_oucamo_F"; 
				private _weaponInfo = [_unit] call MAZ_EZM_CSATP_fnc_getCSATPUrbanWeaponToUnit; 
				[_unit,[_weaponInfo select 0,["30Rnd_580x42_Mag_F",7],["optic_ACO_grn"]],[],["hgun_Rook40_F",["30Rnd_9x21_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			    [_unit,"O_NVGoggles_urb_F"] call MAZ_EZM_fnc_addNVGs;
				_unit 
			}; 
			
			MAZ_EZM_CSATP_fnc_createSurvivorUrbanModule = { 
				private _unit = [east,"O_T_Soldier_unarmed_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
			    [_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_CSATP_fnc_addCSATPUrbanUniformToUnit; 
				[_unit] spawn MAZ_EZM_CSATP_fnc_addCSATPIdentitiesToUnit; 
			    removeVest _unit; 
				removeHeadgear _unit; 
				[_unit,""] remoteExec ["switchMove"]; 
			    _unit 
			}; 
		
		comment "Reinforcement"; 
		
			MAZ_EZM_CSATP_fnc_createReinforcementZamakCoveredTransportModule = { 
				private _vehicle = ["O_Truck_02_covered_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
				
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					private _passanger16 = [] call MAZ_EZM_CSATP_fnc_createSquadLeadModule; 
					private _passanger15 = [] call MAZ_EZM_CSATP_fnc_createRiflemanLATModule; 
					private _passanger14 = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					private _passanger13 = [] call MAZ_EZM_CSATP_fnc_createAutoriflemanModule; 
					private _passanger12 = [] call MAZ_EZM_CSATP_fnc_createEngineerModule; 
					private _passanger11 = [] call MAZ_EZM_CSATP_fnc_createMarksmanModule; 
					private _passanger10 = [] call MAZ_EZM_CSATP_fnc_createCombatMedicModule; 
					private _passanger9 = [] call MAZ_EZM_CSATP_fnc_createGrenadierModule; 
					private _passanger8 = [] call MAZ_EZM_CSATP_fnc_createAutoriflemanModule; 
					private _passanger7 = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					private _passanger6 = [] call MAZ_EZM_CSATP_fnc_createAmmoBearerModule; 
					private _passanger5 = [] call MAZ_EZM_CSATP_fnc_createGrenadierModule; 
					private _passanger4 = [] call MAZ_EZM_CSATP_fnc_createMarksmanModule; 
					private _passanger3 = [] call MAZ_EZM_CSATP_fnc_createRiflemanLATModule; 
					private _passanger2 = [] call MAZ_EZM_CSATP_fnc_createCombatMedicModule; 
					private _passanger1 = [] call MAZ_EZM_CSATP_fnc_createSquadLeadModule; 
					
					_driver moveInDriver _vehicle; 
					_passanger1 moveInCargo _vehicle; 
					_passanger2 moveInCargo _vehicle; 
					_passanger3 moveInCargo _vehicle; 
					_passanger4 moveInCargo _vehicle; 
					_passanger5 moveInCargo _vehicle; 
					_passanger6 moveInCargo _vehicle; 
					_passanger7 moveInCargo _vehicle; 
					_passanger8 moveInCargo _vehicle; 
					_passanger9 moveInCargo _vehicle; 
					_passanger10 moveInCargo _vehicle; 
					_passanger11 moveInCargo _vehicle; 
					_passanger12 moveInCargo _vehicle; 
					_passanger13 moveInCargo _vehicle; 
					_passanger14 moveInCargo _vehicle; 
					_passanger15 moveInCargo _vehicle; 
					_passanger16 moveInCargo _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_passanger1,_passanger2,_passanger3,_passanger4,_passanger5,_passanger6,_passanger8,_passanger12,_passanger14] joinSilent _grp; 
					_grp selectLeader _passanger1; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_driver] joinSilent _grp; 
					_grp selectLeader _driver; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_passanger16,_passanger15,_passanger10,_passanger11,_passanger9,_passanger7,_passanger13] joinSilent _grp; 
					_grp selectLeader _passanger16; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createReinforcementTempestTransportModule = { 
				private _vehicle = ["O_Truck_03_covered_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
				
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					private _passanger16 = [] call MAZ_EZM_CSATP_fnc_createSquadLeadModule; 
					private _passanger15 = [] call MAZ_EZM_CSATP_fnc_createRiflemanLATModule; 
					private _passanger13 = [] call MAZ_EZM_CSATP_fnc_createAutoriflemanModule; 
					private _passanger11 = [] call MAZ_EZM_CSATP_fnc_createMarksmanModule; 
					private _passanger10 = [] call MAZ_EZM_CSATP_fnc_createCombatMedicModule; 
					private _passanger9 = [] call MAZ_EZM_CSATP_fnc_createGrenadierModule; 
					private _passanger8 = [] call MAZ_EZM_CSATP_fnc_createAutoriflemanModule; 
					private _passanger7 = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					private _passanger5 = [] call MAZ_EZM_CSATP_fnc_createGrenadierModule; 
					private _passanger4 = [] call MAZ_EZM_CSATP_fnc_createMarksmanModule; 
					private _passanger3 = [] call MAZ_EZM_CSATP_fnc_createRiflemanLATModule; 
					private _passanger2 = [] call MAZ_EZM_CSATP_fnc_createCombatMedicModule; 
					private _passanger1 = [] call MAZ_EZM_CSATP_fnc_createSquadLeadModule; 
					
					_driver moveInDriver _vehicle; 
					_passanger1 moveInCargo _vehicle; 
					_passanger2 moveInCargo _vehicle; 
					_passanger3 moveInCargo _vehicle; 
					_passanger4 moveInCargo _vehicle; 
					_passanger5 moveInCargo _vehicle; 
					_passanger7 moveInCargo _vehicle; 
					_passanger8 moveInCargo _vehicle; 
					_passanger9 moveInCargo _vehicle; 
					_passanger10 moveInCargo _vehicle; 
					_passanger11 moveInCargo _vehicle; 
					_passanger13 moveInCargo _vehicle; 
					_passanger15 moveInCargo _vehicle; 
					_passanger16 moveInCargo _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_passanger1,_passanger2,_passanger3,_passanger4,_passanger5,_passanger6,_passanger8,_passanger12,_passanger14] joinSilent _grp; 
					_grp selectLeader _passanger1; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_driver] joinSilent _grp; 
					_grp selectLeader _driver; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_passanger16,_passanger15,_passanger10,_passanger11,_passanger9,_passanger7,_passanger13] joinSilent _grp; 
					_grp selectLeader _passanger16; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createReinforcementTaruModule = { 
				private _vehicle = ["O_Heli_Transport_04_covered_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					
					private _pilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					private _copilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					private _copilot2 = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					private _passanger16 = [] call MAZ_EZM_CSATP_fnc_createSquadLeadModule; 
					private _passanger15 = [] call MAZ_EZM_CSATP_fnc_createRiflemanLATModule;
					private _passanger13 = [] call MAZ_EZM_CSATP_fnc_createAutoriflemanModule;  
					private _passanger11 = [] call MAZ_EZM_CSATP_fnc_createMarksmanModule; 
					private _passanger10 = [] call MAZ_EZM_CSATP_fnc_createCombatMedicModule; 
					private _passanger9 = [] call MAZ_EZM_CSATP_fnc_createGrenadierModule; 
					private _passanger8 = [] call MAZ_EZM_CSATP_fnc_createAutoriflemanModule; 
					private _passanger7 = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule;  
					private _passanger5 = [] call MAZ_EZM_CSATP_fnc_createGrenadierModule; 
					private _passanger4 = [] call MAZ_EZM_CSATP_fnc_createMarksmanModule; 
					private _passanger3 = [] call MAZ_EZM_CSATP_fnc_createRiflemanLATModule; 
					private _passanger2 = [] call MAZ_EZM_CSATP_fnc_createCombatMedicModule; 
					private _passanger1 = [] call MAZ_EZM_CSATP_fnc_createSquadLeadModule; 
					
					_pilot moveInDriver _vehicle; 
					_copilot moveInAny _vehicle;
					_copilot2 moveInAny _vehicle;
					_passanger1 moveInCargo _vehicle; 
					_passanger2 moveInCargo _vehicle; 
					_passanger3 moveInCargo _vehicle; 
					_passanger4 moveInCargo _vehicle; 
					_passanger5 moveInCargo _vehicle; 
					_passanger6 moveInCargo _vehicle; 
					_passanger7 moveInCargo _vehicle; 
					_passanger8 moveInCargo _vehicle; 
					_passanger9 moveInCargo _vehicle; 
					_passanger10 moveInCargo _vehicle; 
					_passanger11 moveInCargo _vehicle; 
					_passanger12 moveInCargo _vehicle; 
					_passanger13 moveInCargo _vehicle; 
					_passanger14 moveInCargo _vehicle; 
					_passanger15 moveInCargo _vehicle; 
					_passanger16 moveInCargo _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_passanger1,_passanger2,_passanger3,_passanger4,_passanger5,_passanger6,_passanger8,_passanger12,_passanger14] joinSilent _grp; 
					_grp selectLeader _passanger1; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_pilot,_copilot,_copilot2] joinSilent _grp; 
					_grp selectLeader _pilot; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_passanger16,_passanger15,_passanger10,_passanger11,_passanger9,_passanger7,_passanger13] joinSilent _grp; 
					_grp selectLeader _passanger16; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createReinforcementOrcaModule = { 
				private _vehicle = ["O_Heli_Light_02_unarmed_F"] call MAZ_EZM_fnc_createVehicle;

				[_vehicle,"Opfor"] call bis_fnc_initVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
				
					private _pilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					private _copilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule;  
					private _passanger8 = [] call MAZ_EZM_CSATP_fnc_createAutoriflemanModule; 
					private _passanger7 = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					private _passanger6 = [] call MAZ_EZM_CSATP_fnc_createAmmoBearerModule; 
					private _passanger5 = [] call MAZ_EZM_CSATP_fnc_createGrenadierModule; 
					private _passanger4 = [] call MAZ_EZM_CSATP_fnc_createMarksmanModule; 
					private _passanger3 = [] call MAZ_EZM_CSATP_fnc_createRiflemanLATModule; 
					private _passanger2 = [] call MAZ_EZM_CSATP_fnc_createCombatMedicModule; 
					private _passanger1 = [] call MAZ_EZM_CSATP_fnc_createSquadLeadModule; 
					
					_pilot moveInDriver _vehicle; 
					_copilot moveInAny _vehicle;
					_passanger1 moveInCargo _vehicle; 
					_passanger2 moveInCargo _vehicle; 
					_passanger3 moveInCargo _vehicle; 
					_passanger4 moveInCargo _vehicle; 
					_passanger5 moveInCargo _vehicle; 
					_passanger6 moveInCargo _vehicle; 
					_passanger7 moveInCargo _vehicle; 
					_passanger8 moveInCargo _vehicle; 

					private _grp = createGroup [east,true]; 
					[_passanger1,_passanger2,_passanger3,_passanger4,_passanger5,_passanger6,_passanger8,_passanger12,_passanger14] joinSilent _grp; 
					_grp selectLeader _passanger1; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_pilot,_copilot] joinSilent _grp; 
					_grp selectLeader _pilot; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_passanger16,_passanger15,_passanger10,_passanger11,_passanger9,_passanger7,_passanger13] joinSilent _grp; 
					_grp selectLeader _passanger16; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createReinforcementQilinUnarmedModule = { 
				private _vehicle = ["O_LSV_02_unarmed_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
				
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					private _passanger6 = [] call MAZ_EZM_CSATP_fnc_createAmmoBearerModule; 
					private _passanger5 = [] call MAZ_EZM_CSATP_fnc_createGrenadierModule; 
					private _passanger4 = [] call MAZ_EZM_CSATP_fnc_createMarksmanModule; 
					private _passanger3 = [] call MAZ_EZM_CSATP_fnc_createRiflemanLATModule; 
					private _passanger2 = [] call MAZ_EZM_CSATP_fnc_createCombatMedicModule; 
					private _passanger1 = [] call MAZ_EZM_CSATP_fnc_createSquadLeadModule; 
					
					_driver moveInDriver _vehicle; 
					_passanger1 moveInCargo _vehicle; 
					_passanger2 moveInCargo _vehicle; 
					_passanger3 moveInCargo _vehicle; 
					_passanger4 moveInCargo _vehicle; 
					_passanger5 moveInCargo _vehicle; 
					_passanger6 moveInCargo _vehicle;
				
					private _grp = createGroup [east,true]; 
					[_passanger1,_passanger2,_passanger3,_passanger4,_passanger5,_passanger6] joinSilent _grp; 
					_grp selectLeader _passanger1; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_driver] joinSilent _grp; 
					_grp selectLeader _driver; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createReinforcementRhibModule = { 
				
				private _vehicle = ["I_C_Boat_Transport_02_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
				
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					private _passanger1 = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					private _passanger2 = [] call MAZ_EZM_CSATP_fnc_createAmmoBearerModule; 
					private _passanger3 = [] call MAZ_EZM_CSATP_fnc_createGrenadierModule; 
					private _passanger4 = [] call MAZ_EZM_CSATP_fnc_createMarksmanModule; 
					private _passanger5 = [] call MAZ_EZM_CSATP_fnc_createRiflemanLATModule; 
					private _passanger6 = [] call MAZ_EZM_CSATP_fnc_createCombatMedicModule; 
					private _passanger7 = [] call MAZ_EZM_CSATP_fnc_createSquadLeadModule; 
					
					_driver moveInDriver _vehicle; 
					_passanger1 moveInCargo _vehicle; 
					_passanger2 moveInCargo _vehicle; 
					_passanger3 moveInCargo _vehicle; 
					_passanger4 moveInCargo _vehicle; 
					_passanger5 moveInCargo _vehicle; 
					_passanger6 moveInCargo _vehicle;
					_passanger7 moveInCargo _vehicle;
				
					private _grp = createGroup [east,true]; 
					[_passanger1,_passanger2,_passanger3,_passanger4,_passanger5,_passanger6,_passanger7] joinSilent _grp; 
					_grp selectLeader _passanger1; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_driver] joinSilent _grp; 
					_grp selectLeader _driver; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

		comment "Reinforcement (Urban)"; 
		
			MAZ_EZM_CSATP_fnc_createReinforcementZamakCoveredTransportUrbanModule = { 
				private _vehicle = ["O_Truck_02_covered_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
				
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanUrbanModule; 
					private _passanger16 = [] call MAZ_EZM_CSATP_fnc_createSquadLeadUrbanModule; 
					private _passanger15 = [] call MAZ_EZM_CSATP_fnc_createRiflemanLATUrbanModule; 
					private _passanger14 = [] call MAZ_EZM_CSATP_fnc_createRiflemanUrbanModule; 
					private _passanger13 = [] call MAZ_EZM_CSATP_fnc_createAutoriflemanUrbanModule; 
					private _passanger12 = [] call MAZ_EZM_CSATP_fnc_createEngineerUrbanModule; 
					private _passanger11 = [] call MAZ_EZM_CSATP_fnc_createMarksmanUrbanModule; 
					private _passanger10 = [] call MAZ_EZM_CSATP_fnc_createCombatMedicUrbanModule; 
					private _passanger9 = [] call MAZ_EZM_CSATP_fnc_createGrenadierUrbanModule; 
					private _passanger8 = [] call MAZ_EZM_CSATP_fnc_createAutoriflemanUrbanModule; 
					private _passanger7 = [] call MAZ_EZM_CSATP_fnc_createRiflemanUrbanModule; 
					private _passanger6 = [] call MAZ_EZM_CSATP_fnc_createAmmoBearerUrbanModule; 
					private _passanger5 = [] call MAZ_EZM_CSATP_fnc_createGrenadierUrbanModule; 
					private _passanger4 = [] call MAZ_EZM_CSATP_fnc_createMarksmanUrbanModule; 
					private _passanger3 = [] call MAZ_EZM_CSATP_fnc_createRiflemanLATUrbanModule; 
					private _passanger2 = [] call MAZ_EZM_CSATP_fnc_createCombatMedicUrbanModule; 
					private _passanger1 = [] call MAZ_EZM_CSATP_fnc_createSquadLeadUrbanModule; 
					
					_driver moveInDriver _vehicle; 
					_passanger1 moveInCargo _vehicle; 
					_passanger2 moveInCargo _vehicle; 
					_passanger3 moveInCargo _vehicle; 
					_passanger4 moveInCargo _vehicle; 
					_passanger5 moveInCargo _vehicle; 
					_passanger6 moveInCargo _vehicle; 
					_passanger7 moveInCargo _vehicle; 
					_passanger8 moveInCargo _vehicle; 
					_passanger9 moveInCargo _vehicle; 
					_passanger10 moveInCargo _vehicle; 
					_passanger11 moveInCargo _vehicle; 
					_passanger12 moveInCargo _vehicle; 
					_passanger13 moveInCargo _vehicle; 
					_passanger14 moveInCargo _vehicle; 
					_passanger15 moveInCargo _vehicle; 
					_passanger16 moveInCargo _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_passanger1,_passanger2,_passanger3,_passanger4,_passanger5,_passanger6,_passanger8,_passanger12,_passanger14] joinSilent _grp; 
					_grp selectLeader _passanger1; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_driver] joinSilent _grp; 
					_grp selectLeader _driver; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_passanger16,_passanger15,_passanger10,_passanger11,_passanger9,_passanger7,_passanger13] joinSilent _grp; 
					_grp selectLeader _passanger16; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createReinforcementTempestTransportUrbanModule = { 
				private _vehicle = ["O_Truck_03_covered_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
				
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanUrbanModule; 
					private _passanger16 = [] call MAZ_EZM_CSATP_fnc_createSquadLeadUrbanModule; 
					private _passanger15 = [] call MAZ_EZM_CSATP_fnc_createRiflemanLATUrbanModule; 
					private _passanger13 = [] call MAZ_EZM_CSATP_fnc_createAutoriflemanUrbanModule; 
					private _passanger11 = [] call MAZ_EZM_CSATP_fnc_createMarksmanUrbanModule; 
					private _passanger10 = [] call MAZ_EZM_CSATP_fnc_createCombatMedicUrbanModule; 
					private _passanger9 = [] call MAZ_EZM_CSATP_fnc_createGrenadierUrbanModule; 
					private _passanger8 = [] call MAZ_EZM_CSATP_fnc_createAutoriflemanUrbanModule; 
					private _passanger7 = [] call MAZ_EZM_CSATP_fnc_createRiflemanUrbanModule; 
					private _passanger5 = [] call MAZ_EZM_CSATP_fnc_createGrenadierUrbanModule; 
					private _passanger4 = [] call MAZ_EZM_CSATP_fnc_createMarksmanUrbanModule; 
					private _passanger3 = [] call MAZ_EZM_CSATP_fnc_createRiflemanLATUrbanModule; 
					private _passanger2 = [] call MAZ_EZM_CSATP_fnc_createCombatMedicUrbanModule; 
					private _passanger1 = [] call MAZ_EZM_CSATP_fnc_createSquadLeadUrbanModule; 
					
					_driver moveInDriver _vehicle; 
					_passanger1 moveInCargo _vehicle; 
					_passanger2 moveInCargo _vehicle; 
					_passanger3 moveInCargo _vehicle; 
					_passanger4 moveInCargo _vehicle; 
					_passanger5 moveInCargo _vehicle; 
					_passanger7 moveInCargo _vehicle; 
					_passanger8 moveInCargo _vehicle; 
					_passanger9 moveInCargo _vehicle; 
					_passanger10 moveInCargo _vehicle; 
					_passanger11 moveInCargo _vehicle; 
					_passanger13 moveInCargo _vehicle; 
					_passanger15 moveInCargo _vehicle; 
					_passanger16 moveInCargo _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_passanger1,_passanger2,_passanger3,_passanger4,_passanger5,_passanger6,_passanger8,_passanger12,_passanger14] joinSilent _grp; 
					_grp selectLeader _passanger1; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_driver] joinSilent _grp; 
					_grp selectLeader _driver; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_passanger16,_passanger15,_passanger10,_passanger11,_passanger9,_passanger7,_passanger13] joinSilent _grp; 
					_grp selectLeader _passanger16; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createReinforcementTaruUrbanModule = { 
				private _vehicle = ["O_Heli_Transport_04_covered_F"] call MAZ_EZM_fnc_createVehicle;

				[_vehicle,"Black"] call bis_fnc_initVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					
					private _pilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					private _copilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					private _copilot2 = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					private _passanger16 = [] call MAZ_EZM_CSATP_fnc_createSquadLeadUrbanModule; 
					private _passanger15 = [] call MAZ_EZM_CSATP_fnc_createRiflemanLATUrbanModule;
					private _passanger13 = [] call MAZ_EZM_CSATP_fnc_createAutoriflemanUrbanModule;  
					private _passanger11 = [] call MAZ_EZM_CSATP_fnc_createMarksmanUrbanModule; 
					private _passanger10 = [] call MAZ_EZM_CSATP_fnc_createCombatMedicUrbanModule; 
					private _passanger9 = [] call MAZ_EZM_CSATP_fnc_createGrenadierUrbanModule; 
					private _passanger8 = [] call MAZ_EZM_CSATP_fnc_createAutoriflemanUrbanModule; 
					private _passanger7 = [] call MAZ_EZM_CSATP_fnc_createRiflemanUrbanModule;  
					private _passanger5 = [] call MAZ_EZM_CSATP_fnc_createGrenadierUrbanModule; 
					private _passanger4 = [] call MAZ_EZM_CSATP_fnc_createMarksmanUrbanModule; 
					private _passanger3 = [] call MAZ_EZM_CSATP_fnc_createRiflemanLATUrbanModule; 
					private _passanger2 = [] call MAZ_EZM_CSATP_fnc_createCombatMedicUrbanModule; 
					private _passanger1 = [] call MAZ_EZM_CSATP_fnc_createSquadLeadUrbanModule; 
					
					_pilot moveInDriver _vehicle; 
					_copilot moveInAny _vehicle;
					_copilot2 moveInAny _vehicle;
					_passanger1 moveInCargo _vehicle; 
					_passanger2 moveInCargo _vehicle; 
					_passanger3 moveInCargo _vehicle; 
					_passanger4 moveInCargo _vehicle; 
					_passanger5 moveInCargo _vehicle; 
					_passanger6 moveInCargo _vehicle; 
					_passanger7 moveInCargo _vehicle; 
					_passanger8 moveInCargo _vehicle; 
					_passanger9 moveInCargo _vehicle; 
					_passanger10 moveInCargo _vehicle; 
					_passanger11 moveInCargo _vehicle; 
					_passanger12 moveInCargo _vehicle; 
					_passanger13 moveInCargo _vehicle; 
					_passanger14 moveInCargo _vehicle; 
					_passanger15 moveInCargo _vehicle; 
					_passanger16 moveInCargo _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_passanger1,_passanger2,_passanger3,_passanger4,_passanger5,_passanger6,_passanger8,_passanger12,_passanger14] joinSilent _grp; 
					_grp selectLeader _passanger1; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_pilot,_copilot,_copilot2] joinSilent _grp; 
					_grp selectLeader _pilot; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_passanger16,_passanger15,_passanger10,_passanger11,_passanger9,_passanger7,_passanger13] joinSilent _grp; 
					_grp selectLeader _passanger16; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createReinforcementOrcaUrbanModule = { 
				private _vehicle = ["O_Heli_Light_02_unarmed_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then {
					private _pilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule; 
					private _copilot = [] call MAZ_EZM_CSATP_fnc_createHelicopterPilotModule;  
					private _passanger8 = [] call MAZ_EZM_CSATP_fnc_createAutoriflemanUrbanModule; 
					private _passanger7 = [] call MAZ_EZM_CSATP_fnc_createRiflemanUrbanModule; 
					private _passanger6 = [] call MAZ_EZM_CSATP_fnc_createAmmoBearerUrbanModule; 
					private _passanger5 = [] call MAZ_EZM_CSATP_fnc_createGrenadierUrbanModule; 
					private _passanger4 = [] call MAZ_EZM_CSATP_fnc_createMarksmanUrbanModule; 
					private _passanger3 = [] call MAZ_EZM_CSATP_fnc_createRiflemanLATUrbanModule; 
					private _passanger2 = [] call MAZ_EZM_CSATP_fnc_createCombatMedicUrbanModule; 
					private _passanger1 = [] call MAZ_EZM_CSATP_fnc_createSquadLeadUrbanModule; 
					
					_pilot moveInDriver _vehicle; 
					_copilot moveInAny _vehicle;
					_passanger1 moveInCargo _vehicle; 
					_passanger2 moveInCargo _vehicle; 
					_passanger3 moveInCargo _vehicle; 
					_passanger4 moveInCargo _vehicle; 
					_passanger5 moveInCargo _vehicle; 
					_passanger6 moveInCargo _vehicle; 
					_passanger7 moveInCargo _vehicle; 
					_passanger8 moveInCargo _vehicle; 

					private _grp = createGroup [east,true]; 
					[_passanger1,_passanger2,_passanger3,_passanger4,_passanger5,_passanger6,_passanger8,_passanger12,_passanger14] joinSilent _grp; 
					_grp selectLeader _passanger1; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_pilot,_copilot] joinSilent _grp; 
					_grp selectLeader _pilot; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_passanger16,_passanger15,_passanger10,_passanger11,_passanger9,_passanger7,_passanger13] joinSilent _grp; 
					_grp selectLeader _passanger16; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createReinforcementQilinUnarmedUrbanModule = { 
				private _vehicle = ["O_LSV_02_unarmed_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
				
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanUrbanModule; 
					private _passanger6 = [] call MAZ_EZM_CSATP_fnc_createAmmoBearerUrbanModule; 
					private _passanger5 = [] call MAZ_EZM_CSATP_fnc_createGrenadierUrbanModule; 
					private _passanger4 = [] call MAZ_EZM_CSATP_fnc_createMarksmanUrbanModule; 
					private _passanger3 = [] call MAZ_EZM_CSATP_fnc_createRiflemanLATUrbanModule; 
					private _passanger2 = [] call MAZ_EZM_CSATP_fnc_createCombatMedicUrbanModule; 
					private _passanger1 = [] call MAZ_EZM_CSATP_fnc_createSquadLeadUrbanModule; 
					
					_driver moveInDriver _vehicle; 
					_passanger1 moveInCargo _vehicle; 
					_passanger2 moveInCargo _vehicle; 
					_passanger3 moveInCargo _vehicle; 
					_passanger4 moveInCargo _vehicle; 
					_passanger5 moveInCargo _vehicle; 
					_passanger6 moveInCargo _vehicle;
				
					private _grp = createGroup [east,true]; 
					[_passanger1,_passanger2,_passanger3,_passanger4,_passanger5,_passanger6] joinSilent _grp; 
					_grp selectLeader _passanger1; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_driver] joinSilent _grp; 
					_grp selectLeader _driver; 
					_grp setBehaviour "AWARE"; 

				}; 
			    
				
				_vehicle setObjectTextureGlobal [0, "a3\soft_f_exp\lsv_02\data\csat_lsv_01_black_co.paa"];
				_vehicle setObjectTextureGlobal [1, "a3\soft_f_exp\lsv_02\data\csat_lsv_02_black_co.paa"];
				_vehicle setObjectTextureGlobal [2, "a3\soft_f_exp\lsv_02\data\csat_lsv_03_black_co.paa"];

				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createReinforcementRhibUrbanModule = { 
				private _vehicle = ["I_C_Boat_Transport_02_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
				
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanUrbanModule; 
					private _passanger7 = [] call MAZ_EZM_CSATP_fnc_createRiflemanUrbanModule; 
					private _passanger6 = [] call MAZ_EZM_CSATP_fnc_createAmmoBearerUrbanModule; 
					private _passanger5 = [] call MAZ_EZM_CSATP_fnc_createGrenadierUrbanModule; 
					private _passanger4 = [] call MAZ_EZM_CSATP_fnc_createMarksmanUrbanModule; 
					private _passanger3 = [] call MAZ_EZM_CSATP_fnc_createRiflemanLATUrbanModule; 
					private _passanger2 = [] call MAZ_EZM_CSATP_fnc_createCombatMedicUrbanModule; 
					private _passanger1 = [] call MAZ_EZM_CSATP_fnc_createSquadLeadUrbanModule; 
					
					_driver moveInDriver _vehicle; 
					_passanger1 moveInCargo _vehicle; 
					_passanger2 moveInCargo _vehicle; 
					_passanger3 moveInCargo _vehicle; 
					_passanger4 moveInCargo _vehicle; 
					_passanger5 moveInCargo _vehicle; 
					_passanger6 moveInCargo _vehicle;
					_passanger7 moveInCargo _vehicle;
				
					private _grp = createGroup [east,true]; 
					[_passanger1,_passanger2,_passanger3,_passanger4,_passanger5,_passanger6,_passanger7] joinSilent _grp; 
					_grp selectLeader _passanger1; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_driver] joinSilent _grp; 
					_grp selectLeader _driver; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 
			
		comment "Planes";
			
			MAZ_EZM_CSATP_fnc_createNeophronCASModule = { 
				private _vehicle = ["O_Plane_CAS_02_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _pilot = [] call MAZ_EZM_CSATP_fnc_createPilotModule; 
					_pilot moveInDriver _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_pilot] joinSilent _grp; 
					_grp selectLeader _pilot; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createBuzzardCASModule = { 
				private _vehicle = ["I_Plane_Fighter_03_CAS_F",[
					"a3\Air_F_Gamma\Plane_Fighter_03\Data\Plane_Fighter_03_body_1_brownhex_CO.paa",
					"a3\Air_F_Gamma\Plane_Fighter_03\Data\Plane_Fighter_03_body_2_brownhex_CO.paa"
				]] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _pilot = [] call MAZ_EZM_CSATP_fnc_createFighterPilotModule; 
					_pilot moveInDriver _vehicle; 

					private _grp = createGroup [east,true]; 
					[_pilot] joinSilent _grp; 
					_grp selectLeader _pilot; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createShikraModule = { 
				private _vehicle = ["O_Plane_Fighter_02_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _pilot = [] call MAZ_EZM_CSATP_fnc_createFighterPilotModule; 
					_pilot moveInDriver _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_pilot] joinSilent _grp; 
					_grp selectLeader _pilot; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createVTOLInfantryModule = { 
				private _vehicle = ["O_T_VTOL_02_infantry_F"] call MAZ_EZM_fnc_createVehicle;
			    [_vehicle,"Hex"] call bis_fnc_initVehicle;
				
				if(MAZ_EZM_spawnWithCrew) then { 
					private _pilot = [] call MAZ_EZM_CSATP_fnc_createFighterPilotModule; 
					_pilot moveInDriver _vehicle; 

					private _copilot = [] call MAZ_EZM_CSATP_fnc_createFighterPilotModule; 
					_copilot moveInGunner _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_pilot,_copilot] joinSilent _grp; 
					_grp selectLeader _pilot; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createVTOLVehicleModule = { 
				private _vehicle = ["O_T_VTOL_02_vehicle_F"] call MAZ_EZM_fnc_createVehicle;
			    [_vehicle,"Hex"] call bis_fnc_initVehicle;

				if(MAZ_EZM_spawnWithCrew) then { 
					private _pilot = [] call MAZ_EZM_CSATP_fnc_createFighterPilotModule; 
					_pilot moveInDriver _vehicle;

					private _copilot = [] call MAZ_EZM_CSATP_fnc_createFighterPilotModule; 
					_copilot moveInGunner _vehicle;  
				
					private _grp = createGroup [east,true]; 
					[_pilot,_copilot] joinSilent _grp; 
					_grp selectLeader _pilot; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

		comment "Tanks"; 
		
			MAZ_EZM_CSATP_fnc_createVarsukModule = { 
				private _vehicle = ["O_MBT_02_cannon_F"] call MAZ_EZM_fnc_createVehicle;
				_vehicle disableTIEquipment true; 
			
				[ 
					_vehicle, 
					["Hex",1],  
					["showCamonetHull",1,"showCamonetTurret",1,"showLog",1] 
				] call BIS_fnc_initVehicle; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule; 
					_driver moveInDriver _vehicle; 
				
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule; 
					_gunner moveInGunner _vehicle; 

					private _commander = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule; 
					_commander moveInCommander _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_driver,_gunner,_commander] joinSilent _grp; 
					_grp selectLeader _gunner; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createAngaraModule = { 
				private _vehicle = ["O_MBT_04_cannon_F"] call MAZ_EZM_fnc_createVehicle;
				_vehicle disableTIEquipment true; 
			
				[ 
					_vehicle, 
					["Hex",1],  
					["showCamonetHull",1,"showCamonetTurret",1] 
				] call BIS_fnc_initVehicle; 
			
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule; 
					_driver moveInDriver _vehicle; 
				
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule; 
					_gunner moveInGunner _vehicle; 

					private _commander = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule; 
					_commander moveInCommander _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_driver,_gunner,_commander] joinSilent _grp; 
					_grp selectLeader _gunner; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createAngaraKModule = { 
				private _vehicle = ["O_MBT_04_command_F"] call MAZ_EZM_fnc_createVehicle;
				_vehicle disableTIEquipment true; 
			
				[ 
					_vehicle, 
					["Hex",1],  
					["showCamonetHull",1,"showCamonetTurret",1] 
				] call BIS_fnc_initVehicle; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
				
					private _driver = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule; 
					_driver moveInDriver _vehicle; 
				
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule; 
					_gunner moveInGunner _vehicle; 

					private _commander = [] call MAZ_EZM_CSATP_fnc_createCrewmanModule; 
					_commander moveInCommander _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_driver,_gunner,_commander] joinSilent _grp; 
					_grp selectLeader _gunner; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 
			
		comment "Trucks"; 

			MAZ_EZM_CSATP_fnc_createTempestDeviceModule = { 
				private _vehicle = ["O_Truck_03_device_F"] call MAZ_EZM_fnc_createVehicle;
		
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createTempestAmmoModule = { 
				private _vehicle = ["O_Truck_03_ammo_F"] call MAZ_EZM_fnc_createVehicle;
		
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createTempestFuelModule = { 
				private _vehicle = ["O_Truck_03_fuel_F"] call MAZ_EZM_fnc_createVehicle;
		
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createTempestMedicalModule = { 
				private _vehicle = ["O_Truck_03_medical_F"] call MAZ_EZM_fnc_createVehicle;
		
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createTempestRepairModule = { 
				private _vehicle = ["O_Truck_03_repair_F"] call MAZ_EZM_fnc_createVehicle;
		
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createTempestTransportModule = { 
				private _vehicle = ["O_Truck_03_transport_F"] call MAZ_EZM_fnc_createVehicle;
		
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createTempestTransportCoveredModule = { 
				private _vehicle = ["O_Truck_03_covered_F"] call MAZ_EZM_fnc_createVehicle;
		
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_CSATP_fnc_createZamakAmmoModule = { 
				private _vehicle = ["O_Truck_02_Ammo_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_CSATP_fnc_createZamakFuelModule = {
				private _vehicle = ["O_Truck_02_fuel_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_CSATP_fnc_createZamakMedicalModule = { 
				private _vehicle = ["O_Truck_02_medical_F"] call MAZ_EZM_fnc_createVehicle; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_CSATP_fnc_createZamakRepairModule = { 
				private _vehicle = ["O_Truck_02_box_F"] call MAZ_EZM_fnc_createVehicle; 
	
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_CSATP_fnc_createZamakTransportModule = { 
				private _vehicle = ["O_Truck_02_transport_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_CSATP_fnc_createZamakCoveredTransportModule = { 
				private _vehicle = ["O_Truck_02_covered_F"] call MAZ_EZM_fnc_createVehicle;
	
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 
			
		comment "Turrets"; 
		
			MAZ_EZM_CSATP_fnc_createM2HMGModule = { 
				private _vehicle = ["I_G_HMG_02_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_gunner moveInGunner _vehicle; 
				}; 
			   
				_vehicle 
			}; 
		
			MAZ_EZM_CSATP_fnc_createM2HMGRaisedModule = { 
				private _vehicle = ["I_G_HMG_02_high_F"] call MAZ_EZM_fnc_createVehicle; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_gunner moveInGunner _vehicle; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createMk32GMGModule = { 
				private _vehicle = ["O_GMG_01_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_gunner moveInGunner _vehicle; 
				}; 
			    _vehicle disableTIEquipment true; 
				_vehicle 
			}; 
			
			MAZ_EZM_CSATP_fnc_createMk6MortarModule = { 
				private _vehicle = ["O_Mortar_01_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_gunner moveInGunner _vehicle; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_CSATP_fnc_createAALauncherModule = { 
				private _vehicle = ["O_static_AA_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_gunner moveInGunner _vehicle; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_CSATP_fnc_createATLauncherModule = { 
				private _vehicle = ["O_static_AT_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _gunner = [] call MAZ_EZM_CSATP_fnc_createRiflemanModule; 
					_gunner moveInGunner _vehicle; 
				}; 
			
				_vehicle 
			}; 

	comment "FIA+"; 
		
		comment "APCs"; 
		
			MAZ_EZM_FIAP_fnc_createGorgonModule = { 
				private _vehicle = ["I_APC_Wheeled_03_cannon_F"] call MAZ_EZM_fnc_createVehicle;
				_vehicle disableTIEquipment true; 
				private _camo = selectRandom ["Guerilla_01","Guerilla_02","Guerilla_03"]; 
				[ 
					_vehicle, 
					[_camo,1],  
					["showCamonetHull",1,"showBags",1,"showBags2",1,"showTools",1,"showSLATHull",0] 
				] call BIS_fnc_initVehicle; 
							
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createCrewmanModule; 
					_driver moveInDriver _vehicle; 
				
					private _gunner = [] call MAZ_EZM_FIAP_fnc_createCrewmanModule; 
					_gunner moveInGunner _vehicle; 
				
					private _commander = [] call MAZ_EZM_FIAP_fnc_createCrewmanModule; 
					_commander moveInCommander _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_driver,_gunner,_commander] joinSilent _grp; 
					_grp selectLeader _commander; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createGorgon20mmModule = { 
				private _vehicle = ["I_APC_Wheeled_03_cannon_F"] call MAZ_EZM_fnc_createVehicle;
				[_vehicle] call MAZ_EZM_fnc_deleteAttachedWhenDeleted;
				[_vehicle] call MAZ_EZM_fnc_deleteAttachedWhenKilled;
				_vehicle animate ["HideTurret",1]; 
				private _turret = createVehicle ["I_LT_01_cannon_F",[0,0,0],[],0,"CAN_COLLIDE"]; 
				[_turret] call MAZ_EZM_fnc_addObjectToInterface; 
			
				_turret attachTo [_vehicle,[0.63,0,-0.1]]; 
				_turret allowDamage true; 
			
				[ 
					_vehicle, 
					["Guerilla_01",1],  
					["showCamonetHull",1,"showBags",0,"showBags2",0,"showTools",0,"showSLATHull",0] 
				] call BIS_fnc_initVehicle; 
			
				[ 
					_turret, 
					["Indep_Olive",1],  
					["showTools",0,"showCamonetHull",0,"showBags",0,"showSLATHull",0] 
				] call BIS_fnc_initVehicle; 
			
				_turret disableTIEquipment true; 
			
				_turret addMagazineTurret ["60Rnd_20mm_HE_shells",[0]]; 
				_turret addMagazineTurret ["60Rnd_20mm_HE_shells",[0]]; 
				_turret removeWeaponTurret ["LMG_coax_ext", [0]]; 
			
				_turret setObjectTexture [0, ""]; 
				_vehicle lockTurret [[0], true]; 
				_vehicle lockTurret [[1,1], true]; 
				_turret  lockDriver true; 
				_vehicle lockTurret [[1], true]; 
				_turret lockTurret [[1,1], true]; 
							
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createCrewmanModule; 
					_driver moveInDriver _vehicle; 
					_driver setUnloadInCombat [false, false]; 
				
					private _commander = [] call MAZ_EZM_FIAP_fnc_createCrewmanModule; 
					_commander moveInCommander _vehicle; 
					_commander setUnloadInCombat [false, false]; 
				
					private _gunner = [] call MAZ_EZM_FIAP_fnc_createCrewmanModule; 
					_gunner moveInGunner _turret; 
					_gunner setUnloadInCombat [false, false]; 
				
					private _grp = createGroup [east,true]; 
					[_driver,_gunner] joinSilent _grp; 
					_grp selectLeader _driver; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 
		
		comment "Boats"; 
		
			MAZ_EZM_FIAP_fnc_createRhibBoatModule = { 
				private _vehicle = ["I_C_Boat_Transport_02_F"] call MAZ_EZM_fnc_createVehicle;
				
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_driver,_gunner] joinSilent _grp; 
					_grp selectLeader _driver; 
				}; 
			
				_vehicle 
			}; 
		
			MAZ_EZM_FIAP_fnc_createAssaultBoatModule = { 
				private _vehicle = ["I_G_Boat_Transport_01_F"] call MAZ_EZM_fnc_createVehicle;
				
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_driver,_gunner] joinSilent _grp; 
					_grp selectLeader _driver; 
				}; 
			
				_vehicle 
			}; 
		
		comment "Cars"; 
		
			MAZ_EZM_FIAP_fnc_createOffroadModule = { 
				private _vehicle = ["I_G_Offroad_01_F"] call MAZ_EZM_fnc_createVehicle;
			
				[ 
					_vehicle, 
					["Green",1],  
					["HideDoor1",0,"HideDoor2",0,"HideDoor3",0,"HideBackpacks",0,"HideBumper1",1,"HideBumper2",0,"HideConstruction",0,"hidePolice",1,"HideServices",1,"BeaconsStart",0,"BeaconsServicesStart",0] 
				] call BIS_fnc_initVehicle; 
			
				[_vehicle,[0, selectrandom ["a3\soft_f_enoch\offroad_01\data\offroad_01_ext_grn_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_01_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_02_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_03_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_04_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_05_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_06_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_07_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_08_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_09_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_10_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_11_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_12_co.paa"]]] remoteExec ['setObjectTexture',0,_vehicle]; 
				
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createMortarOffroadModule = { 
				private _vehicle = ["I_G_Offroad_01_F"] call MAZ_EZM_fnc_createVehicle;
				[_vehicle] call MAZ_EZM_fnc_deleteAttachedWhenDeleted;
				[_vehicle] call MAZ_EZM_fnc_deleteAttachedWhenKilled;
				private _turret = createVehicle ["I_Mortar_01_F",[0,0,0],[],0,"CAN_COLLIDE"]; 
				private _box = createVehicle ["Box_Syndicate_WpsLaunch_F",[0,0,0],[],0,"CAN_COLLIDE"];  
				[_turret] call MAZ_EZM_fnc_addObjectToInterface; 
				[_box] call MAZ_EZM_fnc_addObjectToInterface; 
							
				_turret attachTo [_vehicle,[0.3,-2,0]]; 
				_box attachTo [_vehicle,[-0.05,-0.8,-0.49]]; 
			
				[ 
					_vehicle, 
					["Green",1],  
					["HideDoor1",0,"HideDoor2",0,"HideDoor3",1,"HideBackpacks",0,"HideBumper1",1,"HideBumper2",0,"HideConstruction",0,"hidePolice",1,"HideServices",1,"BeaconsStart",0,"BeaconsServicesStart",0] 
				] call BIS_fnc_initVehicle; 
			
				[_vehicle,[0, selectrandom ["a3\soft_f_enoch\offroad_01\data\offroad_01_ext_grn_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_01_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_02_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_03_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_04_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_05_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_06_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_07_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_08_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_09_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_10_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_11_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_12_co.paa"]]] remoteExec ['setObjectTexture',0,_vehicle]; 
				
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					private _gunner = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
					_gunner moveInGunner _turret; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createOffroadCoveredModule = { 
				private _vehicle = ["C_Offroad_01_covered_F"] call MAZ_EZM_fnc_createVehicle;
			
				[ 
					_vehicle, 
					["Green",1],  
					["hidePolice",1,"HideServices",1,"HideCover",0,"StartBeaconLight",0,"HideRoofRack",0,"HideLoudSpeakers",1,"HideAntennas",1,"HideBeacon",1,"HideSpotlight",1,"HideDoor3",0,"OpenDoor3",0,"HideDoor1",0,"HideDoor2",0,"HideBackpacks",0,"HideBumper1",1,"HideBumper2",0,"HideConstruction",0,"BeaconsStart",0] 
				] call BIS_fnc_initVehicle; 
			
				[_vehicle,[0, selectrandom ["a3\soft_f_enoch\offroad_01\data\offroad_01_ext_grn_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_01_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_02_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_03_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_04_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_05_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_06_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_07_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_08_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_09_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_10_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_11_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_12_co.paa"]]] remoteExec ['setObjectTexture',0,_vehicle]; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createOffroadRepairModule = { 
				private _vehicle = ["C_Offroad_01_covered_F"] call MAZ_EZM_fnc_createVehicle;
			
				[ 
					_vehicle, 
					["Green",1],  
					["hidePolice",1,"HideServices",0,"HideCover",1,"StartBeaconLight",0,"HideRoofRack",0,"HideLoudSpeakers",1,"HideAntennas",1,"HideBeacon",1,"HideSpotlight",1,"HideDoor3",0,"OpenDoor3",0,"HideDoor1",0,"HideDoor2",0,"HideBackpacks",0,"HideBumper1",1,"HideBumper2",1,"HideConstruction",1,"BeaconsStart",0] 
				] call BIS_fnc_initVehicle; 
			
				[_vehicle,[0, selectrandom ["a3\soft_f_enoch\offroad_01\data\offroad_01_ext_grn_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_01_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_02_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_03_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_04_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_05_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_06_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_07_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_08_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_09_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_10_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_11_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_12_co.paa"]]] remoteExec ['setObjectTexture',0,_vehicle]; 
							
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createOffroadHMGModule = { 
				private _vehicle = ["I_G_Offroad_01_armed_F"] call MAZ_EZM_fnc_createVehicle;
			
				[ 
					_vehicle, 
					["Green",1],  
					["Hide_Shield",0,"Hide_Rail",1,"HideDoor1",0,"HideDoor2",0,"HideDoor3",0,"HideBackpacks",0,"HideBumper1",1,"HideBumper2",0,"HideConstruction",0] 
				] call BIS_fnc_initVehicle; 
			
				[_vehicle,[0, selectrandom ["a3\soft_f_enoch\offroad_01\data\offroad_01_ext_grn_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_01_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_02_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_03_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_04_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_05_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_06_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_07_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_08_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_09_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_10_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_11_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_12_co.paa"]]] remoteExec ['setObjectTexture',0,_vehicle]; 
					
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				
					private _gunner = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_gunner moveInGunner _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_driver,_gunner] joinSilent _grp; 
					_grp selectLeader _driver; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createOffroadATModule = { 
				private _vehicle = ["I_G_Offroad_01_AT_F"] call MAZ_EZM_fnc_createVehicle;
			
				[ 
					_vehicle, 
					["Green",1],  
					["HideDoor1",0,"HideDoor2",0,"HideDoor3",0,"HideBackpacks",0,"HideBumper1",1,"HideBumper2",0,"HideConstruction",0] 
				] call BIS_fnc_initVehicle; 
			
				[_vehicle,[0, selectrandom ["a3\soft_f_enoch\offroad_01\data\offroad_01_ext_grn_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_01_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_02_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_03_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_04_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_05_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_06_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_07_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_08_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_09_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_10_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_11_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_12_co.paa"]]] remoteExec ['setObjectTexture',0,_vehicle]; 
							
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				
					private _gunner = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_gunner moveInGunner _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_driver,_gunner] joinSilent _grp; 
					_grp selectLeader _driver; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createJeepModule = { 
				private _vehicle = ["I_C_Offroad_02_unarmed_F"] call MAZ_EZM_fnc_createVehicle;
			
				[ 
					_vehicle, 
					["Olive",1],  
					["hideLeftDoor",0,"hideRightDoor",0,"hideRearDoor",0,"hideBullbar",0,"hideFenders",0,"hideHeadSupportRear",0,"hideHeadSupportFront",0,"hideRollcage",1,"hideSeatsRear",0,"hideSpareWheel",1] 
				] call BIS_fnc_initVehicle; 
				
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
				
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createJeepLMGModule = { 
				private _vehicle = ["I_C_Offroad_02_LMG_F"] call MAZ_EZM_fnc_createVehicle;
				_vehicle removeMagazines "200Rnd_556x45_Box_Tracer_F"; 
				_vehicle addMagazineTurret ["200Rnd_556x45_Box_F",[0]]; 
				_vehicle addMagazineTurret ["200Rnd_556x45_Box_F",[0]]; 
				_vehicle addMagazineTurret ["200Rnd_556x45_Box_F",[0]]; 
			
				[ 
					_vehicle, 
					["Olive",1],  
					["hideLeftDoor",0,"hideRightDoor",0,"hideRearDoor",0,"hideBullbar",0,"hideFenders",0,"hideHeadSupportRear",0,"hideHeadSupportFront",0,"hideRollcage",1,"hideSeatsRear",0,"hideSpareWheel",1] 
				] call BIS_fnc_initVehicle; 
									
				
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				
					private _gunner = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_gunner moveInGunner _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_driver,_gunner] joinSilent _grp; 
					_grp selectLeader _driver; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createJeepATModule = { 
				private _vehicle = ["I_C_Offroad_02_AT_F"] call MAZ_EZM_fnc_createVehicle;
			
				[ 
					_vehicle, 
					["Olive",1],  
					["hideLeftDoor",0,"hideRightDoor",0,"hideRearDoor",0,"hideBullbar",0,"hideFenders",0,"hideHeadSupportRear",0,"hideHeadSupportFront",0,"hideRollcage",1,"hideSeatsRear",0,"hideSpareWheel",1] 
				] call BIS_fnc_initVehicle; 
				
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				
					private _gunner = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_gunner moveInGunner _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_driver,_gunner] joinSilent _grp; 
					_grp selectLeader _driver; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createQuadbikeModule = { 
				private _vehicle = ["I_G_Quadbike_01_F"] call MAZ_EZM_fnc_createVehicle;
			
				private _bikehelmets = selectRandom ["H_RacingHelmet_3_F","H_RacingHelmet_1_black_F","H_RacingHelmet_4_F"]; 
				
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					private _passanger = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
					_passanger moveinCargo _vehicle; 
					[_driver] call MAZ_EZM_FIAP_fnc_addFIAPBackpack; 
					[_passanger] call MAZ_EZM_FIAP_fnc_addFIAPBackpack; 
					_driver addHeadgear _bikehelmets; 
					private _grp = createGroup [east,true]; 
					[_driver,_passanger] joinSilent _grp; 
					_grp selectLeader _driver; 
				}; 
			
				_vehicle 
			}; 

        comment "Compositions";

			MAZ_EZM_FIAP_fnc_createCache1Module = {
				
				private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
				
				private _vehicle = createVehicle ["Land_Pallet_F",[24604.4,18789.3,0],[],0,"CAN_COLLIDE"];
				
				_vehicle setPosWorld [24589.396484,18790.230469,3.291037];
				_vehicle setVectorDirAndUp [[0,1,0],[0,0,1]];
				
				private _simpleObject_1 = createSimpleObject ['a3\structures_f_mark\training\shootingmat_01_f.p3d', [24589.396484,18790.591797,3.390154]];
				_simpleObject_1 setVectorDirAndUp [[0.799994,0.00317998,0],[0,0,0.8]];
				[_simpleObject_1, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_1 setObjectScale 0.8;
				private _simpleObject_2 = createSimpleObject ['a3\structures_f_mark\training\shootingmat_01_f.p3d', [24589.402344,18789.908203,3.388135]];
				_simpleObject_2 setVectorDirAndUp [[0.799992,0.00358987,0],[0,0,0.8]];
				[_simpleObject_2, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_2 setObjectScale 0.8;
				private _simpleObject_3 = createSimpleObject ['a3\weapons_f\ammoboxes\proxy_usbasicammobox.p3d', [24589.0488281,18790.720703,3.591737]];
				_simpleObject_3 setVectorDirAndUp [[0,1,0],[0,0,1]];
				_simpleObject_3 setObjectScale 1;
				[_simpleObject_3, _vehicle] call BIS_fnc_attachToRelative;
				private _simpleObject_4 = createSimpleObject ['a3\weapons_f\ammoboxes\proxy_usbasicammobox.p3d', [24589.0507813,18790.212891,3.585812]];
				_simpleObject_4 setVectorDirAndUp [[0,1,0],[0,0,1]];
				_simpleObject_4 setObjectScale 1;
				[_simpleObject_4, _vehicle] call BIS_fnc_attachToRelative;
				private _simpleObject_5 = createSimpleObject ['a3\weapons_f\ammoboxes\proxy_usbasicammoboxbig.p3d', [24589.0234375,18789.820313,3.55642]];
				_simpleObject_5 setVectorDirAndUp [[-0.00146181,0.999999,0],[0,0,1]];
				_simpleObject_5 setObjectScale 1;
				[_simpleObject_5, _vehicle] call BIS_fnc_attachToRelative;
				private _simpleObject_6 = createSimpleObject ['a3\weapons_f\ammoboxes\proxy_usbasicammoboxbig.p3d', [24589.0253906,18789.638672,3.549962]];
				_simpleObject_6 setVectorDirAndUp [[-0.00137598,0.999999,0],[0,0,1]];
				_simpleObject_6 setObjectScale 1; 
				[_simpleObject_6, _vehicle] call BIS_fnc_attachToRelative;
				private _simpleObject_7 = createSimpleObject ['a3\weapons_f\ammoboxes\proxy_uslouncherbox.p3d', [24589.626953,18790.318359,3.568008]];
				_simpleObject_7 setVectorDirAndUp [[-1,1.19249e-008,0],[0,0,1]];
				_simpleObject_7 setObjectScale 1;
				[_simpleObject_7, _vehicle] call BIS_fnc_attachToRelative;
				private _simpleObject_8 = createSimpleObject ['a3\weapons_f\ammoboxes\proxy_usbasicweaponbox.p3d', [24589.978516,18790.486328,3.452644]];
				_simpleObject_8 setVectorDirAndUp [[1,7.54979e-008,0],[0,0,1]];
				_simpleObject_8 setObjectScale 1;
				[_simpleObject_8, _vehicle] call BIS_fnc_attachToRelative;
				private _simpleObject_9 = createSimpleObject ['a3\weapons_f\ammoboxes\proxy_usbasicweaponbox.p3d', [24589.980469,18790.480469,3.586804]];
				_simpleObject_9 setVectorDirAndUp [[1,7.54979e-008,0],[0,0,1]];
				_simpleObject_9 setObjectScale 1;
				[_simpleObject_9, _vehicle] call BIS_fnc_attachToRelative;
				private _simpleObject_10 = createSimpleObject ['a3\weapons_f\ammoboxes\proxy_usbasicammoboxsmall.p3d', [24590.00585938,18789.951172,3.508759]];
				_simpleObject_10 setVectorDirAndUp [[0.0232496,-0.99973,0],[0,0,1]];
				_simpleObject_10 setObjectScale 1;
				[_simpleObject_10, _vehicle] call BIS_fnc_attachToRelative;
				private _simpleObject_11 = createSimpleObject ['a3\weapons_f\ammoboxes\proxy_usbasicammoboxsmall.p3d', [24590.00976563,18789.826172,3.512415]];
				_simpleObject_11 setVectorDirAndUp [[0.0232496,-0.99973,0],[0,0,1]];
				_simpleObject_11 setObjectScale 1;
				[_simpleObject_11, _vehicle] call BIS_fnc_attachToRelative;
				[_vehicle] call MAZ_EZM_fnc_addObjectToInterface;

				_vehicle addEventHandler ["HandleDamage", {
				params ["_unit", "_selection", "_damage", "_source", "_projectile", "_hitIndex", "_instigator", "_hitPoint"];
				if(_projectile isKindOf "TimeBombCore" || _projectile isKindOf "GrenadeCore" || _projectile isKindOf "BombCore" || _projectile isKindOf "RocketCore") then {
					private _bomb = "IEDUrbanBig_Remote_Ammo" createVehicle (_unit modelToWorld [0,0,0]);  
					_bomb setDamage 1;
					deleteVehicle _unit;
				};
				}];

				_vehicle addEventHandler ["Killed", {
					params ["_unit"];
					{
						detach _x;
						deleteVehicle _x;
					} forEach attachedObjects _unit;
				}];
				_vehicle addEventHandler ["Deleted", {
					params ["_unit"];
					{
						detach _x;
						deleteVehicle _x;
					} forEach attachedObjects _unit;
				}];

				_vehicle setpos _pos;
				
				_vehicle
			};

			MAZ_EZM_FIAP_fnc_createCache2Module = {
				
				private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
				
				private _vehicle = createVehicle ["Land_Pallet_F",[24604.4,18789.3,0],[],0,"CAN_COLLIDE"];
					
				_vehicle setPosWorld [24604.396484,18789.289063,3.291037];
				_vehicle setVectorDirAndUp [[0,1,0],[0,0,1]];
			
				_simpleObject_1 = createSimpleObject ['a3\weapons_f\ammoboxes\proxy_uslouncherbox.p3d', [24604.580078,18788.796875,3.545416]];
				_simpleObject_1 setVectorDirAndUp [[0,1,0],[0,0,1]];
				[_simpleObject_1, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_1 setObjectScale 1;
				_simpleObject_2 = createSimpleObject ['a3\weapons_f\ammoboxes\proxy_usbasicammobox.p3d', [24604.767578,18789.232422,3.582083]];
				_simpleObject_2 setVectorDirAndUp [[0,1,0],[0,0,1]];
				[_simpleObject_2, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_2 setObjectScale 1;
				_simpleObject_3 = createSimpleObject ['a3\weapons_f\ammoboxes\proxy_usbasicweaponbox.p3d', [24604.158203,18789.404297,3.442312]];
				_simpleObject_3 setVectorDirAndUp [[1,7.54979e-008,0],[0,0,1]];
				[_simpleObject_3, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_3 setObjectScale 1;
				_simpleObject_4 = createSimpleObject ['a3\weapons_f\ammoboxes\proxy_usbasicammoboxbig.p3d', [24604.759766,18789.576172,3.535646]];
				_simpleObject_4 setVectorDirAndUp [[-0.00137598,0.999999,0],[0,0,1]];
				[_simpleObject_4, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_4 setObjectScale 1;
				_simpleObject_5 = createSimpleObject ['a3\weapons_f\ammoboxes\proxy_usbasicammoboxsmall.p3d', [24604.154297,18789.925781,3.499193]];
				_simpleObject_5 setVectorDirAndUp [[0,1,0],[0,0,1]];
				[_simpleObject_5, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_5 setObjectScale 1;
				_simpleObject_6 = createSimpleObject ['a3\structures_f_mark\training\shootingmat_01_f.p3d', [24604.400391,18789.644531,3.388971]];
				_simpleObject_6 setVectorDirAndUp [[0.799994,0.00317998,0],[0,0,0.8]];
				[_simpleObject_6, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_6 setObjectScale 0.8;
				_simpleObject_7 = createSimpleObject ['a3\weapons_f\ammoboxes\proxy_usbasicweaponbox.p3d', [24604.183594,18789.431641,3.587127]];
				_simpleObject_7 setVectorDirAndUp [[1,7.54979e-008,0],[0,0,1]];
				[_simpleObject_7, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_7 setObjectScale 1;
				_simpleObject_8 = createSimpleObject ['a3\weapons_f\ammoboxes\proxy_usbasicweaponbox.p3d', [24604.181641,18789.429688,3.725561]];
				_simpleObject_8 setVectorDirAndUp [[1,7.54979e-008,0],[0,0,1]];
				[_simpleObject_8, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_8 setObjectScale 1;
				_simpleObject_9 = createSimpleObject ['a3\weapons_f\ammoboxes\proxy_usbasicammoboxbig.p3d', [24604.757813,18789.759766,3.540076]];
				_simpleObject_9 setVectorDirAndUp [[-0.00146181,0.999999,0],[0,0,1]];
				[_simpleObject_9, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_9 setObjectScale 1;
				_simpleObject_10 = createSimpleObject ['a3\weapons_f\ammoboxes\proxy_uslouncherbox.p3d', [24603.845703,18789.267578,3.54471]];
				_simpleObject_10 setVectorDirAndUp [[0.999999,-0.00109629,0],[0,0,1]];
				[_simpleObject_10, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_10 setObjectScale 1;
				_simpleObject_11 = createSimpleObject ['a3\structures_f_mark\training\shootingmat_01_f.p3d', [24604.40625,18788.960938,3.386952]];
				_simpleObject_11 setVectorDirAndUp [[0.799992,0.00358977,0],[0,0,0.8]];
				[_simpleObject_11, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_11 setObjectScale 0.8;
				_simpleObject_12 = createSimpleObject ['a3\weapons_f\explosives\mine_at.p3d', [24603.833984,18789.617188,3.76521]];
				_simpleObject_12 setVectorDirAndUp [[-0.192588,0.98128,-0],[0,0,1]];
				[_simpleObject_12, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_12 setObjectScale 1;
				_simpleObject_13 = createSimpleObject ['a3\weapons_f\dummyweapon_single.p3d', [24604.660156,18788.783203,3.695402]];
				_simpleObject_13 setVectorDirAndUp [[0.021857,0.999761,0],[0,0,1]];
				[_simpleObject_13, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_13 setObjectScale 1;
				_simpleObject_14 = createSimpleObject ['a3\weapons_f\explosives\mine_at.p3d', [24603.822266,18789.304688,3.76457]];
				_simpleObject_14 setVectorDirAndUp [[0.997342,-0.0728652,-0],[0,0,1]];
				[_simpleObject_14, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_14 setObjectScale 1;
				
				_vehicle addEventHandler ["HandleDamage", {
				params ["_unit", "_selection", "_damage", "_source", "_projectile", "_hitIndex", "_instigator", "_hitPoint"];
				if(_projectile isKindOf "TimeBombCore" || _projectile isKindOf "GrenadeCore" || _projectile isKindOf "BombCore" || _projectile isKindOf "RocketCore") then {
					private _bomb = "IEDUrbanBig_Remote_Ammo" createVehicle (_unit modelToWorld [0,0,0]);  
					_bomb setDamage 1;
					deleteVehicle _unit;
				};
				}];
				
				[_vehicle] call MAZ_EZM_fnc_addObjectToInterface;

				_vehicle addEventHandler ["Killed", {
					params ["_unit"];
					{
						detach _x;
						deleteVehicle _x;
					} forEach attachedObjects _unit;
				}];

				_vehicle addEventHandler ["Deleted", {
					params ["_unit"];
					{
						detach _x;
						deleteVehicle _x;
					} forEach attachedObjects _unit;
				}];

				_vehicle setpos _pos;
				
				_vehicle
			};

			MAZ_EZM_FIAP_fnc_createBunkerModule = {

				private _pos = [] call MAZ_EZM_fnc_getScreenPosition;

				private _vehicle = createVehicle ["Land_BagBunker_Small_F",[24599.3,18798.2,-0.0737934],[],0,"CAN_COLLIDE"];
				
				_vehicle setPosWorld [24599.3,18798.2,4.08184];
				_vehicle setVectorDirAndUp [[0.0467889,-0.998905,0],[0,0,1]];

				private _simpleObject_1 = createSimpleObject ['a3\structures_f\civ\constructions\pallet_f.p3d', [24598.583984,18799.148438,3.192037]];
				_simpleObject_1 setVectorDirAndUp [[0.0570132,-0.898192,0],[0,0,0.9]];[_simpleObject_1, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_1 setObjectScale 0.9;
				private _simpleObject_2 = createSimpleObject ['a3\structures_f\civ\constructions\pallet_f.p3d', [24598.667969,18797.814453,3.19224]];
				_simpleObject_2 setVectorDirAndUp [[0.0570132,-0.898192,0],[0,0,0.9]];[_simpleObject_2, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_2 setObjectScale 0.9;
				private _simpleObject_3 = createSimpleObject ['a3\structures_f_epb\items\military\ammobox_rounds_f.p3d', [24597.978516,18798.984375,3.390146]];
				_simpleObject_3 setVectorDirAndUp [[0.999796,0.0201752,0],[0,0,1]];[_simpleObject_3, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_3 setObjectScale 1;
				private _simpleObject_4 = createSimpleObject ['a3\structures_f_epb\items\military\ammobox_rounds_f.p3d', [24597.988281,18798.611328,3.37442]];
				_simpleObject_4 setVectorDirAndUp [[0.995723,0.0923867,0],[0,0,1]];[_simpleObject_4, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_4 setObjectScale 1;
				private _simpleObject_5 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.796875,18798.910156,3.270214]];
				_simpleObject_5 setVectorDirAndUp [[0,1,0],[0,0,1]];[_simpleObject_5, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_5 setObjectScale 1;
				private _simpleObject_6 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.873047,18798.769531,3.270214]];
				_simpleObject_6 setVectorDirAndUp [[-0.76919,-0.63902,0],[0,0,1]];[_simpleObject_6, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_6 setObjectScale 1;
				private _simpleObject_7 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.914063,18798.867188,3.270214]];
				_simpleObject_7 setVectorDirAndUp [[0.991228,-0.132164,0],[0,0,1]];[_simpleObject_7, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_7 setObjectScale 1;
				private _simpleObject_8 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.730469,18798.828125,3.270214]];
				_simpleObject_8 setVectorDirAndUp [[0.447214,-0.894427,0],[0,0,1]];[_simpleObject_8, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_8 setObjectScale 1;
				private _simpleObject_9 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.841797,18799.00195313,3.275963]];
				_simpleObject_9 setVectorDirAndUp [[-0.8,0.6,0],[0,0,1]];[_simpleObject_9, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_9 setObjectScale 1;
				private _simpleObject_10 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.998047,18798.886719,3.270214]];
				_simpleObject_10 setVectorDirAndUp [[-0.597266,0.802043,0],[0,0,1]];[_simpleObject_10, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_10 setObjectScale 1;
				private _simpleObject_11 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.960938,18798.753906,3.270214]];
				_simpleObject_11 setVectorDirAndUp [[-0.407443,-0.913231,0],[0,0,1]];[_simpleObject_11, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_11 setObjectScale 1;
				private _simpleObject_12 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.941406,18798.650391,3.272212]];
				_simpleObject_12 setVectorDirAndUp [[-0.992796,0.11982,0],[0,0,1]];[_simpleObject_12, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_12 setObjectScale 1;
				private _simpleObject_13 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.802734,18798.710938,3.274431]];
				_simpleObject_13 setVectorDirAndUp [[-0.103606,0.994618,0],[0,0,1]];[_simpleObject_13, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_13 setObjectScale 1;
				private _simpleObject_14 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.763672,18798.613281,3.275955]];
				_simpleObject_14 setVectorDirAndUp [[-0.695421,0.718603,0],[0,0,1]];[_simpleObject_14, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_14 setObjectScale 1;
				private _simpleObject_15 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24600.0683594,18798.833984,3.270214]];
				_simpleObject_15 setVectorDirAndUp [[-0.132164,-0.991228,0],[0,0,1]];[_simpleObject_15, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_15 setObjectScale 1;
				private _simpleObject_16 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.890625,18799.0644531,3.270214]];
				_simpleObject_16 setVectorDirAndUp [[-0.996338,0.0855078,0],[0,0,1]];[_simpleObject_16, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_16 setObjectScale 1;
				private _simpleObject_17 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24600.0371094,18799.126953,3.270214]];
				_simpleObject_17 setVectorDirAndUp [[0.570908,-0.821014,0],[0,0,1]];[_simpleObject_17, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_17 setObjectScale 1;
				private _simpleObject_18 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.943359,18799.177734,3.274777]];
				_simpleObject_18 setVectorDirAndUp [[0.216437,0.976296,0],[0,0,1]];[_simpleObject_18, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_18 setObjectScale 1;
				private _simpleObject_19 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.966797,18798.990234,3.270214]];
				_simpleObject_19 setVectorDirAndUp [[0.929392,0.369095,0],[0,0,1]];[_simpleObject_19, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_19 setObjectScale 1;
				private _simpleObject_20 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.802734,18799.117188,3.274688]];
				_simpleObject_20 setVectorDirAndUp [[-0.666209,-0.745765,0],[0,0,1]];[_simpleObject_20, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_20 setObjectScale 1;
				private _simpleObject_21 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.931641,18799.261719,3.270214]];
				_simpleObject_21 setVectorDirAndUp [[-0.850177,-0.526498,0],[0,0,1]];[_simpleObject_21, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_21 setObjectScale 1;
				private _simpleObject_22 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24600.0605469,18799.214844,3.27128]];
				_simpleObject_22 setVectorDirAndUp [[0.875047,-0.484038,0],[0,0,1]];[_simpleObject_22, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_22 setObjectScale 1;
				private _simpleObject_23 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24600.162109,18799.185547,3.270214]];
				_simpleObject_23 setVectorDirAndUp [[-0.204273,-0.978914,0],[0,0,1]];[_simpleObject_23, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_23 setObjectScale 1;
				private _simpleObject_24 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24600.0898438,18799.0527344,3.273468]];
				_simpleObject_24 setVectorDirAndUp [[-0.999835,-0.0181789,0],[0,0,1]];[_simpleObject_24, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_24 setObjectScale 1;
				private _simpleObject_25 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24600.183594,18799.00585938,3.27272]];
				_simpleObject_25 setVectorDirAndUp [[-0.775434,-0.631428,0],[0,0,1]];[_simpleObject_25, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_25 setObjectScale 1;
				private _simpleObject_26 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.990234,18799.328125,3.270214]];
				_simpleObject_26 setVectorDirAndUp [[0.976296,-0.216438,0],[0,0,1]];[_simpleObject_26, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_26 setObjectScale 1;
				private _simpleObject_27 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.720703,18798.945313,3.270214]];
				_simpleObject_27 setVectorDirAndUp [[-0.775434,-0.631428,0],[0,0,1]];[_simpleObject_27, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_27 setObjectScale 1;
				private _simpleObject_28 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.527344,18799.267578,3.270214]];
				_simpleObject_28 setVectorDirAndUp [[0.976296,-0.216438,0],[0,0,1]];[_simpleObject_28, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_28 setObjectScale 1;
				private _simpleObject_29 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.427734,18799.00390625,3.273167]];
				_simpleObject_29 setVectorDirAndUp [[-0.996338,0.0855078,0],[0,0,1]];[_simpleObject_29, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_29 setObjectScale 1;
				private _simpleObject_30 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.574219,18799.0664063,3.274359]];
				_simpleObject_30 setVectorDirAndUp [[0.570908,-0.821014,0],[0,0,1]];[_simpleObject_30, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_30 setObjectScale 1;
				private _simpleObject_31 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.480469,18799.117188,3.273733]];
				_simpleObject_31 setVectorDirAndUp [[0.216437,0.976296,0],[0,0,1]];[_simpleObject_31, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_31 setObjectScale 1;
				private _simpleObject_32 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.503906,18798.929688,3.272668]];
				_simpleObject_32 setVectorDirAndUp [[0.929392,0.369095,0],[0,0,1]];[_simpleObject_32, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_32 setObjectScale 1;
				private _simpleObject_33 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.339844,18799.0566406,3.270214]];
				_simpleObject_33 setVectorDirAndUp [[-0.666209,-0.745765,0],[0,0,1]];[_simpleObject_33, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_33 setObjectScale 1;
				private _simpleObject_34 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.46875,18799.201172,3.270214]];
				_simpleObject_34 setVectorDirAndUp [[-0.850177,-0.526498,0],[0,0,1]];[_simpleObject_34, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_34 setObjectScale 1;
				private _simpleObject_35 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.597656,18799.154297,3.270214]];
				_simpleObject_35 setVectorDirAndUp [[0.875047,-0.484038,0],[0,0,1]];[_simpleObject_35, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_35 setObjectScale 1;
				private _simpleObject_36 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.699219,18799.125,3.27414]];
				_simpleObject_36 setVectorDirAndUp [[-0.204273,-0.978914,0],[0,0,1]];[_simpleObject_36, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_36 setObjectScale 1;
				private _simpleObject_37 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.626953,18798.992188,3.273895]];
				_simpleObject_37 setVectorDirAndUp [[-0.999835,-0.0181789,0],[0,0,1]];[_simpleObject_37, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_37 setObjectScale 1;
				private _simpleObject_38 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.597656,18799.462891,3.274347]];
				_simpleObject_38 setVectorDirAndUp [[-0.707107,0.707107,0],[0,0,1]];[_simpleObject_38, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_38 setObjectScale 1;
				private _simpleObject_39 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.75,18799.416016,3.270214]];
				_simpleObject_39 setVectorDirAndUp [[-0.0920449,-0.995755,0],[0,0,1]];[_simpleObject_39, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_39 setObjectScale 1;
				private _simpleObject_40 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.710938,18799.515625,3.270214]];
				_simpleObject_40 setVectorDirAndUp [[0.794358,0.60745,0],[0,0,1]];[_simpleObject_40, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_40 setObjectScale 1;
				private _simpleObject_41 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.607422,18799.357422,3.27577]];
				_simpleObject_41 setVectorDirAndUp [[0.948683,-0.316228,0],[0,0,1]];[_simpleObject_41, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_41 setObjectScale 1;
				private _simpleObject_42 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.564453,18799.560547,3.270214]];
				_simpleObject_42 setVectorDirAndUp [[-0.98995,-0.141421,0],[0,0,1]];[_simpleObject_42, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_42 setObjectScale 1;
				private _simpleObject_43 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.755859,18799.587891,3.270214]];
				_simpleObject_43 setVectorDirAndUp [[-0.989461,0.1448,0],[0,0,1]];[_simpleObject_43, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_43 setObjectScale 1;
				private _simpleObject_44 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.824219,18799.46875,3.270214]];
				_simpleObject_44 setVectorDirAndUp [[0.357646,-0.933857,0],[0,0,1]];[_simpleObject_44, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_44 setObjectScale 1;
				private _simpleObject_45 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.882813,18799.380859,3.274951]];
				_simpleObject_45 setVectorDirAndUp [[-0.786738,-0.617286,0],[0,0,1]];[_simpleObject_45, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_45 setObjectScale 1;
				private _simpleObject_46 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.742188,18799.326172,3.270214]];
				_simpleObject_46 setVectorDirAndUp [[-0.776562,0.630041,0],[0,0,1]];[_simpleObject_46, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_46 setObjectScale 1;
				private _simpleObject_47 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.783203,18799.228516,3.270214]];
				_simpleObject_47 setVectorDirAndUp [[-0.999866,0.016392,0],[0,0,1]];[_simpleObject_47, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_47 setObjectScale 1;
				private _simpleObject_48 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.84375,18799.599609,3.270214]];
				_simpleObject_48 setVectorDirAndUp [[0.60745,-0.794358,0],[0,0,1]];[_simpleObject_48, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_48 setObjectScale 1;
				private _simpleObject_49 = createSimpleObject ['a3\structures_f_enoch\furniture\school_equipment\student_chair.p3d', [24598.242188,18797.755859,3.265329]];
				_simpleObject_49 setVectorDirAndUp [[-0.996044,-0.0888595,0],[0,0,1]];[_simpleObject_49, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_49 setObjectScale 1;
				private _simpleObject_50 = createSimpleObject ['a3\structures_f_epa\items\food\canteen_f.p3d', [24598.0703125,18797.369141,3.381289]];
				_simpleObject_50 setVectorDirAndUp [[0.285254,-0.958452,0],[0,0,1]];[_simpleObject_50, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_50 setObjectScale 1;
				private _simpleObject_51 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.412109,18798.736328,3.276045]];
				_simpleObject_51 setVectorDirAndUp [[-0.295482,0.955348,0],[0,0,1]];[_simpleObject_51, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_51 setObjectScale 1;
				private _simpleObject_52 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.486328,18798.662109,3.276045]];
				_simpleObject_52 setVectorDirAndUp [[-0.501918,-0.864915,0],[0,0,1]];[_simpleObject_52, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_52 setObjectScale 1;
				private _simpleObject_53 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.638672,18798.677734,3.278112]];
				_simpleObject_53 setVectorDirAndUp [[0.860762,0.509008,0],[0,0,1]];[_simpleObject_53, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_53 setObjectScale 1;
				private _simpleObject_54 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.472656,18798.578125,3.276045]];
				_simpleObject_54 setVectorDirAndUp [[0.969693,0.244327,0],[0,0,1]];[_simpleObject_54, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_54 setObjectScale 1;
				private _simpleObject_55 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.363281,18798.662109,3.276045]];
				_simpleObject_55 setVectorDirAndUp [[-0.687384,0.726294,0],[0,0,1]];[_simpleObject_55, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_55 setObjectScale 1;
				private _simpleObject_56 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.275391,18798.720703,3.276045]];
				_simpleObject_56 setVectorDirAndUp [[0.491117,0.871094,0],[0,0,1]];[_simpleObject_56, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_56 setObjectScale 1;
				private _simpleObject_57 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.384766,18798.824219,3.278117]];
				_simpleObject_57 setVectorDirAndUp [[0.958395,-0.285445,0],[0,0,1]];[_simpleObject_57, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_57 setObjectScale 1;
				private _simpleObject_58 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.310547,18798.898438,3.276045]];
				_simpleObject_58 setVectorDirAndUp [[0.930235,0.366964,0],[0,0,1]];[_simpleObject_58, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_58 setObjectScale 1;
				private _simpleObject_59 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.396484,18798.533203,3.276045]];
				_simpleObject_59 setVectorDirAndUp [[-0.864915,0.501918,0],[0,0,1]];[_simpleObject_59, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_59 setObjectScale 1;
				private _simpleObject_60 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.677734,18798.609375,3.276045]];
				_simpleObject_60 setVectorDirAndUp [[0.460781,0.887514,0],[0,0,1]];[_simpleObject_60, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_60 setObjectScale 1;
				private _simpleObject_61 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.679688,18798.449219,3.276045]];
				_simpleObject_61 setVectorDirAndUp [[-0.977115,-0.21271,0],[0,0,1]];[_simpleObject_61, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_61 setObjectScale 1;
				private _simpleObject_62 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.763672,18798.515625,3.276927]];
				_simpleObject_62 setVectorDirAndUp [[0.81883,-0.574036,0],[0,0,1]];[_simpleObject_62, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_62 setObjectScale 1;
				private _simpleObject_63 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.580078,18798.566406,3.276045]];
				_simpleObject_63 setVectorDirAndUp [[-0.0152271,-0.999884,0],[0,0,1]];[_simpleObject_63, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_63 setObjectScale 1;
				private _simpleObject_64 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.84375,18798.496094,3.276045]];
				_simpleObject_64 setVectorDirAndUp [[-0.160515,0.987033,0],[0,0,1]];[_simpleObject_64, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_64 setObjectScale 1;
				private _simpleObject_65 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.75,18798.392578,3.276045]];
				_simpleObject_65 setVectorDirAndUp [[-0.78241,-0.622763,0],[0,0,1]]; [_simpleObject_65, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_65 setObjectScale 1;
				private _simpleObject_66 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.685547,18798.310547,3.276045]];
				_simpleObject_66 setVectorDirAndUp [[-0.825909,0.563803,0],[0,0,1]]; [_simpleObject_66, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_66 setObjectScale 1;
				private _simpleObject_67 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.589844,18798.429688,3.276045]];
				_simpleObject_67 setVectorDirAndUp [[0.36635,0.930477,0],[0,0,1]]; [_simpleObject_67, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_67 setObjectScale 1;
				private _simpleObject_68 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.511719,18798.359375,3.276045]];
				_simpleObject_68 setVectorDirAndUp [[-0.286077,0.958207,0],[0,0,1]]; [_simpleObject_68, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_68 setObjectScale 1;
				private _simpleObject_69 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.882813,18798.414063,3.276045]];
				_simpleObject_69 setVectorDirAndUp [[-0.574037,-0.818829,0],[0,0,1]]; [_simpleObject_69, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_69 setObjectScale 1;
				private _simpleObject_70 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24599.972656,18798.494141,3.2771]];
				_simpleObject_70 setVectorDirAndUp [[-0.268683,0.963229,0],[0,0,1]]; [_simpleObject_70, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_70 setObjectScale 1;
				private _simpleObject_72 = createSimpleObject ['a3\structures_f\civ\constructions\pallet_f.p3d', [24599.958984,18799.234375,3.187853]];
				_simpleObject_72 setVectorDirAndUp [[0.0570132,-0.898192,0],[0,0,0.9]]; [_simpleObject_72, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_72 setObjectScale 0.9;
				private _simpleObject_73 = createSimpleObject ['a3\structures_f\civ\constructions\pallet_f.p3d', [24600.0429688,18797.900391,3.188056]];
				_simpleObject_73 setVectorDirAndUp [[0.0570132,-0.898192,0],[0,0,0.9]]; [_simpleObject_73, _vehicle] call BIS_fnc_attachToRelative;
				_simpleObject_73 setObjectScale 0.9;

				[_vehicle] call MAZ_EZM_fnc_addObjectToInterface;

				_vehicle addEventHandler ["Killed", {
					params ["_unit"];
					{
						detach _x;
						deleteVehicle _x;
					} forEach attachedObjects _unit;
				}];
				_vehicle addEventHandler ["Deleted", {
					params ["_unit"];
					{
						detach _x;
						deleteVehicle _x;
					} forEach attachedObjects _unit;
				}];

				_vehicle setpos _pos;
				
				_vehicle
            };

		comment "Drones"; 
					
			MAZ_EZM_FIAP_fnc_createDarterModule = { 
				private _vehicle = ["I_UAV_01_F"] call MAZ_EZM_fnc_createVehicle;
			
				private _aiGroup = createGroup [opfor,true]; 
				private _oldGroup = createVehicleCrew _vehicle; 
				private _leader = leader _oldGroup; 
				{ 
					[_x] joinSilent _aiGroup; 
				}forEach units _oldGroup; 
				_aiGroup selectLeader _leader; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createPelicanModule = { 
				private _vehicle = ["C_IDAP_UAV_06_antimine_F"] call MAZ_EZM_fnc_createVehicle;
			
				private _aiGroup = createGroup [opfor,true]; 
				private _oldGroup = createVehicleCrew _vehicle; 
				private _leader = leader _oldGroup; 
				{ 
					[_x] joinSilent _aiGroup; 
				}forEach units _oldGroup; 
				_aiGroup selectLeader _leader; 

				_vehicle addEventHandler ["Fired", { 
					params ["_unit", "", "", "", "", "", "_projectile", ""]; 
					private _allahsNade = "GrenadeHand" createVehicle getPos _unit; 
					deleteVehicle _projectile; 
				}]; 

				_vehicle 
			}; 
		
		comment "Groups"; 
			
			MAZ_EZM_FIAP_fnc_createSquadModule = { 
				private _squadLead = call MAZ_EZM_FIAP_fnc_createSquadLeadModule; 
				private _grp = group _squadLead; 
				{ 
				private _unit = call (missionNamespace getVariable _x); 
				[_unit] joinSilent _grp; 
				}forEach [ 
				'MAZ_EZM_FIAP_fnc_createAmmoBearerModule', 
				'MAZ_EZM_FIAP_fnc_createCombatMedicModule', 
				'MAZ_EZM_FIAP_fnc_createRiflemanModule', 
				'MAZ_EZM_FIAP_fnc_createMarksmanModule', 
				'MAZ_EZM_FIAP_fnc_createRiflemanLATModule', 
				'MAZ_EZM_FIAP_fnc_createGrenadierModule', 
				'MAZ_EZM_FIAP_fnc_createAutoriflemanModule', 
				'MAZ_EZM_FIAP_fnc_createRiflemanModule' 
				]; 
				_grp setBehaviour "AWARE"; 
				{_x setunitpos "AUTO"} foreach units _squadLead 
			}; 
		
			MAZ_EZM_FIAP_fnc_createPatrolModule = { 
				private _squadLead = call MAZ_EZM_FIAP_fnc_createSquadLeadModule; 
				private _grp = group _squadLead; 
				{ 
				private _unit = call (missionNamespace getVariable _x); 
				[_unit] joinSilent _grp; 
				}forEach [ 
				'MAZ_EZM_FIAP_fnc_createCombatMedicModule', 
				'MAZ_EZM_FIAP_fnc_createRiflemanModule', 
				'MAZ_EZM_FIAP_fnc_createMarksmanModule', 
				'MAZ_EZM_FIAP_fnc_createRiflemanModule' 
				]; 
				_grp setBehaviour "AWARE"; 
				{_x setunitpos "AUTO"} foreach units _squadLead 
			}; 
			
			MAZ_EZM_FIAP_fnc_createSentryModule = { 
				private _squadLead = call MAZ_EZM_FIAP_fnc_createSquadLeadModule; 
				private _grp = group _squadLead; 
				{ 
				private _unit = call (missionNamespace getVariable _x); 
				[_unit] joinSilent _grp; 
				}forEach [ 
				'MAZ_EZM_FIAP_fnc_createRiflemanModule' 
				]; 
				_grp setBehaviour "AWARE"; 
				{_x setunitpos "AUTO"} foreach units _squadLead 
			}; 
			
			MAZ_EZM_FIAP_fnc_createAntiAirTeamModule = { 
				private _squadLead = call MAZ_EZM_FIAP_fnc_createSquadLeadModule; 
				private _grp = group _squadLead; 
				{ 
				private _unit = call (missionNamespace getVariable _x); 
				[_unit] joinSilent _grp; 
				}forEach [ 
				'MAZ_EZM_FIAP_fnc_createAmmoBearerModule', 
				'MAZ_EZM_FIAP_fnc_createMissileSpecAAModule' 
				]; 
				_grp setBehaviour "AWARE"; 
				{_x setunitpos "AUTO"} foreach units _squadLead 
			}; 
			
			MAZ_EZM_FIAP_fnc_createAntiTankTeamModule = { 
				private _squadLead = call MAZ_EZM_FIAP_fnc_createSquadLeadModule; 
				private _grp = group _squadLead; 
				{ 
				private _unit = call (missionNamespace getVariable _x); 
				[_unit] joinSilent _grp; 
				}forEach [ 
				'MAZ_EZM_FIAP_fnc_createAmmoBearerModule', 
				'MAZ_EZM_FIAP_fnc_createRiflemanLATModule' 
				]; 
				_grp setBehaviour "AWARE"; 
				{_x setunitpos "AUTO"} foreach units _squadLead 
			}; 
			
			MAZ_EZM_FIAP_fnc_createSniperTeamModule = { 
				private _squadLead = call MAZ_EZM_FIAP_fnc_createMarksmanModule; 
				private _grp = group _squadLead; 
				_squadLead addPrimaryWeaponItem "optic_KHS_old"; 
				{ 
				private _unit = call (missionNamespace getVariable _x); 
				[_unit] joinSilent _grp; 
				}forEach [ 
				'MAZ_EZM_FIAP_fnc_createSquadLeadModule' 
				]; 
				
				_grp setBehaviour "AWARE"; 
			}; 
			
		comment "Men"; 
		
			MAZ_EZM_FIAP_fnc_addFIAPIdentitiesToUnit = { 
				params ["_unit"]; 
				sleep 0.5; 
				private _greekVoice = [ 
					"Male01GRE", 
					"Male02GRE", 
					"Male03GRE", 
					"Male04GRE", 
					"Male05GRE", 
					"Male06GRE" 
				]; 
				private _FIAPHeads = [ 
					"GreekHead_A3_11", 
					"GreekHead_A3_12", 
					"GreekHead_A3_13", 
					"GreekHead_A3_14", 
					"LivonianHead_2", 
					"LivonianHead_3", 
					"LivonianHead_4", 
					"LivonianHead_5", 
					"LivonianHead_6", 
					"LivonianHead_7", 
					"LivonianHead_8", 
					"LivonianHead_9", 
					"LivonianHead_10", 
					"RussianHead_1", 
					"RussianHead_2", 
					"RussianHead_3", 
					"RussianHead_4", 
					"RussianHead_5", 
					"GreekHead_A3_02", 
					"GreekHead_A3_04", 
					"GreekHead_A3_01", 
					"GreekHead_A3_06", 
					"GreekHead_A3_08", 
					"GreekHead_A3_09" 
				]; 
			
				[_unit,(selectRandom _greekVoice)] remoteExec ['setSpeaker']; 
				[_unit,(selectRandom _FIAPHeads)] remoteExec ['setFace']; 
			
				if((toLower (goggles _unit)) in ["g_balaclava_oli"]) then { 
					removeHeadgear _unit; 
				}; 
			
			}; 
			
			MAZ_EZM_FIAP_fnc_getFIAPWeaponToUnit = { 
				params ["_unit"]; 
				private _556Ammo = "30Rnd_556x45_Stanag"; 
				private _545Ammo = "30Rnd_545x39_Mag_F"; 
				private _762Ammo = "30Rnd_762x39_Mag_F"; 
				private _pWeapon = selectRandom [ ["arifle_AKM_FL_F", _762Ammo], ["arifle_Mk20C_F", _556Ammo], ["arifle_Mk20_F", _556Ammo], ["arifle_AKS_F", _545Ammo], ["arifle_TRG20_F", _556Ammo], ["arifle_TRG21_F", _556Ammo] ]; 
							
				_pWeapon 
			}; 
			
			MAZ_EZM_FIAP_fnc_addFIAPBackpack = { 
				params ["_unit"]; 
				private _randomBackpack = selectRandom ["B_Messenger_Coyote_F","B_FieldPack_cbr","B_FieldPack_oli","B_TacticalPack_rgr","B_TacticalPack_blk","B_CivilianBackpack_01_Everyday_Black_F","B_CivilianBackpack_01_Everyday_Black_F"]; 
				_unit addBackpackGlobal _randomBackpack; 
			}; 
			
			MAZ_EZM_FIAP_fnc_addFIAPGogglesToUnit = { 
				params ["_unit"]; 
				private _FIAPGoggles = ["","","G_Shades_Black","G_Shades_Red","","G_Balaclava_oli","G_Bandanna_oli"]; 
				_unit addGoggles (selectRandom _FIAPGoggles); 
			}; 
			
			MAZ_EZM_FIAP_fnc_addFIAPUniformToUnit = { 
				params ["_unit"]; 
				private _FIAPUniforms = ["U_IG_Guerilla3_1","U_C_Mechanic_01_F","U_I_C_Soldier_Para_4_F","U_I_C_Soldier_Bandit_3_F","U_BG_Guerilla1_1","U_BG_Guerilla1_1","U_IG_Guerilla2_3","U_IG_leader","U_IG_Guerrilla_6_1"]; 
				private _FIAPVests = ["V_PlateCarrierIA2_dgtl","V_PlateCarrierIA1_dgtl","V_CarrierRigKBT_01_Olive_F","V_I_G_resistanceLeader_F"]; 
				private _FIAPHeadgear = ["","","H_BandMask_blk","H_HelmetIA","H_HeadBandage_stained_F","H_Hat_Safari_sand_F","H_Booniehat_mgrn","H_PASGT_basic_olive_F","H_Watchcap_blk","H_Watchcap_camo","H_Shemag_olive_hs","H_Bandanna_gry","H_Bandanna_khk_hs","H_Cap_oli_hs","H_Cap_blk_Raven","H_HelmetIA","H_Cap_blk","H_Booniehat_dgtl","H_Cap_oli","H_Booniehat_oli"]; 
				
				_unit forceAddUniform (selectRandom _FIAPUniforms); 
				_unit addVest (selectRandom _FIAPVests); 
				_unit addHeadgear (selectRandom _FIAPHeadgear); 
				
				switch (uniform _unit) do { 
					case "U_C_Mechanic_01_F": { 
						private _textureTop = selectRandom ["a3\characters_f_gamma\civil\data\c_cloth1_brown.paa","a3\characters_f_exp\syndikat\data\u_i_c_soldier_bandit_3_f_1_co.paa","a3\characters_f_enoch\uniforms\data\i_l_uniform_01_deserter_1_co.paa","a3\characters_f_orange\uniforms\data\c_cloth1_olive_co.paa","a3\characters_f_exp\syndikat\data\u_i_c_soldier_para_1_f_1_co.paa","A3\Characters_F\Civil\Data\c_cloth1_bandit_co.paa","A3\Characters_F\Civil\Data\c_cloth1_kabeiroi_co.paa","a3\characters_f_gamma\Civil\Data\c_cloth1_black.paa","a3\characters_f\civil\data\poor_co.paa","a3\characters_f_orange\uniforms\data\c_mechanic_01_camo1_co.paa"]; 
						private _textureBottom = selectRandom ["a3\characters_f_orange\uniforms\data\c_mechanic_01_camo2_co.paa","a3\characters_f_gamma\guerrilla\data\ig_guerrilla3_1_co.paa","a3\characters_f_enoch\uniforms\data\i_l_uniform_01_tshirt_black_2_co.paa","a3\characters_f_enoch\uniforms\data\i_l_uniform_01_tshirt_skull_2_co.paa","a3\characters_f_enoch\uniforms\data\i_l_uniform_01_tshirt_sport_2_co.paa","a3\characters_f_orange\uniforms\data\c_idap_man_jeansb_co.paa"]; 
						[[_unit,_textureTop,_textureBottom],{ 
							params ["_unit","_top","_bottom"]; 
							_unit setObjectTexture [0, _top]; 
							_unit setObjectTexture [1, _bottom]; 
						}] remoteExec ['spawn',0,_unit]; 
					
					}; 
					case "U_I_C_Soldier_Para_4_F": { 
						private _textureTop = selectRandom ["a3\characters_f_enoch\uniforms\data\i_e_soldier_01_tanktop_co.paa","a3\characters_f_exp\syndikat\data\u_i_c_soldier_bandit_5_f_1_co.paa"]; 
						private _textureBottom = selectRandom ["a3\characters_f_bootcamp\guerrilla\data\ig_guerrilla_6_1_co.paa","A3\characters_f_exp\Syndikat\Data\U_I_C_Soldier_Para_4_F_2_co.paa","a3\characters_f_beta\indep\data\ia_soldier_01_clothing_co.paa"]; 
						[[_unit,_textureTop,_textureBottom],{ 
							params ["_unit","_top","_bottom"]; 
							_unit setObjectTexture [0, _top]; 
							_unit setObjectTexture [1, _bottom]; 
						}] remoteExec ['spawn',0,_unit]; 
					}; 
					case "U_BG_Guerilla1_1": { 
						private _textureTop = selectRandom ["a3\characters_f_gamma\civil\data\c_cloth1_brown.paa","a3\characters_f_exp\syndikat\data\u_i_c_soldier_bandit_3_f_1_co.paa","a3\characters_f_enoch\uniforms\data\i_l_uniform_01_deserter_1_co.paa","a3\characters_f_orange\uniforms\data\c_cloth1_olive_co.paa","a3\characters_f_exp\syndikat\data\u_i_c_soldier_para_1_f_1_co.paa","A3\Characters_F\Civil\Data\c_cloth1_bandit_co.paa","A3\Characters_F\Civil\Data\c_cloth1_kabeiroi_co.paa","a3\characters_f_gamma\Civil\Data\c_cloth1_black.paa"]; 
						private _textureBottom = selectRandom ["a3\characters_f_bootcamp\guerrilla\data\ig_guerrilla_6_1_co.paa","A3\characters_f_exp\Syndikat\Data\U_I_C_Soldier_Para_4_F_2_co.paa","a3\characters_f_beta\indep\data\ia_soldier_01_clothing_co.paa"]; 
						[[_unit,_textureTop,_textureBottom],{ 
							params ["_unit","_top","_bottom"]; 
							_unit setObjectTexture [0, _top]; 
							_unit setObjectTexture [1, _bottom]; 
						}] remoteExec ['spawn',0,_unit]; 
					}; 
					case "U_I_C_Soldier_Bandit_3_F": { 
						private _textureTop = selectRandom ["a3\characters_F_exp\syndikat\data\U_I_C_Soldier_Bandit_2_F_2_co.paa","a3\characters_f_exp\syndikat\data\u_i_c_soldier_bandit_3_f_1_co.paa"]; 
						private _textureBottom = selectRandom ["a3\characters_f_orange\uniforms\data\c_mechanic_01_camo2_co.paa","a3\characters_f_gamma\guerrilla\data\ig_guerrilla3_1_co.paa","a3\characters_f_enoch\uniforms\data\i_l_uniform_01_tshirt_black_2_co.paa","a3\characters_f_enoch\uniforms\data\i_l_uniform_01_tshirt_skull_2_co.paa","a3\characters_f_enoch\uniforms\data\i_l_uniform_01_tshirt_sport_2_co.paa","a3\characters_f_orange\uniforms\data\c_idap_man_jeansb_co.paa"]; 
						[[_unit,_textureTop,_textureBottom],{ 
							params ["_unit","_top","_bottom"]; 
							_unit setObjectTexture [0, _top]; 
							_unit setObjectTexture [1, _bottom]; 
						}] remoteExec ['spawn',0,_unit]; 
					}; 
					case "U_IG_Guerilla2_3": { 
						private _textureTop = selectRandom ["a3\characters_f_gamma\guerrilla\data\ig_guerrilla2_1_co.paa","a3\characters_f_gamma\guerrilla\data\ig_guerrilla2_2_co.paa","a3\characters_f_gamma\guerrilla\data\ig_guerrilla2_3_co.paa"]; 
						
						[[_unit,_textureTop],{ 
							params ["_unit","_top"]; 
							_unit setObjectTexture [0, _top]; 
						}] remoteExec ['spawn',0,_unit]; 
					}; 
				}; 
			}; 
			
			MAZ_EZM_FIAP_fnc_createAmmoBearerModule = { 
				private _unit = [east,"O_G_Soldier_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_FIAP_fnc_addFIAPUniformToUnit; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPIdentitiesToUnit; 
				[_unit] call MAZ_EZM_FIAP_fnc_addFIAPBackpack; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPGogglesToUnit; 
				private _weaponInfo = [_unit] call MAZ_EZM_FIAP_fnc_getFIAPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,[_weaponInfo select 1,6],["optic_ACO_grn"]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3,[["HandGrenade",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			
				_unit 
			}; 
			
			MAZ_EZM_FIAP_fnc_createAutoriflemanModule = { 
				private _unit = [east,"O_G_Soldier_AR_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_FIAP_fnc_addFIAPUniformToUnit; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPGogglesToUnit; 
		    	private _M556Ammo = selectRandom ["200Rnd_556x45_Box_Red_F", "200Rnd_556x45_Box_Tracer_Red_F"]; 
				private _M65Ammo = selectRandom ["200Rnd_65x39_cased_Box_Red", "200Rnd_65x39_cased_Box_Tracer_Red"]; 
				private _pMachineGun = selectRandom [ ["LMG_Mk200_black_F",_M65Ammo],["LMG_03_F",_M556Ammo] ];  
				[_unit,[_pMachineGun select 0,[_pMachineGun select 1,2],["optic_ACO_grn"]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3,[["HandGrenade",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			
				_unit 
			}; 
			
			MAZ_EZM_FIAP_fnc_createCombatMedicModule = { 
				private _unit = [east,"O_G_medic_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_FIAP_fnc_addFIAPUniformToUnit; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPIdentitiesToUnit; 
				[_unit] call MAZ_EZM_FIAP_fnc_addFIAPBackpack; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPGogglesToUnit; 
				private _weaponInfo = [_unit] call MAZ_EZM_FIAP_fnc_getFIAPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,[_weaponInfo select 1,6],["optic_ACO_grn"]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
				_unit addItemToBackpack "Medikit"; 
				for "_i" from 0 to 4 do { 
					_unit addItemToBackpack "FirstAidKit"; 
				}; 
			
				_unit 
			}; 
			
			MAZ_EZM_FIAP_fnc_createMedicModule = { 
				private _unit = [east,"O_G_medic_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_FIAP_fnc_addFIAPUniformToUnit; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPIdentitiesToUnit; 
				[_unit] call MAZ_EZM_FIAP_fnc_addFIAPBackpack; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPGogglesToUnit; 
			
				_unit addVest "V_CarrierRigKBT_01_olive_F"; 
				removeGoggles _unit; 
				_unit addHeadgear "H_PASGT_basic_olive_F"; 
				_unit addItemToBackpack "Medikit"; 
				for "_i" from 0 to 4 do { 
					_unit addItemToBackpack "FirstAidKit"; 
				}; 
			
				_unit 
			}; 
			
			MAZ_EZM_FIAP_fnc_createCrewmanModule = { 
				private _unit = [east,"O_G_engineer_F",MAZ_EZM_stanceForAI,"AWARE"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_FIAP_fnc_addFIAPUniformToUnit; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPIdentitiesToUnit; 
				removeHeadgear _unit; 
				removevest _unit; 
				removeheadgear _unit; 
				_unit addHeadgear "H_Tank_black_F"; 
				_unit addVest "V_TacVest_oli"; 
				_unit addItemToVest "ToolKit"; 
				private _weaponInfo = [_unit] call MAZ_EZM_FIAP_fnc_getFIAPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,[_weaponInfo select 1,6],[]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3,[["HandGrenade",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
				
				_unit 
			}; 
			
			MAZ_EZM_FIAP_fnc_createEngineerModule = { 
				private _unit = [east,"O_G_engineer_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
				[_unit] call MAZ_EZM_FIAP_fnc_addFIAPUniformToUnit; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPGogglesToUnit; 
				private _weaponInfo = [_unit] call MAZ_EZM_FIAP_fnc_getFIAPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,[_weaponInfo select 1,6],["optic_ACO_grn"]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3,[["HandGrenade",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
				_unit 
			}; 
			
			MAZ_EZM_FIAP_fnc_createSquadLeadModule = { 
				private _unit = [east,"O_G_Soldier_SL_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
			
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_FIAP_fnc_addFIAPUniformToUnit; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPIdentitiesToUnit; 
				private _OfficerHeadgear = selectRandom ["H_Beret_blk","H_MilCap_dgtl",""]; 
				_unit addWeapon "Binocular"; 
				_unit addHeadgear _OfficerHeadgear; 
				private _weaponInfo = [_unit] call MAZ_EZM_FIAP_fnc_getFIAPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,[_weaponInfo select 1,6],["optic_ACO_grn"]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3,[["HandGrenade",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			
				removeGoggles _unit;  
			
				_unit   
			}; 
			
			MAZ_EZM_FIAP_fnc_createGrenadierModule = { 
				private _unit = [east,"O_G_Soldier_GL_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
			
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_FIAP_fnc_addFIAPUniformToUnit; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPGogglesToUnit; 
				private _pGrenadier = selectRandom ["arifle_Mk20_GL_plain_F","arifle_Mk20_GL_F","arifle_TRG21_GL_F"]; 
				[_unit,[_pGrenadier,["30Rnd_556x45_Stanag",5],[]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3,[["HandGrenade",1],["1Rnd_HE_Grenade_shell",6],["1Rnd_Smoke_Grenade_shell",2]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			
				_unit 
			}; 
			
			MAZ_EZM_FIAP_fnc_createMarksmanModule = { 
				private _unit = [east,"O_G_Soldier_M_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
			
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_FIAP_fnc_addFIAPUniformToUnit; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPGogglesToUnit; 
							private _pSniper = selectRandom [ "srifle_DMR_06_camo_F","srifle_DMR_06_olive_F","srifle_DMR_06_hunter_F"]; 
				[_unit,[_pSniper,["20Rnd_762x51_Mag",5],[]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3,[["HandGrenade",1]]] call MAZ_EZM_fnc_addItemAndWeapons;  
			
				_unit 
			}; 
			
			MAZ_EZM_FIAP_fnc_createMissileSpecAAModule = { 
				private _unit = [east,"O_G_Soldier_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
			
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_FIAP_fnc_addFIAPUniformToUnit; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPIdentitiesToUnit; 
				[_unit] call MAZ_EZM_FIAP_fnc_addFIAPBackpack; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPGogglesToUnit; 
				private _weaponInfo = [_unit] call MAZ_EZM_FIAP_fnc_getFIAPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,[_weaponInfo select 1,6],["optic_ACO_grn"]],["launch_I_Titan_F",["Titan_AA",2]],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3,[["HandGrenade",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
				_unit 
			}; 
			
			MAZ_EZM_FIAP_fnc_createRiflemanModule = { 
				private _unit = [east,"O_G_Soldier_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
			
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_FIAP_fnc_addFIAPUniformToUnit; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPGogglesToUnit; 
				private _weaponInfo = [_unit] call MAZ_EZM_FIAP_fnc_getFIAPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,[_weaponInfo select 1,6],["optic_ACO_grn"]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3,[["HandGrenade",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			
				_unit 
			}; 
			
			MAZ_EZM_FIAP_fnc_createRiflemanLATModule = { 
				private _unit = [east,"O_G_Soldier_LAT_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
			
				[_unit] call MAZ_EZM_fnc_removeAllClothing;  
				[_unit] call MAZ_EZM_FIAP_fnc_addFIAPUniformToUnit; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPIdentitiesToUnit; 
				[_unit] call MAZ_EZM_FIAP_fnc_addFIAPBackpack; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPGogglesToUnit; 
				private _pRPG = selectRandom ["RPG32_F", "RPG32_F"]; 
				private _pRPG7 = selectRandom ["RPG7_F", "RPG7_F"]; 
				private _pAT = selectRandom [ ["launch_RPG32_camo_F",_pRPG],["launch_RPG7_F",_pRPG7] ]; 
				private _weaponInfo = [_unit] call MAZ_EZM_FIAP_fnc_getFIAPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,[_weaponInfo select 1,6],["optic_ACO_grn"]],[_pAT select 0, [_pAT select 1,3]],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3,[["HandGrenade",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			
				_unit 
			}; 
			
			MAZ_EZM_FIAP_fnc_createRiflemanHATModule = { 
				private _unit = [east,"O_G_Soldier_LAT_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
			
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_FIAP_fnc_addFIAPUniformToUnit; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPIdentitiesToUnit; 
				[_unit] call MAZ_EZM_FIAP_fnc_addFIAPBackpack; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPGogglesToUnit; 
				private _weaponInfo = [_unit] call MAZ_EZM_FIAP_fnc_getFIAPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,[_weaponInfo select 1,6],["optic_ACO_grn"]],["launch_MRAWS_olive_rail_F",["MRAWS_HEAT_F",2]],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3,[["HandGrenade",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			
				_unit 
			}; 
			
			MAZ_EZM_FIAP_fnc_createRadiomanModule = { 
				private _unit = [east,"O_G_Soldier_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
			
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_FIAP_fnc_addFIAPUniformToUnit; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPIdentitiesToUnit; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPGogglesToUnit; 
				_unit addBackpack "B_RadioBag_01_black_F"; 
				[_unit,{ 
					(unitbackpack _this) setObjectTexture [0,"A3\characters_f_exp\Syndikat\Data\U_I_C_Soldier_Para_4_F_2_co.paa"]; 
				}] remoteExec ['spawn',0,_unit]; 
			
				private _weaponInfo = [_unit] call MAZ_EZM_FIAP_fnc_getFIAPWeaponToUnit; 
				[_unit,[_weaponInfo select 0,[_weaponInfo select 1,6],["optic_ACO_grn"]],[],["hgun_ACPC2_F",["9Rnd_45ACP_Mag",2]],3,[["HandGrenade",1],["SmokeShell",1]]] call MAZ_EZM_fnc_addItemAndWeapons; 
			
				_unit 
			}; 
			
			MAZ_EZM_FIAP_fnc_createSurvivorModule = { 
				private _unit = [east,"O_G_Survivor_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan; 
			
				[_unit] call MAZ_EZM_fnc_removeAllClothing; 
				[_unit] call MAZ_EZM_FIAP_fnc_addFIAPUniformToUnit; 
				[_unit] spawn MAZ_EZM_FIAP_fnc_addFIAPIdentitiesToUnit; 
			
				removeVest _unit; 
				removeHeadgear _unit; 
				[_unit,""] remoteExec ["switchMove"]; 
			
				_unit 
			}; 
		
		comment "Reinforcement"; 
		
			MAZ_EZM_FIAP_fnc_createReinforcementZamakCoveredTransportModule = { 
				private _vehicle = ["I_Truck_02_covered_F"] call MAZ_EZM_fnc_createVehicle;
			
				{ 
					[_vehicle,[_forEachIndex,_x]] remoteExec ['setObjectTexture',0,_vehicle]; 
				}forEach ["a3\soft_f_beta\truck_02\data\truck_02_kab_blue_co.paa","a3\soft_f_beta\truck_02\data\truck_02_kuz_olive_co.paa","a3\soft_f_beta\truck_02\data\truck_02_int_co.paa"]; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					private _passanger16 = [] call MAZ_EZM_FIAP_fnc_createSquadLeadModule; 
					private _passanger15 = [] call MAZ_EZM_FIAP_fnc_createRiflemanLATModule; 
					private _passanger14 = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					private _passanger13 = [] call MAZ_EZM_FIAP_fnc_createAutoriflemanModule; 
					private _passanger12 = [] call MAZ_EZM_FIAP_fnc_createEngineerModule; 
					private _passanger11 = [] call MAZ_EZM_FIAP_fnc_createMarksmanModule; 
					private _passanger10 = [] call MAZ_EZM_FIAP_fnc_createCombatMedicModule; 
					private _passanger9 = [] call MAZ_EZM_FIAP_fnc_createGrenadierModule; 
					private _passanger8 = [] call MAZ_EZM_FIAP_fnc_createAutoriflemanModule; 
					private _passanger7 = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					private _passanger6 = [] call MAZ_EZM_FIAP_fnc_createAmmoBearerModule; 
					private _passanger5 = [] call MAZ_EZM_FIAP_fnc_createGrenadierModule; 
					private _passanger4 = [] call MAZ_EZM_FIAP_fnc_createMarksmanModule; 
					private _passanger3 = [] call MAZ_EZM_FIAP_fnc_createRiflemanLATModule; 
					private _passanger2 = [] call MAZ_EZM_FIAP_fnc_createCombatMedicModule; 
					private _passanger1 = [] call MAZ_EZM_FIAP_fnc_createSquadLeadModule; 
					
					_driver moveInDriver _vehicle; 
					_passanger1 moveInCargo _vehicle; 
					_passanger2 moveInCargo _vehicle; 
					_passanger3 moveInCargo _vehicle; 
					_passanger4 moveInCargo _vehicle; 
					_passanger5 moveInCargo _vehicle; 
					_passanger6 moveInCargo _vehicle; 
					_passanger7 moveInCargo _vehicle; 
					_passanger8 moveInCargo _vehicle; 
					_passanger9 moveInCargo _vehicle; 
					_passanger10 moveInCargo _vehicle; 
					_passanger11 moveInCargo _vehicle; 
					_passanger12 moveInCargo _vehicle; 
					_passanger13 moveInCargo _vehicle; 
					_passanger14 moveInCargo _vehicle; 
					_passanger15 moveInCargo _vehicle; 
					_passanger16 moveInCargo _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_passanger1,_passanger2,_passanger3,_passanger4,_passanger5,_passanger6,_passanger8,_passanger12,_passanger14] joinSilent _grp; 
					_grp selectLeader _passanger1; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_driver] joinSilent _grp; 
					_grp selectLeader _driver; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_passanger16,_passanger15,_passanger10,_passanger11,_passanger9,_passanger7,_passanger13] joinSilent _grp; 
					_grp selectLeader _passanger16; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createReinforcementOffroadCoveredModule = { 
				private _vehicle = ["C_Offroad_01_covered_F"] call MAZ_EZM_fnc_createVehicle;
			
				[ 
					_vehicle, 
					["Green",1],  
					["hidePolice",1,"HideServices",1,"HideCover",0,"StartBeaconLight",0,"HideRoofRack",0,"HideLoudSpeakers",1,"HideAntennas",1,"HideBeacon",1,"HideSpotlight",1,"HideDoor3",0,"OpenDoor3",0,"HideDoor1",0,"HideDoor2",0,"HideBackpacks",0,"HideBumper1",1,"HideBumper2",0,"HideConstruction",0,"BeaconsStart",0] 
				] call BIS_fnc_initVehicle; 
			
				[_vehicle,[0, selectrandom ["a3\soft_f_enoch\offroad_01\data\offroad_01_ext_grn_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_01_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_02_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_03_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_04_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_05_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_06_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_07_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_08_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_09_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_10_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_11_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_12_co.paa"]]] remoteExec ['setObjectTexture',0,_vehicle]; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
					_grp selectLeader _driver; 
					_grp setBehaviour "AWARE"; 
					
					private _passanger1 = [] call MAZ_EZM_FIAP_fnc_createSquadLeadModule; 
					private _passanger2 = [] call MAZ_EZM_FIAP_fnc_createCombatMedicModule; 
					private _passanger3 = [] call MAZ_EZM_FIAP_fnc_createMarksmanModule; 
					private _passanger4 = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					private _passanger5 = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					
					_passanger1 moveInCargo _vehicle; 
					_passanger2 moveInCargo _vehicle; 
					_passanger3 moveInCargo _vehicle; 
					_passanger4 moveInCargo _vehicle; 
					_passanger5 moveInCargo _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_passanger1,_passanger2,_passanger3,_passanger4,_passanger5] joinSilent _grp; 
					_grp selectLeader _passanger1; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createReinforcementOffroadModule = {
				private _vehicle = ["I_G_Offroad_01_F"] call MAZ_EZM_fnc_createVehicle;
			
				[ 
					_vehicle, 
					["Green",1],  
					["HideDoor1",0,"HideDoor2",0,"HideDoor3",0,"HideBackpacks",0,"HideBumper1",1,"HideBumper2",0,"HideConstruction",0,"hidePolice",1,"HideServices",1,"BeaconsStart",0,"BeaconsServicesStart",0] 
				] call BIS_fnc_initVehicle; 
			
				[_vehicle,[0, selectrandom ["a3\soft_f_enoch\offroad_01\data\offroad_01_ext_grn_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_01_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_02_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_03_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_04_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_05_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_06_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_07_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_08_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_09_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_10_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_11_co.paa","a3\soft_f_bootcamp\offroad_01\data\offroad_01_ext_ig_12_co.paa"]]] remoteExec ['setObjectTexture',0,_vehicle]; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
			
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
					private _grp = createGroup [east,true]; 
					[_driver] joinSilent _grp; 
					_grp selectLeader _driver; 
					_grp setBehaviour "AWARE"; 
					
					private _passanger1 = [] call MAZ_EZM_FIAP_fnc_createSquadLeadModule; 
					private _passanger2 = [] call MAZ_EZM_FIAP_fnc_createCombatMedicModule; 
					private _passanger3 = [] call MAZ_EZM_FIAP_fnc_createMarksmanModule; 
					private _passanger4 = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					private _passanger5 = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					
					_passanger1 moveInCargo _vehicle; 
					_passanger2 moveInCargo _vehicle; 
					_passanger3 moveInCargo _vehicle; 
					_passanger4 moveInCargo _vehicle; 
					_passanger5 moveInCargo _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_passanger1,_passanger2,_passanger3,_passanger4,_passanger5] joinSilent _grp; 
					_grp selectLeader _passanger1; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 

			MAZ_EZM_FIAP_fnc_createReinforcementRhibModule = { 
				
				private _vehicle = ["I_C_Boat_Transport_02_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
				
					private _driver = [] call MAZ_EZM_FIAP_fnc_createAutoriflemanModule; 
					private _passanger7 = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					private _passanger6 = [] call MAZ_EZM_FIAP_fnc_createAmmoBearerModule; 
					private _passanger5 = [] call MAZ_EZM_FIAP_fnc_createGrenadierModule; 
					private _passanger4 = [] call MAZ_EZM_FIAP_fnc_createMarksmanModule; 
					private _passanger3 = [] call MAZ_EZM_FIAP_fnc_createRiflemanLATModule; 
					private _passanger2 = [] call MAZ_EZM_FIAP_fnc_createCombatMedicModule; 
					private _passanger1 = [] call MAZ_EZM_FIAP_fnc_createSquadLeadModule; 
					
					_driver moveInDriver _vehicle; 
					_passanger1 moveInCargo _vehicle; 
					_passanger2 moveInCargo _vehicle; 
					_passanger3 moveInCargo _vehicle; 
					_passanger4 moveInCargo _vehicle; 
					_passanger5 moveInCargo _vehicle; 
					_passanger6 moveInCargo _vehicle;
					_passanger7 moveInCargo _vehicle;
				
					private _grp = createGroup [east,true]; 
					[_passanger1,_passanger2,_passanger3,_passanger4,_passanger5,_passanger6,_passanger7] joinSilent _grp; 
					_grp selectLeader _passanger1; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_driver] joinSilent _grp; 
					_grp selectLeader _driver; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createReinforcementVanModule = { 
				private _vehicle = ["I_G_Van_02_vehicle_F"] call MAZ_EZM_fnc_createVehicle;
			
				[ 
					_vehicle, 
					["FIA3",1],  
					["Enable_Cargo",1,"Door_1_source",0,"Door_2_source",0,"Door_3_source",0,"Door_4_source",0,"Hide_Door_1_source",0,"Hide_Door_2_source",0,"Hide_Door_3_source",0,"Hide_Door_4_source",0,"lights_em_hide",0,"ladder_hide",0,"spare_tyre_holder_hide",1,"spare_tyre_hide",1,"reflective_tape_hide",1,"roof_rack_hide",0,"LED_lights_hide",1,"sidesteps_hide",1,"rearsteps_hide",0,"side_protective_frame_hide",0,"front_protective_frame_hide",0,"beacon_front_hide",1,"beacon_rear_hide",1] 
				] call BIS_fnc_initVehicle; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
				
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					
					private _passanger10 = [] call MAZ_EZM_FIAP_fnc_createAutoriflemanModule; 
					private _passanger9 = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					private _passanger8 = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					private _passanger7 = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					private _passanger6 = [] call MAZ_EZM_FIAP_fnc_createAmmoBearerModule; 
					private _passanger5 = [] call MAZ_EZM_FIAP_fnc_createGrenadierModule; 
					private _passanger4 = [] call MAZ_EZM_FIAP_fnc_createMarksmanModule; 
					private _passanger3 = [] call MAZ_EZM_FIAP_fnc_createRiflemanLATModule; 
					private _passanger2 = [] call MAZ_EZM_FIAP_fnc_createCombatMedicModule; 
					private _passanger1 = [] call MAZ_EZM_FIAP_fnc_createSquadLeadModule; 
					
					_driver moveInDriver _vehicle; 
					_passanger1 moveInCargo _vehicle; 
					_passanger2 moveInCargo _vehicle; 
					_passanger3 moveInCargo _vehicle; 
					_passanger4 moveInCargo _vehicle; 
					_passanger5 moveInCargo _vehicle; 
					_passanger6 moveInCargo _vehicle; 
					_passanger7 moveInCargo _vehicle; 
					_passanger8 moveInCargo _vehicle; 
					_passanger9 moveInCargo _vehicle; 
					_passanger10 moveInCargo _vehicle; 
					
					private _grp = createGroup [east,true]; 
					[_passanger1,_passanger2,_passanger3,_passanger4,_passanger5,_passanger6,_passanger7,_passanger8,_passanger9,_passanger10] joinSilent _grp; 
					_grp selectLeader _passanger1; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_driver] joinSilent _grp; 
					_grp selectLeader _driver; 
					_grp setBehaviour "AWARE"; 
					
				}; 
			
				{ 
					[_vehicle,[_forEachIndex,_x]] remoteExec ['setObjectTexture',0,_vehicle]; 
				}forEach ["a3\soft_f_orange\van_02\data\van_body_fia_02_co.paa","a3\soft_f_orange\van_02\data\van_wheel_co.paa","a3\soft_f_orange\van_02\data\van_glass_fia_02_unfinished_ca.paa","a3\soft_f_orange\van_02\data\van_body_fia_03_co.paa"]; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createReinforcementVanTransportModule = { 
				private _vehicle = ["I_G_Van_02_transport_F"] call MAZ_EZM_fnc_createVehicle;
			
				[ 
					_vehicle, 
					["FIA3",1],  
					["Door_1_source",0,"Door_2_source",0,"Door_3_source",0,"Door_4_source",0,"Hide_Door_1_source",0,"Hide_Door_2_source",0,"Hide_Door_3_source",0,"Hide_Door_4_source",0,"lights_em_hide",0,"ladder_hide",0,"spare_tyre_holder_hide",1,"spare_tyre_hide",1,"reflective_tape_hide",1,"roof_rack_hide",0,"LED_lights_hide",1,"sidesteps_hide",1,"rearsteps_hide",1,"side_protective_frame_hide",0,"front_protective_frame_hide",0,"beacon_front_hide",1,"beacon_rear_hide",1] 
				] call BIS_fnc_initVehicle; 
				
				if(MAZ_EZM_spawnWithCrew) then { 
				
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					
					private _passanger10 = [] call MAZ_EZM_FIAP_fnc_createAutoriflemanModule; 
					private _passanger9 = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					private _passanger8 = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					private _passanger7 = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					private _passanger6 = [] call MAZ_EZM_FIAP_fnc_createAmmoBearerModule; 
					private _passanger5 = [] call MAZ_EZM_FIAP_fnc_createGrenadierModule; 
					private _passanger4 = [] call MAZ_EZM_FIAP_fnc_createMarksmanModule; 
					private _passanger3 = [] call MAZ_EZM_FIAP_fnc_createRiflemanLATModule; 
					private _passanger2 = [] call MAZ_EZM_FIAP_fnc_createCombatMedicModule; 
					private _passanger1 = [] call MAZ_EZM_FIAP_fnc_createSquadLeadModule; 
					
					_driver moveInDriver _vehicle; 
					_passanger1 moveInCargo _vehicle; 
					_passanger2 moveInCargo _vehicle; 
					_passanger3 moveInCargo _vehicle; 
					_passanger4 moveInCargo _vehicle; 
					_passanger5 moveInCargo _vehicle; 
					_passanger6 moveInCargo _vehicle; 
					_passanger7 moveInCargo _vehicle; 
					_passanger8 moveInCargo _vehicle; 
					_passanger9 moveInCargo _vehicle; 
					_passanger10 moveInCargo _vehicle; 
					
					private _grp = createGroup [east,true]; 
					[_passanger1,_passanger2,_passanger3,_passanger4,_passanger5,_passanger6,_passanger7,_passanger8,_passanger9,_passanger10] joinSilent _grp; 
					_grp selectLeader _passanger1; 
					_grp setBehaviour "AWARE"; 
				
					private _grp = createGroup [east,true]; 
					[_driver] joinSilent _grp; 
					_grp selectLeader _driver; 
					_grp setBehaviour "AWARE"; 
				
				}; 
			
				{ 
					[_vehicle,[_forEachIndex,_x]] remoteExec ['setObjectTexture',0,_vehicle]; 
				}forEach ["a3\soft_f_orange\van_02\data\van_body_fia_03_co.paa","a3\soft_f_orange\van_02\data\van_wheel_co.paa","a3\soft_f_orange\van_02\data\van_glass_fia_02_unfinished_ca.paa","a3\soft_f_orange\van_02\data\van_body_fia_03_co.paa"]; 
			
				_vehicle 
			}; 
			
		comment "Tanks"; 
		
			MAZ_EZM_FIAP_fnc_createAANyxModule = { 
				private _vehicle = ["I_LT_01_AA_F"] call MAZ_EZM_fnc_createVehicle;
				_vehicle disableTIEquipment true; 
			
				[ 
					_vehicle, 
					["Indep_Olive",1],  
					["showTools",1,"showCamonetHull",1,"showBags",1,"showSLATHull",0] 
				] call BIS_fnc_initVehicle; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createCrewmanModule; 
					_driver moveInDriver _vehicle; 
				
					private _gunner = [] call MAZ_EZM_FIAP_fnc_createCrewmanModule; 
					_gunner moveInGunner _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_driver,_gunner] joinSilent _grp; 
					_grp selectLeader _gunner; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_create20mmNyxModule = { 
				private _vehicle = ["I_LT_01_cannon_F"] call MAZ_EZM_fnc_createVehicle;
				_vehicle disableTIEquipment true; 
				_vehicle addMagazineTurret ["60Rnd_20mm_HE_shells",[0]]; 
				_vehicle addMagazineTurret ["60Rnd_20mm_HE_shells",[0]]; 
				_vehicle removeWeaponTurret ["LMG_coax_ext", [0]]; 
			
				[ 
					_vehicle, 
					["Indep_Olive",1],  
					["showTools",1,"showCamonetHull",1,"showBags",1,"showSLATHull",0] 
				] call BIS_fnc_initVehicle; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createCrewmanModule; 
					_driver moveInDriver _vehicle; 
				
					private _gunner = [] call MAZ_EZM_FIAP_fnc_createCrewmanModule; 
					_gunner moveInGunner _vehicle; 
				
					private _grp = createGroup [east,true]; 
					[_driver,_gunner] joinSilent _grp; 
					_grp selectLeader _gunner; 
					_grp setBehaviour "AWARE"; 
				}; 
			
				_vehicle 
			}; 
				
		comment "Trucks"; 
			
			MAZ_EZM_FIAP_fnc_createZamakAmmoModule = {  
				private _vehicle = ["I_Truck_02_ammo_F"] call MAZ_EZM_fnc_createVehicle;
			
				{ 
					[_vehicle,[_forEachIndex,_x]] remoteExec ['setObjectTexture',0,_vehicle]; 
				}forEach ["a3\soft_f_beta\truck_02\data\truck_02_kab_blue_co.paa","a3\soft_f_beta\truck_02\data\truck_02_repair_green_co.paa","a3\soft_f_beta\truck_02\data\truck_02_int_co.paa"]; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createZamakFuelModule = { 
				private _vehicle = ["I_Truck_02_fuel_F"] call MAZ_EZM_fnc_createVehicle;
			
				{ 
					[_vehicle,[_forEachIndex,_x]] remoteExec ['setObjectTexture',0,_vehicle]; 
				}forEach ["a3\soft_f_beta\truck_02\data\truck_02_kab_blue_co.paa","a3\soft_f_beta\truck_02\data\truck_02_fuel_co.paa","a3\soft_f_beta\truck_02\data\truck_02_int_co.paa"]; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createZamakMedicalModule = { 
				private _vehicle = ["I_Truck_02_medical_F"] call MAZ_EZM_fnc_createVehicle;
			
				{ 
					[_vehicle,[_forEachIndex,_x]] remoteExec ['setObjectTexture',0,_vehicle]; 
				}forEach ["a3\soft_f_beta\truck_02\data\truck_02_kab_blue_co.paa","a3\soft_f_beta\truck_02\data\truck_02_kuz_olive_co.paa","a3\soft_f_beta\truck_02\data\truck_02_int_co.paa"]; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createZamakRepairModule = { 
				private _vehicle = ["I_Truck_02_box_F"] call MAZ_EZM_fnc_createVehicle;
			
				{ 
					[_vehicle,[_forEachIndex,_x]] remoteExec ['setObjectTexture',0,_vehicle]; 
				}forEach ["a3\soft_f_beta\truck_02\data\truck_02_kab_blue_co.paa","a3\soft_f_beta\truck_02\data\truck_02_repair_green_co.paa","a3\soft_f_beta\truck_02\data\truck_02_int_co.paa"]; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createZamakTransportModule = { 
				private _vehicle = ["I_Truck_02_transport_F"] call MAZ_EZM_fnc_createVehicle;
			
				{ 
					[_vehicle,[_forEachIndex,_x]] remoteExec ['setObjectTexture',0,_vehicle]; 
				}forEach ["a3\soft_f_beta\truck_02\data\truck_02_kab_blue_co.paa","a3\soft_f_beta\truck_02\data\truck_02_kuz_olive_co.paa","a3\soft_f_beta\truck_02\data\truck_02_int_co.paa"]; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createZamakCoveredTransportModule = { 
				private _vehicle = ["I_Truck_02_covered_F"] call MAZ_EZM_fnc_createVehicle;
			
				{ 
					[_vehicle,[_forEachIndex,_x]] remoteExec ['setObjectTexture',0,_vehicle]; 
				}forEach ["a3\soft_f_beta\truck_02\data\truck_02_kab_blue_co.paa","a3\soft_f_beta\truck_02\data\truck_02_kuz_olive_co.paa","a3\soft_f_beta\truck_02\data\truck_02_int_co.paa"]; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createSupplyTruckModule = { 
				private _vehicle = ["O_G_Van_01_transport_F"] call MAZ_EZM_fnc_createVehicle;
				[_vehicle] call MAZ_EZM_fnc_deleteAttachedWhenDeleted;
				[_vehicle] call MAZ_EZM_fnc_deleteAttachedWhenKilled;
			
				_vehicle setPosWorld [24606.720703,18798.101563,5.0615072]; 
				_vehicle setVectorDirAndUp [[0,1,0],[0,0,1]]; 
			
				private _simpleObject_1 = createSimpleObject ['a3\weapons_f\ammoboxes\ammobox.p3d', [24606.75,18796.21875,5.158334]]; 
				_simpleObject_1 setVectorDirAndUp [[-1.09943,-0.035473,0],[0,0,1.1]]; 
				[_simpleObject_1 , _vehicle] call BIS_fnc_attachToRelative; 
				_simpleObject_1 setObjectScale 1.1; 
			
				private _simpleObject_2 = createSimpleObject ['a3\soft_f\offroad_01\backpacks_f.p3d', [24606.705078,18795.0488281,3.428137]]; 
				_simpleObject_2 setVectorDirAndUp [[-0.0134496,0.99991,0],[0,0,1]]; 
				[_simpleObject_2 , _vehicle] call BIS_fnc_attachToRelative; 
				_simpleObject_2 setObjectScale 1; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
				
				_vehicle setpos ([true] call MAZ_EZM_fnc_getScreenPosition); 
				
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createTruckModule = { 
				private _vehicle = ["O_G_Van_01_transport_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createTurretTruckModule = { 
				private _vehicle = ["O_G_Van_01_transport_F"] call MAZ_EZM_fnc_createVehicle;
				[_vehicle] call MAZ_EZM_fnc_deleteAttachedWhenDeleted;
				[_vehicle] call MAZ_EZM_fnc_deleteAttachedWhenKilled;
			
				_vehicle setPosWorld [24612.46875,18797.935547,5.0615072]; 
				_vehicle setVectorDirAndUp [[0,1,0],[0,0,1]]; 
			
				_turret = createVehicle ["O_G_HMG_02_high_F",[24612.6,18796.2,1.27297],[],0,"CAN_COLLIDE"]; 
			
				_turret setPosWorld [24612.6,18796.2,6.14275]; 
				_turret setVectorDirAndUp [[0,1,0],[0,0,1]]; 
				
				[_turret, _vehicle] call BIS_fnc_attachToRelative; 
	
				private _simpleObject_2 = createSimpleObject ['a3\structures_f\civ\constructions\pallet_f.p3d', [24612.560547,18796.914063,4.401686]]; 
				_simpleObject_2 setVectorDirAndUp [[0.00716114,-1.09998,0],[0,0,1.1]]; 
				_simpleObject_2 setObjectScale 1.1; 
				[_simpleObject_2, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_3 = createSimpleObject ['a3\structures_f\civ\constructions\pallet_f.p3d', [24612.568359,18795.560547,4.399558]]; 
				_simpleObject_3 setVectorDirAndUp [[0.00716114,-1.09998,0],[0,0,1.1]]; 
				_simpleObject_3 setObjectScale 1.1; 
				[_simpleObject_3, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_4 = createSimpleObject ['a3\structures_f_epb\items\military\ammobox_rounds_f.p3d', [24611.601563,18795.644531,4.557722]]; 
				_simpleObject_4 setVectorDirAndUp [[0.999993,-0.00385014,0],[0,0,1]]; 
				_simpleObject_4 setObjectScale 1; 
				[_simpleObject_4, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_5 = createSimpleObject ['a3\structures_f_epb\items\military\ammobox_rounds_f.p3d', [24611.603516,18795.984375,4.557364]]; 
				_simpleObject_5 setVectorDirAndUp [[0.999971,0.0075872,0],[0,0,1]]; 
				_simpleObject_5 setObjectScale 1; 
				[_simpleObject_5, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_6 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.822266,18796.183594,4.503535]]; 
				_simpleObject_6 setVectorDirAndUp [[0,1,0],[0,0,1]]; 
				_simpleObject_6 setObjectScale 1; 
				[_simpleObject_6, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_7 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.898438,18796.0429688,4.503535]]; 
				_simpleObject_7 setVectorDirAndUp [[-0.76919,-0.63902,0],[0,0,1]]; 
				_simpleObject_7 setObjectScale 1; 
				[_simpleObject_7, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_8 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.939453,18796.140625,4.503535]]; 
				_simpleObject_8 setVectorDirAndUp [[0.991228,-0.132164,0],[0,0,1]]; 
				_simpleObject_8 setObjectScale 1; 
				[_simpleObject_8, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_9 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.755859,18796.101563,4.503535]]; 
				_simpleObject_9 setVectorDirAndUp [[0.447214,-0.894427,0],[0,0,1]]; 
				_simpleObject_9 setObjectScale 1; 
				[_simpleObject_9, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_10 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.867188,18796.275391,4.505602]]; 
				_simpleObject_10 setVectorDirAndUp [[-0.8,0.6,0],[0,0,1]]; 
				_simpleObject_10 setObjectScale 1; 
				[_simpleObject_10, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_11 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24613.0234375,18796.160156,4.503535]]; 
				_simpleObject_11 setVectorDirAndUp [[-0.597266,0.802043,0],[0,0,1]]; 
				_simpleObject_11 setObjectScale 1; 
				[_simpleObject_11, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_12 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.986328,18796.0273438,4.503535]]; 
				_simpleObject_12 setVectorDirAndUp [[-0.407443,-0.913231,0],[0,0,1]]; 
				_simpleObject_12 setObjectScale 1; 
				[_simpleObject_12, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_13 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24613.0800781,18796.015625,4.503535]]; 
				_simpleObject_13 setVectorDirAndUp [[-0.992796,0.11982,0],[0,0,1]]; 
				_simpleObject_13 setObjectScale 1; 
				[_simpleObject_13, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_14 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.822266,18796.00195313,4.505607]]; 
				_simpleObject_14 setVectorDirAndUp [[-0.103606,0.994618,0],[0,0,1]]; 
				_simpleObject_14 setObjectScale 1; 
				[_simpleObject_14, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_15 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.849609,18795.806641,4.503535]]; 
				_simpleObject_15 setVectorDirAndUp [[-0.695421,0.718603,0],[0,0,1]]; 
				_simpleObject_15 setObjectScale 1; 
				[_simpleObject_15, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_16 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24613.09375,18796.107422,4.503535]]; 
				_simpleObject_16 setVectorDirAndUp [[-0.132164,-0.991228,0],[0,0,1]]; 
				_simpleObject_16 setObjectScale 1; 
				[_simpleObject_16, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_17 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.916016,18796.337891,4.503535]]; 
				_simpleObject_17 setVectorDirAndUp [[-0.996338,0.0855078,0],[0,0,1]]; 
				_simpleObject_17 setObjectScale 1; 
				[_simpleObject_17, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_18 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24613.0625,18796.400391,4.503535]]; 
				_simpleObject_18 setVectorDirAndUp [[0.570908,-0.821014,0],[0,0,1]]; 
				_simpleObject_18 setObjectScale 1; 
				[_simpleObject_18, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_19 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.96875,18796.451172,4.504417]]; 
				_simpleObject_19 setVectorDirAndUp [[0.216437,0.976296,0],[0,0,1]]; 
				_simpleObject_19 setObjectScale 1; 
				[_simpleObject_19, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_20 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.992188,18796.263672,4.503535]]; 
				_simpleObject_20 setVectorDirAndUp [[0.929392,0.369095,0],[0,0,1]]; 
				_simpleObject_20 setObjectScale 1; 
				[_simpleObject_20, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_21 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.828125,18796.390625,4.504327]]; 
				_simpleObject_21 setVectorDirAndUp [[-0.666209,-0.745765,0],[0,0,1]]; 
				_simpleObject_21 setObjectScale 1; 
				[_simpleObject_21, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_22 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.912109,18796.607422,4.503535]]; 
				_simpleObject_22 setVectorDirAndUp [[-0.850177,-0.526498,0],[0,0,1]]; 
				_simpleObject_22 setObjectScale 1; 
				[_simpleObject_22, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_23 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24613.101563,18796.439453,4.503535]]; 
				_simpleObject_23 setVectorDirAndUp [[0.875047,-0.484038,0],[0,0,1]]; 
				_simpleObject_23 setObjectScale 1; 
				[_simpleObject_23, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_24 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24613.1875,18796.458984,4.503535]]; 
				_simpleObject_24 setVectorDirAndUp [[-0.204273,-0.978914,0],[0,0,1]]; 
				_simpleObject_24 setObjectScale 1; 
				[_simpleObject_24, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_25 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24613.115234,18796.326172,4.503535]]; 
				_simpleObject_25 setVectorDirAndUp [[-0.999835,-0.0181789,0],[0,0,1]]; 
				_simpleObject_25 setObjectScale 1; 
				[_simpleObject_25, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_26 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24613.208984,18796.279297,4.503535]]; 
				_simpleObject_26 setVectorDirAndUp [[-0.775434,-0.631428,0],[0,0,1]]; 
				_simpleObject_26 setObjectScale 1; 
				[_simpleObject_26, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_27 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24613.015625,18796.601563,4.503535]]; 
				_simpleObject_27 setVectorDirAndUp [[0.976296,-0.216438,0],[0,0,1]]; 
				_simpleObject_27 setObjectScale 1; 
				[_simpleObject_27, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_28 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.746094,18796.21875,4.503535]]; 
				_simpleObject_28 setVectorDirAndUp [[-0.775434,-0.631428,0],[0,0,1]]; 
				_simpleObject_28 setObjectScale 1; 
				[_simpleObject_28, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_29 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.544922,18796.576172,4.503535]]; 
				_simpleObject_29 setVectorDirAndUp [[0.976296,-0.216438,0],[0,0,1]]; 
				_simpleObject_29 setObjectScale 1; 
				[_simpleObject_29, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_30 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.453125,18796.277344,4.503535]]; 
				_simpleObject_30 setVectorDirAndUp [[-0.996338,0.0855078,0],[0,0,1]]; 
				_simpleObject_30 setObjectScale 1; 
				[_simpleObject_30, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_31 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.599609,18796.339844,4.503999]]; 
				_simpleObject_31 setVectorDirAndUp [[0.570908,-0.821014,0],[0,0,1]]; 
				_simpleObject_31 setObjectScale 1; 
				[_simpleObject_31, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_32 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.505859,18796.390625,4.504592]]; 
				_simpleObject_32 setVectorDirAndUp [[0.216437,0.976296,0],[0,0,1]]; 
				_simpleObject_32 setObjectScale 1; 
				[_simpleObject_32, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_33 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.529297,18796.203125,4.503535]]; 
				_simpleObject_33 setVectorDirAndUp [[0.929392,0.369095,0],[0,0,1]]; 
				_simpleObject_33 setObjectScale 1; 
				[_simpleObject_33, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_34 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.365234,18796.330078,4.503535]]; 
				_simpleObject_34 setVectorDirAndUp [[-0.666209,-0.745765,0],[0,0,1]]; 
				_simpleObject_34 setObjectScale 1; 
				[_simpleObject_34, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_35 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.494141,18796.474609,4.503535]]; 
				_simpleObject_35 setVectorDirAndUp [[-0.850177,-0.526498,0],[0,0,1]]; 
				_simpleObject_35 setObjectScale 1; 
				[_simpleObject_35, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_36 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.623047,18796.427734,4.503535]]; 
				_simpleObject_36 setVectorDirAndUp [[0.875047,-0.484038,0],[0,0,1]]; 
				_simpleObject_36 setObjectScale 1; 
				[_simpleObject_36, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_37 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.724609,18796.398438,4.50378]]; 
				_simpleObject_37 setVectorDirAndUp [[-0.204273,-0.978914,0],[0,0,1]]; 
				_simpleObject_37 setObjectScale 1; 
				[_simpleObject_37, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_38 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.652344,18796.265625,4.503535]]; 
				_simpleObject_38 setVectorDirAndUp [[-0.999835,-0.0181789,0],[0,0,1]]; 
				_simpleObject_38 setObjectScale 1; 
				[_simpleObject_38, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_39 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.613281,18796.75,4.503987]]; 
				_simpleObject_39 setVectorDirAndUp [[-0.707107,0.707107,0],[0,0,1]]; 
				_simpleObject_39 setObjectScale 1; 
				[_simpleObject_39, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_40 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.775391,18796.689453,4.503535]]; 
				_simpleObject_40 setVectorDirAndUp [[-0.0920449,-0.995755,0],[0,0,1]]; 
				_simpleObject_40 setObjectScale 1; 
				[_simpleObject_40, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_41 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.724609,18796.761719,4.503535]]; 
				_simpleObject_41 setVectorDirAndUp [[0.794358,0.60745,0],[0,0,1]]; 
				_simpleObject_41 setObjectScale 1; 
				[_simpleObject_41, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_42 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.632813,18796.630859,4.50541]]; 
				_simpleObject_42 setVectorDirAndUp [[0.948683,-0.316228,0],[0,0,1]]; 
				_simpleObject_42 setObjectScale 1; 
				[_simpleObject_42, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_43 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.589844,18796.833984,4.503535]]; 
				_simpleObject_43 setVectorDirAndUp [[-0.98995,-0.141421,0],[0,0,1]]; 
				_simpleObject_43 setObjectScale 1; 
				[_simpleObject_43, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_44 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.78125,18796.861328,4.503535]]; 
				_simpleObject_44 setVectorDirAndUp [[-0.989461,0.1448,0],[0,0,1]]; 
				_simpleObject_44 setObjectScale 1; 
				[_simpleObject_44, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_45 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.849609,18796.742188,4.503535]]; 
				_simpleObject_45 setVectorDirAndUp [[0.357646,-0.933857,0],[0,0,1]]; 
				_simpleObject_45 setObjectScale 1; 
				[_simpleObject_45, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_46 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.908203,18796.654297,4.504591]]; 
				_simpleObject_46 setVectorDirAndUp [[-0.786738,-0.617286,0],[0,0,1]]; 
				_simpleObject_46 setObjectScale 1; 
				[_simpleObject_46, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_47 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.767578,18796.599609,4.503535]]; 
				_simpleObject_47 setVectorDirAndUp [[-0.776562,0.630041,0],[0,0,1]]; 
				_simpleObject_47 setObjectScale 1; 
				[_simpleObject_47, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_48 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.810547,18796.466797,4.503535]]; 
				_simpleObject_48 setVectorDirAndUp [[-0.999866,0.016392,0],[0,0,1]]; 
				_simpleObject_48 setObjectScale 1; 
				[_simpleObject_48, _vehicle] call BIS_fnc_attachToRelative; 
				private _simpleObject_49 = createSimpleObject ['a3\weapons_f\ammo\cartridge_762.p3d', [24612.869141,18796.873047,4.503535]]; 
				_simpleObject_49 setVectorDirAndUp [[0.60745,-0.794358,0],[0,0,1]]; 
				_simpleObject_49 setObjectScale 1; 
				[_simpleObject_49, _vehicle] call BIS_fnc_attachToRelative; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					private _gunner = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
					_gunner moveInGunner _turret; 
				}; 
				
				_vehicle setpos ([true] call MAZ_EZM_fnc_getScreenPosition); 
				
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createFuelTruckModule = { 
				private _vehicle = ["O_G_Van_01_fuel_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				_vehicle 
			}; 
			
		comment "Turrets"; 
		
			MAZ_EZM_FIAP_fnc_createM2HMGModule = { 
				private _vehicle = ["I_G_HMG_02_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _gunner = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_gunner moveInGunner _vehicle; 
				}; 
			
				_vehicle 
			}; 
		
			MAZ_EZM_FIAP_fnc_createM2HMGRaisedModule = { 
				private _vehicle = ["I_G_HMG_02_high_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _gunner = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_gunner moveInGunner _vehicle; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createMk6MortarModule = { 
				private _vehicle = ["I_G_Mortar_01_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _gunner = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_gunner moveInGunner _vehicle; 
				}; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createAALauncherModule = { 
				private _vehicle = ["I_static_AA_F"] call MAZ_EZM_fnc_createVehicle;
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _gunner = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_gunner moveInGunner _vehicle; 
				}; 
			
				_vehicle 
			}; 
		
		comment "Vans"; 
				
			MAZ_EZM_FIAP_fnc_createVanModule = { 
				private _vehicle = ["I_G_Van_02_vehicle_F"] call MAZ_EZM_fnc_createVehicle;
			
				[ 
					_vehicle, 
					["FIA3",1],  
					["Enable_Cargo",1,"Door_1_source",0,"Door_2_source",0,"Door_3_source",0,"Door_4_source",0,"Hide_Door_1_source",0,"Hide_Door_2_source",0,"Hide_Door_3_source",0,"Hide_Door_4_source",0,"lights_em_hide",0,"ladder_hide",0,"spare_tyre_holder_hide",1,"spare_tyre_hide",1,"reflective_tape_hide",1,"roof_rack_hide",0,"LED_lights_hide",1,"sidesteps_hide",1,"rearsteps_hide",0,"side_protective_frame_hide",0,"front_protective_frame_hide",0,"beacon_front_hide",1,"beacon_rear_hide",1] 
				] call BIS_fnc_initVehicle; 
			
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				{ 
					[_vehicle,[_forEachIndex,_x]] remoteExec ['setObjectTexture',0,_vehicle]; 
				}forEach ["a3\soft_f_orange\van_02\data\van_body_fia_02_co.paa","a3\soft_f_orange\van_02\data\van_wheel_co.paa","a3\soft_f_orange\van_02\data\van_glass_fia_02_unfinished_ca.paa","a3\soft_f_orange\van_02\data\van_body_fia_03_co.paa"]; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createVanTransportModule = { 
				private _vehicle = ["I_G_Van_02_transport_F"] call MAZ_EZM_fnc_createVehicle;
			
				[ 
					_vehicle, 
					["FIA3",1],  
					["Door_1_source",0,"Door_2_source",0,"Door_3_source",0,"Door_4_source",0,"Hide_Door_1_source",0,"Hide_Door_2_source",0,"Hide_Door_3_source",0,"Hide_Door_4_source",0,"lights_em_hide",0,"ladder_hide",0,"spare_tyre_holder_hide",1,"spare_tyre_hide",1,"reflective_tape_hide",1,"roof_rack_hide",0,"LED_lights_hide",1,"sidesteps_hide",1,"rearsteps_hide",1,"side_protective_frame_hide",0,"front_protective_frame_hide",0,"beacon_front_hide",1,"beacon_rear_hide",1] 
				] call BIS_fnc_initVehicle; 
				
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createRiflemanModule; 
					_driver moveInDriver _vehicle; 
				}; 
			
				{ 
					[_vehicle,[_forEachIndex,_x]] remoteExec ['setObjectTexture',0,_vehicle]; 
				}forEach ["a3\soft_f_orange\van_02\data\van_body_fia_03_co.paa","a3\soft_f_orange\van_02\data\van_wheel_co.paa","a3\soft_f_orange\van_02\data\van_glass_fia_02_unfinished_ca.paa","a3\soft_f_orange\van_02\data\van_body_fia_03_co.paa"]; 
			
				_vehicle 
			}; 
			
			MAZ_EZM_FIAP_fnc_createMedicalVanModule = { 
				private _vehicle = ["I_E_Van_02_medevac_F"] call MAZ_EZM_fnc_createVehicle;
				[_vehicle] call MAZ_EZM_fnc_deleteAttachedWhenDeleted;
				[_vehicle] call MAZ_EZM_fnc_deleteAttachedWhenKilled;
				_vehicle setPosWorld [24668.3,18863.8,4.84614]; 
				_vehicle setVectorDirAndUp [[0,1,0],[0,0,1]]; 
			
				private _crystal1 = createVehicle ["UserTexture1m_F",[24669.3,18863.2,1.923],[],0,"CAN_COLLIDE"]; 
				_crystal1 setObjectTextureGlobal [0,"a3\data_f\red_crystal_ca.paa"]; 
				_crystal1 setPosWorld [24669.31,18863.2,5.113]; 
				_crystal1 setVectorDirAndUp [[-0.595419,-0.00108918,-0.0739945],[-0.0739946,0,0.59542]]; 
				[_crystal1, _vehicle] call BIS_fnc_attachToRelative; 
				_crystal1 setObjectScale 0.6; 
			
				private _crystal2 = createVehicle ["UserTexture1m_F",[24667.3,18863.2,1.909],[],0,"CAN_COLLIDE"]; 
				_crystal2 setObjectTextureGlobal [0,"a3\data_f\red_crystal_ca.paa"]; 
				_crystal2 setPosWorld [24667.29,18863.2,5.099]; 
				_crystal2 setVectorDirAndUp [[0.595708,-2.62268e-008,-0.0716351],[0.0716351,0,0.595708]]; 
				[_crystal2, _vehicle] call BIS_fnc_attachToRelative; 
				_crystal2 setObjectScale 0.6; 
			
				
				if(MAZ_EZM_spawnWithCrew) then { 
					private _driver = [] call MAZ_EZM_FIAP_fnc_createMedicModule; 
					_driver moveInDriver _vehicle; 
				}; 

				[ 
					_vehicle, 
					["FIA3",1],  
					["Door_1_source",0,"Door_2_source",0,"Door_3_source",0,"Door_4_source",0,"Hide_Door_1_source",0,"Hide_Door_2_source",0,"Hide_Door_3_source",0,"Hide_Door_4_source",0,"lights_em_hide",0,"ladder_hide",1,"spare_tyre_holder_hide",1,"spare_tyre_hide",1,"reflective_tape_hide",1,"roof_rack_hide",1,"LED_lights_hide",1,"sidesteps_hide",1,"rearsteps_hide",1,"side_protective_frame_hide",0,"front_protective_frame_hide",0,"beacon_front_hide",0,"beacon_rear_hide",0] 
				] call BIS_fnc_initVehicle; 
			
				{ 
					[_vehicle,[_forEachIndex,_x]] remoteExec ['setObjectTexture',0,_vehicle]; 
				}forEach ["a3\soft_f_orange\van_02\data\van_body_fia_03_co.paa","a3\soft_f_orange\van_02\data\van_wheel_co.paa","a3\soft_f_orange\van_02\data\van_glass_fia_02_unfinished_ca.paa","a3\soft_f_orange\van_02\data\van_body_fia_03_co.paa"]; 
				
				_vehicle setpos ([true] call MAZ_EZM_fnc_getScreenPosition); 
				
				_vehicle 
			}; 

	comment "CTRG+";
	
		comment "Appearance";

			MAZ_EZM_CTRGP_fnc_addCTRGPUniformToUnit = {
				params ["_unit"];
				private _CTRGPUniforms = ["U_B_CTRG_1","U_B_CTRG_3","U_B_CTRG_2","U_B_CTRG_Soldier_2_Arid_F"];
				private _CTRGPVests = ["V_PlateCarrierL_CTRG","V_PlateCarrierH_CTRG"];
				private _CTRGPHeadgear = ["H_Bandanna_cbr","H_Bandanna_khk_hs","H_Bandanna_khk","H_Watchcap_blk","H_Watchcap_cbr","H_Watchcap_khk","H_Booniehat_khk_hs","H_Booniehat_khk","H_Cap_blk","H_Cap_oli","H_Cap_oli_hs","H_Cap_tan","H_Cap_khaki_specops_UK","H_HelmetB_black","H_HelmetB_camo","H_HelmetB_light_snakeskin","H_Cap_headphones"];
				private _CTRGPGoggles = ["","G_AirPurifyingRespirator_01_F","G_Aviator","G_Bandanna_beast","G_Bandanna_khk","G_Shades_Black","G_Shades_Blue","G_Shades_Green","G_Spectacles","G_Balaclava_TI_blk_F","G_Tactical_Clear","G_Tactical_Black","G_Spectacles_Tinted"];
				
				_unit forceAddUniform (selectRandom _CTRGPUniforms);
				_unit addVest (selectRandom _CTRGPVests);
				_unit addHeadgear (selectRandom _CTRGPHeadgear);
				_unit addGoggles (selectRandom _CTRGPGoggles);
			};

			MAZ_EZM_CTRGP_fnc_addCTRGIdentitiesToUnit = {
				params ["_unit"];
				sleep 0.5;
				private _britishVoice = [
					"Male01ENGB",
					"Male02ENGB",
					"Male03ENGB",
					"Male04ENGB",
					"Male05ENGB"
				];
				private _whiteHeads = [
					"WhiteHead_01",
					"WhiteHead_02",
					"WhiteHead_03",
					"WhiteHead_04",
					"WhiteHead_05",
					"WhiteHead_06",
					"WhiteHead_07",
					"WhiteHead_08",
					"WhiteHead_09",
					"WhiteHead_10",
					"WhiteHead_11",
					"WhiteHead_12",
					"WhiteHead_13",
					"WhiteHead_14",
					"WhiteHead_15",
					"WhiteHead_16",
					"WhiteHead_17",
					"WhiteHead_18",
					"WhiteHead_19",
					"WhiteHead_20",
					"WhiteHead_21",
					"WhiteHead_23",
					"WhiteHead_24",
					"WhiteHead_25",
					"WhiteHead_26",
					"WhiteHead_27",
					"WhiteHead_28",
					"WhiteHead_29",
					"WhiteHead_30",
					"WhiteHead_31",
					"WhiteHead_32"
				];

				[_unit,(selectRandom _britishVoice)] remoteExec ['setSpeaker',0,_unit];
				[_unit,(selectRandom _whiteHeads)] remoteExec ['setFace',0,_unit];
				if(goggles _unit == "G_Combat") then {
					removeGoggles _unit;
				};
			};
		
		comment "Men";

			MAZ_EZM_CTRGP_fnc_createAutoriflemanModule = {
				private _unit = [west,"B_Soldier_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;

				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_CTRGP_fnc_addCTRGPUniformToUnit;
				[_unit] spawn MAZ_EZM_CTRGP_fnc_addCTRGIdentitiesToUnit;
				(selectRandom [
					["LMG_03_F","200Rnd_556x45_Box_F",2],
					["arifle_MX_SW_Black_F","100Rnd_65x39_caseless_black_mag",4],
					["arifle_SPAR_02_blk_F","150Rnd_556x45_Drum_Mag_F",4]
				]) params ["_unitWeapon","_unitMag","_unitMagCount"];
				private _optic = selectRandom ["optic_ACO_grn","optic_Holosight_blk_F","optic_ACO",""];
				[_unit,[_unitWeapon,[_unitMag,_unitMagCount],[_optic,"acc_pointer_ir"]],[],["hgun_Pistol_heavy_01_F",["11Rnd_45ACP_Mag",2],["optic_MRD"]],3,[["HandGrenade",2]]] call MAZ_EZM_fnc_addItemAndWeapons;

				_unit
			};

			MAZ_EZM_CTRGP_fnc_createGrenadierModule = {
				private _unit = [west,"B_Soldier_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;

				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_CTRGP_fnc_addCTRGPUniformToUnit;
				[_unit] spawn MAZ_EZM_CTRGP_fnc_addCTRGIdentitiesToUnit;
				(selectRandom [
					["arifle_SPAR_01_GL_blk_F","30Rnd_556x45_Stanag","1Rnd_HE_Grenade_shell"],
					["arifle_MX_GL_Black_F","30Rnd_65x39_caseless_black_mag","3Rnd_HE_Grenade_shell"]
				]) params ["_grenadierWeapon","_grenadierMag","_grenadierGrenade"];
				private _optic = selectRandom ["optic_ACO_grn","optic_Holosight_blk_F","optic_ACO",""];
				[_unit,[_grenadierWeapon,[_grenadierMag,5],[_optic,"acc_pointer_ir"]],[],["hgun_Pistol_heavy_01_F",["11Rnd_45ACP_Mag",2],["optic_MRD"]],3,[["HandGrenade",2],[_grenadierGrenade,4]]] call MAZ_EZM_fnc_addItemAndWeapons;
				
				_unit
			};

			MAZ_EZM_CTRGP_fnc_createMarksmanModule = {
				private _unit = [west,"B_Soldier_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;

				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_CTRGP_fnc_addCTRGPUniformToUnit;
				[_unit] spawn MAZ_EZM_CTRGP_fnc_addCTRGIdentitiesToUnit;
				(selectRandom [["srifle_DMR_03_F","20Rnd_762x51_Mag"],["srifle_EBR_F","20Rnd_762x51_Mag"],["arifle_SPAR_03_blk_F","20Rnd_762x51_Mag"]]) params ["_markWeapon","_markMag"];
				private _markOptic = selectRandom ["optic_DMS","optic_KHS_blk","optic_SOS"];
				[_unit,[_markWeapon,[_markMag,5],[_markOptic,"acc_pointer_ir"]],[],["hgun_Pistol_heavy_01_F",["11Rnd_45ACP_Mag",2],["optic_MRD"]],3,[["HandGrenade",2]]] call MAZ_EZM_fnc_addItemAndWeapons;

				_unit
			};

			MAZ_EZM_CTRGP_fnc_createRiflemanModule = {
				private _unit = [west,"B_Soldier_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;

				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_CTRGP_fnc_addCTRGPUniformToUnit;
				[_unit] spawn MAZ_EZM_CTRGP_fnc_addCTRGIdentitiesToUnit;
				private _pWeapon = selectRandom [["arifle_MX_Black_F", "30Rnd_65x39_caseless_black_mag"], ["arifle_MXM_Black_F", "30Rnd_65x39_caseless_black_mag"], ["arifle_SPAR_01_blk_F", "30Rnd_556x45_Stanag"]];
				private _optic = selectRandom ["optic_ACO_grn","optic_Holosight_blk_F","optic_ACO",""];
				[_unit,[_pWeapon select 0,[_pWeapon select 1,5],[_optic,"acc_pointer_ir"]],[],["hgun_Pistol_heavy_01_F",["11Rnd_45ACP_Mag",2],["optic_MRD"]],3,[["HandGrenade",2]]] call MAZ_EZM_fnc_addItemAndWeapons;
				
				_unit
			};

			MAZ_EZM_CTRGP_fnc_createRiflemanATModule = {
				private _unit = [west,"B_Soldier_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;

				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_CTRGP_fnc_addCTRGPUniformToUnit;
				[_unit] spawn MAZ_EZM_CTRGP_fnc_addCTRGIdentitiesToUnit;
				_unit addBackpackGlobal "B_Kitbag_rgr";
				private _pWeapon = selectRandom [["arifle_MX_Black_F", "30Rnd_65x39_caseless_black_mag"], ["arifle_MXM_Black_F", "30Rnd_65x39_caseless_black_mag"], ["arifle_SPAR_01_blk_F", "30Rnd_556x45_Stanag"]];
				private _optic = selectRandom ["optic_ACO_grn","optic_Holosight_blk_F","optic_ACO",""];
				[_unit,[_pWeapon select 0,[_pWeapon select 1,5],[_optic,"acc_pointer_ir"]],["launch_NLAW_F",["NLAW_F",3]],["hgun_Pistol_heavy_01_F",["11Rnd_45ACP_Mag",2],["optic_MRD"]],3,[["HandGrenade",2]]] call MAZ_EZM_fnc_addItemAndWeapons;

				_unit
			};

			MAZ_EZM_CTRGP_fnc_createRiflemanLATModule = {
				private _unit = [west,"B_Soldier_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;

				[_unit] call MAZ_EZM_fnc_removeAllClothing;
				[_unit] call MAZ_EZM_CTRGP_fnc_addCTRGPUniformToUnit;
				[_unit] spawn MAZ_EZM_CTRGP_fnc_addCTRGIdentitiesToUnit;
				_unit addBackpackGlobal "B_Kitbag_rgr";
				private _pWeapon = selectRandom [["arifle_MX_Black_F", "30Rnd_65x39_caseless_black_mag"], ["arifle_MXM_Black_F", "30Rnd_65x39_caseless_black_mag"], ["arifle_SPAR_01_blk_F", "30Rnd_556x45_Stanag"]];
				private _optic = selectRandom ["optic_ACO_grn","optic_Holosight_blk_F","optic_ACO",""];
				[_unit,[_pWeapon select 0,[_pWeapon select 1,5],[_optic,"acc_pointer_ir"]],["launch_MRAWS_green_F",["MRAWS_HEAT_F",3]],["hgun_Pistol_heavy_01_F",["11Rnd_45ACP_Mag",2],["optic_MRD"]],3,[["HandGrenade",2]]] call MAZ_EZM_fnc_addItemAndWeapons;
				_unit addItemToBackpack "MRAWS_HE_F";

				_unit
			};

	comment "CSAT (Africa) Units";

		comment "Anti-Air";
		comment "APCs";
		comment "Artillery";

			MAZ_EZM_AFR_fnc_createZamakMRLModule = {
				private _vehicle = ["I_E_Truck_02_MRL_F"] call MAZ_EZM_fnc_createVehicle;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;

					private _gunner = [] call MAZ_EZM_AFR_fnc_createRiflemanModule;
					_gunner moveInGunner _vehicle;

					private _grp = createGroup [east,true];
					[_driver,_gunner] joinSilent _grp;
					_grp selectLeader _driver;				
				};

				[ 
					_vehicle, 
					["Opfor",1] 
				] call BIS_fnc_initVehicle;

				_vehicle
			};
			
		comment "Boats";

			MAZ_EZM_AFR_fnc_createDinghyModule = {
				private _vehicle = ["O_Boat_Transport_01_F"] call MAZ_EZM_fnc_createVehicle;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;
				};
				_vehicle
			};			

		comment "Cars";

			MAZ_EZM_AFR_fnc_createIfritModule = {
				private _vehicle = ["O_MRAP_02_F"] call MAZ_EZM_fnc_createVehicle;					

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;
				};
				_vehicle
			};			

			MAZ_EZM_AFR_fnc_createIfritHMGModule = {
				private _vehicle = ["O_MRAP_02_hmg_F"] call MAZ_EZM_fnc_createVehicle;
				
				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;

					private _gunner = [] call MAZ_EZM_AFR_fnc_createRiflemanModule;
					_gunner moveInGunner _vehicle;

					private _grp = createGroup [east,true];
					[_driver,_gunner] joinSilent _grp;
					_grp selectLeader _driver;					
				};
				
				_vehicle
			};			

			MAZ_EZM_AFR_fnc_createQilinATModule = {
				private _vehicle = ["O_LSV_02_AT_F"] call MAZ_EZM_fnc_createVehicle;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;

					private _gunner = [] call MAZ_EZM_AFR_fnc_createRiflemanModule;
					_gunner moveInGunner _vehicle;

					private _grp = createGroup [east,true];
					[_driver,_gunner] joinSilent _grp;
					_grp selectLeader _driver;										
				};

				[
					_vehicle,
					["Black",1], 
					["Unarmed_Doors_Hide",0]
				] call BIS_fnc_initVehicle;	

				_vehicle
			};			

			MAZ_EZM_AFR_fnc_createQilinMinigunModule = {
				private _vehicle = ["O_LSV_02_armed_black_F"] call MAZ_EZM_fnc_createVehicle;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;

					private _gunner = [] call MAZ_EZM_AFR_fnc_createRiflemanModule;
					_gunner moveInGunner _vehicle;			

					private _grp = createGroup [east,true];
					[_driver,_gunner] joinSilent _grp;
					_grp selectLeader _driver;									
				};

				_vehicle
			};			

			MAZ_EZM_AFR_fnc_createQilinModule = {
				private _vehicle = ["O_LSV_02_unarmed_black_F"] call MAZ_EZM_fnc_createVehicle;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;
				};

				_vehicle
			};	

			MAZ_EZM_AFR_fnc_createQuadModule = {
				private _vehicle = ["C_Quadbike_01_black_F"] call MAZ_EZM_fnc_createVehicle;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;
				};

				_vehicle
			};		

			MAZ_EZM_AFR_fnc_createZamakAmmoModule = {
				private _vehicle = ["O_Truck_02_Ammo_F"] call MAZ_EZM_fnc_createVehicle;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;
				};

				_vehicle	
			};	

			MAZ_EZM_AFR_fnc_createZamakFuelModule = {
				private _vehicle = ["O_Truck_02_fuel_F"] call MAZ_EZM_fnc_createVehicle;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;
				};

				_vehicle	
			};	

			MAZ_EZM_AFR_fnc_createZamakMedicalModule = {
				private _vehicle = ["O_Truck_02_medical_F"] call MAZ_EZM_fnc_createVehicle;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;
				};

				_vehicle	
			};	

			MAZ_EZM_AFR_fnc_createZamakRepairModule = {
				private _vehicle = ["O_Truck_02_box_F"] call MAZ_EZM_fnc_createVehicle;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;
				};

				_vehicle	
			};	

			MAZ_EZM_AFR_fnc_createZamakTransportModule = {
				private _vehicle = ["O_Truck_02_transport_F"] call MAZ_EZM_fnc_createVehicle;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;
				};

				_vehicle	
			};				

			MAZ_EZM_AFR_fnc_createZamakTransportCoveredModule = {
				private _vehicle = ["O_Truck_02_covered_F"] call MAZ_EZM_fnc_createVehicle;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createRiflemanModule;
					_driver moveInDriver _vehicle;
				};

				_vehicle	
			};	

		comment "Helicopters";
		
			MAZ_EZM_AFR_fnc_createTaruModule = {
				private _vehicle = ["O_Heli_Transport_04_black_F"] call MAZ_EZM_fnc_createVehicle;
				_vehicle disableTIEquipment true;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createHeliPilotModule;
					_driver moveInDriver _vehicle;

					private _coPilot = [] call MAZ_EZM_AFR_fnc_createHeliPilotModule;
					_coPilot moveinturret [_vehicle, [0]];

					private _loadMaster = [] call MAZ_EZM_AFR_fnc_createHeliCrewModule;
					_loadMaster moveinturret [_vehicle, [1]];

					private _grp = createGroup [east,true];
					[_driver,_coPilot,_loadMaster] joinSilent _grp;
					_grp selectLeader _driver;
				};

				_vehicle
			};

			MAZ_EZM_AFR_fnc_createTaruAmmoModule = {
				private _vehicle = ["O_Heli_Transport_04_ammo_black_F"] call MAZ_EZM_fnc_createVehicle;
				_vehicle disableTIEquipment true;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createHeliPilotModule;
					_driver moveInDriver _vehicle;

					private _coPilot = [] call MAZ_EZM_AFR_fnc_createHeliPilotModule;
					_coPilot moveinturret [_vehicle, [0]];

					private _loadMaster = [] call MAZ_EZM_AFR_fnc_createHeliCrewModule;
					_loadMaster moveinturret [_vehicle, [1]];

					private _grp = createGroup [east,true];
					[_driver,_coPilot,_loadMaster] joinSilent _grp;
					_grp selectLeader _driver;
				};

				_vehicle
			};

			MAZ_EZM_AFR_fnc_createTaruBenchModule = {
				private _vehicle = ["O_Heli_Transport_04_bench_black_F"] call MAZ_EZM_fnc_createVehicle;
				_vehicle disableTIEquipment true;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createHeliPilotModule;
					_driver moveInDriver _vehicle;

					private _coPilot = [] call MAZ_EZM_AFR_fnc_createHeliPilotModule;
					_coPilot moveinturret [_vehicle, [0]];

					private _loadMaster = [] call MAZ_EZM_AFR_fnc_createHeliCrewModule;
					_loadMaster moveinturret [_vehicle, [1]];

					private _grp = createGroup [east,true];
					[_driver,_coPilot,_loadMaster] joinSilent _grp;
					_grp selectLeader _driver;
				};

				_vehicle
			};

			MAZ_EZM_AFR_fnc_createTaruCargoModule = {
				private _vehicle = ["O_Heli_Transport_04_box_black_F"] call MAZ_EZM_fnc_createVehicle;
				_vehicle disableTIEquipment true;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createHeliPilotModule;
					_driver moveInDriver _vehicle;

					private _coPilot = [] call MAZ_EZM_AFR_fnc_createHeliPilotModule;
					_coPilot moveinturret [_vehicle, [0]];

					private _loadMaster = [] call MAZ_EZM_AFR_fnc_createHeliCrewModule;
					_loadMaster moveinturret [_vehicle, [1]];

					private _grp = createGroup [east,true];
					[_driver,_coPilot,_loadMaster] joinSilent _grp;
					_grp selectLeader _driver;
				};

				_vehicle
			};

			MAZ_EZM_AFR_fnc_createTaruFuelModule = {
				private _vehicle = ["O_Heli_Transport_04_fuel_black_F"] call MAZ_EZM_fnc_createVehicle;
				_vehicle disableTIEquipment true;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createHeliPilotModule;
					_driver moveInDriver _vehicle;

					private _coPilot = [] call MAZ_EZM_AFR_fnc_createHeliPilotModule;
					_coPilot moveinturret [_vehicle, [0]];

					private _loadMaster = [] call MAZ_EZM_AFR_fnc_createHeliCrewModule;
					_loadMaster moveinturret [_vehicle, [1]];

					private _grp = createGroup [east,true];
					[_driver,_coPilot,_loadMaster] joinSilent _grp;
					_grp selectLeader _driver;
				};

				_vehicle
			};

			MAZ_EZM_AFR_fnc_createTaruMedicalModule = {
				private _vehicle = ["O_Heli_Transport_04_medevac_black_F"] call MAZ_EZM_fnc_createVehicle;
				_vehicle disableTIEquipment true;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createHeliPilotModule;
					_driver moveInDriver _vehicle;

					private _coPilot = [] call MAZ_EZM_AFR_fnc_createHeliPilotModule;
					_coPilot moveinturret [_vehicle, [0]];

					private _loadMaster = [] call MAZ_EZM_AFR_fnc_createHeliCrewModule;
					_loadMaster moveinturret [_vehicle, [1]];

					private _grp = createGroup [east,true];
					[_driver,_coPilot,_loadMaster] joinSilent _grp;
					_grp selectLeader _driver;
				};

				_vehicle
			};

			MAZ_EZM_AFR_fnc_createTaruRepairModule = {
				private _vehicle = ["O_Heli_Transport_04_repair_black_F"] call MAZ_EZM_fnc_createVehicle;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createHeliPilotModule;
					_driver moveInDriver _vehicle;

					private _coPilot = [] call MAZ_EZM_AFR_fnc_createHeliPilotModule;
					_coPilot moveinturret [_vehicle, [0]];

					private _loadMaster = [] call MAZ_EZM_AFR_fnc_createHeliCrewModule;
					_loadMaster moveinturret [_vehicle, [1]];

					private _grp = createGroup [east,true];
					[_driver,_coPilot,_loadMaster] joinSilent _grp;
					_grp selectLeader _driver;
				};

				_vehicle
			};

			MAZ_EZM_AFR_fnc_createTaruTransportModule = {
				private _vehicle = ["O_Heli_Transport_04_covered_black_F"] call MAZ_EZM_fnc_createVehicle;
				_vehicle disableTIEquipment true;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createHeliPilotModule;
					_driver moveInDriver _vehicle;

					private _coPilot = [] call MAZ_EZM_AFR_fnc_createHeliPilotModule;
					_coPilot moveinturret [_vehicle, [0]];

					private _loadMaster = [] call MAZ_EZM_AFR_fnc_createHeliCrewModule;
					_loadMaster moveinturret [_vehicle, [1]];

					private _grp = createGroup [east,true];
					[_driver,_coPilot,_loadMaster] joinSilent _grp;
					_grp selectLeader _driver;
				};

				_vehicle
			};

			MAZ_EZM_AFR_fnc_createOrcaUnarmedModule = {
				private _vehicle = ["O_Heli_Light_02_unarmed_F"] call MAZ_EZM_fnc_createVehicle;

				[_vehicle,"Hex"] call bis_fnc_initVehicle;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createHeliPilotModule;
					_driver moveInDriver _vehicle;

					private _coPilot = [] call MAZ_EZM_AFR_fnc_createHeliPilotModule;
					_coPilot moveinturret [_vehicle, [0]];

					private _grp = createGroup [east,true];
					[_driver,_coPilot] joinSilent _grp;
					_grp selectLeader _driver;
				};

				[
					_vehicle,
					["Blackcustom",1], 
					true
				] call BIS_fnc_initVehicle;

				_vehicle
			};	
			
			MAZ_EZM_AFR_fnc_createOrcaModule = {
				private _vehicle = ["O_Heli_Light_02_v2_F"] call MAZ_EZM_fnc_createVehicle;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createHeliPilotModule;
					_driver moveInDriver _vehicle;

					private _coPilot = [] call MAZ_EZM_AFR_fnc_createHeliPilotModule;
					_coPilot moveinturret [_vehicle, [0]];

					private _grp = createGroup [east,true];
					[_driver,_coPilot] joinSilent _grp;
					_grp selectLeader _driver;
				};

				[
					_vehicle,
					["Blackcustom",1], 
					true
				] call BIS_fnc_initVehicle;

				_vehicle
			};

		comment "Men";
			MAZ_EZM_AFR_fnc_createAmmoBearerModule = {
				private _unit = [east,"O_A_soldier_A_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				_unit
			};

			MAZ_EZM_AFR_fnc_createAutoriflemanModule = {
				private _unit = [east,"O_A_soldier_AR_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				_unit
			};

			MAZ_EZM_AFR_fnc_createATRiflemanModule = {
				private _unit = [east,"O_A_soldier_AT_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				_unit
			};

			MAZ_EZM_AFR_fnc_createRiflemanModule = {
				private _unit = [east,"O_A_soldier_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				_unit
			};

			MAZ_EZM_AFR_fnc_createMedicModule = {
				private _unit = [east,"O_A_medic_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				_unit
			};

			MAZ_EZM_AFR_fnc_createOfficerModule = {
				private _unit = [east,"O_A_officer_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				_unit
			};

			MAZ_EZM_AFR_fnc_createMissleAAModule = {
				private _unit = [east,"O_A_soldier_AA_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				_unit
			};

			MAZ_EZM_AFR_fnc_createGrenadierModule = {
				private _unit = [east,"O_A_soldier_GL_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				_unit
			};

			MAZ_EZM_AFR_fnc_createLATRiflemanModule = {
				private _unit = [east,"O_A_soldier_LAT_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				_unit
			};

			MAZ_EZM_AFR_fnc_createMarksmanModule = {
				private _unit = [east,"O_A_soldier_M_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				_unit
			};		

			MAZ_EZM_AFR_fnc_createSquadLeaderModule = {
				private _unit = [east,"O_A_soldier_SL_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				_unit
			};			

			MAZ_EZM_AFR_fnc_createTeamLeaderModule = {
				private _unit = [east,"O_A_soldier_TL_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				_unit
			};

			MAZ_EZM_AFR_fnc_createCrewmanModule = {
				private _unit = [east,"O_A_soldier_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				_unit setUnitLoadout [["arifle_Katiba_C_F","","","",["30Rnd_65x39_caseless_green",30],[],""],[],[],["U_O_officer_noInsignia_hex_F",[["FirstAidKit",1],["30Rnd_65x39_caseless_green",3,30]]],["V_BandollierB_cbr",[["Chemlight_red",2,1]]],[],"H_Tank_black_F","G_Lowprofile",[],["ItemMap","","ItemRadio","ItemCompass","ItemWatch",""]];
				_unit
			};

			MAZ_EZM_AFR_fnc_createHeliPilotModule = {
				private _unit = [east,"O_A_soldier_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				_unit setUnitLoadout [["arifle_Katiba_C_F","","","",["30Rnd_65x39_caseless_green",30],[],""],[],[],["U_O_officer_noInsignia_hex_F",[["FirstAidKit",1],["30Rnd_65x39_caseless_green",3,30]]],["V_TacVest_brn",[["Chemlight_red",2,1]]],[],"H_PilotHelmetHeli_B","",[],["ItemMap","","ItemRadio","ItemCompass","ItemWatch",""]];
				_unit
			};

			MAZ_EZM_AFR_fnc_createHeliCrewModule = {
				private _unit = [east,"O_A_soldier_F",MAZ_EZM_stanceForAI,"ALERT"] call MAZ_EZM_fnc_createMan;
				_unit setUnitLoadout [["arifle_Katiba_C_F","","","",["30Rnd_65x39_caseless_green",30],[],""],[],[],["U_O_officer_noInsignia_hex_F",[["FirstAidKit",1],["30Rnd_65x39_caseless_green",3,30]]],["V_TacVest_brn",[["Chemlight_red",2,1]]],[],"H_CrewHelmetHeli_B","",[],["ItemMap","","ItemRadio","ItemCompass","ItemWatch",""]];
				_unit
			};

		comment "Tanks";

			MAZ_EZM_AFR_fnc_createT100Module = {
				private _vehicle = ["O_MBT_02_cannon_F"] call MAZ_EZM_fnc_createVehicle;
				_vehicle disableTIEquipment true;

				if(MAZ_EZM_spawnWithCrew) then {
					private _driver = [] call MAZ_EZM_AFR_fnc_createCrewmanModule;
					_driver moveInDriver _vehicle;

					private _gunner = [] call MAZ_EZM_AFR_fnc_createCrewmanModule;
					_gunner moveInGunner _vehicle;

					private _gunner = [] call MAZ_EZM_AFR_fnc_createCrewmanModule;
					_gunner moveInCommander _vehicle;

					private _grp = createGroup [east,true];
					[_driver,_gunner] joinSilent _grp;
					_grp selectLeader _gunner;
				};

				_vehicle
			};

		comment "Groups";
		
			MAZ_EZM_AFR_fnc_createFireTeamModule = {
				private _squadLead = call MAZ_EZM_AFR_fnc_createTeamLeaderModule;
				private _grp = group _squadLead;
				{
					private _unit = call (missionNamespace getVariable _x);
					[_unit] joinSilent _grp;
				} forEach [
					'MAZ_EZM_AFR_fnc_createAutoriflemanModule',
					'MAZ_EZM_AFR_fnc_createGrenadierModule',
					'MAZ_EZM_AFR_fnc_createATRiflemanModule'
				];
				_grp setBehaviour "AWARE";
				{_x setunitpos "AUTO"} foreach units _squadLead
			};

			MAZ_EZM_AFR_fnc_createRifleSquadModule = {
				private _squadLead = call MAZ_EZM_AFR_fnc_createSquadLeaderModule;
				private _grp = group _squadLead;
				{
					private _unit = call (missionNamespace getVariable _x);
					[_unit] joinSilent _grp;
				} forEach [
					'MAZ_EZM_AFR_fnc_createRiflemanModule',
					'MAZ_EZM_AFR_fnc_createATRiflemanModule',
					'MAZ_EZM_AFR_fnc_createMarksmanModule',
					'MAZ_EZM_AFR_fnc_createTeamLeaderModule',
					'MAZ_EZM_AFR_fnc_createAutoriflemanModule',
					'MAZ_EZM_AFR_fnc_createAmmobearerModule',
					'MAZ_EZM_AFR_fnc_createMedicModule'
				];
				_grp setBehaviour "AWARE";
				{_x setunitpos "AUTO"} foreach units _squadLead
			};

	comment "Pylon Editor";

		ZAM_EZM_fnc_editVehiclePylons = {
			params ["_veh"];
			private _pylons = [];
			{
				if(_x find "pylon" != -1 && _x find "proxy" != -1) then {
					_pylons pushBack _x;
				};
			}forEach (_veh selectionNames "FireGeometry");

			private _pylonSlotsUnfiltered = (configFile >> "CfgVehicles" >> typeOf _veh >> "Components" >> "TransportPylonsComponent" >> "Pylons") call BIS_fnc_getCfgSubClasses;
			private _pylonSlots = [];
			{
				if((toLower _x) find "bay" == -1) then {
					_pylonSlots pushBack _x;
				};
			}forEach _pylonSlotsUnfiltered;
			private _pylonsNew = [];
			{
				private _numberOfPylon = _x splitString ".";
				private _pylonIndex = -1;
				if(count _numberOfPylon != 2) then {} else {
					_pylonIndex = (parseNumber (_numberOfPylon # 1)) - 1;
					if(_pylonIndex <= (count _pylonSlots -1)) then {
						_pylonsNew set [_pylonIndex,_veh selectionPosition _x]; 
					};
				};
			}forEach _pylons;


			private _currentMags = getPylonMagazines _veh;
			private _pylonWeapons = [];
			private _pylonDisplayNames = [];

			{
				private _pylon = _x;
				private _compatMags = _veh getCompatiblePylonMagazines _x;
				private _temp = [];
				{
					_temp pushBack (getText (configFile >> "CfgMagazines" >> _x >> "displayName"));
				}forEach _compatMags;
				_pylonWeapons pushBack _compatMags;
				_pylonDisplayNames pushBack _temp;
			}forEach _pylonSlots;

			private _display = findDisplay 312;
			private _controls = [];
			{
				private _control = _display ctrlCreate ["RscCombo",-1];
				_control setVariable ["pylonEditorPylon",_x];
				private _pylonNames = _pylonDisplayNames select _forEachIndex;
				private _pylonConfigNames = _pylonWeapons select _forEachIndex;
				private _currentMag = _currentMags select _forEachIndex;
				private _indexPylon = _pylonConfigNames find _currentMag;
				{
					private _index = _control lbAdd _x;
					_control lbSetData [_index,_pylonConfigNames select _forEachIndex];
				}forEach _pylonNames;
				_control setVariable ["pylonEditorVehicle",_veh];
				_control ctrlAddEventHandler ["LBSelChanged",{
					params ["_control", "_selectedIndex"];
					private _vehicle = _control getVariable 'pylonEditorVehicle';
					private _pylonSlot = _control getVariable "pylonEditorPylon";
					private _pylonNew = _control lbData _selectedIndex;
					private _pylonMaxAmmo = getNumber (configFile >> "CfgMagazines" >> _pylonNew >> "count");
					_vehicle setPylonLoadout [_pylonSlot,_pylonNew];
					_vehicle setAmmoOnPylon [_pylonSlot,_pylonMaxAmmo];
				}];
				_control lbSetCurSel _indexPylon;

				_controls pushBack _control;
			}forEach _pylonSlots;

			if(!isNil "MAZ_updateEachFramePylons") then {
				private _pylonEditorControls = player getVariable ["pylonEditorControls",[]];
				{
					ctrlDelete _x;
				}forEach _pylonEditorControls;
				player setVariable ["pylonEditorControls",[]];
				[MAZ_updateEachFramePylons,"onEachFrame"] call BIS_fnc_removeStackedEventHandler;
			};
			player setVariable ["pylonEditorControls",_controls];

			MAZ_updateEachFramePylons = ["MAZ_updatePylonsEachFrame","onEachFrame",{
				params ["_vehicle","_pylons","_controls"];
				if(isNull findDisplay 312) exitWith {
					[MAZ_updateEachFramePylons,"onEachFrame"] call BIS_fnc_removeStackedEventHandler;
				};

				if(curatorCamera distance _vehicle > 125) then {
					[MAZ_updateEachFramePylons,"onEachFrame"] call BIS_fnc_removeStackedEventHandler;
					{ctrlDelete _x} forEach _controls;
				};

				{
					private _control = _controls select _forEachIndex;

					private _position = _vehicle modelToWorldVisual _x;
					private _distance = curatorCamera distance _position;
					private _screenPos = worldToScreen _position;

					if(_screenPos isEqualTo [] || {_distance > 75}) then {
						_control ctrlShow false;
					} else {
						_control ctrlShow true;

						_screenPos params ["_posX","_posY"];

						private _size = linearConversion [0,100,_distance,1.75,1,true];
						private _posW = ["W",(_size*4)] call MAZ_EZM_fnc_convertToGUI_GRIDFormat;
						private _posH = ["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat;

						_control ctrlSetPosition [_posX - _posW / 2, _posY - _posH / 2,_posW,_posH];
						_control ctrlCommit 0;
					};
				} forEach _pylons;

			},[_veh,_pylonsNew,_controls]] call BIS_fnc_addStackedEventHandler;
		};

	comment "Area Markers";

		MAZ_EZM_fnc_createAreaMarker = {
			if(!visibleMap) exitWith {["Cannot place a marker without the map open!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;};
			private _position = [] call MAZ_EZM_fnc_getScreenPosition;
			if(isNil "MAZ_EZM_areaMarkers") then {
				MAZ_EZM_areaMarkers = [];
				publicVariable 'MAZ_EZM_areaMarkers';
			};
			private _marker = createMarker [format ["ZAM_EZM_marker_%1",count MAZ_EZM_areaMarkers],_position];
			_marker setMarkerSize [50,50];
			_marker setMarkerShape "ELLIPSE";
			MAZ_EZM_areaMarkers pushBack _marker;
			publicVariable 'MAZ_EZM_areaMarkers';
			[_marker] call MAZ_EZM_fnc_createEditAreaMarkerDialog;
		};

		MAZ_EZM_fnc_editAreaMarker = {
			params ["_marker","_values"];
			_values params ["_markerText","_markerPos","_markerSize","_markerBrush","_markerColor","_markerShape"];
			_marker setMarkerText _markerText;
			_marker setMarkerPos _markerPos;
			_marker setMarkerSize _markerSize;
			_marker setMarkerBrush _markerBrush;
			_marker setMarkerColor _markerColor;
			_marker setMarkerShape (["ELLIPSE","RECTANGLE"] select _markerShape);
		};

		MAZ_EZM_fnc_createEditAreaMarkerDialog = {
			params ["_marker"];
			(getMarkerSize _marker) params ["_sizeX","_sizeY"];
			(getMarkerPos _marker) params ["_posX","_posY"];
			private _markerShapeSelect = [false,true] select (markerShape _marker == "RECTANGLE");
			private _dataList = [];
			{
				private _color = getArray (configFile >> "CfgMarkerColors" >> _x >> "color");
				if([0,0,0,1] isEqualTo _color) then {_color = [1,1,1,1]};
				if((_color select 0) isEqualType "") then {
					{
						_color set [_forEachIndex,call (compile _x)];
					}forEach _color;
				};
				_dataList pushback [getText (configFile >> "CfgMarkerColors" >> _x >> "name"), "", "",_color];
			}forEach ["Default","ColorBlack","ColorGrey","ColorRed","ColorBrown","ColorOrange","ColorYellow","ColorKhaki","ColorGreen","ColorBlue","ColorPink","ColorWhite","ColorWest","ColorEAST","ColorGUER","ColorCIV","ColorUNKNOWN"];

			private _brushList = [];
			{
				_brushList pushBack [getText (configFile >> "CfgMarkerBrushes" >> _x >> "name"), "", getText (configFile >> "CfgMarkerBrushes" >> _x >> "texture")];
			}forEach ["Solid","SolidFull","SolidBorder","Border","Horizontal","Vertical","Grid","FDiagonal","BDiagonal","Diaggrid","Cross"];

			["Edit Area Marker",[
				[
					"EDIT",
					"Marker Text:",
					[markerText _marker]
				],
				[
					"VECTOR",
					"Position:",
					[[_posX,_posY],["X","Y"],2]
				],
				[
					"VECTOR",
					"Size:",
					[[_sizeX,_sizeY],["X","Y"],2]
				],
				[
					"COMBO",
					"Marker Brush:",
					[
						["Solid","SolidFull","SolidBorder","Border","Horizontal","Vertical","Grid","FDiagonal","BDiagonal","Diaggrid","Cross"],
						_brushList,
						(["Solid","SolidFull","SolidBorder","Border","Horizontal","Vertical","Grid","FDiagonal","BDiagonal","Diaggrid","Cross"] find (markerBrush _marker))
					]
				],
				[
					"COMBO",
					"Marker Color:",
					[
						["Default","ColorBlack","ColorGrey","ColorRed","ColorBrown","ColorOrange","ColorYellow","ColorKhaki","ColorGreen","ColorBlue","ColorPink","ColorWhite","ColorWest","ColorEAST","ColorGUER","ColorCIV","ColorUNKNOWN"],
						_dataList,
						(["Default","ColorBlack","ColorGrey","ColorRed","ColorBrown","ColorOrange","ColorYellow","ColorKhaki","ColorGreen","ColorBlue","ColorPink","ColorWhite","ColorWest","ColorEAST","ColorGUER","ColorCIV","ColorUNKNOWN"] find (markerColor _marker))
					]
				],
				[
					"TOOLBOX",
					"Marker Shape:",
					[_markerShapeSelect,[["ELLIPSE","Circle marker type."],["RECTANGLE","Rectangle marker type."]]]
				]
			],{
				params ["_values","_args","_display"];
				[_args,_values] call MAZ_EZM_fnc_editAreaMarker;
				_display closeDisplay 1;
			},{
				params ["_values","_args","_display"];
				_display closeDisplay 2;
			},_marker] call MAZ_EZM_fnc_createDialog;
		};

	comment "Collapse Expand Trees";

		MAZ_EZM_fnc_collapseAllTrees = {	
			private _display = (findDisplay 312);	
			{	
				for '_n' from 0 to ((_display displayCtrl _x) tvCount []) do {	
					(_display displayCtrl _x) tvCollapse [_n];	
				};	
			} forEach [270,271,272,273,274,275,276,277,278,280];	
		};	
		
		MAZ_EZM_fnc_expandAllTrees = {	
			private _display = (findDisplay 312);	
			{	
				for '_n' from 0 to ((_display displayCtrl _x) tvCount [])  do {	
					(_display displayCtrl _x) tvExpand [_n];	
				};	
			} forEach [270,271,272,273,274,275,276,277,278,280];	
		};

	comment "End";

};
[] call MAZ_EZM_fnc_initFunction;

JAM_MAZ_EZM_editZeusInterface = {
	comment " 👽 ";
	if (isNull (findDisplay 312)) exitWith {};
	private _fnc_editInterface = {
		disableSerialization;
		with uiNamespace do {
			private _display = displayNull;
			_display = findDisplay 312;
			if(isNull _display) exitWith {};
			
			comment "Re-Color Zeus Watermark";
		
			_display displayAddEventHandler ['KeyDown', {
				if (_this select 1 == 14) then {
					private _display = findDisplay 312;
					[_display] spawn {
						params [['_display', displayNull]];
						uiSleep 0.01;
						if (isNull _display) exitWith {};
						(_display displayCtrl 15717) ctrlSetText "";
					};
				};
			}];
			
			comment "Transparency & Function Defines";

				missionNamespace setVariable ['MAZ_zeusModulesWithFunction', []];
				private _transparency = profilenamespace getVariable ['JAM_zeusTransparency_currentValue', 1];
				[_transparency] call (missionNamespace getvariable ['JAM_GUIfnc_setZeusTransparency', {}]);

				MAZ_EZM_fnc_zeusAddCategory = {
					params [
						['_parentTree', findDisplay 312 displayCtrl 280],
						['_categoryName', '[ Category ]'],
						['_iconPath', '\a3\ui_f_curator\Data\Displays\RscDisplayCurator\modeModules_ca.paa'],
						['_textColor', [1,1,1,1]],
						['_toolTip', '']
					];
					private _pindex = _parentTree tvAdd [[], _categoryName];
					_parentTree tvSetPictureRight [[_pindex], _iconPath];
					_parentTree tvSetColor [[_pindex], _textColor];
					_parentTree tvSetTooltip [[_pindex], _toolTip];
					_pindex;
				};
				
				_EZM_fnc_zeusAddCategory = MAZ_EZM_fnc_zeusAddCategory;

				MAZ_EZM_fnc_zeusAddSubCategory = {
					params [
						['_parentTree', findDisplay 312 displayCtrl 280],
						['_parentCategory', 1],
						['_categoryName', '[ Subcategory ]'],
						['_iconPath', '\a3\ui_f_curator\Data\Displays\RscDisplayCurator\modeModules_ca.paa']
					];
					private _cindex = _parentTree tvAdd [[_parentCategory], _categoryName];
					_parentTree tvSetPictureRight [[_parentCategory,_cindex], _iconPath];
					_cindex;
				};

				MAZ_EZM_fnc_zeusAddModule = {
					params [
						['_parentTree', findDisplay 312 displayCtrl 280],
						['_parentCategory', 1],
						['_moduleName', '[ Module ]'],
						['_moduleTip', '[ Placeholder ]'],
						['_moduleFunction', 'JAM_fnc_nullFunction'],
						['_iconPath', '\a3\ui_f_curator\Data\Displays\RscDisplayCurator\modeModules_ca.paa'],
						['_textColor', [1,1,1,1]],
						['_iconColor', [1,1,1,1]],
						['_iconColorSelected', [0,0,0,1]],
						['_iconColorDisabled', [0.8,0,0,0.8]]
					];
					
					comment "Setup functions";
					private _functionArray = missionNamespace getVariable ['MAZ_zeusModulesWithFunction', []];
					private _functionCount = count _functionArray; 
					private _functionIndex = 7000 + (_functionCount + 1);
					private _moduleTip = format ['%1\n\nFunction ID:\n%2', _moduleTip, str _functionIndex];
					_functionArray pushBack [_functionIndex, _moduleFunction];
					missionNamespace setVariable ['MAZ_zeusModulesWithFunction', _functionArray];
					
					comment "Add modules";
					private _cindex = _parentTree tvAdd [[_parentCategory], _moduleName];
					private _path = [_parentCategory,_cindex];
					_parentTree tvSetTooltip [_path,_moduleTip];
					_parentTree tvSetPicture [_path, _iconPath];
					_parentTree tvSetData [_path, 'ModuleEmpty_F'];
					_parentTree tvSetPictureColor [_path, _iconColor];
					_parentTree tvSetColor [_path, _textColor];
					comment "_parentTree tvSetPictureColorSelected [_path, _iconColorSelected];";
					comment "_parentTree tvSetPictureColorDisabled [_path, _iconColorDisabled];";
					_parentTree ctrlCommit 0;
					_path;
				};
				
				_EZM_fnc_zeusAddModule = MAZ_EZM_fnc_zeusAddModule;

				MAZ_EZM_fnc_zeusAddModule_BLUFOR = {
					params [
						['_parentTree', findDisplay 312 displayCtrl 280],
						['_parentCategory', 1],
						['_parentSubcategory',1],
						['_moduleName', '[ Module ]'],
						['_moduleTip', '[ Placeholder ]'],
						['_moduleFunction', 'JAM_fnc_nullFunction'],
						['_iconPath', '\a3\ui_f_curator\Data\Displays\RscDisplayCurator\modeModules_ca.paa'],
						['_textColor', [1,1,1,1]],
						['_iconColor', [1,1,1,1]],
						['_iconColorSelected', [0,0,0,1]],
						['_iconColorDisabled', [0.8,0,0,0.8]]
					];
					
					comment "Setup functions";
					_functionArray = missionNamespace getVariable ['MAZ_zeusModulesWithFunction', []];
					private _functionCount = count _functionArray; 
					private _functionIndex = 7000 + (_functionCount + 1);
					private _moduleTip = format ['%1\n\nFunction ID:\n%2', _moduleTip, str _functionIndex];
					_functionArray pushBack [_functionIndex, _moduleFunction];
					missionNamespace setVariable ['MAZ_zeusModulesWithFunction', _functionArray];
					
					comment "Add modules";
					private _cindex = _parentTree tvAdd [[_parentCategory,_parentSubcategory], _moduleName];
					private _path = [_parentCategory,_parentSubcategory,_cindex];
					_parentTree tvSetTooltip [_path,_moduleTip];
					_parentTree tvSetPicture [_path, _iconPath];
					_parentTree tvSetData [_path, 'B_Soldier_VR_F'];
					_parentTree tvSetPictureColor [_path, _iconColor];
					_parentTree tvSetColor [_path, _textColor];
					comment "_parentTree tvSetPictureColorSelected [_path, _iconColorSelected];";
					comment "_parentTree tvSetPictureColorDisabled [_path, _iconColorDisabled];";
					_parentTree ctrlCommit 0;
					_path;
				};

				MAZ_EZM_fnc_zeusAddModule_OPFOR = {
					params [
						['_parentTree', findDisplay 312 displayCtrl 280],
						['_parentCategory', 1],
						['_parentSubcategory',1],
						['_moduleName', '[ Module ]'],
						['_moduleTip', '[ Placeholder ]'],
						['_moduleFunction', 'JAM_fnc_nullFunction'],
						['_iconPath', '\a3\ui_f_curator\Data\Displays\RscDisplayCurator\modeModules_ca.paa'],
						['_textColor', [1,1,1,1]],
						['_iconColor', [1,1,1,1]],
						['_iconColorSelected', [0,0,0,1]],
						['_iconColorDisabled', [0.8,0,0,0.8]]
					];
					
					comment "Setup functions";
					_functionArray = missionNamespace getVariable ['MAZ_zeusModulesWithFunction', []];
					private _functionCount = count _functionArray; 
					private _functionIndex = 7000 + (_functionCount + 1);
					private _moduleTip = format ['%1\n\nFunction ID:\n%2', _moduleTip, str _functionIndex];
					_functionArray pushBack [_functionIndex, _moduleFunction];
					missionNamespace setVariable ['MAZ_zeusModulesWithFunction', _functionArray];
					
					comment "Add modules";
					private _cindex = _parentTree tvAdd [[_parentCategory,_parentSubcategory], _moduleName];
					private _path = [_parentCategory,_parentSubcategory,_cindex];
					_parentTree tvSetTooltip [_path,_moduleTip];
					_parentTree tvSetPicture [_path, _iconPath];
					_parentTree tvSetData [_path, 'O_Soldier_VR_F'];
					_parentTree tvSetPictureColor [_path, _iconColor];
					_parentTree tvSetColor [_path, _textColor];
					comment "_parentTree tvSetPictureColorSelected [_path, _iconColorSelected];";
					comment "_parentTree tvSetPictureColorDisabled [_path, _iconColorDisabled];";
					_parentTree ctrlCommit 0;
					_path;
				};

				MAZ_EZM_fnc_zeusAddModule_INDEP = {
					params [
						['_parentTree', findDisplay 312 displayCtrl 280],
						['_parentCategory', 1],
						['_parentSubcategory',1],
						['_moduleName', '[ Module ]'],
						['_moduleTip', '[ Placeholder ]'],
						['_moduleFunction', 'JAM_fnc_nullFunction'],
						['_iconPath', '\a3\ui_f_curator\Data\Displays\RscDisplayCurator\modeModules_ca.paa'],
						['_textColor', [1,1,1,1]],
						['_iconColor', [1,1,1,1]],
						['_iconColorSelected', [0,0,0,1]],
						['_iconColorDisabled', [0.8,0,0,0.8]]
					];
					
					comment "Setup functions";
					_functionArray = missionNamespace getVariable ['MAZ_zeusModulesWithFunction', []];
					private _functionCount = count _functionArray; 
					private _functionIndex = 7000 + (_functionCount + 1);
					private _moduleTip = format ['%1\n\nFunction ID:\n%2', _moduleTip, str _functionIndex];
					_functionArray pushBack [_functionIndex, _moduleFunction];
					missionNamespace setVariable ['MAZ_zeusModulesWithFunction', _functionArray];
					
					comment "Add modules";
					private _cindex = _parentTree tvAdd [[_parentCategory,_parentSubcategory], _moduleName];
					private _path = [_parentCategory,_parentSubcategory,_cindex];
					_parentTree tvSetTooltip [_path,_moduleTip];
					_parentTree tvSetPicture [_path, _iconPath];
					_parentTree tvSetData [_path, 'I_Soldier_VR_F'];
					_parentTree tvSetPictureColor [_path, _iconColor];
					_parentTree tvSetColor [_path, _textColor];
					comment "_parentTree tvSetPictureColorSelected [_path, _iconColorSelected];";
					comment "_parentTree tvSetPictureColorDisabled [_path, _iconColorDisabled];";
					_parentTree ctrlCommit 0;
					_path;
				};

				MAZ_EZM_fnc_zeusAddModule_CIVILIAN = {
					params [
						['_parentTree', findDisplay 312 displayCtrl 280],
						['_parentCategory', 1],
						['_parentSubcategory',1],
						['_moduleName', '[ Module ]'],
						['_moduleTip', '[ Placeholder ]'],
						['_moduleFunction', 'JAM_fnc_nullFunction'],
						['_iconPath', '\a3\ui_f_curator\Data\Displays\RscDisplayCurator\modeModules_ca.paa'],
						['_textColor', [1,1,1,1]],
						['_iconColor', [1,1,1,1]],
						['_iconColorSelected', [0,0,0,1]],
						['_iconColorDisabled', [0.8,0,0,0.8]]
					];
					
					comment "Setup functions";
					_functionArray = missionNamespace getVariable ['MAZ_zeusModulesWithFunction', []];
					private _functionCount = count _functionArray; 
					private _functionIndex = 7000 + (_functionCount + 1);
					private _moduleTip = format ['%1\n\nFunction ID:\n%2', _moduleTip, str _functionIndex];
					_functionArray pushBack [_functionIndex, _moduleFunction];
					missionNamespace setVariable ['MAZ_zeusModulesWithFunction', _functionArray];
					
					comment "Add modules";
					private _cindex = _parentTree tvAdd [[_parentCategory,_parentSubcategory], _moduleName];
					private _path = [_parentCategory,_parentSubcategory,_cindex];
					_parentTree tvSetTooltip [_path,_moduleTip];
					_parentTree tvSetPicture [_path, _iconPath];
					_parentTree tvSetData [_path, 'C_Soldier_VR_F'];
					_parentTree tvSetPictureColor [_path, _iconColor];
					_parentTree tvSetColor [_path, _textColor];
					comment "_parentTree tvSetPictureColorSelected [_path, _iconColorSelected];";
					comment "_parentTree tvSetPictureColorDisabled [_path, _iconColorDisabled];";
					_parentTree ctrlCommit 0;
					_path;
				};

				MAZ_EZM_fnc_addZeusPreviewEvents = {
					private _zeusDisplay = findDisplay 312;
					if (isNull _zeusDisplay) exitWith {};
					if (_zeusDisplay getVariable ['MAZ_zeusPreviewInitialized', false]) exitWith {};
					private _idcs = [270,271,272,273,274];
					{
						private _ctrl = _zeusDisplay displayCtrl _x;
						_ctrl ctrlAddEventHandler ['TreeMouseMove',{
							params ['_control', '_path'];
							private _data = _control tvData _path;
							private _img = getText (configfile >> 'CfgVehicles' >> _data >> 'editorPreview');
							if (_data == '' || _img == '') then {
								with uiNamespace do {
									{
										_x ctrlShow false;
									} forEach MAZ_zeusPreviewCtrls;
								};
							} else {
								getMousePosition params ['_mouseX', '_mouseY'];
								_mouseY = _mouseY - 0.11;
								(getTextureInfo _img) params ["_width","_height"];
								private _ratio = (_width / _height);
								private _posEdgeX = switch (getResolution # 5) do {
									case 0.47 : {52.5};
									case 0.55 : {47.5};
									case 0.7 : {42.5};
									case 0.85 : {37.5};
									case 1 : {32.5};
									default {47.5};
								};
								private _previewImage = uiNamespace getVariable "MAZ_ctrl_previewImage";
								private _previewBackground = uiNamespace getVariable "MAZ_ctrl_previewBackground";
								private _previewFrame = uiNamespace getVariable "MAZ_ctrl_previewFrame";
    							_previewImage ctrlSetPositionW (["W",(5.5 * _ratio)] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
								_previewImage ctrlSetPositionX (["X",((_posEdgeX - 0.5) - (5.5*_ratio))] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
								_previewImage ctrlSetPositionY (_mouseY + 0.019);
								_previewImage ctrlSetText _img;
								_previewImage ctrlCommit 0;

								{
									_x ctrlSetPositionW (["W",(5.5 * _ratio) + 1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
									_x ctrlSetPositionX (["X",((_posEdgeX - 1) - (5.5*_ratio))] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
									_x ctrlSetPositionY _mouseY;
									_x ctrlCommit 0;
								}forEach [_previewBackground,_previewFrame];

								(ctrlPosition _previewBackground) params ["","_posY","","_posH"];
								private _extendsTooLow = (_posY + _posH) > (["Y",35] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
								private _modifyPos = (_posY + _posH) - (["Y",35] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
								if(_extendsTooLow) then {
									{
										comment "35 Y pos";
										private _y = (ctrlPosition _x) select 1;
										_x ctrlSetPositionY (_y - _modifyPos);
									}forEach [_previewImage,_previewBackground,_previewFrame];
								};
								
								{
									_x ctrlShow true;
									_x ctrlCommit 0;
								} forEach [_previewImage,_previewBackground,_previewFrame];
							};
						}];
						_ctrl ctrlAddEventHandler ['TreeMouseExit',{
							params ['_control'];
							with uiNamespace do {
								{
									_x ctrlShow false;
								} forEach MAZ_zeusPreviewCtrls;
							};
						}];
					} forEach _idcs;
					_zeusDisplay getVariable ['MAZ_zeusPreviewInitialized', true];
				};

				MAZ_EZM_fnc_zeusPreviewImage = {
					with uiNamespace do {
						_display = findDisplay 312;
						MAZ_ctrl_previewBackground = _display ctrlCreate ['RscPicture', 1200];
						MAZ_ctrl_previewBackground ctrlSetText '#(argb,8,8,3)color(0,0,0,0.6)';
						MAZ_ctrl_previewBackground ctrlSetPosition [["X",32.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["Y",28] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["W",15] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["H",6.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];
						MAZ_ctrl_previewBackground ctrlCommit 0;
						MAZ_ctrl_previewImage = _display ctrlCreate ['RscPicture', 1201];
						MAZ_ctrl_previewImage ctrlSetText '#(argb,8,8,3)color(0,0,0,0)';
						MAZ_ctrl_previewImage ctrlSetPosition [["X",33] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["Y",28.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["W",14] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["H",5.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];
						MAZ_ctrl_previewImage ctrlCommit 0;
						MAZ_ctrl_previewFrame = _display ctrlCreate ['RscFrame', 1800];
						MAZ_ctrl_previewFrame ctrlSetPosition [["X",32.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["Y",28] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["W",15] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["H",6.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];
						MAZ_ctrl_previewFrame ctrlCommit 0;
						MAZ_zeusPreviewCtrls = [
							MAZ_ctrl_previewBackground,
							MAZ_ctrl_previewImage,
							MAZ_ctrl_previewFrame
						];
						{
							_x ctrlShow false;
						} forEach MAZ_zeusPreviewCtrls;
					};
				};

				MAZ_EZM_fnc_drawEventhandlerAreaMarkers = {
					private _ctrlMap  = findDisplay 312 displayCtrl 50;
					_ctrlMap ctrlAddEventHandler ["Draw",{
						params ["_map"];
						{
							if((markerShape _x == "ELLIPSE") || (markerShape _x == "RECTANGLE")) then {
								private _color = getArray (configFile >> "CfgMarkerColors" >> markerColor _x >> "color");
								if((_color select 0) isEqualType "") then {
									{
										_color set [_forEachIndex,call (compile _x)];
									}forEach _color;
								};
								_map drawIcon ["\a3\3den\data\cfg3den\marker\texturecenter_ca.paa",_color,getMarkerPos _x,10,10,0];
							};
						}forEach allMapMarkers;
					}];
				};

			comment "Quality of Life Stuff";

				MAZ_EZM_fnc_addCollapseExpandButtons = {
					private _display = (findDisplay 312);
					private _zeusSearchBar = _display displayCtrl 283;
					private _zeusSearchButton = _display displayCtrl 646;
					(ctrlPosition _zeusSearchBar) params ["_searchPosX","_searchPosY","_searchPosW","_searchPosH"];
					_zeusSearchBar ctrlSetPositionW (_searchPosW - (["W",2.2] call MAZ_EZM_fnc_convertToGUI_GRIDFormat));
					_zeusSearchBar ctrlCommit 0;

					private _ctrlGroup = ctrlParentControlsGroup _zeusSearchButton;
					(ctrlPosition _zeusSearchButton) params ["_searchButtonPosX","_searchButtonPosY","_searchButtonPosW","_searchButtonPosH"];
					_zeusSearchButton ctrlSetPositionX (_searchButtonPosX - (["W",2.2] call MAZ_EZM_fnc_convertToGUI_GRIDFormat));
					_zeusSearchButton ctrlCommit 0;

					private _zeusCollapse = _display ctrlCreate ["RscActivePicture",-1,_ctrlGroup];
					_zeusCollapse ctrlSetText "a3\3den\data\displays\display3den\tree_collapse_ca.paa";
					_zeusCollapse ctrlSetTextColor [1,1,1,0.8];
					_zeusCollapse ctrlSetActiveColor [1,1,1,1];
					_zeusCollapse ctrlSetBackgroundColor [0,0,0,0.5];
					_zeusCollapse ctrlSetPosition [(_searchButtonPosX - (["W",1.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat)),_searchButtonPosY,_searchButtonPosW,_searchButtonPosH];
					_zeusCollapse ctrlAddEventHandler ["ButtonClick",{
						[] call MAZ_EZM_fnc_collapseAllTrees;
					}];
					_zeusCollapse ctrlCommit 0;

					private _zeusExpand = _display ctrlCreate ["RscActivePicture",-1,_ctrlGroup];
					_zeusExpand ctrlSetText "a3\3den\data\displays\display3den\tree_expand_ca.paa";
					_zeusExpand ctrlSetTextColor [1,1,1,0.8];
					_zeusExpand ctrlSetActiveColor [1,1,1,1];
					_zeusExpand ctrlSetBackgroundColor [0,0,0,0.5];
					_zeusExpand ctrlSetPosition [_searchButtonPosX,_searchButtonPosY + (["Y",0.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),_searchButtonPosW,_searchButtonPosH - (["Y",0.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat)];
					_zeusExpand ctrlAddEventHandler ["ButtonClick",{
						[] call MAZ_EZM_fnc_expandAllTrees;
					}];
					_zeusExpand ctrlCommit 0;
				};
				[] call MAZ_EZM_fnc_addCollapseExpandButtons;

				MAZ_EZM_fnc_removeFactionStuffFromEmpty = {
					private _display = (findDisplay 312);
					private _civilianUnitTree = (_display displayCtrl 274);
					private _factionNames = ["AAF","Civilians","CSAT","CSAT (Pacific)","CTRG","FIA","Gendarmerie","IDAP","LDF","NATO","NATO (Pacific)","NATO (Woodland)","Syndikat"];
					private _treePaths = [];
					for '_n' from 0 to 40 do {
						private _text = _civilianUnitTree tvText [_n];
						if(_text in _factionNames) then {
							_treePaths pushBack _n;
						};
					};
					{
						_civilianUnitTree tvDelete [_x - _forEachIndex];
					}forEach _treePaths;
				};
				[] call MAZ_EZM_fnc_removeFactionStuffFromEmpty;

				MAZ_EZM_fnc_addSpawnWithoutCrewButton = {	
					private _display = (findDisplay 312);	
					private _spawnBannerCtrl = (_display displayCtrl 270);	
					private _ctrlGroup = ctrlParentControlsGroup _spawnBannerCtrl;	
					(ctrlPosition _spawnBannerCtrl) params ["_posX","_posY","_posW","_posH"];	
					private _yPosButton = _posY + _posH - (["H",1.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);	
					private _zeusCheckBoxBG = _display ctrlCreate ["RscPicture",-1,_ctrlGroup];	
					_zeusCheckBoxBG ctrlSetText "#(argb,8,8,3)color(0.18,0.19,0.21,1)"; 	
					_zeusCheckBoxBG ctrlSetPosition [_posX,_yPosButton - (["H",0.2] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),_posW,["H",1.2] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];	
					_zeusCheckBoxBG ctrlEnable false;	
					_zeusCheckBoxBG ctrlCommit 0;	
					private _zeusCheckBoxFrame = _display ctrlCreate ["RscFrame",-1,_ctrlGroup];	
					_zeusCheckBoxFrame ctrlSetTextColor [0,0,0,1];	
					_zeusCheckBoxFrame ctrlSetPosition [_posX,_yPosButton - (["H",0.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),_posW,["H",1.2] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];	
					_zeusCheckBoxFrame ctrlEnable false;	
					_zeusCheckBoxFrame ctrlCommit 0;	
						
					private _zeusCheckBoxText = _display ctrlCreate ["RscText",-1,_ctrlGroup];	
					_zeusCheckBoxText ctrlSetText "Spawn vehicles with crew";	
					_zeusCheckBoxText ctrlSetTextColor [1,1,1,1];	
					_zeusCheckBoxText ctrlSetPosition [(_posX + (["W",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat)),_yPosButton - (["H",0.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),_posW - (["W",1.2] call MAZ_EZM_fnc_convertToGUI_GRIDFormat),["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];	
					_zeusCheckBoxText ctrlEnable false;	
					_zeusCheckBoxText ctrlCommit 0;	
					private _zeusCheckBox = _display ctrlCreate ["RscCheckbox",-1,_ctrlGroup];	
					_zeusCheckBox ctrlSetTextColor [1,1,1,0.8];	
					_zeusCheckBox ctrlSetActiveColor [1,1,1,1];	
					_zeusCheckBox cbSetChecked (missionNamespace getVariable ["MAZ_EZM_spawnWithCrew",true]);	
					_zeusCheckBox ctrlSetPosition [(_posX + (["W",0.1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat)),_yPosButton,["W",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["H",1] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];	
					_zeusCheckBox ctrlAddEventHandler ["ButtonClick",{	
						if(MAZ_EZM_spawnWithCrew) then {	
							MAZ_EZM_spawnWithCrew = false;	
						} else {	
							MAZ_EZM_spawnWithCrew = true;	
						};	
					}];	
					_zeusCheckBox ctrlCommit 0;	
					{	
						(ctrlPosition (_display displayCtrl _x)) params ["","_posY","","_posH"];	
						(_display displayCtrl _x) ctrlSetPositionH (_posH - (["H",1.2] call MAZ_EZM_fnc_convertToGUI_GRIDFormat));	
						(_display displayCtrl _x) ctrlCommit 0;	
					} forEach [270,271,272,273,274,275,276,277,278,279,280,281,282];	
				};	
				call MAZ_EZM_fnc_addSpawnWithoutCrewButton;	
				
				MAZ_EZM_fnc_moveTree = {	
					params ["_ctrl","_fromPath","_toPath"];	
					private _data = [_ctrl,_fromPath] call MAZ_EZM_fnc_getSubChildrenOfTree;	
					[_ctrl,_fromPath,_toPath,_data] spawn MAZ_EZM_fnc_createTree;	
				};	
				
				MAZ_EZM_fnc_getSubChildrenOfTree = {	
					params ["_ctrl","_fromPath"];	
					private _size = _ctrl tvCount _fromPath;	
					if(_size <= 0) exitWith {};	
					private _subChildren = [];	
					for "_i" from 0 to (_size - 1) do {	
						private _xPath = _fromPath + [_i];	
						systemChat (str _xPath);	
						private _xText = _ctrl tvText _xPath;	
						private _xData = _ctrl tvData _xPath;	
						private _xHasChildren = false;	
						if(_ctrl tvCount _xPath > 0) then {	
							comment "Has subchildren";	
							_xHasChildren = true;	
						};	
						_subChildren pushBack [_i,_xText,_xData,_xHasChildren];	
					};	
					_subChildren	
				};	
				
				MAZ_EZM_fnc_createTree = {	
					params ["_ctrl","_fromPath","_toPath","_data"];	
					{	
						_x params ["_path","_text","_data","_hasChildren"];	
						_ctrl tvAdd [_toPath,_text];	
						private _xPath = _toPath + [_forEachIndex];	
						_ctrl tvSetData [_xPath,_data];	
						if(_hasChildren) then {	
							private _children = [_ctrl,_fromPath + [_forEachIndex]] call MAZ_EZM_fnc_getSubChildrenOfTree;	
							[_ctrl,_fromPath + [_forEachIndex],_xPath,_children] spawn MAZ_EZM_fnc_createTree;	
						};	
						sleep 0.5;	
					}forEach _data;	
				};	
				
				MAZ_EZM_fnc_removeUselessGroupTrees = {	
					{	
						((findDisplay 312) displayCtrl _x) tvDelete [0];	
					} forEach [275,276,277];	
				};

			comment "Warning System";

				MAZ_EZM_fnc_getActiveWarnings = {
					private _count = 0;
					{
						if(_x select 2) then {_count = _count + 1;}
					}forEach (uiNamespace getVariable ["MAZ_EZM_activeWarnings",[]]);
					_count
				};

				MAZ_EZM_fnc_addWarningElement = {
					params ["_text",["_icon","A3\UI_F\Data\Map\Markers\Military\warning_ca.paa"],["_color",[1,0,0,1]]];

					with uiNamespace do {
						private _warningPicture = (findDisplay 312) ctrlCreate ["RscPicture",-1];
						_warningPicture ctrlSetPosition [["X",46] call MAZ_EZM_fnc_convertToGUI_GRIDFormat, ["Y",-8] call MAZ_EZM_fnc_convertToGUI_GRIDFormat, ["W",1.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["H",1.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];
						_warningPicture ctrlSetText _icon;
						_warningPicture ctrlSetTooltip _text;
						_warningPicture ctrlSetTextColor _color;
						_warningPicture ctrlSetPositionY (["Y",-8 + (2 * ([] call MAZ_EZM_fnc_getActiveWarnings))] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
						_warningPicture ctrlCommit 0;

						playSound "addItemFailed";

						MAZ_EZM_activeWarnings pushBack [_warningPicture,[_text,_icon,_color],true];
					};
				};

				MAZ_EZM_fnc_removeWarningElement = {
					params ["_warningIndex"];
					private _warningData = (uiNamespace getVariable ["MAZ_EZM_activeWarnings",[]]) select _warningIndex;
					_warningData params ["_warningPicture","_warningInfo","_isActive"];
					(uiNamespace getVariable ["MAZ_EZM_activeWarnings",[]]) set [_warningIndex,[_warningPicture,_warningInfo,false]];
					ctrlDelete _warningPicture;
					private _count = 0;
					{
						_x params ["_ctrl","_warningInfo","_isActive"];
						if(!_isActive) then {continue};
						_ctrl ctrlSetPositionY (["Y",-8 + (2 * _count)] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);
						_ctrl ctrlCommit 0;
						_count = _count + 1;
					}forEach (uiNamespace getVariable ["MAZ_EZM_activeWarnings",[]]);
				};

				MAZ_EZM_fnc_showAllWarnings = {	
					if(count (uiNamespace getVariable ["MAZ_EZM_activeWarnings",[]]) < 0) exitWith {};	
					if(isNull (findDisplay 312)) exitWith {};	
					with uiNamespace do {	
						private _count = 0;	
						if(isNil "MAZ_EZM_activeWarnings") exitWith {};	
						{	
							_x params ["_ctrl","_warningInfo","_isActive"];	
							_warningInfo params ["_text","_icon","_color"];	
							if(!_isActive) then {continue};	
							private _ctrl = (findDisplay 312) ctrlCreate ["RscPicture",-1];	
							_ctrl ctrlSetPosition [["X",46] call MAZ_EZM_fnc_convertToGUI_GRIDFormat, ["Y",-8] call MAZ_EZM_fnc_convertToGUI_GRIDFormat, ["W",1.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat,["H",1.5] call MAZ_EZM_fnc_convertToGUI_GRIDFormat];	
							_ctrl ctrlSetText _icon;	
							_ctrl ctrlSetTooltip _text;	
							_ctrl ctrlSetTextColor _color;	
							_ctrl ctrlSetPositionY (["Y",-8 + (2 * _count)] call MAZ_EZM_fnc_convertToGUI_GRIDFormat);	
							_ctrl ctrlCommit 0;	
							_count = _count + 1;	
							if(!isNil "MAZ_EZM_activeWarnings") then {	
								MAZ_EZM_activeWarnings set [_forEachIndex,[_ctrl,_warningInfo,_isActive]];	
							};	
						}forEach MAZ_EZM_activeWarnings;	
					};	
					(findDisplay 312) setVariable ["MAZ_EZM_hideWarnings",false];	
				};	
				[] call MAZ_EZM_fnc_showAllWarnings;	
					
				MAZ_EZM_fnc_hideAllWarnings = {	
					if(count (uiNamespace getVariable ["MAZ_EZM_activeWarnings",[]]) < 0) exitWith {};	
					if(isNull (findDisplay 312)) exitWith {};	
					with uiNamespace do {	
						if(isNil "MAZ_EZM_activeWarnings") exitWith {};	
						{	
							_x params ["_ctrl","_warningInfo","_isActive"];	
							_ctrl ctrlSetFade 1;	
							_ctrl ctrlCommit 0.1;	
						}forEach MAZ_EZM_activeWarnings;	
					};	
				};	
				
				MAZ_EZM_fnc_unhideAllWarnings = {	
					if(count (uiNamespace getVariable ["MAZ_EZM_activeWarnings",[]]) < 0) exitWith {};	
					if(isNull (findDisplay 312)) exitWith {};	
					with uiNamespace do {	
						if(isNil "MAZ_EZM_activeWarnings") exitWith {};	
						{	
							_x params ["_ctrl","_warningInfo","_isActive"];	
							_ctrl ctrlSetFade 0;	
							_ctrl ctrlCommit 0.1;	
						}forEach MAZ_EZM_activeWarnings;	
					};	
				};

				MAZ_EZM_fnc_detectRespawnsUnavailable = {
					with uiNamespace do {
						private _warningText = "";
						private _sideStrings = ["BLUFOR","OPFOR","INDEPENDENT","CIVILIAN"];
						{
							private _sideOf = _x;
							private _numPlayers = {side (group _x) == _sideOf} count allPlayers;
							if(_numPlayers <= 0) then {continue};

							private _respawnCountSide = count ([_sideOf] call BIS_fnc_getRespawnPositions);
							if(_respawnCountSide != 0) then {continue};

							_warningText = _warningText + "There is no respawn for " + (_sideStrings select _forEachIndex) + " players!\n";
						}forEach [west,east,independent,civilian];

						if(_warningText == "") exitWith {
							if(!isNil "MAZ_EZM_missingRespawnWarn") then {
								[MAZ_EZM_missingRespawnWarn] call MAZ_EZM_fnc_removeWarningElement;
								MAZ_EZM_missingRespawnWarn = nil;
							};
						};

						if(!isNil "MAZ_EZM_missingRespawnWarn") exitWith {
							private _currentWarnText = MAZ_EZM_activeWarnings select MAZ_EZM_missingRespawnWarn select 1 select 0;
							if(_currentWarnText != _warningText) then {
								[MAZ_EZM_missingRespawnWarn] call MAZ_EZM_fnc_removeWarningElement;
								MAZ_EZM_missingRespawnWarn = [_warningText] call MAZ_EZM_fnc_addWarningElement;
							};
						};

						MAZ_EZM_missingRespawnWarn = [_warningText] call MAZ_EZM_fnc_addWarningElement;
					};
				};

				MAZ_EZM_fnc_detectLowServerPerformance = {	
					private _avgFnc = missionNamespace getVariable ["MAZ_EZM_fnc_getAverageFPS",{}];	
					private _svrFnc = missionNamespace getVariable ["MAZ_EZM_fnc_getServerFPS",{}];	
					call _avgFnc;	
					call _svrFnc;	
					[] spawn {	
						waitUntil {uiSleep 0.1; !MAZ_EZM_isPingingAVGFPS};	
						if(MAZ_EZM_avgFPS < 15) then {	
							comment "HOLY COW! LOW FPS!";	
						};	
					};	
					[] spawn {	
						waitUntil {uiSleep 0.1; !MAZ_EZM_isPingingServerFPS};	
						if(MAZ_EZM_serverFPS < 30) then {	
							comment "HOLY COW! LOW FPS!";	
						};	
					};	
				};	
				
				[] spawn {	
					while {!isNull (findDisplay 312)} do {	
						[] call MAZ_EZM_fnc_detectRespawnsUnavailable;	
						sleep 5;	
					};	
				};

			comment "Define Trees";
			
				MAZ_UnitsTree_BLUFOR	 = (_display displayCtrl 270);
				MAZ_UnitsTree_OPFOR		 = (_display displayCtrl 271);
				MAZ_UnitsTree_INDEP		 = (_display displayCtrl 272);
				MAZ_UnitsTree_CIVILIAN	 = (_display displayCtrl 273);
				MAZ_UnitsTree_EMPTY      = (_display displayCtrl 274);
				MAZ_zeusModulesTree 	 = (_display displayCtrl 280);
				
				_UnitsTree_BLUFOR = MAZ_UnitsTree_BLUFOR;
				_UnitsTree_OPFOR = MAZ_UnitsTree_OPFOR;
				_UnitsTree_INDEP = MAZ_UnitsTree_INDEP;
				_UnitsTree_CIVILIAN = MAZ_UnitsTree_CIVILIAN;
				_UnitsTree_EMPTY = MAZ_UnitsTree_EMPTY;
				_zeusModulesTree = MAZ_zeusModulesTree;
				
				for '_n' from 0 to 32 do 
				{
					_UnitsTree_BLUFOR tvCollapse [_n];
					_UnitsTree_OPFOR tvCollapse [_n];
					_UnitsTree_INDEP tvCollapse [_n];
					_UnitsTree_CIVILIAN tvCollapse [_n];
					_UnitsTree_EMPTY tvCollapse [_n];
					_zeusModulesTree tvCollapse [_n];
					comment "
						MAZ_GroupsTree_BLUFOR tvCollapse [_n];
						MAZ_GroupsTree_OPFOR tvCollapse [_n];
						MAZ_GroupsTree_INDEP tvCollapse [_n];
						MAZ_GroupsTree_CIVILIAN tvCollapse [_n];
					";
				};
				
				{
					_x ctrlSetEventHandler ["TreeSelChanged","[(_this select 1)] call MAZ_EZM_fnc_updateModuleSelection"];
				} forEach [MAZ_UnitsTree_BLUFOR,MAZ_UnitsTree_OPFOR,MAZ_UnitsTree_INDEP,MAZ_UnitsTree_CIVILIAN,MAZ_UnitsTree_EMPTY,MAZ_zeusModulesTree];

			comment "Add Divider";
				MAZ_EZMLabelTree = [_zeusModulesTree,"AEGIS Modules",'\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa',EZM_trimColor] call _EZM_fnc_zeusAddCategory;
				_zeusModulesTree tvSetPictureRightColor [[MAZ_EZMLabelTree], [1,1,1,1]];
				[
					_zeusModulesTree,
					MAZ_EZMLabelTree,
					format ["AEGIS: %1",missionNamespace getVariable ['MAZ_EZM_LiteVersion','']],
					"Originally created by: M9-SD & GamesByChris\nAdapted by: Expung3d to enhance Public Zeus.\nExpanded By: Lockheed Martin into the AEGIS Fork",
					"MAZ_EZM_fnc_hiddenEasterEggModule",
					'\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa'
				] call _EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_EZMLabelTree,
					"Debug Menu",
					"Display a list and corresponding count of active scripts on your local client.",
					"LM_fnc_activeSQFModule",
					'a3\3den\data\cfgwaypoints\scripted_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_EZMLabelTree,
					"Script Credits",
					"View the combined credits for all the scripts which make AEGIS possible.",
					"LM_fnc_scriptCreditsModule",
					"a3\3den\data\cfgwaypoints\scripted_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
			comment "Dev Scripts";
			private _commentModule = "
				MAZ_DevScriptsTree = [
					MAZ_zeusModulesTree,
					'Dev Scripts',
					'\A3\Ui_f\data\GUI\Cfg\KeyframeAnimation\IconKey_CA.paa'
				] call MAZ_EZM_fnc_zeusAddCategory;";
			
			comment "AI Modifiers";
				MAZ_EditAITree = [
					MAZ_zeusModulesTree,
					"AI Modifiers",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\intel_ca.paa'
				] call MAZ_EZM_fnc_zeusAddCategory;

				[
					MAZ_zeusModulesTree,
					MAZ_EditAITree,
					"Easy Mode",
					"Decreases difficulty and makes AI stand.",
					"MAZ_EZM_fnc_easyModeModule",
					'\A3\ui_f\data\IGUI\Cfg\mptable\infantry_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_EditAITree,
					"Garrison (Instant)",
					"Places AI's group in randomized position in nearest building.",
					"MAZ_EZM_fnc_garrisonInstantModule",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\run_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_EditAITree,
					"Garrison (Search)",
					"Places AI's group in randomized position in nearest building.",
					"MAZ_EZM_fnc_garrisonSearchModule",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\getin_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_EditAITree,
					"Un-Garrison",
					"Removes AI from their garrisoned position.",
					"MAZ_EZM_fnc_unGarrisonModule",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\getout_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_EditAITree,
					"Edit AI Equipment",
					"Remove or equip AI with NVGs or flashlights.",
					"MAZ_EZM_fnc_removeNVGsAddFlashlightsModule",
					"a3\ui_f\data\igui\cfg\actions\gear_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_EditAITree,
					"Enable AI Lasers",
					"Makes AI turn on their lasers and lights.",
					"MAZ_EZM_fnc_toggleLightsModule",
					"a3\ui_f_curator\data\cfgcurator\laser_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_EditAITree,
					"Disable AI Lasers",
					"Makes AI turn off their lasers and lights.",
					"MAZ_EZM_fnc_toggleOffLightsModule",
					"a3\ui_f\data\map\markers\military\dot_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_EditAITree,
					"Make Hostage",
					"Makes AI into a restrained hostage.",
					"MAZ_EZM_fnc_makeHostageModule",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\help_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_EditAITree,
					"Make HVT",
					"Makes AI an HVT that, when killed, everyone will be notified.",
					"MAZ_EZM_fnc_makeHVTModule",
					"a3\modules_f_curator\data\portraitobjectiveneutralize_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_EditAITree,
					"Set Ambient Animation",
					"Set Ambient Animations",
					"MAZ_EZM_fnc_setAmbientAnimationModule",
					"a3\ui_f_curator\data\rsccommon\rscattributepunishmentanimation\pushupslegs.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_EditAITree,
					"Set Difficulty",
					"Adjust all AI's difficulty.",
					"MAZ_EZM_fnc_changeDifficultyModule",
					'\A3\ui_f\data\IGUI\RscIngameUI\RscUnitInfo\SI_stand_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_EditAITree,
					"Set Stance",
					"Makes AI forced into stance mode. i.e. prone, crouch, standing, auto.",
					"MAZ_EZM_fnc_changeStanceModule",
					'\A3\ui_f\data\IGUI\RscIngameUI\RscUnitInfo\SI_stand_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_EditAITree,
					"Suppressive Fire",
					"Makes the AI suppress the position you select.",
					"MAZ_EZM_fnc_suppressiveFireModule",
					"a3\static_f_oldman\hmg_02\data\ui\icon_hmg_02_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_EditAITree,
					"Toggle Unit Carelessness",
					"Makes the unit careless or uncareless, ignores contact and doesn't engage.",
					"MAZ_EZM_fnc_toggleCarelessModule",
					"a3\ui_f_curator\data\rsccommon\rscattributebehaviour\safe_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_EditAITree,
					"Toggle Unit Surrender",
					"Makes AI surrender or un-surrender.",
					"MAZ_EZM_fnc_toggleSurrenderModule",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\help_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

			comment "AI Supports";
				MAZ_AISupportTree = [
					MAZ_zeusModulesTree,
					"AI Supports",
					"a3\modules_f_curator\data\portraitradio_ca.paa"
				] call MAZ_EZM_fnc_zeusAddCategory;
				
				[
					MAZ_zeusModulesTree,
					MAZ_AISupportTree,
					"Airdrop",
					"Calls an airdrop to module position.",
					"MAZ_EZM_fnc_callAirdropModule",
					"a3\air_f_beta\parachute_01\data\ui\portrait_parachute_01_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_AISupportTree,
					"Evac Helicopter",
					"HOW TO USE:\n1: Place module on position to which a helicopter will fly and land to pickup players.\n2: Select secondary position that the helicopter will drop them off at.",
					"MAZ_EZM_fnc_callEvacModule",
					"a3\air_f\heli_light_01\data\ui\map_heli_light_01_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_AISupportTree,
					"Call Reinforcements",
					"HOW TO USE:\n1: Place module on position to which a helicopter will fly and drop off troops.\n2: Select reinforcements parameters in menu.\n3: Select secondary position that reinforcements will move to on foot.",
					"MAZ_EZM_fnc_callReinforcements",
					'\A3\ui_f\data\gui\rsc\rscdisplayarsenal\radio_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

			comment "Arsenal (s)";

				MAZ_ArsenalTree = [
					MAZ_zeusModulesTree,
					"Arsenal Creator",
					'\A3\ui_f\data\Logos\a_64_ca.paa'
				] call MAZ_EZM_fnc_zeusAddCategory;
				
				MAZ_zeusModulesTree tvSetTooltip [[MAZ_ArsenalTree], ""];
				
				[
					MAZ_zeusModulesTree,
					MAZ_ArsenalTree,
					"Full Arsenal *",
					"----------------------------------------------------------------------------------------------------------------------------------------------------------------------\nFull Arsenal (by Expung3d)\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nDescription:\n There are two ways to use this module:\n(1) Place onto another object to make it a full arsenal.\n(2) Place on ground to spawn supply box full arsenal.\n\nIncludes the following options:\n- Open Full Arsenal\n- Save Respawn Loadout\n\n* Warning: Incompatible with AIO arsenal by M9-SD.",
					"MAZ_EZM_fnc_createArsenalModule",
					'\A3\ui_f\data\Logos\a_64_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_ArsenalTree,
					"AIO Arsenal *",
					"----------------------------------------------------------------------------------------------------------------------------------------------------------------------\nAll-In-One Arsenal (by M9-SD)\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nDescription:\n There are two ways to use this module:\n(1) Place onto another object to make it an AIO arsenal.\n(2) Place on ground to spawn supply box AIO arsenal.\n\nIncludes the following options:\n- Full Arsenal\n- Quick Rearm\n- Copy Loadout\n- Empty Loadout\n- Save Respawn Loadout\n- Load Respawn Loadout\n- Delete Respawn Loadout\n- Edit Group Loadouts\n\n* Warning: Incompatible with full arsenal by Expung3d.",
					"JAM_EZM_fnc_createAIOArsenalModule",
					'\A3\ui_f\data\Logos\a_64_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

			comment "Automatic Missions";

				MAZ_AutoMissionTree = [
					MAZ_zeusModulesTree,
					"Automatic Missions",
					"a3\ui_f\data\map\markers\military\objective_ca.paa",
					[1,1,1,1],
					"Automated Missions that can be spawned on different maps."
				] call MAZ_EZM_fnc_zeusAddCategory;
				
				[
					MAZ_zeusModulesTree,
					MAZ_AutoMissionTree,
					"Auto Heli Crash (On)",
					"Enables randomized helicopter crash missions.\nWill spawn and last for 15 minutes before despawning.\nAfter a mission despawns or is completed another will spawn in 10 minutes.",
					"MAZ_EZM_fnc_createRandomHelicrashModule",
					"a3\modules_f_curator\data\portraitobjectiveneutralize_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_AutoMissionTree,
					"Auto Heli Crash (Off)",
					"Disables randomized helicopter crash missions.",
					"MAZ_EZM_fnc_turnOffRandomHelicrashModule",
					"a3\ui_f\data\map\markers\military\objective_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_AutoMissionTree,
					"Auto Convoy Mission (On)",
					"Enables randomized convoy missions.\nPlayers must capture the truck moving within the convoy.\nWill spawn and last until killed or reaching its destination.\nAfter a mission despawns or is completed another will spawn in 10 minutes.",
					"MAZ_EZM_fnc_createRandomConvoyModule",
					"a3\modules_f_curator\data\portraitobjectivemove_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_AutoMissionTree,
					"Auto Convoy Mission (Off)",
					"Disables randomized convoy missions.",
					"MAZ_EZM_fnc_turnOffRandomConvoyModule",
					"a3\ui_f\data\map\markers\military\objective_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_AutoMissionTree,
					"Auto Garrison Town",
					"Automatically garrisons a named town or the town where the module is placed.\n\nCreation Credit: Expung3d\nExpanded By: Lockheed Martin",
					"MAZ_EZM_fnc_createGarrisonTownDialog",
					"a3\modules_f_curator\data\portraitobjectiveneutralize_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
			comment "Clean Up Stuff";
				MAZ_CleanUpTree = [
					MAZ_zeusModulesTree,
					"Clean-Up Tools",
					"a3\3den\data\displays\display3den\panelleft\entitylist_delete_ca.paa"
				] call MAZ_EZM_fnc_zeusAddCategory;

				[
					MAZ_zeusModulesTree,
					MAZ_CleanUpTree,
					"Delete Clutter",
					"Deletes all clutter on the ground.",
					"MAZ_EZM_fnc_deleteClutterModule",
					"a3\3den\data\displays\display3den\panelleft\entitylist_delete_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_CleanUpTree,
					"Delete Empty Groups",
					"Deletes all empty groups.",
					"MAZ_EZM_fnc_deleteEmptyGroupsModule",
					"a3\ui_f_curator\data\displays\rscdisplaycurator\modegroups_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_CleanUpTree,
					"Delete Everything",
					"Deletes all mission objects.",
					"MAZ_EZM_fnc_deleteEverythingModule",
					"a3\3den\data\displays\display3den\panelleft\entitylist_delete_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_CleanUpTree,
					"Delete Markers",
					"Deletes all markers.",
					"MAZ_EZM_fnc_deleteMarkersModule",
					"a3\3den\data\displays\display3den\panelright\submode_marker_icon_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_CleanUpTree,
					"Delete Mines",
					"Deletes all mines.",
					"MAZ_EZM_fnc_deleteMinesModule",
					"a3\ui_f_curator\data\cfgmarkers\minefieldap_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_CleanUpTree,
					"Delete Protection Zones",
					"Deletes all protection zones.",
					"MAZ_EZM_fnc_deleteProtectionZonesModule"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_CleanUpTree,
					"Delete Radius",
					"Deletes all objects in a radius.",
					"MAZ_EZM_fnc_deleteRadiusModule",
					"a3\3den\data\displays\display3den\panelleft\entitylist_delete_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

			comment "Create/Delete Ships";
				MAZ_DeleteShipTree = [
					MAZ_zeusModulesTree,
					"Create/Delete Ships",
					"a3\ui_f\data\map\vehicleicons\iconship_ca.paa"
				] call MAZ_EZM_fnc_zeusAddCategory;

				[
					MAZ_zeusModulesTree,
					MAZ_DeleteShipTree,
					"Create Carrier",
					"When placed on a boat, creates the USS Freedom at its position.",
					"MAZ_EZM_fnc_createCarrierModule"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_DeleteShipTree,
					"Create Destroyer",
					"When placed on a boat, creates the USS Liberty at its position.\nComes with a full interior, hull customization options, and is drivable. \nCurrently only drivable by the Zeus whom spawns the Destroyer.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_createDestroyerModule",
					"\a3\ui_f_curator\Data\Displays\RscDisplayCurator\modeModules_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_DeleteShipTree,
					"Delete All Carriers",
					"Deletes all carriers on the map.",
					"MAZ_EZM_fnc_deleteAllCarriersModule"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_DeleteShipTree,
					"Delete All Destroyers",
					"Deletes all destroyers on the map.",
					"MAZ_EZM_fnc_deleteAllDestroyersModule"
				] call MAZ_EZM_fnc_zeusAddModule;

			comment "Developer Tools";

				MAZ_DevToolsTree = [
					MAZ_zeusModulesTree,
					"Developer Tools",
					"a3\ui_f\data\gui\rsc\rscdisplayarcademap\icon_debug_ca.paa"
				] call MAZ_EZM_fnc_zeusAddCategory;

				[
					MAZ_zeusModulesTree,
					MAZ_DevToolsTree,
					"Animation Viewer",
					"Opens the Animation Viewer, if placed on a unit it will open using that unit and its current animation.",
					"MAZ_EZM_fnc_openAnimViewerModule",
					"a3\ui_f\data\gui\cfg\keyframeanimation\iconcamera_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_DevToolsTree,
					"Composition Copier",
					"Used to copy an array of objects to your clipboard in order to 'save' for later.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_compositionCopierModule",
					'a3\3den\data\cfgwaypoints\scripted_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_DevToolsTree,
					"Composition Paster",
					"Used to paste an array of objects akin to how compositions work.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_compositionPasterModule",
					'a3\3den\data\cfgwaypoints\scripted_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_DevToolsTree,
					"Debug Console",
					"Opens the Debug Console.\n\nCreation Credit: Bohemia Interactive\nIntegrated By: Lockheed Martin",
					"LM_fnc_debugConsole",
					"a3\3den\data\displays\display3den\entitymenu\findconfig_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_DevToolsTree,
					"Find in Config Viewer",
					"Opens the Config Viewer to the entity's config.",
					"MAZ_EZM_fnc_showObjectConfig",
					"a3\3den\data\displays\display3den\entitymenu\findconfig_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_DevToolsTree,
					"Function Viewer",
					"Opens the Function Viewer.",
					"MAZ_EZM_fnc_functionViewer",
					"a3\ui_f\data\gui\rsc\rscdisplayarcademap\icon_functions_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_DevToolsTree,
					"GUI Editor",
					"Opens the GUI Editor.",
					"MAZ_EZM_fnc_openGUIEditor"
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[	
					MAZ_zeusModulesTree,	
					MAZ_DevToolsTree,	
					"Save Interior",	
					"Saves interior data of selected building.",	
					"MAZ_EZM_fnc_getBuildingCompositionDataCall",	
					"a3\3den\data\displays\display3den\panelright\customcomposition_add_ca.paa"	
				] call MAZ_EZM_fnc_zeusAddModule;	
				[	
					MAZ_zeusModulesTree,	
					MAZ_DevToolsTree,	
					"Spawn Interior",	
					"Spawn random interior data onto selected building.",	
					"MAZ_EZM_fnc_createBuildingCompositionCall",	
					"a3\3den\data\cfg3den\group\iconcustomcomposition_ca.paa"	
				] call MAZ_EZM_fnc_zeusAddModule;	
				[	
					MAZ_zeusModulesTree,	
					MAZ_DevToolsTree,	
					"Remove Interior",	
					"Removes random interior data from selected building.",	
					"MAZ_EZM_fnc_removeBuildingCompositionCall",	
					"a3\3den\data\cfg3den\group\iconcustomcomposition_ca.paa"	
				] call MAZ_EZM_fnc_zeusAddModule;	
				[	
					MAZ_zeusModulesTree,	
					MAZ_DevToolsTree,	
					"RESET INTERIOR DATA",	
					"Resets EZM interior data to the default. \nYOU WILL LOSE ALL CHANGES YOU MADE TO YOUR COMPS WITHOUT UPDATING MAZ_EZM_fnc_loadDefaultCompositionData!",	
					"MAZ_EZM_fnc_getDefaultComps",	
					"a3\3den\data\displays\display3den\toolbar\undo_ca.paa"	
				] call MAZ_EZM_fnc_zeusAddModule;

			comment "Dynamic Tasks";

				MAZ_DynamicTasksTree = [
					MAZ_zeusModulesTree,
					"Dynamic Tasks",
					"\A3\ui_f\data\map\markers\nato\o_installation.paa"
				] call MAZ_EZM_fnc_zeusAddCategory;
				
				[
					MAZ_zeusModulesTree,
					MAZ_DynamicTasksTree,
					"Initialization",
					"Run this module first in order to populate the world and provide the server the required functions.\n\nCreation Credit: LISTINGS09",
					"LM_fnc_dynamicTasks",
					"a3\3den\data\cfgwaypoints\scripted_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_DynamicTasksTree,
					"Populate World",
					"Spawn a specified amount of new Zones across the world in random positions.\n\nCreation Credit: LISTINGS09",
					"LM_fnc_populateWorld",
					"a3\modules_f\data\hideterrainobjects\icon_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_DynamicTasksTree,
					"Zone Spawn",
					"Spawn a new Zone at the specified non-water location.\n\nCreation Credit: LISTINGS09",
					"LM_fnc_zoneSpawn",
					"\A3\ui_f\data\map\markers\nato\o_installation.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_DynamicTasksTree,
					"Zone Populate",
					"Populate an existing Zone with units for the corresponding side.\n\nCreation Credit: LISTINGS09",
					"LM_fnc_zonePopulate",
					"a3\ui_f_curator\data\displays\rscdisplaycurator\modegroups_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_DynamicTasksTree,
					"Zone Emplacement",
					"Spawn a Static/Support/Site emplacement within an existing Zone.\n\nCreation Credit: LISTINGS09",
					"LM_fnc_zoneEmplacement",
					"a3\modules_f\data\editterrainobject\icon_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_DynamicTasksTree,
					"Zone Support",
					"Spawn a Support for an existing Zone.\n\nCreation Credit: LISTINGS09",
					"LM_fnc_zoneSupport",
					"\A3\ui_f\data\gui\rsc\rscdisplayarsenal\radio_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_DynamicTasksTree,
					"Zone Roadblock",
					"Spawn a Roadblock near an existing Zone.\n\nCreation Credit: LISTINGS09",
					"LM_fnc_zoneRoadblock",
					"a3\static_f_oldman\hmg_02\data\ui\icon_hmg_02_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_DynamicTasksTree,
					"Zone Garrison",
					"Spawn Garrisons of units within an existing Zone.\n\nCreation Credit: LISTINGS09",
					"LM_fnc_zoneGarrison",
					"\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\getin_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_DynamicTasksTree,
					"Zone Militarise",
					"Spawn Garrisons of units within Military structures within an existing Zone.\n\nCreation Credit: LISTINGS09",
					"LM_fnc_zoneMilitarise",
					"a3\ui_f\data\gui\cfg\communicationmenu\attack_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_DynamicTasksTree,
					"Zone Patrols",
					"Spawn Patrols of units within an existing Zone.\n\nCreation Credit: LISTINGS09",
					"LM_fnc_zonePatrols",
					"\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\run_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_DynamicTasksTree,
					"Zone QRF",
					"Spawn Quick Reaction Forces of units to move to an existing Zone.\n\nCreation Credit: LISTINGS09",
					"LM_fnc_zoneQRF",
					"a3\air_f\heli_light_01\data\ui\map_heli_light_01_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_DynamicTasksTree,
					"Zone IEDs",
					"Spawn IEDs within an existing Zone.\n\nCreation Credit: LISTINGS09",
					"LM_fnc_zoneIED",
					"\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\destroy_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_DynamicTasksTree,
					"Zone Paratroopers",
					"Spawn Helos with Paratroopers to jump at an existing Zone.\n\nCreation Credit: LISTINGS09",
					"LM_fnc_zonePara",
					"a3\air_f_beta\parachute_01\data\ui\portrait_parachute_01_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_DynamicTasksTree,
					"Zone Task",
					"Spawn a Task within an existing Zone.\n\nCreation Credit: LISTINGS09",
					"LM_fnc_zoneTask",
					"a3\modules_f_curator\data\portraitobjectivemove_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_DynamicTasksTree,
					"Change Task Status",
					"Set the status of a Task to Succeeded or Failed.\n\nCreation Credit: LISTINGS09",
					"LM_fnc_taskStatus",
					"\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\whiteboard_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

			comment "Environment";

				MAZ_EnvironmentTree = [
					MAZ_zeusModulesTree,
					"Environment",
					"a3\modules_f_curator\data\portraitweather_ca.paa"
				] call MAZ_EZM_fnc_zeusAddCategory;

				[
					MAZ_zeusModulesTree,
					MAZ_EnvironmentTree,
					"Change Time",
					"Change the current time.",
					"MAZ_EZM_fnc_changeDateModule",
					"a3\modules_f_curator\data\portraitskiptime_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_EnvironmentTree,
					"Edit Weather Conditions",
					"Edit the current meteorological atmospheric environment conditions.",
					"MAZ_EZM_fnc_editWeatherConditionsModule",
					"a3\modules_f_curator\data\portraitweather_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_EnvironmentTree,
					"Monsoon Storm",
					"Starts a Monsoon weather event.\n\nCreation Credit: ALIAScartoons",
					"LM_fnc_weatherMonsoonModule",
					"a3\modules_f_curator\data\portraitweather_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_EnvironmentTree,
					"Object Fog",
					"Create Dynamic Fog particles around all players or an object of choice.\n\nCreation Credit: ALIAScartoons",
					"LM_fnc_weatherFogModule",
					"a3\modules_f_curator\data\portraitweather_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_EnvironmentTree,
					"Sand Storm",
					"Starts a Sandstorm weather event.\n\nCreation Credit: ALIAScartoons",
					"LM_fnc_weatherSandstormModule",
					"a3\modules_f_curator\data\portraitweather_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_EnvironmentTree,
					"Snow Storm",
					"Starts a Snowstorm weather event.\n\nCreation Credit: ALIAScartoons",
					"LM_fnc_weatherSnowstormModule",
					"a3\modules_f_curator\data\portraitweather_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

			comment "Explosives";

				MAZ_ExplosivesTree = [
					MAZ_zeusModulesTree,
					"Explosives",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\destroy_ca.paa'
				] call MAZ_EZM_fnc_zeusAddCategory;

				[
					MAZ_zeusModulesTree,
					MAZ_ExplosivesTree,
					"Create Minefield",
					"Create a minefield.",
					"MAZ_EZM_fnc_createMinefieldModule",
					"a3\ui_f_curator\data\cfgmarkers\minefieldap_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_ExplosivesTree,
					"Create IED",
					"Create an IED.",
					"MAZ_EZM_fnc_createIEDModule",
					"a3\ui_f_curator\data\cfgmarkers\minefieldap_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

			comment "Gameplay";

				MAZ_GameplayTree = [
					MAZ_zeusModulesTree,
					"Gameplay",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\meet_ca.paa'
				] call MAZ_EZM_fnc_zeusAddCategory;
				
				[
					MAZ_zeusModulesTree,
					MAZ_GameplayTree,
					"Create Countdown",
					"Creates an on screen countdown for players of specified side.",
					"MAZ_EZM_fnc_createCountdownModule",
					"a3\ui_f\data\igui\cfg\actions\settimer_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

			comment "Markers";

				[] call MAZ_EZM_fnc_drawEventhandlerAreaMarkers;
				
				MAZ_MarkersTree = [
					MAZ_zeusModulesTree,
					"Markers",
					"a3\3den\data\displays\display3den\panelright\submode_marker_icon_ca.paa"
				] call MAZ_EZM_fnc_zeusAddCategory;
				
				[
					MAZ_zeusModulesTree,
					MAZ_MarkersTree,
					"Create Area Marker",
					"Creates an area marker on the map position.",
					"MAZ_EZM_fnc_createAreaMarker",
					"a3\ui_f\data\map\markerbrushes\fdiagonal_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_MarkersTree,
					"Cover Map Area",
					"Covers the map except for a defined area.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_operationAreaModule",
					"a3\ui_f\data\map\markerbrushes\fdiagonal_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

			comment "Messages";

				MAZ_MessagesTree = [
					MAZ_zeusModulesTree,
					"Messages",
					"a3\3den\data\cfg3den\comment\texture_ca.paa"
				] call MAZ_EZM_fnc_zeusAddCategory;
				
				[
					MAZ_zeusModulesTree,
					MAZ_MessagesTree,
					"Send Server Message",
					"Sends a server message to specific side.",
					"MAZ_EZM_fnc_sendMessageModule",
					"a3\3den\data\cfg3den\comment\texture_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_MessagesTree,
					"Send Subtitle Message",
					"Sends a subtitle message to specific side players.",
					"MAZ_EZM_fnc_sendSubtitleModule",
					"a3\3den\data\cfg3den\comment\texture_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

			comment "Mission Modifiers";

				MAZ_MissionModifiersTree = [
					MAZ_zeusModulesTree,
					"Mission Modifiers",
					"\a3\ui_f\data\igui\cfg\simpletasks\types\Container_ca.paa"
				] call MAZ_EZM_fnc_zeusAddCategory;

				[[],{
					if (isServer) then {
						if (isDedicated) then {
							[[],{
								player setVariable ["LM_isDedicated",true];
							}] remoteExec ['bis_fnc_call',0,"LM_JIP_dedicatedCheck_var"]; 
						} else {
							[[],{
								player setVariable ["LM_isDedicated",false];
							}] remoteExec ['bis_fnc_call',0,"LM_JIP_dedicatedCheck_var"]; 
						};
					};
				}] remoteExec ['bis_fnc_call',0,"LM_JIP_dedicatedCheck"]; 
				if (!(["Bohemia Interactive", serverName] call BIS_fnc_inString)) then {
					if (!(player getVariable ["LM_isDedicated", true])) then { 
						[
							MAZ_zeusModulesTree,
							MAZ_MissionModifiersTree,
							"Add Radio Channel",
							"Create a new channel for players of a side to talk on.\n\nCreation Credit: Lockheed Martin",
							"LM_fnc_createChannelModule",
							'a3\modules_f_curator\data\portraitradio_ca.paa',
							EZM_trimColor
						] call MAZ_EZM_fnc_zeusAddModule;
					};
				};

				[
					MAZ_zeusModulesTree,
					MAZ_MissionModifiersTree,
					"Arsenal Restrictions",
					"Restrict a side to a set of arsenal loadouts based on sides.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_arsenalRestrictionsModule",
					'\A3\ui_f\data\Logos\a_64_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_MissionModifiersTree,
					"Arsenal on Respawn",
					"Enables player access to Arsenal on every respawn.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_arsenalRespawnModule",
					'\A3\ui_f\data\Logos\a_64_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_MissionModifiersTree,
					"Cinematic Intro",
					"Show a brief cinematic screen with mission introduction then pan over a location or in front of your player.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_cinematicIntroModule",
					'a3\ui_f\data\gui\cfg\keyframeanimation\iconcamera_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_MissionModifiersTree,
					"Fade-In Intro",
					"Show a brief cinematic screen with mission introduction.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_fadeIntroModule",
					'\a3\ui_f\data\igui\cfg\simpletasks\types\Talk_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_MissionModifiersTree,
					"Friendly Markers",
					"Shows friendly markers on map.\n\nCreation Credit: fn_Quiksilver",
					"LM_fnc_friendlyMarkersModule",
					'a3\3den\data\displays\display3den\panelright\submode_marker_icon_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_MissionModifiersTree,
					"Kill Feed",
					"Enable kill feed for player and AI kills.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_killFeedModule",
					'\a3\Ui_F_Curator\Data\CfgMarkers\kia_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_MissionModifiersTree,
					"Last Loadout on Respawn",
					"On respawn sets player loadouts to their loadout at death.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_respawnLoadoutModule",
					'a3\ui_f\data\igui\cfg\actions\gear_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_MissionModifiersTree,
					"Phase Transition",
					"Show a brief 15 second phase with cinematic black bars followed by a mission name, useful for transition between objectives.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_phaseTransitionModule",
					'\a3\ui_f\data\igui\cfg\simpletasks\types\Talk_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

			comment "Object Modifiers";

				MAZ_ObjectModTree = [
					MAZ_zeusModulesTree,
					"Object Modifiers",
					"a3\3den\data\displays\display3den\toolbar\widget_local_ca.paa"
				] call MAZ_EZM_fnc_zeusAddCategory;
				
				[
					MAZ_zeusModulesTree,
					MAZ_ObjectModTree,
					"Attach to Nearest",
					"Attaches the object to the nearest object.",
					"MAZ_EZM_fnc_attachToNearestModule"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_ObjectModTree,
					"Detach",
					"Detaches the object from anything it's attached to.",
					"MAZ_EZM_fnc_detachModule"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_ObjectModTree,
					"Dynamic Sim System Control",
					"Enables or disable the global dynamic simulation system as well as\ncontrol the distance of activation for available categories.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_dynamicSimControlModule",
					"a3\3den\data\cfgwaypoints\scripted_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_ObjectModTree,
					"Edit Object Attributes",
					"Edit object attributes through an advanced menu.\nEdit textures, edit init fields, god mode, enable/disable sim, etc.",
					"MAZ_EZM_fnc_editObjectAttributesModule",
					"a3\3den\data\cfgwaypoints\scripted_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_ObjectModTree,
					"Replace w/ Simple Object",
					"Replaces the object it's placed on with a simple object to improve performance.",
					"MAZ_EZM_fnc_replaceWithSimpleObject",
					"a3\3den\data\cfgwaypoints\scripted_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_ObjectModTree,
					"Scale Object",
					"Change the size of the choosen object.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_objectSizeModule",
					"a3\3den\data\cfgwaypoints\scripted_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_ObjectModTree,
					"Toggle Dynamic Sim",
					"Enables or disables dynamic simulation on the group or inanimate object.\nThis controls whether it will be loaded at certain set distances.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_dynamicSimObjectModule",
					"a3\modules_f\data\hideterrainobjects\icon_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_ObjectModTree,
					"Toggle Dynamic Sim (Radius)",
					"Enables or disables dynamic simulation on any groups and inanimate objects\nwithin the radius. This controls whether it will be loaded at certain set distances.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_dynamicSimRadiusModule",
					"a3\modules_f\data\hideterrainobjects\icon_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_ObjectModTree,
					"Toggle Dynamic Sim (Global)",
					"Enables or disables dynamic simulation on all groups amd inanimate objects\non the entire map. This controls whether they will be loaded at certain set distances.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_dynamicSimGlobalModule",
					"a3\modules_f\data\hideterrainobjects\icon_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_ObjectModTree,
					"Toggle Simulation",
					"Enables or disables simulation on the object.",
					"MAZ_EZM_fnc_toggleSimulationModule",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\danger_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_ObjectModTree,
					"Toggle Damage",
					"Makes the object god moded or un-god moded.",
					"MAZ_EZM_fnc_toggleInvincibleModule",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\kill_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_ObjectModTree,
					"Hide Object",
					"Hides the object.",
					"MAZ_EZM_fnc_hideObjectModule",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\scout_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_ObjectModTree,
					"Un-Hide Object",
					"Un-Hides the object.",
					"MAZ_EZM_fnc_unHideObjectModule",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\whiteboard_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_ObjectModTree,
					"Un-Hide All Objects",
					"Un-Hides all hidden objects.",
					"MAZ_EZM_fnc_unHideObjectAllModule",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\whiteboard_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

			comment "Player Modifiers";
				MAZ_PlayerModTree = [
					MAZ_zeusModulesTree,
					"Player Modifiers",
					"a3\ui_f\data\gui\rsc\rscdisplaymain\menu_singleplayer_ca.paa"
				] call MAZ_EZM_fnc_zeusAddCategory;

				[
					MAZ_zeusModulesTree,
					MAZ_PlayerModTree,
					"Build Menu",
					"Enable ability for choosen player to place limited fortifications.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_buildMenuModule",
					'a3\modules_f\data\editterrainobject\texturechecked_wall_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_PlayerModTree,
					"Bullet Tracing",
					"Enable bullet tracing by pressing '5'.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_bulletTracingModule",
					'a3\ui_f_curator\data\cfgcurator\laser_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_PlayerModTree,
					"Change Side",
					"Change the side of the selected player.",
					"MAZ_EZM_fnc_changeSideModule",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\meet_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_PlayerModTree,
					"Disarm",
					"Removes the weapons from a player.",
					"MAZ_EZM_fnc_disarmModule",
					'\a3\3den\data\displays\display3den\entitymenu\arsenal_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_PlayerModTree,
					"Drag Bodies",
					"Enable ability to drag incapacitated players.\n\nCreation Credit: RickOShay",
					"LM_fnc_dragBodyModule",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\heal_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_PlayerModTree,
					"Ear Plugs",
					"Enable sound suppression by pressing '5'.\n\nCreation Credit: GEORGE FLOROS GR",
					"LM_fnc_earPlugsModule",
					'\A3\ui_f\data\IGUI\RscIngameUI\RscDisplayChannel\MuteVON_crossed_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_PlayerModTree,
					"Force Eject",
					"Eject players from the selected vehicle.",
					"MAZ_EZM_fnc_forceEjectModule",
					'\A3\ui_f\data\IGUI\Cfg\actions\eject_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_PlayerModTree,
					"Head Lamp",
					"Enable ability to equip a flashlight on player heads by pressing 'CTRL+L'.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_headLampModule",
					'a3\3den\data\displays\display3den\toolbar\flashlight_off_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_PlayerModTree,
					"Helmet Camera",
					"Enable ability to swap the view of a player to a camera right\nof their helmet by pressing 'CTRL+O'.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_helmetCameraModule",
					'a3\ui_f\data\gui\cfg\keyframeanimation\iconcamera_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_PlayerModTree,
					"Heal / Revive",
					"Heal and/or revive the selected player.",
					"MAZ_EZM_fnc_healAndReviveModule",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\heal_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[	
					MAZ_zeusModulesTree,	
					MAZ_PlayerModTree,	
					"Heal / Revive All",	
					"Heal and/or revive all players.",	
					"MAZ_EZM_fnc_healAndReviveAllModule",	
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\heal_ca.paa'	
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_PlayerModTree,
					"Holster Weapon",
					"Enable ability to holster weapon by pressing '6'.\n\nCreation Credit: GEORGE FLOROS GR",
					"LM_fnc_holsterWeaponModule",
					'\a3\ui_f\data\igui\cfg\simpletasks\types\rifle_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_PlayerModTree,
					"Mute (Disable All)",
					"Disables every player's voice chat.",
					"MAZ_EZM_fnc_muteServerModule",
					'\A3\ui_f\data\IGUI\RscIngameUI\RscDisplayChannel\MuteVON_crossed_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_PlayerModTree,
					"Player Animations",
					"Enable ability for players to select an idle animation through action menu.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_playerAnimationModule",
					'a3\ui_f_curator\data\rsccommon\rscattributepunishmentanimation\pushupslegs.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_PlayerModTree,
					"Player Names",
					"Shows player names above them.\n\nCreation Credit: Original author currently unknown,\nwe do not take credit for this script.",
					"LM_fnc_playerNamesModule",
					'\A3\ui_f\data\gui\rsc\rscdisplayarsenal\radio_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_PlayerModTree,
					"Spectator Mode",
					"Enable ability to enter Spectator mode by pressing '9'.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_spectatorModule",
					'a3\ui_f\data\gui\cfg\keyframeanimation\iconcamera_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_PlayerModTree,
					"Stamina (Enable / Disable)",
					"Control whether stamina affects players globally.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_playerStaminaModule",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\run_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_PlayerModTree,
					"Support Menu",
					"Enable ability for choosen player to call in selected supports.\n\nMIL_CAS Credit: beno_83au\nGUI Credit: Lockheed Martin",
					"LM_fnc_supportMenuModule",
					'\A3\ui_f\data\GUI\Cfg\CommunicationMenu\mortar_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_PlayerModTree,
					"Un-Mute (Enable All)",
					"Enables every player's voice chat.",
					"MAZ_EZM_fnc_unmuteServerModule",
					'\A3\ui_f\data\IGUI\RscIngameUI\RscDisplayChannel\MuteVON_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;
				
			comment "Respawns";
				MAZ_CustomScriptsTree = [
					MAZ_zeusModulesTree,
					"Respawns",
					'\A3\ui_f\data\map\markers\nato\respawn_inf_ca.paa'
				] call MAZ_EZM_fnc_zeusAddCategory;

				[
					MAZ_zeusModulesTree,
					MAZ_CustomScriptsTree,
					"Player/Vehicle Respawn",
					"Create respawn for any side, vehicle or player type.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_respawnSelection",
					'\A3\ui_f\data\map\markers\nato\respawn_inf_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

			comment "Server Settings";

				MAZ_ServerSettingsTree = [
					MAZ_zeusModulesTree,
					"Server Settings",
					"a3\3den\data\displays\display3den\statusbar\server_ca.paa"
				] call MAZ_EZM_fnc_zeusAddCategory;
				
				private _maxPlayable = (playableSlotsNumber west) + (playableSlotsNumber east) + (playableSlotsNumber independent) + (playableSlotsNumber civilian) + (playableSlotsNumber sideLogic);	
				if(_maxPlayable > 18) then {	
					[	
						MAZ_zeusModulesTree,	
						MAZ_ServerSettingsTree,	
						"48+2 Team Switcher",	
						"Makes all players on the selected side when they join making everyone in the server the same side.\nPrimarily for 48+2 servers.",	
						"MAZ_EZM_fnc_482SideSwitchInit",	
						'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\help_ca.paa'	
					] call MAZ_EZM_fnc_zeusAddModule;	
				};

				[
					MAZ_zeusModulesTree,
					MAZ_ServerSettingsTree,
					"Change Side Relations",
					"Change the relations of different sides towards Independent factions.",
					"MAZ_EZM_fnc_changeSideRelationsModule",
					"a3\ui_f\data\gui\cfg\communicationmenu\attack_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				if ((((getAssignedCuratorLogic player) == ((allCurators select { str _x == "bis_curator" }) # 0)) || (!((call BIS_fnc_admin) == 0)))) then { 
					[
						MAZ_zeusModulesTree,
						MAZ_ServerSettingsTree,
						"Mortars (Enable / Disable)",
						"Disable or enable mortars for all players.",
						"MAZ_EZM_fnc_disableMortarsModule",
						'\A3\ui_f\data\GUI\Cfg\CommunicationMenu\mortar_ca.paa'
					] call MAZ_EZM_fnc_zeusAddModule;
				};

				if ((((getAssignedCuratorLogic player) == ((allCurators select { str _x == "bis_curator" }) # 0)) || (!((call BIS_fnc_admin) == 0)))) then { 
					[
						MAZ_zeusModulesTree,
						MAZ_ServerSettingsTree,
						"Friendly Fire",
						"Whether to enable or disable players/AI being able to damage other friendly units and vehicles.\n\nCreation Credit: Lockheed Martin",
						"LM_fnc_friendlyFireModule",
						"\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\kill_ca.paa",
						EZM_trimColor
					] call MAZ_EZM_fnc_zeusAddModule;
				};

				if ((((getAssignedCuratorLogic player) == ((allCurators select { str _x == "bis_curator" }) # 0)) || (!((call BIS_fnc_admin) == 0)))) then { 
					[
						MAZ_zeusModulesTree,
						MAZ_ServerSettingsTree,
						"Moderator Control",
						"Control whether moderator slot has edit permissions and is usable.\n\nCreation Credit: Qq\nAdapted By: Lockheed Martin",
						"LM_fnc_controlModeratorModule",
						"\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\help_ca.paa",
						EZM_trimColor
					] call MAZ_EZM_fnc_zeusAddModule;
				};

				if ((((getAssignedCuratorLogic player) == ((allCurators select { str _x == "bis_curator" }) # 0)) || (!((call BIS_fnc_admin) == 0)))) then { 
					[
						MAZ_zeusModulesTree,
						MAZ_ServerSettingsTree,
						"Player Control",
						"Provides a dashboard to kick and log players, force players into spectator mode\nand manage prior kicked players in regards to Auto-Kicking them in the futue on join.\n\nCreation Credit: Lockheed Martin",
						"LM_fnc_controlPlayerModule",
						"\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\meet_ca.paa",
						EZM_trimColor
					] call MAZ_EZM_fnc_zeusAddModule;
				};

				if ((((getAssignedCuratorLogic player) == ((allCurators select { str _x == "bis_curator" }) # 0)) || (!((call BIS_fnc_admin) == 0)))) then { 
					[
						MAZ_zeusModulesTree,
						MAZ_ServerSettingsTree,
						"Profanity Filter",
						"Whether to enable the censoring of profane chat or to disable.\n\nCreation Credit: Expung3d",
						"LM_fnc_profanityFilterModule",
						"a3\3den\data\cfg3den\comment\texture_ca.paa",
						EZM_trimColor
					] call MAZ_EZM_fnc_zeusAddModule;
				};

				if ((((getAssignedCuratorLogic player) == ((allCurators select { str _x == "bis_curator" }) # 0)) || (!((call BIS_fnc_admin) == 0)))) then { 
					[
						MAZ_zeusModulesTree,
						MAZ_ServerSettingsTree,
						"Server Lock",
						"Whether to lock or unlock the server in regards to any players joining it.\n\nCreation Credit: Lockheed Martin",
						"LM_fnc_lockServerModule",
						"\a3\ui_f\data\igui\cfg\actions\open_door_ca.paa",
						EZM_trimColor
					] call MAZ_EZM_fnc_zeusAddModule;
				};
				
				[
					MAZ_zeusModulesTree,
					MAZ_ServerSettingsTree,
					"Set Respawn Timer",
					"Set the respawn timer.",
					"MAZ_EZM_fnc_setRespawnTimerModule",
					"a3\ui_f\data\igui\cfg\actions\settimer_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_ServerSettingsTree,
					"Set View Distance",
					"Sets the view distance for all players.",
					"MAZ_EZM_fnc_setViewDistance",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\scout_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_ServerSettingsTree,
					"Remove Team-Killers",
					"Removes the Team-Killer status from all players.",
					"MAZ_EZM_fnc_noTeamKillersModule",
					"a3\ui_f_curator\data\cfgmarkers\kia_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

			comment "Secure, Control, Protect";

				MAZ_SCPTree = [
					MAZ_zeusModulesTree,
					"Secure, Control, Protect",
					'\a3\Ui_F_Curator\Data\CfgMarkers\kia_ca.paa'
				] call MAZ_EZM_fnc_zeusAddCategory;

				[
					MAZ_zeusModulesTree,
					MAZ_SCPTree,
					"Screamer Spawn",
					"Spawn within the desired radius the amount of Screamer SCP monsters for a good scare.\n\nCreation Credit: ALIAScartoons",
					"LM_fnc_screamerSpawnModule",
					'\a3\Ui_F_Curator\Data\CfgMarkers\kia_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

			comment "Sounds";

				MAZ_SoundsTree = [
					MAZ_zeusModulesTree,
					"Sounds",
					'\A3\ui_f\data\IGUI\RscIngameUI\RscDisplayChannel\MuteVON_ca.paa'
				] call MAZ_EZM_fnc_zeusAddCategory;
				
				[
					MAZ_zeusModulesTree,
					MAZ_SoundsTree,
					"Ambient Music",
					"Play random music from a selected category to loop until stopped.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_ambientMusicModule",
					'\A3\ui_f\data\IGUI\RscIngameUI\RscDisplayChannel\MuteVON_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_SoundsTree,
					"Play Sound",
					"Play any sound from objects, items, vehicles, etc.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_playSoundModule",
					'\A3\ui_f\data\IGUI\RscIngameUI\RscDisplayChannel\MuteVON_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_SoundsTree,
					"Play Track",
					"Play any souundtrack from music to news broadcasts.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_playTrackModule",
					'\A3\ui_f\data\IGUI\RscIngameUI\RscDisplayChannel\MuteVON_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_SoundsTree,
					"Play Radio Message",
					"Play an important radio message for players in command channel.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_playRadioModule",
					'\A3\ui_f\data\IGUI\RscIngameUI\RscDisplayChannel\MuteVON_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_SoundsTree,
					"Play Voiceline",
					"Play any voiceline from the campaign alongside subtitles in sidechat.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_playDubbingModule",
					'\A3\ui_f\data\IGUI\RscIngameUI\RscDisplayChannel\MuteVON_ca.paa',
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

			comment "Special Effects";
				MAZ_SpecialFXTree = [
					MAZ_zeusModulesTree,
					"Special Effects",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\destroy_ca.paa'
				] call MAZ_EZM_fnc_zeusAddCategory;
				
				[
					MAZ_zeusModulesTree,
					MAZ_SpecialFXTree,
					"Aircraft Flyby",
					"Creates a ambient vehicle to fly over a position.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_ambientFlyByModule",
					"\a3\ui_f\data\igui\cfg\simpletasks\types\Plane_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_SpecialFXTree,
					"Aurora Effect",
					"Creates a Aurora particle effect on object.\n\nCreation Credit: ALIAScartoons",
					"LM_fnc_effectAuroraModule",
					"a3\3den\data\displays\display3den\toolbar\flashlight_off_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_SpecialFXTree,
					"Earthquake",
					"Creates an earthquake.",
					"MAZ_EZM_fnc_earthquakeEffectModule",
					"a3\modules_f\data\editterrainobject\icon_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_SpecialFXTree,
					"EMP",
					"Deploys an EMP on the position.",
					"MAZ_EZM_fnc_EMPEffectModule",
					"a3\3den\data\displays\display3den\toolbar\flashlight_off_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_SpecialFXTree,
					"Fire",
					"Creates a fire on the module position.",
					"MAZ_EZM_fnc_fireEffectModule",
					"a3\ui_f\data\igui\cfg\actions\obsolete\ui_action_fire_in_flame_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_SpecialFXTree,
					"Firefly Effect",
					"Creates a Firefly particle effect on object.\n\nCreation Credit: ALIAScartoons",
					"LM_fnc_effectFireflyModule",
					"a3\3den\data\displays\display3den\toolbar\flashlight_off_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_SpecialFXTree,
					"Play Video",
					"Choose a video to play on the applied screen.\n\nCreation Credit: Lockheed Martin",
					"LM_fnc_playVideoModule",
					"\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\whiteboard_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_SpecialFXTree,
					"Rupture Effect",
					"Creates a Rupture particle effect on object.\n\nCreation Credit: ALIAScartoons",
					"LM_fnc_effectRuptureModule",
					"a3\3den\data\displays\display3den\toolbar\flashlight_off_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_SpecialFXTree,
					"Smoke Pillar",
					"Creates a smoke pillar on the module position.",
					"MAZ_EZM_fnc_smokeEffectModule",
					"a3\modules_f_curator\data\portraitsmoke_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_SpecialFXTree,
					"Sparks Effect",
					"Creates a Sparks particle effect on object.\n\nCreation Credit: ALIAScartoons",
					"LM_fnc_effectSparksModule",
					"a3\3den\data\displays\display3den\toolbar\flashlight_off_ca.paa",
					EZM_trimColor
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_SpecialFXTree,
					"Toggle Lamps (Radius)",
					"Disables or enables lamps in a radius.",
					"MAZ_EZM_fnc_toggleLampsModule",
					"a3\3den\data\displays\display3den\toolbar\flashlight_off_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

			comment "Terrain Object Modifiers";
				MAZ_terrainObjectModTree = [
					MAZ_zeusModulesTree,
					"Terrain Object Modifiers",
					"a3\ui_f\data\igui\rscingameui\rscunitinfo\icon_terrain_ca.paa"
				] call MAZ_EZM_fnc_zeusAddCategory;

				[
					MAZ_zeusModulesTree,
					MAZ_terrainObjectModTree,
					"Edit Building Doors",
					"Allows you to open and close doors on buildings.",
					"MAZ_EZM_fnc_openDoorsModule",
					"\a3\ui_f\data\igui\cfg\actions\open_door_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_terrainObjectModTree,
					"God Mode Fences",
					"Allows you to god mode fences in a radius.",
					"MAZ_EZM_fnc_godModeFencesModule",
					"a3\modules_f\data\editterrainobject\texturechecked_wall_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_terrainObjectModTree,
					"Hide Terrain Objects (Radius)",
					"Hide terrain objects in a given radius.",
					"MAZ_EZM_fnc_hideTerrainRadiusModule",
					"a3\modules_f\data\hideterrainobjects\icon_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;
			
			comment "Teleportation";
				MAZ_TeleportTree = [
					MAZ_zeusModulesTree,
					"Teleportation",
					"a3\ui_f\data\igui\cfg\simpletasks\types\move_ca.paa"
				] call MAZ_EZM_fnc_zeusAddCategory;
				
				[
					MAZ_zeusModulesTree,
					MAZ_TeleportTree,
					"Teleport Self",
					"Teleport your character to the modules position.",
					"MAZ_EZM_fnc_teleportSelfModule"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_TeleportTree,
					"Teleport All Players",
					"Teleport all players to the modules position.",
					"MAZ_EZM_fnc_teleportAllPlayersModule",
					"a3\ui_f\data\gui\rsc\rscdisplaymain\menu_multiplayer_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_TeleportTree,
					"Teleport One Player",
					"Teleport specific player to the modules position.",
					"MAZ_EZM_fnc_teleportPlayerModule",
					"a3\ui_f\data\gui\rsc\rscdisplaymain\menu_singleplayer_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_TeleportTree,
					"Teleport Side",
					"Teleport specific side to the modules position.",
					"MAZ_EZM_fnc_teleportSideModule",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\meet_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;
			
			comment "Utilities";
				MAZ_UtilitiesTree = [
					MAZ_zeusModulesTree,
					"Utilities",
					"a3\3den\data\cfgwaypoints\scripted_ca.paa"
				] call MAZ_EZM_fnc_zeusAddCategory;
				
				[
					MAZ_zeusModulesTree,
					MAZ_UtilitiesTree,
					"Add Objects to Interface",
					"Adds all objects to your zeus interface.",
					"MAZ_EZM_fnc_addObjectsToInterfaceModule",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\download_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_UtilitiesTree,
					"Add Objects to Interface (Radius)",
					"Adds all objects to your zeus interface within a radius.",
					"MAZ_EZM_fnc_addObjectsToInterfaceRadiusModule",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\download_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;
				
				[
					MAZ_zeusModulesTree,
					MAZ_UtilitiesTree,
					"Toggle Auto-Add to Interface",
					"Adds all objects to your zeus interface when you open it.",
					"MAZ_EZM_fnc_toggleAutoAddToInterface",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\download_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

			comment "Vehicle Modifiers";
				MAZ_VehicleModTree = [
					MAZ_zeusModulesTree,
					"Vehicle Modifiers",
					"a3\ui_f\data\igui\cfg\vehicletoggles\engineiconon_ca.paa"
				] call MAZ_EZM_fnc_zeusAddCategory;

				[
					MAZ_zeusModulesTree,
					MAZ_VehicleModTree,
					"Unflip Vehicle",
					"Unflip the vehicle the module is placed on.",
					"MAZ_EZM_fnc_unflipVehicleModule"
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_VehicleModTree,
					"Rearm",
					"Rearm the vehicle.",
					"MAZ_EZM_fnc_rearmVehicleModule",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\rearm_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_VehicleModTree,
					"Refuel",
					"Refuel the vehicle.",
					"MAZ_EZM_fnc_refuelVehicleModule",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\refuel_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

				[
					MAZ_zeusModulesTree,
					MAZ_VehicleModTree,
					"Repair",
					"Repair the vehicle.",
					"MAZ_EZM_fnc_repairVehicleModule",
					'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\repair_ca.paa'
				] call MAZ_EZM_fnc_zeusAddModule;

			comment "Zeus Preview";
				[] call MAZ_EZM_fnc_zeusPreviewImage;
				[] call MAZ_EZM_fnc_addZeusPreviewEvents;
			
			comment "Better Civilians";
				
				MAZ_BetterCivsTree = [
					MAZ_UnitsTree_CIVILIAN,
					"Better Civilians",
					"a3\ui_f\data\gui\rsc\rscdisplaymain\menu_multiplayer_ca.paa"
				] call MAZ_EZM_fnc_zeusAddCategory;

				MAZ_BetterCivsMenTree = [
					MAZ_UnitsTree_CIVILIAN,
					MAZ_BetterCivsTree,
					"Men",
					""
				] call MAZ_EZM_fnc_zeusAddSubCategory;

				[
					MAZ_UnitsTree_CIVILIAN,
					MAZ_BetterCivsTree,
					MAZ_BetterCivsMenTree,
					"Civilian",
					"Creates a civilian with randomized clothing.",
					"MAZ_EZM_fnc_createBetterCivilianModule",
					"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule_CIVILIAN;

				[
					MAZ_UnitsTree_CIVILIAN,
					MAZ_BetterCivsTree,
					MAZ_BetterCivsMenTree,
					"Journalist",
					"Creates a journalist with randomized clothing.",
					"MAZ_EZM_fnc_createBetterCivilianJournoModule",
					"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
				] call MAZ_EZM_fnc_zeusAddModule_CIVILIAN;

			comment "MDF";

				MAZ_MDFTree = [
					MAZ_UnitsTree_INDEP,
					"Malden Defense Force",
					"A3\Data_F_argo\logos\arma3_argo_icon_ca.paa"
				] call MAZ_EZM_fnc_zeusAddCategory;

				comment "Anti-Air";
					
					MAZ_MDFAntiAirTree = [
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						"Anti-Air",
						""
					] call MAZ_EZM_fnc_zeusAddSubCategory;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFAntiAirTree,
						"IFV-6a Cheetah",
						"Creates a MDF Cheetah.",
						"MAZ_EZM_MDF_fnc_createCheetahModule",
						"\A3\armor_f_beta\APC_Tracked_01\Data\ui\map_APC_Tracked_01_aa_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

				comment "APCs";
					
					MAZ_MDFAPCsTree = [
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						"APCs",
						""
					] call MAZ_EZM_fnc_zeusAddSubCategory;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFAPCsTree,
						"AFV-4 Gorgon",
						"Creates a MDF Gorgon.",
						"MAZ_EZM_MDF_fnc_createGorgonModule",
						"\A3\armor_f_gamma\APC_Wheeled_03\Data\UI\map_APC_Wheeled_03_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFAPCsTree,
						"Rhino MGS",
						"Creates a MDF Rhino.",
						"MAZ_EZM_MDF_fnc_createRhinoModule",
						"\A3\Armor_F_Tank\AFV_Wheeled_01\Data\UI\map_AFV_Wheeled_01_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

				comment "Cars";
					comment 'getText (configfile >> "CfgVehicles" >> typeOf cursorTarget >> "icon")';

					MAZ_MDFCarsTree = [
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						"Cars",
						""
					] call MAZ_EZM_fnc_zeusAddSubCategory;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFCarsTree,
						"Offroad",
						"Creates a MDF Offroad.",
						"MAZ_EZM_MDF_fnc_createOffroadModule",
						"\A3\soft_f\Offroad_01\Data\UI\map_offroad_01_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFCarsTree,
						"Offroad (AT)",
						"Creates a MDF Offroad (AT).",
						"MAZ_EZM_MDF_fnc_createOffroadATModule",
						"\A3\Soft_F_Gamma\Offroad_01\Data\UI\map_offroad_armed_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFCarsTree,
						"Offroad (HMG)",
						"Creates a MDF Offroad (HMG).",
						"MAZ_EZM_MDF_fnc_createOffroadHMGModule",
						"\A3\Soft_F_Gamma\Offroad_01\Data\UI\map_offroad_armed_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFCarsTree,
						"Zamak Ammo",
						"Creates a MDF Zamak Ammo.",
						"MAZ_EZM_MDF_fnc_createZamakAmmoModule",
						"\A3\soft_f_gamma\Truck_02\data\UI\Map_Truck_02_box_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFCarsTree,
						"Zamak Fuel",
						"Creates a MDF Zamak Fuel.",
						"MAZ_EZM_MDF_fnc_createZamakFuelModule",
						"\A3\soft_f_gamma\Truck_02\data\UI\Map_Truck_02_fuel_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFCarsTree,
						"Zamak Medical",
						"Creates a MDF Medical Zamak.",
						"MAZ_EZM_MDF_fnc_createZamakMedicalModule",
						"\A3\soft_f_gamma\Truck_02\data\UI\Map_Truck_02_medevac_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFCarsTree,
						"Zamak Repair",
						"Creates a MDF Zamak Repair.",
						"MAZ_EZM_MDF_fnc_createZamakRepairModule",
						"\A3\Soft_F_Beta\Truck_02\Data\UI\Map_Truck_02_repair_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFCarsTree,
						"Zamak Transport",
						"Creates a MDF Zamak.",
						"MAZ_EZM_MDF_fnc_createZamakTransportModule",
						"\A3\soft_f_beta\Truck_02\data\UI\Map_Truck_02_dump_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFCarsTree,
						"Zamak Transport (Covered)",
						"Creates a MDF Covered Zamak.",
						"MAZ_EZM_MDF_fnc_createZamakTransportCoveredModule",
						"\A3\soft_f_beta\Truck_02\data\UI\Map_Truck_02_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

				comment "Drones";

					MAZ_MDFDronesTree = [
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						"Drones",
						""
					] call MAZ_EZM_fnc_zeusAddSubCategory;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFDronesTree,
						"MQ-4A Greyhawk",
						"Creates a MDF Greyhawk.",
						"MAZ_EZM_MDF_fnc_createGreyhawkModule",
						"\A3\Drones_F\Air_F_Gamma\UAV_02\Data\UI\Map_UAV_02_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

				comment "Groups";

					MAZ_MDFGroupsTree = [
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						"Groups",
						'\A3\ui_f\data\IGUI\Cfg\simpleTasks\types\meet_ca.paa'
					] call MAZ_EZM_fnc_zeusAddSubCategory;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFGroupsTree,
						"Air-Defense Squad",
						"Creates a MDF Air-Defense Squad.",
						"MAZ_EZM_MDF_fnc_createAASquadModule",
						""
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFGroupsTree,
						"Anti-Tank Squad",
						"Creates a MDF Anti-Tank Squad.",
						"MAZ_EZM_MDF_fnc_createATSquadModule",
						""
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFGroupsTree,
						"Patrol Squad",
						"Creates a MDF Patrol Squad.",
						"MAZ_EZM_MDF_fnc_createPatrolSquadModule",
						""
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFGroupsTree,
						"Rifle Squad",
						"Creates a MDF Rifle Squad.",
						"MAZ_EZM_MDF_fnc_createRifleSquadModule",
						""
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFGroupsTree,
						"Sentry Squad",
						"Creates a MDF Sentry Squad.",
						"MAZ_EZM_MDF_fnc_createSentrySquadModule",
						""
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

				comment "Helicopters";

					MAZ_MDFHelicopterTree = [
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						"Helicopters",
						""
					] call MAZ_EZM_fnc_zeusAddSubCategory;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFHelicopterTree,
						"MH-9 Hummingbird",
						"Creates a MDF Hummingbird.",
						"MAZ_EZM_MDF_fnc_createHummingbirdModule",
						"\A3\Air_F\Heli_Light_01\Data\UI\Map_Heli_Light_01_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFHelicopterTree,
						"AH-9 Pawnee",
						"Creates a MDF Pawnee.",
						"MAZ_EZM_MDF_fnc_createPawneeModule",
						"\A3\Air_F\Heli_Light_01\Data\UI\Map_Heli_Light_01_armed_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

				comment "Men";
					MAZ_MDFMenTree = [
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						"Men",
						""
					] call MAZ_EZM_fnc_zeusAddSubCategory;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFMenTree,
						"Ammo Bearer",
						"Creates a MDF Ammo Bearer.",
						"MAZ_EZM_MDF_fnc_createAmmoBearerModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFMenTree,
						"Autorifleman",
						"Creates a MDF Autorifleman.",
						"MAZ_EZM_MDF_fnc_createAutoriflemanModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconManMG_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFMenTree,
						"Combat Lifesaver",
						"Creates a MDF Combat Lifesaver.",
						"MAZ_EZM_MDF_fnc_createMedicModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconManMedic_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFMenTree,
						"Crewman",
						"Creates a MDF Crewman.",
						"MAZ_EZM_MDF_fnc_createCrewmanModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFMenTree,
						"Engineer",
						"Creates a MDF Engineer.",
						"MAZ_EZM_MDF_fnc_createEngineerModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconManEngineer_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFMenTree,
						"Explosives Specialist",
						"Creates a MDF Explosives Specialist.",
						"MAZ_EZM_MDF_fnc_createExplosivesSpecModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconManExplosive_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFMenTree,
						"Grenadier",
						"Creates a MDF Grenadier.",
						"MAZ_EZM_MDF_fnc_createGrenadierModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFMenTree,
						"Helicopter Crew",
						"Creates a MDF Helicopter Crew.",
						"MAZ_EZM_MDF_fnc_createHeliCrewModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;
					
					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFMenTree,
						"Helicopter Pilot",
						"Creates a MDF Helicopter Pilot.",
						"MAZ_EZM_MDF_fnc_createHeliPilotModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFMenTree,
						"Marksman",
						"Creates a MDF Marksman.",
						"MAZ_EZM_MDF_fnc_createMarksmanModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFMenTree,
						"Missile Specialist (AA)",
						"Creates a MDF Anti-Air Missile Specialist.",
						"MAZ_EZM_MDF_fnc_createMissileSpecAAModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconManAT_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFMenTree,
						"Pilot",
						"Creates a MDF Pilot.",
						"MAZ_EZM_MDF_fnc_createPilotModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFMenTree,
						"Rifleman",
						"Creates a MDF Rifleman.",
						"MAZ_EZM_MDF_fnc_createRiflemanModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFMenTree,
						"Rifleman (AT)",
						"Creates a MDF Anti-Tank Rifleman.",
						"MAZ_EZM_MDF_fnc_createRiflemanATModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconManAT_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFMenTree,
						"Rifleman (LAT)",
						"Creates a MDF Light Anti-Tank Rifleman.",
						"MAZ_EZM_MDF_fnc_createRiflemanLATModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconManAT_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFMenTree,
						"Squad Leader",
						"Creates a MDF Squad Leader.",
						"MAZ_EZM_MDF_fnc_createSquadLeadModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconManLeader_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFMenTree,
						"Survivor",
						"Creates a MDF Survivor.",
						"MAZ_EZM_MDF_fnc_createSurvivorModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFMenTree,
						"UAV Operator",
						"Creates a MDF UAV Operator.",
						"MAZ_EZM_MDF_fnc_createUAVOpModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;

				comment "Planes";

					MAZ_MDFPlanesTree = [
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						"Planes",
						""
					] call MAZ_EZM_fnc_zeusAddSubCategory;

					[
						MAZ_UnitsTree_INDEP,
						MAZ_MDFTree,
						MAZ_MDFPlanesTree,
						"A-149 Gryphon",
						"Creates a MDF Gryphon.",
						"MAZ_EZM_MDF_fnc_createGryphonModule",
						"\A3\Air_F_Jets\Plane_Fighter_04\Data\UI\Fighter04_icon_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_INDEP;
					
			comment "CSAT (China) Modules"; 
				
					MAZ_CSATPTree = [
						MAZ_UnitsTree_OPFOR,
						"CSAT (China)",
						""
					] call MAZ_EZM_fnc_zeusAddCategory;
		
					MAZ_UnitsTree_OPFOR tvSetTooltip [[MAZ_CSATPTree], "A Chinese Faction outside the Pacific"]; 

				comment "Anti-Air";

					MAZ_CSATPAntiAirTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						"Anti-Air", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPAntiAirTree, 
						"Tigris ZSU-39", 
						"Tigris", 
						"MAZ_EZM_CSATP_fnc_createTigris", 
						"a3\armor_f_beta\apc_tracked_02\data\ui\map_apc_tracked_02_aa_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPAntiAirTree, 
						"Tigris ZSU-39 (No Missiles)", 
						"Tigris without missiles", 
						"MAZ_EZM_CSATP_fnc_createTigrisMissile", 
						"a3\armor_f_beta\apc_tracked_02\data\ui\map_apc_tracked_02_aa_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "APCs"; 
					
					MAZ_CSATPAPCsTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						"APCs", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPAPCsTree, 
						"BTR-K Kamysh", 
						"BTR-K Kamysh.", 
						"MAZ_EZM_CSATP_fnc_createBTRK", 
						"a3\armor_f_beta\apc_tracked_02\data\ui\map_apc_tracked_02_cannon_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPAPCsTree, 
						"MSE-3 Marid", 
						"MSE-3 Marid.", 
						"MAZ_EZM_CSATP_fnc_createMarid", 
						"a3\armor_f_beta\apc_wheeled_02\data\ui\map_apc_wheeled_02_rcws_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

				comment "Artillery"; 
					
					MAZ_CSATPArtilleryTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						"Artillery", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPArtilleryTree, 
						"2S9 Sochor", 
						"2S9 Sochor", 
						"MAZ_EZM_CSATP_fnc_createSochorModule", 
						"a3\armor_f_gamma\mbt_02\data\ui\map_mbt_arty_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

				    [  
						MAZ_UnitsTree_OPFOR,  
						MAZ_CSATPTree,  
						MAZ_CSATPArtilleryTree,  
						"2S9 Sochor (No Commander)",  
						"2S9 Sochor (No Commander)",  
						"MAZ_EZM_CSATP_fnc_createSochorNoCommanderModule",  
						"a3\armor_f_gamma\mbt_02\data\ui\map_mbt_arty_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;  

                    [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPArtilleryTree, 
						"Zamak MRL", 
						"Zamak MRL", 
						"MAZ_EZM_CSATP_fnc_createMRLModule", 
						"a3\soft_f_gamma\truck_02\data\ui\map_truck_02_mrl_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
				comment "Boats"; 
				
					MAZ_CSATPBoatsTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						"Boats", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPBoatsTree, 
						"Assault Boat", 
						"Assault Boat", 
						"MAZ_EZM_CSATP_fnc_createAssaultBoatModule", 
						"a3\boat_f\boat_transport_01\data\ui\map_boat_transport_01_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPBoatsTree, 
						"RHIB", 
						"RHIB", 
						"MAZ_EZM_CSATP_fnc_createRhibBoatModule", 
						"a3\boat_f_exp\boat_transport_02\data\ui\map_boat_transport_02_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPBoatsTree, 
						"Speedboat (No Turret)", 
						"Speedboat (No Turret)", 
						"MAZ_EZM_CSATP_fnc_createSpeedBoatModule", 
						"a3\boat_f\boat_armed_01\data\ui\map_boat_armed_01_minigun.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPBoatsTree, 
						"Speedboat HMG", 
						"Speedboat HMG", 
						"MAZ_EZM_CSATP_fnc_createSpeedBoatHMGModule", 
						"a3\boat_f\boat_armed_01\data\ui\map_boat_armed_01_minigun.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPBoatsTree, 
						"Speedboat Minigun", 
						"Speedboat Minigun", 
						"MAZ_EZM_CSATP_fnc_createSpeedBoatMinigunModule", 
						"a3\boat_f\boat_armed_01\data\ui\map_boat_armed_01_minigun.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "Cars"; 
				
					MAZ_CSATPCarsTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						"Cars", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPCarsTree, 
						"Ifrit", 
						"Ifrit", 
						"MAZ_EZM_CSATP_fnc_createIfritModule", 
						"a3\soft_f\mrap_02\data\ui\map_mrap_02_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPCarsTree, 
						"Ifrit GMG", 
						"Ifrit GMG", 
						"MAZ_EZM_CSATP_fnc_createIfritGMGModule", 
						"a3\soft_f\mrap_02\data\ui\map_mrap_02_rcws_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPCarsTree, 
						"Ifrit HMG", 
						"Ifrit HMG", 
						"MAZ_EZM_CSATP_fnc_createIfritHMGModule", 
						"a3\soft_f\mrap_02\data\ui\map_mrap_02_hmg_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPCarsTree, 
						"Qilin (AT)", 
						"Qilin (AT)", 
						"MAZ_EZM_CSATP_fnc_createQilinATModule", 
						"a3\soft_f_exp\lsv_01\data\ui\map_lsv_01_armed_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPCarsTree, 
						"Qilin (Mingun)", 
						"Qilin (Mingun)", 
						"MAZ_EZM_CSATP_fnc_createQilinMinigunModule", 
						"a3\soft_f_exp\lsv_02\data\ui\map_lsv_02_armed_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPCarsTree, 
						"Qilin (Unarmed)", 
						"Qilin (Unarmed)", 
						"MAZ_EZM_CSATP_fnc_createQilinUnarmedModule", 
						"a3\soft_f_exp\lsv_02\data\ui\map_lsv_02_base_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPCarsTree, 
						"Quadbike", 
						"Quadbike", 
						"MAZ_EZM_CSATP_fnc_createQuadbikeModule", 
						"a3\soft_f\quadbike_01\data\ui\map_quad_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "Drones"; 
				
					MAZ_CSATPDronesTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						"Drones", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory;

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPDronesTree, 
						"Jinaah AL-6", 
						"Jinaah AL-6", 
						"MAZ_EZM_CSATP_fnc_createJinaahModule", 
						"a3\air_f_orange\uav_06\data\ui\map_uav_06_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPDronesTree, 
						"Jinaah AL-6 (Medical)", 
						"Jinaah AL-6 (Medical)", 
						"MAZ_EZM_CSATP_fnc_createJinaahMedicalModule", 
						"a3\air_f_orange\uav_06\data\ui\map_uav_06_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPDronesTree, 
						"K40 Ababil-3", 
						"K40 Ababil-3", 
						"MAZ_EZM_CSATP_fnc_createK40Module", 
						"a3\drones_f\air_f_gamma\uav_02\data\ui\map_uav_02_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPDronesTree, 
						"KH-3A Fenghuang", 
						"KH-3A Fenghuang", 
						"MAZ_EZM_CSATP_fnc_createKH3AModule", 
						"a3\air_f_exp\uav_04\data\ui\map_uav_04_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPDronesTree, 
						"Tayran AR-2", 
						"Tayran AR-2", 
						"MAZ_EZM_CSATP_fnc_createTayranModule", 
						"a3\drones_f\air_f_gamma\uav_01\data\ui\map_uav_01_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPDronesTree, 
						"UGV Saif", 
						"UGV Saif", 
						"MAZ_EZM_CSATP_fnc_createSaifModule", 
						"a3\drones_f\soft_f_gamma\ugv_01\data\ui\map_ugv_01_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPDronesTree, 
						"UGV Saif RCWS", 
						"UGV Saif RCWS", 
						"MAZ_EZM_CSATP_fnc_createSaifRCWSModule", 
						"a3\drones_f\soft_f_gamma\ugv_01\data\ui\map_ugv_01_rcws_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
				comment "Groups"; 
				
					MAZ_CSATPSubCatTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						"Groups", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"Anti-Air Team", 
						"Anti-Air Team", 
						"MAZ_EZM_CSATP_fnc_createAntiAirTeamModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"Anti-Tank Team", 
						"Anti-Tank Team", 
						"MAZ_EZM_CSATP_fnc_createAntiTankTeamModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[  
						MAZ_UnitsTree_OPFOR,  
						MAZ_CSATPTree,  
						MAZ_CSATPSubCatTree,  
						"Marksman Team",  
						"Marksman Team",  
						"MAZ_EZM_CSATP_fnc_createMarksmanTeamModule",  
						""  
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;  

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"Patrol", 
						"Patrol", 
						"MAZ_EZM_CSATP_fnc_createPatrolModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"Squad", 
						"Squad", 
						"MAZ_EZM_CSATP_fnc_createSquadModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"Sentry", 
						"Sentry", 
						"MAZ_EZM_CSATP_fnc_createSentryModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"Sniper Team", 
						"Sniper Team", 
						"MAZ_EZM_CSATP_fnc_createSniperTeamModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

				comment "Groups (Urban)";

				    MAZ_CSATPSubCatTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						"Groups (Urban)", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"Anti-Air Team", 
						"Anti-Air Team", 
						"MAZ_EZM_CSATP_fnc_createAntiAirTeamUrbanModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"Anti-Tank Team", 
						"Anti-Tank Team", 
						"MAZ_EZM_CSATP_fnc_createAntiTankTeamUrbanModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"Patrol", 
						"Patrol", 
						"MAZ_EZM_CSATP_fnc_createPatrolUrbanModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"Squad", 
						"Squad", 
						"MAZ_EZM_CSATP_fnc_createSquadUrbanModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"Sentry", 
						"Sentry", 
						"MAZ_EZM_CSATP_fnc_createSentryUrbanModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"Sniper Team", 
						"Sniper Team", 
						"MAZ_EZM_CSATP_fnc_createSniperTeamUrbanModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "Helicopters";
				
					MAZ_CSATPSubCatTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						"Helicopters", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"Mi-290 Taru", 
						"Mi-290 Taru", 
						"MAZ_EZM_CSATP_fnc_createTaruModule", 
						"a3\air_f_heli\heli_transport_04\data\ui\map_heli_transport_04_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"Mi-290 Taru (Ammo)", 
						"Mi-290 Taru (Ammo)", 
						"MAZ_EZM_CSATP_fnc_createTaruAmmoModule", 
						"a3\air_f_heli\heli_transport_04\data\ui\map_heli_transport_04_ammo_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"Mi-290 Taru (Bench)", 
						"Mi-290 Taru (Bench)", 
						"MAZ_EZM_CSATP_fnc_createTaruBenchModule", 
						"a3\air_f_heli\heli_transport_04\data\ui\map_heli_transport_04_bench_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"Mi-290 Taru (Cargo)", 
						"Mi-290 Taru (Cargo)", 
						"MAZ_EZM_CSATP_fnc_createTaruCargoModule", 
						"a3\air_f_heli\heli_transport_04\data\ui\map_heli_transport_04_box_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"Mi-290 Taru (Fuel)", 
						"Mi-290 Taru (Fuel)", 
						"MAZ_EZM_CSATP_fnc_createTaruFuelModule", 
						"a3\air_f_heli\heli_transport_04\data\ui\map_heli_transport_04_fuel_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"Mi-290 Taru (Medical)", 
						"Mi-290 Taru (Medical)", 
						"MAZ_EZM_CSATP_fnc_createTaruMedicalModule", 
						"a3\air_f_heli\heli_transport_04\data\ui\map_heli_transport_04_medevac_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"Mi-290 Taru (Repair)", 
						"Mi-290 Taru (Repair)", 
						"MAZ_EZM_CSATP_fnc_createTaruRepairModule", 
						"a3\air_f_heli\heli_transport_04\data\ui\map_heli_transport_04_repair_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"Mi-290 Taru (Transport)", 
						"Mi-290 Taru (Transport)", 
						"MAZ_EZM_CSATP_fnc_createTaruTransportModule", 
						"a3\air_f_heli\heli_transport_04\data\ui\map_heli_transport_04_covered_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"Mi-48 Kajman", 
						"Mi-48 Kajman", 
						"MAZ_EZM_CSATP_fnc_createTaruKajmanModule", 
						"a3\air_f_beta\heli_attack_02\data\ui\map_heli_attack_02_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"PO-30 Orca", 
						"PO-30 Orca", 
						"MAZ_EZM_CSATP_fnc_createOrcaModule", 
						"a3\air_f\heli_light_02\data\ui\map_heli_light_02_rockets_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSubCatTree, 
						"PO-30 Orca (Unarmed)", 
						"PO-30 Orca", 
						"MAZ_EZM_CSATP_fnc_createOrcaUnarmedModule", 
						"a3\air_f\heli_light_02\data\ui\map_heli_light_02_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

				comment "Men"; 
					
					MAZ_CSATPMenTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						"Men", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPMenTree, 
						"Ammo Bearer", 
						"Ammo Bearer", 
						"MAZ_EZM_CSATP_fnc_createAmmoBearerModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPMenTree, 
						"Autorifleman", 
						"Autorifleman", 
						"MAZ_EZM_CSATP_fnc_createAutoriflemanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManMG_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPMenTree, 
						"Combat Lifesaver", 
						"Combat Lifesaver", 
						"MAZ_EZM_CSATP_fnc_createCombatMedicModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManMedic_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPMenTree, 
						"Crewman", 
						"Crewman", 
						"MAZ_EZM_CSATP_fnc_createCrewmanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPMenTree, 
						"Engineer", 
						"Engineer", 
						"MAZ_EZM_CSATP_fnc_createEngineerModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManEngineer_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPMenTree, 
						"Grenadier", 
						"Grenadier", 
						"MAZ_EZM_CSATP_fnc_createGrenadierModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPMenTree, 
						"Heavy Gunner", 
						"Heavy Gunner", 
						"MAZ_EZM_CSATP_fnc_createHeavyGunnerModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManMG_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPMenTree, 
						"Helicopter Crew", 
						"Helicopter Crew", 
						"MAZ_EZM_CSATP_fnc_createHelicopterCrewModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPMenTree, 
						"Helicopter Pilot", 
						"Helicopter Pilot", 
						"MAZ_EZM_CSATP_fnc_createHelicopterPilotModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPMenTree, 
						"Pilot", 
						"Pilot", 
						"MAZ_EZM_CSATP_fnc_createPilotModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPMenTree, 
						"Fighter Pilot", 
						"Fighter Pilot", 
						"MAZ_EZM_CSATP_fnc_createFighterPilotModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;
					
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPMenTree, 
						"Marksman", 
						"Marksman", 
						"MAZ_EZM_CSATP_fnc_createMarksmanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPMenTree, 
						"Missile Specialist (AA)", 
						"Anti-Air Missile Specialist", 
						"MAZ_EZM_CSATP_fnc_createMissileSpecAAModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManAT_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPMenTree, 
						"Missile Specialist (AT)", 
						"Anti-Tank Missile Specialist", 
						"MAZ_EZM_CSATP_fnc_createMissileSpecATModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManAT_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPMenTree, 
						"Rifleman", 
						"Rifleman", 
						"MAZ_EZM_CSATP_fnc_createRiflemanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPMenTree, 
						"Rifleman (Light)", 
						"Rifleman (Light)", 
						"MAZ_EZM_CSATP_fnc_createRiflemanLightModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPMenTree, 
						"Rifleman (LAT)", 
						"Light Anti-Tank Rifleman", 
						"MAZ_EZM_CSATP_fnc_createRiflemanLATModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManAT_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPMenTree, 
						"Rifleman (HAT)", 
						"Heavy Anti-Tank Rifleman", 
						"MAZ_EZM_CSATP_fnc_createRiflemanHATModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManAT_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPMenTree, 
						"Sharpshooter", 
						"Sharpshooter", 
						"MAZ_EZM_CSATP_fnc_createSharpshooterModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPMenTree, 
						"Squad Leader", 
						"Squad Leader", 
						"MAZ_EZM_CSATP_fnc_createSquadLeadModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManLeader_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPMenTree, 
						"Radioman", 
						"Radioman", 
						"MAZ_EZM_CSATP_fnc_createRadiomanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPMenTree, 
						"Survivor", 
						"Survivor", 
						"MAZ_EZM_CSATP_fnc_createSurvivorModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

				comment "Men (Special)";

					MAZ_CSATPSpecialMenTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						"Men (Special)", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSpecialMenTree, 
						"Diver", 
						"Diver", 
						"MAZ_EZM_CSATP_fnc_createDiverModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSpecialMenTree, 
						"Recon Demo Specialist", 
						"Recon Demo Specialist", 
						"MAZ_EZM_CSATP_fnc_createReconDemoModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManEngineer_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSpecialMenTree, 
						"Recon JTAC", 
						"Recon JTAC", 
						"MAZ_EZM_CSATP_fnc_createReconJTACModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSpecialMenTree, 
						"Recon Marksman", 
						"Recon Marksman", 
						"MAZ_EZM_CSATP_fnc_createReconMarksmanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSpecialMenTree, 
						"Recon Paramedic", 
						"Recon Paramedic", 
						"MAZ_EZM_CSATP_fnc_createReconParamedicModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManMedic_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSpecialMenTree, 
						"Recon Scout", 
						"Recon Scout", 
						"MAZ_EZM_CSATP_fnc_createReconScoutModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSpecialMenTree, 
						"Recon Scout (AT)", 
						"Recon Scout (AT)", 
						"MAZ_EZM_CSATP_fnc_createReconScoutATModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManAT_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSpecialMenTree, 
						"Recon Team Leader", 
						"Recon Team Leader", 
						"MAZ_EZM_CSATP_fnc_createReconTeamLeaderModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSpecialMenTree, 
						"Sniper", 
						"Sniper", 
						"MAZ_EZM_CSATP_fnc_createReconSniperModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPSpecialMenTree, 
						"Spotter", 
						"Spotter", 
						"MAZ_EZM_CSATP_fnc_createReconSpotterModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

  				comment "Men (Urban)";

					MAZ_CSATPUrbanMenTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						"Men (Urban)", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPUrbanMenTree, 
						"Ammo Bearer", 
						"Ammo Bearer", 
						"MAZ_EZM_CSATP_fnc_createAmmoBearerUrbanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPUrbanMenTree, 
						"Autorifleman", 
						"Autorifleman", 
						"MAZ_EZM_CSATP_fnc_createAutoriflemanUrbanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManMG_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPUrbanMenTree, 
						"Combat Lifesaver", 
						"Combat Lifesaver", 
						"MAZ_EZM_CSATP_fnc_createCombatMedicUrbanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManMedic_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPUrbanMenTree, 
						"Crewman", 
						"Crewman", 
						"MAZ_EZM_CSATP_fnc_createCrewmanUrbanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPUrbanMenTree, 
						"Engineer", 
						"Engineer", 
						"MAZ_EZM_CSATP_fnc_createEngineerUrbanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManEngineer_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPUrbanMenTree, 
						"Grenadier", 
						"Grenadier", 
						"MAZ_EZM_CSATP_fnc_createGrenadierUrbanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPUrbanMenTree, 
						"Heavy Gunner", 
						"Heavy Gunner", 
						"MAZ_EZM_CSATP_fnc_createHeavyGunnerUrbanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManMG_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
		
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPUrbanMenTree, 
						"Marksman", 
						"Marksman", 
						"MAZ_EZM_CSATP_fnc_createMarksmanUrbanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPUrbanMenTree, 
						"Missile Specialist (AA)", 
						"Anti-Air Missile Specialist", 
						"MAZ_EZM_CSATP_fnc_createMissileSpecAAUrbanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManAT_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPUrbanMenTree, 
						"Missile Specialist (AT)", 
						"Anti-Tank Missile Specialist", 
						"MAZ_EZM_CSATP_fnc_createMissileSpecATUrbanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManAT_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPUrbanMenTree, 
						"Rifleman", 
						"Rifleman", 
						"MAZ_EZM_CSATP_fnc_createRiflemanUrbanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPUrbanMenTree, 
						"Rifleman (LAT)", 
						"Light Anti-Tank Rifleman.", 
						"MAZ_EZM_CSATP_fnc_createRiflemanLATUrbanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManAT_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPUrbanMenTree, 
						"Rifleman (HAT)", 
						"Heavy Anti-Tank Rifleman.", 
						"MAZ_EZM_CSATP_fnc_createRiflemanHATUrbanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManAT_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPUrbanMenTree, 
						"Sharpshooter", 
						"Sharpshooter", 
						"MAZ_EZM_CSATP_fnc_createSharpshooterUrbanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPUrbanMenTree, 
						"Squad Leader", 
						"Squad Leader", 
						"MAZ_EZM_CSATP_fnc_createSquadLeadUrbanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManLeader_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPUrbanMenTree, 
						"Radioman", 
						"Radioman", 
						"MAZ_EZM_CSATP_fnc_createRadiomanUrbanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPUrbanMenTree, 
						"Survivor", 
						"Survivor", 
						"MAZ_EZM_CSATP_fnc_createSurvivorUrbanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "Reinforcement"; 
				
					MAZ_CSATPReinforcementTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						"Reinforcement", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPReinforcementTree, 
						"Orca (Unarmed)", 
						"Orca (Unarmed)", 
						"MAZ_EZM_CSATP_fnc_createReinforcementOrcaModule", 
						"a3\air_f\heli_light_02\data\ui\map_heli_light_02_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPReinforcementTree, 
						"Qilin (Unarmed)", 
						"Qilin (Unarmed)", 
						"MAZ_EZM_CSATP_fnc_createReinforcementQilinUnarmedModule", 
						"\A3\soft_f\Offroad_01\Data\UI\map_offroad_01_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPReinforcementTree, 
						"RHIB", 
						"RHIB", 
						"MAZ_EZM_CSATP_fnc_createReinforcementRhibModule", 
						"a3\boat_f_exp\boat_transport_02\data\ui\map_boat_transport_02_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPReinforcementTree, 
						"Taru (Transport)", 
						"Taru (Transport)", 
						"MAZ_EZM_CSATP_fnc_createReinforcementTaruModule", 
						"a3\air_f_heli\heli_transport_04\data\ui\map_heli_transport_04_covered_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPReinforcementTree, 
						"Tempest Transport", 
						"Tempest Transport", 
						"MAZ_EZM_CSATP_fnc_createReinforcementTempestTransportModule", 
						"a3\soft_f_epc\truck_03\data\ui\map_truck_03_transport_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPReinforcementTree, 
						"Zamak Tansport", 
						"Zamak Transport", 
						"MAZ_EZM_CSATP_fnc_createReinforcementZamakCoveredTransportModule", 
						"a3\soft_f_beta\truck_02\data\ui\map_truck_02_dump_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

				comment "Reinforcement (Urban)"; 
				
					MAZ_CSATPReinforcementUrbanTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						"Reinforcement (Urban)", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPReinforcementUrbanTree, 
						"Orca (Unarmed)", 
						"Orca (Unarmed)", 
						"MAZ_EZM_CSATP_fnc_createReinforcementOrcaUrbanModule", 
						"a3\air_f\heli_light_02\data\ui\map_heli_light_02_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPReinforcementUrbanTree, 
						"Qilin (Unarmed)", 
						"Qilin (Unarmed)", 
						"MAZ_EZM_CSATP_fnc_createReinforcementQilinUnarmedUrbanModule", 
						"\A3\soft_f\Offroad_01\Data\UI\map_offroad_01_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPReinforcementUrbanTree, 
						"RHIB", 
						"RHIB", 
						"MAZ_EZM_CSATP_fnc_createReinforcementRhibUrbanModule", 
						"a3\boat_f_exp\boat_transport_02\data\ui\map_boat_transport_02_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPReinforcementUrbanTree, 
						"Taru (Transport)", 
						"Taru (Transport)", 
						"MAZ_EZM_CSATP_fnc_createReinforcementTaruUrbanModule", 
						"a3\air_f_heli\heli_transport_04\data\ui\map_heli_transport_04_covered_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPReinforcementUrbanTree, 
						"Tempest Transport", 
						"Tempest Transport", 
						"MAZ_EZM_CSATP_fnc_createReinforcementTempestTransportUrbanModule", 
						"a3\soft_f_epc\truck_03\data\ui\map_truck_03_transport_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPReinforcementUrbanTree, 
						"Zamak Tansport", 
						"Zamak Transport", 
						"MAZ_EZM_CSATP_fnc_createReinforcementZamakCoveredTransportUrbanModule", 
						"a3\soft_f_beta\truck_02\data\ui\map_truck_02_dump_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "Planes";
				
					MAZ_CSATPPlanesTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						"Planes", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPPlanesTree, 
						"A-143 Buzzard (CAS)", 
						"A-143 Buzzard (CAS)", 
						"MAZ_EZM_CSATP_fnc_createBuzzardCASModule", 
						"a3\air_f_gamma\plane_fighter_03\data\ui\map_plane_fighter_03_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPPlanesTree, 
						"To-199 Neophron (CAS)", 
						"To-199 Neophron (CAS)", 
						"MAZ_EZM_CSATP_fnc_createNeophronCASModule", 
						"a3\air_f_epc\plane_cas_02\data\ui\map_plane_cas_02_f.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPPlanesTree, 
						"To-201 Shikra", 
						"To-201 Shikra", 
						"MAZ_EZM_CSATP_fnc_createShikraModule", 
						"a3\air_f_jets\plane_fighter_02\data\ui\fighter02_icon_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPPlanesTree, 
						"Y-32 Xi'an (Infantry Transport)", 
						"Y-32 Xi'an (Infantry Transport)", 
						"MAZ_EZM_CSATP_fnc_createVTOLInfantryModule", 
						"a3\air_f_exp\vtol_02\data\ui\map_vtol_02_vehicle_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPPlanesTree, 
						"Y-32 Xi'an (Vehicle Transport)", 
						"Y-32 Xi'an (Vehicle Transport)", 
						"MAZ_EZM_CSATP_fnc_createVTOLVehicleModule", 
						"a3\air_f_exp\vtol_02\data\ui\map_vtol_02_vehicle_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
						
				comment "Tanks"; 
					
					MAZ_CSATPTankTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						"Tanks", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPTankTree, 
						"T-100 Varsuk", 
						"T-100 Varsuk", 
						"MAZ_EZM_CSATP_fnc_createVarsukModule", 
						"a3\armor_f_gamma\mbt_02\data\ui\map_mbt_02_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPTankTree, 
						"T-140 Angara", 
						"T-140 Angara", 
						"MAZ_EZM_CSATP_fnc_createAngaraModule", 
						"a3\armor_f_tank\mbt_04\data\ui\map_mbt_04_cannon_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPTankTree, 
						"T-140K Angara", 
						"T-140K Angara", 
						"MAZ_EZM_CSATP_fnc_createAngaraKModule", 
						"a3\armor_f_tank\mbt_04\data\ui\map_mbt_04_command_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
				comment "Trucks"; 
				
					MAZ_CSATPTrucksTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						"Trucks", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPTrucksTree, 
						"Tempest (Device)", 
						"Tempest Device", 
						"MAZ_EZM_CSATP_fnc_createTempestDeviceModule", 
						"a3\soft_f_epc\truck_03\data\ui\map_truck_03_device_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPTrucksTree, 
						"Tempest Ammo", 
						"Tempest Ammo", 
						"MAZ_EZM_CSATP_fnc_createTempestAmmoModule", 
						"a3\soft_f_epc\truck_03\data\ui\map_truck_03_ammo_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPTrucksTree, 
						"Tempest Fuel", 
						"Tempest Fuel", 
						"MAZ_EZM_CSATP_fnc_createTempestFuelModule", 
						"a3\soft_f_epc\truck_03\data\ui\map_truck_03_fuel_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPTrucksTree, 
						"Tempest Medical", 
						"Tempest Medical", 
						"MAZ_EZM_CSATP_fnc_createTempestMedicalModule", 
						"a3\soft_f_epc\truck_03\data\ui\map_truck_03_medevac_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPTrucksTree, 
						"Tempest Repair", 
						"Tempest Repair", 
						"MAZ_EZM_CSATP_fnc_createTempestRepairModule", 
						"a3\soft_f_epc\truck_03\data\ui\map_truck_03_ammo_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPTrucksTree, 
						"Tempest Transport", 
						"Tempest Transport", 
						"MAZ_EZM_CSATP_fnc_createTempestTransportModule", 
						"a3\soft_f_epc\truck_03\data\ui\map_truck_03_transport_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPTrucksTree, 
						"Tempest Transport (Covered)", 
						"Tempest Transport", 
						"MAZ_EZM_CSATP_fnc_createTempestTransportCoveredModule", 
						"a3\soft_f_epc\truck_03\data\ui\map_truck_03_covered_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPTrucksTree, 
						"Zamak Ammo", 
						"Zamak Ammo", 
						"MAZ_EZM_CSATP_fnc_createZamakAmmoModule", 
						"\A3\soft_f_gamma\Truck_02\data\UI\Map_Truck_02_box_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPTrucksTree, 
						"Zamak Fuel", 
						"Zamak Fuel", 
						"MAZ_EZM_CSATP_fnc_createZamakFuelModule", 
						"a3\soft_f_gamma\truck_02\data\ui\map_truck_02_fuel_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPTrucksTree, 
						"Zamak Medical", 
						"Medical Zamak", 
						"MAZ_EZM_CSATP_fnc_createZamakMedicalModule", 
						"a3\soft_f_gamma\truck_02\data\ui\map_truck_02_medevac_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPTrucksTree, 
						"Zamak Repair", 
						"Zamak Repair", 
						"MAZ_EZM_CSATP_fnc_createZamakRepairModule", 
						"a3\soft_f_beta\truck_02\data\ui\map_truck_02_repair_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPTrucksTree, 
						"Zamak Transport", 
						"Zamak", 
						"MAZ_EZM_CSATP_fnc_createZamakTransportModule", 
						"a3\soft_f_beta\truck_02\data\ui\map_truck_02_dump_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPTrucksTree, 
						"Zamak Transport (Covered)", 
						"Zamak (Covered)", 
						"MAZ_EZM_CSATP_fnc_createZamakCoveredTransportModule", 
						"a3\soft_f_beta\truck_02\data\ui\map_truck_02_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "Turrets"; 
				
					MAZ_CSATPTurretTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						"Turrets", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPTurretTree, 
						"M2 HMG", 
						"M2 HMG", 
						"MAZ_EZM_CSATP_fnc_createM2HMGModule", 
						"\a3\static_f\hmg_02\data\ui\icon_hmg_02_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPTurretTree, 
						"M2 HMG (Raised)", 
						"M2 HMG (Raised)", 
						"MAZ_EZM_CSATP_fnc_createM2HMGRaisedModule", 
						"a3\static_f_oldman\hmg_02\data\ui\icon_hmg_02_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPTurretTree, 
						"Mk32 GMG", 
						"Mk32 GMG", 
						"MAZ_EZM_CSATP_fnc_createMk32GMGModule", 
						"\a3\static_f\hmg_02\data\ui\icon_hmg_02_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;  
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPTurretTree, 
						"Mk6 Mortar", 
						"Mk6 Mortar", 
						"MAZ_EZM_CSATP_fnc_createMk6MortarModule", 
						"\A3\Static_f\Mortar_01\data\UI\map_Mortar_01_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPTurretTree, 
						"Static AT Launcher", 
						"Static AT Launcher", 
						"MAZ_EZM_CSATP_fnc_createATLauncherModule", 
						"\A3\Static_F_Gamma\data\UI\map_StaticTurret_AT_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_CSATPTree, 
						MAZ_CSATPTurretTree, 
						"Static AA Launcher", 
						"Static AA Launcher", 
						"MAZ_EZM_CSATP_fnc_createAALauncherModule", 
						"\A3\Static_F_Gamma\data\UI\map_StaticTurret_AA_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
			comment "FIA+"; 
				
					private _UnitsTree_OPFOR = MAZ_UnitsTree_OPFOR; 
					private _count = _UnitsTree_OPFOR tvCount [2]; 
					for "_i" from 0 to (_count - 1) do { 
						_UnitsTree_OPFOR tvDelete [2,0]; 
					}; 
				
					MAZ_FIAPTree = 2; 
					MAZ_UnitsTree_OPFOR tvSetText [[MAZ_FIAPTree],"FIA+"]; 
					MAZ_UnitsTree_OPFOR tvSetPictureRight [[MAZ_FIAPTree], "\a3\data_f\cfgfactionclasses_civ_ca.paa"]; 
					MAZ_UnitsTree_OPFOR tvSetTooltip [[MAZ_FIAPTree], "A remastered version of the FIA faction."]; 
				
				comment "APCs"; 
					
					MAZ_FIAPAPCsTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"APCs", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPAPCsTree, 
						"AFV-4 Gorgon", 
						"Creates a FIA Gorgon.", 
						"MAZ_EZM_FIAP_fnc_createGorgonModule", 
						"\A3\armor_f_gamma\APC_Wheeled_03\Data\UI\map_APC_Wheeled_03_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPAPCsTree, 
						"AFV-4 Gorgon (20mm)", 
						"Creates a FIA 20mm Gorgon. Can only be used by AI vs Players.", 
						"MAZ_EZM_FIAP_fnc_createGorgon20mmModule", 
						"\A3\armor_f_gamma\APC_Wheeled_03\Data\UI\map_APC_Wheeled_03_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
				comment "Boats"; 
				
					MAZ_FIAPBoatsTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"Boats", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPBoatsTree, 
						"Assault Boat", 
						"Creates a FIA Assault Boat", 
						"MAZ_EZM_FIAP_fnc_createAssaultBoatModule", 
						"\A3\boat_F\Boat_Transport_01\data\UI\map_Boat_Transport_01_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPBoatsTree, 
						"RHIB", 
						"Creates a FIA RHIB", 
						"MAZ_EZM_FIAP_fnc_createRhibBoatModule", 
						"\A3\Boat_F_Exp\Boat_Transport_02\Data\UI\Map_Boat_Transport_02_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "Cars"; 
				
					MAZ_FIAPCarsTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"Cars", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCarsTree, 
						"Offroad", 
						"Creates a FIA Offroad.", 
						"MAZ_EZM_FIAP_fnc_createOffroadModule", 
						"\A3\soft_f\Offroad_01\Data\UI\map_offroad_01_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCarsTree, 
						"Offroad (AT)", 
						"Creates a FIA Offroad (AT).", 
						"MAZ_EZM_FIAP_fnc_createOffroadATModule", 
						"\A3\Soft_F_Gamma\Offroad_01\Data\UI\map_offroad_armed_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCarsTree, 
						"Offroad (Covered)", 
						"Creates a FIA Offroad (Covered).", 
						"MAZ_EZM_FIAP_fnc_createOffroadCoveredModule", 
						"\A3\soft_f\Offroad_01\Data\UI\map_offroad_01_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCarsTree, 
						"Offroad (HMG)", 
						"Creates a FIA Offroad (HMG).", 
						"MAZ_EZM_FIAP_fnc_createOffroadHMGModule", 
						"\A3\Soft_F_Gamma\Offroad_01\Data\UI\map_offroad_armed_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCarsTree, 
						"Offroad (Mortar)", 
						"Creates a FIA Mortar Offroad.", 
						"MAZ_EZM_FIAP_fnc_createMortarOffroadModule", 
						"\A3\soft_f\Offroad_01\Data\UI\map_offroad_01_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCarsTree, 
						"Offroad (Repair)", 
						"Creates a FIA Offroad (Repair).", 
						"MAZ_EZM_FIAP_fnc_createOffroadRepairModule", 
						"\A3\soft_f\Offroad_01\Data\UI\map_offroad_01_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCarsTree, 
						"Jeep", 
						"Creates a FIA Jeep.", 
						"MAZ_EZM_FIAP_fnc_createJeepModule", 
						"\A3\Soft_F_Exp\Offroad_02\Data\UI\map_Offroad_02_base_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCarsTree, 
						"Jeep (AT)", 
						"Creates a FIA Jeep (AT).", 
						"MAZ_EZM_FIAP_fnc_createJeepATModule", 
						"\A3\Soft_F_Exp\Offroad_02\Data\UI\map_Offroad_02_base_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCarsTree, 
						"Jeep (LMG)", 
						"Creates a FIA Jeep (LMG).", 
						"MAZ_EZM_FIAP_fnc_createJeepLMGModule", 
						"\A3\Soft_F_Exp\Offroad_02\Data\UI\map_Offroad_02_base_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCarsTree, 
						"Quadbike", 
						"Creates a FIA Quadbike", 
						"MAZ_EZM_FIAP_fnc_createQuadbikeModule", 
						"\A3\Soft_F\Quadbike_01\Data\UI\map_Quad_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
				comment "Compositions"; 
				
					MAZ_FIAPCompositionsTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"Compositions", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCompositionsTree, 
						"Bunker", 
						"Creates a FIA Bunker.", 
						"MAZ_EZM_FIAP_fnc_createBunkerModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCompositionsTree, 
						"Cache #1", 
						"Creates a FIA Cache.", 
						"MAZ_EZM_FIAP_fnc_createCache1Module", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCompositionsTree, 
						"Cache #2", 
						"Creates a FIA Cache.", 
						"MAZ_EZM_FIAP_fnc_createCache2Module", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "Drones"; 
				
					MAZ_FIAPDronesTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"Drones", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPDronesTree, 
						"AR-2 Darter", 
						"Creates a FIA Darter.", 
						"MAZ_EZM_FIAP_fnc_createDarterModule", 
						"\A3\Drones_F\Air_F_Gamma\UAV_01\Data\UI\Map_UAV_01_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPDronesTree, 
						"AL-6 Pelican (Grenade)", 
						"Creates a FIA Pelican. Can drop grenades.", 
						"MAZ_EZM_FIAP_fnc_createPelicanModule", 
						"\A3\Air_F_Orange\UAV_06\Data\UI\Map_UAV_06_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "Groups"; 
				
					MAZ_FIAPSubCatTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"Groups", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPSubCatTree, 
						"Anti-Air Team", 
						"Creates a FIA Anti-Air Team", 
						"MAZ_EZM_FIAP_fnc_createAntiAirTeamModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPSubCatTree, 
						"Anti-Tank Team", 
						"Creates a FIA Anti-Tank Team", 
						"MAZ_EZM_FIAP_fnc_createAntiTankTeamModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPSubCatTree, 
						"Squad", 
						"Creates a FIA Squad", 
						"MAZ_EZM_FIAP_fnc_createSquadModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPSubCatTree, 
						"Patrol", 
						"Creates a FIA Patrol", 
						"MAZ_EZM_FIAP_fnc_createPatrolModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPSubCatTree, 
						"Sentry", 
						"Creates a FIA Sentry", 
						"MAZ_EZM_FIAP_fnc_createSentryModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPSubCatTree, 
						"Sniper Team", 
						"Creates a FIA Sniper Team", 
						"MAZ_EZM_FIAP_fnc_createSniperTeamModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "Men"; 
					
					MAZ_FIAPMenTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"Men", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Ammo Bearer", 
						"Creates a FIA Ammo Bearer.", 
						"MAZ_EZM_FIAP_fnc_createAmmoBearerModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Autorifleman", 
						"Creates a FIA Autorifleman.", 
						"MAZ_EZM_FIAP_fnc_createAutoriflemanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManMG_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Combat Lifesaver", 
						"Creates a FIA Combat Lifesaver.", 
						"MAZ_EZM_FIAP_fnc_createCombatMedicModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManMedic_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Crewman", 
						"Creates a FIA Crewman.", 
						"MAZ_EZM_FIAP_fnc_createCrewmanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Engineer", 
						"Creates a FIA Engineer.", 
						"MAZ_EZM_FIAP_fnc_createEngineerModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManEngineer_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Grenadier", 
						"Creates a FIA Grenadier.", 
						"MAZ_EZM_FIAP_fnc_createGrenadierModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Marksman", 
						"Creates a FIA Marksman.", 
						"MAZ_EZM_FIAP_fnc_createMarksmanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Missile Specialist (AA)", 
						"Creates a FIA Anti-Air Missile Specialist.", 
						"MAZ_EZM_FIAP_fnc_createMissileSpecAAModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManAT_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Rifleman", 
						"Creates a FIA Rifleman.", 
						"MAZ_EZM_FIAP_fnc_createRiflemanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Rifleman (LAT)", 
						"Creates a FIA Light Anti-Tank Rifleman.", 
						"MAZ_EZM_FIAP_fnc_createRiflemanLATModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManAT_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Rifleman (HAT)", 
						"Creates a FIA Heavy Anti-Tank Rifleman.", 
						"MAZ_EZM_FIAP_fnc_createRiflemanHATModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManAT_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Squad Leader", 
						"Creates a FIA Squad Leader.", 
						"MAZ_EZM_FIAP_fnc_createSquadLeadModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManLeader_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Radioman", 
						"Creates a FIA Radioman.", 
						"MAZ_EZM_FIAP_fnc_createRadiomanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Survivor", 
						"Creates a FIA Survivor.", 
						"MAZ_EZM_FIAP_fnc_createSurvivorModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "Reinforcement"; 
				
					MAZ_FIAPReinforcementTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"Reinforcement", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPReinforcementTree, 
						"Offroad", 
						"Creates a loaded FIA Offroad", 
						"MAZ_EZM_FIAP_fnc_createReinforcementOffroadModule", 
						"\A3\soft_f\Offroad_01\Data\UI\map_offroad_01_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPReinforcementTree, 
						"Offroad (Covered)", 
						"Creates a loaded FIA Offroad (Covered)", 
						"MAZ_EZM_FIAP_fnc_createReinforcementOffroadCoveredModule", 
						"\A3\soft_f\Offroad_01\Data\UI\map_offroad_01_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPReinforcementTree, 
						"RHIB", 
						"RHIB", 
						"MAZ_EZM_FIAP_fnc_createReinforcementRhibModule", 
						"a3\boat_f_exp\boat_transport_02\data\ui\map_boat_transport_02_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPReinforcementTree, 
						"Transport Van", 
						"Creates a loaded FIA Transport Van.", 
						"MAZ_EZM_FIAP_fnc_createReinforcementVanTransportModule", 
						"\a3\Soft_F_Orange\Van_02\Data\UI\Map_Van_02_vehicle_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPReinforcementTree, 
						"Van", 
						"Creates a loaded FIA Van.", 
						"MAZ_EZM_FIAP_fnc_createReinforcementVanModule", 
						"\a3\Soft_F_Orange\Van_02\Data\UI\Map_Van_02_vehicle_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPReinforcementTree, 
						"Zamak", 
						"Creates a loaded FIA Zamak", 
						"MAZ_EZM_FIAP_fnc_createReinforcementZamakCoveredTransportModule", 
						"\A3\soft_f_beta\Truck_02\data\UI\Map_Truck_02_dump_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "Tanks"; 
					
					MAZ_FIAPTankTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"Tanks", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTankTree, 
						"Anti-Air Nyx", 
						"Creates a FIA Anti-Air Nyx.", 
						"MAZ_EZM_FIAP_fnc_createAANyxModule", 
						"\A3\armor_f_beta\APC_Tracked_01\Data\ui\map_APC_Tracked_01_aa_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTankTree, 
						"Autocannon Nyx", 
						"Creates a FIA 20mm Nyx.", 
						"MAZ_EZM_FIAP_fnc_create20mmNyxModule", 
						"\A3\armor_f_beta\APC_Tracked_01\Data\ui\map_APC_Tracked_01_aa_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "Trucks"; 
				
					MAZ_FIAPTrucksTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"Trucks", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTrucksTree, 
						"Zamak Ammo", 
						"Creates a FIA Zamak Ammo.", 
						"MAZ_EZM_FIAP_fnc_createZamakAmmoModule", 
						"\A3\soft_f_gamma\Truck_02\data\UI\Map_Truck_02_box_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTrucksTree, 
						"Zamak Fuel", 
						"Creates a FIA Zamak Fuel.", 
						"MAZ_EZM_FIAP_fnc_createZamakFuelModule", 
						"\A3\soft_f_gamma\Truck_02\data\UI\Map_Truck_02_fuel_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTrucksTree, 
						"Zamak Medical", 
						"Creates a FIA Medical Zamak.", 
						"MAZ_EZM_FIAP_fnc_createZamakMedicalModule", 
						"\A3\soft_f_gamma\Truck_02\data\UI\Map_Truck_02_medevac_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTrucksTree, 
						"Zamak Repair", 
						"Creates a FIA Zamak Repair.", 
						"MAZ_EZM_FIAP_fnc_createZamakRepairModule", 
						"\A3\Soft_F_Beta\Truck_02\Data\UI\Map_Truck_02_repair_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTrucksTree, 
						"Zamak Transport", 
						"Creates a FIA Zamak.", 
						"MAZ_EZM_FIAP_fnc_createZamakTransportModule", 
						"\A3\soft_f_beta\Truck_02\data\UI\Map_Truck_02_dump_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTrucksTree, 
						"Zamak Transport (Covered)", 
						"Creates a FIA Zamak (Covered).", 
						"MAZ_EZM_FIAP_fnc_createZamakCoveredTransportModule", 
						"\A3\soft_f_beta\Truck_02\data\UI\Map_Truck_02_dump_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTrucksTree, 
						"Truck", 
						"Creates a FIA Truck.", 
						"MAZ_EZM_FIAP_fnc_createTruckModule", 
						"\A3\soft_f_gamma\van_01\Data\UI\map_van_01_cistern_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTrucksTree, 
						"Turret Truck", 
						"Creates a FIA Turret Truck.", 
						"MAZ_EZM_FIAP_fnc_createTurretTruckModule", 
						"\A3\soft_f_gamma\van_01\Data\UI\map_van_01_cistern_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTrucksTree, 
						"Fuel Truck", 
						"Creates a FIA Fuel Truck.", 
						"MAZ_EZM_FIAP_fnc_createFuelTruckModule", 
						"\A3\soft_f_gamma\van_01\Data\UI\map_van_01_cistern_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTrucksTree, 
						"Supply Truck", 
						"Creates a FIA Supply Truck.", 
						"MAZ_EZM_FIAP_fnc_createSupplyTruckModule", 
						"\A3\soft_f_gamma\van_01\Data\UI\map_van_01_cistern_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "Turrets"; 
				
					MAZ_FIAPTurretTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"Turrets", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTurretTree, 
						"M2 HMG", 
						"Creates a FIA M2 HMG", 
						"MAZ_EZM_FIAP_fnc_createM2HMGModule", 
						"\a3\static_f\hmg_02\data\ui\icon_hmg_02_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTurretTree, 
						"M2 HMG (Raised)", 
						"Creates a FIA M2 HMG (Raised)", 
						"MAZ_EZM_FIAP_fnc_createM2HMGRaisedModule", 
						"a3\static_f_oldman\hmg_02\data\ui\icon_hmg_02_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTurretTree, 
						"Mk6 Mortar", 
						"Creates a FIA Mk6 Mortar", 
						"MAZ_EZM_FIAP_fnc_createMk6MortarModule", 
						"\A3\Static_f\Mortar_01\data\UI\map_Mortar_01_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTurretTree, 
						"Static AA Launcher", 
						"Creates a Static AA Launcher", 
						"MAZ_EZM_FIAP_fnc_createAALauncherModule", 
						"\A3\Static_F_Gamma\data\UI\map_StaticTurret_AA_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
				comment "Vans"; 
				
					MAZ_FIAPVansTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"Vans", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPVansTree, 
						"Van", 
						"Creates a FIA Van.", 
						"MAZ_EZM_FIAP_fnc_createVanModule", 
						"\a3\Soft_F_Orange\Van_02\Data\UI\Map_Van_02_vehicle_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPVansTree, 
						"Transport Van", 
						"Creates a FIA Transport Van.", 
						"MAZ_EZM_FIAP_fnc_createVanTransportModule", 
						"\a3\Soft_F_Orange\Van_02\Data\UI\Map_Van_02_vehicle_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPVansTree, 
						"Medical Van", 
						"Creates a FIA Medical Van.", 
						"MAZ_EZM_FIAP_fnc_createMedicalVanModule", 
						"\a3\Soft_F_Orange\Van_02\Data\UI\Map_Van_02_medevac_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

			comment "FIA+"; 
				
					private _UnitsTree_OPFOR = MAZ_UnitsTree_OPFOR; 
					private _count = _UnitsTree_OPFOR tvCount [2]; 
					for "_i" from 0 to (_count - 1) do { 
						_UnitsTree_OPFOR tvDelete [2,0]; 
					}; 
				
					MAZ_FIAPTree = 2; 
					MAZ_UnitsTree_OPFOR tvSetText [[MAZ_FIAPTree],"FIA+"]; 
					MAZ_UnitsTree_OPFOR tvSetPictureRight [[MAZ_FIAPTree], "\a3\data_f\cfgfactionclasses_civ_ca.paa"]; 
					MAZ_UnitsTree_OPFOR tvSetTooltip [[MAZ_FIAPTree], "A remastered version of the FIA faction."]; 
				
				comment "APCs"; 
					
					MAZ_FIAPAPCsTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"APCs", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPAPCsTree, 
						"AFV-4 Gorgon", 
						"Creates a FIA Gorgon.", 
						"MAZ_EZM_FIAP_fnc_createGorgonModule", 
						"\A3\armor_f_gamma\APC_Wheeled_03\Data\UI\map_APC_Wheeled_03_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPAPCsTree, 
						"AFV-4 Gorgon (20mm)", 
						"Creates a FIA 20mm Gorgon. Can only be used by AI vs Players.", 
						"MAZ_EZM_FIAP_fnc_createGorgon20mmModule", 
						"\A3\armor_f_gamma\APC_Wheeled_03\Data\UI\map_APC_Wheeled_03_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
				comment "Boats"; 
				
					MAZ_FIAPBoatsTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"Boats", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPBoatsTree, 
						"Assault Boat", 
						"Creates a FIA Assault Boat", 
						"MAZ_EZM_FIAP_fnc_createAssaultBoatModule", 
						"\A3\boat_F\Boat_Transport_01\data\UI\map_Boat_Transport_01_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPBoatsTree, 
						"RHIB", 
						"Creates a FIA RHIB", 
						"MAZ_EZM_FIAP_fnc_createRhibBoatModule", 
						"\A3\Boat_F_Exp\Boat_Transport_02\Data\UI\Map_Boat_Transport_02_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "Cars"; 
				
					MAZ_FIAPCarsTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"Cars", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCarsTree, 
						"Offroad", 
						"Creates a FIA Offroad.", 
						"MAZ_EZM_FIAP_fnc_createOffroadModule", 
						"\A3\soft_f\Offroad_01\Data\UI\map_offroad_01_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCarsTree, 
						"Offroad (AT)", 
						"Creates a FIA Offroad (AT).", 
						"MAZ_EZM_FIAP_fnc_createOffroadATModule", 
						"\A3\Soft_F_Gamma\Offroad_01\Data\UI\map_offroad_armed_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCarsTree, 
						"Offroad (Covered)", 
						"Creates a FIA Offroad (Covered).", 
						"MAZ_EZM_FIAP_fnc_createOffroadCoveredModule", 
						"\A3\soft_f\Offroad_01\Data\UI\map_offroad_01_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCarsTree, 
						"Offroad (HMG)", 
						"Creates a FIA Offroad (HMG).", 
						"MAZ_EZM_FIAP_fnc_createOffroadHMGModule", 
						"\A3\Soft_F_Gamma\Offroad_01\Data\UI\map_offroad_armed_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCarsTree, 
						"Offroad (Mortar)", 
						"Creates a FIA Mortar Offroad.", 
						"MAZ_EZM_FIAP_fnc_createMortarOffroadModule", 
						"\A3\soft_f\Offroad_01\Data\UI\map_offroad_01_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCarsTree, 
						"Offroad (Repair)", 
						"Creates a FIA Offroad (Repair).", 
						"MAZ_EZM_FIAP_fnc_createOffroadRepairModule", 
						"\A3\soft_f\Offroad_01\Data\UI\map_offroad_01_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCarsTree, 
						"Jeep", 
						"Creates a FIA Jeep.", 
						"MAZ_EZM_FIAP_fnc_createJeepModule", 
						"\A3\Soft_F_Exp\Offroad_02\Data\UI\map_Offroad_02_base_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCarsTree, 
						"Jeep (AT)", 
						"Creates a FIA Jeep (AT).", 
						"MAZ_EZM_FIAP_fnc_createJeepATModule", 
						"\A3\Soft_F_Exp\Offroad_02\Data\UI\map_Offroad_02_base_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCarsTree, 
						"Jeep (LMG)", 
						"Creates a FIA Jeep (LMG).", 
						"MAZ_EZM_FIAP_fnc_createJeepLMGModule", 
						"\A3\Soft_F_Exp\Offroad_02\Data\UI\map_Offroad_02_base_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCarsTree, 
						"Quadbike", 
						"Creates a FIA Quadbike", 
						"MAZ_EZM_FIAP_fnc_createQuadbikeModule", 
						"\A3\Soft_F\Quadbike_01\Data\UI\map_Quad_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
				comment "Compositions"; 
				
					MAZ_FIAPCompositionsTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"Compositions", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCompositionsTree, 
						"Bunker", 
						"Creates a FIA Bunker.", 
						"MAZ_EZM_FIAP_fnc_createBunkerModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCompositionsTree, 
						"Cache #1", 
						"Creates a FIA Cache.", 
						"MAZ_EZM_FIAP_fnc_createCache1Module", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPCompositionsTree, 
						"Cache #2", 
						"Creates a FIA Cache.", 
						"MAZ_EZM_FIAP_fnc_createCache2Module", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "Drones"; 
				
					MAZ_FIAPDronesTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"Drones", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPDronesTree, 
						"AR-2 Darter", 
						"Creates a FIA Darter.", 
						"MAZ_EZM_FIAP_fnc_createDarterModule", 
						"\A3\Drones_F\Air_F_Gamma\UAV_01\Data\UI\Map_UAV_01_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPDronesTree, 
						"AL-6 Pelican (Grenade)", 
						"Creates a FIA Pelican. Can drop grenades.", 
						"MAZ_EZM_FIAP_fnc_createPelicanModule", 
						"\A3\Air_F_Orange\UAV_06\Data\UI\Map_UAV_06_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "Groups"; 
				
					MAZ_FIAPSubCatTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"Groups", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPSubCatTree, 
						"Anti-Air Team", 
						"Creates a FIA Anti-Air Team", 
						"MAZ_EZM_FIAP_fnc_createAntiAirTeamModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPSubCatTree, 
						"Anti-Tank Team", 
						"Creates a FIA Anti-Tank Team", 
						"MAZ_EZM_FIAP_fnc_createAntiTankTeamModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPSubCatTree, 
						"Squad", 
						"Creates a FIA Squad", 
						"MAZ_EZM_FIAP_fnc_createSquadModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPSubCatTree, 
						"Patrol", 
						"Creates a FIA Patrol", 
						"MAZ_EZM_FIAP_fnc_createPatrolModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPSubCatTree, 
						"Sentry", 
						"Creates a FIA Sentry", 
						"MAZ_EZM_FIAP_fnc_createSentryModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPSubCatTree, 
						"Sniper Team", 
						"Creates a FIA Sniper Team", 
						"MAZ_EZM_FIAP_fnc_createSniperTeamModule", 
						"" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "Men"; 
					
					MAZ_FIAPMenTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"Men", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Ammo Bearer", 
						"Creates a FIA Ammo Bearer.", 
						"MAZ_EZM_FIAP_fnc_createAmmoBearerModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Autorifleman", 
						"Creates a FIA Autorifleman.", 
						"MAZ_EZM_FIAP_fnc_createAutoriflemanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManMG_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Combat Lifesaver", 
						"Creates a FIA Combat Lifesaver.", 
						"MAZ_EZM_FIAP_fnc_createCombatMedicModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManMedic_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Crewman", 
						"Creates a FIA Crewman.", 
						"MAZ_EZM_FIAP_fnc_createCrewmanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Engineer", 
						"Creates a FIA Engineer.", 
						"MAZ_EZM_FIAP_fnc_createEngineerModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManEngineer_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Grenadier", 
						"Creates a FIA Grenadier.", 
						"MAZ_EZM_FIAP_fnc_createGrenadierModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Marksman", 
						"Creates a FIA Marksman.", 
						"MAZ_EZM_FIAP_fnc_createMarksmanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Missile Specialist (AA)", 
						"Creates a FIA Anti-Air Missile Specialist.", 
						"MAZ_EZM_FIAP_fnc_createMissileSpecAAModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManAT_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Rifleman", 
						"Creates a FIA Rifleman.", 
						"MAZ_EZM_FIAP_fnc_createRiflemanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Rifleman (LAT)", 
						"Creates a FIA Light Anti-Tank Rifleman.", 
						"MAZ_EZM_FIAP_fnc_createRiflemanLATModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManAT_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Rifleman (HAT)", 
						"Creates a FIA Heavy Anti-Tank Rifleman.", 
						"MAZ_EZM_FIAP_fnc_createRiflemanHATModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManAT_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Squad Leader", 
						"Creates a FIA Squad Leader.", 
						"MAZ_EZM_FIAP_fnc_createSquadLeadModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconManLeader_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Radioman", 
						"Creates a FIA Radioman.", 
						"MAZ_EZM_FIAP_fnc_createRadiomanModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPMenTree, 
						"Survivor", 
						"Creates a FIA Survivor.", 
						"MAZ_EZM_FIAP_fnc_createSurvivorModule", 
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "Reinforcement"; 
				
					MAZ_FIAPReinforcementTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"Reinforcement", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPReinforcementTree, 
						"Offroad", 
						"Creates a loaded FIA Offroad", 
						"MAZ_EZM_FIAP_fnc_createReinforcementOffroadModule", 
						"\A3\soft_f\Offroad_01\Data\UI\map_offroad_01_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPReinforcementTree, 
						"Offroad (Covered)", 
						"Creates a loaded FIA Offroad (Covered)", 
						"MAZ_EZM_FIAP_fnc_createReinforcementOffroadCoveredModule", 
						"\A3\soft_f\Offroad_01\Data\UI\map_offroad_01_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPReinforcementTree, 
						"RHIB", 
						"RHIB", 
						"MAZ_EZM_FIAP_fnc_createReinforcementRhibModule", 
						"a3\boat_f_exp\boat_transport_02\data\ui\map_boat_transport_02_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPReinforcementTree, 
						"Transport Van", 
						"Creates a loaded FIA Transport Van.", 
						"MAZ_EZM_FIAP_fnc_createReinforcementVanTransportModule", 
						"\a3\Soft_F_Orange\Van_02\Data\UI\Map_Van_02_vehicle_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 

					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPReinforcementTree, 
						"Van", 
						"Creates a loaded FIA Van.", 
						"MAZ_EZM_FIAP_fnc_createReinforcementVanModule", 
						"\a3\Soft_F_Orange\Van_02\Data\UI\Map_Van_02_vehicle_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPReinforcementTree, 
						"Zamak", 
						"Creates a loaded FIA Zamak", 
						"MAZ_EZM_FIAP_fnc_createReinforcementZamakCoveredTransportModule", 
						"\A3\soft_f_beta\Truck_02\data\UI\Map_Truck_02_dump_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "Tanks"; 
					
					MAZ_FIAPTankTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"Tanks", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTankTree, 
						"Anti-Air Nyx", 
						"Creates a FIA Anti-Air Nyx.", 
						"MAZ_EZM_FIAP_fnc_createAANyxModule", 
						"\A3\armor_f_beta\APC_Tracked_01\Data\ui\map_APC_Tracked_01_aa_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTankTree, 
						"Autocannon Nyx", 
						"Creates a FIA 20mm Nyx.", 
						"MAZ_EZM_FIAP_fnc_create20mmNyxModule", 
						"\A3\armor_f_beta\APC_Tracked_01\Data\ui\map_APC_Tracked_01_aa_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "Trucks"; 
				
					MAZ_FIAPTrucksTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"Trucks", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTrucksTree, 
						"Zamak Ammo", 
						"Creates a FIA Zamak Ammo.", 
						"MAZ_EZM_FIAP_fnc_createZamakAmmoModule", 
						"\A3\soft_f_gamma\Truck_02\data\UI\Map_Truck_02_box_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTrucksTree, 
						"Zamak Fuel", 
						"Creates a FIA Zamak Fuel.", 
						"MAZ_EZM_FIAP_fnc_createZamakFuelModule", 
						"\A3\soft_f_gamma\Truck_02\data\UI\Map_Truck_02_fuel_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTrucksTree, 
						"Zamak Medical", 
						"Creates a FIA Medical Zamak.", 
						"MAZ_EZM_FIAP_fnc_createZamakMedicalModule", 
						"\A3\soft_f_gamma\Truck_02\data\UI\Map_Truck_02_medevac_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTrucksTree, 
						"Zamak Repair", 
						"Creates a FIA Zamak Repair.", 
						"MAZ_EZM_FIAP_fnc_createZamakRepairModule", 
						"\A3\Soft_F_Beta\Truck_02\Data\UI\Map_Truck_02_repair_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTrucksTree, 
						"Zamak Transport", 
						"Creates a FIA Zamak.", 
						"MAZ_EZM_FIAP_fnc_createZamakTransportModule", 
						"\A3\soft_f_beta\Truck_02\data\UI\Map_Truck_02_dump_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTrucksTree, 
						"Zamak Transport (Covered)", 
						"Creates a FIA Zamak (Covered).", 
						"MAZ_EZM_FIAP_fnc_createZamakCoveredTransportModule", 
						"\A3\soft_f_beta\Truck_02\data\UI\Map_Truck_02_dump_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTrucksTree, 
						"Truck", 
						"Creates a FIA Truck.", 
						"MAZ_EZM_FIAP_fnc_createTruckModule", 
						"\A3\soft_f_gamma\van_01\Data\UI\map_van_01_cistern_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTrucksTree, 
						"Turret Truck", 
						"Creates a FIA Turret Truck.", 
						"MAZ_EZM_FIAP_fnc_createTurretTruckModule", 
						"\A3\soft_f_gamma\van_01\Data\UI\map_van_01_cistern_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTrucksTree, 
						"Fuel Truck", 
						"Creates a FIA Fuel Truck.", 
						"MAZ_EZM_FIAP_fnc_createFuelTruckModule", 
						"\A3\soft_f_gamma\van_01\Data\UI\map_van_01_cistern_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTrucksTree, 
						"Supply Truck", 
						"Creates a FIA Supply Truck.", 
						"MAZ_EZM_FIAP_fnc_createSupplyTruckModule", 
						"\A3\soft_f_gamma\van_01\Data\UI\map_van_01_cistern_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
				
				comment "Turrets"; 
				
					MAZ_FIAPTurretTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"Turrets", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTurretTree, 
						"M2 HMG", 
						"Creates a FIA M2 HMG", 
						"MAZ_EZM_FIAP_fnc_createM2HMGModule", 
						"\a3\static_f\hmg_02\data\ui\icon_hmg_02_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTurretTree, 
						"M2 HMG (Raised)", 
						"Creates a FIA M2 HMG (Raised)", 
						"MAZ_EZM_FIAP_fnc_createM2HMGRaisedModule", 
						"a3\static_f_oldman\hmg_02\data\ui\icon_hmg_02_ca.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTurretTree, 
						"Mk6 Mortar", 
						"Creates a FIA Mk6 Mortar", 
						"MAZ_EZM_FIAP_fnc_createMk6MortarModule", 
						"\A3\Static_f\Mortar_01\data\UI\map_Mortar_01_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPTurretTree, 
						"Static AA Launcher", 
						"Creates a Static AA Launcher", 
						"MAZ_EZM_FIAP_fnc_createAALauncherModule", 
						"\A3\Static_F_Gamma\data\UI\map_StaticTurret_AA_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
				comment "Vans"; 
				
					MAZ_FIAPVansTree = [ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						"Vans", 
						"" 
					] call MAZ_EZM_fnc_zeusAddSubCategory; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPVansTree, 
						"Van", 
						"Creates a FIA Van.", 
						"MAZ_EZM_FIAP_fnc_createVanModule", 
						"\a3\Soft_F_Orange\Van_02\Data\UI\Map_Van_02_vehicle_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPVansTree, 
						"Transport Van", 
						"Creates a FIA Transport Van.", 
						"MAZ_EZM_FIAP_fnc_createVanTransportModule", 
						"\a3\Soft_F_Orange\Van_02\Data\UI\Map_Van_02_vehicle_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR; 
					
					[ 
						MAZ_UnitsTree_OPFOR, 
						MAZ_FIAPTree, 
						MAZ_FIAPVansTree, 
						"Medical Van", 
						"Creates a FIA Medical Van.", 
						"MAZ_EZM_FIAP_fnc_createMedicalVanModule", 
						"\a3\Soft_F_Orange\Van_02\Data\UI\Map_Van_02_medevac_CA.paa" 
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

			comment "CTRG+";

				MAZ_CTRGPTree = 0;
				MAZ_UnitsTree_BLUFOR tvSetText [[MAZ_CTRGPTree],"CTRG+"];
				MAZ_UnitsTree_BLUFOR tvSetPictureRight [[MAZ_CTRGPTree], "\A3\Data_F_exp\Flags\flag_CTRG_CO.paa"];
				MAZ_UnitsTree_BLUFOR tvSetTooltip [[MAZ_CTRGPTree], "A remastered version of the CTRG faction."];

				comment "Men";
					
					MAZ_CTRGPMenTree = [
						MAZ_UnitsTree_BLUFOR,
						MAZ_CTRGPTree,
						"Men (Arid)",
						""
					] call MAZ_EZM_fnc_zeusAddSubCategory;

					[
						MAZ_UnitsTree_BLUFOR,
						MAZ_CTRGPTree,
						MAZ_CTRGPMenTree,
						"Autorifleman",
						"Creates a CTRG Autorifleman.",
						"MAZ_EZM_CTRGP_fnc_createAutoriflemanModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_BLUFOR;

					[
						MAZ_UnitsTree_BLUFOR,
						MAZ_CTRGPTree,
						MAZ_CTRGPMenTree,
						"Grenadier",
						"Creates a CTRG Grenadier.",
						"MAZ_EZM_CTRGP_fnc_createGrenadierModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_BLUFOR;

					[
						MAZ_UnitsTree_BLUFOR,
						MAZ_CTRGPTree,
						MAZ_CTRGPMenTree,
						"Marksman",
						"Creates a CTRG Marksman.",
						"MAZ_EZM_CTRGP_fnc_createMarksmanModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_BLUFOR;

					[
						MAZ_UnitsTree_BLUFOR,
						MAZ_CTRGPTree,
						MAZ_CTRGPMenTree,
						"Rifleman",
						"Creates a CTRG Rifleman.",
						"MAZ_EZM_CTRGP_fnc_createRiflemanModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_BLUFOR;

					[
						MAZ_UnitsTree_BLUFOR,
						MAZ_CTRGPTree,
						MAZ_CTRGPMenTree,
						"Rifleman (AT)",
						"Creates a CTRG Rifleman AT.",
						"MAZ_EZM_CTRGP_fnc_createRiflemanATModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_BLUFOR;

					[
						MAZ_UnitsTree_BLUFOR,
						MAZ_CTRGPTree,
						MAZ_CTRGPMenTree,
						"Rifleman (Light AT)",
						"Creates a CTRG Rifleman Light AT.",
						"MAZ_EZM_CTRGP_fnc_createRiflemanLATModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_BLUFOR;

				MAZ_UnitsTree_BLUFOR tvSort [[MAZ_CTRGPTree]];
				
			comment "CSAT (Africa) Modules";

				MAZ_AFRTree = [
					MAZ_UnitsTree_OPFOR,
					"CSAT (Africa)",
					""
				] call MAZ_EZM_fnc_zeusAddCategory;				
			
				comment "Anti-Air";
				comment "APCs";
				comment "Artillery";

					MAZ_AFRArtilleryTree = [
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						"Artillery",
						""
					] call MAZ_EZM_fnc_zeusAddSubCategory;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRArtilleryTree,
						"Zamak MRL",
						"Creates a African CSAT MRL Zamak.",
						"MAZ_EZM_AFR_fnc_createZamakMRLModule",
						"\A3\Soft_F_Gamma\Truck_02\Data\UI\Map_Truck_02_MRL_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;
				comment "Boats";
					MAZ_AFRBoatsTree = [
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						"Boat",
						""
					] call MAZ_EZM_fnc_zeusAddSubCategory;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRBoatsTree,
						"Assault Boat",
						"Creates a African CSAT Assault Boat.",
						"MAZ_EZM_AFR_fnc_createDinghyModule",
						"\A3\boat_F\Boat_Transport_01\data\UI\map_Boat_Transport_01_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

				comment "Cars";

					MAZ_AFRCarsTree = [
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						"Cars",
						""
					] call MAZ_EZM_fnc_zeusAddSubCategory;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRCarsTree,
						"Ifrit",
						"Creates a African CSAT Ifrit.",
						"MAZ_EZM_AFR_fnc_createIfritModule",
						"\A3\soft_f\MRAP_02\Data\UI\map_MRAP_02_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRCarsTree,
						"Ifrit HMG",
						"Creates a African CSAT Ifrit HMG.",
						"MAZ_EZM_AFR_fnc_createIfritHMGModule",
						"\A3\soft_f\MRAP_02\Data\UI\map_MRAP_02_HMG_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRCarsTree,
						"Qilin (AT)",
						"Creates a African CSAT AT Qilin.",
						"MAZ_EZM_AFR_fnc_createQilinATModule",
						"\A3\Soft_F_Exp\LSV_02\Data\UI\map_LSV_02_base_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRCarsTree,
						"Qilin (Minigun)",
						"Creates a African CSAT Minigun Qilin.",
						"MAZ_EZM_AFR_fnc_createQilinMinigunModule",
						"\A3\Soft_F_Exp\LSV_02\Data\UI\map_LSV_02_base_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRCarsTree,
						"Qilin",
						"Creates a African CSAT Qilin.",
						"MAZ_EZM_AFR_fnc_createQilinModule",
						"\A3\Soft_F_Exp\LSV_02\Data\UI\map_LSV_02_base_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRCarsTree,
						"Quad Bike",
						"Creates a African CSAT quad bike.",
						"MAZ_EZM_AFR_fnc_createQuadModule",
						"\A3\Soft_F\Quadbike_01\Data\UI\map_Quad_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRCarsTree,
						"Zamak (Ammo)",
						"Creates a African CSAT ammo Zamak.",
						"MAZ_EZM_AFR_fnc_createZamakAmmoModule",
						"\A3\soft_f_gamma\Truck_02\data\UI\Map_Truck_02_box_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRCarsTree,
						"Zamak (Fuel)",
						"Creates a African CSAT fuel Zamak.",
						"MAZ_EZM_AFR_fnc_createZamakFuelModule",
						"\A3\soft_f_gamma\Truck_02\data\UI\Map_Truck_02_fuel_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRCarsTree,
						"Zamak (Medical)",
						"Creates a African CSAT medical Zamak.",
						"MAZ_EZM_AFR_fnc_createZamakMedicalModule",
						"\A3\soft_f_gamma\Truck_02\data\UI\Map_Truck_02_medevac_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRCarsTree,
						"Zamak (Repair)",
						"Creates a African CSAT repair Zamak.",
						"MAZ_EZM_AFR_fnc_createZamakRepairModule",
						"\A3\Soft_F_Beta\Truck_02\Data\UI\Map_Truck_02_repair_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRCarsTree,
						"Zamak Transport",
						"Creates a African CSAT transport Zamak.",
						"MAZ_EZM_AFR_fnc_createZamakTransportModule",
						"\A3\soft_f_beta\Truck_02\data\UI\Map_Truck_02_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;					

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRCarsTree,
						"Zamak Transport (Covered)",
						"Creates a African CSAT covered transport Zamak.",
						"MAZ_EZM_AFR_fnc_createZamakTransportCoveredModule",
						"\A3\soft_f_beta\Truck_02\data\UI\Map_Truck_02_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;



				comment "Helicopters";

					MAZ_AFRHelicoptersTree = [
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						"Helicopters",
						""
					] call MAZ_EZM_fnc_zeusAddSubCategory;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRHelicoptersTree,
						"Mi-290 Taru",
						"Creates a African CSAT Taru.",
						"MAZ_EZM_AFR_fnc_createTaruModule",
						"\A3\Air_F_Heli\Heli_Transport_04\Data\UI\Map_Heli_Transport_04_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRHelicoptersTree,
						"Mi-290 Taru (Ammo)",
						"Creates a African CSAT ammo Taru.",
						"MAZ_EZM_AFR_fnc_createTaruAmmoModule",
						"\A3\Air_F_Heli\Heli_Transport_04\Data\UI\Map_Heli_Transport_04_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;	

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRHelicoptersTree,
						"Mi-290 Taru (Bench)",
						"Creates a African CSAT bench Taru.",
						"MAZ_EZM_AFR_fnc_createTaruBenchModule",
						"\A3\Air_F_Heli\Heli_Transport_04\Data\UI\Map_Heli_Transport_04_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;	

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRHelicoptersTree,
						"Mi-290 Taru (Cargo)",
						"Creates a African CSAT cargo Taru.",
						"MAZ_EZM_AFR_fnc_createTaruCargoModule",
						"\A3\Air_F_Heli\Heli_Transport_04\Data\UI\Map_Heli_Transport_04_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRHelicoptersTree,
						"Mi-290 Taru (Fuel)",
						"Creates a African CSAT fuel Taru.",
						"MAZ_EZM_AFR_fnc_createTaruFuelModule",
						"\A3\Air_F_Heli\Heli_Transport_04\Data\UI\Map_Heli_Transport_04_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;	

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRHelicoptersTree,
						"Mi-290 Taru (Medical)",
						"Creates a African CSAT medical Taru.",
						"MAZ_EZM_AFR_fnc_createTaruMedicalModule",
						"\A3\Air_F_Heli\Heli_Transport_04\Data\UI\Map_Heli_Transport_04_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;	

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRHelicoptersTree,
						"Mi-290 Taru (Repair)",
						"Creates a African CSAT repair Taru.",
						"MAZ_EZM_AFR_fnc_createTaruRepairModule",
						"\A3\Air_F_Heli\Heli_Transport_04\Data\UI\Map_Heli_Transport_04_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;	

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRHelicoptersTree,
						"Mi-290 Taru (Transport)",
						"Creates a African CSAT transport Taru.",
						"MAZ_EZM_AFR_fnc_createTaruTransportModule",
						"\A3\Air_F_Heli\Heli_Transport_04\Data\UI\Map_Heli_Transport_04_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;	

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRHelicoptersTree,
						"Po-30 Orca",
						"Creates a African CSAT Orca.",
						"MAZ_EZM_AFR_fnc_createOrcaModule",
						"\A3\Air_F\Heli_Light_02\Data\UI\Map_Heli_Light_02_rockets_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;	

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRHelicoptersTree,
						"Po-30 Orca (Unarmed)",
						"Creates a African CSAT unarmed Orca.",
						"MAZ_EZM_AFR_fnc_createOrcaUnarmedModule",
						"\A3\Air_F\Heli_Light_02\Data\UI\Map_Heli_Light_02_CA.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;	

				comment "Men";

					MAZ_AFRMenTree = [
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						"Men",
						""
					] call MAZ_EZM_fnc_zeusAddSubCategory;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRMenTree,
						"Ammo Bearer",
						"Creates a African CSAT Ammo Bearer.",
						"MAZ_EZM_AFR_fnc_createAmmoBearerModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRMenTree,
						"Autorifleman",
						"Creates a African CSAT Autorifleman.",
						"MAZ_EZM_AFR_fnc_createAutoriflemanModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconManMG_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRMenTree,
						"Crewman",
						"Creates a African CSAT Crewman.",
						"MAZ_EZM_AFR_fnc_createCrewmanModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;
					
					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRMenTree,
						"Grenadier",
						"Creates a African CSAT Grenadier.",
						"MAZ_EZM_AFR_fnc_createGrenadierModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRMenTree,
						"Helicopter Crew",
						"Creates a African CSAT Helicopter Crew.",
						"MAZ_EZM_AFR_fnc_createHeliCrewModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRMenTree,
						"Helicopter Pilot",
						"Creates a African CSAT Helicopter Pilot.",
						"MAZ_EZM_AFR_fnc_createHeliPilotModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRMenTree,
						"Marksman",
						"Creates a African CSAT Marksman.",
						"MAZ_EZM_AFR_fnc_createMarksmanModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRMenTree,
						"Medic",
						"Creates a African CSAT Medic.",
						"MAZ_EZM_AFR_fnc_createMedicModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconManMedic_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRMenTree,
						"Officer",
						"Creates a African CSAT Officer.",
						"MAZ_EZM_AFR_fnc_createOfficerModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconManOfficer_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRMenTree,
						"Rifleman",
						"Creates a African CSAT rifleman.",
						"MAZ_EZM_AFR_fnc_createRiflemanModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRMenTree,
						"Rifleman (AA)",
						"Creates a African CSAT AA Rifleman.",
						"MAZ_EZM_AFR_fnc_createMissleAAModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconManAT_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRMenTree,
						"Rifleman (AT)",
						"Creates a African CSAT AT rifleman.",
						"MAZ_EZM_AFR_fnc_createATRiflemanModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconManAT_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRMenTree,
						"Rifleman (Light AT)",
						"Creates a African CSAT LAT rifleman.",
						"MAZ_EZM_AFR_fnc_createLATRiflemanModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconManAT_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRMenTree,
						"SquadLeader",
						"Creates a African CSAT SquadLeader.",
						"MAZ_EZM_AFR_fnc_createSquadLeaderModule",
						"\A3\ui_f\data\Map\VehicleIcons\iconMan_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;

				comment "Tank";

					MAZ_AFRTanksTree = [
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						"Tanks",
						""
					] call MAZ_EZM_fnc_zeusAddSubCategory;		
					
					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRTanksTree,
						"T-100 Varsuk",
						"Creates a African CSAT T-100 Varsuk.",
						"MAZ_EZM_AFR_fnc_createT100Module",
						"\A3\armor_f_gamma\MBT_02\Data\UI\map_MBT_02_ca.paa"
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;					

				comment "Groups";

					MAZ_AFRGroupsTree = [
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						"Groups",
						""
					] call MAZ_EZM_fnc_zeusAddSubCategory;
					
					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRGroupsTree,
						"Fire Team",
						"Creates a African CSAT fire team",
						"MAZ_EZM_AFR_fnc_createFireTeamModule",
						""
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;		

					[
						MAZ_UnitsTree_OPFOR,
						MAZ_AFRTree,
						MAZ_AFRGroupsTree,
						"Rifle Squad",
						"Creates a African CSAT rifle squad",
						"MAZ_EZM_AFR_fnc_createRifleSquadModule",
						""
					] call MAZ_EZM_fnc_zeusAddModule_OPFOR;		

				MAZ_UnitsTree_OPFOR tvSort [[]];

			comment "End";

				comment "Select respawns if no respawns";
				private _serverMainSide = west;
				private _sideCount = [0,0,0];
				private _max = 0;
				{
					private _side = side (group _x);
					private _index = switch (_side) do {
						case west: {0};
						case east: {1};
						case independent: {2};
						default {0};
					};
					_sideCount set [_index, (_sideCount select _index) + 1];
				}forEach allPlayers;
				{
					if(_x > _max) then {
						_serverMainSide = switch (_forEachIndex) do {
							case 0: {west};
							case 1: {east};
							case 2: {independent};
						};
					};
				}forEach _sideCount;
				if(count (_serverMainSide call BIS_fnc_getRespawnPositions) == 0) then {
					private _respawnIndex = switch (_serverMainSide) do {
						case WEST: {1};
						case EAST: {4};
						case INDEPENDENT: {3};
						case CIVILIAN: {2};
					};
					[((findDisplay 312) displayCtrl 152)] call (missionNamespace getVariable "MAZ_EZM_fnc_emulateModeClick");
					private _mainIndex = 0;
					while {_zeusModulesTree tvText [_mainIndex] != "Respawn" && _mainIndex < (_zeusModulesTree tvCount [])} do {
						_mainIndex = _mainIndex + 1;
					};
					if(_zeusModulesTree tvText [_mainIndex] == "Respawn") then {
						_zeusModulesTree tvExpand [_mainIndex];
						_zeusModulesTree tvSetCurSel [-1];
						_zeusModulesTree tvSetCurSel [_mainIndex];
					};
				};
		};
	};
	[] call _fnc_editInterface;
};

MAZ_EZM_editZeusLogic = {
	private _zeusLogic = objNull;
	private _zeusLogic = getAssignedCuratorLogic player;
	if (isNull _zeusLogic) exitWith {};
	player setVariable ["MAZ_EZM_ZeusLogic",_zeusLogic];

	if(!isNil "MAZ_EZM_zeusRespawnFix") then {
		player removeEventHandler ["Respawn",MAZ_EZM_zeusRespawnFix];
	};
	MAZ_EZM_zeusRespawnFix = player addEventhandler ["Respawn",{
		[] spawn {
			waitUntil {alive player && !isNull (findDisplay 46)};
			private _zeusLogic = player getVariable "MAZ_EZM_ZeusLogic";
			if(isNil "_zeusLogic") exitWith {
				["Error! Zeus Logic not found!","addItemFailed"] call MAZ_EZM_fnc_systemMessage;
			};
			[_zeusLogic] remoteExec ['unassignCurator',2];

			waitUntil{isNull (getAssignedCuratorUnit _zeusLogic)};
			["Curator unassigned."] call MAZ_EZM_fnc_systemMessage;

			["Attempting to assign..."] call MAZ_EZM_fnc_systemMessage;
			while{isNull (getAssignedCuratorUnit _zeusLogic)} do {
				[player,_zeusLogic] remoteExec ['assignCurator',2];
				sleep 0.1;
			};
			["Curator assigned! Press Y to open/close Zeus."] call MAZ_EZM_fnc_systemMessage;
		};
	}];
	[] call MAZ_EZM_fnc_addToInterface;

	if((_zeusLogic getVariable ["MAZ_zeusEH_modulePlaced",-200]) != -200) then {
		_zeusLogic removeEventHandler ['CuratorObjectPlaced',(_zeusLogic getVariable 'MAZ_zeusEH_modulePlaced')];
	};
	_zeusLogic setVariable [
		"MAZ_zeusEH_modulePlaced",
		_zeusLogic addEventHandler [
			'CuratorObjectPlaced',
			MAZ_EZM_fnc_runZeusModule
		]
	];

	_zeusLogic addEventHandler ["CuratorGroupPlaced", {
		params ["_curator", "_group"];
		_group deleteGroupWhenEmpty true;
		[units _group] call MAZ_EZM_fnc_addObjectToInterface;
	}];

	if((_zeusLogic getVariable ["MAZ_zeusEH_objectDblClicked",-200]) != -200) then {
		_zeusLogic removeEventHandler ['CuratorObjectDoubleClicked',(_zeusLogic getVariable 'MAZ_zeusEH_objectDblClicked')];
	};
	_zeusLogic setVariable [
		"MAZ_zeusEH_objectDblClicked",
		_zeusLogic addEventhandler ["CuratorObjectDoubleClicked",{
			params ["_curator", "_entity"];
			if(isPlayer _entity) exitWith {
				[_entity] spawn MAZ_EZM_createPlayerAttributesDialog;
				true
			};
			if((typeOf _entity) isKindOf "CAManBase" && !isPlayer _entity && alive _entity) exitWith {
				[_entity] spawn MAZ_EZM_createManAttributesDialog;
				true
			};
			if((typeOf _entity) isKindOf "LandVehicle" && alive _entity) exitWith {
				[_entity] spawn MAZ_EZM_createLandVehicleAttributesDialog;
				true
			};
			if(((typeOf _entity) isKindOf "Air" || (typeOf _entity) isKindOf "Ship") && alive _entity) exitWith {
				[_entity] spawn MAZ_EZM_createVehicleAttributesDialog;
				true
			};
			false
		}]
	];
	if((_zeusLogic getVariable ["MAZ_zeusEH_groupDblClicked",-200]) != -200) then {
		_zeusLogic removeEventHandler ['CuratorGroupDoubleClicked',(_zeusLogic getVariable 'MAZ_zeusEH_groupDblClicked')];
	};
	_zeusLogic setVariable [
		"MAZ_zeusEH_groupDblClicked",
		_zeusLogic addEventhandler ["CuratorGroupDoubleClicked",{
			params ["_curator", "_group"];
			[_group] spawn MAZ_EZM_createGroupAttributesDialog;
			true
		}]
	];

	if((_zeusLogic getVariable ["MAZ_zeusEH_markerDblClicked",-200]) != -200) then {
		_zeusLogic removeEventHandler ['CuratorMarkerDoubleClicked',(_zeusLogic getVariable 'MAZ_zeusEH_markerDblClicked')];
	};
	_zeusLogic setVariable [
		"MAZ_zeusEH_markerDblClicked",
		_zeusLogic addEventhandler ["CuratorMarkerDoubleClicked",{
			params ["_curator", "_marker"];
			[_marker] spawn MAZ_EZM_createMarkerAttributesDialog;
			true
		}]
	];
	if((_zeusLogic getVariable ["MAZ_zeusEH_markerPlaced",-200]) != -200) then {
		_zeusLogic removeEventHandler ['CuratorMarkerPlaced',(_zeusLogic getVariable 'MAZ_zeusEH_markerPlaced')];
	};
	_zeusLogic setVariable [
		"MAZ_zeusEH_markerPlaced",
		_zeusLogic addEventhandler ["CuratorMarkerPlaced",{
			params ["_curator", "_marker"];
			if(isNil "MAZ_EZM_markerColorDefault") then {
				MAZ_EZM_markerColorDefault = "Default";
			};
			_marker setMarkerColor MAZ_EZM_markerColorDefault;
		}]
	];

	if((_zeusLogic getVariable ["MAZ_zeusEH_waypointPlaced",-200]) != -200) then {
		_zeusLogic removeEventHandler ['CuratorWaypointPlaced',(_zeusLogic getVariable 'MAZ_zeusEH_waypointPlaced')];
	};
	_zeusLogic setVariable [	
		"MAZ_zeusEH_waypointPlaced",	
		_zeusLogic addEventhandler ["CuratorWaypointPlaced",{	
			params ["_curator", "_group", "_waypointID"];	
			private _wp = [_group,_waypointID];	
			private _hovering = curatorMouseOver;	
			if(_hovering isEqualTo [""] || {_group != (group (_hovering # 1))}) then {	
				[] spawn {	
					waitUntil {player getVariable ["EZM_isContextOpen",false]};	
					call ZAM_fnc_closeContextMenu;	
				};	
			} else {	
				deleteWaypoint _wp;	
			};	
			private _pos = [true] call MAZ_EZM_fnc_getScreenPosition;	
			if(surfaceIsWater _pos) then {	
				_pos = AGLtoASL _pos;	
				_wp setWaypointPosition [_pos,-1];	
			};	
		}]	
	];	
	if((_zeusLogic getVariable ["MAZ_zeusEH_curatorObjectPlaced",-200]) != -200) then {	
		_zeusLogic removeEventHandler ['CuratorObjectPlaced',(_zeusLogic getVariable 'MAZ_zeusEH_curatorObjectPlaced')];	
	};	
	_zeusLogic setVariable [	
		"MAZ_zeusEH_curatorObjectPlaced",	
			_zeusLogic addEventHandler ["CuratorObjectPlaced", {	
			params ["_curator", "_entity"];	
			private _tab = RscDisplayCurator_sections select 0;	
			if(_tab == 1) exitWith {comment "IN GROUPS TAB";};	
			if(missionNamespace getVariable ["MAZ_EZM_isInGroupTabVar",false]) exitWith {};	
			private _objPos = getPos _entity;	
			private _newPos = [true] call MAZ_EZM_fnc_getScreenPosition;	
			if(surfaceIsWater _objPos) then {	
				_newPos = AGLtoASL _newPos;	
				_newPos = _newPos vectorAdd [0,0,0.2];	
				_entity setPosASL _newPos;	
			} else {	
				if(_entity isKindOf "AllVehicles") then {	
					_entity setPosATL _newPos;	
				};	
			};	
		}]	
	];	
};

MAZ_EZM_addZeusKeybinds_312 = {
	waitUntil{!isNull(findDisplay 312)};

	if(!isNil "MAZ_EZM_closeZeusInterface") then {
		(findDisplay 312) displayRemoveEventHandler ["KeyDown",MAZ_EZM_closeZeusInterface];
	};
	if(!isNil "MAZ_EZM_changeCuratorSideEH") then {
		(findDisplay 312) displayRemoveEventHandler ["KeyDown",MAZ_EZM_changeCuratorSideEH];
	};

	if(!isNil "MAZ_EZM_remoteControlShortcutUpEH") then {
		(findDisplay 312) displayRemoveEventHandler ["MouseButtonUp",MAZ_EZM_remoteControlShortcutUpEH];
	};
	if(!isNil "MAZ_EZM_remoteControlShortcutDownEH") then {
		(findDisplay 312) displayRemoveEventHandler ["MouseButtonDown",MAZ_EZM_remoteControlShortcutDownEH];
	};
	
	if(!isNil "MAZ_EZM_mapClickDownEH") then {
		((findDisplay 312) displayCtrl 50) ctrlRemoveEventHandler ["MouseButtonDown",MAZ_EZM_mapClickDownEH];
	};
	if(!isNil "MAZ_EZM_mapClickUpEH") then {
		((findDisplay 312) displayCtrl 50) ctrlRemoveEventHandler ["MouseButtonUp",MAZ_EZM_mapClickUpEH];
	};
	if(!isNil "MAZ_EZM_mapMovingEH") then {
		((findDisplay 312) displayCtrl 50) ctrlRemoveEventHandler ["MouseMoving",MAZ_EZM_mapMovingEH];
	};
	if(!isNil "MAZ_EZM_deleteMarkerMapEH") then {
		(findDisplay 312) displayRemoveEventHandler ["KeyDown",MAZ_EZM_deleteMarkerMapEH];
	};
	if(!isNil "MAZ_EZM_mapDoubleClickEH") then {
		((findDisplay 312) displayCtrl 50) ctrlRemoveEventHandler ["MouseButtonDblClick",MAZ_EZM_mapDoubleClickEH];
	};

	if(!isNil "MAZ_EZM_rightClickContextMenuUpEH") then {
		(findDisplay 312) displayRemoveEventHandler ["MouseButtonUp",MAZ_EZM_rightClickContextMenuUpEH];
	};
	if(!isNil "MAZ_EZM_rightClickContextMenuDownEH") then {
		(findDisplay 312) displayRemoveEventHandler ["MouseButtonDown",MAZ_EZM_rightClickContextMenuDownEH];
	};

	if(!isNil "MAZ_EZM_deployFlaresOnAircraft") then {
		(findDisplay 312) displayRemoveEventHandler ["KeyDown",MAZ_EZM_deployFlaresOnAircraft];
	};
	
	if(!isNil "MAZ_EZM_editorTabActions") then {	
		(findDisplay 312) displayRemoveEventHandler ["KeyDown",MAZ_EZM_editorTabActions];	
	};

	MAZ_EZM_closeZeusInterface = (findDisplay 312) displayAddEventHandler ["KeyDown", {
		params ["_displayOrControl", "_key", "_shift", "_ctrl", "_alt"];
		if(_key == 21 && _ctrl) then {
			(findDisplay 312) closeDisplay 0;
			["Zeus interface closed."] call MAZ_EZM_fnc_systemMessage;
		};
	}];
	MAZ_EZM_changeCuratorSideEH = (findDisplay 312) displayAddEventHandler ["KeyDown", {
		params ["_displayOrControl", "_key", "_shift", "_ctrl", "_alt"];
		if(_key == 22 && _ctrl) then {
			[] spawn JAM_GUIfnc_groupMenuTeamSwitcher;
		};
	}];

	MAZ_EZM_remoteControlShortcutDownEH = (findDisplay 312) displayAddEventHandler ["MouseButtonDown",{
		params ["_displayOrControl", "_button", "_xPos", "_yPos", "_shift", "_ctrl", "_alt"];
		if(_button == 0 && _alt) then {
			if(isNil "MAZ_EZM_mousePressTime") then {
				MAZ_EZM_mousePressTime = time;
			};
		};
	}];
	MAZ_EZM_remoteControlShortcutUpEH = (findDisplay 312) displayAddEventHandler ["MouseButtonUp", {
		params ["_displayOrControl", "_button", "_xPos", "_yPos", "_shift", "_ctrl", "_alt"];
		
		if(_button == 0 && _alt) then {
			private _buttonHoldTime = time - MAZ_EZM_mousePressTime;
			MAZ_EZM_mousePressTime = nil;
			if(_buttonHoldTime < 0.1) then {
				private _logic = createVehicle ["Land_HelipadEmpty_F",[0,0,0],[],0,"CAN_COLLIDE"];
				[_logic,_targetObj,true] spawn MAZ_EZM_BIS_fnc_remoteControlUnit;
			};
		};
	}];

	MAZ_EZM_mapClickDownEH = ((findDisplay 312) displayCtrl 50) ctrlAddEventHandler ["MouseButtonDown",{
		params ["_displayOrControl", "_button", "_xPos", "_yPos", "_shift", "_ctrl", "_alt"];
		if(_button != 0) exitWith {};
		if((curatorMouseOver isEqualTo []) or (curatorMouseOver isEqualTo [''])) then {
			private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
			if(({(markerPos _x) distance2D _pos < 75} count allMapMarkers) != 0) then {
				private _closest = nil;
				{
					if(isNil "_closest" && ((markerPos _x) distance2D _pos < 75)) then {
						_closest = _x;
					};
					if(!isNil "_closest" && markerPos _x distance2D _pos < markerPos _closest distance2D _pos) then {
						_closest = _x;
					};
				}forEach allMapMarkers;
				if(!isNil "_closest") then {
					if((markerShape _closest == "ELLIPSE") || (markerShape _closest == "RECTANGLE")) then {
						_displayOrControl setVariable ["EZM_isMovingMarker",true];
						_displayOrControl setVariable ["EZM_movingMarker",_closest];
					};
				};
			};
		};
	}];
	MAZ_EZM_mapClickUpEH = ((findDisplay 312) displayCtrl 50) ctrlAddEventHandler ["MouseButtonUp",{
		params ["_displayOrControl", "_button", "_xPos", "_yPos", "_shift", "_ctrl", "_alt"];
		if(_button != 0) exitWith {};
		if(_displayOrControl getVariable ["EZM_isMovingMarker",false]) then {
			private _marker = _displayOrControl getVariable "EZM_movingMarker";
			if(!isNil "_marker") then {
				_marker setMarkerPos (getMarkerPos _marker);
			};
			_displayOrControl setVariable ["EZM_isMovingMarker",false];
			_displayOrControl setVariable ["EZM_movingMarker",nil];
		};
	}];
	MAZ_EZM_mapMovingEH = ((findDisplay 312) displayCtrl 50) ctrlAddEventHandler ["MouseMoving",{
		params ["_control", "_xPos", "_yPos", "_mouseOver"];
		if(_control getVariable ["EZM_isMovingMarker",false]) then {
			private _marker = _control getVariable "EZM_movingMarker";
			if(!isNil "_marker") then {
				_marker setMarkerPosLocal (_control ctrlMapScreenToWorld getMousePosition);
			};
		};
	}];
	MAZ_EZM_deleteMarkerMapEH = (findDisplay 312) displayAddEventHandler ["KeyDown",{
		params ["_displayOrControl", "_key", "_shift", "_ctrl", "_alt"];
		if(!visibleMap) exitWith {};
		if(_key != 211) exitWith {};
		if((curatorMouseOver isEqualTo []) or (curatorMouseOver isEqualTo [''])) then {
			private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
			if(({(markerPos _x) distance2D _pos < 100} count allMapMarkers) != 0) then {
				private _closest = nil;
				{
					if(isNil "_closest" && ((markerPos _x) distance2D _pos < 100)) then {
						_closest = _x;
					};
					if(!isNil "_closest" && markerPos _x distance2D _pos < markerPos _closest distance2D _pos) then {
						_closest = _x;
					};
				}forEach allMapMarkers;
				if(!isNil "_closest") then {
					if((markerShape _closest == "ELLIPSE") || (markerShape _closest == "RECTANGLE")) then {
						deleteMarker _closest;
					};
				};
			};
		};
	}];
	MAZ_EZM_mapDoubleClickEH = ((findDisplay 312) displayCtrl 50) ctrlAddEventHandler ["MouseButtonDblClick",{
		params ["_control", "_button", "_xPos", "_yPos", "_shift", "_ctrl", "_alt"];
		private _pos = [] call MAZ_EZM_fnc_getScreenPosition;
		if ((curatorMouseOver isEqualTo []) or (curatorMouseOver isEqualTo [''])) then {
			if(({(markerPos _x) distance2D _pos < 100} count allMapMarkers) != 0) then {
				private _closest = nil;
				{
					if(isNil "_closest" && ((markerPos _x) distance2D _pos < 100)) then {
						_closest = _x;
					};
					if(!isNil "_closest" && markerPos _x distance2D _pos < markerPos _closest distance2D _pos) then {
						_closest = _x;
					};
				}forEach allMapMarkers;
				if(!isNil "_closest") then {
					if((markerShape _closest == "ELLIPSE") || (markerShape _closest == "RECTANGLE")) then {
						[_closest] spawn MAZ_EZM_fnc_createEditAreaMarkerDialog;
					} else {
						[_closest] spawn MAZ_EZM_createMarkerAttributesDialog;
					};
				};
			};
		};
	}];

	MAZ_EZM_rightClickContextMenuDownEH = (findDisplay 312) displayAddEventHandler ["MouseButtonDown",{
		params ["_displayOrControl", "_button", "_xPos", "_yPos", "_shift", "_ctrl", "_alt"];
		if(_button == 1 && (!_ctrl && !_shift && !_alt)) then {
			
				MAZ_EZM_mousePressTimeContext = time;
			
			comment "detect mouse movement (panning camera)";
			
				JAM_EZM_mouseMovementContext = getMousePosition;
			
		};
	}];
	MAZ_EZM_rightClickContextMenuUpEH = (findDisplay 312) displayAddEventHandler ["MouseButtonUp", {
		params ["_displayOrControl", "_button", "_xPos", "_yPos", "_shift", "_ctrl", "_alt"];
		
		if(_button == 1 && (!_ctrl && !_shift && !_alt)) then {
			if (isNil 'MAZ_EZM_mousePressTimeContext') then {MAZ_EZM_mousePressTimeContext = time;};
			private _buttonHoldTime = time - MAZ_EZM_mousePressTimeContext;
			MAZ_EZM_mousePressTimeContext = nil;
			if (_buttonHoldTime < 0.2) then {
			
				comment "Tweak amount of tolerance (for camera panning):";
				
				comment "systemchat 'holdtime good';";
				
				_wiggleRoom = 0.01;
			
				_mousePosLast = missionNamespace getvariable ['JAM_EZM_mouseMovementContext', getMousePosition];
				_mousePosCurrent = getMousePosition;
				
				_mousePosLast_x = _mousePosLast # 0;
				_mousePosLast_y = _mousePosLast # 1;
				
				_mousePosCurrent_x = _mousePosCurrent # 0;
				_mousePosCurrent_y = _mousePosCurrent # 1;
				
				_difference_x = _mousePosCurrent_x - _mousePosLast_x;
				_difference_y = _mousePosCurrent_y - _mousePosLast_y;
				
				_absoluteDifference_x = if (_difference_x < 0) then {_difference_x * -1} else {_difference_x};
				_absoluteDifference_y = if (_difference_y < 0) then {_difference_y * -1} else {_difference_y};
				
				comment "distance formula: d=√((x2−x1)^2+(y2−y1)^2)";
				
				_distanceTraveled = sqrt (((_difference_x)^2) + ((_difference_y)^2));
				
				comment "crudddd = [_mousePosLast, _mousePosCurrent, _mousePosLast_x, _mousePosLast_y, _mousePosCurrent_x, _mousePosCurrent_y, _difference_x, _difference_y, _absoluteDifference_x, _absoluteDifference_y];
				crudddd2 = [_absoluteDifference_x, _absoluteDifference_y];
				((_absoluteDifference_x <= _wiggleRoom) && (_absoluteDifference_y <= _wiggleRoom))";
				
				comment "crudddd3 = _distanceTraveled;
				systemchat str crudddd3;";
				
				if (_distanceTraveled <= _wiggleRoom) then 
				{
					
					[] call ZAM_fnc_createContextMenu;
				};
			} else {comment "systemchat 'holdtime bad';";};
		} else {
			private _isContextMenuOpenAlready = player getVariable ["EZM_isContextOpen",false];
			if(_isContextMenuOpenAlready) then {
				[] spawn ZAM_fnc_destroyContextMenu;
			};
		};
	}];

	MAZ_EZM_deployFlaresOnAircraft = (findDisplay 312) displayAddEventhandler ["KeyDown",{
		params ["_displayOrControl", "_key", "_shift", "_ctrl", "_alt"];
		if(_key != 46 || (_shift || _ctrl || _alt)) exitWith {};
		if(!(curatorMouseOver isEqualTo []) && !(curatorMouseOver isEqualTo [''])) then {
			private _vehicle = curatorMouseOver select 1;
			if(typeOf _vehicle isKindOf "Air") then {
				private _driverVeh = driver _vehicle;
				if(!isPlayer _driverVeh && alive _driverVeh) then {
					_driverVeh spawn {
						for "_i" from 0 to 3 do {
							_this forceWeaponFire ["CMFlareLauncher", "AIBurst"];
							sleep 0.4;
						};
					};
				};
			};
		};
		private _objectsSelected = curatorSelected select 0;
		{
			if(typeOf _x isKindOf "Air") then {
				private _driverVeh = driver _x;
				if(!isPlayer _driverVeh && alive _driverVeh) then {
					_driverVeh spawn {
						for "_i" from 0 to 3 do {
							_this forceWeaponFire ["CMFlareLauncher", "AIBurst"];
							sleep 0.4;
						};
					};
				};
			};
		}forEach _objectsSelected;
	}];
	
	MAZ_EZM_editorTabActions = (findDisplay 312) displayAddEventHandler ["KeyDown",{	
		params ["_displayOrControl", "_key", "_shift", "_ctrl", "_alt"];	
		if(!(_key in [59,60,61,62,63])) exitWith {};	
		switch (_key) do {	
			case 59: {	
				if(_shift) then {	
					[(findDisplay 312) displayCtrl 155] call MAZ_EZM_fnc_emulateSideClick;	
				} else {	
					[((findDisplay 312) displayCtrl 150)] call MAZ_EZM_fnc_emulateModeClick;	
					MAZ_EZM_isInGroupTabVar = false;	
				};	
			};	
			case 60: {	
				if(_shift) then {	
					[(findDisplay 312) displayCtrl 156] call MAZ_EZM_fnc_emulateSideClick;	
				} else {	
					[((findDisplay 312) displayCtrl 151)] call MAZ_EZM_fnc_emulateModeClick;	
					MAZ_EZM_isInGroupTabVar = true;	
				};	
			};	
			case 61: {	
				if(_shift) then {	
					[(findDisplay 312) displayCtrl 157] call MAZ_EZM_fnc_emulateSideClick;	
				} else {	
					[((findDisplay 312) displayCtrl 152)] call MAZ_EZM_fnc_emulateModeClick;	
					MAZ_EZM_isInGroupTabVar = false;	
				};	
			};	
			case 62: {	
				if(_shift) then {	
					[(findDisplay 312) displayCtrl 158] call MAZ_EZM_fnc_emulateSideClick;	
				} else {	
					[((findDisplay 312) displayCtrl 154)] call MAZ_EZM_fnc_emulateModeClick;	
					MAZ_EZM_isInGroupTabVar = false;	
				};	
			};	
			case 63: {	
				if(_shift) then {	
					[(findDisplay 312) displayCtrl 159] call MAZ_EZM_fnc_emulateSideClick;	
				} else {	
					[((findDisplay 312) displayCtrl 170)] call MAZ_EZM_fnc_emulateModeClick;	
					MAZ_EZM_isInGroupTabVar = false;	
				};	
			};	
		};	
	}];
};

MAZ_EZM_addZeusKeybinds_46 = {
	waitUntil{!isNull(findDisplay 46)};
	if(!isNil "MAZ_EZM_curatorHolster") then {
		(findDisplay 46) displayRemoveEventHandler ["KeyDown",MAZ_EZM_curatorHolster];
	};
	MAZ_EZM_curatorHolster = (findDisplay 46) displayAddEventHandler ["KeyDown", "if(_this select 1 == 35) then {
		player action ['SWITCHWEAPON',player,player,-1];
		waitUntil {currentWeapon player == '' or {primaryWeapon player == '' && handgunWeapon player == ''}};
	}"];
};

JAM_GUIfnc_groupMenuTeamSwitcher = {
	if (!isNull findDisplay 60490) exitWith {};
	with uiNamespace do 
	{
		disableSerialization;
		closeDialog 1;
		createDialog "RscDisplayDynamicGroups";
		showChat true;
		_display = findDisplay 60490;
		if (!isNull _display) then 
		{
			_bcknd1 = _display ctrlCreate ['RscText',-1];
			_bcknd1 ctrlSetPosition [0.345312 * safezoneW + safezoneX,0.093 * safezoneH + safezoneY,0.309375 * safezoneW,0.099 * safezoneH];
			_bcknd1 ctrlSetBackgroundColor [0,0,0,0.5];
			_bcknd1 ctrlCommit 0;
			_bcknd2 = _display ctrlCreate ['RscText',-1];
			_bcknd2 ctrlSetPosition [0.350469 * safezoneW + safezoneX,0.104 * safezoneH + safezoneY,0.299062 * safezoneW,0.077 * safezoneH];
			_bcknd2 ctrlSetBackgroundColor [0,0,0,0.5];
			_bcknd2 ctrlCommit 0;
			_ttile = _display ctrlCreate ["RscStructuredText", -1];
			_ttile ctrlSetPosition [0.360781 * safezoneW + safezoneX,0.104 * safezoneH + safezoneY,0.278437 * safezoneW,0.033 * safezoneH];
			_ttile ctrlSetStructuredText parseText ("<t size='" + (str (0.5 * safeZoneH)) + "' align='center'>CHANGE SIDE:</t>");
			_ttile ctrlSetBackgroundColor [0,0,0,0];
			_ttile ctrlCommit 0;
			_btn_west = _display ctrlCreate ['RscButtonMenu',-1];
			_btn_west ctrlSetPosition [0.360781 * safezoneW + safezoneX,0.137 * safezoneH + safezoneY,0.0515625 * safezoneW,0.033 * safezoneH];
			_btn_west ctrlSetBackgroundColor [0,0,0.5,0.8];
			_btn_west ctrlSetStructuredText parseText ("<t size='" + (str (0.5 * safeZoneH)) + "' align='center'>BLUFOR</t>");
			_btn_west ctrladdEventHandler ["ButtonClick", 
			{
				_side = west;
				_groupName = "Stryker 1-4";
				_groups = ["GetAllGroupsOfSide", [_side]] call BIS_fnc_dynamicGroups;
				EZM_curator_group = createGroup _side;
				EZM_curator_group deleteGroupWhenEmpty true;
				[player] join EZM_curator_group;
				EZM_curator_group selectLeader player;
				[EZM_curator_group, player] remoteExec ["selectLeader", groupOwner EZM_curator_group];					
				EZM_curator_group setGroupIdGlobal [_groupName];
				private _group = EZM_curator_group;
				private _leader = leader _group;
				private _data = [nil, _groupName, false]; comment " [<Insignia>, <Group Name>, <Private>] ";
				["RegisterGroup", [_group, _leader, _data]] remoteExecCall ['BIS_fnc_dynamicGroups'];
				["AddGroupMember", [EZM_curator_group,player]] remoteExecCall ['BIS_fnc_dynamicGroups'];
				["SwitchLeader", [EZM_curator_group,player]] remoteExecCall ['BIS_fnc_dynamicGroups'];
				["SetPrivateState", [EZM_curator_group,true]] remoteExecCall ['BIS_fnc_dynamicGroups'];	
				["SetName", [EZM_curator_group,_groupName]] remoteExecCall ['BIS_fnc_dynamicGroups'];
			}];
			_btn_west ctrlCommit 0;
			_btn_east = _display ctrlCreate ['RscButtonMenu',-1];
			_btn_east ctrlSetPosition [0.4175 * safezoneW + safezoneX,0.137 * safezoneH + safezoneY,0.0515625 * safezoneW,0.033 * safezoneH];
			_btn_east ctrlSetBackgroundColor [0.5,0,0,0.8];
			_btn_east ctrlSetStructuredText parseText ("<t size='" + (str (0.5 * safeZoneH)) + "' align='center'>OPFOR</t>");
			_btn_east ctrladdEventHandler ["ButtonClick", 
			{
				_side = east;
				_groupName = "Stryker 1-4";
				_groups = ["GetAllGroupsOfSide", [_side]] call BIS_fnc_dynamicGroups;
				EZM_curator_group = createGroup _side;
				EZM_curator_group deleteGroupWhenEmpty true;
				[player] join EZM_curator_group;
				EZM_curator_group selectLeader player;
				[EZM_curator_group, player] remoteExec ["selectLeader", groupOwner EZM_curator_group];					
				EZM_curator_group setGroupIdGlobal [_groupName];
				private _group = EZM_curator_group;
				private _leader = leader _group;
				private _data = [nil, _groupName, false]; comment " [<Insignia>, <Group Name>, <Private>] ";
				["RegisterGroup", [_group, _leader, _data]] remoteExecCall ['BIS_fnc_dynamicGroups'];
				["AddGroupMember", [EZM_curator_group,player]] remoteExecCall ['BIS_fnc_dynamicGroups'];
				["SwitchLeader", [EZM_curator_group,player]] remoteExecCall ['BIS_fnc_dynamicGroups'];
				["SetPrivateState", [EZM_curator_group,true]] remoteExecCall ['BIS_fnc_dynamicGroups'];	
				["SetName", [EZM_curator_group,_groupName]] remoteExecCall ['BIS_fnc_dynamicGroups'];
			}];
			_btn_east ctrlCommit 0;
			_btn_indep = _display ctrlCreate ['RscButtonMenu',-1];
			_btn_indep ctrlSetPosition [0.474219 * safezoneW + safezoneX,0.137 * safezoneH + safezoneY,0.0515625 * safezoneW,0.033 * safezoneH];
			_btn_indep ctrlSetBackgroundColor [0,0.5,0,0.8];
			_btn_indep ctrlSetStructuredText parseText ("<t size='" + (str (0.5 * safeZoneH)) + "' align='center'>INDEP</t>");
			_btn_indep ctrladdEventHandler ["ButtonClick", 
			{
				_side = independent;
				_groupName = "Stryker 1-4";
				_groups = ["GetAllGroupsOfSide",[_side]] call BIS_fnc_dynamicGroups;
				EZM_curator_group = createGroup _side;
				EZM_curator_group deleteGroupWhenEmpty true;
				[player] join EZM_curator_group;
				EZM_curator_group selectLeader player;
				[EZM_curator_group, player] remoteExec ["selectLeader", groupOwner EZM_curator_group];					
				EZM_curator_group setGroupIdGlobal [_groupName];
				private _group = EZM_curator_group;
				private _leader = leader _group;
				private _data = [nil, _groupName, false]; comment " [<Insignia>, <Group Name>, <Private>] ";
				["RegisterGroup", [_group, _leader, _data]] remoteExecCall ['BIS_fnc_dynamicGroups'];
				["AddGroupMember", [EZM_curator_group,player]] remoteExecCall ['BIS_fnc_dynamicGroups'];
				["SwitchLeader", [EZM_curator_group,player]] remoteExecCall ['BIS_fnc_dynamicGroups'];
				["SetPrivateState", [EZM_curator_group,true]] remoteExecCall ['BIS_fnc_dynamicGroups'];	
				["SetName", [EZM_curator_group,_groupName]] remoteExecCall ['BIS_fnc_dynamicGroups'];
			}];
			_btn_indep ctrlCommit 0;
			_btn_civ = _display ctrlCreate ['RscButtonMenu',-1];
			_btn_civ ctrlSetPosition [0.530937 * safezoneW + safezoneX,0.137 * safezoneH + safezoneY,0.0515625 * safezoneW,0.033 * safezoneH];
			_btn_civ ctrlSetBackgroundColor [0.4,0,0.4,0.8];
			_btn_civ ctrlSetStructuredText parseText ("<t size='" + (str (0.5 * safeZoneH)) + "' align='center'>CIV</t>");
			_btn_civ ctrladdEventHandler ["ButtonClick", 
			{
				_side = civilian;
				_groupName = "Stryker 1-4";
				_groups = ["GetAllGroupsOfSide",[_side]] call BIS_fnc_dynamicGroups;
				EZM_curator_group = createGroup _side;
				EZM_curator_group deleteGroupWhenEmpty true;
				[player] join EZM_curator_group;
				EZM_curator_group selectLeader player;
				[EZM_curator_group, player] remoteExec ["selectLeader", groupOwner EZM_curator_group];					
				EZM_curator_group setGroupIdGlobal [_groupName];
				private _group = EZM_curator_group;
				private _leader = leader _group;
				private _data = [nil, _groupName, false]; comment " [<Insignia>, <Group Name>, <Private>] ";
				["RegisterGroup", [_group, _leader, _data]] remoteExecCall ['BIS_fnc_dynamicGroups'];
				["AddGroupMember", [EZM_curator_group,player]] remoteExecCall ['BIS_fnc_dynamicGroups'];
				["SwitchLeader", [EZM_curator_group,player]] remoteExecCall ['BIS_fnc_dynamicGroups'];
				["SetPrivateState", [EZM_curator_group,true]] remoteExecCall ['BIS_fnc_dynamicGroups'];	
				["SetName", [EZM_curator_group,_groupName]] remoteExecCall ['BIS_fnc_dynamicGroups'];
			}];
			_btn_civ ctrlCommit 0;
			_btn_zeus = _display ctrlCreate ['RscButtonMenu',-1];
			_btn_zeus ctrlSetPosition [0.587656 * safezoneW + safezoneX,0.137 * safezoneH + safezoneY,0.0515625 * safezoneW,0.033 * safezoneH];
			_btn_zeus ctrlSetBackgroundColor [0.4,0.4,0.4,0.8];
			_btn_zeus ctrlSetStructuredText parseText ("<t size='" + (str (0.5 * safeZoneH)) + "' align='center'>ZEUS</t>");
			_btn_zeus ctrladdEventHandler ["ButtonClick", 
			{
				_side = sideLogic;
				_groupName = "Stryker 1-4";
				_groups = ["GetAllGroupsOfSide",[_side]] call BIS_fnc_dynamicGroups;
				EZM_curator_group = createGroup _side;
				EZM_curator_group deleteGroupWhenEmpty true;
				[player] join EZM_curator_group;
				EZM_curator_group selectLeader player;
				[EZM_curator_group, player] remoteExec ["selectLeader", groupOwner EZM_curator_group];					
				EZM_curator_group setGroupIdGlobal [_groupName];
				private _group = EZM_curator_group;
				private _leader = leader _group;
				private _data = [nil, _groupName, false]; comment " [<Insignia>, <Group Name>, <Private>] ";
				["RegisterGroup", [_group, _leader, _data]] remoteExecCall ['BIS_fnc_dynamicGroups'];
				["AddGroupMember", [EZM_curator_group,player]] remoteExecCall ['BIS_fnc_dynamicGroups'];
				["SwitchLeader", [EZM_curator_group,player]] remoteExecCall ['BIS_fnc_dynamicGroups'];
				["SetPrivateState", [EZM_curator_group,true]] remoteExecCall ['BIS_fnc_dynamicGroups'];	
				["SetName", [EZM_curator_group,_groupName]] remoteExecCall ['BIS_fnc_dynamicGroups'];
			}];
			_btn_zeus ctrlCommit 0;
		};
	};
};

MAZ_EZM_fnc_initMainLoop = {
	MAZ_EZM_mainLoop_Active = true;
	["AEGIS Initialized!","beep_target"] call MAZ_EZM_fnc_systemMessage;
	
	while {MAZ_EZM_mainLoop_Active} do {
		if (M9SD_serverEZM) then {
			[] spawn{
				while {(isNull (findDisplay 312))} do {
					JAM_zeus_prevAnim = animationState player;
					uiSleep 0.01;
				};
			};
		};
	
		waitUntil {uiSleep 0.01; (!isNull (findDisplay 312))};
		
		if (false) then {
			if ((vehicle player == player) && (!(missionNamespace getvariable ['AR_active', false]))) then {
				private _fnc = {
					private _animBlacklist = [
						"pronebipod_centerleft",
						"pronebipod_centerright",


						"bipod_90_centerleft",
						"bipod_90_centerright",


						"bipod_150_centerleft",
						"bipod_150_centerright"
					];
					
					if (JAM_zeus_prevAnim in _animBlacklist) then {
						[PLAYER, ''] remoteExec ['switchMove'];
					} else {
						[PLAYER, JAM_zeus_prevAnim] remoteExec ['switchMove'];
					};
				
					if (false) then {
						if (!isNil 'JAM_EH_zeusUnitAnims') then {
							player removeEventHandler ['AnimDone', JAM_EH_zeusUnitAnims];
						};
						
						JAM_EH_zeusUnitAnims = player addEventHandler ["AnimDone", {
							params ["_unit", "_anim"];
							systemChat _anim;
							[PLAYER, JAM_zeus_prevAnim] remoteExec ['switchMove'];
						}];
					};
				};
				if (!isNil 'JAM_zeus_prevAnim') then {
					[] call _fnc;
				} else {
					JAM_zeus_prevAnim = animationState player;
					[] call _fnc;
				};
			};			
		};

		[] spawn MAZ_EZM_editZeusLogic;
		[] spawn MAZ_EZM_addZeusKeybinds_312;
		[] spawn JAM_MAZ_EZM_editZeusInterface;
		playSound "beep_target";
		waitUntil {uiSleep 0.1; (isNull (findDisplay 312))};

		[] spawn MAZ_EZM_addZeusKeybinds_46;
	};
};

if(isNil "MAZ_EZM_modulesAdded") then {	
	{	
		[getAssignedCuratorLogic player,activatedAddons] remoteExec ['addCuratorAddons',2];	
	}forEach allCurators;		
	missionNamespace setVariable ["MAZ_EZM_modulesAdded",true,true];	
};

["Create Zeus Unit?",[
	[
		"TOOLBOX:YESNO",
		["Create Zeus Unit","Whether to create a new controllable unit for your player."],
		[true]
	]
],{
	params ["_values","_args","_display"];
	_values params ["_createZeusUnit"];
	if(_createZeusUnit) then {
		[] spawn MAZ_EZM_createUnitForZeus;
	} else {
		if (isNil "MAZ_EZM_mainLoop_Active") then {
			[] spawn MAZ_EZM_fnc_initMainLoop;
		};
	};
	_zeusName = name player;
	
	_arsenalCode =  (str {
		[] spawn {
			if (isNil "LM_fnc_arsenalOpen") then {
				LM_fnc_arsenalOpen = {
					[missionNamespace, "arsenalClosed", { 
						disableSerialization; 
						deleteVehicle (player getVariable ["_arsenalObj",objNull]);
					}] call BIS_fnc_addScriptedEventHandler;
					
					if (!(isNil "arsenalCleaner")) then {
						_playerSide = side player;
						_restrictionsIndex = 0;
						switch (_playerSide) do
						{
							case west: { _restrictionsIndex = 0 };
							case east: { _restrictionsIndex = 1 };
							case independent: { _restrictionsIndex = 2 };
							case civilian: { _restrictionsIndex = 3 };
						};
						if (!([(arsenalRestrictions select _restrictionsIndex)] in [[[[],[],[],[]]]])) then {
							_arsenalObj = "VirtualReammoBox_camonet_F" createVehicleLocal [0,0,0];
							player setVariable ["_arsenalObj",_arsenalObj];
							[_arsenalObj] call arsenalCleaner;
							['Preload'] call BIS_fnc_arsenal;
							['Open', [false, _arsenalObj, player]] spawn BIS_fnc_arsenal;
						} else {
							['Preload'] call BIS_fnc_arsenal;
							['Open', true] spawn BIS_fnc_arsenal;
						};
					} else {
						['Preload'] call BIS_fnc_arsenal;
						['Open', true] spawn BIS_fnc_arsenal;
					};
				};
			};
		};
	}) splitString "";
	_arsenalCode deleteAt (count _arsenalCode - 1);
	_arsenalCode deleteAt 0;
	missionNamespace setVariable ["LM_fnc_arsenalOpenVariable",_arsenalCode,true];
	
	[[_zeusName],{
		waitUntil {!isNull (findDisplay 46) && alive player};
		if (!(player getVariable ["LM_init", false])) then {
			player setVariable ["LM_init", true];
			LM_trimColor_RGBA = [(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])];
			(findDisplay 46) displayAddEventHandler ["KeyDown", ((missionNamespace getVariable "LM_fnc_arsenalOpenVariable") joinString "")];
			[ 
				format['<img align="center" size="1.25" shadow="1" image="%1" /><br/><t color=' + str([(profileNamespace getVariable ['GUI_BCG_RGB_R', 0.898]),(profileNamespace getVariable ['GUI_BCG_RGB_G', 0.78]),(profileNamespace getVariable ['GUI_BCG_RGB_B', 0.443]),(profileNamespace getVariable ['GUI_BCG_RGB_A', 1])] call BIS_fnc_colorRGBAtoHTML) + ' align="center" size="0.5" font="PuristaBold" shadow="1"> AEGIS: <t color="#FFFFFF">9.2.0</t></t>',"\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa"], 
				safeZoneXAbs+safeZoneWAbs-0.62,
				safeZoneY+safeZoneH-0.19, 
				99999, 
				2, 
				0, 
				3090 
			] spawn bis_fnc_dynamicText;
			
			findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
				_this select 0 drawIcon [
					"\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa",
					[1,1,1,1],
					[(worldSize/2)-(5900/(("Altis" call BIS_fnc_mapSize) / (worldSize))),-(worldSize * 0.15)/2,0],
					(1500 / (6.4 * worldSize / 8192 * ctrlMapScale ((findDisplay 12) displayCtrl 51)))/(("Altis" call BIS_fnc_mapSize) / (worldSize)),
					(1500 / (6.4 * worldSize / 8192 * ctrlMapScale ((findDisplay 12) displayCtrl 51)))/(("Altis" call BIS_fnc_mapSize) / (worldSize)),
					0,
					"",
					1,
					0,
					"",
					"center"
				]
			}];
			
			findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
				_this select 0 drawIcon [
					"\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa",
					LM_trimColor_RGBA,
					[(worldSize / 2)-(2000/(("Altis" call BIS_fnc_mapSize) / (worldSize))),-(worldSize * 0.15)/2,0],
					0,
					0,
					0,
					"AEGIS:",
					1,
					(4.5 / (6.4 * worldSize / 8192 * ctrlMapScale ((findDisplay 12) displayCtrl 51)))/(("Altis" call BIS_fnc_mapSize) / (worldSize)),
					"PuristaBold",
					"center"
				]
			}];

			findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
				_this select 0 drawIcon [
					"\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa",
					[1,1,1,1],
					[(worldSize / 2)+(2000/(("Altis" call BIS_fnc_mapSize) / (worldSize))),-(worldSize * 0.15)/2,0],
					0,
					0,
					0,
					" 9.2.0",
					1,
					(4.5 / (6.4 * worldSize / 8192 * ctrlMapScale ((findDisplay 12) displayCtrl 51)))/(("Altis" call BIS_fnc_mapSize) / (worldSize)),
					"PuristaBold",
					"center"
				]
			}];

			findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
				_this select 0 drawIcon [
					"\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa",
					[1,1,1,1],
					[(worldSize/2)+(5900/(("Altis" call BIS_fnc_mapSize) / (worldSize))),-(worldSize * 0.15)/2,0],
					(1500 / (6.4 * worldSize / 8192 * ctrlMapScale ((findDisplay 12) displayCtrl 51)))/(("Altis" call BIS_fnc_mapSize) / (worldSize)),
					(1500 / (6.4 * worldSize / 8192 * ctrlMapScale ((findDisplay 12) displayCtrl 51)))/(("Altis" call BIS_fnc_mapSize) / (worldSize)),
					0,
					"",
					1,
					0,
					"",
					"center"
				]
			}];

			findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
				_this select 0 drawIcon [
					"\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa",
					LM_trimColor_RGBA,
					[(worldSize / 2),(-(worldSize * 0.15)/2)-(2000/(("Altis" call BIS_fnc_mapSize) / (worldSize))),0],
					0,
					0,
					0,
					"Enhanced Zeus Modules Fork",
					1,
					(1.75 / (6.4 * worldSize / 8192 * ctrlMapScale ((findDisplay 12) displayCtrl 51)))/(("Altis" call BIS_fnc_mapSize) / (worldSize)),
					"PuristaBold",
					"center"
				]
			}];

			findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
				_this select 0 drawIcon [
					"\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa",
					LM_trimColor_RGBA,
					[(worldSize / 2),(-(worldSize * 0.15)/2)-(3650/(("Altis" call BIS_fnc_mapSize) / (worldSize))),0],
					0,
					0,
					0,
					"Expanded By: Lockheed Martin",
					1,
					(1.75 / (6.4 * worldSize / 8192 * ctrlMapScale ((findDisplay 12) displayCtrl 51)))/(("Altis" call BIS_fnc_mapSize) / (worldSize)),
					"PuristaBold",
					"center"
				]
			}];

			findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
				_this select 0 drawIcon [
					"\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa",
					LM_trimColor_RGBA,
					[(worldSize / 2),(-(worldSize * 0.15)/2)-(2850/(("Altis" call BIS_fnc_mapSize) / (worldSize))),0],
					0,
					0,
					0,
					"Adapated By: Expung3d",
					1,
					(1.75 / (6.4 * worldSize / 8192 * ctrlMapScale ((findDisplay 12) displayCtrl 51)))/(("Altis" call BIS_fnc_mapSize) / (worldSize)),
					"PuristaBold",
					"center"
				]
			}];

			findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
				_this select 0 drawLine [
					[(worldSize / 2)-(4550/(("Altis" call BIS_fnc_mapSize) / (worldSize))),(-(worldSize * 0.15)/2)-(4400/(("Altis" call BIS_fnc_mapSize) / (worldSize))),0],
					[(worldSize / 2)+(4550/(("Altis" call BIS_fnc_mapSize) / (worldSize))),(-(worldSize * 0.15)/2)-(4400/(("Altis" call BIS_fnc_mapSize) / (worldSize))),0],
					LM_trimColor_RGBA
				]
			}];

			findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
				_this select 0 drawIcon [
					"\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa",
					[1,1,1,1],
					[(worldSize / 2),(-(worldSize * 0.15)/2)-(4900/(("Altis" call BIS_fnc_mapSize) / (worldSize))),0],
					0,
					0,
					0,
					"Friend Code: 487755911",
					1,
					(1.25 / (6.4 * worldSize / 8192 * ctrlMapScale ((findDisplay 12) displayCtrl 51)))/(("Altis" call BIS_fnc_mapSize) / (worldSize)),
					"PuristaBold",
					"center"
				]
			}];
			
			findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
				_this select 0 drawIcon [
					"\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa",
					LM_trimColor_RGBA,
					[worldSize+(500/(("Altis" call BIS_fnc_mapSize) / (worldSize))),worldSize-(1500/(("Altis" call BIS_fnc_mapSize) / (worldSize))),0],
					0,
					0,
					0,
					"Important Keybindings:",
					1,
					(4.5 / (6.4 * worldSize / 8192 * ctrlMapScale ((findDisplay 12) displayCtrl 51)))/(("Altis" call BIS_fnc_mapSize) / (worldSize)),
					"PuristaBold",
					"right"
				]
			}];
			
			findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
				_this select 0 drawLine [
					[worldSize+(500/(("Altis" call BIS_fnc_mapSize) / (worldSize))),worldSize-(2500/(("Altis" call BIS_fnc_mapSize) / (worldSize))),0],
					[worldSize+(15300/(("Altis" call BIS_fnc_mapSize) / (worldSize))),worldSize-(2500/(("Altis" call BIS_fnc_mapSize) / (worldSize))),0],
					LM_trimColor_RGBA
				]
			}];

			findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
				_this select 0 drawIcon [
					"\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa",
					[1,1,1,1],
					[(worldSize / 2),(worldSize)+(500/(("Altis" call BIS_fnc_mapSize) / (worldSize))),0],
					0,
					0,
					0,
					'"' + serverName + '"',
					1,
					(1.75 / (6.4 * worldSize / 8192 * ctrlMapScale ((findDisplay 12) displayCtrl 51)))/(("Altis" call BIS_fnc_mapSize) / (worldSize)),
					"PuristaBold",
					"center"
				]
			}];

			findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
				_this select 0 drawIcon [
					"\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa",
					LM_trimColor_RGBA,
					[(worldSize / 2),(worldSize)+(1500/(("Altis" call BIS_fnc_mapSize) / (worldSize))),0],
					0,
					0,
					0,
					'Server Name',
					1,
					(1.75 / (6.4 * worldSize / 8192 * ctrlMapScale ((findDisplay 12) displayCtrl 51)))/(("Altis" call BIS_fnc_mapSize) / (worldSize)),
					"PuristaBold",
					"center"
				]
			}];
			
			findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
				_this select 0 drawLine [
					[(worldSize/2)-(2000/(("Altis" call BIS_fnc_mapSize) / (worldSize))),(worldSize)+(1000/(("Altis" call BIS_fnc_mapSize) / (worldSize))),0],
					[(worldSize/2)+(2000/(("Altis" call BIS_fnc_mapSize) / (worldSize))),(worldSize)+(1000/(("Altis" call BIS_fnc_mapSize) / (worldSize))),0],
					LM_trimColor_RGBA
				]
			}];
			
			_isTalking = player setVariable ['_isTalking', true];
			(findDisplay 46) displayAddEventHandler ["KeyDown", {
					_isTalking = player getVariable '_isTalking';
					if(_isTalking) then {
						if ((getPlayerChannel player == 0) || (getPlayerChannel player == 1) || (getPlayerChannel player == 2) || (getPlayerChannel player == 3)) then {
							if ((_this select 1) == 58) then {
								playSound3D [selectRandom ["A3\Dubbing_Radio_F\sfx\in2a.ogg","A3\Dubbing_Radio_F\sfx\in2b.ogg","A3\Dubbing_Radio_F\sfx\in2c.ogg"], player, false, (position player), 2.5];
								player setVariable ['_isTalking', false];
							};
						};
					};
			}];
			
			(findDisplay 46) displayAddEventHandler ["KeyUp", {
					if ((_this select 1) == 58) then {
						if ((getPlayerChannel player == 0) || (getPlayerChannel player == 1) || (getPlayerChannel player == 2) || (getPlayerChannel player == 3)) then {
							playSound3D [selectRandom ["A3\Dubbing_Radio_F\sfx\out2a.ogg","A3\Dubbing_Radio_F\sfx\out2b.ogg","A3\Dubbing_Radio_F\sfx\out2c.ogg"], player, false, (position player), 1.5];
							player setVariable ['_isTalking', true];
						};
					};
			}];
			
			player setUnitTrait ["UAVHacker", true];
			player setUnitTrait ["explosiveSpecialist", true];
			player addEventHandler ["AnimStateChanged", { 
				params ["_unit", "_anim"];
				if ((_anim == "unconsciousrevivedefault") && (lifestate _unit == 'INCAPACITATED')) then {
					[_unit, 
						format["<t color='#00FF80'>Revive '%1'</t>", (((name _unit) splitString "'" joinString "") splitString '"' joinString '')], 
						"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_revive_ca.paa",  
						"\a3\ui_f\data\IGUI\Cfg\holdActions\holdAction_revive_ca.paa",  
						"(!isNull (getAssignedCuratorLogic _this)) && (_this distance2d _target < 3) && (lifestate _target == 'INCAPACITATED') && (animationState _target == 'unconsciousrevivedefault')",   
						"(!isNull (getAssignedCuratorLogic _caller)) && (_caller distance2d _target < 3) && (lifestate _target == 'INCAPACITATED') && (animationState _target == 'unconsciousrevivedefault')",   
						{ _caller playAction "medic" }, 
						{},
						{ 
							[[player, _target],{
								params ["_reviver", "_target"];
								_target setDamage 0;
								_target setUnconscious false;
								["#rev",1,_target] call BIS_fnc_reviveOnState;
								[format ["%1 revived %2", (((name _reviver) splitString "'" joinString "") splitString '"' joinString ''), (((name _target) splitString "'" joinString "") splitString '"' joinString '')]] remoteExec ["systemChat", 0];
							}] remoteExec ['spawn',_target];
						}, 
						{}, 
						[], 
						6, 
						10 
					] remoteExec ["BIS_fnc_holdActionAdd", 0, _unit];
				};
			}];
			
			player addMPEventHandler ["MPRespawn", { 
				_entity = player;
				[[_entity],{
					params ["_entity"];
					{
						_x addCuratorEditableObjects [[_entity],true];
					} foreach allCurators;
				}] remoteExec ["Spawn",2];
			}];
			
			(findDisplay 46) displayAddEventHandler ["KeyDown", {
				if (((_this select 1) == 57) and (_this select 3)) then {
					if ((isNull objectParent player) and !(incapacitatedState player == "UNCONSCIOUS") and (lifeState player == "HEALTHY") and (stance player == "STAND") and !(animationState player == "AovrPercMrunSrasWrflDf")) then {
						[player, "AovrPercMrunSrasWrflDf"] remoteExec ["switchMove",0,false];
					};
				};
			}];
			
			if ((player getVariable ["LM_keybindings_height_jumpBind", 2000]) == 2000) then {
				player setVariable ["LM_keybindings_height", ((player getVariable ["LM_keybindings_height", 2000])+2000)];
				player setVariable ["LM_keybindings_height_jumpBind", (player getVariable "LM_keybindings_height")];
				findDisplay 12 displayCtrl 51 ctrlAddEventHandler ["Draw", {
					_this select 0 drawIcon [
						"\A3\Ui_f\data\GUI\Cfg\UnitInsignia\TFAegis_ca.paa",
						[1,1,1,1],
						[worldSize+(500/(("Altis" call BIS_fnc_mapSize) / (worldSize))),worldSize-((player getVariable ["LM_keybindings_height_jumpBind",2000])/(("Altis" call BIS_fnc_mapSize) / (worldSize))),0],
						0,
						0,
						0,
						"• Press 'CTRL+SPACE' whilst upright to Jump",
						1,
						(1.75 / (6.4 * worldSize / 8192 * ctrlMapScale ((findDisplay 12) displayCtrl 51)))/(("Altis" call BIS_fnc_mapSize) / (worldSize)),
						"PuristaBold",
						"right"
					]
				}];
			};
		};
	}] remoteExec ['bis_fnc_call',0,"LM_JIP_aegisInit"];
	_display closeDisplay 1;
},{
	params ["_values","_args","_display"];
	_display closeDisplay 2;
},[]] call MAZ_EZM_fnc_createDialog;